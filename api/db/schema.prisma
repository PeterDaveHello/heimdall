datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                  String           @id @default(cuid())
  name                String?
  timezone            String
  handle              String           @unique
  email               String           @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  credentials         UserCredential[]
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  deletedAt           DateTime?
}

model UserCredential {
  id         String    @id
  userId     String
  user       User      @relation(fields: [userId], references: [id])
  publicKey  Bytes
  transports String?
  counter    BigInt
  deletedAt  DateTime?
}

model Newsletter {
  id        String   @id @default(cuid())
  handle    String   @unique
  name      String
  keyword   String
  locale    String
  region    String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model Subscription {
  id           String   @id @default(cuid())
  userId       String
  newsletterId String
  frequency    String
  time         String
  length       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  deletedAt    DateTime?
}

model Summary {
  id    String @id @default(cuid())
  title String

  // The link to the original content
  originLink   String
  originBody   String?
  originLocale String?

  // The link to the comment
  commentLink   String?
  commentLocale String?
  commentBody   String?

  // The link to the summary
  summaryLocale  String?
  summaryOrigin  String?
  summaryComment String?

  // Metadata
  points         Int? // Optional. For HN
  commentCount   Int? // Optional. For HN
  downloadMethod String?
  retryCount     Int     @default(0)

  // Default
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  @@unique([originLink, summaryLocale])
}

model NewsletterContent {
  // Where does the content belong to? If I have a link https://google.com/some-blog,
  // then is it from HN channel? Or is it from the user-defined newsletter?
  id           String   @id @default(cuid())
  newsletterId String
  summaryId    String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  deletedAt    DateTime?
}
