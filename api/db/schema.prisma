datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                  Int              @id @default(autoincrement())
  name                String?
  timezone            String
  handle              String           @unique
  email               String           @unique
  webAuthnChallenge   String?          @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  credentials         UserCredential[]
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  deleted             Boolean          @default(false)
}

model UserCredential {
  id         String  @id
  userId     Int
  user       User    @relation(fields: [userId], references: [id])
  publicKey  Bytes
  transports String?
  counter    BigInt
  deleted    Boolean @default(false)
}

model Newsletter {
  id        Int      @id @default(autoincrement())
  handle    String   @unique
  name      String
  keyword   String
  region    String
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)
}

model Subscription {
  id                  Int      @id @default(autoincrement())
  userId              Int
  curatedNewsletterId Int?
  newsletterId        Int?
  frequency           String
  time                String
  length              String
  locale              String
  active              Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  deleted             Boolean  @default(false)
}

model Summary {
  id             Int      @id @default(autoincrement())
  title          String
  origin         String
  originBody     String?
  originSummary  String?
  originLocale   String?
  commentLink    String?
  commentBody    String?
  commentSummary String?
  commentLocale  String?
  points         Int? // Optional. For HN
  commentCount   Int? // Optional. For HN
  downloadMethod String?
  retryCount     Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  deleted        Boolean  @default(false)
}

model NewsletterContent {
  // Where does the content belong to? If I have a link https://google.com/some-blog,
  // then is it from HN channel? Or is it from the user-defined newsletter?
  id           Int      @id @default(autoincrement())
  newsletterId Int
  summaryId    Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  deleted      Boolean  @default(false)
}
