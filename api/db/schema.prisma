datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                  Int       @id @default(autoincrement())
  displayName         String?
  username            String    @unique
  email               String    @unique
  loginToken          String
  loginTokenExpiresAt DateTime?
  isActive            Boolean   @default(false)
  timezone            String
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model Newsletter {
  id                     Int      @id @default(autoincrement())
  publicNewsletterHandle String   @unique
  newsletterName         String
  keyword                String
  targetRegion           String
  userId                 Int
  active                 Boolean  @default(false)
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
}

model Subscription {
  id                  Int      @id @default(autoincrement())
  userId              Int
  curatedNewsletterId Int?
  newsletterId        Int?
  frequency           String
  time                String
  length              String
  BCP47               String
  active              Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Content {
  id                  Int      @id @default(autoincrement())
  markdownContent     String?
  BCP47               String
  curatedNewsletterId Int?
  newsletterId        Int?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model ContentLinkSummary {
  id            Int      @id @default(autoincrement())
  contentId     Int
  linkSummaryId Int
  order         Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Outbox {
  contentSubscriptionId Int      @id @default(autoincrement())
  contentId             Int
  subscriptionId        Int
  status                String
  errorMessage          String?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

model LinkSummary {
  id             Int      @id @default(autoincrement())
  title          String
  linkUrl        String   @unique
  BCP47          String
  linkSummary    String?
  commentUrl     String?
  commentSummary String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  body           String?
  commentBody    String?
  downloadMethod String?
  retryCount     Int      @default(0)
}

model LinkSummaryTranslation {
  id             Int      @id @default(autoincrement())
  title          String
  linkSummaryId  Int
  linkSummary    String
  commentSummary String?
  BCP47          String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
