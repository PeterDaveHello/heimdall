[
  {
    "id": 36597460,
    "timestamp": 1688545939,
    "title": "Demoscene accepted as UNESCO cultural heritage in The Netherlands",
    "url": "http://demoscene-the-art-of-coding.net/2023/07/03/unescodemoscene-accepted-as-unesco-cultural-heritage-in-the-netherlands/",
    "hn_url": "http://news.ycombinator.com/item?id=36597460",
    "content": "Demoscene accepted as UNESCO cultural heritage in The NetherlandsArt of Coding Team on 3. July 2023Today the demoscene was accepted as Dutch national intangible cultural heritage.We very happy about the success of the Dutch demoscene to be accepted as a living national cultural heritage!The Dutch inscription is continuing the success story of the demoscene as first digital culture accepted by the UNESCO. Previously the demoscene became cultural heritage in Finland, Germany and Poland.Check out the official entry at the inventory (https://www.immaterieelerfgoed.nl/en/democene) and the safeguarding plan, which was the core of the application (http://demoscene-the-art-of-coding.net/wp-content/uploads/2023/07/Translated_Borgings_plan_Demoscene_EN_for_NL.pdf).Our congrats go to the whole Dutch community and specifically to \u2018RamonB5^dSr\u2019 aka Ramon de Bruijn, \u2018@zeno4ever\u2019 aka Dave Borghuis and \u2018havoc\u2019 aka Peter van Rijn, who were mainly responsible for submitting the application.The Dutch inscription will be a big push for other pending applications like in Switzerland. And also it\u2019s making a joint international application more likely.Stay tuned\u2026Category: generalPost navigationPrevious:Previous post:Unesco status helps aquiring budget for reach outOne Reply to \u201cDemoscene accepted as UNESCO cultural heritage in The Netherlands\u201dDemoscene wins UNESCO cultural heritage recognition in Netherlands - Today Trend News 6. JULY 2023 AT 8:59[\u2026] the line, but it\u2019s not the game that matters, it\u2019s what goes before it. The demoscene has been accepted as Dutch \u201cintangible cultural heritage\u201d by UNESCO [demoscene-the-art-of-coding.net, but you might need to hit archive.org as the site\u2019s down], [\u2026]Comments are closed.",
    "summary": "- The demoscene in The Netherlands has been accepted as Dutch national intangible cultural heritage by UNESCO.\n- This recognition adds to the success story of the demoscene as the first digital culture accepted by UNESCO.\n- The acceptance of the demoscene in The Netherlands may have positive implications for pending applications in other countries and may increase the likelihood of joint international applications.",
    "hn_title": "Demoscene accepted as UNESCO cultural heritage in The Netherlands",
    "original_title": "Demoscene accepted as UNESCO cultural heritage in The Netherlands",
    "score": 836,
    "hn_content": "- Demoscene, a form of coding that combines art and engineering, has been accepted as UNESCO cultural heritage in the Netherlands.\n- Demoscene has had a significant impact on coding and programming, inspiring programmers to push the limits of what is possible with limited resources.\n- The influence of demoscene can be seen in various industries, including game development and digital art.\n- The recognition of demoscene as cultural heritage solidifies its importance and contributes to its preservation and promotion.\n- The demoscene community continues to create impressive demos and push the boundaries of what can be achieved with code.- Gabber and its culture should be recognized as cultural heritage.\n- Hardcore music still has a significant influence in the rave scene.\n- Thunderdome celebrated its 30 year anniversary last year.\n- The \"The scene is dead\" meme is often used sarcastically.\n- There are dozens of high-quality demos released every year.\n- The average age of participants in the scene is rising.\n- The energy and evolution of the subculture are waning but nostalgia still remains.\n- Imphobia #13 release is highly anticipated.",
    "hn_summary": "- Demoscene, a combination of art and engineering coding, has been accepted as UNESCO cultural heritage in the Netherlands.\n- Demoscene has influenced coding and programming, inspiring programmers to push the boundaries of what is achievable with limited resources.\n- The recognition of demoscene as cultural heritage solidifies its importance, contributes to its preservation, and showcases its impact on various industries."
  },
  {
    "id": 36605912,
    "timestamp": 1688585695,
    "title": "Fast",
    "url": "https://patrickcollison.com/fast",
    "hn_url": "http://news.ycombinator.com/item?id=36605912",
    "content": "Patrick CollisonAboutAdviceBlogBookshelfCultureFastGrowthLabsLinksPeoplePollutionProgressQuestionsSV historyTravelWork Some examples of people quickly accomplishing ambitious things together.BankAmericard. Dee Hock was given 90 days to launch the BankAmericard card (which became the Visa card), starting from scratch. He did. In that period, he signed up more than 100,000 customers. Source: Electronic Value Exchange.P-80 Shooting Star. Kelly Johnson and his team designed and delivered the P-80 Shooting Star, the first jet fighter used by the USAF, in 143 days. Source: Skunk Works.Marinship. \"Shipyard construction was begun promptly after a telegram from the United States Maritime Commission was received by the W. A. Bechtel Company. The telegram was received on 2 March 1942, the Sausalito site selected on 3 March, and a proposal to build the shipyard presented in Washington DC was made on 9 March. Ten minutes into the presentation U. S. Maritime Commission administrators told the W.A. Bechtel Company to build the shipyard. Physical construction began on 28 March. Construction start was delayed two weeks to allow the 42 families living on Pine Point, which was scheduled to be demolished to build the shipyard, to move.\" The first ship was completed on September 15 of that year, 197 days after receiving the telegram. Source: Marinship on the Fast Track.The Spirit of St. Louis. In 1927, Donald Hall and Charles Lindbergh designed and built Spirit in 60 days. \"To determine the amount of fuel the plane would need, Lindbergh and Hall drove to the San Diego Public Library at 820 E St. Using a globe and a piece of string, Lindbergh estimated the distance from New York to Paris. It came out to 3,600 statute miles, which Hall calculated would require 400 gallons of gas.\" Source: Ryan Airlines gave Lindbergh wings.The Eiffel Tower. The Eiffel Tower was built in 2 years and 2 months; that is, in 793 days. When completed in 1889, it became the tallest building in the world, a record it held for more than 40 years. It cost about $40 million in 2019 dollars. Source: Eiffel's Tower.Treasure Island. In 1935, San Francisco decided to commemorate the completion of the Golden Gate and Bay Bridges by building a new island as a home for the Golden Gate International Exposition. Treasure Island, a 400 acre man-made island in the middle of the San Francisco Bay, was the result. Construction started in 1935 and was complete by March 1937. Source: San Francisco Fair: Treasure Island.Apollo 8. On August 9 1968, NASA decided that Apollo 8 should go to the moon. It launched on December 21 1968, 134 days later. Source: Apollo Spacecraft Chronology.The Alaska Highway. Starting in 1942, 1,700 miles of military roadway were built over the course of 234 days, connecting eastern British Columbia with Fairbanks, Alaska. Source: The Alaska Highway.Disneyland. Walt Disney's conception of \"The Happiest Place on Earth\" was brought to life in 366 days. Source: Under Construction: A look inside Walt Disney\u2019s Disneyland.The Empire State Building. Construction was started and finished in 410 days. Source: Empire State Building.The Berlin Airlift. On 24 June 1948, the Soviet Union initiated a blockade of Berlin. Two days later, the Berlin Airlift commenced. Over the following 463 days, the US, the UK, and France flew 277,000 flights with 300 aircraft to deliver the supplies required to support 2.2 million Berlin residents. On average, a supply aircraft landed every 2 minutes for 14 months. As part of this effort, Tegel airport was built. Planning started in July 1948; construction started August 5 1948; the first landing took place November 5 1948 (92 days after construction started); the official opening of the airport took place December 5 1948. Source: The Candy Bombers.The Pentagon. The construction of the world's largest office building was led by Brehon Somervell. The decision to proceed with the project was made on a Thursday evening. Initial drawings were completed that Sunday. Construction started two months later, on September 11 1941, and was finished on January 15 1943, 491 days later. When asked when something was needed, Somervell's go-to response was \"the day before yesterday\". Source: The Pentagon.Boeing 747. Boeing decided to start the 747 program in March 1966. The first 747 was completed on September 30 1968, about 930 days later. Source: Boeing 747: A History.The New York Subway. The first contract was awarded on February 21 1900. 28 stations opened and general operation commenced on October 27 1904, 4.7 years later. In April 2000, the MTA decided to build the Second Avenue Subway. The first phase, with 3 stations, opened on January 1 2017. Source: The New York Times.TGV. On April 30 1976, the French government approved a plan to build a high-speed rail link between Paris and Lyon, the first high-speed rail line in Europe. This line was to use completely new electric locomotives, also to be developed in France as part of the project. The ensuing line opened on September 26 1981, 1,975 days later. On September 24 1996, the California High-Speed Rail Authority was formed. The completion of the first phase of California's high-speed rail project, a line connecting San Francisco and Anaheim, is currently estimated to happen in 2033, 37 years (i.e. around 13,000 days) after the authority was formed. Source: On the Fast Track.USS Nautilus. The US decided to build the world's first nuclear submarine in July 1951. It entered service on September 30 1954, 1,173 days later. Source: Cold War Submarines.JavaScript. Brendan Eich implemented the first prototype for JavaScript in 10 days, in May 1995. It shipped in beta in September of that year. Source: Brendan Eich's history of the language.Unix. Ken Thompson wrote the first version in three weeks. Source: UNIX: A History and a Memoir.Xerox Alto. Work on the Xerox Alto, the first GUI-oriented computer, started in November 1972 because of a bet: \"Chuck said that a futuristic computer could be done 'in three months' and a Xerox exec bet him a case of wine that it couldn\u2019t be done\". Building the Alto required extensive hardware, operating system, and application design and implementation. The first complete Altos were introduced on March 1 1973. Source: Alan Kay.Shenzhen. In one year, between 1998 and 1999, Shenzhen added 1 million residents (a 22% increase), growing from 4.4 million to 5.4 million people. Source: PopulationStat.iPod. Tony Fadell was hired to create the iPod in late January 2001. Steve Jobs greenlit the project in March 2001. They hired a contract manufacturer in April 2001, announced the product in October 2001, and shipped the first production iPod to customers in November 2001, around 290 days after getting started. Source: Tony Fadell.Amazon Prime. Amazon started to implement the first version of Amazon Prime in late 2004 and announced it on February 2 2005, six weeks later. Source: The making of Amazon Prime.Git. Linus Torvalds started working on Git on April 3 2005. It was self-hosting 4 days later. On April 20 2005, 17 days after work commenced, Linux 2.6.12-rc3 was publicly released with Git. Source: LKML.COVID-19 vaccines. On January 10 2020, the SARS-CoV-2 genome was published. 3 days later, Moderna finalized the sequence for mRNA-1273, its mRNA vaccine candidate; the first batch was manufactured on February 7. On February 24 (45 days after genome publication), Moderna shipped the first batch of mRNA-1273 to the NIH for use in their Phase 1 clinical study. 266 days of clinical trials and regulatory coordination followed. On November 16, Moderna announced that the vaccine's efficacy was 94.5%. Source: linked materials. Note: the BioNTech vaccine was produced on a similarly impressive timeline but I haven't yet tracked down sufficiently granular information about its development\u2014pointers appreciated.San Francisco proposed a new bus lane on Van Ness in 2001. It opened in 2022, yielding a project duration of around 7,600 days. \u201cThe project has been delayed due to an increase of wet weather since the project started,\u201d said Paul Rose, a San Francisco Municipal Transportation Agency spokesperson. The project cost $346 million, i.e. $110,000 per meter. The Alaska Highway, mentioned above, constructed across remote tundra, cost $793 per meter in 2019 dollars.Please send me more entries. (Preferably with sources.)What's going on?The physical infrastructure projects enumerated above occurred before 1970 to a disproportionate degree. Why? Some works containing hypotheses:Marc Dunkelman investigated why Penn Station renovation efforts have repeatedly failed.Alon Levy points out that not only has construction slowed but so too has actual operation.Lynne Sagalyn wrote a book about why redeveloping Ground Zero took so long. Ed Glaeser, reviewing it for the Times, writes \"her \u00adstory teaches us how and why America has changed since 1931, when the Port Authority of New York and New Jersey could build the George Washington Bridge \u2014 the world\u2019s longest suspension bridge at the time \u2014 in 49 months.\"Herbert Kaufman wrote a book about red tape; the foreword from Philip Howard includes the claim that the nature of bureaucratic constrictions in the US changed in the 60s.Howard also wrote a report entitled Two Years Not Ten Years: Redesigning Infrastructure Approvals, diving deeper on this topic. George Will wrote a column about it.In American Government: Brief Version, the authors contrast an \"Old System\" and a \"New System\" of American government; they, too, argue that something significant changed in the 60s.Mancur Olson argued that stable societies naturally tend to become less dynamic and more beholden to special interest groups with time. Empirical support for the claim is mixed. Synthesizing some themes above, Francis Fukuyama argued that interest groups have now made the US a \"vetocracy\".",
    "summary": "- This post highlights examples of fast and ambitious accomplishments in various fields, showcasing the power of human ingenuity and collaboration.\n- It emphasizes that many of these remarkable achievements took place before 1970, raising the question of why similar projects today face delays and bureaucratic hurdles.\n- The post offers possible explanations such as changes in governance, bureaucratic red tape, and the influence of interest groups, providing readers with valuable insights into the challenges of modern infrastructure projects.",
    "hn_title": "Fast",
    "original_title": "Fast",
    "score": 769,
    "hn_content": "- The development of the iPod from idea to customer delivery in just 290 days is an impressive example of fast project execution.\n- The speed at which JavaScript was implemented by Brendan Eich in just 10 days is remarkable, considering its impact on web development today.\n- It's important to note that many fast projects build upon prior research and development, such as the case of mRNA COVID vaccines benefiting from years of prior work.\n- Large tech companies can face challenges in maintaining speed and agility due to internal bureaucracy and the competing interests of different teams and individuals.\n- Autocratic systems, like the one seen in China, have a reputation for accomplishing ambitious projects quickly, but they also come with their own drawbacks and controversies.\n- The success of a fast project doesn't guarantee long-term success or lack of issues, as seen in examples like Theranos and the challenges faced by the Apollo program.\n- The examples provided highlight the need for finding a balance between speed and efficiency, while considering factors such as safety, social impact, and environmental sustainability.\n- The context and background of projects, including prior work, collaboration, and decision-making, are important factors to consider when evaluating their speed and outcomes.\n- The dynamics of large organizations, including tech companies, can sometimes hinder the speed of innovation and execution due to factors like credit-seeking and bureaucratic processes.\n- It's essential to recognize that even fast projects may face criticisms or challenges, and the focus should be on continuous improvement and learning from past experiences.- The post discusses several examples of projects that were completed quickly, such as the construction of the Eiffel Tower, the development of JavaScript, and the creation of the Apollo 8 mission to the moon.\n- Many of these projects were able to move quickly because they had a clear goal and a unified team working towards it.\n- The post also highlights the importance of preparation and groundwork in achieving fast results.\n- It notes that while fast projects can be impressive, there are often consequences and trade-offs that need to be considered.\n- The examples in the post span different time periods and industries, demonstrating that fast projects can occur in various contexts.\n- The readers of this post may find it interesting to see how some of these projects were completed quickly and what factors contributed to their success.",
    "hn_summary": "- The post discusses examples of fast projects, such as the development of the iPod and JavaScript implementation, highlighting the impressive speed of execution.\n- It emphasizes the importance of prior research and collaboration in achieving fast results, using the example of mRNA COVID vaccines.\n- The post acknowledges that fast projects may face challenges and consequences, emphasizing the need for finding a balance between speed and efficiency."
  },
  {
    "id": 36605493,
    "timestamp": 1688584003,
    "title": "Show HN: Hacker News user blogroll",
    "url": "https://dm.hn",
    "hn_url": "http://news.ycombinator.com/item?id=36605493",
    "content": "\ud83d\udd16 Hacker News BlogrollThis blogroll is based on revskill's Ask HN thread Could you share your personal blog here?I'm backlogging all the site's suggestions from the HN thread, but if you want to send more ideas or comments you can write to nelson@hernandez.idGo to a random blog! Show102550100entriesSearch:USERNAME HN KARMA DESCRIPTION HYPERLINK0d0a 5 Reverse engineering, debugging, and some silly contraptions. https://nevesnunes.github.io/blog/0gdd 2 My blog, lists, notes... Really anything I want to share. Quality is meh, content is random, i love it. https://0xfab1.net0xbro 1 Ey, here's my blog => https://0xbro.red :)I blog (and make videos) about what surrounds AppSec, ethical hacking, penetration testing, CTFs, and other various cybersecurity stuff. I also plan to do vulnerability research and responsible disclosures in the future, but only time will tell. You are welcome to my web space! https://0xbro.red0xferruccio 719 https://ferrucc.io11mariom 7 DevOps, Cloud related topics mostly. Sometimes some guides / howtos, sometimes my thoughts around technologies I use. Started this year, few posts already there. I wanted to post on weekly basis, but well ;) It's my 3rd or even 4th attempt at blogging. Previously I was writing in Polish so I didn't bother keeping archive, also the break was pretty long and everything got really outdated already.Latest: Traefik Ingress Integration with SSO - 2023-06-30https://blog.mariom.pl/  feed4926394057 6 There aren\u00e2\u0080\u0099t many articles on there at the moment, as I tend to get imposter syndrome part way through writing and never finish, but I have a couple in the works that I\u00e2\u0080\u0099d like to post soon. https://ides.dev/notes/80x25 73 Posts about the Web and the software that powers it. Light on content right now but will hopefully change that soon. https://www.mcnulty.blog/8organicbits 2105 I keep it tech focused, my personal life is elsewhere. I like doing deep dives into topics, especially where I don't know what I'll find. I usually start with \"writing as thinking\" and then edit most of it away to get something readable. https://alexsci.com/blog/98codes 732 Content going back ages, mostly died out when blogging did -- with social media slowly dying, I'm hoping the overall tread will reverse. https://98.codes___kaukas___ 3 I write about programming and Ruby, with passion. Not often enough.Latest: An Idiomatic Ruby Interview - 2022-07-28https://kaukas.mataroa.blog  feed__david__ 6366Latest: Fixing Element Search - 2023-06-19https://porkrind.org/missives/  feed__lambda__ 10Latest: Do I really know about assignment operation? - 2023-06-30https://medium.com/@0xmatriksh  feed_ache_ 94 Mine is https://ache.oneI don't write a lot. Mostly in French. But the web site have a lot of features. - Static - Multilingual - Integrated performant Kudo system - RSS feed And a bunch of things like side notes, dark-theme, zen mode, etc. I seem to enjoy to improve the blog more than to write blog posts.Latest: Les bizarreries du langage C - 2018-11-18https://ache.one  feed_benj 1384 I started this not too long ago, mostly write about stuff that I\u00e2\u0080\u0099m exploring at the moment, i.e. I\u00e2\u0080\u0099m currently writing a quick post about making simple GUIs with Tcl/Tk, which turns out is way simpler and more fun that what I expected :)Latest: The Adventures of Writing a CHIP8 Emulator - Part 1 - 2023-06-04https://benjcal.space/  feed_han 432 https://www.hankruiger.com/posts/_jsdw 27 Personal blog/homepage for just over 10 years, coding related things, custom design, mostly static pages using Zola. https://jsdw.me_peeley 342 Mostly technical stuff, some non-technical stuff. I'm currently (indefinitely?) writing a series of posts documenting all the stuff I'm working on in my homelab, which has been fun. https://blog.janissary.xyz_zeta 8 I talk about application security and other stuff (common pitfalls from working on the field, career advices etc). I have yet to migrate the content from my old blog, but a new post will be released soon\u00e2\u0084\u00a2. An introduction is available here: https://appsec.space/posts/long-time-no-see/Latest: Security Theatre? More like Security Circus - 2023-02-13https://appsec.space  feeda-a-ron_b 1 I can\u00e2\u0080\u0099t always say my posts are great, but I try to stay consistent with posting at least twice a month. I find it to be a great way to organize my thoughts and learnings. https://aaronbos.dev/a1o 165 I write seldomly but my interests vary around game development and random software things I make or accomplish. https://ericonotes.blogspot.com/a5hd 1 , small blog where i post about frontend issues/blog posts https://a5h.devaareet 104 I write amateur poetry and post it to my blog above :) https://www.aareet.com/poetry/aarroyoc 772Latest: \u00bfQu\u00e9 necesita tener un buen protector de pantalla de m\u00f3vil? - 2023-06-14https://blog.adrianistan.eu  feedaastronaut 97 I should write more.Latest: Cool Bugs VS Shitty Bugs, Part 1: Cool Bugs - 2022-04-10https://blog.whilenot.dev  feedabareplace 8 C and assembly language programming under Win32Latest: Beware of Unverified TLS Certificates in PHP & Python - 2019-06-29https://www.strchr.com/  feedabathur 1427 Dare we ask why? :)https://t-ravis.com/room/post/Latest: modular bash profile scripting with shellswain - 2023-01-24https://t-ravis.com/room/post/  feedabc3 101 For the past 2.5 years, I've published summaries of each month as it ends, so on 2023-06-30, I published a summary of June 2023. Each post has the following:- Narrative Introduction; - Podcasts reviews (each review is 25 words or fewer); - Nerdy Software (25 words or fewer on a piece of software I like); - Bougie Products (25 words or fewer on a product I like); - Personal Finance and Investing (advice in 25 words or fewer); - Reading (each review is 25 words or fewer); - A List. The name of my blog comes from a quote that inspires me: \"In music, as in everything, the disappearing moment of experience is the firmest reality.\" (Benjamin Boretz) It's hosted on Buttondown: https://newsletter.disappearingmoment.com/archive Posts that don't fit my monthly format are hosted on Sourcehut (via Hugo): https://disappearingmoment.com/ My favorite post is about getting to know a song that a friend recommended: https://disappearingmoment.com/exposure-loss-jacqueline/ https://newsletter.disappearingmoment.com/archiveabdulapopoola 3 This blog presents leadership methodologies for high-impact outcomes. Each post typically describes a challenge, hard-learned lessons, and the reusable framework to use. Areas include building high-performing teams, setting direction, creating an engineering culture, identifying high-leverage interventions, and more. It aims to help engineering leaders accelerate their growth while supporting their teams to reach their highest potential.Latest: The complicated parts of leadership: Eliminate chaos - 2023-06-20https://abdulapopoola.com/  feedabhi9u 216 I just started 2 months back. Here it is: https://codeconfessions.substack.com/Here are some of my posts which have been well received: - https://codeconfessions.substack.com/p/creating-chatgpt-plug... : It takes you through a tutorial showing how to use the function call feature to build your own ChatGPT with plugins - https://codeconfessions.substack.com/p/exploring-deepminds-a... - This explains the results of the AlphaDev paper from DeepMind - https://codeconfessions.substack.com/p/mojo-the-future-of-ai... - This gives an introduction to the Mojo programming language - https://codeconfessions.substack.com/p/will-ai-replace-progr... - This one is my personal take on whether programming jobs are in danger becaue of AI or not.Latest: Code Confessions Digest #4: News, and Resources from Last Week - 2023-07-04https://codeconfessions.substack.com/  feedabound 37 I lived in a box truck for six years while working at Google and chronicled my thoughts and experiences and shenanigans. Still not sure what I'll do with the blog going forward, my current life being significantly less novel. https://frominsidethebox.comacaloiar 877 I mostly write about tech topics and write howtos, usually for my own future reference. However I also write about being a \"digital nomad\" living in an RV, and sometimes that converges with tech, e.g. (https://adriano.fyi/posts/2023/2023-04-16-att-traffic-shapin...) and sometimes even mountain biking (https://adriano.fyi/posts/2023/2023-06-12-mountain-biking-ha...). It scratches a personal itch, and covering any topic I want allows me to do that.Latest: Making static Hugo sites dynamic with htmx and Go - 2023-07-04https://adriano.fyi  feedacconrad 7686 A lot of it is around engineering management best practices but there are some more philosophical and personal bits sprinkled here and there. It has hit HN a few times but I\u00e2\u0080\u0099ll admit I have no analytics on it so I don\u00e2\u0080\u0099t really know how many readers I have beyond my newsletter subscribers.Latest: Behavioral interviews - 2022-03-29https://www.adamconrad.dev  feedacutesoftware 245 Very low frequency updates mainly about information management and data. Most popular article was \"What software will you trust when you get senile?\" - https://www.lifepim.com/blog/5856_What_software_will_you_tru... https://www.lifepim.com/blogAdamCraven 215 Alignment between people and technology, mostly. Much aggregated from my other site (https://principles.dev). - https://principles.dev/blog/first-principles-thinking-a-visu... - post with 3d graphics - https://principles.dev/blog/where-are-all-the-software-carto... - one that took the longest to write - https://principles.dev/p/relatedness-pattern/ - A principleLatest: Evolving '5 Whys' root cause analysis methods with the 'Many Whys' - 2023-05-12https://adamcraven.com/writing/  feedAddono 86 Just covering general tech things which excite me, often quite hands on to solve some niche problem :) https://www.aknapen.nl/blogAdilZtn 31 I write sometimes about machine learning https://boring-guy.sh/adityaathalye 381 It is my space to \"think in public\". The motto is \"Writing = Thinking\". Pet topics include functional programming, systems thinking, emacs, bash, clojure, organisation design etc. It is my second time writing publicly. This is how it began: https://evalapply.org/posts/hello-world It is made using my static site maker (written in Bash :), which I \"Show HN\"'d some time ago: https://news.ycombinator.com/item?id=34486596Latest: Emerging from dotemacs bankruptcy the hard way: init begins - 2023-07-04https://evalapply.org/posts  feedadminu 379 Not regularly blogging but from time to time: https://ph-uhl.com https://ph-uhl.comadrianhon 1400 Writing about games and technology, with the occasional sci-fi short story and politics thrown in. https://adrianhon.substack.com I play a newish game every week and talk about its mechanics, game design, and what makes it interesting.Latest: Corporate Emotional Misdirection - 2023-06-25https://mssv.net  feedadrianmsmith 2761 Software, Coding, Databases, etc. I've been writing the blog for about 20 years now. - Full article list: https://www.databasesandlife.com/newest/ - List of categories (Java, PostgreSQL, etc.): https://www.databasesandlife.com/categories/ Started life on uboot.com (does anyone remember that?) then migrated to WordPress, and now Hugo. The only articles which really get any hits any more are those where I've specifically solved problems I was having, i.e. posts which are similar to Stack Overflow answers. I guess people search for the error messages and find my articles, so that's search working as intended I guess. If I write anything else e.g. my thoughts on software development, it's still a useful exercise to focus the mind, and I can send the article to a few mates and they might read it, but that's it, no hits from Google etc. Back in the days of Google Reader I used to have some readers via RSS, and I used to follow a number of interesting blogs from various individuals I'd found. Those were nice times, but I guess they're over.Latest: Send message with an \"ordering key\" to GCP Pub/Sub via \"Spring Integration\" - 2023-02-07https://www.databasesandlife.com/  feedadrianwaj 1810 Life Contextualized. - Sep '18 to present. 1100+ posts. Thorough taxonomy. Wordpress. 46 plugins. automobile, artist, colorization, crystal, culture, enlightenment, fashion, generative, graffiti, haute couture, idea, judaism, kundalini, lyric, mashup, memoir, music, off-grid, photo, rainbow, regal, startup, storytelling, travel, twilight http://future-secured.comaeze 167 Just random musings, I've been picking up speed recently. https://orochena.net/blogagallant 112 Haven't had the chance to write for awhile, but been wanting to get back to it. In addition to normal static site stuff it has webmentions/pingbacks, comments, and (probably now broken) interoperability with Twitter (likes would show up as webmentions) - overall it was a fun excuse to figure out IndieWeb stuff (https://gallant.dev/posts/a-blog-reborn/ is where I explain that).Latest: The Blurring of the Public Square and the Megaphone - 2022-12-25https://gallant.dev  feedAgentlien 2315 A selection of fun tidbits from my work, focused on graphics programming and performance. It's largely written in a slightly less technical detail so I can share it with friends and family. There's still two things I want to write from Wavetale (rendering and optimisation of the water), but those are more ambitious and technical, so I haven't gotten around to it, yet. https://agentlien.github.ioagentultra 9536 I haven't updated in a long while! I'll get around to it at some point.. https://agentultra.comagilob 2481Latest: Przeprowadzka do Polski - 2021-07-13https://b.agilob.net/  feedahalbert 15 My blog: https://ahalbert.com/I just got back to public writing, but I like to share summaries of the books I read. My most recent post is the secret history of cold war submarine espionage: https://ahalbert.com/reviews/2023/07/01/blind_mans_bluff.htm... This recently was featured on hacker news's front page: https://ahalbert.com/reviews/2023/06/04/the_culture_map.html https://ahalbert.com/ahnooie 0 Technology (mostly homelab), Finance, and the Christian Worldview.Latest: Engineering WordPress for 10,000 Visitors per Second - 2023-06-17https://b3n.org/  feedahstilde 689 YC founder talking to other YC founders https://www.aakash.io/aidog 139 I write on https://idogawa.devRuby, Raspberry Pi, AI, Japan, Switzerland https://idogawa.devAissen 13645 HN really liked this article: Awk driven IoT https://anisse.astier.eu/awk-driven-iot.html But there many others that could be interesting: Making a Twitter bot that looks for hashes https://anisse.astier.eu/making-a-twitter-bot-that-looks-for... SIGSEGv1 qualification CTF https://anisse.astier.eu/qual-sigsegv1-rtfm.html Bash, so long and thanks for all the fish https://anisse.astier.eu/bash-to-fish.html Playing with ARM servers in a pre-Ampere era https://anisse.astier.eu/distro-kernel-scaleway-arm.html How remote work pushes you towards engineering best practices https://anisse.astier.eu/embedded-software-maturity.html How I traded my first software project: https://anisse.astier.eu/gmail-binary-clock-rust.html Winning r2wars 2019 https://anisse.astier.eu/r2wars-2019.html And of course my ongoing Game Gear emulator in Rust series: https://anisse.astier.eu/talks-emulation.html https://anisse.astier.eu/gears-update-2023-01.html https://anisse.astier.eu/gears-update-2023-02.html https://anisse.astier.eu/gears-update-2023-03.html https://anisse.astier.euajxs 2306 I think I'm a little late, but my personal blog is https://ajxs.me/ So far, I've mostly written about my hobby of reverse-engineering vintage synthesisers. I'm currently writing more 'general' tech articles. https://ajxs.me/akalin 1883 I write very infrequently, but my favorite posts are: - Why is the Quintic Unsolvable? - https://www.akalin.com/quintic-unsolvability - A Gentle Introduction to Erasure Codes - https://www.akalin.com/intro-erasure-codes https://akalin.com  feedakdas 752 A few of my posts on dynamic programming got a fair bit of traction here on HN. I haven't posted in a while, but after a busy few years, I have some posts lined up. I want to reflect on some teaching I did (one big reason I didn't have time to blog), as well as document me getting a new home server set up (this time with containers, finally).Latest: \u201cIt\u2019s not peaches and cream either for men\u201d - 2021-11-29https://avikdas.com  feedakhenakh 42 I blog about software development, GIS Geospatial, Hamradio, Go, gRPC ... https://blog.nobugware.comakkartik 12809 Since 2012 I have a one-track mind. I want a world with: * hundreds of software products for any need (mostly check) * that can all be easily modified by hundreds of thousands of people, * creating tens of thousands of forks, * publishing thousands of forks * used by millions of people. Wake up sheeple! Add more resilience to your software tools! I joined Mastodon in 2018, the Tildeverse in 2020, Lemmy in 2022, Calckey in 2023. Monopolies won't break themselves, each of us has to be willing to think different, try out new things.Latest: Using computers more freely and safely - 2023-05-23http://akkartik.name  feedakleemans 19 Personal blog focussed on tech things I find interesting. Some of them involve building small tools (like a swiss ID checksum generator) or illustrating certain algorithms (like the 4 color theorem).Latest: 3D printing a missing puzzle game part - 2023-05-22https://www.kleemans.ch  feedakrain 127 My blog about a few treks in the Indian Himalayas http://overthehills.in/ http://overthehills.in/alanbernstein 2412 Math, coding, tinkering. http://blog.alanbernstein.net/alanpearce 55 I really want to write more often, I'm not sure if it's that I don't know what to write about or that the idea of blogging doesn't come to mind easily when I'm doing things that I could blog about. https://alanpearce.eualexmolas 1054 I write about math, machine learning, data analysis, and some opinions about different topics. https://alexmolas.comalexwlchan 53 I passed 400 posts a month or so ago; been writing for about a decade. It's a mix of programming, arty stuff, digital preservation, personal thoughts \u00e2\u0080\u0093 the first link describes the sort of writing I do, and examples of each. Some favourites: * https://alexwlchan.net/2022/screenshots/ \u00e2\u0080\u0093 You should take more screenshots, a perennial darling of HN * https://alexwlchan.net/2022/marquee-rocket/ \u00e2\u0080\u0093 Launching a rocket in the worst possible way, aka abusing the <marquee> tag * https://alexwlchan.net/2022/bure-valley/ \u00e2\u0080\u0093 A day out at the Bure Valley Railway, trains! * https://alexwlchan.net/2022/snapped-elastic/ \u00e2\u0080\u0093 Finding a tricky bug in Elasticsearch 8.4.2, the sort of deep-dive debugging I don\u00e2\u0080\u0099t do often enough (And a fairly basic post about prime factorisation with Python has been on the HN front page several times, for reasons I do not understand at all)Latest: Turning off ECS tasks overnight using an EventBridge Schedule - 2023-07-03https://alexwlchan.net/writing/  feedalfiedotwtf 3456 Like a lot of tech blogs, it's been neglected for a while https://www.alfie.wtfalin23 3879 Incredible how many personal blogs are out there. I love using RSS, but how would I go about finding these sources based on things I like?Feels like there should be a Spotify for reading, with \u00e2\u0080\u009cplaylists\u00e2\u0080\u009d of articles cherry picked from blogs, and simple Discover Weekly recommendations. Anyway, I\u00e2\u0080\u0099ll leave mine as well (mostly reverse engineering macOS related): https://alinpanaitiu.com/ https://notes.alinpanaitiu.com/ \u00e2\u0080\u00a6and I\u00e2\u0080\u0099ll probably use the quality data on this thread to build that service I feel should already exist.Latest: Reverse engineering the MacBook clamshell mode - 2023-01-17https://alinpanaitiu.com/  feedallenleein 6979 startup, venture capital, programmingLatest: Avoid Hype-Driven VCs - 2023-05-13https://blog.allen0s.com/  feedalphydan 1121 A few articles about physics, finance and software with some poetry sprinkled in. https://alvarofeito.com/alxexperience 27 I don't write nearly as much as I would like to, but I'm trying to get back into the swing of things. I write about videogames and am hoping to write more tech stuff in the futureLatest: On Mirror's Edge - 2023-04-05https://www.silicononyx.com  feedamadeuspagel 6701 Media Theory, Window Managers, UI, random gripes about tech companiesLatest: Dark and light mode are not symmetrical - 2023-07-03https://amadeuspagel.com  feedamenghra 3022 ~100 posts over 15+ years. I don't update it often anymore, but I still do have those inevitable drafts I never got around to publish. https://quaxio.com/amerine 1030 no posts in like a decade. It\u00e2\u0080\u0099s embarrassingLatest: Goodbye Bend - 2012-03-24http://amerine.net  feedamha 138 http://www.andrusia.comanandchowdhary 235 has 10+ years of my words and work. https://anandchowdhary.comanardil 25 D&D, tech, and scuba diving! https://anardil.net  feedandersource 1050 Small & random :) https://andersource.dev  feedandreabergia 127 Blogging about programming languages and technology I find interesting... when I have the time and the energy for it, which sadly isn't that often.Latest: Error handling patterns - 2023-05-01https://andreabergia.com  feedandreasklinger 3126 usually write stuff down that i keep repeating in discussions - eg management advice: https://klinger.io/posts/managing-people-%F0%9F%A4%AF - eg my angel-investment decision making process: https://klinger.io/posts/how-i-make-investment-decisions - eg simple productivity-hack: https://klinger.io/posts/q-codesLatest: Everyone is doing 1on1s wrong. I think. - 2023-06-14https://klinger.io/  feedandreicek 24 Elixir, Ecto, SQL, and a bit of devops notes and ideas. There is a more personal section that will contain random ideas and observations. https://0x7f.dev/andrestc 61 Mostly about Go and OS stuff but haven't updated in a while. http://andrestc.comLatest: Go's Memory Allocator - Overview - 2018-09-03http://andrestc.com  feedandrew_shay 7 Blog and digital garden, but I don't write much https://andrewshay.me/Latest: Transmitic: Encrypted p2p file transfer and sharing. Built with Rust. - 2022-08-09https://andrewshay.me/  feedandrewhayterr 1 https://andrewhayter.com/AndrewKemendo 17652 More broadly though https://kemendo.com as I put my most important thoughts on the front page https://kemendo.com/blog/blog-home.htmlAndrewStephens 2544 Random projects (one or two have made it to HN before) but mainly just musings on book or films or places I have been. First started in 2006! HN readers will probably be most interested in my computer related posts: https://sheep.horse/tagcloud.html#computingLatest: No Updates plus Flying Swans - 2022-01-26https://sheep.horse/  feedandy99 246 (general purpose personal website that's mostly a blog) http://marble.onl/andyjohnson0 13451 Posts are randomly distributed in topic/time space.Latest: SLotD: Change - 2023-05-25https://andyjohnson.uk/blog  feedanfractuosity 1049 Not sure if my site https://www.anfractuosity.com/projects/ counts as a blog or not, as the posts aren't chronologically ordered (except in RSS).Silly posts include visual cryptography keyrings, turning a b&w monitor colour and listening to fermentation bubbles.Latest: Cryptokeyring - 2022-06-24https://www.anfractuosity.com/projects/  feedanimesh371g 87 Technical concepts, distributed systems explained in simple words - https://engineeringatscale.substack.com/ https://medium.com/@animeshgaitondeLatest: The Reliability Revolution: Idempotent APIs and the Future of Distributed Computing - 2023-07-04https://engineeringatscale.substack.com/  feedanimuchan 150 (Not a high-effort publication like many other links here, just some notes.) https://mvasilkov.animuchan.net/ankitag9 2 Recently started writing regularly. Have decided to focus on technical nuances and programming mental models learned the hard way, things I wish I knew in college or early career. https://ankitag9.substack.com/p/startup-prerequisites-part-1 - About my learning from running my startup for 5 years. https://ankitag9.substack.com/p/perspective-newsletter-3 - The latest one I wrote on LLMs https://ankitag9.substack.com/p/what-is-in-the-box-ask-airpo... - About the breakthrough brought in by Airpods. https://ankitag9.substack.com/p/our-shopping-problem - Thinking about TAMLatest: Perspective Newsletter # 3 - 2023-06-19https://ankitag9.substack.com/  feedanton_ai 25 I write mostly about AI and how to train deep learning models. https://antonai.blog/aodin 307 I mostly write about Python, Django, and SQL, but occasionally do some basic statistical and GIS work. https://aaronoellis.comaoms 208 write about coding, DevOps, etcLatest: Mastering Python's Advanced Features: Empowering Technical Programmers - 2023-07-06https://andrewodendaal.com  feedaor215 7 I write personal essays and articles about code. https://alexrichey.com/aostiles 1 Just started writing about programming. First post was about implementing WebAuthn. https://aostil.esapike 1413 I\u00e2\u0080\u0099ve been writing monthly for 10 years, and otherwise for 20. Topics have ranged from product development to leadership to breakfast cereal selection techniques. https://allenpike.com/  feedapwheele 131 Currently data scientist, PhD in social science, just a nerd journal for stuff I am working on.Latest: Youtube interview with Manny San Pedro on Crime Analysis and Data Science - 2023-07-02https://andrewpwheeler.com/  feedarikrak 1242 Had a few blogs before, started one recently on AI: https://ageofai.substack.com/* Overview of ML: https://ageofai.substack.com/p/how-does-machine-learning-wor... * On AI & writing - https://ageofai.substack.com/p/writing-originality-and-ai * Today's post on chess: https://ageofai.substack.com/p/playing-chess-llms-and-actual... ---Latest: Can LLMs Improve Like AlphaZero? - 2023-07-06https://ageofai.substack.com/  feedarmas 1 I'm still early in my career, but I think this is the start of something great! https://alejandroarmas.github.io https://alejandroarmas.github.ioarnorhs 1759 At this point if it's mostly really outdated stuff, I keep making plans to write moreLatest: Heartbreak - Why gatsby.js failed - 2023-02-01https://arnorhs.dev  feedArtgor 31 I write about Data Science and my interests (like language learning). Recently most of my posts are dedicated to reviewing deep learning papers. https://andlukyane.com/blog/Arubis 4045 Mostly the-consulting-side-of-technical-consulting posts. When I'm on a roll I post every weekday, but it's been a bit while dealing with symptomatic PTSD on my end. Hoping to get back to it within a couple months.Latest: Don't decide who you need until you've determined what you need - 2023-05-05https://dylanfitzgerald.net/  feedShowing 1 to 100 of 1,308 entriesPrevious12345\u202614Next",
    "summary": "- This post is about a \"Hacker News Blogroll\" that includes a collection of personal blogs shared by Hacker News users.\n- The blogroll includes a wide range of topics, such as reverse engineering, cybersecurity, devops, cloud computing, programming, and more.\n- The blogs are written by individuals who are experts in their respective fields and provide valuable insights and knowledge related to technology and software engineering.",
    "hn_title": "Show HN: Hacker News user blogroll",
    "original_title": "Show HN: Hacker News user blogroll",
    "score": 744,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginShow HN: Hacker News user blogroll (dm.hn)744 points by deathbypenguin 14 hours ago | hide | past | favorite | 167 commentsI saw this [0] pretty cool thread by user revskill, and wanted a quicker way to search through it, but also to keep them all in one place so I can read them at my leisure whenever I get time.Right now is like 60 lines of Ruby using Nokogiri, but I will certainly look into it further down the line and improve the list.There's a cronjob checking the thread every 12 hours but I will eventually shut that down and it will become static after that.There are some really awesome blogs in there. I really recommend going through the list, it made my day.[0] \"Could you share your personal blog here\". https://news.ycombinator.com/item?id=36575081stoyko 5 minutes ago | next [\u2013]I saved that original link in the hopes of going through it but this is much better. But this is much better. Saving this instead.replyvoigt 8 minutes ago | prev | next [\u2013]Having the latest post of each blog available is an awesome, thank you for adding it.Another killer feature on top would be to sort for latest post, so they can be ordered by date desc. This would make a great HN-meta news page :)replyminebreaker 5 hours ago | prev | next [\u2013]Just an idea. Wouldn't it be great to have a standard format for a user profile for automated discovery?Something like: Any random string. [age]: xx [location]: xxx # city or country or geohash or whatever [email]: foo@xxx.com # can be obfuscated [blog]: https://xxx I use the format! # magic tag to indicate you are following to the standardreplyflurdy 9 minutes ago | parent | next [\u2013]I wouldn't but age in there. Not for PII reasons but I doubt I would remember to update it every year... My own website I changed to just say what decade my age is to give me some leeway.Good idea though will change mine now.The profile is used by other things as well such as keybase verification etc.replyicepopo 56 minutes ago | parent | prev | next [\u2013]Maybe something like json-ld schema? https://schema.org/Personreplyhonzabe 4 hours ago | prev | next [\u2013]Lately, I feel like I am overwhelmed by content, and yet it is increasingly rare to find something authentic, something that is not either made just as a vehicle for advertising or designed to attract attention and likes on social media.I was re-reading The Royal Road to Romance by Richard Halliburton recently. I love that book and if he lived today, he would be a travel blogger... so I tried to find a blog that would feel like that. And google search gives me more travel blogs than I can absorb, but they all feel like products.I haven't had the time to go through blogs by HNers carefully yet but I hope there might be some gems in that pile. HN attracts a certain kind of people and if blogs written by them differ from the rest of the internet the same way HN itself, that would be great.I like this idea very much. Thank you, the author of that original thread, and thank you, the creator of https://dm.hnreplysafety1st 2 hours ago | parent | next [\u2013]Just reviewing what I've got added to my feed reader:* tilde.news* Lobsters* Slashdot* lemmy.sdf.org* the linux sub on lemmy.ml* A selection of the less annoying subreddits, like r/askphilosophy* A selection of local news websites for where I live* A selection of blogs written by random people who I think are interesting* Hackaday* indieretronews.com* Hacker Public Radio* HN of course* And other random stuff. And dm.hn is probably going to be amazing when I have some time to comb through itIn the event that none of it's interesting, I pop open a Gemini client and just start clicking around, I always find the most random long ramblings. The Lagrange client in particular is a very refreshing reading/browsing experience.Internet content has never been better and I don't feel overwhelmed by inauthentic stuff at all, I know that there's a lot of it out there, but it rarely reaches my eyeballs, mainly through the now-decaying morass that is Reddit sometimes.Mind you it took me years to come up with the list of feeds I like and it's very personal to my interests, but it's always just been a text file that I edit so it was easy.replykmarc 3 hours ago | parent | prev | next [\u2013]that's why I find it refreshing to read... Books. As opposed to blogs. My feed reader now has easily a thousand unread entries, because I'm also overwhelmed with their nature of \"vehicle for advertising\"* (sometimes advertising just themselves)Books are authored, proof-read, and since you already paid for it, chances are lower to find this advertising feel tothe.* I love this expression!replyhonzabe 2 hours ago | root | parent | next [\u2013]Absolutely - I've been rediscovering books lately. Although it is hard - the years of interneting did a number on my attention span and habits.I used to be a voracious reader when I was a kid. That book I mentioned - the Royal Road to Romance - I remember how smitten I was by that book when I was 14. Now it felt really slow (compared to YouTube shorts) and I had trouble getting into it. But once I did, the sparks of the old excitement appeared again. Completely different feeling than after 2 hours of YouTube shorts.Books are great but I am sure that there is a lot of content on the internet written because someone genuinely wanted to say something (and BTW, not that books written as products are that rare either). It's just harder and harder to find it.replyrevskill 4 hours ago | parent | prev | next [\u2013]My general idea on asking this question, is how to answer the questions:- How to add comments to my blog post ? => Just add a link to your blog post here.- How to upvote on a blog / blog article ? => Just use HN.- How to aggregate for facilitate search/categorization ? => There's a site here. Because Google Search sucked so hard now.- In case of LLM feeding, you own your own policies and privacy on your own data.Thanks you for joining.replyamadeuspagel 14 hours ago | prev | next [\u2013]The latest posts from these blogs: https://webloglist.com/hnreplyrambambram 13 hours ago | parent | next [\u2013]Nice list! I was almost going to ask you if you have an OPML file with all the feeds, but then I decided to check the list manually for interesting latest posts and grab only their feeds. Thanks for the list!replyaddandsubtract 12 hours ago | parent | prev | next [\u2013]Now we just need ChatGPT to read them all and give us a daily update on the interesting ones.replyjakebasile 14 hours ago | parent | prev | next [\u2013]That's cool! Did you pull RSS from all the sites you could and use that to aggregate it?replyamadeuspagel 14 hours ago | root | parent | next [\u2013]Yes, webloglist uses RSS autodiscovery.replydarekkay 12 hours ago | root | parent | next [\u2013]It seems the autodiscovery didn't work for my blog (link in profile). I've posted something 2 days ago but it doesn't appear on your site. My feed is on the list from JSTucker, who also used some sort of autodiscovery.replyamadeuspagel 11 hours ago | root | parent | next [\u2013]Atom isn't supported yet. Working on it.EDIT: Atom is supported now, but I haven't updated the list yet.replyfreediver 4 hours ago | parent | prev | next [\u2013]Any chance for an RSS of this?replytlavoie 3 hours ago | root | parent | next [\u2013]Sort of a meta-feed, for those with feeds of their own?replysurprisetalk 5 hours ago | prev | next [\u2013]I just made something similar!https://blogs.hnreplyyogsototh 1 hour ago | parent | next [\u2013]This is pretty nice, but for my blog I noticed the latest article are wrong. Check yannesposito.comreplysurprisetalk 16 minutes ago | root | parent | next [\u2013]It looks like the description I pulled from your site was \"Most recent articles\", which I think made things confusing haha <meta name=\"description\" content=\"Most recent articles\">If you look at fetch.js in the repo, it just pulls the top posts from Algolia search.replyzrkrlc 5 hours ago | prev | next [\u2013]Probably better to sort by karma by default though, otherwise it's alphabetical privilege all over again lol https://eric.ed.gov/?id=EJ905588replyhonzabe 4 hours ago | parent | next [\u2013]I think you are right (although I now wish I had not abandoned my old account). However, I have always felt that karma systems are too biased towards old users who had more time to accumulate karma. If only the karma system had some \"aging\" of results built in, like the tennis ranking system.And I am only partially saying that because I have a new account here.replybredren 2 hours ago | root | parent | next [\u2013]It looks like the tennis ATP ranking mostly drops rank points 52 weeks after they are gained.HN karma is not publicly associated with dated posts, (I think only the account holder can see that)But account creation date and total karma are public, so some derivation is possible.Something like:ranking_periods = number of 52 week spans in HN account lifetimeavg_k_per_rp = Accumulated (total) Karma / RPLiving Karma = AK - avg_k * RPCurious if this makes sense / there are better ways to do it w public info.If the private info were avail, it could drop karma from archive link comments, etc.replyNadya 5 hours ago | prev | next [\u2013]I'm in the middle of making it easier for me to write so that I'll actually write more. :) so there's only 1 really old post currently.https://nadyanay.me/blogThe subject matter I have planned is more on retro/small web projects and a store for well researched posts where I'm sick of having to find studies over and over to cite as sources. Easier to quote myself than write the same post for the 50th time.replyjefftk 13 hours ago | prev | next [\u2013]Neat! It looks like something is broken with unicode handling? For example the \"smart\" apostrophe in https://news.ycombinator.com/item?id=36594375 (U+2019, RIGHT SINGLE QUOTATION MARK) is being rendered as \"\u00e2\u0080\". Perhaps something is interpreiting utf-8 as latin1?replydeathbypenguin 13 hours ago | parent | next [\u2013]Indeed. I'm having a fight with that at the moment and the line breaks as well.replysillysaurusx 8 hours ago | root | parent | next [\u2013]Actually, I recognize that specific breakage (a-box), as I\u2019ve had to deal with it in my game engine. The problem is that something is interpreting each byte of a utf-8 encoded string as a separate character. That\u2019s why some bytes show up as \u00e1 and others are boxes \u2014 \u00e1 is one of the few non-English characters that\u2019s still valid ascii (single byte characters).The fix is to tell your framework to decode in utf-8 mode. I don\u2019t use ruby, but in python it\u2019s mode=\u2018utf-8\u2019. In C++ it\u2019s to convert to wstring, then operate on wchar_t.Unicode problems are mysterious, but I find it quite gratifying to solve them. At least nowadays. I used to find them incredibly annoying. But it\u2019s pretty cool seeing any language be rendered by your app.replyjmmv 10 hours ago | prev | next [\u2013]Nice!Any way we can update the description? For my case, what I sent to the original thread doesn't necessarily describe the blog :)Also, a suggestion: a raw list of usernames like this, sorted alphabetically, can lead to gamification where people choose names that rank first to ensure they show up on the first page. In the past, when showing similar lists, I've implemented randomization so that no one person has an advantage.replysen 5 hours ago | parent | next [\u2013]Whenever I've done lists like this, I make the first-load randomise but give the user options to reorder the list in various ways (alphabetical asc/desc, latest activity, etc). I think that's the best way to stop too-blatant gamification.replyvoigt 13 hours ago | prev | next [\u2013]I\u2019m missing the good old time of webrings. This is very close :)replyPartiallyTyped 13 hours ago | parent | next [\u2013]You may be interested in [1], it\u2019s run by a few friends of mine. Hopefully it won\u2019t get hugged to death.[1] https://32bit.cafereplyksec 5 hours ago | prev | next [\u2013]Off Topic : I just checked the .HN domain and it is 100 EURO per year.replyrovr138 5 hours ago | parent | next [\u2013]For anyone else curious,https://en.wikipedia.org/wiki/.hnhttps://nic.hn/It\u2019s the TLD for Honduras.replyRomanHauksson 5 hours ago | parent | prev | next [\u2013]I used to own roman.hn since my last initials are H-N, but I switched to roman.computer after I dropped my second last name (it's hyphenated).Technically you can't own an Honduran domain name if you're some rando American like me, but you can use a registrar like Njalla, which legally owns it for you but lets you control it.replyghoomketu 13 hours ago | prev | next [\u2013]Looks great and congrats on shipping. If it were up to me I'd still be deliberating the best framework and design to use for this, and how I can pipe the comments through chatgpt to extract the category, keywords and do things that make it the best blogroll ever.And then I would have just thought it's too much work for nothing and that'd be the end of it :PreplyHrundi 10 hours ago | parent | next [\u2013]Analysis paralysis is very cruel. Many of my side projects died because of this, or just got stuck in development hell, even while interest was high.Looking back, some would have made good money if I had just released themreplydeathbypenguin 12 hours ago | parent | prev | next [\u2013]haha I had the exact same ideas, but then I was \"bah! I'll put it out there and I'll add functionality over time\"replyswyx 11 hours ago | root | parent | next [\u2013]did you just have the .hn TLD standing by? where is that from? must have cost a pretty pennyreplydeathbypenguin 10 hours ago | root | parent | next [\u2013]it was parked for a year... I'm supposed to renew next week. 100US/year :)replyswyx 6 hours ago | root | parent | next [\u2013]how much did it take to buy? i just checked on namecheap for the one i want and they wanted 5k for it to start\u2026 :/replydeathbypenguin 5 hours ago | root | parent | next [\u2013]I bought it for like 100US on iwantmyname... maybe check over there...replyswyx 4 hours ago | root | parent | next [\u2013]thank you!!replyalpark3 10 hours ago | root | parent | prev | next [\u2013]Hondurasreplywillhackett 10 hours ago | parent | prev | next [\u2013]Live updating would be awesome. This could probably be done with a Cloudflare Worker, D1 (in Alpha, but still cool) and a Cron.Remix.run is a brilliant framework for running React on Workers.replywey-gu 10 hours ago | parent | prev | next [\u2013]This is totally me :preplymyth2018 12 hours ago | parent | prev | next [\u2013]Dude I can definitely relatereplylandgenoot 1 hour ago | prev | next [\u2013]Cool! Now I have to add my RSS feed to the <HEAD>, just like we did in the Firefox 3.0 era with a dedicated RSS-button.replyabathur 11 hours ago | prev | next [\u2013]Hmm. Any idea why some wouldn't show up? I posted in https://news.ycombinator.com/item?id=36588940 but don't see it in the list.replytoyg 11 hours ago | parent | next [\u2013]Same for me. Maybe the scraper choked on pagination, maybe they just took a snapshot before we posted.replyabathur 9 hours ago | parent | prev | next [\u2013]Ah. Mine is up, now, though the entry shows some sort of parse break, maybe around newlines.Sorry for being and edge case :)replysmokel 14 hours ago | prev | next [\u2013]Great work, thank you for sharing this.I would prefer to see the entire list, so that I can easily search for keywords in the browser. Apparently, all data is available on the client side, but the table renderer seems to limit the table size to at most 100 entries.replyryan-duve 14 hours ago | parent | next [\u2013]A workaround while you're waiting for this to be supported by OP is to go to inspector and change the last dropdown option to  <option value=\"10000\">10000</option>then select it in the UI.replyMichaelMoser123 3 hours ago | prev | next [\u2013]I guess twitter and reddit are charging money for API access, so scraping of good old blogs will become more important for the training those LLM models. I am not sure if i want to be part of this show.Well, I guess that HN is also mined extensively for your our utterances, resistance is futile.replyjcnoel 10 hours ago | prev | next [\u2013]Wow, mine made it. Now I really need to keep the sucker up to date. Thanks.replyepiccoleman 8 hours ago | parent | next [\u2013]Heh, I'm having the same feeling.replydo-me 13 hours ago | prev | next [\u2013]That's awesome and so much more practical than scrolling through HN. It would also be possible to integrate semantic search so people don't necessarily need to know the keywords. If you're interested, feel free to ping me or take a look at https://github.com/do-me/SemanticFinder. In case I could just create a pre-indexed version based on your data dump which would be quite convenient to use.replymsteffen 6 hours ago | prev | next [\u2013]I\u2019m at https://prog.blog. I only have a few posts (sort of meta-software-engineering-focused. The posts are on, like, \u201cwhy does programming always take longer than you think?\u201d and \u201chow do you make decisions while working on a project\u201d). I have more at the draft stage that I\u2019m hoping to publish soon!replydeathbypenguin 12 hours ago | prev | next [\u2013]Added feeds thanks to JSTucker. They are being fetched from the Gist. I think the cron ran, so there are more blogs now.json: https://dm.hn/blogroll.json (I'll add the feed to each item in a minute)replyghomem 13 hours ago | prev | next [\u2013]Clap clap clap. This is excellent public service @deathbypenguim. Yesterday I was scrolling through that enormous thread and using control+F to look for keywords of interest on the posted blog descriptions. Now it will be much easier to follow fellow bloggers. Thanks for having my blog on your list too.replyngshiheng 4 hours ago | prev | next [\u2013]love the simplicity and UI, gonna add to my bookmark nowedit: spending more time on the site, i kinda wish the sites are tagged. from the original thread there was a site that someone wrote about <plants> which i find pretty cool. if i get \"get a random blog\" from the tags i like, that might be more relevant. i understand that this is going to be a difficult ask since you're largely dealing with unstructured data herereplyre 14 hours ago | prev | next [\u2013]This made me think of \"planets\", which I feel had a heyday back in the late 2000s before Reddit and social media took over everything. Anyone want to take all the blogs with RSS/Atom feeds and build an HN planet? :)> In online media a planet is a feed aggregator application designed to collect posts from the weblogs of members of an internet community and display them on a single pagehttps://en.wikipedia.org/wiki/Planet_(software)replyploum 13 hours ago | parent | next [\u2013]Yeah, planet were awesome. I\u2019m proud to say that my blog was both on planet.gnome (the original one) and planet.ubuntu.Now, I feed that the most interesting planet is planet.debian, which offers lot of variety without being focused on Debian.The great feature I liked was that Planet were not about a given project. It was about the people contributing to the project. Their life. Their interests.At some point, lot of planets started to ask only \"on-topic\" posts with a specific RSS feeds. Those planets became boring as it was mainly stuffs you could find on forum or any tech related websites.replytenkabuto 12 hours ago | root | parent | next [\u2013]Yes! I've loved Planet Python[0] because it really lets you see that the Python community is quite varied, fun, and human.[0]: https://planetpython.orgreplyamadeuspagel 13 hours ago | parent | prev | next [\u2013]Here you go: https://webloglist.com/hnreplysusam 13 hours ago | parent | prev | next [\u2013]I still follow a few planets. For example:https://planet.lisp.org/https://planet.emacslife.com/replysoegaard 11 hours ago | parent | prev | next [\u2013]https://planet.scheme.org/replyleejoramo 14 hours ago | prev | next [\u2013]This is great. An OPML version of this would be great to bulk IMPORT the RSS/ATOM feeds into your favorite feed reading app.replyJSTucker 13 hours ago | parent | next [\u2013]I've scraped what I could from the list and exported and opml here: https://gist.github.com/Josh-Tucker/030b8cba6557927a27f1c7e6...replytommy_axle 12 hours ago | root | parent | next [\u2013]A feed is now added to https://codeinsider.dev (https://codeinsider.dev/rss.xml)replyJSTucker 12 hours ago | root | parent | next [\u2013]Have added your feed to the listreplydeathbypenguin 12 hours ago | root | parent | prev | next [\u2013]Thanks man, it's been added: https://dm.hn/blogroll.json and next to each entry.replyrambambram 13 hours ago | parent | prev | next [\u2013]Indeed! But I guess not every blog has a feed, or there's no quick way of letting people add one to the list after the fact.replyprepend 13 hours ago | root | parent | next [\u2013]I expect that every blog has an rss or atom feed. It would be strange for someone to go to the effort of writing a blog and not setting up a feed. That and most blogs have feeds automatically.That being said, any blog that doesn\u2019t have a feed and has some proprietary subscription is not one I want to subscribe to. So not including feedless blogs is a positive for me.replythomasahle 10 hours ago | prev | next [\u2013]Has anyone done statistics on what generators / platforms people use? I currently use a mix / roll my own, but I'd love recommendations for a good setup.In particular the features I'm after are: (1) Latex support for equations, (2) Support for code snippets, (3) Support for my own custom D3 or other javascript widgets.replyepiccoleman 8 hours ago | parent | next [\u2013]I rolled my own for my current blog (at epiccoleman.com). I wrote a post about it, which honestly isn't that interesting, since it basically just amounts to writing posts in regular old html.I did use Tailwind for styling, mostly because I was interested in learning more about it.I use PrismJS for styling code blocks, and it works very well. No complaints there.The thing I like about \"just use HTML\" is that it ultimately affords a ton of flexibility if I ever want to embed some interesting layout or little JavaScript demo. A good example of this is this explainer section from a post I wrote about SVG. I'm proud of how this turned out and it wouldn't have been possible to make it look as good as it does without just manually writing the markup (scroll to \"Understanding SVG\", I don't think I put an anchor on the heading unfortunately):https://epiccoleman.com/posts/2023-04-05-svg-circle-of-fifth...I have another post about the \"tech stack\" here if you're interested: https://epiccoleman.com/posts/2023-03-07-how-i-built-this-si...replysteve_adams_86 9 hours ago | parent | prev | next [\u2013]You and I want the same thing! I\u2019m sad to say I haven\u2019t found that yet. I\u2019ve been considering rolling my own but I feel like so many similar things exist, there must be something out there already\u2026One thing I did start building is sort of like a rudimentary code sandbox that\u2019s geared towards running code inline to to explain concepts. I tried using existing solutions, but none really do what I\u2019m thinking of. What might be ideal is something like observable.hq with the code and results visible. I\u2019d like to show the DOM, console, or even both, along with the supporting code.Anyway, that\u2019s a while off because it\u2019s not trivial. Sometimes I\u2019m surprised there isn\u2019t something obviously suitable for this and I must be missing something, but everything I\u2019ve found so far really misses the mark.One thing that kills me is that I want these widgets to live as long as my writing does. So many 3rd party tools could be gone next week; I can\u2019t waste time throwing examples in there if it\u2019ll just wind up MIA without warning.replykomali2 6 hours ago | parent | prev | next [\u2013]Honestly I've found that if all I want is text, images, latex, code snippets, and maybe a tiny bit of javascript, then Hugo or maybe Jekyll with static deploys to some normal ass webserver is the most consistently easy and maintainable. Beyond that just straight up HTML files.I've had too many blog services close on me, too many frameworks go stale and require inordinate amounts of time to update, too many deploy strategies deprecate some aspect I depended on, to want to go through all that for whatever bells and whistles I get for doing the extra effort.My blog is just hugo https://github.com/komali2/blogand my co-op's blog is just a folder of html files in our website directory lol https://github.com/508-dev/508.dev/tree/main/src/blogreplysyx 14 hours ago | prev | next [\u2013]I would add a shuffle button that opens a random blog so it\u2019s nicer to discover something new compared to endless paginations.replysurprisetalk 12 minutes ago | parent | next [\u2013]I recently made a similar site that does exactly this :)https://blogs.hnreplysplitbrain 14 hours ago | parent | prev | next [\u2013]That's what https://indieblog.page was made forreplyscastiel 14 hours ago | parent | prev | next [\u2013]+1I would even add a \u201cI\u2019m feeling lucky\u201d button, to redirect to a random blog ;)replydeathbypenguin 13 hours ago | parent | prev | next [\u2013]Random blog button up now.replyalonsonic 13 hours ago | root | parent | next [\u2013]Love this, have been reading random blogs for the last 30minuts alreadyreplydeathbypenguin 14 hours ago | parent | prev | next [\u2013]Noted. I will be correcting a few bits and adding new functionality over the next few days/weekend.replydanieldk 4 hours ago | root | parent | next [\u2013]I missed the original topic. I\u2019m not a very active blogger, but I am an active HNer. Any chance you could add my blog?https://danieldk.eu/blog/Nice work!replyJSTucker 13 hours ago | prev | next [\u2013]Heres an OPML with all the feeds I could detect from the list! https://gist.github.com/Josh-Tucker/030b8cba6557927a27f1c7e6...replymjgs 8 hours ago | parent | next [\u2013]Thanks - I\u2019m currently importing the whole list into Feedly, which I\u2019ll probably regret. The user experience is so hilariously bad compared to social medias, and I\u2019m finding it funny that today Meta has released their new threads app.Anyway currently over 500 new uncategorised feeds have appeared. I\u2019ve seen some German, Vietnamese and Russian blog posts, it\u2019s total mayhem.LolUpdate: total feeds imported 692, loads and loads of errorsreplyqudat 7 hours ago | parent | prev | next [\u2013]For anyone that wants to receive emails for feed updates you can use https://feeds.shreplyswyx 11 hours ago | parent | prev | next [\u2013]if you share the code for OPML conversion maybe OP could incorporate it quicklyreplyloumf 8 hours ago | prev | next [\u2013]Is there a way to change my feed. You picked up my podcast feed, not the blog one.It should be https://loufranco.com/feedreplyWoodenChair 12 hours ago | prev | next [\u2013]Unfortunately I made a typo in writing my URL (should be https://observationalhazard.com/ not https://obervationalhazard.com/) and this has no way to update it.replyarthurcolle 10 hours ago | prev | next [\u2013]Can you add a \"show all\" option? And a CSV download? This is a great datasetreplydeathbypenguin 5 hours ago | parent | next [\u2013]Done!replysusam 14 hours ago | prev | next [\u2013]Very interesting! Thanks for sharing your project here. Out of curiosity, I did some searches with some interesting strings. At the time of posting this comment, here is what the search results look like:Vim: 8 entriesEmacs: 7 entriesPython: 24 entriesRust: 24 entriesLisp: 5 entriesClojure: 3 entriesHaskell: 5 entriesZig: 5 entriesElixir: 4 entriesScheme: 0 entriesPostgres: 4 entriesMySQL: 0 entriesSQLite: 3 entriesJekyll: 9 entriesHTML: 40 entriesMarkdown: 6 entriesLaTeX: 1 entryHugo: 12 entriesNext.js / Nextjs: 4 entriesGatsby: 2 entriesPelican: 0 entries.com: 495 entries.dev: 90 entries.net: 84 entries.io: 82 entries.me: 53 entries.org: 43 entries.xyz: 15 entries.page: 6 entriesgithub.io: 46 entriesmedium.com: 18 entriesblogspot.com: 8 entrieswordpress.com: 4 entrieslivejournal.com: 0 entriestech: 178 entriesprogramming: 66 entriesrandom: 61 entriesthought: 49 entriesmath: 16 entriesmusing: 12 entriesblag: 1 entryfavorite: 28 entriesfavourite: 9 entriesNow all of these results are string search results, so there is always going to be a little bit of noise when we try to draw conclusions out of these results. For example, the results for \".dev\" also contains results that look like \"*dev*.com\".Despite the noise, I found these results interesting. I remember in the early days when the blogosphere was being constructed 20 km above the tag clouds, it was very fashionable to have blogs for random musings or random thoughts. So I am delighted to see that most blogs out here are tech blogs. Surprisingly there is only blag. I expected at least a few more.One of the Lisp entries is mine. Also, one of the Vim entries is mine. It is a bit ironical because I am actually an Emacs user. If I had known the comments we write on HN would become part of the search string in this blogroll, I might have chosen my words in my comment to the \"Ask HN\" port more judiciously! :)replyboricj 13 hours ago | parent | next [\u2013]reverse engineering: 5 entriesGhidra: 1 entry (mine)On one hand it does bring some level of perspective on the popularity of a particular topic you're into. My first reaction was \"Just 0.5% for reverse-engineering? I guess I'm down in a deep dark rabbit hole...\"On the other hand, I haven't seen the blogs of Ken Shirriff, Alex Ionescu or Raymond Chen on that list, which I know are quite popular and regularly make it to the Hacker News front page.replysaagarjha 2 hours ago | root | parent | next [\u2013]Presumably this would require them to show up on Hacker News and advertise their blog.replyOliveMate 9 hours ago | prev | next [\u2013]Thanks for this! It'll make finding everything posted in that thread much easier, and the random blog button has already sent me down a few rabbit holes (even if I don't understand half of them!).replyoneeyedpigeon 11 hours ago | prev | next [\u2013]It's great. Is there any real point in sorting on description or url? I guess url does group http and https, which might be useful, but description definitely seems like it would be nicer if the sort option were removed.replyLordDragonfang 13 hours ago | prev | next [\u2013]Since hn karma probably correlates to how much hn readers would enjoy a blog, I'd love a column/columns that includes the user's:  - hn profile karma  - total karma of posts from that domain  - as above, but Sum(log(post_karma[i]))...or something similar.Whatever is feasible. For a while I've wanted a list of \"blogs/domains that hn likes\" that isn't polluted by general-high-traffic domains.replydeathbypenguin 10 hours ago | parent | next [\u2013]I feel i'm going to open source this so people can add their own functionality. I will need to refactor first since I just hacked this together rather quickly.replyploum 13 hours ago | parent | prev | next [\u2013]That\u2019s an awesome idea, I would be really curious to see the result.(hoping that this does not backfire, for example encouraging people to spam HN with their own posts to gain some karma on the blogroll)replyLordDragonfang 13 hours ago | root | parent | next [\u2013]To address the exact situation in your parenthetical, I considered putting Sum(log(post_karma[i]-k)), for a k such that the expected log value is negative unless you get enough upvotes.replydeathbypenguin 5 hours ago | parent | prev | next [\u2013]Karma is there for now to sort by... I'll see about the rest later on.replysamsquire 13 hours ago | prev | next [\u2013]Thanks for creating this. I will use this to go through people's blogs.I think my blog/journals hasn't been picked up yethttps://news.ycombinator.com/item?id=36588927My blog is on GitHub, how do you parse the URLs?replydeathbypenguin 13 hours ago | parent | next [\u2013]It should show in a few hours when the cronjob triggers. Parsing: nokogirireplyakiselev 14 hours ago | prev | next [\u2013]Our future AI overlords sincerely thank you for this pristine data set.replyTimCTRL 14 hours ago | prev | next [\u2013]Saw the .hn domain and I was like What...HN has its own TLD. Then i searched google and saw it belongs to honduras...daft me i guess..replymcmcmc 14 hours ago | parent | next [\u2013]All two-letter TLDs are country codes.replyTimCTRL 13 hours ago | root | parent | next [\u2013]Thanks!replyairstrike 9 hours ago | parent | prev | next [\u2013]hah, had to Cmd+F for this comment because I also :O'dreplyversion_five 11 hours ago | prev | next [\u2013]Can you say what criteria you used to filter the thread into valid blogs?replyvictorbjorklund 13 hours ago | prev | next [\u2013]Would be cool to make an RSS feed that combined all the RSS feeds from all the blogs.replyamadeuspagel 12 hours ago | parent | next [\u2013]Here's an HTML feed: https://webloglist.com/hnreplykodah 10 hours ago | prev | next [\u2013]Instead of making it static could you implement a submission process and liveliness checker? This seems like a really cool way to share content with each other.replydeathbypenguin 10 hours ago | parent | next [\u2013]Good one. Added to the backlog.replysublinear 5 hours ago | prev | next [\u2013]Sounds a little too close to \"bog roll\".replykiruio 14 hours ago | prev | next [\u2013]Cool, I forgot to add descriptions. Would be nice if I could fix itreplyAissen 13 hours ago | prev | next [\u2013]It's very nice, thanks ! It would be nice if descriptions had new lines; some aren't readable, while they work quite well on HN.replydeathbypenguin 13 hours ago | parent | next [\u2013]I'm on it.replykaetemi 10 hours ago | prev | next [\u2013]Anyone building a search engine?reply1attice 13 hours ago | prev | next [\u2013]Naked self-promotion here, but I was late to the party on the original blogroll -- is there any way to add blogs post-ex-facto? Is there a submission mechanism?replyslushh 4 hours ago | parent | next [\u2013]>There's a cronjob checking the thread every 12 hours but I will eventually shut that down and it will become static after that.Which post-ex-facto? You should still be able to add your blog to the original submission.replyscarface_74 7 hours ago | parent | prev | next [\u2013]You could make it so you have to have your blog in your HN profile and have a karma of at least $x to reduce spam.replyeigenhombre 13 hours ago | parent | prev | next [\u2013]Same, I think this is a great idea and would like to submit mine as well -- maybe an \"add\" feature on the page would make sense, or re-inquire here at intervals, maybe monthly/yearly?replyTOGoS 13 hours ago | parent | prev | next [\u2013]I commented, but mine got missed, somehow. Maybe because my phone auto-capitalized the \"H\" in \"http\" and the script didn't account for funny capitalization. Sad!reply1attice 11 hours ago | root | parent | next [\u2013]I did too, but I didn't include the protocol, just the bare domain :/FWIW it's https://lizmars.netreplyTOGoS 10 hours ago | root | parent | next [\u2013]And for the record, mine is http://www.nuke24.net/plog/ :)replynickstinemates 9 hours ago | prev | next [\u2013]Thanks for making this! It is great to see what people are writing about.replyb8 11 hours ago | prev | next [\u2013]Hmm, my blog wasn't added. Maybe when the data was scraped I hadn't posted it yet?replydeathbypenguin 11 hours ago | parent | next [\u2013]It will be picked up in a few hours.replyI-M-S 13 hours ago | prev | next [\u2013]Can we do this for HN users' podcasts?replyswyx 11 hours ago | parent | next [\u2013]shameless plug for my pod: https://www.latent.space/podcastreplycloverich 5 hours ago | root | parent | next [\u2013]This is a great podcast; discovered it a few weeks back and have listened to a few now. I especially like that it doesn't devolve into just chatting, but actually covers technical topics and gets into some of the nitty gritty.replyswyx 4 hours ago | root | parent | next [\u2013]thanks very much!replybrentcetinich 9 hours ago | prev | next [\u2013]The latest post seems to show the oldest post sometimesreplyguy98238710 10 hours ago | prev | next [\u2013]Needs sorting by last post date and a way to add new blogs.replytenkabuto 12 hours ago | prev | next [\u2013]These threads make me wish that I had a blog, not just a regular website. :(replynelsonfigueroa 12 hours ago | parent | next [\u2013]I took at look at your website and it seems like you could easily add blog posts to it!replytenkabuto 11 hours ago | root | parent | next [\u2013]Hah, thanks. I've been hoping to do so, but still haven't gotten around to it. There's some quirks with the static site generator that I use[0] that lead me to keep postponing setting up blog-ish features, and I don't know enough python to fix them.[0]: https://github.com/gordonbrander/lettersmith_pyreplynelsonfigueroa 11 hours ago | root | parent | next [\u2013]If you ever want to try a new static site generator, I use Hugo[0] to generate my site. There's a lot of pre-built themes[1] you can use. Most (if not all) have blogging functionality built in, all you need to do is drop in a Markdown file with your content. You may need to learn a little bit if Golang if you want to customize themes. Just throwing it out there as an option.[0]: https://gohugo.io/[1]: https://themes.gohugo.io/replytenkabuto 11 hours ago | root | parent | next [\u2013]Thanks! In writing out my reply to you I realized that I should look into other generators (specifically looking into Hugo, as I think I've seen it used by people like myself who take notes in Obsidian). The key features I want are backlinks support and blogging features, along with Markdown support.replyNiloCK 8 hours ago | root | parent | prev | next [\u2013]Not having a convenient and current publishing path shouldn't stop you from writing. Start your drafts folder!replylevysoft 14 hours ago | prev | next [\u2013]I can't believe you had the same idea and necessity but you preceded me. Good job!replyMoncefmd 14 hours ago | prev | next [\u2013]This is great! Would've been cool to also be able to sort by votes though.replypetercammeraat 14 hours ago | prev | next [\u2013]Brilliant. Easy to use as filter for subjects (if people described their blog)replylangsoul-com 8 hours ago | prev | next [\u2013]This is mega awesome, nice work!replyjakebasile 14 hours ago | prev | next [\u2013]Look ma, I'm in an HN link! This is pretty neat.replyjoseferben 13 hours ago | prev | next [\u2013]Thanks for putting this together, love the name!replydblack12705 7 hours ago | prev | next [\u2013]Damn this is coolreplytotallywrong 9 hours ago | prev | next [\u2013]That's cool thanks.replyzdwolfe 12 hours ago | prev | next [\u2013]Looks cool, thanks for making this.replysome_furry 10 hours ago | prev | next [\u2013]Interestingly, my comment appears to be omitted from your scraper results.https://news.ycombinator.com/item?id=36595254replyverse 12 hours ago | prev | next [\u2013]Love this, thanks for building it!replyskilled 14 hours ago | prev | next [\u2013]Good job. I would honestly love this but with RSS feeds also, but I know it's a tough ask unfortunately. (Not for you, but in general)replyxoranth 14 hours ago | parent | next [\u2013]Most blogs that have RSS also have a `<link rel=\"alternate\" type=\"application/rss+xml\">` tag that redirects you to the RSS feed. If you pass the link to the homepage to a feed reader[^0], it will follow the link tag and find the RSS feed.[^0]: At least, Liferea on Linux, NetNewsWire and Vienna on Mac, do this. AFAIR NetNewsWire is even smarter than that, and can sometimes find the RSS feed even when there is no link tag.replymarginalia_nu 13 hours ago | root | parent | next [\u2013]A bit of a snag is that many CMSes generate multiple feeds, and there is no way I'm aware of for identifying which is the \"canonical\" feed.replyhyperific 14 hours ago | prev | next [\u2013]Thanks for doing this!replyrevskill 9 hours ago | prev | next [\u2013]Thanks for great work.Next step could be support AI Chat with HN blogs ?replygxs 10 hours ago | prev | next [\u2013]There's a lot to sort through there - anyone have any recommendations/anything worth highlighting?replyscarface_74 14 hours ago | prev | next [\u2013]This is awesomereplyalfiedotwtf 11 hours ago | prev | next [\u2013]Weird. I added to that original post, but I'm not on your list. Maybe your code didn't go to the \"See more comments\" page?replyxwdv 13 hours ago | prev | next [\u2013]I\u2019m going to train an LLM on all these blog posts, make a true HN AI.reply1270018080 14 hours ago | prev | next [\u2013]Conspiracy: That post was only made to harvest data for someone's modelreplybachmeier 13 hours ago | parent | next [\u2013]Well, given that blogs are public and the whole point is for others to read them, I think that's okay.replyAndrewKemendo 14 hours ago | prev [\u2013]We reinvented web rings!replyGuidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- Hacker News user created a blogroll to aggregate and search through personal blogs shared on the platform.\n- The blogroll includes a list of blogs and the latest posts from each blog.\n- Users can recommend blogs, sort by various criteria, and explore random blogs."
  },
  {
    "id": 36597534,
    "timestamp": 1688546367,
    "title": "PhD Simulator",
    "url": "https://research.wmz.ninja/projects/phd/index.html",
    "hn_url": "http://news.ycombinator.com/item?id=36597534",
    "content": "Items:Status:\u00a9 2023 Mianzhi Wang | Help | Privacy Notice",
    "summary": "- The post is titled \"PhD Simulator.\"\n- The post was written by Mianzhi Wang and is copyrighted in 2023.\n- The post includes a section on \"Help\" and a section on \"Privacy Notice.\"",
    "hn_title": "PhD Simulator",
    "original_title": "PhD Simulator",
    "score": 721,
    "hn_content": "- The \"PhD Simulator\" captures the experience of pursuing a PhD, both in the simulator and real life, highlighting the challenges and common scenarios.\n- The game includes various highlights, such as manuscript rejection, discovering ideas have been previously published, and the struggle to graduate on time.\n- It showcases the importance of persevering through setbacks and the requirement to adapt one's research focus when necessary.\n- The simulator also mentions the growing feeling of getting older, family obligations, and teaching responsibilities that PhD students often face.\n- The comments section provides additional insights and experiences from actual PhD students and graduates.\n- The game offers a satirical twist to reflect the often harsh realities of pursuing a PhD, potentially resonating with those familiar with the challenges.\n- The post provides a unique perspective on the PhD experience, shedding light on lesser-known aspects of academic life.\n- The discussion around the game and the topic of pursuing a PhD may be of interest to individuals considering their educational and career paths.- The simulator accurately reflects the stress and challenges of a PhD program\n- It captures the importance of publishing papers and the pressure to succeed\n- The game could benefit from additional elements, such as teaching responsibilities and financial struggles\n- The font is difficult to read and may cause headaches\n- The game is a reminder that slacking off can be beneficial in the scientific process\n- Some users found the game to be depressing or boring, while others found it entertaining and relatable\n- The typical motivation for pursuing a PhD varies, but may include a desire to discover something new or a need to stand out among others in the field\n- The experience of getting a PhD can differ depending on the field of study\n- Some users shared their personal experiences and reflections on the PhD process\n- The game could be improved by incorporating real-life events and challenges that PhD students often face\n- The game may not accurately represent the experience of an arts PhD\n- The game elicits feelings of stress and anxiety similar to those experienced during a real PhD program\n- Some users found the game to be too realistic, while others found it easier than their actual PhD experience\n- The width of the text is a common complaint among users\n- The game is seen as a reflection of the hardships and rewards of pursuing a PhD\n- The game could serve as a cautionary tale for those considering a PhD program\n- Some users appreciated the opportunity to relive their PhD experience through the game\n- The game may not appeal to everyone and has received mixed reviews",
    "hn_summary": "- The \"PhD Simulator\" is a game that accurately reflects the stress, challenges, and realities of pursuing a PhD.\n- It highlights the importance of persevering through setbacks, adapting research focus, and facing various obligations and responsibilities.\n- The game provides a unique perspective on the PhD experience, shedding light on lesser-known aspects of academic life."
  },
  {
    "id": 36602909,
    "timestamp": 1688575066,
    "title": "Why is desalination so difficult?",
    "url": "https://practical.engineering/blog/2023/6/28/why-is-desalination-so-difficult",
    "hn_url": "http://news.ycombinator.com/item?id=36602909",
    "content": "Why Is Desalination So Difficult?JULY 05, 2023[Note that this article is a transcript of the video embedded above.]This is the Carlsbad Desalination Plant outside of San Diego, California. It produces roughly ten percent of the area\u2019s fresh water, around 50 million gallons or 23,000 cubic meters per day. Unlike most treatment plants that clean up water from rivers or lakes, the Carlsbad plant pulls its water directly from the ocean. Desalination, or the removal of salt from seawater, is one of those technologies that has always seemed right on the horizon. It might surprise you to learn that there are more than 18,000 desalination plants operating across the globe. But, those plants provide less than a percent of global water needs even though they consume a quarter of all the energy used by the water industry.I live like 100 miles away from the nearest sea, so it\u2019s easier for me to mix up my own batch of seawater right here in the studio. There are two main ways we use to desalinate water, and I\u2019ve got some garage demonstrations to show you exactly how they work. Will the dubious chemistry set or the cheapest pressure washer I could find work better? Let\u2019s track the energy use and other complications for both these demos so we can compare at the end of the video. Dumping that salt into a bucket of water may seem like no big deal, but reversing the process is a lot more complicated than you might think. I\u2019m Grady, and this is Practical Engineering. In today\u2019s episode, we\u2019re talking about desalination.Earth is a watery place. Zoom out and the stuff is practically everywhere. It doesn't seem fair that the word \u201cdrought\u201d is even in our lexicon. And yet, the scarcity of water is one of the most widespread and serious challenges faced by people around the world. The oceans are a nearly unlimited resource of water with this seemingly trivial caveat, which is that the water is just a little bit salty. It\u2019s totally understandable to wonder why that little bit of salt is such an enormous obstacle.How much salt is in seawater anyway? You\u2019ve heard of \u201cpercent,\u201d but have you ever heard of \u201cper mille\u201d? Just add another circle below the slash and now, instead of parts per hundred, this symbol means parts per thousand, which is the perfect unit to talk about salinity. The salinity of the ocean actually varies a little bit geographically and through the seasons, but in general, every liter of seawater usually has around 35 grams of dissolved salt. In other words, 35 parts per thousand or 35 permille. That means, for this bucket, I need about this much salt to match the salinity of seawater.I didn\u2019t get it dead on, but this is close enough for our demo. Looks like a lot of salt, but I could dissolve about 10 times that much in this water before the solution becomes saturated and won\u2019t hold any more. So, compared to how salty it could be, seawater isn\u2019t that far from freshwater. But, compared to how salty it should be (in order to be okay to drink and such), it has a ways to go. Normal saline solution used in medicine is 9 parts per thousand because it\u2019s approximately isotonic to your blood. That means it won\u2019t dehydrate or overhydrate your cells. But (unless it\u2019s masked by a bunch of sugar) even that concentration of salt in water isn\u2019t going to taste very good.Most places don\u2019t put legal limits on dissolved solids for drinking water, but the World Health Organization suggests anything more than 1 part per thousand is usually unacceptable to consumers. It doesn\u2019t taste good. 500 parts per million (or half permille) is generally the upper limit for fresh water (and that includes all dissolved solids combined, not just salt). But that means seawater desalination has to remove (or in industry jargon, reject) more than 98 percent of the salt in the water. That\u2019s the reason why there are really only two main technologies in desalination. But neither of them are particularly sophisticated, at least in their simplest form, so I\u2019m going to try some do-it-yourself desalination to show you how this works.The oldest and most straightforward way to separate salt and water is distillation, and this is my very basic setup to do just that. All you chemists and laboratory professionals are probably shaking your heads right now, but this is just to illustrate the basics. On the left, I have a flask of my homemade seawater sitting in sand, in a pot, on a hot plate. Salt doesn\u2019t like to be a gas, at least not under the conditions we normally live in on earth. Water, on the other hand, can be convinced into its gaseous state with some heat from a conventional hotplate. And that\u2019s what I\u2019m doing here, just adding some heat to the system. And I\u2019m tracking exactly how much heat using this Kill A Watt meter.Once the water is converted to steam, it is effectively separated from the salt. All I have to do is condense the vaporized water back into its liquid form. This pump moves ice water through the condenser to encourage that process\u2026 if the tube doesn\u2019t slip out of the beaker and spill ice water all over the table.In my receiving flask on the right, I should have distilled water that is nearly salt free. Testing it out with the meter, the dissolved solids are practically nil, just a few parts per million. But it took nearly 2 hours to get only 200 milliliters of water, and right about a kilowatt-hour of electricity too. Water usage in the US varies quite a bit, but a rough estimate is 300 gallons (or 1,100 liters) per day per household. To produce that much water using my distillation setup here, I would have to scale it up nearly 500 times this size, and it would consume nearly 6,000 kilowatt-hours in a day (assuming the same efficiency I got in the demo). At the average residential US electricity price, it\u2019s roughly 800 dollars per day! That\u2019s an expensive shower. Could this be made more efficient? I don\u2019t think so.No, obviously it can. My garage demo has very little going for it in terms of efficiency. It\u2019s about as basic as distillation gets. There\u2019s lost heat going everywhere. Modern distillation setups are much more efficient at separating liquids, especially because they can take advantage of waste heat. In fact they are often co-located with coal or gas-fired power plants for this exact reason. And there\u2019s a lot of technology just in minimizing the energy consumption of distillation, including reuse of the heat released during condensation, using stages to evaporate liquids more efficiently, and using pumps to lower the pressure and encourage further evaporation through mechanical means. But the thermal efficiency isn\u2019t the only challenge with distillation.Take a look at the flask that held the seawater after all the water boiled away and you can see the salt deposits building up, even after distilling only a small amount of water. These scale deposits reduce the efficiency of boiling because heat doesn\u2019t transfer through them very easily, which means they would have to be cleaned off regularly. One alternative is a flash evaporator that sends the liquid stream through an expansion valve to force it to evaporate at temperatures lower than boiling, which minimizes the buildup of scale. Flash evaporators are the workhorses of desalination plants that use distillation, and especially in the middle east, plants like this have been reliably producing fresh water for decades now, but they\u2019re not the only way to get the job done.The other primary type of desalination uses membranes. You may have heard of the phenomenon called osmosis, where a solution naturally diffuses through a barrier. But you can reverse the osmotic process, moving a solution from high concentration to low with pressure\u2026 usually a lot of pressure. Let me show you what I mean. Luckily there are commercially available seawater membranes that don\u2019t cost an arm and a leg. That\u2019s because these systems are frequently used in boats and ships to make freshwater while at sea. But why spend thousands of dollars on a working watermaker when you have the rudimentary plumbing skills of a civil engineer?Here\u2019s the membrane I\u2019m using for this demo. It\u2019s wrapped in a spiral so you get lots of surface area in a small package. It is kind of like a filter that lets water pass through while holding back the dissolved solids, but at a much tinier scale. It\u2019s generally a lot more efficient than thermal distillation, so most modern desalination plants use reverse osmosis (or RO) for primary separation. But, as you\u2019ll see, it still uses a lot of energy, way more than a typical raw water treatment plant.It takes a lot of pressure to force seawater through a membrane, in my case about 600 psi or 40 times normal atmospheric pressure. Even small RO systems use high-pressure pumps designed for continuous use, because this is not a fast process. Instead of springing for a nice pump well-suited for the application, I\u2019m using the cheapest power washer I could find at the local hardware store. The instructions didn\u2019t say not to run saltwater through it.The membrane sits inside this high pressure housing that keeps it from unraveling under the immense forces inside. That\u2019s if you hook everything up correctly\u2026 I had to redo a few connections when the housing sprung a leak during early testing.A booster pump delivers the seawater from the bucket to the pressure washer, then the pressure washer sends it into the housing. Unlike a typical filter, not all the feed water flows through the membrane. Instead, most of it flows past the membranes and comes out on the other side just a little bit more concentrated with salt. This is called the brine and we\u2019ll talk more about it in a minute. The water that does make it through the membrane, called the permeate, comes out in the center of the housing. You can see on my flow meters that, if I close the valve on the brine discharge line, it increases the pressure in the housing, forcing more of the water through the membrane. The meter on the left is brine discharge, and the one on the right is the permeate line. As I close the valve, the brine flow goes down and the permeate flow goes up. Of course I could close the brine flow all the way down, but you still need some water to carry the salt away or it will just foul up the membrane.Typically you need to run water through these membranes for several hours before they settle into their best performance. My little power washer wasn\u2019t quite up to the task of running for that long, but even after roughly half an hour, I was getting water with one to two parts per thousand of dissolved solids through this crude setup. That\u2019s not high quality drinking water, but it\u2019s definitely drinkable!I ran this experiment a few times at different pressures, but the results didn\u2019t vary too much. For this run, the combined power for the booster pump and the pressure water was around 1200 watts, and it took about five minutes to produce a liter (or quarter of a gallon). Going back to our residential household, it would take four pressure washers running non-stop and consume more than 100 kilowatt-hours in a day. That\u2019s a huge improvement over the distillation demo, even considering the water quality wasn\u2019t quite as good, but it\u2019s still 15 dollars a day or more than 5,000 dollars per year just to separate salt from water.It won\u2019t surprise you to learn that, just like my crude distillation demo, my reverse osmosis via pressure washer demo is also not nearly as efficient as it could be on a larger scale. Modern RO plants use huge racks of high quality membrane units and high efficiency pumps. They also recover the energy from the brine stream before it leaves the system back out to sea, saving the precious kilowatt-hours already consumed by the pumps. To separate a cubic meter or 264 gallons, of seawater from its salt, my power washer RO system would take about a hundred kilowatt-hours. The newest RO plants can do it with just one or two.But, even though the separation step is energy intensive, it\u2019s not the only energy requirement in a seawater desal plant, and it\u2019s definitely not the only cost. I\u2019m using tap water in my demonstration, but these plants don\u2019t start with that. Raw seawater not only has salt, but also dirt, algae, organic matter, and other contaminants too. Those constituents can foul or damage evaporators or membranes, so all desal plants use a pretreatment process to remove them first. That takes energy and cost to keep up with the various chemical feeds and filters before the water even reaches the salt separation process. And, even with good pretreatment, the RO membranes or evaporators have to be taken out of service for cleaning regularly, and eventually they have to be replaced. Additionally, you usually can\u2019t send RO permeate or distilled water directly to customers. It\u2019s too clean! It normally goes through a post-treatment process to add minerals, since most people prefer the taste over just pure water. Plus it gets disinfectant so that it can\u2019t be contaminated on its way through the distribution system. And don\u2019t forget about that brine.All that salt that didn\u2019t come out of the product stream is now packed into a smaller volume of water, making it more concentrated than before. Modern desalination plants generally recover about half of the intake flow, which means their brine stream is about twice the concentration of normal seawater. It\u2019s a waste product that is actually pretty tough to get rid of. You can\u2019t just discharge that super-saline waste directly back into the sea because of the environmental impacts, particularly on the plants and animals near the sea floor (since the concentrated solution usually sinks). To avoid environmental impacts, most brine discharge lines either use diffusers to spread out the salty solution so it dilutes faster or they blend the brine with some other stream of water like power plant cooling lines or wastewater effluent so it\u2019s diluted before being released. When that\u2019s not possible, some plants have to inject the saltwater into the ground (an expensive endeavor that only adds to operational costs).With all the complications of separating salt from seawater, it\u2019s easy to let one\u2019s mind drift toward alternatives like harnessing renewable sources of energy. Like, what if we could use solar power to not only distill seawater but also carry it inland toward major cities and release it onto the ground where it could easily be collected. But now we\u2019ve just re-invented the water cycle, which is already how we humans get the vast majority of the water we use to drink, cook, and bathe. It\u2019s not like dams, reservoirs, canals, pumping stations, and surface water intakes don\u2019t have their own enormous costs and environmental impacts. But, if mother nature isn\u2019t dropping enough water for your particular populated area, you can build and operate a pretty long pipeline for the immense costs and energy required to desalinate seawater.And that\u2019s the problem with desalination. It\u2019s kind of like the nuclear power of water supply. It seems so simple on the surface, but when you add up all the practical costs and complexities, it gets really hard to justify over other alternatives. It\u2019s also harder to compare costs between those alternatives because of desal\u2019s unique problems. It\u2019s just a newer technology, so it\u2019s harder to predict hidden technical, legal, political, and environmental challenges. For example, because of the high energy demands, desalination can strongly couple water costs with electricity costs. During a drought, the cost of hydropower goes up because there\u2019s less water available, increasing overall energy costs and thus making desalination less viable right when you need it most.Of course, desalination is a viable solution in many situations, especially in places with large populations and severe water scarcity. All the biggest plants are in middle eastern countries like Saudi Arabia and the UAE. That\u2019s because they really have no choice. But it can also be viable in areas with a lot of variability in climate like California, Texas, and Florida. In these cases, a desalination plant is just one element in a diverse portfolio of resources, all with different risk profiles. Yes, the desalinated water is more expensive than other options like rivers, reservoirs, and groundwater supplies. But it can be more reliable too, providing water during drought conditions when the other sources are limited or completely unavailable. And, a lot of these costs and complexities get simpler when you\u2019re not pulling salt out of seawater. There are sources of water that have some salt (but not as much as the ocean) like estuaries and brackish groundwater. In places where such a supply is available, desalination can be a much more cost effective source of fresh water.Another way to make desal projects more viable is to let the private sector take on the risks. Many of the largest desalination plants are partnerships with private water companies rather than being financed, built, and operated by the utility like what\u2019s done for a typical treatment plant. Partnering with a private company allows a utility to offload the financing costs and operational risks in return for the stability of a simple water purchase agreement. You pay for it, build it, and operate it, and we\u2019ll just buy the water from you. This type of arrangement also keeps government boards from having to weigh in on complicated technical issues and innovations where there\u2019s just not as much precedence to lean on as there is with more established types of water infrastructure projects.The private company running the Carlsbad plant in San Diego County I mentioned earlier is working on a major project scheduled to finish in 2024: a new standalone seawater intake required after the power plant next door shut down in 2018. Bonds issued for the project were upgraded to rating of triple-B by Fitch, meaning the facility has a relatively stable outlook with a lower chance of defaulting. That\u2019s just one rating agency\u2019s assessment of just one project on just one membrane plant, but it gives some confidence that the technology of desalination is making progress, and that it might become a bigger and bigger part of the world\u2019s limited supply of fresh water in the future.41 LIKESSHARE",
    "summary": "- Desalination, the process of removing salt from seawater, is a difficult and energy-intensive technology that only provides less than 1% of global water needs despite operating more than 18,000 desalination plants worldwide.\n- The two main methods of desalination are distillation, which involves boiling and condensing water, and reverse osmosis, which uses pressure to push water through a membrane while leaving behind salt and impurities.\n- Desalination plants face challenges such as high energy consumption, the need for pretreatment to remove contaminants, disposal of concentrated saline waste, and the high costs associated with building and operating these plants. However, desalination can be a viable solution in areas with severe water scarcity and can provide a reliable source of water during drought conditions.",
    "hn_title": "Why is desalination so difficult?",
    "original_title": "Why is desalination so difficult?",
    "score": 528,
    "hn_content": "- Desalination is difficult due to the unique properties of salt and its interaction with water\n- Reverse osmosis is a commonly used method for desalination, but it produces a concentrated liquid waste stream\n- The waste stream is not unique to reverse osmosis and is a challenge in any desalination process\n- Disposing of the waste brine can be a problem, as it is hyper-salty compared to ocean water\n- Dilution is one option for disposal, but it may still have negative effects on local ecosystems\n- Other possibilities for disposal include evaporation ponds or using the brine for industrial purposes\n- The cost of desalinated water varies, but it is relatively cheap compared to other alternatives\n- Desalination can be a solution for water scarcity, but there are still technical, economic, and environmental challenges to consider\n- More research and innovation in desalination technology are needed to make the process more efficient and sustainable\n- Desalination plays a crucial role in water management, particularly in coastal areas with limited freshwater resources- The average American household uses about 1000 liters (or 264 gallons) of water per day.\n- The idea of using oysters as a pre-filter for desalination plants is an interesting and symbiotic solution.\n- The oysters at the Carlsbad Aquafarm are safe to eat because they undergo a depuration and purification process.\n- One commenter suggests using nuclear power plants to power desalination plants, which has been proposed in the past.\n- Desalination is not an inherently difficult process, but it can be expensive and energy-intensive.\n- Israel relies heavily on desalination for its drinkable water, but it comes with high energy costs and government subsidies.\n- Solar power has been used in desalination facilities, but there are challenges with intermittency and storage.\n- The MIT solar distiller has demonstrated an efficient way to desalinate water using passive solar power.\n- Evaporating seawater in the desert to increase rainfall is not feasible due to geographical and climatic factors.\n- Deserts are important ecosystems with biodiversity, and destroying them for desalination purposes is not favorable.\n- The historical significance of salt as a preservative and its use as currency in ancient cultures.\n- There is ongoing debate about the economic and environmental viability of desalination and the need for innovation in the field.",
    "hn_summary": "- Desalination is a challenging process due to the unique properties of salt and its interaction with water.\n- Disposal of waste brine, a byproduct of desalination, is a major challenge with potential negative effects on ecosystems.\n- More research and innovation are needed to make desalination more efficient, sustainable, and economically viable."
  },
  {
    "id": 36607439,
    "timestamp": 1688592609,
    "title": "Rejected GitHub profile achievements",
    "url": "https://github.com/Flet/rejected-github-profile-achievements",
    "hn_url": "http://news.ycombinator.com/item?id=36607439",
    "content": "Rejected GitHub Profile Achievements \ud83d\ude35A collection listing Achievements that were rejected when creating the GitHub Profile Achievements feature.This repository attempts to list them all.Rejected AchievementsTitle Badge (prototype) Earned byVital Contributor Over 100 issue comments consisting of just \"+1\" or a thumbs up emoji.Sith Lord Wipe out someone else's commits by force pushing to the main branch.Procrastinator Created a repository with a single \"init\" commit with just a README.md. Then never touch it for 5 years.Secret Santa Accidentally commit a secret API key in a public repository.Monkey Wrench Make a commit directly to the main branch that breaks the build process.This is Fine Over 1,000 open issues on public repositories you own.Arborist Maintain a repository that has at least 150 branches merged but never deleted (keep them around just in case).Tee Hee In a single \"minor cleanup\" commit to the main branch, change every line of every file in the repository so that all open Pull Requests are unmergeable.Patient Skeleton Submit a pull request to a public repository that fixes it, but its been open for at least 2 years.2 FU It's 2022 and you've never enabled 2FA.Speed Reader Review and approve a pull request that contains over 10,000 lines of code in under 15 seconds.It's Bad Luck Merge a commit on a Friday and deploy it with GitHub Actions, then rollback the commit on the weekend.Works On My Machine Suggest user error in at least 10 issue threads without attempting to reproduce end-user runtime environments.Author's NoteThis is a joke! PRs welcomeInspired by Schweinepriester/github-profile-achievementsBadges hacked together from the fine art at OpenMoji",
    "summary": "- This post showcases a collection of rejected achievements for GitHub Profile achievements.\n- The rejected achievements listed include humorous titles like \"Vital Contributor,\" \"Sith Lord,\" \"Procrastinator,\" \"Secret Santa,\" and more.\n- The post emphasizes that it is a joke and welcomes contributions from readers.",
    "hn_title": "Rejected GitHub profile achievements",
    "original_title": "Rejected GitHub profile achievements",
    "score": 427,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginRejected GitHub profile achievements (github.com/flet)427 points by kelseyfrog 12 hours ago | hide | past | favorite | 94 commentstwp 11 hours ago | next [\u2013]Suggested:\"The Artist\": posted a screenshot of a terminal instead of copy and pasting the text\"The Filmmaker\": posted an animated GIF of their terminal session instead of writing out what they didMaintainers _love_ artists and filmmakers!replymirekrusin 0 minutes ago | parent | next [\u2013]\"Fake Profile\": recently created account with fake activity likely for the purpose of landing multiple full-time remote jobsreplyjkubicek 10 hours ago | parent | prev | next [\u2013]\"The Novelist\": Opens an issue or replies to a thread with only the words \"doesn't work\" with no indication of what they tried, how they know it doesn't work, or any error messages.\"Captain Obvious\": Opens a very aggressive and angry issue about the project not installing, when the maintainer responds to double-check that you didn't miss a critical and well-documented note in the docs, you disappear, never to reply again.replyrendaw 5 hours ago | root | parent | next [\u2013]There's a legitimate reason for posting low information issues - finding out if it's a known limitation or issue (that didn't come up in a search) before putting in extra effort to document something that's already been documented and discussed elsewhere. Maybe not \"doesn't work\" (two words) exactly, but \"This doesn't work for me with the X234 hardware\" (... with an implied \"is this expected?\").It's very common for people new to projects or with limited technical skills to assume that the problems they face are common/well known or that other people know much more than them.The frustration responders face is due to the mismatch of assumptions, if the issue is in fact not common or well known, but IMO a simple \"I haven't seen that before, please post full diagnostics\" is an easy and reasonable boilerplate response.replycrabmusket 9 hours ago | root | parent | prev | next [\u2013]I'd call that first one \"The Hemingway Award For Terminal Concision In Fault Diagnosis\"replymirekrusin 4 minutes ago | parent | prev | next [\u2013]\"Angry Karen\" - posts entitled, aggressive comments to open-source authors, possibly demands money back for wasted timereplyMrJohz 5 hours ago | parent | prev | next [\u2013]> \"The Filmmaker\": posted an animated GIF of their terminal session instead of writing out what they didI love videos and GIFs when trying to debug something. They're usually much better at catching small details than people's descriptions. Very often, the bug will hinge on an action that you can do in multiple ways, or some action that the user took directly before triggering the bug that they don't realise is necessarily part of the problem. Or maybe the bug only triggers on certain screen sizes or something, or if certain terminal colours are used, or if the user is using a touchscreen or something.Having a video makes it a lot easier to notice these sorts of things. It's not always perfect, and a detailed description alongside the video is best, especially if you also have any errors or important text copied there so I can copy it myself, but given the choice, I often prefer video over text.So yes, I genuinely love filmmakers in this context. Send me screenshots, send me videos!replyuranusjr 5 hours ago | root | parent | next [\u2013]Videos are good as long as you also provide copyable content. Gifs not so much since I can\u2019t pause.replyAdverblessly 0 minutes ago | root | parent | next [\u2013]mpv will also play gifs and allow you to pause them. It also knows how to stream web resources.I have a keyboard shortcut bound to run mpv with the content of the clipboard, so right click on gif, \"Copy Image Link\", hit the keyboard shortcut and wait for the gif to open in mpv where I can pause, speed up, speed down, scroll etc.Also useful for any video or audio on the web, since mpv is (for me) much nicer than any built-in player.thih9 2 hours ago | parent | prev | next [\u2013]\u201cWikipedian\u201d: reverted a commit within 10 minutes of it being pushed to main.\u201cSocial distancer\u201d: submitted a commit that just adds spacing.\u201cEdgycat\u201d: contributed or suggested a badge for this repo (I\u2019m earning this badge right now!).\u201cDuct tape\u201d: sent three commits in a row that contain text \u201cfix tests\u201dreplymirekrusin 2 minutes ago | root | parent | next [\u2013]\"Rust Evangelist\": creates issue suggesting moving project to Rustreplymook 4 hours ago | parent | prev | next [\u2013]\"not helping\": posting low-effort comments that don't help with anything\"Internet famous\": your repo had a bug so severe you got news articles written about it.Both were from thinking about https://github.com/MrMEEE/bumblebee-Old-and-abbandoned/issue... \u2026replywaitforit 5 hours ago | parent | prev | next [\u2013]\"The problem solver\": asks how to solve a specific error while also posting the stacktrace/error which already contains a message about how to solve the errorreplyFridgeSeal 4 hours ago | root | parent | next [\u2013]\u201cReadme, Readme-not\u201d: opens an issue asking how to do something explicitly covered in the readme/getting started.replydmitshur 10 hours ago | parent | prev | next [\u2013]Along these lines:\"The Art Critic\": posted a screenshot of a diff containing a suggested code change instead of sending a PRI've actually done something like this exactly once when I was much newer to GitHub and git (and probably wanted to save some of my time).replydoubled112 6 hours ago | parent | prev | next [\u2013]> a screenshot of a terminal instead of copy and pasting the textNo. Please, no!For some reason, I get screenshots of text regularly from technical people. Log files, error messages, everything. It is like they forget Slack can send anything more than images and emojis.No, I'm not typing out keywords from 3 pages of Java exception, nor am I typing an encoded AWS authorization message.replyNoumenon72 6 hours ago | root | parent | next [\u2013]Is there a tool that lets you can paste in a screenshot and have it extract the text?replysqrt_1 4 hours ago | root | parent | next [\u2013]On Windows, as part of PowerToys - there is a Text extractor. Works just like the screenshot tool except dumps text to clipboard https://learn.microsoft.com/en-gb/windows/powertoys/text-ext...replyreaperman 5 hours ago | root | parent | prev | next [\u2013]MacOS does this pretty automatically across multiple apps.replylynx23 4 hours ago | parent | prev | next [\u2013]And it is no surprise that the behaviour of The Artists clashes with expectations of people that rely on accessibility. It is very telling if I read a blog where the content is about terminal stuff, and each and every example is a plain image. Unfortunately, this is spreading.reply0xbadcafebee 9 hours ago | prev | next [\u2013]\"Unpopular opinion\": (devil-emoji) Over 100 thumbs-down-emoji on any comment you've posted in an issue\"I will raise with the team\": (im-hiding-gif) An issue or PR with over 100 thumbs-up-emoji that has been open for over a year\"For legal reasons\": (judge-emoji) A PR was opened with a fix to an issue, but because the CYA was not signed, the PR was auto-closed\"Business Model Blues\": (bars-over-source-code-emoji) A License file has over 50% of its text changed\"Back from the dead\": (zombie-emoji) You comment on an issue or PR that was opened over a year agoreplyfzeindl 6 hours ago | prev | next [\u2013]Honestly the \"This is fine\"-badge for over 1.000 open issues on public repositories is very necessary.There are so many opensource-projects now as compared to 10 years ago, especially in JavaScript-land, which have an unbelievable number of open bugs.This is terrible because the majority of these bugs seem to be low-quality, so even if you are a seasoned developer with contribution experience, opening up a bug with the incentive to help simply gets you ignored.I'm waiting for a bug in next.js at the moment where 404 does not return 404, that has been open for months (https://github.com/vercel/next.js/issues/51021). I don't have the time of writing a PR, but I have written countless PRs and bug-reports and worked on many other open-source projects, so I think I have done my share.It is elitist, but I wish there was a way for maintainers to sort bugs by the reputation of the reporter, so projects can prioritize high-quality issues.replyduskwuff 5 hours ago | parent | next [\u2013]It's \"1000 open issues on public repositories you own\", not \"1000 open issues created by you on public repositories\". Both would be interesting, though.replymatrix_overload 1 hour ago | parent | prev | next [\u2013]Yeah, if only there was some way for people to exchange value... Like, you know, paid licenses, support tiers, something that Ancient Romans called running a business. /sBut no, everything must be free, and then shock-and-surprize: open issues are piling up and nobody wants to deal with them.replyi-use-nixos-btw 8 hours ago | prev | next [\u2013]\u201cThe thief\u201d: When your approach to open source is that you close pull requests and merge the diff manually under your own name.So many large corporate-run projects do this and, while I\u2019m sure there are some compliance reasons, it just looks dodgy.replyjustinclift 6 hours ago | parent | next [\u2013]> So many large corporate-run projects do this ...Ouch, that's pretty bad. Any stand out projects doing this that you'd care to mention?replytheodorejb 4 hours ago | root | parent | next [\u2013]duosecurity/duo_universal_php did this with my PR.replyjustinclift 3 hours ago | root | parent | next [\u2013]Interesting. That doesn't seem like a complete clear cut case of it though, more the git-fu of the repo maintainer there might not be all that great. :(Saying that from looking at your PR:https://github.com/duosecurity/duo_universal_php/pull/7Then looking at the commit which eventually got into their repo:https://github.com/duosecurity/duo_universal_php/commit/c69e...Even though they fucked up the author name on the commit itself, they at least attempted to credit you in the commit title:  Merge PR 7 from theodorejb; Add missing type declarations and fix incorrect PHPDoc typesWhile that's not fantastic as it screws up proper attribution with pretty much every automated git tool... it doesn't seem like a case of them trying to claim credit for someone else's work.That's just my impression anyway. Could be wrong. :Dreplyjamespo 11 hours ago | prev | next [\u2013]Disappointed not to see my own personal favourite, at least 50 issues raised for feature requests with no other contributions.replyzogomoox 11 hours ago | parent | next [\u2013]achievement name: \"I'm more of an idea person\" or perhaps \"chop-chop\"replyeaston 10 hours ago | root | parent | next [\u2013]\u201cProduct owner\u201dreplytoyg 11 hours ago | root | parent | prev | next [\u2013]Blue-Sky Thinkingreplysph 10 hours ago | parent | prev | next [\u2013]What about one for \"I made 10 contributions that have been sitting unreviewed for more than a year\"?replyduxup 8 hours ago | parent | prev | next [\u2013]\u201cArchitecture Astronaut\u201creplyFridgeSeal 4 hours ago | root | parent | next [\u2013]Nah that one should go to the user who proposes massive and sweeping architectural changes, complete with diagrams and over engineering in every facet-regardless of whether the project needs it, but never makes any attempt to do it.replydgb23 1 hour ago | parent | prev | next [\u2013]\u201eIdea guy\u201creplymelagonster 10 hours ago | parent | prev | next [\u2013]for normal user this is the only way to contact author.replypc86 9 hours ago | root | parent | next [\u2013]I agree with you and don't necessarily think this is \"bad,\" but GitHub probably isn't the best place to just dump a ton of feature requests. And if that's the only easy way to contact the author, there's always a decent chance that's a deliberate choice.replymelagonster 5 hours ago | root | parent | next [\u2013]I wanted to indicate this is why there are so many accounts don't do any contribution.replyTheFreim 7 hours ago | root | parent | prev | next [\u2013]> GitHub probably isn't the best place to just dump a ton of feature requestsIsn't this the entire point of having a feature request tag for issues?replypc86 6 hours ago | root | parent | next [\u2013]I just meant in the \"do this thing for me\" (x100) way. Surely there's a more meaningful way to interact as a user, even a non-technical one.replyAffric 6 hours ago | root | parent | prev | next [\u2013]It lets devs easily ignore feature requests most of the time.This is not in a cynical way it's just likely not urgent.replyhoistbypetard 11 hours ago | prev | next [\u2013]I've earned \"patient skeleton\" twice.The real shocker: one of those was merged after the two year mark. There wasn't any back-and-forth about the PR or anything like that, either. It was a low-activity project, and it had gone unnoticed. I had given up and pointed my `requirements.txt` at my own fork.Someone else filed an issue about the same problem my long-pending PR fixed, I replied to that issue saying that would fix it, and that activity finally got it noticed.The other one is still pending.replyerulabs 9 hours ago | parent | next [\u2013]The amount of uncaptured value in forked projects containing one vital change, unmerged into mainline, is easily in the billions of dollars.replyviraptor 9 hours ago | root | parent | next [\u2013]I maintained a fork of a project for a while where I just grabbed all useful PRs from the \"network\" tab of the original repo and merged them / resolved conflicts. Fortunately at some point it was joined back to the original repo, but... yes, there's definitely a lot of similar opportunities.replyRobotToaster 1 hour ago | root | parent | prev | next [\u2013]There's a Firefox extension called something like \"lovely forks\" that shows the most starred fork for every repo on github. I find it useful for finding these kind of forks.replyguessmyname 11 hours ago | prev | next [\u2013]Clarification: none of these were achievements rejected by GitHub, simply humorous ideas from a developer known as \"flet\" with no affiliation to GitHub.replysethd 11 hours ago | parent | next [\u2013]Congrats on earning the Captain Obvious achievement!replyguessmyname 10 hours ago | root | parent | next [\u2013]Not very obvious considering some of the comments in this thread.Some people are reading the title of the post as if GitHub had received proposals from their employees to include some of these achivements into the final feature set, and then decided to reject them, but the reality is that none of them were proposed by any GitHub employee at all. They are all \u201cjoke submissions\u201d from the development community, making fun of the gamification of the platform.replyidk1 3 hours ago | prev | next [\u2013]I love this, however...I would say the \"thumbs up\" on a comment is one of the most helpful things on Github, it telegraphs that a comments is usually the fix for something, if we didn't have loads of people doing the \"thumbs up\" reaction on comments, we wouldn't effectively have stack overflow style answers in comments.replyJZumun 2 hours ago | parent | next [\u2013]I think the badge isn't for the reaction, but for posting comments whose text is solely \"+1\" or \"<thumbs up emoji>\"replyidk1 2 hours ago | root | parent | next [\u2013]Oooo I see, well in that case... badge away!Side note - it would be if Github squished all of those down into reactions and next to the reaction added a line saying \"we squished the following comments to reactions (show squished comments)\".No pun intended there with the word squish.replytoyg 11 hours ago | prev | next [\u2013]I propose \"YOLO\" - ignored Dependabot notifications for more than 3 months.That award has my name all over it.replynneonneo 9 hours ago | parent | next [\u2013]There\u2019s already a real achievement called YOLO: \u201cMerged own pull request without code review\u201d.Full list of real achievements here: https://github.com/Schweinepriester/github-profile-achieveme...replytoyg 4 hours ago | root | parent | next [\u2013]Damn. Well then, \"The Undependables\u201d it is.replyzogomoox 11 hours ago | prev | next [\u2013]I propose the \"Copium\" achievement when you star your own repository.replyMe1000 10 hours ago | parent | next [\u2013]I don't remember for sure, but I'm pretty sure that GitHub used to automatically star your repos when you created them.replyninepoints 11 hours ago | parent | prev | next [\u2013]Narcissist might be a bit more appropriatereplyzogomoox 11 hours ago | root | parent | next [\u2013]at first I thought of \"the stranger\" but maybe a bit on the nose.replysangnoir 7 hours ago | root | parent | next [\u2013]\"The Stranger\" would be starring your project from your alternate Github account.replyscintill76 6 hours ago | prev | next [\u2013]\"Fresh Freak\": employ a stalebot that has repeatedly closed an issue despite users trying to keep it open with bump commentsreplyFridgeSeal 3 hours ago | parent | next [\u2013]I get that Kubernetes is a hugely popular repo, and they obviously have lots of issues opened frequently, but my god, the stale-bot they have in that repo is the worst for that.replyDylanDmitri 10 hours ago | prev | next [\u2013]\u201cType O Contributor\u201d - have your only contributions be minor spelling and grammar fixes.replyjkrubin 4 hours ago | parent | next [\u2013]Typo-O donor.replyftxbro 10 hours ago | prev | next [\u2013]\"The Grandfather\": you made your account in 2008 with a rage comic era meme handle and no associated email address and now it's completely broken and trashed by backward incompatibility bugs from all of the upgrades and changes and acquisitions made by github corporate and its various ownersreplyl0b0 11 hours ago | prev | next [\u2013]Suggested: Achievement for excessively locking conversations[1][1] https://github.com/Flet/rejected-github-profile-achievements...replydonatj 41 minutes ago | prev | next [\u2013]\u201cThe Builder\u201d : Push multiple successive commits with the message \u2018WIP\u2019 to the default branchreplyawb 11 hours ago | prev | next [\u2013]How about a \u201cStasis Award\u201d - Tag 1,000 issues as \u201cWon\u2019t Fix\u201dreplykzrdude 9 hours ago | prev | next [\u2013]\"Lone Wolf\": merge 1000 of your own PRs\"Deadbeat\": open at least 100 PRs in other people's repositories, without taking any action on comments or reviewsreplyem-bee 6 hours ago | parent | next [\u2013]i like the lone wolf, but without the PR just a repo with commits only by me.replykojiromike 12 hours ago | prev | next [\u2013]There are quite a lot of patient skeletons out there. What does it even take to get AWS to review a botocore PR?replynoman-land 11 hours ago | prev | next [\u2013]To be honest, I want some of these on my profile. I, for a fact, am guilty of many of them. Everyone is.replybandyaboot 9 hours ago | prev | next [\u2013]\u201cThe Dishwasher\u201d - Fork 10 repositories without making any additional commits.There\u2019s gotta be a better name for this one, but I couldn\u2019t come up with it.replymdaniel 8 hours ago | parent | next [\u2013]I dunno if this applies to every case but I'll point out that doing that preserves the repo at a point in time from deletion but using GitHub's disk space, which is why there's a storm of them for any socially problematic repo. I'm aware the DMCA takedowns can easily target the forks but it's easy to take your chancesreplyjustinclift 6 hours ago | root | parent | next [\u2013]Isn't taking out the forks as well pretty much standard?So you have to clone the repo (forked or not) somewhere instead for it to be effective.replyl0b0 7 hours ago | parent | prev | next [\u2013]\"Archivist\"?replyilaksh 4 hours ago | prev | next [\u2013]I have gone years working on projects completely solo. Probably 99% of my commit messages are just the word \"update\". I also tend to do it excessively, like I am afraid the hard drive is about to crash or something (so far it hasn't).Not sure what you would call that. Maybe \"The Saver\", or \"The Save Scummer\", or \"The Scummer\", or maybe just \"Scum\". (I can see the last one if anyone else was actually looking at these commit messages, but that almost never happens, and on the rare occasion when I know they will, such as for a PR or something, I rebase and write something descriptive).replyphilippejara 10 hours ago | prev | next [\u2013]One would hope all of the achievements period were rejected and this ridiculous idea of adding a gamerscore to a version control system wouldn't go past a round of laughter at the ones responsible, sadly it did go past.replytimetraveller26 10 hours ago | prev | next [\u2013]Also related, the O'RLY Books <https://github.com/thepracticaldev/orly-full-res>replyjoshka 6 hours ago | prev | next [\u2013]One I hit the other day by accident:\"What changes?\": As a maintainer, you accidentally update a committer's branch with main instead of your local changes, which closes the PR and drops your access to push to the committer's branch.replykretaceous 7 hours ago | prev | next [\u2013]It's been a joke among 2 of my friends (and collaborators) that no matter what code they write, a \"cleanup\" commit by me would refactor/prettify everything.I deserve the Tee Hee (and some professional help).Of course, Monkey Wrench is inevitableas well.replyWirelessGigabit 8 hours ago | prev | next [\u2013]Suggested:\"The useless\": posted a message like 'x is broken'. No screenshots, no error logs, nothing.replysondr3 11 hours ago | prev | next [\u2013]2FU is actually hilarious, I want some of these.replyl0b0 11 hours ago | prev | next [\u2013]Self-award time:- Procrastinator for at least one vague memory of some high-faluting idea which never went anywhere beyond creating the repo.- Monkey Wrench was sort of inevitable back when working without feature branches.- Patient Skeleton: Sometimes I've pinged people ~yearly for a good while before realising it's just not happening.replygeobmx540 12 hours ago | prev | next [\u2013]These are hilarious, but I see why they might be rejected.replyno_butterscotch 8 hours ago | prev | next [\u2013]\"Wipe out someone else's commits by force pushing to the main branch.\"Is this possible in Github? I figured owner the repo's owner has this right and it may be disabled by default.replyjwilk 1 hour ago | parent | next [\u2013]I don't believe branches are protected by default.replytuanm 4 hours ago | prev | next [\u2013]Shit. I make sure that I'm able to unlock almost these badges. =))replymorkalork 8 hours ago | prev | next [\u2013]It pains me that I've worked with people that were gunning for a few of these.replynomilk 10 hours ago | prev | next [\u2013]GitHub achievement badges seem a little juvenile and cringy and even if they successfully gamify GitHub, is that really a good thing? Are more commits and more issues necessarily a good thing? At best they draw focus to the wrong things, and at worst could become the basis of social-media style boastfulness.replykzrdude 9 hours ago | parent | next [\u2013]Nope, it's really not a good thing. The github main page when you go there now is a \"feed\" page similar to other social media (twitter, facebook) that allows you to see stuff and tweak what the stream should show you. It's not a useful direction to go IMO. I don't want another feed/follow site.replyavg_dev 8 hours ago | prev | next [\u2013]This repo gave me a good laugh.replylom 9 hours ago | prev | next [\u2013]I\u2019d have:- Vital contributor- Sith Lord- Secret Santa (twice even!)- Monkey Wrench- Patient Sceleton (still waiting)- works on my machineNot bad!replyxwdv 12 hours ago | prev [\u2013]These would have been very useful for hiring managers.replyGuidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- Various humorous and fictional achievements that developers jokingly propose for GitHub profiles are discussed.\n- These achievements poke fun at different types of behavior, such as posting unhelpful comments, creating fake profiles, and making excessive commits.\n- While these achievements are not actually part of GitHub's official features, they provide entertaining commentary on the gamification of the platform."
  },
  {
    "id": 36594916,
    "timestamp": 1688524456,
    "title": "Simple Unix Chat",
    "url": "https://the-dam.org/docs/explanations/suc.html",
    "hn_url": "http://news.ycombinator.com/item?id=36594916",
    "content": "A slack clone in 5 lines of bashThe title oversells the content a bit:first, Slack (or Mattermost, or even the Internet Relay Chat (IRC)) offer slightly more features than the Simple Unix Chat system (suc), the topic of this piece;then, suc\u2019s actual line count exceeds five.Nevertheless, suc\u2019s core indeed consists of five lines of bash; and suc provides Slack, Mattermost, etc.\u2019s core features:Real-time, rich-text chat,File sharing,Fine-grained access control,Straightforward automation and integration with other tools,Data encryption in transitand optionally at rest,state-of-the-art user authentication.This paper shows how suc implements those features. suc stays small by leveraging the consistent and composable primitives offered by modern UNIX implementations 1.Line count mattersOne of my most productive days was throwing away 1000 lines of code. \u2013 Ken Thompson, apparentlyMeasuring programming progress by lines of code is like measuring aircraft building progress by weight. \u2013 Bill Gates, (probably apocryphal)Some of the managers decided that it would be a good idea to track the progress of each individual engineer in terms of the amount of code that they wrote from week to week. [\u2026] When he got to the lines of code part, [Bill Atkinson] [\u2026] wrote in the number: -2000. \u2013 https://www.folklore.org/StoryView.py?story=Negative_2000_Lines_Of_Code.txtTheir fundamental design flaws are completely hidden by their superficial design flaws. \u2013 Douglas AdamsThere are two ways of constructing a software design: One way is to make it so simple that there are obviously no deficiencies, and the other way is to make it so complicated that there are no obvious deficiencies. \u2013 Tony HoareDespite the wide consensus among competent programmers that code is a liability, almost every widely-distributed piece of software is a complexity behemoth.Case in point, let\u2019s examine Mattermost\u2019s line count:cd /tmpgit clone --depth=1 https://github.com/mattermost/mattermost-servercd mattermost-serverguix shell cloc -- cloc --quiet --timeout 0 .github.com/AlDanial/cloc v 1.96 T=14.34 s (606.7 files/s, 139790.0 lines/s)-------------------------------------------------------------------------------Language           files     blank    comment      code-------------------------------------------------------------------------------Go              1805     96705     26782     501249JSON              177       5       0     492604TypeScript          4125     74236     24557     480491JavaScript           811     21494     20745     68653SCSS              557      9164      359     51464HTML              54      6108      1167     37814JSX               92      3473      1054     29707SQL              807      3553      2253     18266Text              11      3824       0     10638YAML              45      126       96      7972SVG               68       6       12      2586Markdown            73      906       88      2168make               8      234       68      974GraphQL             4       65       2      596XML               29       10       1      572Bourne Shell          18      128       17      492CSS               5       70       0      385Dockerfile            4       14       8       46CSV               2       0       0       25diff               2       1       13       9INI               1       2       0       7-------------------------------------------------------------------------------SUM:             8698     220124     77222    1706718-------------------------------------------------------------------------------Half a million lines of Go, and again half a million lines of TypeScript. Just for the server !Let\u2019s compare with suc:cd /tmpgit clone --depth=1 https://gitlab.com/edouardklein/succd sucguix shell cloc -- cloc --quiet --timeout 0 .github.com/AlDanial/cloc v 1.96 T=0.01 s (475.8 files/s, 8207.6 lines/s)--------------------------------------------------------------------------------Language           files     blank    comment      code--------------------------------------------------------------------------------Bourne Again Shell        1       2       2       19C                 1       3       3       17make               1       3       0       14Bourne Shell           1       0       1       5--------------------------------------------------------------------------------SUM:               4       8       6       55--------------------------------------------------------------------------------suc can implement Mattermost\u2019s core features with 0.005% of the code. This is madness !suc\u2019s core loopBehold the five lines of bash that do as much as half a million lines of Go:while /usr/bin/truedo  read -r line || exit 0 # EOF  /usr/bin/echo \"$(/usr/bin/date --iso-8601=seconds)\"\\    \"$(printf \"%-9s\" \"$(/usr/bin/id --user --name --real)\")\" \\    \"$line\" >> /var/lib/suc/\"$1\"doneThis infinite loop:reads a line from standard input,prefixes it with:the date,the real user name,and appends it to a file in /var/lib/suc/Surely, you think, this cannot do. What about authentication, access control, encryption, rich text, etc. ?suc does all that by leveraging SSH, UNIX\u2019s access control API, and UNIX\u2019s text-based modularity.AuthenticationThe suc process can only be launched by an authenticated user 2. Therefore, suc contains no authentication code at all. All the authentication stuff happens before suc even starts.As with almost all UNIX servers nowadays, remote authentication is handled by ssh. Before granting them the ability to start suc, ssh requires users to prove their identity.This proof can take the formof a shared secret (i.e. a password),of a cryptographic challenge (as is the case on the dam),of the use of a One-Time-Passord (OTP) generating device,or of any combination of the above (also known as Multi-Factor Authentication, MFA).ssh also authenticates the server to the client, thus preventing Man-in-the-Middle (MitM) attacks.Last but not least, ssh encrypts all data between the clients and the server.A successful installation of suc therefore depends on a correct configuration of the UNIX host and its ssh server. To use suc, a user needs to exist on the system; and the ssh server needs to be configured to let her remotely log in.Most UNIX distribution provide the useradd, passwd, etc. commands for user management (creation, deletion, assignation to one or more groups, etc.). The ssh server reads its configuration from a text file in /etc/ (typically /etc/ssh/sshd_config), and from public key files (typically in /home/<user>/.ssh/authorized_keys).The dam server uses GNU Guix. GNU Guix differs from almost all other UNIX distributions, because it uses declarative configuration. This means that root just has to say what she wishes the configuration to be. The system then complies and reconfigures itself to match root\u2019s declaration.For example, granting ssh access to alice on a GNU Guix system 3 requires only the following line in the system\u2019s configuration file: (ssh-user \"alice\" #:groups '(\"c3n\" \"frenchies\")          #:keys '((plain-file \"alice.pub\" \"SOMESSHKEY\")))User alice exists on the system only as long as the line exists in the configuration file. When the line disappears, the reconfiguration process removes user alice, and she can no longer log in.Some big advantages of declarative configuration systems include:removing the need for clean up actions when removing functionality: once it is no longer part of the declaration, it will be removed from the system automatically.the ability to clone a specific configuration by just replicating the declaration; useful for back-ups, failovers, etc..Among the disadvantages, one counts an increased difficulty for quick and dirty setups (usually for a quick test to try out a piece of software). New tools (such as e.g. guix shell) allows one to sidestep this difficulty.In such a declarative system, suc\u2019s overhead per user is limited to a single line in the global configuration file. One cannot need less, and current chat systems need more.Access controlAs with authentication, suc contains no access control code whatsoever. This combination of caring about neither authentication nor access control is called security agnosticism. Security anosticism allows suc to be lean, and therefore more probably correct (and so, paradoxically, more secure) than its heavier counterparts.On UNIX, software can afford to be security agnostic because the system provides a clean and powerful API for access control: the kernel knows aboutusers and groups,processes and files.Let\u2019s dive in.UNIX veterans will have noticed that suc prefixes the user\u2019s messages with her real name. Indeed, files have an owner (a user), whereas processes have two owners (two users). The real one and the effective one.Most of the time, real and effective owners are the same. suc\u2019s ownership differs: it effectively belongs to a special user also named suc; it really belongs to whoever (e.g. user alice) launched the suc command 4.The kernel examines the effective ownership of a process to determine said process\u2019 ability to read or write to files.With that in mind, let\u2019s examine the content of /var/lib/suc on the dam:ssh -i ~/.ssh/id_rsa edk@the-dam.org ls -l /var/lib/suctotal 92-rw-r----- 1 suc c3n      44368 Apr 13 19:18 banane-rw-r----- 1 suc forbiddenlands 6234 Apr 13 21:04 forbiddenlands-rw-r----- 1 suc frenchies     62 Apr 21 22:23 frenchies-rw-r----- 1 suc guixdevs      0 Apr 22 15:39 guix-rw-r----- 1 suc iwp9      4181 Apr 21 21:46 iwp9-rw-r----- 1 suc users     18241 Jun 30 07:14 the-dam-rw-r----- 1 suc wb3c       188 May 10 11:56 wb3cThe files in /var/lib/suc belong to suc; only suc can read and write those files 5.Any other user, such as alice, may read some of the files (e.g. banane), provided she belongs to the appropriate group (e.g. c3n).With this configuration, suc does not need to care about access control at all. For example suc need not match a user against the list of authorized readers or writers of a channel.Instead, usuc6 will just happily always try to read or write the file. The kernel will do the matching and prevent any unauthorized access.On the dam, everyone can start suc, whose effective owner will be the user suc, who has the right to write into any channel. By design, any user on the dam can request membership into a group by blindly writing a request to the group\u2019s channel.Less loosely-managed communities may wish to restrict channel write access to members only. root achieves this by maintaining multiple copies of the suc binary.Let\u2019s assume thatalice and bob belong to the blue group,while eve and mallory belong to the red group.root creates nobody-like7 users red and blue. She then creates two copies of suc, one for each group:ls -l /usr/bin/suc*total 32-rwsr-xr-- 1 red   red   15624 Jun 4 10:51 suc_red-rwsr-xr-- 1 blue  blue   15624 Jun 4 10:56 suc_blueAnd she also creates one channel for each team:ls -l /var/lib/suc/total 16-rw-r----- 1 blue   blue   11027 Jun 4 11:30 blue-rw-r----- 1 red   red   17  Jun 4 10:53 redOne can see that:alice and bob belong to group blue.They can read the blue channel. Indeed the file /var/lib/suc/blue belongs to group blue and has mode -rw-r----- : the second r means that members of the owning group (here, blue), can read the file (but not write to it).They cannot directly write to the file. Only user blue can.They can however launch the /usr/bin/suc_blue program, because group blue owns it, and it has mode -rwsr-xr-- . The x means that members of the owning group (here, blue) can start the program.This program will run with user blue as the effective owner: User blue owns the file and root has set its setuid bit (the s in the mode line says so).Therefore, alice and bob, being members of the blue group, can launch the /usr/bin/suc_blue program, which being effectively owned by user blue (despite being launched by alice or bob who will be the real, but not effective owner) can write to the /var/lib/suc/blue file.eve and mallory belong to group red (but not group blue).They cannot read the blue channel. Indeed, people other than user blue or members of group blue have no rights on the /var/lib/suc/blue file (the end of its mode line is ---).They cannot write to the blue channel directly, only user blue can.They cannot start the /usr/bin/suc_blue program, because they do not belong to group blue. The only thing they can do to this file is read it (its mode line ends in r--).Therefore they can neither read nor write the blue channel.To relieve root from the cumbersome and error-prone process of setting this all up, suc provides an 80-something-lines long helper script called suc_channel.sh.GNU Guix users can create a suc channel by adding a single line to the system\u2019s configuration file:(suc-private-channel \"red\" \"red\")This line takes care of creating the necessarysuc_red setuid binary,red userred groupred channel file.Here, GNU Guix\u2019s declarative configuration paradigm shines again. The suc_channel.sh script may fail halfway, leaving the system in an undetermined state, whereas GNU Guix provides transactional updates: either the transition happens fully or it does not at all. The system always stays in a known clean state. One can even roll-back to a previous working state (see Multi-dimensional transactions and rollbacks, oh my!).GNU Guix also automatically computes which groups, users, and setuid binaries should exist on the system. When root removes a private channel (e.g. red), she must assess whether the associated group (also named red), user (also red), and setuid binary (suc_red) should stay or go. That entails looking at the other channels to see if any of them is still owned by user red or group red. Again, a cumbersome and error prone task whereas on GNU Guix, root just removes the channel\u2019s line from the system declaration. The red group, red user, and suc_red binary will stay if and only if another part of the system needs them.As an illustration, here is a full system declaration for the above example. One can hardly be simpler than that.(begin (use-modules    (gnu packages base)    (guix gexp)    (beaver system)    (beaver packages plan9)    (beaver functional-services))    (-> (minimal-ovh)      (ssh-user \"alice\"  #:groups '(\"suc\" \"blue\") #:keys '())      (ssh-user \"bob\"   #:groups '(\"suc\" \"blue\") #:keys '())      (ssh-user \"eve\"   #:groups '(\"suc\" \"red\") #:keys '())      (ssh-user \"mallory\" #:groups '(\"suc\" \"red\") #:keys '())      (suc-private-channel \"red\" \"red\")      (suc-private-channel \"blue\" \"blue\")      (suc-public-channel \"purple\")))Fancy textWe have seen how suc is security-agnostic, relying on:ssh for authentication,UNIX\u2019s file and process ownership and permission model for access control.Let\u2019s now dive into the featureful side of things by first looking at some bells and whistles: rich text.Most chat applications nowadays piggyback on an HTML engine to render the chat\u2019s text. For example mattermost\u2019s client uses Electron. There go another few tens of thousand of lines of code.On the one hand, this adds tremendous complexity and increases the attack surface of the application. On the other hand it lets the chat display elements in a complex layout, or embed interactive widgets within the messages (such as emoji reactions), etc.suc uses one file per channel. This text file is meant to be displayed to the user with a command-line tool such as tail or cat.Before everything got shoehorned into an HTML rendering engine, people managed to display rich text, boxes, and even primitive graphics on their terminals. These capabilities more-or-less coalesced into something called ANSI escape codes8. Almost all terminal emulators support those. Together with proper UTF-8 support, they allow for the colorful, emoji-filled experience of your average corporate slack channel, with ~5% of the memory footprint.If you paid attention to the 5 lines of bash that suc consists of, you have noticed that while suc writes into the channel file, it does not read from it.This job befalls to usuc. Why two separate binaries ? Because suc is a privileged binary, which runs under the powerful effective ownership of whoever can write to a channel. One must be careful to keep the logic and external dependencies of suc to a bare minimum to minimize the attack surface, and avoid any complex logic where bugs like to hide.usuc, conversely, runs with both effective and real owners set to the calling user. It can go crazy with the features, as whatever happens can not impact the channel file, except through suc, whose logic is so simple there should not be any bugs in it.Here is as of <2023-06-29 Thu> the code for usuc:#!/usr/bin/bashset -euo pipefail# Autowrap self in rlwrapif [ -z \"${RLWRAP:-}\" ]then  RLWRAP=1 rlwrap \"$0\" \"$@\"  exit 0fichan_owner=$(ls -l /var/lib/suc/\"$1\" | cut -d' ' -f 3)if [ \"$chan_owner\" != suc ]then  SUC=suc_\"$chan_owner\"else  SUC=sucfi# Tail the channeltail -f -n 20 /var/lib/suc/\"$1\"&while truedo  read -r line || exit 0  if [ \"${line::1}\" == \":\" ]  then    echo '*runs* `' \"${line:1}\" '`' | pygmentize -l md -f 256 | \"$SUC\" \"$1\"    bash -c \"${line:1}\" | \"$SUC\" \"$1\"  else    echo \"$line\" | pygmentize -l md -f 256 | \"$SUC\" \"$1\"  fidoneusuc:makes sure to prefix its own call with rlwrap, which provides history and line editing capabilities,selects the correct setuid suc binary to run depending on who owns the channel file,calls tail -f, displaying the last 20 lines of the channel and then anything that get subsequently written to it,check whether the line typed by the user starts with \u201c:\u201d (see the next section),pipe anything the user typed through pygmentize.Pygmentize is a nifty Python module for syntax coloring. Here it runs expecting markdown on its standard input, and outputting ANSI color coded text on its standard output. That way, a user can use markup syntax like **bold**, and get bold output. suc gets markdown support in a single line of code.Chat commandsOther tools can, like pygmentize, output ANSI-styled text. One of those is e.g. gum.To invoke gum directly from the chat interface, one just has to start a message with :. usuc will catch that and will not pipe the text to suc like it would for a normal message. It will instead run the command, and pipe its output to suc.One can therefore type:: gum style --border=rounded --bold --foreground=#F00 \"Hello World !\"as a suc message and see something that looks like the following appear in the channel:\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\u2502Hello World !\u2502\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256fAny command that exists in the namespace of the user who called usuc can run that way. Its output will appear in the chat.We use that on the dam to roll dice when we play table-top role playing games:: roll 2d62023-04-13T21:04:57+00:00 gm    *runs* ` roll 2d6 `2023-04-13T21:04:58+00:00 gm    [6, 2]Again, it all happens in the namespace of the user. Any user can customize her environment to keep useful chat macros on hand, without any impact on the other users.Piping text to sucInstead of using usuc\u2019s command-calling facility, one can pipe right into suc the output of any command, from one\u2019s shell.For example if you want to pretty-print a piece of source code to a relevant channel, you can invoke bat:bat --force-colorization --paging=never --style=full toto.c | suc greybeardsand you will get a syntactically-colored listing of your code in the channel.Complex chat system like Mattermost, Slack, etc. offer many integrations, that is, ways to interact with other software.suc is text-based ; integrating it with other tools feels natural in a UNIX environment. For example consider the following bash one-liner:make test > testlog || (suc devops < testlog ; exit 1)This code will run the tests of a software project, and send the logs to the devops channel on failure.With the necessary boilerplate, this oneliner fits into the git hook update of a git repo:#!/usr/bin/bashset -euxo pipefailnewrev=\"$3\"GIT_DIR=$(realpath \"$GIT_DIR\")cd \"$(mktemp -d)\"git clone \"$GIT_DIR\" .git checkout \"$newrev\"make test > test_log || (suc devops < test_log ; exit 1)exit 0And voil\u00e0 ! You get a git/suc integration in 11 lines of bash. Any push to the repo will trigger the test, reject the update on failure, and ring the DevOps team so they can solve the problem.Reading from a suc channelsuc users continually update a text file (the channel). By calling tail -f on that text file, you can process the new lines as they arrive.For example, to get notified when a new message gets posted in a channel, just run:tail -n0 -f /var/lib/suc/some-chan | (while true;                   do read -r line;                     notify-send \"$line\";                   done)Too many notifications ? Reduce the noise by grepping for keywords:tail -n0 -f /var/lib/suc/some-chan | \\  stdbuf -i0 -o0 grep -E \"(myname|build failure|fire)\" | \\  (while true; do read -r line; notify-send \"$line\"; done)Don\u2019t want to open as many windows as channels you follow ? Coalesce them all in a single feed:tail -f /var/lib/suc/*Or use the more powerful lnav (a log file viewer), which willremember where you left off,set bookmarks,assign a color to each channel,parse the date, username, or any custom field that may appear in the text,let you filter the messages,run SQL queries on the messages.Try to do that with Slack\u2026BotsIf you can write and read to a suc channel, you can do both at once. Chat systems often host bots and semi-automated \u201cassistants\u201d. These provide a text-based interface to e.g. tickets, continuous integration, corporate directory, server logs, etc. Have a look below at the code of a bot that convert into meters any length given in feet:#!/usr/bin/bashfeet_to_meters (){  feetexpr=\"$1\"  echo -e \"$feetexpr \\n m\" | units | grep -Eo \"\\* [0-9.]*\" | tr -d '*'}tail -n0 -f /var/lib/suc/\"$1\" | \\  stdbuf -i0 -o0 grep -v \"metric_bot\" | \\  stdbuf -i0 -o0 grep -Eo \"[0-9]+[[:blank:]]*(feet|ft)\" | \\  (while true;   do read -r line;    echo \"[metric_bot] $line is $(feet_to_meters \"$line\") meters.\" | suc \"$1\"   done)2023-06-30T11:20:47+02:00 edouard  The plane flew at 33000 ft.2023-06-30T11:20:47+02:00 bots   [metric_bot] 33000 ft is 10058.4 meters.Conclusionsuc piggybacks on SSH for authentication and on UNIX for access control and composability. It provides almost all the features offered by Mattermost, Slack, etc. with such a ridiculously small fraction of the code that one wonders why such complex systems even exist.Using text files as the base for suc channels lets user leverage UNIX tools for reading (tail, bat, lnav, less, grep, etc.), writing (gum, bat, pygmentize, etc.), or semi-automated extension with bots, hooks, and scripts.Tools can be written in any language, as long as they read and write text.AdvertisementIf you want to play with suc but don\u2019t want to bother with installing it, or if you don\u2019t have any friends to share a suc instance with, come and join us at the dam ! For a measly 10\u20ac/year, you can enjoy sharing suc on a GNU Guix server with people from all over the world.If you would like your own instance of suc, don\u2019t hesitate and rent a VPS from Guix hosting ! For 100\u20ac/year, you get a GNU Guix VPS. Adding suc is just one line of configuration away. There are no usage-based restrictions, your data stays yours, and you can use your VPS to provide other services as well.Footnotes:1in the dam case, GNU Guix, but suc itself contains no Guix- or even Linux-specific code2Usually done by calling usuc <some-channel> on the command line3configured with Beaver Labs\u2019 channel (see https://gitlab.com/edouardklein/guix)4UNIX exposes this capability through something called the setuid bit.5If you do not understand the -rw-r----- output of the command above, I recommend section 2.4, \u201cPermissions\u201d of Brian W Kernighan and Rob Pike, The UNIX Programming Environment, (Prentice-Hall Englewood Cliffs, NJ, 1984).6usuc extends suc with bells and whistles, see below.7nobody is usually a passwordless, shellless user who owns no files, to whom ownership of a process is transferred when one wants to prevent said process from being allowed to do any damage on the system.8This is a very deep rabbit hole. If you want to dive in, I\u2019ve found good starting points to be: Nick Black\u2019s \u201cHacking the Planet (with Notcurses). A Guide to TUIs and Character Graphics\u201d, the relevant section of the VT100 manual, or this list of animations.",
    "summary": "- Simple Unix Chat (suc) is a minimalistic chat system that offers real-time, rich-text chat, file sharing, access control, automation, and encryption.\n- suc is implemented in just five lines of bash, making it incredibly lightweight and efficient compared to other chat systems like Mattermost or Slack.\n- suc leverages SSH for authentication, UNIX's access control API for user permissions, and ANSI escape codes for rich text display, resulting in a secure and feature-rich chat experience with minimal code.",
    "hn_title": "Simple Unix Chat",
    "original_title": "Simple Unix Chat",
    "score": 375,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginSimple Unix Chat (the-dam.org)375 points by marban 1 day ago | hide | past | favorite | 157 commentsmemetomancer 21 hours ago | next [\u2013]I'm immediately reminded of \"Master Foo and the Ten Thousand Lines\":http://catb.org/~esr/writings/unix-koans/ten-thousand.htmlMaster Foo once said to a visiting programmer: \u201cThere is more Unix-nature in one line of shell script than there is in ten thousand lines of C.\u201dreplynumpad0 1 day ago | prev | next [\u2013]I think the intuition would be that if a determined \"core\" feature set of something is so easily and trivially reproduced, then it's not the core/source of its value.Which makes me wonder: Just how much of UI development had software engineering had consumed and automated since 1980s, or is it still in the realm of pure human art?replypjlegato 17 hours ago | parent | next [\u2013]This is correct. The core value-add of e.g. Slack is not actually \"transmit messages between authenticated users.\" There were dozens of other applications, both commercial and open source, that already did exactly that when Slack came out and killed them all off.The core value proposition of Slack is next-level beyond that: it adds a visually appealing, highly intuitive UI/UX that almost anyone can sit down and immediately use, without any studying or setup or manuals or training. No technical skills are required. You don't need to understand anything beyond \"type username and password\"; the rest is self-explanatory.replylinschn 1 day ago | parent | prev | next [\u2013]This is a very astute way to look at it. I'd say then that the value of Slack is to be user friendly, which suc definitely is not for muggles.But then more difficult questions arise: - Is the price of slack worth it, when the alternative is having more educated users that can do very basic command line calls ? - Same question, but taking into account that Slack captures your data and won't give it back to you ? How expensive is it to leave Slack ?Sure, suc sucks, but we probably could converge on something less bloated and proprietary than Slack ?replylelanthran 1 day ago | root | parent | next [\u2013]> But then more difficult questions arise: - Is the price of slack worth it, when the alternative is having more educated users that can do very basic command line calls ?I'm not sure that it would be difficult to wrap that up in a web interface running on a single server that does nothing but execute those command-line calls - auth, data and everything but session would be managed by the web server.You could perhaps even make a local GUI application that spawns ssh once and reads+writes to it, and have your 90% slack functionality done in a weekend.replynumpad0 5 hours ago | root | parent | next [\u2013]I'm not sure where to post this reply but I have a hot take cooking up for about a week now: Is it too crazy to just leave a clustered SQL DB open to the Internet, static asset on S3, and call it THE backend of a social-* (-networking, -game) app? It's mostly SQL anyway. Maybe a message signing system like IPsec auth header can be set up with a client cert, and TLS packet encryption can be dropped, if it's going to be public data or data is to be advertised as \"e2e encrypted\". Isn't that going to cut a lot of backend cost?replysharikous 1 day ago | root | parent | prev | next [\u2013]Yes and this GUI application should be cross platform so make it Electron.Wait, there has been a leak from the company so we need some security staff on it and maybe mandated TFA.And it's nice to have a way to call people and not only chat.I wonder if there is already an app that does that, even if it's bloated it would be more convenient...replylelanthran 1 day ago | root | parent | next [\u2013]> Yes and this GUI application should be cross platform so make it Electron.Why? What's wrong with Qt? or any of the other x-platform UI toolkits I already use to target Windows, Linux and Mac?(Your other points are irrelevant. I never claimed that suc will match slack 100%, feature for feature).replyrevelio 18 hours ago | root | parent | prev | next [\u2013]That can be done just with an ssh:// URL handler. It already works on macOS, you can open terminals with an ssh session direct from web pages.replylelanthran 17 hours ago | root | parent | next [\u2013]TIL :-)I did not know that. Can confirm that it works in FF on Linux.replyrealitythreek 19 hours ago | root | parent | prev | next [\u2013]Is suc scaleable? I didn\u2019t see any discussion of managing conversations across a cluster of ssh-capable hosts and you\u2019re not going to support more than a few thousand with a single ssh server.replylinschn 18 hours ago | root | parent | next [\u2013]This is something I would like to explore. If I had to guess now, I would think that the management of many open handles on a single file by the kernel is going to be more limiting than ssh.But I'd also wager we can go quite far with a single cheap VPS. A few thousands user does not seem impossible at all.replyyayitswei 16 hours ago | prev | next [\u2013]Would be interesting to compile a \"spawn of unix\" diagram similar to the craigslist diagram, of startups that carve out niches of unix functionality.https://thegongshow.tumblr.com/post/345941486/the-spawn-of-c... ftp/rsync => Dropbox suc => Slack ...reply000ooo000 1 day ago | prev | next [\u2013]As a feat, I like this. It's cool to see what can be achieved with composition. That said, I don't care much for the comparison to Slack etc. No engineer wants to be on the hook for a bunch of things cobbled together like this in production. How are you going to hire talent? How do you test the thing? Debug it? Logs? Analytics? This piece replicates (some of) the chat functionality of Slack et al but the chat functionality is not 100% of these applications. They're built in completely different environments, and so to attack the status quo as bloated seems like some kind of warped Stockton Rush esque take on things. Don't get me wrong, there's bloat in software, but \"look ma', I built a submarine from bits and pieces - told you those fancy submarines are stupid\" doesn't seem like the put-down I think the author would like it to be.replymid-kid 1 day ago | parent | next [\u2013]> No engineer wants to be on the hook for a bunch of things cobbled together like this in production. How are you going to hire talent? How do you test the thing? Debug it? Logs? Analytics?The point was that most of these things become less relevant when the surface area of the codebase gets smaller. Individual utilities are generally easier to understand, test and debug as separate units, logging is already baked into the system (syslog, anyone?), and why would you need analytics?replyTheIronMark 18 hours ago | root | parent | next [\u2013]As a development exercise, this is neat, but its extreme focus on software dev makes it just that: an exercise. Slack incorporates all of the extra stuff suc ignores because it's a service; you're paying for someone else to handle the integrations for access control and authz and such.Homegrown solutions require varying levels of support. Something like Slack is predictable and that makes it attractive, from a business perspective.replylolinder 21 hours ago | root | parent | prev | next [\u2013]So what do you do when your customers say \"this is great, when are you adding screen sharing\"? Where do voice calls fit into this architecture, do we just add another UNIX util and stream the bits over SSH?Furthermore, debugging may be \"easier\" insofar as the units are discrete (though any good modular architecture will have the same advantage), but what do you do when you find a bug? If you're running a business, you can't be in a place where you're just submitting it upstream and telling your customers that every single bug is waiting for a vendor fix. So now you have to take ownership of maintaining and repairing each and every UNIX utility you use. In what world is that easier than having 500k lines of Go in a consistent company style?Joel Spolsky's advice is pertinent [0]:> If it\u2019s a core business function \u2014 do it yourself, no matter what.https://www.joelonsoftware.com/2001/10/14/in-defense-of-not-...replyrevelio 18 hours ago | root | parent | next [\u2013]You can't fix bugs in Slack so that seems hardly comparable.Screen sharing and video calls can be handled by other apps like Zoom, Google Meet etc.replylolinder 16 hours ago | root | parent | next [\u2013]I'm not talking about self-hosting suc, I'm arguing that all those extra lines of code in Mattermost (and presumably Slack) aren't doing nothing\u2014a lot of them are a necessity if you're selling a software product.replynorir 15 hours ago | root | parent | next [\u2013]Sure, there is a lot of code that is doing something, but is it doing the right thing correctly and efficiently? It's likely that a > 500k sloc project is filled with low quality and inefficient code. I'm pretty sure this is a natural law. The only way to limit this is by placing quality and efficiency among the highest virtues, which is essentially anti-capitalist.replybenrutter 1 day ago | parent | prev | next [\u2013]This was my take as I read it too. It's definitely a great piece of engineering and I really enjoyed reading about it, but comparing it to Slack rather than just IRC feels disingenuous.That said, I'd be really interested in what tools like Slack would look like if they aggressively pursued simplicity ahead of new features. Capitalism as a whole doesn't seem to encourage this kind of development, so there aren't many examples in the wild of enterprise software that is as simple as it could reasonably be. Nonetheless, it's an interesting thought experiment.replyrakoo 1 day ago | prev | next [\u2013]See also ii (https://tools.suckless.org/ii/) doing something similar but on irc directly: use a single standard file for all conversation, auth and access is managed by the irc network directly and there are many UIs already. Like the article, a plugin is anything that reads a file and writes into another.replyrnmmrnm 1 day ago | parent | next [\u2013]or jj (https://github.com/aaronNGi/jj) in awk.replyspicybright 1 day ago | prev | next [\u2013]In case you're passing over this because it sounds like click bait (it KIND OF is), this was actually a good read to me.It goes over a utility called \"suc\" (Simple Unix Chat) that implements server functionalities from Slack, Discord, etc. using a very small codebase.The novel part is it leverages existing unix tools and methodology instead of re-inventing them.- Auth is handled by SSH.- Channels are just a file and admin/mod controls are handled by user groups and file permissions.- Support for rich text, file uploads, etc. aren't a concern as you just write whatever data you want to the channels and let the client interpret it.- Bots are very easy as you just pipe to/from the channel files.You're not going to be making a perfect slack clone with the 5 lines that write messages to the channels from the article, but I'm pretty impressed how far you can with really simple unix tools.replydexen 22 hours ago | parent | next [\u2013]\"Append-only files\" would be a great fit here: to ensure regular users and bots don't modify others' posts. Sadly this Plan 9 functionality is not ported to Linux yet. That's a permission bit, similar to \"read\" or \"write\", but even more specific.replyHerrMonnezza 16 hours ago | root | parent | next [\u2013]IIRC, Linux' ext2/3/4 support an 'a' attribute that make a file append-only.replyComodoHacker 22 hours ago | root | parent | prev | next [\u2013]Not so great if you're talking about real use cases where moderation is mandatory.replyPannoniae 20 hours ago | root | parent | next [\u2013]Moderation is never mandatory, it's just something most people desire.replylinschn 18 hours ago | root | parent | prev | next [\u2013]The host owner (there's no root on Plan 9) can change those permissions and edit the file if need be.replynonethewiser 23 hours ago | parent | prev | next [\u2013]> The novel part is it leverages existing unix tools and methodology instead of re-inventing them.That pretty much always explains the \u201cX in unfathomably few lines of code.\u201d No faulting the other, he was very upfront about this.replylynx23 1 day ago | parent | prev | next [\u2013]Wait, KISS is a novelty? :-)replyTeMPOraL 1 day ago | root | parent | next [\u2013]Novelty? More like the ways of our great grandparents.replycornel_io 1 day ago | parent | prev | next [\u2013]Slack to most end users is the client, though. As well as the admin, user management UI, scalability, webhooks, etc, absolutely none of which is handled by \"you can chat with other users in Linux if you all log into the box\" which every *nix has had since before most readers here were born.replylinschn 1 day ago | root | parent | next [\u2013]Indeed ! The question is whether all that is worth so many engineer-hours. I'm not advocating for all Slack channels to be replaced by suc, that would be silly. I'm just pointing out how costly it all is. There's got to be a middle ground that does not require hundreds of thousands of lines of code.replydclowd9901 1 day ago | parent | prev | next [\u2013]Big emphasis on \u201ckind of\u201d.\u201cHere\u2019s how to make $2 million dollars over night\u201d_reads article_: \u201chave $4 million in the bank\u2026\u201dreplycassepipe 1 day ago | root | parent | next [\u2013]I laughed reading your comparison but I don't agree. I clicked waiting for a shallow trick and found that there was indeed a trick, but not a shallow one at all This ability to bring complex capabilities to a chat system by leveraging so much of its ecosystem is truly amazing. Definitely worth the hn front page. And you only need basic shell literacy in order to use it, little more to understand itreplyBenLloydPearson 20 hours ago | root | parent | next [\u2013]I came for the clickbait title, I stayed for the unique, yet simple, approach the author took and how they explained the examples.replyqudat 1 day ago | prev | next [\u2013]Slack and discord have screen sharing and voice chat. These are not sideline features. They are pretty critical features to its market dominance.replyleovander 1 day ago | parent | next [\u2013]Critical yet feels like they are going down in quality.replyjustrealist 1 day ago | root | parent | next [\u2013]99% of the issues I've seen for these features have been the OS making it increasingly a pain in the ass to grant an application permission to gain full-screen control or camera/mic access.Not really Slack's fault as far as I can tell.replyduped 17 hours ago | root | parent | prev | next [\u2013]How so?replyanonym29 1 day ago | prev | next [\u2013]I understand the blog post here is about suc, and it is acknowledged immediately and honestly that the headline is slightly misleading, but there's an important message here that ultimately has nothing to do with suc.Almost all modern software is bloated to hell. The idea that one would need 1.7 million LoC for a rich chat server is absurd. To paraphrase Bill Gates, I don't think I could \"spend\" that many lines of code on a rich chat server if I tried.Kudos not for simply calling attention to the problem, not for simply proposing an alternative, but for reminding people that the wheel need not be reinvented - cleverly implementing existing systems & subsystems to utilize their properties (e.g. ssh for authentication and encryption) in a manner that meets the intentions of those properties but not the originally imagined purpose of the system or subsystem is as good an example of the hacker ethos as any, and the software world would benefit immensely to draw from this concept. Lower costs, shorter development timeframes, and less engineering hours wasted rewriting functionally identical code is good for the developer, good for the company doing the developing, good for the end user, and ultimately good for humanity.I wish to see a lot more of this kind of creative destruction and will try to implement such clever techniques in future projects myself.replylolinder 1 day ago | parent | next [\u2013]FWIW, most of the TypeScript lines of code are in the E2E tests[0] and the webapp dir [1], which, as the name suggests, contains \"the client code for the Mattermost web app\". So we should really only be counting lines of Go code.[0] https://github.com/mattermost/mattermost/tree/master/e2e-tes...[1] https://github.com/mattermost/mattermost/tree/master/webappreplylinschn 1 day ago | root | parent | next [\u2013]I'll edit the article accordingly, thanks for looking into it.replybandrami 1 day ago | parent | prev | next [\u2013]I once was in a meeting about which web authentication framework to use for a site that ran so long because of bikeshedding that I implemented during the meeting and demoed at the end a solution based on the fact that HTTP already provides an authentication facility.replyGigachad 1 day ago | root | parent | next [\u2013]HTTP auth is vastly insufficient for most use cases. You are missing passwords resetting, 2FA, bot/abuse detection, and probably a whole collection of other stuff. I\u2019m also not sure if passwords manager extensions can prefill them. As well as the fact that the login form is only 1% of what an auth library does.replysimonjgreen 1 day ago | root | parent | next [\u2013]They didn't actually say they used basic Auth :) (although it's a reasonable assumption)I think the principal here is not reinventing wheels.replysimfree 1 day ago | root | parent | prev | next [\u2013]HTTP basic auth? It works well on everything except iOS.replyphotonerd 1 day ago | parent | prev | next [\u2013]While I agree in principle, a lot of the bloat is due to trying to have one codebase for a lot of different platforms.This is generally a good ideas as it increases the speed you can ship & reduces the size of the org.But there\u2019s a big trade off: complexity & abstraction.The higher level your abstractions the worse it gets too.So it\u2019s not without reason.replyjesuspiece 1 day ago | root | parent | next [\u2013]also to make it user friendly. I know we're on HN so we're all tech people but this is super nerdy stuff lol. This would never get mass adoption like tools like Slack have that work across multiple platforms, including mobilereplylinschn 1 day ago | root | parent | next [\u2013]Yeah, mobile is tough. Termux works, but not as a comfortable experience as whatsapp. I'll see what I can cook up.Indeed, multiplatform is very very costly.replylinschn 1 day ago | parent | prev | next [\u2013]I want to thank you sincerely for capturing the sentiment of the piece. This is exactly what I had in mind and I'm genuinely happy you were able to get that from the text :)replyalexpotato 21 hours ago | prev | next [\u2013]This reminds me of this article about using command line tools vs hadoop:https://adamdrake.com/command-line-tools-can-be-235x-faster-...replymappu 1 day ago | prev | next [\u2013]Most current distros prevent you from making setuid bash scripts, on security grounds. But you can get most of the same effect with a specific sudoers entry.replylloeki 1 day ago | parent | next [\u2013]> Most current distros prevent you from making setuid bash scripts_any_ shebang script really... except perl scripts, because perl has taint mode turned on automatically when uid != euidhttps://perldoc.perl.org/perlsec#Taint-modeNote that there may be a fundamental race condition on some systems:https://perldoc.perl.org/perlsec#Shebang-Race-ConditionAlso see the noted use of `sudo -T`:https://perldoc.perl.org/perlsec#Using-SudoI lament the recent removal of taint mode from Ruby :( as tainting is a powerful mechanism that could go way beyond scripts: imagine Rack / Rails #html_safe but via tainting so it could have worked more thoroughly (e.g concatenate/interpolate/format a tainted user string into a SQL snippet would blow up, preventing a whole class of SQL injections by design)Some folks used to use taint for CGI/mod_perl to such great effect. It's not a magic bullet by any means (security is hard!) but it's a really effective tool still.replylinschn 1 day ago | parent | prev | next [\u2013]I use a C wrapper that calls the shell script. Ugly, and I need to harden the script a bit more, but it works :)https://gitlab.com/edouardklein/suc/-/blob/master/suc_wrappe...replythrowawaymobule 12 hours ago | parent | prev | next [\u2013]Is there even distros that let you do it? When I wanted to do this myself all things I read led me to believe that the setuid doesn't apply because the file itself isn't running, the thing in your shebang is.Until I found the wrapper file in the GitLab repo, I was holding out hope as I read through that there was some way.replychias 17 hours ago | prev | next [\u2013]In general, composing Unix commands is a very powerful means to construct complex applications... poorly, with no real pathways to fixing their shortcomings. I believe the traditional \"Unix Way\" is to gloss over said shortcomings and pretend they don't exist, and when that fails, move the goalposts and argue that they don't exist \"in the real world\".For example, what combination of shell commands can I use to output the number of files in a directory?Hint: it's a trick question, you can't.replytoast0 16 hours ago | parent | next [\u2013]  find . -type f -depth 1 -print0 | tr -d -c '\\000' | wc -cGNU find has a -printf which would probably avoid the need to use tr. Personally, two hardlinks to the same underlying storage counts as two files to me, but I understand why you might disagree. I'd bet there's something out there that could give you only the count of unique storage areas, but I don't know how that interacts with deduplicating filesystems.replychias 14 hours ago | root | parent | next [\u2013]Nice! This wins :)I had to modify it a bit to get it to work cross-platform, but the approach does appear to be sound:  find . -maxdepth 1 -type f -print0 | tr -d -c '\\000' | wc -cI had originally written \"Hint: it probably isn't what you think it is, if it's even possible\", but after testing for a bit, I updated my comment in what was apparently a fit of hubris to say you couldn't.replytoast0 14 hours ago | root | parent | next [\u2013]I had seen the original comment, but people are always telling me things can't be done, even though I can do them. :Preplymemetomancer 17 hours ago | parent | prev | next [\u2013]|For example, what combination of shell commands can I use to output the number of files in a directory? Hint: it probably isn't what you think it is, if it's even possible.`find . -type f | wc -l`replychias 14 hours ago | root | parent | next [\u2013]This doesn't work. Try setting up a test directory as follows:  touch first$'\\n'file  touch .hidden$'\\n'file  mkdir folder$'\\n'.  touch folder$'\\n'./another$'\\n'fileThere are two files in the folder, or three if you want to count files in subdirectories too.Your solution incorrectly outputs 7.replyjcynix 16 hours ago | root | parent | prev | next [\u2013]Good first attempt. But: counts two links to the same file twice. That is:touch foo; ln foo barIs this one file or two \"links\" to the same file? ;-0replybandrami 16 hours ago | root | parent | next [\u2013]You said files, not inodes. Those are two files sharing one inode. If you want to count inodes, specify that in the question.replyjcynix 16 hours ago | root | parent | next [\u2013]I'm not the one who posed the question. And: file, filename, inode, ...? What's what and what's exactly to be counted?replypreseinger 14 hours ago | root | parent | prev | next [\u2013]absent further qualifications it is two filesreplynixpulvis 16 hours ago | parent | prev | next [\u2013]Mastering UNIX allows you to pull tools out of a toolbelt and adapt to the situations as the arise. No one tool should solve every job. You can happily ignore problems that aren\u2019t relevant to the issue at hand. Two servers need to talk to each other behind a strong firewall in a private network, sure, skip complex authentication setups. Knowing how to build in layers is good engineering practice.Whereas large scale enterprise commercial solutions make money by selling you on complete solutions that force you to relearn everything their way from the ground up. Just look at how AWS has hijacked so many concepts from the modern web and trapped people into building \u201ccloud-agnostic\u201d wrappers to try and wrangle the mess. Still we\u2019re mapping onto their redesigns of the same old stuff.At some level it\u2019s unavoidable, hardware vendors need to agree on instructions after all, but when looking at the situation from a high level, it\u2019s best to keep our ideals in mind and steer the ship so-as to find ourselves in paradise not lost in a sea of pirates.One ideal: Modularity. Promotes healthy competition. Another ideal: Simplicity is more easily achieved when modular components may be used (and tested) in isolation.replyJdeBP 16 hours ago | parent | prev | next [\u2013]It isn't what I think it is?Oh.Then it must be:  command ls -F directory | grep -v '[/@]$' | nl | tail -n 1 | cut -f 1(-:replychias 14 hours ago | root | parent | next [\u2013]This doesn't work. Try setting up a folder as follows:  touch first$'\\n'file  touch .hidden$'\\n'file  mkdir folder$'\\n'.  touch folder$'\\n'./another$'\\n'file  mkdir normal  touch normal/whateverThis folder has two files in it, or four if you count files in subdirectories.Your solution incorrectly outputs 3.replysiilikuin 17 hours ago | prev | next [\u2013]Chapter 8 of The Linux Programming Interface mentions that applications running on Linux have basically 2 options for authentication:* Roll it themselves, maintain the database and all that jazz * Delegate it to the (very robust, very mature) Linux user authentication stuffEver since reading that I've found myself wondering why more apps don't simply use SSH keypairs for authentication, given that they're already such a battletested mechanism. I get the whole \"no MFA!\" argument, but still.replythemoonisachees 17 hours ago | parent | next [\u2013]If we really wanted MFA, we could roll a PAM module, and whatever pushes SSH authorized keys could also push MFA seeds. But IMO this would protect against very unusual attacks and annoy ssh agents users everywhere.replythrowawaymobule 12 hours ago | root | parent | next [\u2013]Doing MFA for ssh like that would satisfy some compliance issues, wherever that matters. Probably key+pass.replypjlegato 17 hours ago | parent | prev | next [\u2013]SSH has supported MFA for decades: https://www.google.com/search?q=ssh+mfareplyeyelidlessness 1 day ago | prev | next [\u2013]> suc does all that by leveraging SSH, UNIX\u2019s access control API, and UNIX\u2019s text-based modularity.On any fair metric, this should inflate the volume of code metric for any project (whether leveraging those APIs directly or not). It would still favor this implementation on that front, and there are still other merits to the approach besides code volume. But something does irk me about touting supposed minimalism which externalizes almost all of its maximalism. Sure, the dependencies are probably there and sure, it\u2019s good to use the platform. But it\u2019s not a reasonable claim that \u201cfive lines\u201d can recreate any portion of any moderately complex software. Otherwise we\u2019d have \u201cSSH in five lines of bash\u201d and so on.replykitchi 1 day ago | parent | next [\u2013]I had a similar thought. But it also struck me that \"externalising the maximalism\" by using a library like the unix ssh implementation is probably the best way to go about it, since it's a widely used well tested library that implements a complex use case.In scientific programming I'd say that's the same as using a library like GSL, BLAS or even numpy. The net impact on LoC in my project is minimal, even though it could potentially be calling thousands of lines of code. The point is that from a maintenance perspective I only need to maintain 5 or 10 lines, and if I find a bug in there I can file a bug report upstream, rather than maintain the complex details of the implementation.The title is being a bit smart-ass for clicks and the author admits as much right at the top. But beyond that it's pretty great that they implementated a fairly basic version of slack with standard unix tools in a straightforward way.replyeyelidlessness 1 day ago | root | parent | next [\u2013]> But it also struck me that \"externalising the maximalism\" by using a library like the unix ssh implementationNot saying this to be argumentative, only to emphasize the same conflicting dynamic I saw in the post: this is exactly the same rationale that people routinely lambast here about NPM and other sources of dependencies. It\u2019s libraries and frameworks all the way down. I\u2019m cool with that, I\u2019m just not cool with picking and choosing when it\u2019s cool without any particular principle.replypreseinger 15 hours ago | root | parent | next [\u2013]i think one important difference between externalizing complexity to unix tools like ssh, and externalizing complexity to npm libraries, is related to (for lack of a better term) quality controlany dingbat with a terminal can produce an npm library that you can use in your application, the level of quality control is basically zerobut it takes a pretty strong track record to get your software into coreutils, or really any base linux distributionto put it kind of cynically, i think there is an enormous difference between relying on ssh vs. relying on leftpad, gatekeeping based on competence measured over time is i think actually important and good to doreplybenrutter 1 day ago | root | parent | prev | next [\u2013]It's interesting to think about where such a principle would land.I think having five lines of code (well, it's more like 50 of so reading the article) with some key and reliable dependencies is better for maintainability than having no dependencies but a substantially larger code base. As you point out, there's definitely limits, and npm's left pad, is odd and is even packages are obvious example where the added dependency is less maintainable than implementing the code directly.replykelvinjps 1 day ago | root | parent | prev | next [\u2013]I think that the main difference is that unix tools are intended to work which each other. Therefore needing less line of code. As opposed on other systems.replylinschn 1 day ago | root | parent | next [\u2013]That was exactly part of the point I was trying to make with the article. The other, that I left unsaid but should probably add explicitly, is that Slack et al. run on a server with a kernel, but choose to ignore the access control capabilities of said kernel and instead chose to reimplement them. I think it is a shame, and more software should strive to be security agnostic instead of reimplementing access control for the umpteenth time.replyslooonz 1 day ago | parent | prev | next [\u2013]By that argument, you should count the codebase of the whole browser against slack.replydclowd9901 1 day ago | parent | prev | next [\u2013]It\u2019s disingenuous at the least and complete dickishness at the median.replyeyelidlessness 1 day ago | root | parent | next [\u2013]It\u2019s pretty valid disingenuity. It\u2019s just also pretty valid to identify as such.replydclowd9901 1 day ago | root | parent | next [\u2013]Did the title contain the disclaimer? I only found it after visiting the page.replyeyelidlessness 1 day ago | root | parent | next [\u2013]I didn\u2019t even see the disclaimer reading the page, I must have skipped it because it was pretty obvious.replyjamespo 1 day ago | prev | next [\u2013]I guess no one remembers ytalk then https://linux.die.net/man/1/ytalkreplylinschn 1 day ago | parent | next [\u2013]I should really mention it in the article. I actually tried to install and use it before writing suc but was unable to.replyagentultra 21 hours ago | prev | next [\u2013]It\u2019s cute and fun if you\u2019re the kind of person that enjoys terminal UI\u2019s and can keep an encyclopedia worth of CLI tools and options in your head.I don\u2019t enjoy Slack and the like due to the notification overload and FOMO burnout. The UI is a memory hog for what it does.But for the computer user that wasn\u2019t born at Bell Labs with a keyboard in their hands, it\u2019s pretty decent. If you can navigate gmail or a word doc you can probably figure out how to use Slack.replyrealitythreek 19 hours ago | parent | next [\u2013]Of the three (Slack, Teams, Discord) I actually prefer Discord. Its the easiest to use, the fastest, etc. Too bad that any corporation of size uses Teams or Slack.replyBenLloydPearson 20 hours ago | parent | prev | next [\u2013]I think part of the point the author was making is that rendering and interacting with the server can vary depending on the client you build. You could have a CLI client or a React client and build them with two completely different goals in mind. For example, monitoring and botting channels vs. end-user experience.replyliveoneggs 13 hours ago | prev | next [\u2013]This is different but I'm surprised it doesn't mention talk(1) https://man.netbsd.org/talk.1replypfych 1 day ago | prev | next [\u2013]Very cool! I love seeing things like this put together using just basic unix tooling. I dont know if I'd call it a slack clone though, but cool nonetheless.replyzokier 1 day ago | prev | next [\u2013]Unfortunately I don't see any real way to avoid suid here, otherwise neat experiment. Posix ACLs might help, but the crucial part is prefixing the username to the message which requires privilegeLots of unix facilities are criminally underutilized in modern systemsreplythrowawaymobule 11 hours ago | parent | next [\u2013]Run a daemon with the right userid to do the writing, and have it make a pipe device for each user to write lines into.I don't know how much effort is meant to be put into securing this from impersonation, but info can be pulled out of /proc/ if the permissions are set up right.replyzokier 1 hour ago | root | parent | next [\u2013]Hmm apparently there is this thing SO_PEERCRED which gives you the identity of the client connected to unix socket, that might fit here quite well.replybryancoxwell 20 hours ago | prev | next [\u2013]I\u2019ve always been really intrigued by the idea of building things as simply as possible and leveraging as many existing tools as I can to do so. My problem is that most of my projects require a web frontend which would mean calling bash scripts from Go (or whatever language I implement the server in). This just FEELS wrong, but I can\u2019t really articulate why. Am I wrong to feel that way or is there some good reason I\u2019m not seeing to not wire up bash scripts like this?replyericbarrett 20 hours ago | parent | next [\u2013]Unless you are writing very tight code (like for a real-time system, or something you know will be invoked millions or billions of times) then shipping > code golf. Bash away!replythemoonisachees 17 hours ago | parent | prev | next [\u2013]If your server is served by apache or ngnix, you don't have to call into PHP/other languages in order to return bash commands. You can define a route in which pages accessed are fed to a bash script and stdout gets piped back to the client.replyrevelio 17 hours ago | parent | prev | next [\u2013]Do they require a web frontend, or do you just want one? Because you could argue a chat program requires a web frontend, but suc doesn't use one regardless.bash is concise but there are other languages nearly as concise. It'd make more sense to use them rather than go+bash, once you cross the rubicon of not relying entirely on stuff that comes with UNIX out of the box.replylogicprog 16 hours ago | prev | next [\u2013]This is an incredibly cool Showcase of the power of Unix command line utilities and their composability. However, I have to say, as someone who recently got into amateur system administration for a server that hosts several services I and my friends use m, I would not want to be responsible for maintaining this!replylinschn 14 hours ago | parent | next [\u2013]Yeah in the tests I ran while designing it, it became apparent that keeping everything in order was kind of a pain. However, with Guix it actually becomes quite easy. There is not \"state\" in the system: the system is simply a function of your system declaration (the /etc/config.scm file) that defines the whole OS. No need to remember what to chmod chown, etc.replyKRAKRISMOTT 1 day ago | prev | next [\u2013]Unix default security mechanisms are not enough, otherwise tools like KVM/Firecracker and gVisor won't be the standard for all cloud hosting. Unix just wasn't built to sandbox truly hostile code.replyAeolun 22 hours ago | prev | next [\u2013]Well, yeah, if I use a bunch of other programs to do a bunch of stuff, and then don\u2019t include those lines in my total I can get pretty far too.replyCodeCompost 1 day ago | prev | next [\u2013]5 lines of bash...... and over 50 years of operating systems development.replylinschn 1 day ago | parent | next [\u2013]Exactly !Too many software project just ignore the underlying abstractions of the OS they run on. I feel weird with all this virtualization stuff, like we're missing something obvious.Rob Pike said in 2000 that systems research is irrelevant http://doc.cat-v.org/bell_labs/utah2000/ and I'd like to think that if we went back to simple tools like this we could make it somewhat relevant again.replyajsnigrutin 1 day ago | parent | prev | next [\u2013]and you still need to give ssh access to people just to chat :)replythemoonisachees 17 hours ago | root | parent | next [\u2013]The aforementioned 50 years of OS development have given us facilities through which you can very tightly control what access you give to ssh clients, in a tried and tested way.The authors are right when they say that sshd and unix users are probably the most frature-full auth scheme in existence.replyonetom 1 day ago | prev | next [\u2013]what do i do after i sign up to the-dam.org ? i did not get any email after the payment and ssh-ing doesn't work either. (i just get a `Permission denied (publickey)`)replylinschn 1 day ago | parent | next [\u2013]To HN readers: this has been sorted out, adding user is a semi-manual process and I was asleep :)reply59nadir 1 day ago | parent | prev | next [\u2013]Same for me. I suspect maybe they add the public keys manually and haven't gotten around to it yet.replylinschn 1 day ago | root | parent | next [\u2013]That's exactly what happened :) thank you.replycozzyd 12 hours ago | prev | next [\u2013]one nicety that Slack etc. can't match is that this works on a local network even if internet access is lost (and doesn't slow down with terrible network latency). Going to install this on our server on the Greenland ice shelf...replyaidenn0 17 hours ago | prev | next [\u2013]can someone post the following to a channel and delete everybody's home directory that reads it with usuc?  : rm -rf ~/[edit]They cannot. On careful rereading usuc passes the data through the pipe when writing a message, not reading it. So the channel is just full of raw terminal escape codes, if I understand correctly.replylinschn 14 hours ago | parent | next [\u2013]This is correct, the command is run by the user writing the message. Only the output lies in the channel.replyGigachad 1 day ago | prev | next [\u2013]How do I make a call with this?replyramses0 1 day ago | parent | next [\u2013]  cat /dev/audio | <( mkfifo && netcat )...semi-unironically...(whoops, forgot the gzip/gunzip filters...)replylinschn 1 day ago | root | parent | next [\u2013]I'm seriously considering trying something like this just to see if it works. TCP would kill it though (maybe?). But maybe UDP plus some clever ffmpeg invocation...replyramses0 17 hours ago | root | parent | next [\u2013]https://unix.stackexchange.com/questions/750015/send-alsa-au...https://bbs.archlinux.org/viewtopic.php?id=43896(circa 2008 people were doing this... semi-unironically ;-)replyshrubble 21 hours ago | root | parent | prev | next [\u2013]If you went with the heavier-weight use of Asterisk, you could have softphones authenticated to Asterisk, but, no inbound calls from the softphones would be accepted. Only if 1 user sought to call another would Asterisk \"dial\" each softphone; which might be sufficient in terms of security (you would have to have a working SSH account to be called).replyrvense 22 hours ago | root | parent | prev | next [\u2013]I think the main issue would be the buffering existing tools are likely to assume. You don't need more than a few hundred ms of latency for a phone call to start feeling really weird.replyeur0pa 1 day ago | parent | prev | next [\u2013]Use your phonereplyesafak 1 day ago | root | parent | next [\u2013]I suppose I should send an email instead of using suc then?replyshreyshnaccount 1 day ago | prev | next [\u2013]This is pretty cool. Only need to (re) solve the discoverability problem and we will have a better social network than twitter and reddit backreplykristopolous 1 day ago | parent | next [\u2013]Finger and whois.It was solved over 40 years ago.That's the thing with social networking. There's a few core problems and it's been solved many times. Such as in 1973 at Community Memory in Berkeley: https://en.wikipedia.org/wiki/Community_MemoryOr through newspaper classifieds ads, French salons, compuserve, bars, aol, cb radio, friendster, phone phreaking party lines, dialup bbses, icq, irc, myspace, Facebook, netnews, whois/finger/talk/uucp. If you read Carolyn Marvin's book, \"When old Technologies Were New\" (1988) you'll see her documentation of this in its first digital form - via lonely telegraph operators chatting with each other in the 19th century.It's the network, not the medium, that matters.replyshreyshnaccount 1 day ago | root | parent | next [\u2013]It needs to align with the evolution of content consumption, which I'm sure it can. That's why i said (re)replyshreyshnaccount 1 day ago | root | parent | prev | next [\u2013]This is a great take. Added the book to my listreplygalkk 1 day ago | prev | next [\u2013]Some claim that IRC is simple and one doesn't really need anything else.For some, IRC is the example why slack/discord won.replylondons_explore 1 day ago | prev | next [\u2013]Functionally, this is nearly the same as slack, but it's missing the aggressive venture capital funding and marketing team...replypeeters 1 day ago | parent | next [\u2013]In what way is its functionality \"nearly the same as Slack\"? Or are people these days just using Slack as a generic term for \"channel-based chat\" without acknowledging the long history of chat apps? (In which case I would argue it is much closer to the functionality of IRC, if still significantly short of it).replyesafak 1 day ago | root | parent | next [\u2013]I was pitching a related concept to a young investor lately, and she had not heard of IRC. If you stick around long enough, all that is old is new again. If you can profit from this, it's great. If you can't, it is a source of frustration.replylinschn 1 day ago | root | parent | prev | next [\u2013]I agree that Slack is much more featureful, but I fail to see what critical piece of IRC functionality is missing ? If anything, you don't need a bouncer for chat history with suc, so it's more featureful than IRC.With that said, I seldom used IRC so this is a genuine question for people who used it and miss some features.replyBenLloydPearson 20 hours ago | root | parent | next [\u2013]It's been years since I used/administered IRC, but I also think there are common misconceptions about what IRC actually is. At it's core, IRC is an incredibly basic tool, and most of the end-user features come from layering additional services on top of IRC, both at the client and server levels. These services can be pretty complex and cumbersome to manage, and in my opinion, never quite seem to solve the problem exactly. Persistent chat history is certainly the most glaring example.At the risk of becoming a meme, it's similar to how practically nobody uses Linux alone; it's almost universally accompanied by something like GNU.replyprogval 13 hours ago | root | parent | prev | next [\u2013]You don't need a bouncer for chat history when connecting to (the few) servers implementing https://ircv3.net/specs/extensions/chathistoryreplyraincole 1 day ago | root | parent | prev | next [\u2013]In the way a pen and a very long tape is \"same functionaltiy as a modern CPU\".replytwic 1 day ago | prev | next [\u2013]Thought this was going to be about ytalk!replypgtan 23 hours ago | prev | next [\u2013]This bash code is a parade example how NOT to write scripts.replylinschn 19 hours ago | parent | next [\u2013]What would you change about it ? I'd be happy to learn how to write better code.replypgtan 18 hours ago | root | parent | next [\u2013]OK, for starter the while loop. Main rule of writing shell scripts is, Use The Shell, Luke. Don't start external programs, if your shell (which is already running) can do it. \"while /usr/bin/true\" is nonsense, every time an external program gets executed for nothing. There are plenty of bash (since this shell is used in the example) internals, which evaluate to true, like \":\", \"test 1\", \"(( 1 ))\", maybe others too. So \"while :\" should be better. But why even use dummy true statement, since the loop terminates with read? You can put the read as argument to while directly: \"while read -r line; do\" ... Same with echo and date. Just use one single printf builtin.while read -r line ; do printf '%(%FT%T%z)T %-9s %s' -1 \"$(/usr/bin/id --user --name --real)\" \"$line\" ; donereplylinschn 14 hours ago | root | parent | next [\u2013]Thanks for the pointer about the useless use of true.Using builtins may be a security risk as they can be overloaded (hence the use of full paths everywhere).I did not know about bash's extension of printf to print a date. I need to use the builtin to use it though. But I've received good advice elsewhere on how to do that securely, so I'll do it and do a write-up because it's not information that's easy to come by.Your advice is very helpful, thank you.replypgtan 3 hours ago | root | parent | next [\u2013]for builtin security see for example https://unix.stackexchange.com/questions/102746/how-to-invok...replypeter_d_sherman 22 hours ago | prev | next [\u2013]>\"Half a million lines of Go, and again half a million lines of TypeScript. Just for the server !Let\u2019s compare with suc:suc can implement Mattermost\u2019s core features with 0.005% of the code. This is madness !\"Madness indeed! But that is also why this is such an awesome article! Upvoted and favorited!replylinschn 19 hours ago | parent | next [\u2013]Your enthusiasm made me smile :)replylynx23 1 day ago | prev | next [\u2013]While we are at bloated things reimplemented in a few lines of shell: https://github.com/mlang/openai-kiss is my CLI client for ChatGPT. No Python, just curl and jq.replyboffinAudio 22 hours ago | prev | next [\u2013]  $ rain | wall #.. my favourite thing to do to my colleagues during the end of coding marathons we'd find ourselves in, during the 80's ... on machines that weren't always fortified against the rain .. ;){replylinschn 19 hours ago | parent | next [\u2013]I couldn't make talk or wall work on a modern linux system. That's a shame.replythemoonisachees 17 hours ago | root | parent | next [\u2013]Just a few years ago in university the lab computers were running debian 10 and the sysadmin would make announcements about linux-specific infra outages through a script that ssh'd into every machine and wall'd the outage message.We would often get people using lab computers remotely and you could talk or wall them to tell them you were rebooting soon. Good times.replyboffinAudio 2 hours ago | root | parent | next [\u2013]I think the whole idea of using a Linux system as the host for a social network is an idea whose time has definitely come.Disclaimer: Have a \"The Wall\" account somewhere. What goes around, comes around ..replywfme 1 day ago | prev | next [\u2013]This is very reminiscent of the initial hn response to DropBox [0]. This is like saying that you can build a Tesla clone by attaching 3 pieces of wood together along with 4 wheels.Although it is technically cool, it misses practically all of what makes Slack so popular - UX.[0]: https://news.ycombinator.com/item?id=8863replydevmor 1 day ago | parent | next [\u2013]>it misses practically all of what makes Slack so popular - UXI strongly disagree. Slack has nearly the same UX as every chat platform of the past 2-3 decades. It's a slightly change over AOL Instant Messenger. There's also a large amount of very similar software or straight-up slack clones that are not very popular at all.I would say what makes Slack so popular is how easy it is to set up and get running, both as a service and for every user, combined with the availability of easy integrations/plugins.replythayne 1 day ago | root | parent | next [\u2013]> I would say what makes Slack so popular is how easy it is to set up and get running, both as a service and for every user, combined with the availability of easy integrations/pluginsThat is part of the User eXperience. I.e. UX.replymaxcoding 1 day ago | root | parent | prev | next [\u2013]What you are describing is quite literally the UX, the user experience, and Slack overall has quite a good one. Although several of the newer features are somewhat lacking in that regard, like the threads feature.replyonetom 1 day ago | root | parent | prev | next [\u2013]there are a bunch of features in slack beyond the core chat stuff, like:1. being connected to multiple communities and switching between them instantlythis can be of course simply replaced by connecting to different servers in a tabbed terminal and use the terminal's built-in cmd-1/2/... shortcut, which happens to be the same as in slack.2. meta data about others, like their timezone or how to pronounce their name is quite important for distributed team workthis can be approximated by a world readable file on the chat server in every user's home, like .plan or motd files (https://github.com/ESWAT/john-carmack-plan-archive)3. automatic idleness detectionim actually not sure how reliable is this even in slack, but in general, it can be useful, but im not sure how to solve it elegantly, when the chat runs remotely...maybe we should just spawn a loop at the background, which gathers idleness status from the OS and uploads it when it changes, into world readable files and the remote clients can just check those file whenever they want.4. extra status indication with automatic expiry, eg when someone is away from the keyboard, coz they are having lunchwe do use this feature often and it's a really helpful regarding when can we expect a response from someone.again, quite simple to model this as a plain text file and we can even use emojis, to have a very similar effect to setting \" lunch\" on slack. ppl would need to know what's the emoji selector shortcut though... like cmd-ctrl-space on macos.5. text search across all channels/roomsassuming the chat is being logged into files, then a recursive (rip)grep could work to some extent, but then from the search results one might want to get back to the context of the result too.6. threadsthis complicates implementation a lot more, but we found it an obvious improvement over the single threaded IRC model of communication7. having threads open on the side, so ppl can track 2 streams of comms at once at leastit would require starting the chat app multiple times and do some window management to see them side-by-sidenow obviously all this can be done a lot simpler, but those implementations typically always lack somehow. not sure why is that...see https://cancel.fm/ripcord/ or http://www.altme.com/what.htmlthe REBOL 3 programming language even had a quite full featured, text-mode chat built in: http://www.rebol.com/r3/docs/functions/chat.html !replyskullt 1 day ago | root | parent | next [\u2013]Points 3 & 4 could be combined: like .plan, each user has an o+r .status file. Its contents are a user's status message, but its modified time is used specially to indicate when that user was last active. Anytime the usuc client writes a message to a channel, it would simply touch the .status file. And whenever an expanded usuc or some other tool lists the users in a channel (that is, all users in the group that owns the channel file), it would mark as idle any who had a .status mtime older than 30 minutes, say.replypigeons 17 hours ago | prev | next [\u2013]man 1 talkreplyatulvi 1 day ago | prev | next [\u2013]cool but misleading titlereplydclowd9901 1 day ago | prev [\u2013]Cool._proceeds to sign up for slack._replyGuidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- \"Simple Unix Chat\" is a chat platform that leverages existing Unix tools instead of reinventing them.\n- The core functionality of suc can be implemented with only a few lines of code, compared to the hundreds of thousands of lines in platforms like Slack.\n- Suc focuses on the simplicity and efficiency of Unix tools, and highlights the potential for creating powerful applications without excessive code complexity."
  },
  {
    "id": 36600263,
    "timestamp": 1688564161,
    "title": "Regex engine internals as a library",
    "url": "https://blog.burntsushi.net/regex-internals/",
    "hn_url": "http://news.ycombinator.com/item?id=36600263",
    "content": "- The author discusses the rewriting of Rust's regex crate to improve internal composition and add optimizations while maintaining correctness.\n- A new crate, regex-automata, was created to expose the regex crate internals as their own APIs.\n- This is the first regex library to expose its internals to this degree as a separately versioned library.\n- The blog post addresses the problems that led to the rewrite, how the rewrite solved them, and provides a guided tour of regex-automata's API.\n- The target audience is Rust programmers and anyone interested in the implementation of a finite automata regex engine.\n- The problems that warranted the rewrite included difficulty with composition, testing, and requests for niche APIs.\n- Literal extraction is a critical optimization technique used in the regex crate to quickly identify candidate matches in a haystack.\n- Literal extraction involves extracting literals from regexes and using them to optimize searches.\n- Literal optimizations involve minimizing false positives and reducing latency impact.\n- Literal extraction works for both exact literals and inexact literals.\n- Literal sequences are prioritized over literal sets, and the order of literals matters in a multi-substring search.\n- The NFA (Thompson NFA) is a central data type in the regex crate and is used to implement regex engines.\n- The NFA is built using Thompson's construction algorithm and can be transformed into different types, such as DFAs, for different regex engines.",
    "summary": "- The blog post discusses the rewriting of Rust's regex crate to improve internal composition and add optimizations while maintaining correctness.\n- A new crate, regex-automata, was created to expose the regex crate internals as their own APIs, making it the first regex library to do so to this extent.\n- The rewrite addressed problems with composition, testing, and the need for niche APIs, and introduced critical optimization techniques like literal extraction for faster and more efficient regex matching.",
    "hn_title": "Regex engine internals as a library",
    "original_title": "Regex engine internals as a library",
    "score": 358,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginRegex engine internals as a library (burntsushi.net)358 points by kretaceous 20 hours ago | hide | past | favorite | 71 commentsjjice 19 hours ago | next [\u2013]I've only given a quick read/skim, but this is extremely impressive. BurntSushi has a lot of create stuff out there, but the Rust regex crate is legendary. The fact that Rust has had such a performant and easy to use regular expression library for so long is a real treat to the community.This article as a whole is also a treasure. There's a fairly limited number of people who have written a ton about regular expressions, but they all do so extremely well. Russ Cox's article series (as mentioned in this one) is really great. I used it in college to write a regular expression engine one summer after I had started to fall in love with the perfect cross between theory and practice that regular expressions are.The changes for more in depth testing here are also very interesting, especially for a crate that I'm sure if critical so a lot of the ecosystem, and I appreciate the writeup on such a deep dive topic.Are regular expressions hard to read? Sometimes they can, especially if you haven't gone out of your way to take deep dives. Are they not perfect for a lot of parsing tasks? Sure, there are definitely things people shouldn't use regexs for that they do, like validating emails. At their core though, regular expressions are one of the most power dense tools we have in pretty much every language. The insane stuff you can get done (sometimes in a way that would be frowned upon) in so little time if just incredible.I'd love for there to be more content on regular expressions as well. Right now I'm only familiar with one book that really does a great job (at a practical level), and that's Mastering Regular Expressions by Jeffrey Friedl. On a theory level, a lot of compiler books will talk about them to varying degrees. The Dragon Book has some good content on regular expressions at an implementation level too.Does anyone have any other book recommendations for regular expressions?And if BurntSushi or any other regular expression engine contributors see this, I really appreciate the effort y'all put in to building such powerful software.replybtown 14 hours ago | parent | next [\u2013]https://www.cs.princeton.edu/courses/archive/fall19/cos226/l... and https://kean.blog/post/lets-build-regex are excellent introductions to implementing a (very) simplified regex engine: construct a nondetermistic finite state automaton for the regex, then perform a graph search on the resulting digraph; if the vertex corresponding to your end state is reachable, you have a match.I think this exercise is valuable for anyone writing regexes to not only understand that there's less magic than one might think, but also to visualize a bunch of balls bouncing along an NFA - that bug you inevitably hit in production due to catastrophic backtracking now takes on a physical meaning!Separately re: the OP, https://github.com/rust-lang/regex/issues/822 (and specifically BurntSushi's comment at the very end of the issue) adds really useful context to the paragraph in the OP about niche APIs: https://blog.burntsushi.net/regex-internals/#problem-request... - searching with multiple regexes simultaneously against a text is both incredibly complex and incredibly useful, and I can't wait to see what the community comes up with for this pattern!replyjcranmer 16 hours ago | parent | prev | next [\u2013]> Are regular expressions hard to read? Sometimes they can, especially if you haven't gone out of your way to take deep dives. Are they not perfect for a lot of parsing tasks? Sure, there are definitely things people shouldn't use regexs for that they do, like validating emails. At their core though, regular expressions are one of the most power dense tools we have in pretty much every language. The insane stuff you can get done (sometimes in a way that would be frowned upon) in so little time if just incredible.The real crowning use case for regular expressions (at least in terms of parsing-like tasks) is when you've got formats with varied delimiters. So one format I was parsing this weekend was basically header:field1,field2,field3\"data\"hash (with a fixed number of fields). Or another format I work with is suite~split/test1,test2@opt1:opt2^hw1^hw2#flags1#flags2 (most of the elements of which are optional). Regular expressions shine here; using primitives like split don't quite cut it in these formats.And I think this also is a major cause of why regular expressions tend to become unreadable quickly. If you look at parsing via regular expressions as a whole, there's basically three things that are being jammed into one expression: what are the delimiters between fields, what is valid in each field, and which fields are optional. These are basically three separate concerns, but most regex APIs are absolutely terrible at letting you separate these concerns into separate steps (all you can do is provide the string that combines all of them).replykbenson 14 hours ago | root | parent | next [\u2013]The thing that I think sometimes gets lost when people are talking about the strengths and weaknesses of regular expression use, is that it can matter quite a bit what the language in question is like. If you're using a language that compiles down to a low level or is expected to have a fairly close match of expressions to specific code run (C, C++, Java, etc) then the choice is between using a regular expression library which often does an good enough match of what you want to accomplish in a performance manner that rolling your own optimized parser is hard to justify.When using an interpreted language like Perl or Python, it's a slightly different story, since often there's no way to get as good of performance out of a custom parser written in that language as you can get from the optimized regular expression library included (if you use it competently). The overhead in the interpreted language can make some tasks impossible to do as quickly as teh regular expression engine can. In a way, a regular expression library is to parsing what Numpy is to computation.I remember a task I had to parse a bunch of very simplistic XML in Perl a decade ago, where it consisted of the equivalent of a bunch of records of dictionaries/hashes (solr), and needed them as Perl hashes to work on them. I surveyed every XML parsing module available to me in Perl, and couldn't quite get the performance I needed, given the file was a few GB and it needed to be done as quick as possible multiple times a day. I implemented a simple outer loop to grab a working chunk of the file, a regex to split that chunk into individual records text chunks, and another regex to return each key/value as an alternating list I could assign directly to a hash. It was 5-6x faster than the faster XML streaming solution I found that I could use as a Perl module (which were all just wrapping X libs).Could I have coded a custom solution in C that parsed this specialized format faster? Undoubtedly, but I'd still be marshaling data through the C/Perl interface, so would have taken a hit to get the data easily accessible to the rest of the codebase, which is less of an issue for regular expressions in Perl since they're a native capability of the language and deeply integrated. Using regular expressions as a parsing toolkit yielded very good results at a fraction of the time and effort, and honestly in my opinion that's what regular expressions are all about.replytialaramex 15 hours ago | root | parent | prev | next [\u2013]> header:field1,field2,field3\"data\"hash (with a fixed number of fields).In a language where regex is just right there, like Perl, I agree that the natural way to parse this is always a regex, although on the other hand in Perl the natural way to do almost everything is a regex so maybe Perl was a bad example.In a language with split_once (and a proper string reference type) I actually rather like split_once here, splitting away header, and then field1, and then field2, and then field3, and then data, leaving just hash.I guess this gets to your concern, by writing it with split_once we're clear about a lot of your answers, each delimiter is specified with what it's splitting, none of the fields are optional (unless we write that) and (if we write code to check) what is valid in each field.replyjcranmer 14 hours ago | root | parent | next [\u2013]Yeah, split_once is pretty handy, although chaining together can get a little verbose. It would be nice to write this: let (y,m,d,h,m,s) = break_str!(s, year-month-day hour:minute:second)?;instead of this: let (y, split) = s.split_once('-')?; let (m, split) = split.split_once('-')?; let (d, split) = split.split_once(' ')?; let (h, split) = split.split_once(':')?; let (m, s) = split.split_once(':')?;replyburntsushi 14 hours ago | root | parent | next [\u2013]I'll use this as an opportunity to plug the regex crate's new 'extract' API. :-)  use regex::Regex;  fn main() {    println!(\"{:?}\", extract(\"1973-01-05 09:30:00\"));  }  fn extract(haystack: &str) -> Option<(&str, &str, &str, &str, &str, &str)> {    let re = Regex::new(      r\"([0-9]{4})-([0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2})\",    ).unwrap();    let (_, [y, m, d, h, min, s]) = re.captures(haystack)?.extract();    Some((y, m, d, h, min, s))  }Output:  Some((\"1973\", \"01\", \"05\", \"09\", \"30\", \"00\"))That gets you pretty close to what you want here.(The regex matches more than what is a valid date/time of course.)replyIzkata 14 hours ago | root | parent | next [\u2013]Python (even in 2): >>> import re >>> pattern = re.compile(r\"([0-9]{4})-([0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2})\") >>> results = pattern.match('1973-01-05 09:30:00') >>> results.groups() ('1973', '01', '05', '09', '30', '00') >>> (y, m, d, h, min, s) = results.groups()(`results` will be None if the regex didn't match)Regexes are one of those things where, once you understand it (and capture groups in particular) and it's available in the language you're working in, string-splitting usually doesn't feel right anymore.replyburntsushi 13 hours ago | root | parent | next [\u2013]I believe all of the people in this thread understand regexes extremely well. :-)There is a lot of reasonable room to disagree about when and where regexes should be used.replydarkclouds 7 hours ago | parent | prev | next [\u2013]Like you I skimmed this, having done a bit of work on RegEx's recently. I think the language in my case is using the PikeVM, by virtue of there being no error returned unlike the other engines, so I had to, within the limitations of the language and its copyrighted protected status, had to create some new RegEx functionality for myself, to make it easier to use as RegEx's can be plain and simple Voodoo.I dont have the stats of how often the other engines would be used, but if most of the programming languages out there are using PikeVM, then I can see why Google has not only written their own OS for their servers, but also saved a few more clock cycles by getting other engines into action for specific situations where the PikeVM would be too slow and/or heavy on the clock cycles. I know all to well how a few extra characters in the search string can drastically slow up the pattern matching.The proverb \"take care of the pennies and the pounds will take care of themselves\" definitely applies to RegEx and clock cycles. I suspect when looking back at some conversations from the 90's, its made some coders I know very rich when dealing with millions of records per second processing.replyuser3939382 9 hours ago | parent | prev | next [\u2013]My biggest complaint is with the little variations in dialects. Especially how the dialect * context expects you to handle quoting or terminating the expression. It's so varied that I've given up on even trying to remember and just resign myself to googling an example every time I need one.replylifthrasiir 7 hours ago | root | parent | next [\u2013]Oniguruma is one of examples where you can actually pick which variation to use. I think Rust `regex` also exposes enough internals to make this possible.replyamelius 13 hours ago | parent | prev | next [\u2013]Does this RegEx library utilize a JIT, just like the ones in most JavaScript implementations?If not, then perhaps this is a case where JavaScript beats Rust.replyburntsushi 13 hours ago | root | parent | next [\u2013]Nope. Usually only backtrackers have a JIT (not strictly true, I believe there is a JIT of a Thompson NFA and there is also redgrep). This library is not a backtracker.I would be interested in experimenting with a JIT in the future, primarily as a way to speed up capture group extraction. But this regex library uses a lazy DFA, which has excellent theoughput characteristics compared to the normal backtracking interpreter (and perhaps even a backtracking JIT).> If not, then perhaps this is a case where JavaScript beats Rust.Haha. No. Follow the link to rebar to see performance comparisons. A JIT isn't everything. https://github.com/BurntSushi/rebarreplychubot 17 hours ago | parent | prev | next [\u2013]What kind of content are you looking for? From a user POV, I think there is thankfully not much to learn about automata-based regexes like RE2 and rust/regex. The exception is if you're writing a performance-sensitive system entirely around regexes, like an intrusion detection system or search engine.A regex is a very small concept with a very large syntax :) It's \"just\" literals, alternation, repetition, and concatenation. So it's mostly being able to see through the syntax IMO.Nice animated diagrams in this recent post - https://news.ycombinator.com/item?id=35503089(On the other hand, from the implementation POV, there is a wealth of material online, but you already know where to find that :) I still think someone should \"cliff notes\" the Cox RE2 articles, since the ideas are important but there is a lot of detail. There are also dozens of references in those articles for people to read; it was a comprehensive survey at the time.)---BTW Friedl's book covers backtracking engines, which makes sense because PCRE, Perl itself, Python, Java, JavaScript, etc. all use that styleBut as far as I remember, most of the book is irrelevant for users of automata-based engines. It's a whole bunch of detail about optimizing backtracking, reordering your clauses, and lots of detail about engine-specific and even version-specific differences.Personally I just ignore all of that, and it doesn't cause me a problem. I use regexes all the time in every language, and stick to the features that an automata-based engine can handle.Once you go into the backtracking stuff, then you might want the Friedl book, and that's a huge waste of time IMO. It's way easier to do that kind of thing outside of a regex engine, with normal parsing techniques.And honestly once you go outside, you'll find you don't even need to backtrack. Perl-style regexes can be an astoundingly inefficient way to write a pattern recognition algorithm.---Eggex is my attempt to separate the two kinds of things, since it's not obvious based on the syntax: https://www.oilshell.org/release/latest/doc/eggex.htmlIt makes the syntax smaller, more familiar, and more composable. It's closer to the classic lex tool (e.g. GNU flex). It's funny that lex has a way better syntax for regular expressions for Perl, but it's used probably 10,000x less often because most people want an interpreter and not a compiler to C code. But lex has 90%-100% of what you need, and it's way simpler, with a nicer syntax.Literals are quoted so you don't have the literal/metachar confusion, and you can reuse patterns by name. The manual is worth skimming:https://westes.github.io/flex/manual/Simple-Examples.html#Si...I use re2c though, not flex, and its manual is also worth skimming: https://re2c.org/manual/manual_c.htmlreplyttul 19 hours ago | prev | next [\u2013]Story time. At ActiveState, my colleague and I - both fresh out of school - were tasked with building a regular expression debugger for the Komodo editor. We hired the legendary Perl guru Mark Jason Dominus to hack some hooks into Perl\u2019s regex engine and then by exposing these hooks to the UI, we allowed users to watch the execution of their regexes step by step.These days, various web-based tools offer superior functionality. But in 2001, Komodo\u2019s Rx Debugger was absolutely state of the art and so much fun to work on.replyTwirrim 18 hours ago | parent | next [\u2013]I've found myself in the past in a situation where I needed an offline regex debugger (dealing with air-gapped networks, so the folks that needed to use the tool literally couldn't get at any online site, nor would they be permitted to even think of putting what they were working with in to an online one, no matter how it's designed), and it seems almost all of the work has gone in to online tools. The offline tools are scarce and somewhat lacking in comparison to, say, https://regex101.com/.replylesuorac 15 hours ago | root | parent | next [\u2013]It seems like the site doesn't really need a server so people have made offline versions.So should be able to burn something like [1] to a disk.[1]: https://github.com/ibaaj/Regex101.com-offline-app/pull/1/fil...replyaorth 15 hours ago | root | parent | prev | next [\u2013]Good question! I use regex101.com a few times a month and I've thought about offline tools too. I just happened to see this GNOME application called Wildcard recently:https://flathub.org/apps/com.felipekinoshita.WildcardHaven't tried yet...replynerdponx 14 hours ago | root | parent | prev | next [\u2013]RegexBuddy is great and runs fine on WINE.replymschaef 19 hours ago | parent | prev | next [\u2013]Any recommendations on specific web based tools for this?replyimaginary_unit 19 hours ago | root | parent | next [\u2013]not OP, but these are some I used in the past:https://www.debuggex.com/https://regex101.com/replyotterpro 18 hours ago | prev | next [\u2013]I use Ripgrep daily for searching anything in code or in text files, and I'm grateful every time I use it (on windows, linux, mac, vscode, vim, etc...). It's one of those software that has changed my life and how I work. Whenever I'm forced to use `grep`, it feels like I've travelled back in time when everything ran on a single core CPU and data were on slow spinning hard disk on PATA/IDE. Anyway, burntsushi definitely deserves honor amongst other great programmers.replykzrdude 16 hours ago | parent | next [\u2013]ripgrep comes out of a \"lineage\", before it there was ag and before that ack, that did similar things to provide a much better interface than just grep.replytheonething 5 hours ago | root | parent | next [\u2013]I'm still using ag and haven't tried ripgrep just because ag is already so fast for me. I should probably still try it sometime thought.replyBoppreH 18 hours ago | prev | next [\u2013]Can this be used for non-string lists? I always found it frustrating that we have this amazing machinery for searching and modifying lists of characters, but as soon as I have a list of numbers or dates it all goes out of the window.Let's say I have a list of login attempt dates, and I want all sequences of 5+ failed login attempts followed by a success. With a regex it's trivial, but I can't use that; I have to roll my own loop, flags, and temporary lists.Sure, I could convert my list to a string, process it, and (try to) convert it back, but the downsides are obvious.Even if the performance is not as good as string-based regex, why shouldn't we have regexes for arbitrary list types?---Edit: I realized this is not the first time I had this idea, and found an old Python prototype: https://github.com/boppreh/listregexIt's horribly slow, but as an API experiment I'm quite happy. It also gives some tools not available to regexes, like inverting and intersect patterns, and matched pairs.replyburntsushi 17 hours ago | parent | next [\u2013]Nope. The regex library is tightly coupled with searching strings. That's an intentional design decision. Making a regex engine like this have a generic alphabet is a total non-starter. It's impractically difficult for me to do. Especially the API design and doing it in a way that doesn't impact the perf of the primary use case.The kind of regex engine you want, especially one where you don't care about perf, is not hard to build. You could take the `regex-lite` crate I published, for example, and code it up to be as generic as you want. In so doing, I expect you'll run into a number of interesting challenges.Anyway, it's not like these things don't exist. They do. People attempt to build them[1]. They just usually don't gain much traction because I suspect you're overstating their general utility. :-)[1]: https://docs.rs/automata/latest/automata/trait.Alphabet.htmlreplyfsckboy 9 hours ago | root | parent | next [\u2013]> Nope. The regex library is tightly coupled with searching strings. That's an intentional design decision. Making a regex engine like this have a generic alphabet is a total non-starter.how can this be true? Not trying to pick any type of religious war, but if you had a C library based on char vectors, you could global replace with short or long and it would still work, pointers included, except for any places where you relied on the knowledge that a char was implemented as 8 bits.or if you're saying \"but I rely on the string class\", is it somehow impossible to write a utf-32 based string class? would that string class be required to suppress anything that wasn't a valid code point at this particular time? I know professors like to teach that knowledge that a character is stored as an 8bit number is undefined behavior, but it sure is nice to know you have an 8-bit-clean data type, where 0 can in some contexts considered a terminator, and utf-8 is considered a special case on top of that.I'm just trying to grok the type of impossiblity you're talking about here. Yes, I could read the code instead of asking :)replyburntsushi 7 hours ago | root | parent | next [\u2013]I answered basically this question about seven years ago[1]. Re-reading that now, it's actually still quite a good answer.> but if you had a C library based on char vectors, you could global replace with short or long and it would still work, pointers included, except for any places where you relied on the knowledge that a char was implemented as 8 bits.Right, and that last sentence is critical. Another way to say \"rely on char being 8 bits\" is \"rely on an alphabet size of no more than 256.\"The regex crate and all of its non-standard-library dependencies (of which I wrote all of them) corresponds to about 100K source lines of code. Everything from the concrete syntax on up to the matching engines itself would need to be parameterized over the alphabet. You can't just replace `u8` (unsigned 8-bit integer) with any other type and hope that it works, because the entire regex crate makes use of the fact that it's searching a sequence of `u8` values specifically. It doesn't treat `u8` as some opaque type with integer-like operations. The literal architecture of the code embeds assumptions about it, such as the fact that every possible value can be enumerated as [0, 1, 2, ..., 255]. The answer I wrote seven years ago touches on this. A concrete place where this occurs is in the lazy DFA (described in the blog). Very loosely, the logical representation of an individual state looks like this:  struct State {    next: [*State; 256],  }The `u8` type appears nowhere there. Instead, the length of `next` is hard-coded to the total number of unique possible elements of the `u8` type. One could of course define this as part of some generic alphabet type, but this entire representational choice is only feasible in the first place because the alphabet size of `u8` is so small. What's the alphabet size of `u16`? Oops. Now your logical representation is:  struct State {    next: [*State; 65536],  }You can see how that would be quarrelsome right?Of course, you could use something like `HashMap<u16, *State>` instead. But holy moly you really do not want to do that when searching a sequence of `u8` values because a hashmap lookup for every byte in a string would absolutely trash performance. So now your generic alphabet interface needs to know about DFA state representation in-memory so that when you use `u8` you get the fast version and when you use anything else you get the slow-but-feasible version.And then there's the whole UTF-8 automata stuff and various Unicode-aware algorithms sprinkled in at various places. This thread is talking about a generic alphabet, and that goes well beyond Unicode. So now all that Unicode stuff needs to be gated behind your generic alphabet interface.At some point, you realize this is incredibly impractical, so if you want to expose a generic alphabet API, you do something like, \"with a `u8` alphabet, go do all this fast stuff, but with any other alphabet, just do a basic simplistic generic regex engine.\" But that basic simpistic regex engine is going to wind up sharing very little with the `u8` specific stuff. And thus you get to my conclusion that it has no place in a general purpose regex engine designed for searching strings. For these niche use cases, you should just go build something for what you need and specialize for that. If you want a generic alphabet, then use that as your design criteria from the start and build for it. You'll wind up in a completely different (and likely much simpler) spot than where the regex crate is.Basically, this line of thinking is a sort of \"disease of abstraction\" that is common in programming. We take what we think about the theory of regular languages and maybe some cute use cases and think, \"well why not just make it generic!\" But the thing is, coupling is generally how you make things fast, and making something more general usually involves de-coupling. So they are actually and usually exclusionary goals. But it takes a lot of domain knowledge to actually see this.There's also a whole mess of code that uses low level vector instructions for accelerating searches. Thousands of lines of codes are devoted to this, and are just yet another part of the regex crate that doesn't really lend itself to being easily generic over arbitrary alphabets. You could probably write different versions of each of these algorithms for u8, u16 and u32 types (and that would in turn require using different vector operations because of the lane size differences), but they certainly aren't generalizable to arbitrary alphabets.> I know professors like to teach that knowledge that a character is stored as an 8bit number is undefined behavior, but it sure is nice to know you have an 8-bit-clean data type, where 0 can in some contexts considered a terminator, and utf-8 is considered a special case on top of that.I don't think regex engines have been tightly coupled to NUL terminated C strings for quite some time. Not even PCRE2 is. It's just a sequence of bytes and a length. That's it.There does exist a gaggle of general purpose regex engines that, instead of working on UTF-8, works on UTF-16 code units. These are the Javascript, Java and .NET regex engines. None of them work on anything other than `u16` values. All of them are backtrackers. (Well, .NET does have a non-backtracking regex engine. I don't know its internals and how it arranges things with respect to alphabet size.)PCRE2 does expose compile time configuration knobs for supporting UTF-8, UTF-16 and UTF-32. I'm not an expert on its internals, but PCRE2 is a backtracker and backtrackers tend to care less about the alphabet size than automata based engines such as the regex crate and RE2. But I'd guess that PCRE2 likely has some UTF-8 specific optimizations inside of it. They just don't show up as much (I assume) in fundamental aspects of its data structure design by virtue of its approach to regex searching.Still, just supporting UTF-8, UTF-16 and UTF-32 is a very different thing than supporting generic alphabets.> I'm just trying to grok the type of impossiblity you're talking about here. Yes, I could read the code instead of asking :)It's really all about coupling and being able to make assumptions that the coupling grants you. If you remove the coupling---and that's what abstraction over arbitrary alphabets actually is---then you have to either remove the assumptions or push those assumptions into the abstraction. And whether that's even possible at all depends on the nature of how those assumptions are used in the chosen representations.This is why Unicode is such a beastly thing to support in a regex engine. It runs roughshod all over ASCII assumptions that are extremely convenient in contexts like this. Something like `\\w` that is ASCII aware can be implemented with a single DFA state. But as soon as you make `\\w` Unicode-aware, you're now talking about hundreds of DFA states when you're alphabet is `u8`. You could switch to making your alphabet be the space of all Unicode codepoints (and thus collapse your DFA back down into a single state), but now your state representation basically demands to use a sparse representation which in turn requires more computational resources for a lookup (whether it's a hashmap or a linear/binary search). If your alphabet size is small enough to use a dense representation, then your lookup is literally just a pointer offset and dereference. That operation is categorically different than, say, a hash lookup and there's really nothing you can do to change that.The bottom line here is that if you want a regex engine on a generic alphabet, then you probably don't care about perf. (As folks in this thread have come out and said.) And if you don't care about perf, it turns out you don't need something like the regex crate at all. You'd be able to build something a lot simpler. By at least an order of magnitude.Why hasn't someone built this \"simpler\" library? Well, they have. I've linked to at least one elsewhere in this thread. It just turns out that they are often not productionized and don't catch on. My thesis for why is, as I've said elsewhere in this thread, that the utility of this sort of generic support is often overstated. I could be wrong. Maybe someone just really needs to do the work to make a great library. I doubt it, but it's not really a question that I want to put the work into answering.[1]: https://old.reddit.com/r/rust/comments/4a8pbv/the_regex_crat...replyEricson2314 6 hours ago | root | parent | next [\u2013]The extent to which this is infeasible is the extent to which Rust is not good enough, sigh.E.g. it would be very nice to derive doing unicode regexes on u8 (as you say) from the serial composition of `user_regex . unicode_regex`. Fusing that composition into a single automaton is a handy generic thing to have in the library bag of tricks.replynerdponx 14 hours ago | root | parent | prev | next [\u2013]Their utility is overstated until the one time when you actually need/want it.Last time I tried to figure out if there were existing tools to solve a problem like this, I came across Event Calculus: https://en.wikipedia.org/wiki/Event_calculusI'm sure there's some interesting CS theory to be uncovered here.replyburntsushi 14 hours ago | root | parent | next [\u2013]Oh it's definitely overstated by suggesting it should live alongside a general purpose regex engine. :-)I have no doubt that its utility can be great in niche use cases. I've never come across one in my decades of programming that I know of, but I'm sure they exist.replyBoppreH 13 hours ago | root | parent | next [\u2013]> I've never come across one in my decades of programming that I know of, but I'm sure they exist.The login attempt example was convoluted, so here are more common scenarios:- Grouping a list into pairs by matching /../- Finding or collapsing repeated sequences with /(.)\\1+/- Parsing tag+value binary formats.- Searching structured logs.- DSL's for unit tests.Are there better ways to do each of those? Yes, but either because someone implemented those specific functions, or it's a much longer solution.Though I'm not recommending list-regexes for production code anytime soon. Prototypes and code golfing, sure, but not until the community understands it better.replynerdponx 10 hours ago | root | parent | next [\u2013]One of the uses I had was for identifying particular subsequences of events in a long sequence. I actually at one point considered translating the sequence of events into a string of distinct Unicode code points, so I could define and match patterns as regular expressions!replyburntsushi 13 hours ago | root | parent | prev | next [\u2013]Yeah I just wouldn't make use of regexes with arbitrary alphabets for any of those tasks personally. Doesn't really seem like a win to me.But like I said, someone should go build it.replyLoganDark 16 hours ago | root | parent | prev | next [\u2013]> They just usually don't gain much traction because I suspect you're overstating their general utility. :-)I find myself desiring a DFA over LLM tokens right now, which are 16 bits each, at least for this model.I, personally, am very pleased with the idea of attempting to build a dense DFA with that vocabulary. Maybe your computer would explode!replytelotortium 13 hours ago | root | parent | next [\u2013]Could you not encode the tokens into 8-bit bytes? Rust regex supports byte strings: https://docs.rs/regex/latest/regex/bytes/struct.Regex.htmlreplyIshKebab 16 hours ago | root | parent | prev | next [\u2013]I've also been looking for the same thing for something like SystemVerilog Assertions (SVA) which is very regex-like, so it isn't just him!replyburntsushi 16 hours ago | root | parent | next [\u2013]Indeed. I've been responding to questions like this for a long time. :-) https://old.reddit.com/r/rust/comments/4a8pbv/the_regex_crat...Someone should go out and built it. It won't be me though, that's for sure. Believe it or not, such a library wouldn't leverage much of my experience. The vast majority of the complexity inside the regex crate is about optimizing for sequences of bytes.replyIshKebab 13 hours ago | root | parent | next [\u2013]Yeah I am slowly working on it. I think even custom alphabets wouldn't work for me. I'm trying to build something so this works:    let is_even = |x: &i32| *x % 2 == 0;    let is_odd = |x: &i32| *x % 2 == 0;    let pattern = sequence(&[      is_even,      is_odd,      repeat(or(is_even, is_odd), 2, 4),    ]);    let mut matcher = Matcher::compile(pattern);    let elements = [4, 1, 23, 5, 6];    for element in elements {      matcher.step(element);    }    assert!(matcher.matches());I'll get there one day.Amazing work on the Regex crate by the way!replyschuyler2d 17 hours ago | root | parent | prev | next [\u2013]That said it would be a really cool feature to have some of the more complicated but common regexes (urls, emails, dates) be some kind of \"template\" in the syntax. Eg what if I could do '(?D<h=22>)' or something like that to search for all dates in any format that had some version of 8pm represented.Anyway, super appreciate your work and your writing!replyburntsushi 17 hours ago | root | parent | next [\u2013]It's an interesting idea, but I think it would be worth trying to actually prototype it as its own library first and see if it catches on. My suspicion is that it probably won't work as nicely as you think it will unfortunately.replykccqzy 14 hours ago | parent | prev | next [\u2013]The C++ standard library std::basic_regex attempts to do this by exposing a templated class over a custom character type. https://en.cppreference.com/w/cpp/regex/basic_regex You can provide your own trait class to define things for your custom \"characters\".Unfortunately performance goes out of the window. And it's likely to work as well as storing arbitrary non-character things into a custom std::basic_string.replysaagarjha 17 hours ago | parent | prev | next [\u2013]You're going to have to define some sort of API for matching on a sliding window of values. This isn't impossible, but most languages don't really have great interfaces for it.replyBoppreH 17 hours ago | root | parent | next [\u2013]Parser combinators[1] seem perfectly suited for this.   # A sequence of 5 or more failed login attempts followed by a successful one.   obj_regex.search(repeat(is_failed, min=5)+is_success, my_list)[1]: https://en.wikipedia.org/wiki/Parser_combinatorreplyyazaddaruvala 18 hours ago | prev | next [\u2013]For a problem at work, I needed to create a RegexSet of over 10 MM really long regexes. No engine out of the box could handle it. Even Rust\u2019s RegexSet wasn\u2019t good enough by default.However, trying to use and read through regex-automata and regex-syntax (even in 2018) was such a very valuable and helpful learning resource. I ended up modeling the project at work off Lucene APIs, but it was all only after learning the basics from the regex crates.Best set of libs! Thanks sushi!replyburntsushi 18 hours ago | parent | next [\u2013]Yeah 10 million regexes is huuuuge. Aho-Corasick can barely handle 10 million literals.Future work is definitely trying to make the regex engine scale better with more patterns. Currently, it will crap out well before 10 million regexes, and I'm not sure that goal is actually attainable. But it can certainly be better than what it is today.And of course, Hyperscan is really the gold standard here as far as multi-pattern searching goes. I'm not sure how well it will handle 10 million patterns though.replyyazaddaruvala 10 hours ago | root | parent | next [\u2013]Yeah basically built a competitor to Hyperscan without the proprietary Intel bits.Quick notes: to scale past X regexes in the set.1. Don\u2019t make a single RegexSet. Create multiple internally.2. Ideally colocate similar partners together.3. Use the immutability of a RegexSet to your advantage by generating an inverse index of \u201cmust match\u201d portions of each regex.4. When you get an input to match, first check the inverse index for a \u201cmay match set\u201d, then only execute the internal automata that may possibly match on the input.The inverse index can be as complicated (FSTs, or all of Lucene) or simple (hash map ) as you\u2019d like it to be. The better it can filter the regexes in the set the more performance and scale you end up with. And tune the sizes of the internal automata for your usecase for some Goldilocks size for extra perf.replyburntsushi 7 hours ago | root | parent | next [\u2013]Right. I'll also note that this strategy probably assumes something about the search task itself, and may not work for all possible search operations. Think about what happens when your haystack is GBs big for example.replyOJFord 16 hours ago | parent | prev | next [\u2013]I'm guessing the answer's 'no' because you didn't elaborate to begin with, but on the off-chance - can you share any more about what the problem/project was?replyyazaddaruvala 10 hours ago | root | parent | next [\u2013]Sure, it has been a while. I worked at Amazon in Brand Protection, specifically on Trademark and Logo infringement.There were many different strategies at play (eg neural nets) but the false positives can be very expensive. But the one I described above is an expert system of manual overrides that made the final decisions.Amazon don\u2019t have much structured content, eg \u201ctitle\u201d, \u201cdescription\u201d and bad actors are constantly trying to obfuscate using language based grammar tricks or N1ke type attacks.Also just the law is very nuanced. You can say \u201ca case compatible with iPhone, that is ..\u201d but it is infringement to say \u201ciPhone case that is ..\u201dAlso there are many nuances around licensing. For example, \u201cBurntSushi T-shirts\u201d as a company cannot have the Disney logo on it, however, a \u201cLego tshirt\u201d might have the Disney logo legally on it. So a lot of overrides.Even if you compress all the nuances into a single regex, which you can\u2019t: there are 10 MM estimated brands worldwide (Amazon at the time hosted 1 MM) with on average 10 trademarks each that is 10 MM regexes.Then you also need to multiple the 25 countries Amazon operates in for legal nuances, and multiple languages (eg even in the US Amazon store someone might use Spanish or Italian to sell their fake product). Additionally there is more fanout for reasons I\u2019ve long forgotten.Point of story 10 MM was a conservative upper bound on the RegexSet and it had to be fast and cheap. I built it on top of Lucene with some hacks here and there but it did (does) the job - fast and cheap :)I hope now generative AI can help them more, but I\u2019m not holding my breath.replydarkclouds 6 hours ago | root | parent | next [\u2013]> Even if you compress all the nuances into a single regex, which you can\u2019tYou cant, standalone hw isnt that capable, distributed computing/cluster computing is.> I hope now generative AI can help them more, but I\u2019m not holding my breath.I'm not from what I have seen.>Also just the law is very nuanced. You can say \u201ca case compatible with iPhone, that is ..\u201d but it is infringement to say \u201ciPhone case that is ..\u201dAnd Amazon would be up against users of Lexis Nexis who have a head start in all of this RegEx malarkey, by virtue of what they sell, without giving too much away about their code inner workings.replyalpaca128 18 hours ago | prev | next [\u2013]I experimented with the regex-automata crate in the past and it's the only one I found which can be used for text editors because the direct access to the underlying DFA makes it compatible with any text data structure. The usual regex library APIs expect the input to be one contiguous string.replyrecov 20 hours ago | prev | next [\u2013]Burntsushi is a machine.replykzrdude 16 hours ago | parent | next [\u2013]Deterministic and finite such, or what?replysd9 15 hours ago | root | parent | next [\u2013]Non-deterministic, deterministic, it matters notreplyagumonkey 18 hours ago | parent | prev | next [\u2013]lets him and borkdude meetreplyjunon 10 hours ago | prev | next [\u2013]Thank you again, BurntSushi. This is marvelous work.replyburntsushi 9 hours ago | parent | next [\u2013]<3replyLoganDark 19 hours ago | prev | next [\u2013]I was in the middle of writing some regex-automata code (using the early 0.2.0 release) when this post dropped. Welp, time to see if I'm going to have to start all over digging into some brand new internals~(I haven't read the post yet because I have an important call in a few minutes, but it looks like a very interesting and also conveniently-timed blog post.)(Edit a few minutes later: looks like the answer might be yes, but since this is a polished release, I might be able to simplify my code massively. Wish me luck~)(Edit 2 about 10 minutes later: well that was pretty painless and the new Builder::patch method is a total upgrade. Awesome~)P.S. I'm still blocked from all your GitHub repositories and I think that's kind of unfair considering how widespread a lot of your crates are. I don't remember the original incident anymore. I believe the regex crate itself is under the rust-lang organization now, but there are still others I can't interact with.replyburntsushi 19 hours ago | parent | next [\u2013]The regex-automata 0.2.0 docs did have a giant warning about this, and strongly recommended going with 0.1: https://docs.rs/regex-automata/0.2.0/regex_automata/> I'm still blocked from all your GitHub repositories and I think that's kind of unfair considering how widespread a lot of your crates are. I don't remember the original incident anymore.I don't either. I block a lot of people for a lot of reasons. I unblocked you.replyLoganDark 18 hours ago | root | parent | next [\u2013]> The regex-automata 0.2.0 docs did have a giant warning about thisI didn't listen, and it paid off, because a bunch of the knowledge I learned on it is still perfectly applicable to 0.3.0; I already have the same NFA as before. :)Now my appointment got canceled so I get to read your blog post and play with the new version. Fun!replyabbeyj 6 hours ago | prev | next [\u2013]burntsushi, the code example after \"we can also increase it by decreasing the size of our regex by disabling Unicode mode:\" seems to be the same as the previous code example. Copy-paste mistake?replyjakobnissen 19 hours ago | prev | next [\u2013]BioJulia has published Automa.jl, which is a pure-Julia regex engine that can insert arbitrary Julia code at compile time.Not to take away from Rusts regex which are far more advanced than Automa, but I just take issue with that library being the first time regex internals have been exposed as a library :)replyburntsushi 19 hours ago | parent | next [\u2013]These sound like two different things. PCRE2, for example, has support for \"callouts\" which sound similar to what you're saying? https://www.pcre.org/current/doc/html/pcre2callout.html --- Other things like ragel and re2c have done similar things.What I'm talking about in this blog is very different from that. This is about taking the internals of the regex library itself and turning them in a separately versioned library that others can compose.This makes somewhat less sense for a backtracker because most backtrackers just have one engine: the backtracker. But an automata based library usually has many different engines that can be composed in different ways. Still, backtrackers have things they could expose but don't in practice, such as a regex parser and an AST.replynsajko 18 hours ago | root | parent | next [\u2013]You're both correct. In the context of Julia, where compilation and run time are arbitrarily interleaved, something like re2c can be a library and used at run time.replyceleritascelery 14 hours ago | prev [\u2013]My biggest wish for rust regex was support for ARM SIMD. Currently the literal optimization is only vectorized on x86. It seems that the author doesn\u2019t own an ARM machine, and therefore can\u2019t test implementation and so doesn\u2019t want to support it.replyburntsushi 14 hours ago | parent | next [\u2013]I actually have an M2 mac mini in the mail from Apple for exactly this purpose.My time horizon is very long. It takes me a long time to do things these days.It has never been true that I don't want to support it. Merely that it is difficult to verify and test if I can't do it myself. There is also the problem that the port from x86 to arm is not straight-forward, due to both my own ignorance and what I believe are important missing vector operations such as movemask.This is discussed a bit more here (including the bit about movemask): https://github.com/BurntSushi/memchr/issues/76replyAceJohnny2 14 hours ago | parent | prev [\u2013]> It seems that the author doesn\u2019t own an ARM machine, and therefore can\u2019t test implementation and so doesn\u2019t want to support it.Tangential (since he answered already), but in this era of cheap cloud instances, I'd be surprised if \"not owning a <blank>\" is any hindrance to support.replycesarb 13 hours ago | root | parent [\u2013]> but in this era of cheap cloud instances, I'd be surprised if \"not owning a <blank>\" is any hindrance to support.When you own a device, it doesn't cost you more (other than electricity) if you take longer while playing with it, and there's no extra cost (other than space) to having it ready to be used when necessary. When you rent a cloud instance, there's a direct monetary cost for every extra minute you take while investigating an issue, and it's less guaranteed that it'll be available when you need it.Or, to put it more simply: unless he has his own personal device to play with, he'll have to spend extra money for every issue he investigates and every change he makes to the ARM support.replyburntsushi 13 hours ago | root | parent [\u2013]Yes, exactly. There is a ton of friction.replyGuidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- The Rust regex crate is highly praised for its performance and ease of use.\n- Regular expressions are powerful tools for parsing and pattern matching in programming languages.\n- The regex-automata crate is a new release that provides a library for regex engine internals, allowing for more customization and optimization."
  },
  {
    "id": 36596095,
    "timestamp": 1688537256,
    "title": "Bret Victor update",
    "url": "http://worrydream.com/July2023/",
    "hn_url": "http://news.ycombinator.com/item?id=36596095",
    "content": "",
    "summary": "- The post titled \"Bret Victor update\" may be about a new update or development related to a person named Bret Victor.\n- The post could be discussing a technology, project, or innovation that Bret Victor is involved in.\n- The post might highlight something exciting or unique that Bret Victor has done in the tech industry.",
    "hn_title": "Bret Victor update",
    "original_title": "Bret Victor update",
    "score": 334,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginBret Victor update (worrydream.com)334 points by dcre 1 day ago | hide | past | favorite | 124 commentsStevenOtto 1 day ago | next [\u2013]His latest demo of Realtalk, Biomolecular design in Realtalk, showcases the strenghts of Dynamicland. Really impressive stuff, as usual. https://youtu.be/_gXiVOmaVSo?t=865replythom 1 day ago | parent | next [\u2013]What do you think will be the keys to any future battle between this, something like Apple Vision Pro, and traditional desktop metaphors? I have to admit, on first viewing every single component of this looks unbearably clunky but presumably it\u2019s going somewhere, and I can\u2019t say I want to live in a future where I have to strap on a headset either.replyjimmySixDOF 1 day ago | root | parent | next [\u2013]The tree of Spatial Computing has many branches. The use of Tangible User Interface mechanics in a super specific application like this is a perfect bottom up design from function approach and I love it. He has all the building blocks, no pun intended, to reshape the same experience deeply customized for any number of domains like digital twin monitoring of manufacturing plant lines or dynamic ERP dashboards or K-12 like the original Dynamic Land work. Looking forward to whatever he is getting ready to reveal.replyHammadB 1 day ago | root | parent | prev | next [25 more]deng 1 day ago | parent | prev | next [\u2013]This looks super impressive, but at the same time, I'd really like to hear someone actually working in molecular biology what they think of this. While I am working in this field, I only deal with software, not molecular design and wetlab stuff. But I see how people there currently work and have a very hard time imagining them fiddling with pieces of paper and origami blocks on a desk, looking at poor quality images and awkwardly move stuff with a laser pointer. I like the physicality, but at the same time, it seems very limiting to me in terms of scope.replybeefman 16 hours ago | parent | prev | next [\u2013]This is very impressive work and I'm glad people are doing it. For any billionaire, funding it would be a no-brainer.That said, it makes more salient for me the dichotomy between demos and reality. This demo looks very much like molecular biology does in the movies.But what is it to look like something \"in the movies\"? I don't know exactly... All tools have overhead, no matter how cleverly designed. Maybe \"the movies\" is what you get when you ignore this overhead.There's a clear phenomenon in looking back on old demos and concluding we must have taken a wrong turn because our systems are still not as good. This is true of Victor's own demos from a decade ago, and many well-known demos from decades earlier.But rewatching a Victor demo earlier this year, which had blown my mind when I saw it live, it seemed full of a kind of naivety (and a bit of sleight of hand). Of course, he made clear it was only a demo. It was meant to inspire. But now I feel that's an easy excuse for not investigating what really advances our use of tools \u2013 and what holds it back.replythuuuomas 15 hours ago | root | parent | next [\u2013]You can just say \u201cWorse Is Better\u201d.> \u2026what really advances our use of tools - and what holds us back.It\u2019s money! It\u2019s cost! The cheaper tool wins.\u201cWorse Is Better\u201dreplyaleph_minus_one 13 hours ago | root | parent | prev | next [\u2013]> For any billionaire, funding it would be a no-brainer.Billionaires still want ROI.replypcurve 9 hours ago | parent | prev | next [\u2013]I have no idea what I just watched. :-( Bret Victor makes me feel inadequate.replyEricRiese 19 hours ago | prev | next [\u2013]Transcribed for accessibility. (Google Lens did a really good job but I cleaned up what I noticed.)July 4, 2023HiDynamicland is still going, just quietly. We closed the Oakland space for covid, but Realtalk development and collaborations have continued basically as originally planned, if more slowly due to our small size.I'm hoping to spend the summer working bionano, and get back to preparing new on the Dynamicland website in the fall. It might be ready by the end of 2023? It'll have everything.I'll try posting at @bret@dynamic.land (currently Mastodon until we have time to do our own thing in Realtalk). Id appreciate if you don't ask for my Opinions about things.Thanks, Bretreplyontouchstart 17 hours ago | parent | next [\u2013]This is a copy of that element, you don't need Google Lens. :-)<img width=\"1056\" height=\"792\" src=\"July2023.jpg\" alt=\"Hi,Dynamicland is still going, just quietly. We closed the Oakland space for covid, but Realtalk development and collaborations have continued -- basically as originally planned, if more slowly due to our small size.I'm hoping to spend the summer working on bionano, and get back to the new Dynamicland website in the fall. It might be ready by the end of 2023? It'll have everything.I'll try posting at @bret@dynamic.land (currently Mastodon until we have time to do our own thing in Realtalk). (I'd appreciate if you don't ask for my opinions about things.)Thanks, -Bret\">replyOzzyB 16 hours ago | root | parent | next [\u2013]Semantic Web FTW xDreplyjakemauer 1 day ago | prev | next [\u2013]Quick link to his Mastodon: https://posts.dynamic.land/@bretreplydontlaugh 1 day ago | parent | next [\u2013]The image is clickable.replydavidcollantes 16 hours ago | root | parent | next [\u2013]Right now (2023-07-05T13:35:45-0400), and for me, it is not.replydavidcollantes 16 hours ago | root | parent | next [\u2013]I stand corrected. I see the link to his Mastodon instance is! Wow, completely missed it.replydontlaugh 13 hours ago | root | parent | next [\u2013]It\u2019s an overly cute trick with poor ergonomics :)replyDrScientist 1 day ago | prev | next [\u2013]Reminds me of a demo of using MS hololens to tell a scientist where to pipette something.Just put the plates on a liquid handling robot - stop trying to treat the person as a robot.The other aspect - the human -> computer ( as oppose to the computer -> human ) interface is interesting - it sort of reminds me of the first multi-touch demos.ie exploring how best for humans to communicate intent to computers - though again - a bit like the example above around automation - in my view the best UI is no or less UI!replynewaccount74 22 hours ago | parent | next [\u2013]I assume most wet labs have robots that do part of the workflow. But they are mostly useful for automating repetitive tasks, and need a lot of setup before they can get to work.For small experiments, when setup is 90% of doing the job, then you just don't win much by letting a robot do the remaining 10%.replyDrScientist 40 minutes ago | root | parent | next [\u2013]Set up is in two parts.Programming the robot, and putting the and register the reagents and source material.Given that they can produce instructions for humans, I don't see why they could produce instructions of the robot ( with perhaps some human instructions for making the reagents and source material etc available ).A lot of traditional liquid handling robots are large and have relatively large buffer tanks etc - so need flushing etc etc. But I don't see why you could use something like RoboCat to be much more flexible for simple container to container pipetting.replyshadowfox 21 hours ago | root | parent | prev | next [\u2013]From what I can tell, at least for academic wet labs, robots seem fairly unavailable/unaffordable.replyDrScientist 46 minutes ago | root | parent | next [\u2013]That true - but then they won't be able to use this either.....replynewaccount74 17 hours ago | root | parent | prev | next [\u2013]The university lab I interned in had a 96 well pipetting robot that was shared between a few research groups. I never used it. I think it was mostly useful if you wanted to do an experiment many times with varying parameters. But for most of the stuff we did, the steps were just not repetitive enough that programming a robot would make sense.Also, there are usually a lot of steps between the pipetting that the pipetting robot couldn't do like loading stuff in a centrifuge, checking DNA concentration, putting it in the PCR machine, etc.replyDrScientist 39 minutes ago | root | parent | next [\u2013]Not your typical liquid handlers sure - but advances in robotics like Robocat type things should mean you could build a much more general robot that could operate much more like a human in a chain of tasks.replyiamcreasy 20 hours ago | parent | prev | next [\u2013]Interesting. What are some good examples of computer -> human interface?replyDrScientist 15 minutes ago | root | parent | next [\u2013]Depends on what you are trying to do.One interface I think is quite good is the spreadsheet - ( and I'm not talking horrible ribbons or poor charting - I'm talking about the core concept of a reactive grid of cells ).You enter numbers and the computer immediately updates the results - the cells updating is the computer -> human interface, but it feels almost invisible as part of the task. The user has a mental model of how the spreadsheet works and treats it almost like a real world object.You get a similar effect with the drawing/painting tools which use touch.replyprojectileboy 1 day ago | prev | next [\u2013]We don\u2019t have enough long-term research these days. I wish Bret Victor well and am looking forward to future innovations from him and his crew.replyapu 18 hours ago | parent | next [\u2013]I think it's the worst indictment of our entire industry that Victor doesn't have oodles of funding for life.replypicometer 14 hours ago | root | parent | next [\u2013]The optimist in me hopes that a UBI-like system would enable more people to tackle research, nonprofits, and other long term \u201csocial good\u201d type projects.replyTowaway69 17 hours ago | root | parent | prev | next [\u2013]Perhaps he doesn't want the stress from investors who only care about their ROI?replySamBam 16 hours ago | root | parent | next [\u2013]Grant funding, I would have thought GP meant.replycoke12 14 hours ago | root | parent | prev | next [\u2013]I think he does? Has he indicated he doesn't have enough funding?replyripley12 13 hours ago | root | parent | next [\u2013]He has publicly lamented the lack of funding for long-term research many times, yes.replythe-printer 1 day ago | prev | next [\u2013]> I\u2019d appreciate if you don\u2019t ask for my opinions about things.I feel this.Nice looking web page also.replybjornasm 23 hours ago | parent | next [\u2013]I feel that as well. I'm at the point where I am knee deep in my PhD work, and I see that my commitment to that work makes me want to remove myself from other stuff. I just don't want to use any of my energy on anything else, and especially dealing with people in anything but an uncomplicated manner is the last thing I want to do. I am sure it must be doubly so if there is an audience to whatever you say and end up regret.I have often envied how (I romanticize) it was before social media and hyper-connectivity, where you might be able to just fade out a little bit to focus on a project. Its a bit hard to get that long term focus when people expect you to be available and able to reply within the hour. Just saying \"no\" drains enough as it is. I don't have the backbone to put out that message though.replyOmarShehata 13 hours ago | root | parent | next [\u2013]I've echoed this sentiment from time to time and someone recently asked me \"Why don't you just disconnect and apologize later?\"Might not work for you, but I found this surprisingly liberating: allowing myself to just drop the ball, not respond, or just say \"Sorry I can't\" with no justification, so I can focus my energy where I need itreplyadbachman 20 hours ago | parent | prev | next [\u2013]That line was my favorite.It's challenging to be a public figure, present yourself on contemporary social media, and not be pressured (implicitly or explicitly) to speak up on everything.Though I don't read this as being about political or social issues. How else would you have someone politely say, \"I'd like to be left alone to do my work, but I'd also like to share with you what I'm working on.\"replypiuantiderp 18 hours ago | root | parent | next [\u2013]What do you mean? \"Though I don't read this as being about political or social issues.\"replySamBam 16 hours ago | root | parent | next [\u2013]People are more likely to ask Bret about computing issues.replydmazin 1 day ago | parent | prev | next [\u2013]I just made the mistake of reading a few recent DHH blog posts, and I really appreciate the difference between these two people. Both have a large following, but one sits down and does his work, while the other owns a company and seems physically unable to stop opining.replymattgreenrocks 23 hours ago | root | parent | next [\u2013]The crown of thought leadership is heavy and full of thorns.replyrandito 11 hours ago | root | parent | prev | next [\u2013]In defense of DHH, a lot of the things he blogs about are completed and successful (to him) company open-source projects. He's sharing what they have done. It's not all bad.A lot of views are contrary and he presents his views strongly, so it's kind of off-putting.replyswyx 1 day ago | parent | prev | next [\u2013]look i'm as much of a bret victor fanboi as the next guy, but that one felt a little like \"whoa ok you're too cool for school now huh\"replythe-printer 1 day ago | root | parent | next [\u2013]I think it conveys a sense of dedication to his work that is at odds with the ever-looming desire to pontificate than it does aloofness toward others.I\u2019m not familiar with him or his work beyond the cursory glance at his Wikipedia page that I made after recognizing the homepage from marginalia.nu binges, but I associated the statement with a certain level of exhaustion, or disinclination rather, from the desire to publicly comment on whatever bleeding edge or attention-grabbing topic a man of his profession and experience may encounter. I have no clue what this guy does with certainty, it sounds sort of Alan Kay-like? But based off this post it sounds like there\u2019s a lot of ground he intends to cover with whatever he\u2019s got going on that requires a lot of thought. Thought that he is reluctant to share at a toot\u2019s notice.replypmoriarty 1 day ago | root | parent | next [\u2013]If you're not familiar with him, you could watch his \"Inventing on Principle\" talk [1] from 11 years ago. Starting at around the 12 minute mark should get you right to the good stuff (though it's all worth watching and thinking about). This is the talk that made him famous.Unfortunately, the demo he showed in that talk never really turned in to a product or movement that revolutionized programming as at the time many of us hoped it might.[1] - https://www.youtube.com/watch?v=PUv66718DIIreplysyntheweave 23 hours ago | root | parent | next [\u2013]A pitfall of \"Inventing on Principle\", one which I believe Victor himself later noted, is that the talk is really a modest statement on what bringing some philosophy into your work could do, but it has an overwhelmingly engaging demo. Everyone tried to copy the demo in a kind of \"wave of the future next gen programming\" hype cycle instead of taking home the concept and trying to put that into work they were already doing.And, having been one of those impressed with the demo, now I look back on it thinking \"this business of software is cargo-culting the whole way down, isn't it.\"replybrandall10 22 hours ago | root | parent | next [\u2013]Light Table was the only real attempt I'm aware of. Any other notables?replyiamwil 16 hours ago | root | parent | next [\u2013]Swift creator also influenced though i don't remember where i heard or read that.replygnramires 18 hours ago | root | parent | prev | next [\u2013]Yes! I've seen first hand how much it helps (is it just me in particular? maybe not everyone needs it?) programming things I can visualize (in a literal sense of seeing, but I think the essence is really being in close contact with intermediate results). So, I just make ways to visualize things :)A particularly simple and amazing tool for this is p5.js, with an editor that, to me, enables exactly the kind of workflow shown here: editor.p5js.orgWhatever you are going to do, you can draw alongside to help you make sense of it better. I do this on my own mind sometimes, but for example visualizing and small neural networks (which I have been messing around with) can't be done on my imagination alone.I think the important is just that you have some library that makes drawing easy, and put it alongside your work. Of course, it's extra work to make diagrams of everything. But sometimes they really help. I think it's important to simply have this possibility in mind.(maybe it should have a name? Visualization-enhanced programming? Print-programming? I think (e.g. jupyter) notebooks strive toward this, although tbh I prefer the p5js environment without a linear format)It should be up to us to decide if and when this extra work is worthwhile. I think really designing (and discovering) things is what benefits the most from this style (i.e. game design, product design, scientific experimentation). So you need programmers working on a design problem and/or designers working on a programming problem; or you could have them side-by-side collaborating (and not just a designer imagining things, and a programmer following specifications to the letter).It also requires a kind of artistic taste to make things look good, but of course that's something you can develop.It's a really enjoyable process to be able to get a feel for what you're doing!(See here: https://editor.p5js.org/gustavo.nramires/sketches/sLA07wpa_ for some personal experiments in visualizing graphs and sparse neural nets, https://editor.p5js.org/gustavo.nramires/sketches/1Bb5VIHi2 for designing an algorithm to efficiently make a roguelike map)I think you're saying is that we don't get this for 'free'. There's probably no tool (although maaaybe AI could help?) that just instantly visualizes anything you could do. Instead it's up to us to do it :) (although good graphics libraries and a tool that encourages you to recompile often is almost essential imo!)And here's the kind of art I could likely never just simply imagine to existence, experimentation is essential! https://editor.p5js.org/gustavo.nramires/sketches/pVFFT_8E5replyMikeSchurman 11 hours ago | root | parent | next [\u2013]I've used this technique quite a bit in the past, but often not enough. I work in games so a lot of problems are actual visual 2d or 3d problems. Things like: finding the closest valid object I can target at my given heading. Simple enough, but as things get complicated it's often the simple things that trip you up, and visualizations can often make the problem obvious.That p5 editor looks nice for this sort of thing. It's important to be able to get the visualizations in quickly, otherwise you risk wasting time.A tool I've dreamed up, that I never seem to have time to implement, is to send debug information to some form of database, and then being able to query and render that data as you like (from another client). To see bar/line charts of data, spatial visuals, more abstract graphs like in your examples, timeline scrubbers, etc... maybe some day I'll get around to making it.Anyway, thanks for your comment. I'm interested in this kind of thing.replyAlex3917 17 hours ago | root | parent | prev | next [\u2013]> This is the talk that made him famous.He was already pretty famous before that from Magic Ink, if not even earlier work.replyindigochill 1 day ago | root | parent | prev | next [\u2013]I vaguely recall a meme somewhere about how ridiculous it is to ask, say, a sports or movie star their opinion on politics or something else that isn't their field just because they're famous.Heck, even within one's field, Bret may have neat ideas about interfaces for programming and attained a sort of celebrity status for some of us, but that doesn't mean he can confidently answer random questions from strangers. He's a researcher, not a guru.replysph 23 hours ago | root | parent | next [\u2013]> I vaguely recall a meme somewhere about how ridiculous it is to ask, say, a sports or movie star their opinion on politics or something else that isn't their field just because they're famous.J\u00fcrgen Klopp when asked about this opinion on COVID?https://www.youtube.com/watch?v=tZ4bKnpxbYc \u2014 great answer in a time where every-fucking-body had to share their opinion on it, and still do.replyTowaway69 17 hours ago | root | parent | next [\u2013]Those are the whites white teeth I have ever seen, incredible.Also the message was great, the combination rarely happens!replywpietri 19 hours ago | root | parent | prev | next [\u2013]That's so great. Thank you for sharing it.replythe-printer 1 day ago | root | parent | prev | next [\u2013]That last part stands out to me, him being a researcher, that is. I wonder if there is any detriment to the idea of researchers or other \u201cknowledge workers\u201d who use social media at the risk of exposing new developments or ideas to people who may be uninformed or unqualified in regard to whatever the individual is exposing publicly. Could/does this affect what they share or how they/others perceive their work that is shared?replygsatic 1 day ago | root | parent | next [\u2013]Sure does. Faraday stopped his EM experiments, not cuz of ignorant ppl, but \"great\" mathematicians of the day were mocking him for his lack of math skills. Without those experiments, no one would have ever dreamt up electromagnetism. And on the flip side, \"qualified\" ppl who couldnt grok the math of Maxwell or Heaviside, would dismiss the math as just too complex. This type of stuff happens all the time. Social media amplifies it. But you just have to find good ppl and ignore the herd to make progress. And dont mistake capturing Attention on Social Media or HN for progress.replysitkack 15 hours ago | root | parent | next [\u2013]Discoveries are always preceded by a long string of \"No\" and why would you do this?Use good science, but run weird experiments!replymattgreenrocks 22 hours ago | root | parent | prev | next [\u2013]Tech is extremely boring on social media because there are many more opinions than those truly dedicated to the craft.You can argue that it shouldn\u2019t be zero sum. But time and attention both are, and you can\u2019t focus fully if you\u2019re trying to \u201cgrow an audience.\u201dreplyjustin66 20 hours ago | root | parent | prev | next [\u2013]Formulating an opinion worth sharing takes work.replydeosjr 1 day ago | prev | next [\u2013]Glad to hear from Dynamicland; the last video got me so excited I decided to try and build a demo for tinkering with at home: https://github.com/deosjr/elephanttalkOnly dependency is on openCV through GoCV, otherwise pure Go. Supports a webcam/beamer setup. Uses Lisp for scripting instead of Lua (see https://github.com/deosjr/elephanttalk/blob/main/cmd/elephan...).It's a lot slower/less mature than paperprograms, but it does attempt to implement the wish/claim/when model using a homebrew datalog implementation :)replywes-k 19 hours ago | prev | next [\u2013]Much love for Bret Victor! I've been working on a project inspired by http://worrydream.com/DrawingDynamicVisualizationsTalkAddend... which was released 10 years ago!replysmokel 1 day ago | prev | next [\u2013]Haha, this reminds me of the Web 0.1 post on The Daily WTF (2006):https://thedailywtf.com/articles/web_0_0x2e_1replysilisili 1 day ago | parent | next [\u2013]I love it. Only thing I'd change is it's a little too zoomed out...we don't need to see any background.Other than that, once zooming a hair, I found it extremely quick and easy to read. For whatever reason, moreso than if it were in a standard font. Three full paragraphs with zero scrolling.replydjmips 22 hours ago | root | parent | next [\u2013]But per the Web 0.1 design style guide.\"Though it may not seem to visible in the screenshot, the designer certainly went with the preferred technique of the wooden table / digital camera.\"replyandrewgleave 1 day ago | prev | next [\u2013]Anyone interested in Dynamicland may want to check out Paper Programs.It's been about 5 years since I last played with it.It\u2019s great fun and should be much more interactive with 5+ years of browser and hardware development.https://github.com/janpaul123/paperprogramsreplypicometer 14 hours ago | parent | next [\u2013]I had this set up on a vertical wall at my previous apartment and it was so much fun. I\u2019m working on getting it set up in my current place, too, and I\u2019d really like to get it projecting downwards so that I don\u2019t have to deal with taping things to the wall.Fyi for those interested: you need a color printer. You need a good projector. You need a good webcam. I already had the printer, got a projector as a hand-me-down, and shelled out the $ for a good webcam.It can be a little finicky if you don\u2019t have the perfect setup. For me, I got it to work in an hour or so, once I figured out a good mounting location for the projector. Then I had to periodically fiddle with the webcam settings as the light in the room changed. I\u2019m considering investing in black fabric to improve the contrast.Also, I suspect much of Dynamicland\u2019s magic is in RealTalk, which is not open source. The Paper Programs repo uses Javascript with a realtalk-esque mini framework. This means that Paper Programs doesn\u2019t quite achieve the goals set out by Dynamicland, ie, that it spills be approachable and imminently learnable to all ages, backgrounds, skill levels. My partner and I are both programmers, and both patient, so we\u2019ve been able to replicate a little bit of Dynamicland\u2019s social magic.replyrandito 11 hours ago | root | parent | next [\u2013]I tried setting up Paper Programs in my office, and had similar issues trying to get it to work. Glad that you were able to play with it.replymatricaria 1 day ago | prev | next [\u2013]A quick introduction of what this is about would be great!replykaraterobot 18 hours ago | parent | next [\u2013]Bret Victor is a programmer and programming communicator (because he makes really good videos and articles) who has, for a number of years, been working on a project involving programming using physical objects and image recognition. It's called DynamicLand. The latest demo video is linked throughout this thread. This appears to be a fairly standard progress update, but it being a photograph of paper on a table is very much in keeping with the idea of DynamicLand, which I guess is why it's been posted.replybagels 16 hours ago | parent | prev | next [\u2013]I guess it's this?https://dynamicland.org/Some kind of paper computing collaborative art project?replyBarrin92 1 day ago | prev | next [\u2013]Great to see he's still around. Bret Victor's post on abstraction and his visualization of Strogatz classic paper on networks are two of my favorite pieces posted on the internet.http://worrydream.com/LadderOfAbstraction/http://worrydream.com/#!/ScientificCommunicationAsSequential...replyisaacfung 1 day ago | parent | next [\u2013]His talk on \"Inventing on Principle\" and Randy Pausch's \"The Last Lecture\" are two videos I recommend every student to watch.replybjornasm 1 day ago | parent | prev | next [\u2013]Oh, thanks for bringing that up. That network visualization is just so simple, so good and so inspiring. What a great way to convey research.replybrendanyounger 11 hours ago | prev | next [\u2013]Can we all take a moment and appreciate that Bret Victor's natural handwriting is good enough to make a typeface from?replyshanks512 1 day ago | prev | next [\u2013]I have a faint memory of watching a Youtube demo video couple years back of a concept similar to Bret Victor's DynamicLand where you connect lego-block-like things together and they do cool stuff. Does anyone remember what that product is, and what its current status is?replybostonvaulter2 1 day ago | parent | next [\u2013]I don't know if this is it, but your description reminds me of HyperCubes which was a research project using AR: https://youtu.be/GnVp4hrQ7QU?t=82replym3kw9 16 hours ago | prev | next [\u2013]I still don\u2019t get what this is aboutreplyarc-in-space 1 day ago | prev | next [\u2013]When I first saw Dynamicland I assumed it'd quietly evaporate within a month, I'm glad to hear it's still being built.replysquokko 23 hours ago | prev | next [\u2013]I wish more of this Dynamicland stuff was made available. I'd be happy to set up a projector and camera on my ceiling if my kids could play with some of this stuff.replyalephaleph 4 hours ago | parent | next [\u2013]If you just want the projector and the camera stuff there's https://paperprograms.org/replyunconed 1 day ago | prev | next [\u2013]I am glad he's still doing it but I am not very optimistic that a tangible computer built for children and laymen will lead anywhere good.Even getting professional programmers to reason correctly about their program is hard. And getting them to not build \"intuitive\" tangles that devolve into complete spaghetti is even harder.Everything I know tells me that the software we consider good and intuitive actually requires an enormous amount of unintuitive design and engineering to pull off. Not appreciating this, and not knowing what you don't know, is a plague in modern application development, the kind which makes people boot up Windows 3.1/NT and remark how utterly instant everything is.replydataf3l 1 day ago | prev | next [\u2013]dang, now inexplicably I need his opinion on things...replyjononomo 20 hours ago | prev | next [\u2013]Is this someone we are supposed to know about?replyulkesh 19 hours ago | parent | next [\u2013]If you haven't yet seen this video, please do: https://www.youtube.com/watch?v=8pTEmbeENF4 (Bret Victor The Future of Programming)This won't tell you who he is, exactly, but it does give insight into how he thinks. And it's a pretty great talk, in my opinion.replyjononomo 17 hours ago | root | parent | next [\u2013]I'm afraid I don't have time to watch some video -- please provide a 3-sentence synopsis here.replyretromario 16 hours ago | root | parent | next [\u2013]https://en.wikipedia.org/wiki/Bret_Victorreplyulkesh 15 hours ago | root | parent | next [\u2013]Thanks for posting this. I was not inclined to respond after already providing information that he could have viewed when time afforded him. Here's hoping he has time to read a Wikipedia article instead of having people do the work for him.reply0xpgm 1 day ago | prev | next [\u2013]I got the sinking feeling something might have happened to Bret Victor when I saw the title. Thankfully, its just an update about his project.Maybe it can be slightly edited to reflect that.replynewaccount74 22 hours ago | parent | next [\u2013]Me too. \"Short update from Bret Victor\" would be less worrying :)replydluan 1 day ago | prev [\u2013]I don't like this.This reduces the scientist or designer to some small cog in the machinery, to the point where they are further alienated from their work.Remove the scientist and replace them with an algorithm doing some poor facsimile of gradient descent for some protein energy metric. Or make it multiplayer where some crowd is doing the depth first search. No individual.The only analogy I can think of is cooking. You can reduce all of the steps into a checklist, which can be optimized, but instinct is still the differentiating factor. Or rather, taste.Maybe this helps designers develop taste better, but imo the interface is not the problem. It's training scientists to have better sense of taste or smell. There's a dimension above all of this that is still yet to be tapped.replysvnt 1 day ago | parent | next [\u2013]I am not in the field but I just felt trapped by the whole thing. To me it appears to be skeuomorphic design to the nth degree. Why would you create an entire system of artifacts in the real to replace something you could do more flexibly with higher resolution and better visualization in CAD?Like if these were real processes you were doing in the lab and they were somehow being captured more accurately or efficiently, I could see that perhaps making sense.But this just seems like extra steps and the novelty is you\u2019re working on a table. It feels claustrophobic somehow.replyehnto 1 day ago | root | parent | next [\u2013]In regards to the specific UI concern around it feeling claustrophobic, I can see that but I feel like there are many use cases where focus via constraints is very useful. Analyzing abstract ideas into a real thing can be powerful at helping humans see the connections and hidden relationships that are sometimes difficult to see in the digital realm.That is essentially the AR value proposition in it's entirety in my opinion. Meeting the human experience half way, so we can use our immense spatial reasoning skills in an environment that supports them.replymst 19 hours ago | root | parent | prev | next [\u2013]I've seen molecular chemists and biologists (and even for a weird set of 3d shapes mathematicians) experiment with physical stuff before transferring the ideas elsewhere - the tactile aspect and the ability to intuitively rotate a 3d shape while visually perceiving it directly rather than as a translation of something else can be a really helpful tool for thought, so snap together molecule sets seem to be a pretty common posession - perhaps it'll never catch on amongst younger scientists but I can certainly see practitioners who're currently, say, 30-35+ getting a blast out of using it at least sometimes.replyhinkley 15 hours ago | root | parent | next [\u2013]I think spatially, which I 1) did not recognize that I was doing for a long time, and 2) thought was much more common than it is.For years I tried to figure out why my short term memory seemed so good even though I'm neuroatypical in a way that's usually associated with reduced working memory. Turns out I've been building mind palaces basically for longer than I can remember, but not with images, which is why none of the descriptions ever resonated for me. Mind palaces with a blindfold on, if you will.Being able to rotate items in my brain sure came in handy as a bike mechanic. I'm also handy in a move when you have one box that won't fit in your car/truck. But it also led to arguments with my father about whether I was turning a bolt the wrong way, when wrenching a bolt that is on the back side of something.replydekhn 18 hours ago | root | parent | prev | next [\u2013]I can't really visualize complex shapes in 3D and so molecular graphics (like pymol) is really important to me. Even in other areas, like math shape viz (which I do for \"fun\") and various other 3D modelling, it's really key that I have a quick way of assembling things and rotating them around.replysvnt 17 hours ago | root | parent | prev | next [\u2013]I dunno, now you\u2019ve got a bin of parts to store, and what happens if they get lost or damaged? You order more and wait for shipping? Print more and have grad students glue magnets in? The mean-time-to-kitchen-drawer seems low.I wonder if someone needs to better introduce the SpaceMouse to this crowd.replymst 13 hours ago | root | parent | next [\u2013]One would anticipate the people who've already owned snap together molecule sets for years have either already figured out a good way to make sure a bin of parts stays where it's put or accepted that it's their fate to order more of things sometimes.Similar to teaching yourself to always put tools back in the toolbox immediately after use lest they go for a walk, really.I mean, I do see your point about -you- not wanting to deal with a bin of parts, I'm not sure I would either - but for the people who've already encountered that problem and found a way to deal with it that works for them, it doesn't seem like it'd be an obstacle.replysvnt 4 hours ago | root | parent | next [\u2013]I guess that answers it for me and seems to reinforce it is strongly skeuomorphic \u2014 it isn\u2019t really possible to have a box of aminos/proteins in the same way you can have a box of Hs Os and Cs. They wanted a box of parts and this is the closest thing.replyhinkley 15 hours ago | parent | prev [\u2013]I have another take on this but I think we end up at the same place.Someone once said that Civilization is defined by our ability to think in the abstract.Scientists spend most of their time thinking in the abstract. Philosophers too. Designers and teachers are translators from the abstract to the real and back, or at least the good ones are.Giving scientists 'tools' that reduce abstract thought is a crutch, that when overused will lead to injury.I don't think that's who Bret is targeting, but if it is I hope he goes back to his first principles soon and doesn't end up where many of us are, working to create something and finding we contributed to the creation of something a lot darker.replyGuidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- Bret Victor has released an update on his project Dynamicland, showcasing the strengths of the Realtalk demo.\n- Some commenters express skepticism about the practicality and limitations of the physical interface in scientific and design fields.\n- Others appreciate the value of the tactile and intuitive aspect of the interface for certain tasks, such as molecular chemistry, and the potential for enhancing spatial reasoning skills."
  },
  {
    "id": 36602193,
    "timestamp": 1688572343,
    "title": "Firefox 115 can remotely disable any extension on any site",
    "url": "https://lapcatsoftware.com/articles/2023/7/1.html",
    "hn_url": "http://news.ycombinator.com/item?id=36602193",
    "content": "Previous: My thoughts on Apple Vision ProArticles indexJeff Johnson (My apps, PayPal.Me, Mastodon)Firefox 115 can silently remotely disable my extension on any siteJuly 5 2023Firefox version 115.0 was released on July 4, but I'm not celebrating. I'm concerned about a new \"feature\" in the release notes.Certain Firefox users may come across a message in the extensions panel indicating that their add-ons are not allowed on the site currently open. We have introduced a new back-end feature to only allow some extensions monitored by Mozilla to run on specific websites for various reasons, including security concerns.For various reasons. That's quite uninformative and mysterious.I'm all in favor of giving users control over which extensions are allowed to load on which sites. Safari already has this feature on both macOS and iOS. My concern is not about user control\u2014little of which even exists in Firefox 115, as I'll show later\u2014but rather about the remote control that Mozilla has now given itself, as mentioned in a Bugzilla report.We need to have ability to set the list of quarantined domains remotely. The pref should be a string with the same format as extensions.webextensions.restrictedDomains.The pref will be extensions.webextensions.quarantinedDomains, and it will have a default value set in a patch for bug 1745823 (to include a couple real but \"test\" subdomains from badssl.com).Filing as confidential for now, until we ship the system addon.You have to wonder why an open source project required confidentiality about this. Incidentally, neither Safari nor Chrome, or any other browser as far as I know, has such a remote domain-specific kill switch for extensions, so you have to wonder why it was necessary in Firefox.I believe that Mozilla already had the capability to remotely disable an individual extension, if it turned out to be malware. After all, every Firefox extension needs to be uploaded to Mozilla for analysis and cryptographically code signed before it can be installed in Firefox. [Edit: I've now confirmed that Mozilla has an extensions blocklist.] Given this preexisting capability, it's unclear why there should be a list of domains where all except a lucky few chosen extensions are disabled, regardless of whether the disabled extensions have shown signs of misbehavior.The Firefox quarantined domains list is currently empty. Mozilla hasn't said which domains it intends to add, or even why a domain-specific list is required. I find this troubling. It's a feature with no apparent motivation, supposedly for \"security concerns\"\u2014among other \"various reasons\"\u2014but what are the specific security concerns here, that would be addressed by a remotely controlled domain list? Mozilla's opacity and vagueness feels almost deliberate, undermining our trust.Let's see how the user interface actually works in Firefox 115. Although the quarantined domains list is empty by default, you can edit the list manually in the about:config page.I've added the domain www.youtube.com to the list. After relaunching Firefox, you can see the warning in the Extensions popup.My own extension StopTheMadness, which is not \"monitored by Mozilla\", is \"Not allowed by Mozilla\" on YouTube. (This warning is inaccurate, of course, since it was me rather than Mozilla who added YouTube to the domains list.) Apparently uBlock Origin is monitored by Mozilla, for it is allowed on YouTube despite my quarantined domains list. It's nice to be big, I guess.Note that the warning appears in the Extensions popup rather than on the Extensions icon, so you wouldn't know that StopTheMadness was disabled on YouTube unless you opened the popup (or unless you saw the autoplaying videos on YouTube that StopTheMadness would otherwise stop.)What happens, though, if you pin the extensions to the toolbar for easy access to their settings?It turns out that when you pin an extension to the toolbar, it no longer appears in the Extensions popup! Consequently, the quarantined domains warning no longer appears in the Extensions popup either. In fact, there's no longer an Extensions popup: clicking the Extensions toolbar icon simply opens the about:addons page, which doesn't show the quarantined domains warning anywhere.This is a terrible user interface design for the new so-called \"security\" feature, silently disabling extensions while hiding the warning from the user. And remember, the quarantined domains list can be changed remotely at any time by Mozilla, without needing a Firefox software update. Firefox just has to \"phone home\" to Mozilla. (Another reason to install Little Snitch. [Edit: I believe the domain is firefox.settings.services.mozilla.com in this case.])We have no idea how Mozilla intends to use the quarantined domains list. Some people are speculating, with no evidence, about \"banking\". But there are innumerable banks in the world. What is Mozilla supposed to do, make and maintain a list of every banking web site in the world? While it makes sense for users to have the ability to manually exclude their own banking sites from extension access if they prefer, what sense does it make for Mozilla to arbitrarily select certain web site domains for general exclusion? Another question: is it impossible for the user to purposely exclude extensions that are \"monitored by Mozilla\" and given special treatment by Firefox?My own extension StopTheMadness stops web sites from disabling your browser's built-in paste and autofill features, a kind of madness commonly implemented by sites that have a misguided, ignorant notion about what makes a login form \"secure\". Thus, it would be a disservice rather than a service to users for Mozilla to remotely disable user extensions on some arbitrarily selected banking sites.As a little indie software developer, I'm disappointed and irritated that Mozilla, a little developer compared to its competitors\u2014corporate giant browser vendors Apple, Google, and Microsoft\u2014would choose to create a two-tier system in which only the biggest extension developers get exclusive access and exemptions. I know that users love uBlock Origin, but I hate the idea of a world where uBlock Origin is the only extension allowed. That's the type of consumer and power centralization that Firefox and Mozilla are supposed to be fighting against. I don't like an extension monopoly any more than I like a browser monopoly.Jeff Johnson (My apps, PayPal.Me, Mastodon)Articles indexPrevious: My thoughts on Apple Vision Pro",
    "summary": "- Firefox version 115.0 introduced a new feature that allows Mozilla to remotely disable certain extensions on specific websites for various reasons, including security concerns.\n- This feature is different from other browsers like Safari and Chrome, as they do not have a remote domain-specific kill switch for extensions.\n- The user interface design of the feature is flawed, as it hides the warning of disabled extensions when they are pinned to the toolbar.",
    "hn_title": "Firefox 115 can remotely disable any extension on any site",
    "original_title": "Firefox 115 can remotely disable any extension on any site",
    "score": 329,
    "hn_content": "- Firefox 115 introduces a feature that can remotely disable any extension on any site.\n- This feature is not limited to specific extensions and can block any extension not vetted by Mozilla.\n- Users have the ability to disable or override this feature, but it is not clearly communicated to them.\n- Mozilla has not disclosed their criteria for inclusion of websites in the quarantine list or their intended use of this feature.\n- The average user of Firefox is more tech-savvy than the average computer user.\n- The purpose of this feature is speculated to be for security reasons, potentially preventing extension takeovers and protecting sensitive sites.\n- The impact of this feature and its user control are still unclear and subject to further development.\n- The importance of extensions and the need for caution in installing them is emphasized.\n- Users are recommended to use a minimal number of trusted extensions for better security.\n- The discussion around this feature highlights concerns about user choice, communication, and the role of Mozilla in controlling their users' browsing experiences.- Firefox is implementing a feature that restricts extensions on certain websites.\n- The feature is not fully built yet, but there is already controversy surrounding it.\n- Some users believe that Mozilla does not respect their extension choices and is becoming more corporate-focused.\n- Mozilla has a history of making underhanded or anti-user decisions, such as forcing addons for marketing purposes.\n- Despite these criticisms, Firefox is still considered better than Chrome in terms of privacy.\n- There are concerns that this feature could lead to censorship and blocking of politically objectionable websites.\n- Users can create a workaround to block this new behavior by modifying a setting in about:config.\n- Firefox's compatibility with various extensions and its user-friendly features are mentioned.\n- Mozilla has a reputation for being one of the last browsers outside of Google's dominion that respects privacy.\n- Some users believe that Firefox's negative actions receive more attention because it is seen as a privacy-focused browser.\n- There is a call for fresh competition and disruption in the browser market.\n- Users recommend using different browser profiles or container tabs as workarounds for managing extensions on specific websites.\n- The removal of access to about:config in Firefox for Android is mentioned.\n- Some users express their lack of trust in Mozilla and prefer Google's browser.\n- One user recommends using Brave as an alternative to Firefox.",
    "hn_summary": "- Firefox 115 introduces a feature that can remotely disable any extension on any site.\n- Mozilla has not clearly communicated the ability for users to disable or override this feature.\n- Concerns are raised about user choice, communication, and the role of Mozilla in controlling their users' browsing experiences."
  }
]
