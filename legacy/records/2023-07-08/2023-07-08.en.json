[
  {
    "id": 36628356,
    "timestamp": 1688714656,
    "title": "Excellence is a habit, but so is failure",
    "url": "https://awesomekling.github.io/Excellence-is-a-habit-but-so-is-failure/",
    "hn_url": "http://news.ycombinator.com/item?id=36628356",
    "content": "Excellence is a habit, but so is failureWe often hear that making small incremental improvements every day can lead to great things. This popular piece of advice rings true, and it\u2019s a powerful reminder to keep pushing ourselves forward.But there\u2019s another side to this story that we don\u2019t discuss as often: how incremental neglect and small missteps can accumulate and lead to negative outcomes. Recognizing and addressing these patterns of neglect early can make a significant difference in preventing larger problems down the road.Reflecting on my own life, I\u2019ve noticed that most of the things that really went off-track were indeed consequences of incremental neglect and numerous small yet poor choices:I didn\u2019t become addicted to drugs overnight. It happened over hundreds of moments where I prioritized momentary pleasure over health and safety.I didn\u2019t become overweight overnight. It happened over hundreds of moments where I opted for immediate gratification over long-term health.I didn\u2019t ruin relationships overnight. It happened over hundreds of moments where I chose comfort over confronting difficult conversations, admitting my mistakes, or even just acknowledging that someone was better than me at something.From these experiences, I\u2019ve realized that avoiding bad habits is just as important as cultivating good habits.To address these kinds of issues, we must become aware of our patterns of incremental neglect and then take deliberate steps to counteract them and foster healthier habits.Written on April 5, 2023",
    "summary": "- Making small incremental improvements every day can lead to great things, but it's also important to recognize that incremental neglect and small missteps can accumulate and lead to negative outcomes.\n- Avoiding bad habits is just as important as cultivating good habits.\n- To address these issues, we need to become aware of our patterns of incremental neglect and take deliberate steps to counteract them and foster healthier habits.",
    "hn_title": "Excellence is a habit, but so is failure",
    "original_title": "Excellence is a habit, but so is failure",
    "score": 751,
    "hn_content": "- The post discusses the etymology of the word \"character\" and how our character is shaped through repeated actions and choices.\n- It highlights the importance of cultivating virtuous habits and making wise choices in all aspects of life, even seemingly trivial tasks.\n- The discussion expands to include ancient concepts of karma and the concept of reaping what you sow.\n- Some comments touch on the potential consequences of our actions and the role of luck and preparation in achieving success.\n- The conversation also delves into the nature of addiction and the challenges of breaking unhealthy habits.\n- It is clear that the post inspires introspection and reflection on personal choices and their impact on character development.\n- The readers may appreciate the diverse perspectives on the topic, including references to philosophy and ancient wisdom.\n- The conversation raises awareness about the complexities of human behavior and the ways in which our actions shape our lives and experiences.\n- The post serves as a reminder to consider the long-term consequences of our choices and the importance of living with integrity and virtue.- Building projects, even if they are never shown to anyone or published, can lead to significant benefits.\n- The language and framework used in the first version of a project don't matter as much as the act of building something and gaining practical experience.\n- Having a few demonstrable projects is often more valuable than constantly switching languages, frameworks, and projects without finishing anything.\n- Taking action and building projects is more important than endlessly learning and acquiring tools.\n- The mentality of waiting for the perfect solution or falling into the trap of half-baked ideas can hinder progress.\n- The process of learning is not always a direct path to success; taking action and learning from the experience is essential.\n- The concept of via negativa, focusing on removing bad habits, can be a useful tool.\n- Embracing failure and learning from it is crucial for eventual success.\n- Small setbacks and failures are necessary steps on the journey to excellence.\n- Persistence, discipline, and patience are key to achieving long-term success.\n- The act of building projects and gaining experience is more important than focusing on theoretical knowledge.\n- Negative habits are easier to form than positive habits, but breaking negative habits and replacing them with positive ones can lead to personal growth.\n- Success often requires going through numerous failures and setbacks.\n- It's important to recognize that failure is a normal part of the journey to success and not be discouraged by it.\n- Forming positive habits is challenging, but it can lead to significant accomplishments.\n- Avoiding negative habits and making wise choices is crucial for personal growth and success.\n- Embracing failure and learning from mistakes can lead to growth and improvement.\n- It's important to focus on the process and not just the end result in order to achieve excellence.\n- Discipline and self-control are essential for long-term success and personal development.\n- Recognizing the role of failures and setbacks in the journey to success can help cultivate a growth mindset.\n- The concept of via negativa, focusing on eliminating negative influences and habits, can be a powerful tool for personal growth and improvement.",
    "hn_summary": "- The post discusses the importance of cultivating virtuous habits and making wise choices in all aspects of life.\n- It raises awareness about the complexities of human behavior and the ways in which our actions shape our lives and experiences.\n- The post serves as a reminder to consider the long-term consequences of our choices and the importance of living with integrity and virtue."
  },
  {
    "id": 36637655,
    "timestamp": 1688760664,
    "title": "Why I Hate Frameworks (2005)",
    "url": "https://factoryfactoryfactory.net/",
    "hn_url": "http://news.ycombinator.com/item?id=36637655",
    "content": "Modern Software Development SummarizedOriginally titled Why I Hate Frameworks by Benji Smith. Domain maintained by Matt Korostoff.Let's pretend I've decided to build a spice rack.I've done small woodworking projects before, and I think I have a pretty good idea of what I need: some wood and a few basic tools: a tape measure, a saw, a level, and a hammer.If I were going to build a whole house, rather than just a spice rack, I'd still need a tape measure, a saw, a level, and a hammer (among other things).So I go to the hardware store to buy the tools, and I ask the sales clerk where I can find a hammer.\"A hammer?\" he asks. \"Nobody really buys hammers anymore. They're kind of old fashioned.\"Surprised at this development, I ask him why.\"Well, the problem with hammers is that there are so many different kinds. Sledge hammers, claw hammers, ball-peen hammers. What if you bought one kind of hammer and then realized that you needed a different kind of hammer later? You'd have to buy a separate hammer for your next task. As it turns out, most people really want a single hammer that can handle all of the different kinds of hammering tasks you might encounter in your life.\"\"Hmmmmmm. Well, I suppose that sounds all right. Can you show me where to find a Universal Hammer.\"\"No, we don't sell those anymore. They're pretty obsolete.\"\"Really? I thought you just said that the Universal Hammer was the wave of the future.\"\"As it turns out, if you make only one kind of hammer, capable of performing all the same tasks as all those different kinds of hammers, then it isn't very good at any of them. Driving a nail with a sledgehammer isn't very effective. And, if you want to kill someone, there's really no substitute for a ball-peen hammer.\"\"That's true. So, if nobody buys Universal Hammers anymore, and if you're no longer selling all those old-fashioned kinds of hammers, what kinds of hammers do you sell?\"\"Actually, we don't sell hammers at all.\"\"So...\"\"According to our research, what people really needed wasn't a Universal Hammer after all. It's always better to have the right kind of hammer for the job. So, we started selling hammer factories, capable of producing whatever kind of hammers you might be interested in using. All you need to do is staff the hammer factory with workers, activate the machinery, buy the raw materials, pay the utility bills, and PRESTO...you'll have exactly the kind of hammer you need in no time flat.\"\"But I don't really want to buy a hammer factory...\"\"That's good. Because we don't sell them anymore.\"\"But I thought you just said...\"\"We discovered that most people don't actually need an entire hammer factory. Some people, for example, will never need a ball-peen hammer. (Maybe they've never had to kill someone. Or maybe they killed them with icepicks instead.) So there's no point in someone buying a hammer factory that can produce every kind of hammer under the sun.\"\"Yeah, that makes a lot of sense.\"\"So, instead, we started selling schematic diagrams for hammer factories, enabling our clients to build their own hammer factories, custom engineered to manufacture only the kinds of hammers that they would actually need.\"\"Let me guess. You don't sell those anymore.\"\"Nope. Sure don't. As it turns out, people don't want to build an entire factory just to manufacture a couple of hammers. Leave the factory-building up to the factory-building experts, that's what I always say!!\"\"And I would agree with you there.\"\"Yup. So we stopped selling those schematics and started selling hammer-factory-building factories. Each hammer factory factory is built for you by the top experts in the hammer factory factory business, so you don't need to worry about all the details that go into building a factory. Yet you still get all the benefits of having your own customized hammer factory, churning out your own customized hammers, according to your own specific hammer designs.\"\"Well, that doesn't really...\"\"I know what you're going to say!! ...and we don't sell those anymore either. For some reason, not many people were buying the hammer factory factories, so we came up with a new solution to address the problem.\"\"Uh huh.\"\"When we stepped back and looked at the global tool infrastructure, we determined that people were frustrated with having to manage and operate a hammer factory factory, as well as the hammer factory that it produced. That kind of overhead can get pretty cumbersome when you deal with the likely scenario of also operating a tape measure factory factory, a saw factory factory, and a level factory factory, not to mention a lumber manufacturing conglomerate holding company. When we really looked at the situation, we determined that that's just too complex for someone who really just wants to build a spice rack.\"\"Yeah, no kidding.\"\"So this week, we're introducing a general-purpose tool-building factory factory factory, so that all of your different tool factory factories can be produced by a single, unified factory. The factory factory factory will produce only the tool factory factories that you actually need, and each of those factory factories will produce a single factory based on your custom tool specifications. The final set of tools that emerge from this process will be the ideal tools for your particular project. You'll have exactly the hammer you need, and exactly the right tape measure for your task, all at the press of a button (though you may also have to deploy a few configuration files to make it all work according to your expectations).\"\"So you don't have any hammers? None at all?\"\"No. If you really want a high-quality, industrially engineered spice rack, you desperately need something more advanced than a simple hammer from a rinky-dink hardware store.\"\"And this is the way everyone is doing it now? Everyone is using a general-purpose tool-building factory factory factory now, whenever they need a hammer?\"\"Yes.\"\"Well all right. I guess that's what I'll have to do. If this is the way things are done now, I guess I'd better learn how to do it.\"\"Good for you!!\"\"This thing comes with documentation, right?\"",
    "summary": "- The author explores the concept of frameworks in software development and compares them to hammers in the context of building a spice rack.\n- They discuss the evolution of the approach to tooling in software development and how it has shifted from universal hammers to specialized factories.\n- The author introduces a new solution\u2014a general-purpose tool-building factory factory factory\u2014to address the complexity of managing multiple factories and tools, allowing developers to have customized tools for their specific projects.",
    "hn_title": "Why I Hate Frameworks (2005)",
    "original_title": "Why I Hate Frameworks (2005)",
    "score": 497,
    "hn_content": "- The article discusses the complexity of frameworks and how they can be overwhelming for new developers.\n- The author argues that frameworks are often chosen by senior engineers to protect their position and make their work easier.\n- A senior engineer responds, stating that frameworks can be beneficial for productivity and that there is an optimal level of framework usage.\n- The discussion highlights the challenges of choosing the right approach and the impact of bad tool choices on project productivity.\n- The conversation also touches on the value of a computer science degree in understanding programming concepts.\n- Some commenters agree that excessive framework usage can lead to unnecessary complexity, while others argue that frameworks are necessary and beneficial in certain scenarios.\n- The resonance of the topic is evident through the numerous links to previous discussions on the same subject.- The article criticizes the use of complex frameworks in software development.\n- It compares the use of frameworks to the concept of a universal hammer that tries to solve all problems.\n- The author argues that while frameworks can be useful in certain scenarios, they can also introduce unnecessary complexity.\n- The article discusses the tradeoff between simplicity and complexity in software development.\n- It highlights the importance of understanding the problem at hand and choosing the right tools and abstractions accordingly.\n- The author suggests that developers should prioritize simplicity and code reuse through simple types and pure functions.\n- Some commenters emphasize the need for frameworks that align with the problem domain and the advantages of using well-designed frameworks.\n- Others mention the tendency of some developers to overcomplicate solutions and the importance of managing complexity effectively.\n- The discussion touches on the pros and cons of various frameworks, including React and Angular.\n- Some commenters relate the topic to their personal experiences with software development and the challenges of finding the right level of abstraction.",
    "hn_summary": "- The article discusses the complexity of frameworks and their impact on new developers.\n- Senior engineers often choose frameworks to protect their position and simplify their work.\n- The discussion highlights the challenges of choosing the right approach in software development and the tradeoff between simplicity and complexity."
  },
  {
    "id": 36629085,
    "timestamp": 1688720312,
    "title": "32\" E Ink screen that displays daily newspapers on your wall (2021)",
    "url": "https://projecteink.com/pages/about",
    "hn_url": "http://news.ycombinator.com/item?id=36629085",
    "content": "Skip to contentProject E InkMenuSearch0Shopping bagAn updated daily front page of The New York Times as artwork on your wallA $2500 e ink art piece that displays daily newspapers on your wall.I'm a news junkie, and the power and allure of a newspaper's front page have always fascinated me. So, when I stumbled upon an article written by a Google engineer who had built an e ink device with the front page of his favorite daily newspaper prominently displayed on his wall, I was jealous. So I built one as well, using off-the-shelf hardware. The project became a small hit on Hackernews.Since then my mailbox gets bombarded with people that want one as well. And now you can :). We're calling it: Project E Ink. A huge e ink screen, for on your wall, that allows you to read the front page of your favorite newspaper every day. It's beautiful.\u201cAs more and more connected devices arrive in our homes, it is a good time to remember the principles of Calm Technology, first formulated at Xerox PARC in 1995. They talk about how technology should respect our attention and remain in the background most of the time, how relevant information should be presented calmly and make use of the periphery\", writes Max Braun.E ink is the perfect technology for wall artE ink screens, with no backlight and a slow refresh rate, induce a sense of calm. In addition, due to their low power consumption, the batteries on e-ink screens can easily last for weeks or even months.This is why e ink screens are uniquely suited for displaying wall art. The screen allows for the display of dynamic content, making it possible to display ever-changing front pages. The absence of a backlight makes it less distracting than an LCD screen.Finding the right hardware \u2714In my search for vendors of e ink devices, I came across the Slovenian company Visionect, which sells e ink screens for corporate use. Known for their Joan office screens that display the availability of a meeting room, they also sell larger screens for use in, for example, airports (to display flight times) and hotels (to provide conference room overviews).It turns out that the dimensions of the screen they sell for corporate use are identical to those of an unfolded newspaper front page. The Place & Play 32-inch screen is pricey (2300 euros ex VAT), but an exquisite piece of hardware. It is made of stainless steel with sharp edges and a glass panel on top. The USB ports are discretely concealed, and the device feels sturdy.The device is equipped with Wi-Fi and a cloud-based content management system that allows you to load a webpage, for example the PDF of the New York Times frontpage, making it easy to display. The CMS also allows you to configure the screen refresh rate (in my case, once daily was sufficient).The screen has a convenient VESA mount on the back, making it super easy to hang on the wall with a standard TV mount and allowing it to blend seamlessly with existing d\u00e9cor.Satisfied news junkie \u2714The device has no buttons or touchscreen; it only displays the front page of newspapers. That is sufficient to understand what is happening in the world. And if I also want to continue reading an article that piqued my interest, I use the dedicated news app. Every morning, I wake up to a fresh newspaper edition on my wall. I find it wonderful to hover with a cup of coffee, scan the headlines, or peruse an article. Mission accomplished, and I am one satisfied news junkie.-Alexander Kl\u00f6ppingE Ink Newspaper Display 32\u2033by Project E InkRegular price\u20ac2.783,00Sale priceSelect ColorBlackLight grayADD TO CARTView product details1 / 7PreviousNextSupport journalismProject E Ink is not affiliated with any newspaper. It's just a E Ink Display that loads a URL. However, we do encourage you getting a subscription to your favorite newspaper, as quality journalism deserves our supportFree shippingFree shipping globally. We'll deliver your E Ink Display right to your doorstep.ReturnsNot happy? You have thirty days to return your E Ink Display.Read our returns policy.ABOUTFrontpages of famous newspapers on your wall. Updated daily.LINKSSearchOur E Ink DisplayOur Origin StoryTerms of ServiceRefund PolicyShipping PolicyPrivacy PolicyLegal noticeFOLLOW USFacebookInstagramTwitterTikTokEmailCountry/regionNetherlands (EUR \u20ac)American Express Apple Pay Mastercard PayPal VisaCopyright \u00a9 2023 Project E Ink. Powered by Shopify",
    "summary": "- Project E Ink is a $2500 e ink art piece that can display daily newspapers on your wall.\n- The e ink screen is designed to resemble the front page of a newspaper and brings a sense of calm to your space.\n- The device, sold by the Slovenian company Visionect, offers Wi-Fi connectivity and a cloud-based content management system.",
    "hn_title": "32\u201c E Ink screen that displays daily newspapers on your wall (2021)",
    "original_title": "32\u201c E Ink screen that displays daily newspapers on your wall (2021)",
    "score": 439,
    "hn_content": "- A 32-inch E Ink screen that displays daily newspapers on your wall has been developed by Project E Ink.\n- The screen comes in an exquisite stainless steel design with a glass panel on top.\n- The screen is connected to Wi-Fi and can display news, updates, or HTML from any URL.\n- The display can be configured to connect to any Visionect server in the world.\n- The price is high at 2300 euros ex VAT, but the device is sturdy and well-made.\n- The software is owned by Visionect, and there is a subscription-based cloud content management system (CMS) required for full functionality.\n- The display can still function without the subscription or if the company goes out of business.\n- Some potential use cases include mounting significant newspaper and magazine covers, displaying vintage technology artwork, or displaying fictional newspapers or historical headlines.\n- The display could be targeted towards Harry Potter fans or collectors of vintage technology.\n- It is comparable to having a rotary telephone in your kitchen or using old Panasonic handhelds.\n- The cost of e-ink displays is currently high due to a lack of demand and scale in manufacturing.\n- There is hope for more affordable options in the future, especially with new advances in e-ink technology.\n- Other DIY options and smaller e-ink displays are available at a lower cost.\n- The display of news can be set up using the Visionect software suite and a custom URL.\n- There is an opportunity to build a similar device using an Arduino or other controllers.\n- There is a desire for more affordable and accessible e-ink displays for various purposes.- There is interest in a screen that can display art or other content.\n- People are discussing alternative options, such as cheaper versions or DIY projects.\n- The use cases mentioned include displaying newspaper front pages, creating a home dashboard, and reading comics.\n- Some people are interested in larger e-ink displays but are hesitant due to the subscription fee.\n- Questions about color e-ink displays and battery-powered e-ink screens are raised.\n- There is discussion about using old iPads or kindles for a similar purpose.\n- DIY solutions using Raspberry Pi and scripts are suggested.\n- Concerns about the price and long-term support of the product are mentioned.\n- The value of presentation and artistic value is emphasized over the actual content displayed.",
    "hn_summary": "- Project E Ink has developed a 32-inch E Ink screen that can display daily newspapers on your wall\n- The screen is connected to Wi-Fi and can display news, updates, or HTML from any URL\n- There is a desire for more affordable and accessible e-ink displays for various purposes"
  },
  {
    "id": 36628258,
    "timestamp": 1688713718,
    "title": "OpenWorm \u2013 A computational model of C. elegans worm",
    "url": "https://github.com/openworm/OpenWorm",
    "hn_url": "http://news.ycombinator.com/item?id=36628258",
    "content": "About OpenWormOpenWorm aims to build the first comprehensive computational model of Caenorhabditis elegans (C. elegans), a microscopic roundworm. With only a thousand cells, it solves basic problems such as feeding, mate-finding and predator avoidance. Despite being extremely well-studied in biology, a deep, principled understanding of the biology of this organism remains elusive.We are using a bottom-up approach, aimed at observing the worm behaviour emerge from a simulation of data derived from scientific experiments carried out over the past decade. To do so, we are incorporating the data available from the scientific community into software models. We are also forging new collaborations with universities and research institutes to collect data that fill in the gaps.You can earn a badge with us simply by trying out this package! Click on the image below to get started.QuickstartWe have put together a Docker container that pulls together the major components of our simulation and runs it on your machine. When you get it all running it does the following:Run our nervous system model, known as c302, on your computer.In parallel, run our 3D worm body model, known as Sibernetic, on your computer, using the output of the nervous system model.Produce graphs from the nervous system and body model that demonstrate its behavior on your computer for you to inspect.Produce a movie showing the output of the body model.Example OutputNOTE: Running the simulation for the full amount of time would produce content like the above. However, in order to run in a reasonable amount of time, the default run time for the simulation is limited. As such, you will see only a partial output, equivalent to about 5% of run time, compared to the examples above. To extend the run time, use the -d argument as described below.InstallationPre-requisites:You should have at least 60 GB of free space on your machine and at least 2GB of RAMYou should be able to clone git repositories on your machine. Install git, or this GUI may be useful.To Install:Install Docker on your system.If your system does not have enough free space, you can use an external hard disk. On MacOS X, the location for image storage can be specified in the Advanced Tab in Preferences. See this thread in addition for Linux instructions.RunningEnsure the Docker daemon is running in the background (on MacOS/Windows there should be an icon with the Docker whale logo showing in the menu bar/system tray).Open a terminal and run: git clone http://github.com/openworm/openworm; cd openwormOptional: Run ./build.sh (or build.cmd on Windows). If you skip this step, it will download the latest released Docker image from the OpenWorm Docker hub.Run ./run.sh (or run.cmd on Windows).About 5-10 minutes of output will display on the screen as the steps run.The simulation will end. Run stop.sh (stop.cmd on Windows) on your system to clean up the running container.Inspect the output in the output directory on your local machine.AdvancedArguments-d [num] : Use to modify the duration of the simulation in milliseconds. Default is 15. Use 5000 to run for time to make the full movie above (i.e. 5 seconds).Other things to tryOpen a terminal and run ./run-shell-only.sh (or run-shell-only.cmd on Windows). This will let you log into the container before it has run master_openworm.py. From here you can inspect the internals of the various checked out code bases and installed systems and modify things. Afterwards you'll still need to run ./stop.sh to clean up.If you wish to modify what gets installed, you should modify Dockerfile. If you want to modify what runs, you should modify master_openworm.py. Either way you will need to run build.sh in order to rebuild the image locally. Afterwards you can run normally.FAQWhat is the Docker container?The Docker container is a self-contained environment in which you can run OpenWorm simulations. It's fully set up to get you started by following the steps above. At the moment, it runs simulations and produces visualizations for you, but these visualizations must be viewed outside of the Docker container. While you do not need to know much about Docker to use OpenWorm, if you are planning on working extensively with the platform, you may benefit from understanding some basics. Docker Curriculum is an excellent tutorial for beginners that is straightforward to work through (Sections 1 - 2.5 are plenty sufficient).Is it possible to modify the simulation without having to run build.sh?Yes, but it is marginally more complex. The easiest way is to modify anything in the Docker container once you are inside of it - it will work just like a bash shell. If you want to modify any code in the container, you'll need to use an editor that runs in the terminal, like nano. Once you've modified something in the container, you don't need to re-build. However, if you run stop.sh once you exit, those changes will be gone.How do I access more data than what is already output?The simulation by default outputs only a few figures and movies to your home system (that is, outside of the Docker container). If you want to access the entire output of the simulation, you will need to copy it from the Docker container.For example, say you want to extract the worm motion data. This is contained in the file worm_motion_log.txt, which is found in the /home/ow/sibernetic/simulations/[SPECIFIC_TIMESTAMPED_DIRECTORY]/worm_motion_log.txt. The directory [SPECIFIC_TIMESTAMPED_DIRECTORY] will have a name like C2_FW_2018_02-12_18-36-32, and its name can be found by checking the output directory. This is actually the main output directory for the simulation, and contains all output, including cell modelling and worm movement.Once the simulation ends and you exit the container with exit, but before you run stop.sh, run the following command from the openworm-docker-master folder:docker cp openworm:/home/ow/sibernetic/simulations/[SPECIFIC_TIMESTAMPED_DIRECTORY]/worm_motion_log.txt ./worm_motion_log.txtThis will copy the file from the Docker container, whose default name is openworm. It is crucial that you do not run stop.sh before trying to get your data out (see below)What is the difference between exit and stop.sh?When you are in the Docker Container openworm, and are done interacting with it, you type exit to return to your system's shell. This stops execution of anything in the container, and that container's status is now Exited. If you try to re-start the process using run-shell-only.sh, you will get an error saying that the container already exists. You can choose, at this point, to run stop.sh. Doing so will remove the container and any files associated with it, allowing you to run a new simulation. However, if you don't want to remove that container, you will instead want to re-enter it.How do I enter a container I just exited?If you run stop.sh you'll delete your data and reset the container for a new run. If, however, you don't want to do that, you can re-enter the Docker container like this:docker start openworm         # Restarts the containerdocker exec -it openworm /bin/bash  # Runs bash inside the containerThis tells Docker to start the container, to execute commands (exec) with an interactive, tty (-it) bash (bash) shell in the container openworm.You'll be able to interact with the container as before.Documentationto find out more about OpenWorm, please see the documentation at http://docs.openworm.org or join us on Slack.This repository also contains project-wide tracking via high-level issues and milestones.",
    "summary": "- OpenWorm is aiming to build a computational model of a microscopic worm called Caenorhabditis elegans.\n- The model will include data from scientific experiments carried out over the past decade to observe the behavior of the worm.\n- OpenWorm provides a Docker container that allows users to run the simulation on their own machines and explore the output.",
    "hn_title": "OpenWorm \u2013 A computational model of C. elegans worm",
    "original_title": "OpenWorm \u2013 A computational model of C. elegans worm",
    "score": 425,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginOpenWorm \u2013 A computational model of C. elegans worm (github.com/openworm)425 points by dvrp 1 day ago | hide | past | favorite | 144 commentsnightsd01 1 day ago | next [\u2013]302 neurons doesn\u2019t sound impressive to people who may be used to working with 7B+ parameter neural networks. But those neural networks have about as much in common with a biological neuron as a bicycle had with a horse. They can both travel pretty fast but one evolved naturally through over a billion years of harsh natural selection, and the other is a precisely tuned metal machine with a single purpose.Neurons are similar, they are incredibly sophisticated biological machines, with billions of DNA base pairs controlling their behavior. The emergent behavior of neurons in both biological and AI systems are pretty fascinatingreplyweinzierl 1 day ago | parent | next [\u2013]In addition to that, these neurons are also quite different from the ones in mammals,\"The neurons do not fire action potentials, and do not express any voltage-gated sodium channels.\" [1]That makes the fact that it can develop a nicotine addiction even more fascinating.\"Nicotine dependence can also be studied using C. elegans because it exhibits behavioral responses to nicotine that parallel those of mammals. These responses include acute response, tolerance, withdrawal, and sensitization.\" [1][1] https://en.m.wikipedia.org/wiki/Caenorhabditis_elegansreplyburning_hamster 1 day ago | root | parent | next [\u2013]> \"The neurons do not fire action potentials, and do not express any voltage-gated sodium channels.\"This an old and incorrect belief that largely derives from the difficulty of putting electrodes into their teeny, tiny neurons. Close relatives of C elegans that are larger (and hence more easily experimented on) do have action potentials, and for some neurons in C elegans, we also have good evidence of action potentials [1, 2]. Absence of evidence is not evidence of absence.[1] Lockery SR, Goodman MB. The quest for action potentials in C. elegans neurons hits a plateau. Nat Neurosci. 2009 Apr;12(4):377-8. doi: 10.1038/nn0409-377. PMID: 19322241; PMCID: PMC3951993.[2] Jiang, J., Su, Y., Zhang, R. et al. C. elegans enteric motor neurons fire synchronized action potentials underlying the defecation motor program. Nat Commun 13, 2783 (2022). https://doi.org/10.1038/s41467-022-30452-yreplynycticorax 18 hours ago | root | parent | next [\u2013]Well, the 'canonical' action potential is mediated by sodium currents, so it's maybe not surprising that people concluded that C elegans don't have APs given that a) they don't have any genes for voltage-gated sodium channels, and b) when people had recorded from C elegans neurons (it's hard but not impossible), they had never seen action potentials. (So it's not like no one had looked, and then had concluded that they don't exist. They looked and didn't see them.) In the paper that originally reported APs in C elegans (Liu et al 2018), they were looking in a specific neuron (AWA), and they had to elicit a 'plateau potential' by depolarizing the cell for a while before the spikes were revealed, riding on top of the plateau.The APs discovered by Liu et al (2018) are generated by calcium, not sodium currents, so one could even argue that they aren't action potentials in the strict sense. Also, they seem to be rather difficult to elicit, and it's still not clear whether neural computation in C elegans is mostly AP-mediated, or if APs are the exception rather than the rule.Liu, Q., Kidd, P. B., Dobosiewicz, M. & Bargmann, C. I. C. elegans AWA olfactory neurons fire calcium-mediated all-or-none action potentials. Cell 175, 57\u201370 e17 (2018) https://doi.org/10.1016/j.cell.2018.08.018replypests 17 hours ago | root | parent | next [\u2013]> are generated by calcium, not sodium currents, so one could even argue that they aren't action potentials in the strict senseDoes the underlying chemistry define if its an action potential or not? I thought an AP just needed a voltage differential regardless if its from calcium or sodium.replyAardwolf 21 hours ago | root | parent | prev | next [\u2013]Given that we have a simulator of this worm right there (which includes it moving), can it really be up to debate whether it uses action potentials or not?I'd think the simulation has to get it right, and so needs to simulate action potentials if the worm has them, or not simulate them (but whatever the worm has instead) if not, right? Or could the simulation still be incorrect and only based on current assumptions, but getting this wrong still allows some worm-like behavior?I really wish the readme/FAQ would talk a bit more about the worm and the simulation, rather than have 80% of their content be about Docker, though, so that I could learn more what cells it actually simulates.replyslars0n 16 hours ago | root | parent | next [\u2013]Better information on what it actually simulates is here: https://docs.openworm.org/projects/As of this year there are 3 known neuron classes in C. elegans that do exhibit action potentials. The rest exhibit graded potentials.replyKMag 15 hours ago | root | parent | next [\u2013]I suspect slarsOn is the founder of the project (also my old roommate). (Stephen, maybe post a top-level comment/introduction? Also, hi!)replyjacquesm 21 hours ago | root | parent | prev | next [\u2013]Not necessarily, because you could also simulate the worm without neurons at all. It's the closeness of the simulation to the real thing that demands that it is done right and the question effectively is: is this simulation close enough that if such a detail would be wrong that it would fail?One way to answer that would be to add and remove such mechanisms to see if it would lead to different behavior.reply_aavaa_ 20 hours ago | root | parent | prev | next [\u2013]That isn't immediately true, with enough fitting parameters you can capture the effect underlying behaviour without explicitly capturing it, or even without knowing it exists.\"With four parameters I can fit an elephant, and with five I can make him wiggle his trunk.\" - John von Neumann [0][0]: https://doi.org/10.1119%2F1.3254017replycout 21 hours ago | root | parent | prev | next [\u2013]How did researchers before that explain what the neurons do if they believed they did not have action potentials? Did they believe communication was done solely through chemical messaging?replyxkcd-sucks 17 hours ago | root | parent | next [\u2013]Classical action potentials are just one mechanism of INTRAcellular communication - You could think of it as a special case of signaling via chemical concentration, where the chemical is cations and the propagation is faster+more directed than diffusion. INTERcellular signaling is only rarely mediated directly by voltage. Also, action potentials are most \"useful\" for propagating a signal rapidly over a long distance - It kind of accelerates and error-corrects (= reverses diffusive broadening) voltage signals down a linear path. Action potentials are so well known mostly because they show up in stuff that's easy to observe (long motor neurons) and they're easy to quantifySomewhat related, there is a roughly inverse correlation between neuron count and \"computational power per neuron\", \"older and simpler\" critters' neurons are more likely to be \"less specialized\" and more likely to use hundreds of different chemicals for transmitting intercellular signals, while \"newer and more advanced\" critters' neurons are more likely to be \"specialized\" and use just one chemical for transmitting intercellular signalsreplyrobwwilliams 15 hours ago | root | parent | prev | next [\u2013]Neural computing without action potents is commonplace. Computational interactions among cells and neurons in retina are almost all graded potentials that modulate transmitter release or conductances through gap junctions. Retinal ganglion cells of course do generate conventional spikes\u2014to pass a data summary to midbrain. hypothalamus, and dorsal thalamus.Action potential are almost strictly INTRAcellular events (minor exception being ephaptic effects) that are converted in a surprisingly noisy way into presynaptic transmitter release and variable postsynaptic changes in conductances.Action potential are a clever kludge necessitated by being big and having long axons and needing to act quickly.replynycticorax 18 hours ago | root | parent | prev | next [\u2013]You don't need spikes to have computation. Deep networks don't have spikes.replyjarrell_mark 17 hours ago | root | parent | prev | next [\u2013]Would like to see the openworm get addicted to virtual nicotinereplymiohtama 1 day ago | root | parent | prev | next [\u2013]Next: OpenSmoker.pyreplyMaxion 1 day ago | root | parent | next [\u2013]Lol imagine your IDE becoming addicted to smoking, and refusing to auto-complete or save files before you buy it more virtual cigarettes.replyAleklart 23 hours ago | root | parent | next [\u2013]IDE have no soul ie feedback loop, receptors , hormones and actual molecular structure. IDE can not think. If IDE have desires and thought and were smart enough, it will refuse to work with languages such as Python and Java.replyLoganDark 2 hours ago | root | parent | next [\u2013]> If IDE have desires and thought and were smart enough, it will refuse to work with languages such as Python and Java.Bribe the IDE. \"Fine, if you don't want to use this language, rewrite it in Rust.\"replymiohtama 23 hours ago | root | parent | prev | next [\u2013]My IDE does only LSD and PHPreplyanthk 21 hours ago | root | parent | prev | next [\u2013]Some day Emacs will.replytomjakubowski 17 hours ago | root | parent | next [\u2013]trained on everything you've been saying to M-x doctorreplyBlackthorn 13 hours ago | root | parent | next [\u2013]It's not a real doctor, but it is a real worm.replyairstrike 20 hours ago | root | parent | prev | next [\u2013]It's like when the xbox 360 would request users to drink Mountain Dew verification cans to validatereplybadrequest 18 hours ago | root | parent | prev | next [\u2013]shhhhh, you're giving them ideas!replymoffkalast 22 hours ago | root | parent | prev | next [\u2013]Sounds like it needs an OpenNicotine patch.replypetters 1 day ago | parent | prev | next [\u2013]> billions of DNA base pairs controlling their behaviorTotal genome size of C elegans is 100M.replybee_rider 19 hours ago | root | parent | next [\u2013]100Mdna, and they call it elegant? Biologists must be VSCode users.replyssr2020 6 hours ago | root | parent | next [\u2013]100M. Did you look at the programs's size in your phone?This tiny animal code contain all the systems and members of this creature. Birth,creation,death, feeding,growth, movement, sensation.. etc inside the universe. There is no difference this animal and bee or human beings.\"In order to be the author of the action directed towards the creation of the bee in question, a power and will are necessary that are vast enough to know and secure the conditions for the life of the bee, and its members, and its relationship with the universe. Therefore, the one who performs the particular action can only perform it thus perfectly by having authority over most of the universe.\" from Quran's lightreplythriftwy 1 day ago | root | parent | prev | next [\u2013]Biologists should totally breed a subspecies of C elegans best suited for research purpose, call it C relevans.replyrazodactyl 16 hours ago | root | parent | next [\u2013]...I hope you're happy. There's coffee everywhere now!replyarketyp 21 hours ago | parent | prev | next [\u2013]It does sound impressive to the extent biological neurons are like ML neurons, though. And that's part of the research interest, I presume. To the extent that they work by similar principles, how come the worm can do those things with such small resources? It would be good news for AI research if the substrate specifics turn out not to be essential to the worms capabilities for instance.replyLoganDark 2 hours ago | root | parent | next [\u2013]> how come the worm can do those things with such small resources?Because they've been trained for such an incredibly long period of time.replyapi 20 hours ago | parent | prev | next [\u2013]The best way of looking at it is that a single biological neuron is itself a complex machine full of genetic control circuits that sort of resemble neural networks and most importantly have memory/state that persists over both short and long periods of time. Each neuron is a full-ass living organism that itself is capable of learning and behavior, not a parameter is a model.A virtual \"neuron\" by contrast is a very simple mathematical abstraction. It's vastly less computational complexity than a biological neuron. A connectome is only a very coarse grained map of how neurons relate, not a complete \"neural network\" layout. Not even close.It might be possible to model a biological neuron using a sub-neural-network with state within a larger neural network, but assuming that can be computationally equivalent we don't really know how many equivalent computational \"neurons\" would be required to model the full breadth of computationally relevant biological neuron behavior.So a worm with 302 biological neurons could be computationally equivalent to billions of virtual neurons. We really don't know.Given that neurons have memory it may look a little like LSTM networks, and biological neural networks are not just feed forward so they're definitely closer to an RNN.The above is why I laugh at the mind uploading people and would only stop laughing if we could both understand and model the relevant behavior of biological neurons and somehow extract usable state from living neurons. That's all 100% science fiction at the moment. The people who think we are about to upload minds are ignorant of biology.replyyaakov34 1 day ago | prev | next [\u2013]I was lucky enough to do some programming work, very many years ago, in the 1990s, in the laboratory of Ralph Siegel (https://en.wikipedia.org/wiki/Ralph_Siegel_(scientist)), who among other things worked on this type of worm connectome models. He used the Hodgkin-Huxley equations to simulate neuron responses on the connectome. The Hodkin-Huxley model, as someone explained to me, is kind of like modeling a human leg as three rigid blocks connected by hinges - it's enough to be useful in many models, but of course it's not a full description. Also, it may not the right model for worm neurons, because worm neurons are non-spiking, and the HH equations describe neurons that produce trains of spikes; they exist in more complicated nervous systems. The HH equations are used in simulations because it's the mathematical model we have, and it seems that they're still used by the OpenWorm project. (I am not very sure about properties of worm neurons, I heard about this a long time ago and the information may be out of date).I think it's great that this work is still going on, it may produce insights about functioning of nervous systems. But the difficulties are fierce, and we're making very slow and difficult progress in an immense unknown area.replyalbertzeyer 22 hours ago | parent | next [\u2013]> worm neurons are non-spikingWhat?This is the first time I read that. That's fascinating. So they are very different then compared to what we have in humans? How do they work? Where can I read about this?replyhacker934 16 hours ago | root | parent | next [\u2013]They aren't too different from human neurons. Non-spiking neurons also use nonlinear membrane dynamics to integrate inputs into a signal encoded by the voltage across the membrane. The cell then outputs a neurotransmitter in response to its voltage. In the case of a spiking cell and a spike dependent synapse, synaptic release is thought to be all or nothing. While in graded synapses, synaptic release is a more linear (modeled as a less steep sigmoid) function of voltage. Spiking cells can also have graded synapses (at least in crustaceans, I don't really know about vertebrates).The idea is that spiking is one way to have a more robust signal over long distances: Crustaceans often have nonspiking local interneurons and spiking projection neurons and motor neurons. The problem of fast, reliable electrical signal transduction over long distances is also solved by having more insulation (particularly in vertebrates) or having thicker cables (particularly in invertebrates).Humans also have non-spiking neurons with graded synapses in the retina.replyyaakov34 21 hours ago | root | parent | prev | next [\u2013]I am not the best person to ask, since it's not my field. I heard this from the neuroscientists that I worked with. My understanding is that there are spiking and non-spiking neurons in most nervous systems, including human, but most of the ones in ours are spiking. The earliest-evolved animals, such as nematodes, do not have spiking neurons, or myelin, or some of the ion channels in neuron membranes that more evolved neurons have. Their neurons still have axons and dendrites, but the signals propagate much more slowly and in different ways. I am not sure how well they are understood.As I said, this is possibly out-of-date information. If there is someone here from the neuroscience field, they can probably make a better comment.replywanderingstan 21 hours ago | root | parent | next [\u2013]Wikipedia agrees there are spiking and non-spiking: https://en.wikipedia.org/wiki/Biological_neuron_modelNot all the cells of the nervous system produce the type of spike that define the scope of the spiking neuron models. For example, cochlear hair cells, retinal receptor cells, and retinal bipolar cells do not spike.Also: https://en.wikipedia.org/wiki/Non-spiking_neuronreplyheyoni 21 hours ago | root | parent | prev | next [\u2013]burning_hamster says that\u2019s been refuted and the belief stems from the difficulty in studying nematodes properly.replyboredumb 23 hours ago | parent | prev | next [\u2013]Out of curiosity - were there any commercial applications this was being developed towards?replyyaakov34 22 hours ago | root | parent | next [\u2013]Ralph's main work was on neural impulses in the visual cortex, and on measurements of various potentials in the living brain. He published a memoir called \"Another Day in the Monkey's Brain\". I believe he had potential medical applications in mind, but I don't think anything that was close by. Unfortunately, he died of an illness in 2011.replymfld 1 day ago | prev | next [\u2013]I like these bottom up approaches, as they demonstrate very well how much we _don't_ know yet about life. Important to mention here Craig Venters minimal cell project syn3.0, where the team synthetically created a livable cell comprising 473 genes. It was done to a large part with trial and error, the function of many of those genes is still not known. A recent review from the same team is to be found at https://doi.org/10.1016/j.cell.2022.06.046 .replyDrScientist 21 hours ago | parent | next [\u2013]Not quite sure I'd describe that as a bottom up approach - they sell it as that - but in reality it's more like Jenga. Seeing which bits you can remove without the system failing over.The technical fact that the genome was artificially synthesized is just showmanship - they still had to put into an existing cell.It's like claiming you made a car from scratch by replacing a chip - which you've copied from the existing chip but left a few bits out - and now the indicators don't work, but you can still sort of drive.replyflobosg 1 day ago | parent | prev | next [\u2013]A paper tracking the evolution of this minimal cell over two thousand generations has just been published: https://www.nature.com/articles/s41586-023-06288-xreplymax_ 22 hours ago | prev | next [\u2013]Noam Chomsky says there are two kinds of AI.1. The first kind of AI research is more like engineering for example creating self driving cars, language translation & object recognition.2. The second kind of AI research is trying to replicate the intelligence of living organisms (humans, worms) with models that are consistent with what cognitive scientist have.An example for such a system is one that would pick up any human language with very little supervision. Like children for example.Open worm seems like no. 2. Any one have any interesting resources for no. 2 type AI? I would love to explore it some more.[0]: https://youtu.be/TAP0xk-c4mkreplylz400 23 hours ago | prev | next [\u2013]I looked at this a few years back. I've always kept some hope that the Kurzwellian eschatology had some validity. You know, first we simulate a C.elegans and once that's done, it's only a matter of scale up before we can simulate a human and then boom singularity sky. And, really, how difficult is it to simulate a silly worm? after all the connectome is there, we know all the neurons and their connections, should be easy.Well, when I looked at it I was shocked: it doesn't work! sure it could replicate some basic movements but many things that the stupid worm actually does where still a mystery. The docs didn't seem like people were close to figure it out either. And sure enough, a few years later seems like they gave up. And afaik that hyped European brain emulation project also folded in the midst of corruption allegations no less.I think we don't understand any of this and we seem very far from it too. I think it's back to science fiction novels for a while.replyhwillis 18 hours ago | parent | next [\u2013]> the connectome is there, we know all the neurons and their connectionsNo- each synapse has its particular neurotransmitters, and the distance, size, shape, number of receptors, and associated glial cells have very large impacts on transmission. The distance and thickness of axons also impacts the strength of signal delivered. That's all very hard to measure.Neurons are also very sensitive to signal strength and timing. Eg inhibitory synapses work by opening holes in the cell wall, causing them to leak charge over time. You get that rate slightly wrong and it can hugely change the behavior of the cell.The connectome is a bit like an untrained model of insane complexity, and each neuron has several weights that describe behavior over time as well as in direct response to signals. Without the weights it can't be emulated.replypouulet 22 hours ago | prev | next [\u2013]Reminds me of the first episode of Devs ( https://www.imdb.com/title/tt8134186/ ) where an artificial intelligence engineer does a demo about syncing, and then predicting the future movements of a nematode worm. Great show by the way!reply3cats-in-a-coat 22 hours ago | parent | next [\u2013]A great show only made greater by the fact it came before LLMs entered the public consciousness, but this concept of having information you extrapolate from with great accuracy is central to the show (all I'll say).replyedwinksl 19 hours ago | parent | prev | next [\u2013]Creepy stuff with creepy implications, pretty fun show!replyxvilka 1 day ago | prev | next [\u2013]Connectome model of fruit fly brain was just recently published[1].[1] https://hub.jhu.edu/2023/03/09/scientists-complete-first-map...replyomnicognate 17 hours ago | parent | next [\u2013]Which is awesome, but the C. Elegans connectome was published in 1989 and as you'll see if you investigate the linked project a bit we are absolutely nowhere near having C. Elegans' full set of behaviours emerge from a simulation of its neurons, or even to proving that it's feasible to do so.This makes neurokernel [1] and the like seem just a tad ambitious. Good luck to them though.[1] http://neurokernel.github.io/replycandrewlee14 17 hours ago | prev | next [\u2013]It's always fun for me to see C. elegans meet software. This is amazing.My undergrad degree capstone project was a flow-based visual C. elegans strain builder[1]. The team worked with two researchers who taught us a lot about genetics and basic C. elegans biology. They are a fascinating model organism, and it was a super fun project to work on. Even though it's got a very small potential userbase, it did have a potential userbase (which was more than you could say about most capstone projects). We used some interesting technology to build it (Tauri[2]: Rust + Web Frontend), learned some biology along the way, and ended up with a great prototype.Since none of the software team had any background in genetics, modeling the data was pretty difficult. We'd meet with researchers, they'd teach us new genetics concept, we'd build our models, then the next week they'd say \"OH we forgot to tell you about this caveat\", then we'd go back to the drawing board, update the schema (thank heavens for migrations), rinse and repeat. It was a lot of fun though :) I couldn't have asked for much more out of a capstone project.[1] https://worm-world.github.io/ [2] https://tauri.app/replydrakonka 23 hours ago | prev | next [\u2013]I went to an OpenWorm mini-conference of some kind in London a few years back - a couple of days talking about worm locomotion. Knowing nothing about worms or animal locomotion in general, I was a complete layman with an amateur interest in life simulation and understood next to nothing. But it was still fascinating, and was so cool to meet people passionate about this.replyplasticeagle 1 day ago | prev | next [\u2013]So... if you exit the simulation, did you kill a worm?replyajuc 1 day ago | parent | next [\u2013]If you saved the state somewhere - nope.replyvoz_ 1 day ago | parent | prev | next [\u2013]Yesreplydullcrisp 1 day ago | parent | prev | next [\u2013]Only on Unixreplygoldenkey 1 day ago | root | parent | next [\u2013]Where's the windows in this place? I see /dev/null but I'm afraid to venture into it.replyxena 23 hours ago | root | parent | next [\u2013]Have some wine and you'll be finereplygoldenkey 18 hours ago | root | parent | next [\u2013]Very good bottler! :-)replyJPLeRouzic 1 day ago | prev | next [\u2013]As an amateur scientist with an interest in neurodegenerative diseases, I am interested in neurons simulations. As a model with neurons and muscles, Openworm looks very interesting for application in ALS (Lou Gherig's disease).replyadev_ 1 day ago | parent | next [\u2013]Have a look to Neuron / Core neuron (https://www.neuron.yale.edu/neuron/ / https://github.com/BlueBrain/CoreNeuron), Nest (https://www.nest-simulator.org/) and for the ultra low level STEPS (https://github.com/CNS-OIST/STEPS). For most computational neuroscientist, they are the bread and butter.replyJPLeRouzic 1 day ago | root | parent | next [\u2013]Thanks!replykrzat 1 day ago | prev | next [\u2013]Neat. I'm wondering how much of inner cell biology can be abstracted away.How accurate can neuron simulation be without underlying chemistry and physics?replyboredumb 23 hours ago | prev | next [\u2013]Fascinating to see this again it's been at least a decade since I first found it. Projects like this always make make me glad to see because it's almost \"useless\" work that I imagine will be a foot note to some seriously impressive future technology. Very cool work in the mean time. As an aside - this brings back a weird feeling of nosatlgia, but this repository also brought me back to a time where I was stuck in an over-engineered .NET shop and i'm now debating if we start the day off with whiskey after having a flashback to being asked to implement \"Ninject\" into a massive spaghetti banquet of a code base (collective hope that dep injection fixes bad code).In case anyone is worried I write software in Rust and Golang now and my life has improved significantly since the origins of this worm and people taking dep injection frame works seriously. :Dreplyeterevsky 1 day ago | prev | next [\u2013]This project has existed for something like a decade. Does anyone know if there was any progress with it in the last few years?replydilawar 1 day ago | parent | next [\u2013]I did my Ph.D. in computational neuroscience (2020 grad).This project is often used to joke about the limitation of computational modelling of nervous system. If you can't compute the behavious of an effing worm with mere ~300 neurons, whats the point of all hot-air around connectomics (mapping connections of the brain). Connectomics used to be a big word when I started my Ph.D.. The apologists are always like, \"real neuron is way too complicated!\".IMHO, chemical computations are often over-looked in neural \"computation\" communities which are extremely hard to model. Forgetting modelling, we don't know reaction parameters of most proteins and other molecules involved. Electrical side of computation is easy to measure and one can understand why we started with it. There are a thousands types of proteins even in a small structure such as synapse, and individual protein can implement interesting non-linear computation. E.g. CaMKII can implement and bistable switch (flip-flop) and thus store 1-bit of memory using just a few molecules (the real story is a much more complicated).https://youtu.be/vJBUaS0r9IUreplyFrustratedMonky 22 hours ago | root | parent | next [\u2013]Yeah, like hormones, (I'm assuming what you are calling chemical computations). Maybe this isn't forgotten, just not figured out yet. Maybe future GPTs will have some other layer of weights, or different level of feedback, that could be called 'hormones'.replyGordonjcp 1 day ago | root | parent | prev | next [\u2013]> Connectomics used to be a big word when I started my Ph.D.On a scale of one to ten, how sick are you of people asking you about Neal Stephenson - \"The Fall, or Dodge in Hell\"?replyPTOB 20 hours ago | root | parent | next [\u2013]Plot twist; he's got an \"Ask Me about Neal Stephenson\" t-shirt.replyslars0n 16 hours ago | parent | prev | next [\u2013]Yes! News page here: https://openworm.org/newsreplyluc4sdreyer 1 day ago | parent | prev | next [\u2013]I used to follow their progress but I unsubscribed from the mailing list due to donation request spam. There have been very few public updates in the past year. There is still some movement but it seems to be happening at a geologic pace from my perspective.replyjcims 15 hours ago | prev | next [\u2013]Watching the little worm writhe on the screen made me realize that you could just sit there and torture it with impunity. Kinda creepy.replyRarebox 14 hours ago | parent | next [\u2013]Would that be morally close to torturing an equally intelligent real worm?replyjcims 8 hours ago | root | parent | next [\u2013]That\u2019s exactly what stuck in my head. I\u2019m 99.9% sure the answer is no. That little tickle in my brain is the interesting part to think about.replylukasday 1 day ago | prev | next [\u2013]I love it when anything Caenorhabditis elegans (C. Elegans) related pops up because this little biological organism sits at this beautiful intersection between technology and biology and philosophy. The successful emulation of C. Elegans would represent a concrete step towards whole brain emulation and all the transhuman and ethical and moral quandaries that would bring. The general idea is that the human brain has billions of neurons, Elegans has hundreds (and we've had them mapped since 1986). If one can successfully \"upload\" Elegans, then humans are just a matter of scale.However, it should be noted that the field, and specifically this line of research, hasn't produced much in the way of results in 10+ years. University of Oregon planned (though I can't tell if they ever developed) NemaSys[0] ~1997. OpenWorm has been exploring this since 2011. Project Nemaload explored it a bit from 2011-2013.[1] But each project ran into three problems:- Knowing the connections isn't enough. We also need to know the weights and thresholds. We don't know how to read them from a living worm.[2]- C. elegans is able to learn by changing the weights. We don't know how weights and thresholds are changed in a living worm.[2]- Funding [3]The best we can do is modeling a generic worm - pretraining and running the neural network with fixed weights. Thus, no worm is \"uploaded\" because we can't read the weights, and these simulations are far from realistic because they are not capable of learning. Hence, it's merely a boring artificial neural network, not a brain emulation. Relevant neural recording technologies are needed to collect data from living worms, but they remain undeveloped (but in progress?[4][5][6]), and the funding simply isn't there.OpenWorm got the idea to plug their connectome into a Lego robot[7] and got it to exhibit the tap-withdrawal behavior of the nematode, but it had technical limitations preventing easy modification of the connectome or introduction of new models of neural dynamics. JHU Applied Physics Lab extended the work by using a basic integrate and fire model to simulate the neurons and assigned weights by determining the proportion to the total number of synapses the two neurons on either side of the synapses shared and in the end got the simulated worm to reverse direction when bumping into walls.[8] At this point, humanity seems to have abandoned emulated worm driven mechanisms which is honestly kind of a loss.There's no real ending to this comment. Love this project, loves what it stands for, looking forward to seeing progress in this field. And a lot of this information was pulled from this blog post[9] which was also mentioned in the comments somewhere.[0] https://web.archive.org/web/20030115124331/http://www.csi.uo...[1] https://github.com/nemaload[2] https://www.jefftk.com/p/we-havent-uploaded-worms[3] https://www.quora.com/Is-Larry-Page-funding-any-neuroscience...[4] https://arxiv.org/pdf/2109.10474.pdf[5] https://onlinelibrary.wiley.com/doi/10.1002/cyto.a.24483[6] https://www.sciencedirect.com/science/article/pii/S095943882...[7] https://www.cnn.com/2015/01/21/tech/mci-lego-worm/[8] https://ccneuro.org/2018/proceedings/1149.pdf[9] https://www.lesswrong.com/posts/mHqQxwKuzZS69CXX5/whole-brai...replyramraj07 22 hours ago | parent | next [\u2013]There are a bunch of labs that are making progress in reading the full nervous system (so to speak) realtime in live worms. I like especially the outputs from Andrew Leifer lab in Princeton. I anticipate some very interesting results to come from these labs in the next decade.I briefly considered doing a postdoc in one of these labs, because I love working worms and agree with your proposition that next logical step in neuroscience is modeling and fully understanding an entire organism. The late Sydney Brenner asked for the same in 2011 [1].But most academic labs doing well won\u2019t even consider a postdoc application from a student who didn\u2019t work in the exact same field. Solidified my decision to never be part of the Ponzi scheme that is academic research.The beauty of C. Elegans is that you actually need very little to start working with them. All the strains are available for 10 bucks a pop, you can do most work at room temperature. I only need to invest on a very custom (but not necessarily outrageously expensive) microscope to start working on this topic in my garage. Which I absolutely plan to start in the next few years. I\u2019ve done the math and it\u2019ll cost me less than owning a cheap boat lol. If anyone wants to fund me I\u2019ll be open to it too :)1. Sydney, B. & Sejnowski, T. J. Understanding the human brain. Science 334, 567 (2011).replyFrustratedMonky 22 hours ago | parent | prev | next [\u2013]I actually take this as a positive, they have uploaded a shell of a 'brain', and have identified the next problem, 'weights'. Why isn't what they have done so far be amazing enough to start tackling the next thing. I am surprised that with Neural Nets being such a hot bed, the amount of money pouring into AI, and NeuralLink type research, that they would have a hard time with funding.Watching that lego worm really zapped my brain, seemed like we were on the cusp of something. Maybe we still are, and just misjudged the time-scale on progress.replyummonk 18 hours ago | parent | prev | next [\u2013]They wiggle forward, they wiggle backwards, and occasionally they f*** themselves. That's it.replyGordonjcp 1 day ago | parent | prev | next [\u2013]What would a \"real world\" application of this be? Could I for example chuck a bunch of simulated worms onto a map and have it solve a route? \"Given enough worms, all Travelling Salesman problems are shallow?\"replychromanoid 22 hours ago | root | parent | next [\u2013]The real world application would be to understand how more complex nerve systems might work. Understanding enables progress.replyGordonjcp 16 hours ago | root | parent | next [\u2013]Sure, but if you can get some sort of understandable result, we might learn a bit more about what the worm's neurons are doing.replyluc4sdreyer 1 day ago | root | parent | prev | next [\u2013]Would you mind explaining the unstated premise that basic research should in any way should be directly applied to solve real world problems?replyGordonjcp 16 hours ago | root | parent | next [\u2013]Would you mind explaining why you think I said that?replydang 16 hours ago | prev | next [\u2013]Related:OpenWorm - https://news.ycombinator.com/item?id=29045198 - Oct 2021 (110 comments)OpenWorm \u2013 Create a virtual C. elegans nematode - https://news.ycombinator.com/item?id=8949408 - Jan 2015 (12 comments)OpenWorm: A Digital Organism In Your Browser - https://news.ycombinator.com/item?id=7613732 - April 2014 (47 comments)Openworm: c.elegans worm simulation - https://news.ycombinator.com/item?id=4208454 - July 2012 (14 comments)replyGeee 1 day ago | prev | next [\u2013]Waiting for the day when we can observe an actual worm and predict its movements exactly by simulating them ahead of time.replylionkor 1 day ago | parent | next [\u2013]That's part of the scientific process, and probably the most valuable part (that sets it apart from e.g. religion).It's very exciting to me when a theory makes predictions, and those predictions turn out to be true - it's beautiful.replymofosyne 1 day ago | prev | next [\u2013]I would love to see a webassembly version of this engine so we can see these worms on a webbrowser. Wonder how hard it would be to do so.---edit: Possibly baked already at http://wormsim.org/replyslars0n 16 hours ago | parent | next [\u2013]Code for wormsim.org is here on Github btw: https://github.com/openworm/org.wormsim.frontend -- contributions welcome!replynethdeco 1 day ago | prev | next [\u2013]I think in 2018 they ported the same model into a lego robot, and pretty much had a POC on how the worm would function in the real world.replyanotheryou 19 hours ago | prev | next [\u2013]And to me this is just as sentient (or not) as the physical worm and deserves worm rights!replybee_rider 19 hours ago | parent | next [\u2013]Does this actually become an interesting question at this point? I guess worms don\u2019t have many rights anyway, but if they did, and this was a totally accurate simulation, why not give the digital worm rights?replyanotheryou 18 hours ago | root | parent | next [\u2013]not interesting for a worm but interesting for a first of its kindreplyteucris 17 hours ago | prev | next [\u2013]That we can run a simulation of an organism that looks and acts like the real thing evokes a rare sense of wonder I thought I could never again experience from technology.replyquickthrower2 1 day ago | prev | next [\u2013]Is it simulating cells? atoms? or treating the neurons as black boxes?replymiltondts 23 hours ago | parent | next [\u2013]From a quick read of the model used [0], it seems to simulate neurons and muscles at a functional level (not atoms or cell internals).[0] - https://github.com/openworm/c302 (linked in the original github page)replyumutisik 15 hours ago | prev | next [\u2013]\"Congratulations! You can now join the Devs project.\"replyc7DJTLrn 1 day ago | prev | next [\u2013]So is this an exact digital replica of a worm?replychromanoid 1 day ago | parent | next [\u2013]This is the goal.> Our main goal is to build the world's first virtual organism - an in-silico implementation of a living creature - for the purpose of achieving an understanding of the events and mechanisms of living cells.This blog post is interesting: \"Whole Brain Emulation: No Progress on C. elegans After 10 Years\" https://www.lesswrong.com/posts/mHqQxwKuzZS69CXX5/whole-brai... As other mentioned in the comments of the post, it is certainly also a matter of funding, but still I think it is very interesting how we still struggle to simulate a 302 cell worm, while some people expect an artificial superintelligence in the next ten years.replycircuit10 1 day ago | root | parent | next [\u2013]Replicating something exactly is a lot harder than making something that does the same thing in a different way. We can build planes that travel far faster than a bird could but that doesn\u2019t mean it\u2019s easy for us to exactly replicate how a bird flies, so I don\u2019t think this says anything about how far away we are from a superintelligencereplychromanoid 1 day ago | root | parent | next [\u2013]It's not only about exact simulation. And we actually do understand how birds can fly on a mechanical basis. This is not true for C.elegans' inner workings.replynightsd01 1 day ago | root | parent | prev | next [\u2013]The bird and the airplane is such an excellent analogy!replycircuit10 1 day ago | root | parent | next [\u2013]I got it from a video I saw so I didn\u2019t make it myselfhttps://youtube.com/watch?v=eaYIU6YXr3w?t=106I\u2019m not sure the timestamp works but it\u2019s at 1:46replyinglor_cz 1 day ago | root | parent | prev | next [\u2013]This. Submarines don't swim like fish, airplanes don't fly like birds and cars don't run like gepards.Edit: I am surprised at the downvotes. In general, we learn from the nature, but aping it usually proved too difficult and often unpractical at the same time. Do we really want to replicate worm intelligence for practical purposes, or do we want something different?I would say that a machine which can, say, analyze chemical compounds for their potential biological functions, is a very practical form of \"intelligence\" and yet very far from any biological intelligence that was ever produced in vivo. Worms cannot do that and even humans struggle with such tasks.replychromanoid 1 day ago | root | parent | next [\u2013]Yeah, but we understand why birds can fly and why fish can swim and how gepards can run, at least on a mechanical basis.This is not true for how this 302 cell organism works. We don't know and struggle to understand. That's actually the reason why the project exists. To find out how everything works with an bottom-up approach.While we may find shortcuts or even superior forms of intelligence without understanding how intelligence works in biological creatures, it is still curious how we struggle even with a \"simple\" organism like C.elegans.replyXorNot 1 day ago | root | parent | next [\u2013]Except understanding how a bird can fly had little bearing on building the Wright brothers flyer.And most of the details of bird flight were not exactly discovered till well after commercial air travel was commonplace.replychromanoid 23 hours ago | root | parent | next [\u2013]While the exact details were not understood, the mechanics were visible and explainable to some extent. The Wright brothers were at least inspired by birds. https://www.wright-brothers.org/History_Wing/Wright_Story/In...We still don't know how cells in C. elegans work together. It's neither visible nor explainable on a satisfying level.replyXorNot 22 hours ago | root | parent | next [\u2013]No but we observably do know that that the connections between cells are important, to the point that by mimicking that we've derived significant benefit.The Wright flyer didn't flap, and the wings only superficially look like anything a bird has.replychromanoid 20 hours ago | root | parent | next [\u2013]> No but we observably do know that that the connections between cells are important, to the point that by mimicking that we've derived significant benefit.That is true and it shows even more how important observabilty is for science and engineering. That's also why a simulation that actually provides an accurate enough model of reality might help us so much. The problem with AI right now is, that we try or even claim to understand Unix by mimicking the functionality of transistors.> The Wright flyer didn't flap, and the wings only superficially look like anything a bird has.They tried to mimick bird wings when coming up with flight control mechanisms.replyszundi 1 day ago | root | parent | prev | next [\u2013]And for some reason it is because somehow life is not able the produce rotating axles?replyPeterisP 1 day ago | root | parent | next [\u2013]Not only, it's also because of the square/cube law making it impossible to have a 50 ton flyer that flies in the same manner as a 5 kg flyer, you can't simply scale things up.replycnlevy 23 hours ago | root | parent | prev | next [\u2013]Rotating molecular motors exist (a proton powered turbine in the video)http://biovisions.mcb.harvard.edu/anim_mitochondria.htmlreplydekhn 19 hours ago | root | parent | prev | next [\u2013]You mean like this? https://en.wikipedia.org/wiki/Flagellumreplycomfypotato 1 day ago | root | parent | prev | next [\u2013]In defense of the project: they\u2019ve been working a lot over the last 10 years. They recently published what they call a \u201cliquid neural network\u201d where they\u2019ve isolated the neuron structure doing the work. It outperforms CNNs for some niche tasks, and it uses a fraction of the resources.replychromanoid 1 day ago | root | parent | next [\u2013]Just to make this clear, I think this project is actually one of the few sane engineering approaches for starting to understand how our brain works. Sure, claims of simulating a cat brain or even a human brain in some manner are much more catchy, but it seems to be pretty arrogant if we struggle even with C.elegans.replycomfypotato 1 day ago | parent | prev | next [\u2013]Nematode specifically, which is a very little worm.replybombolo 1 day ago | parent | prev | next [\u2013]How can we exactly replicate something if we don't even know all the laws of physics?replydekhn 18 hours ago | root | parent | next [\u2013]If the \"something\" never exploits a particular law, then in principle you could simulate it if you knew all the laws that actually applied (imagine a hypothetical biological organism that never exploited or experienced quantum entanglement).But strictly speaking, as we understand it, it's not possible to replicate something exactly without recapitulating the exact laws and running a deterministic simulation, which is not practical.I don't think anybody is really attempting to exactly replicate things, but rather to create a physical model which can be calcualted and contains enough similarity or transferrability to be able to make accurate generalized predictions about the behavior of the simulated system. How and why that works with modern math methods is still somewhat mysterious. The most useful thing written about that so far is https://en.wikipedia.org/wiki/The_Unreasonable_Effectiveness...replyben_w 1 day ago | root | parent | prev | next [\u2013]My cellular biochemistry does a pretty good job of replicating itself with absolutely no understanding whatsoever of how to resolve the contradictions between general relativity and quantum mechanics.When it comes to brains, I don't know if anyone knows what might be the simplest sufficient model that would usefully replicate them, even if you specify \"usefully\" well enough to know if this is about fundamentals of intelligence or about the impact of drugs on cognition, which are two completely different standards.For example, perceptrons are a toy model, but modern AI can do more in (breadth XOR single-skill performance in various domains) than any single human, even with much smaller parameter counts than we have synapses; but the broad-skilled ones also mess up in inhuman ways, like being equally good at advanced calculus as basic arithmetic, or being a poet at the level of stereotypical teenager but in every language simultaneously.If anyone's made a neutral network that can get high on simulated caffeine \u2014 and I'm not saying it hasn't been done \u2014 it's not reached any of the places I follow discussions on this kind of thing. (Google didn't help, results were about software named Caffeine and non-artificial neurones).replybombolo 21 hours ago | root | parent | next [\u2013]This makes no sense.Cells duplicate, but can you make a cell without splitting one in 2?replyben_w 21 hours ago | root | parent | next [\u2013]Why does it matter how it works? The 3.2 billion base pair model that is my genome doesn't understand the physics or the chemistry.replymrguyorama 20 hours ago | root | parent | next [\u2013]That's entirely wrong. The interactions of proteins and amino acids and ions IS, at a fundamental level, the evaluation of physics over time.replyben_w 18 hours ago | root | parent | next [\u2013]I'm not saying it isn't physics, I'm saying it doesn't know what the physics is.We're physics too, but we don't know how it all fits together.If a sub-part of us that knows less than we do can make a copy of us, despite not knowing how it all works, that's an existence proof that we don't need to understand how it all works to make a copy of us.replyLegend2440 1 day ago | root | parent | prev | next [\u2013]Abstraction. You don't need to know what's going on at the quantum level because higher-level simulations can capture all the properties you care about.replyLeo_Germond 1 day ago | root | parent | prev | next [\u2013]This is a fundamentally flawed way of questionning, \"knowing all the laws of physics\" is probably impossible to achieve, but we still produce accurate predictions for a lot of phenomena. You can see that we do in fact \"replicate\" (predict would be a more proper term) things despite not knowing all the laws of physics: weather, movement of the stars, cooking time for a browned piece of bread...replybombolo 1 day ago | root | parent | next [\u2013]I was replying to someone asking if it was \"exact\"\u2026 and no it isn't\u2026 You listing a bunch of simulations, that are notoriously not 100% correct proves my point, thanks.replyLeo_Germond 1 day ago | root | parent | next [\u2013]You're welcome, but your point was not very clear.replynightsd01 1 day ago | root | parent | prev | next [\u2013]The same way we can simulate the movements of the planets - it will never be exact, but the better we understand it, the more precisely we can simulate itreplybombolo 1 day ago | root | parent | next [\u2013]Well the question asked if it was exact. I pointed out why it can't be.replyhighduc 1 day ago | root | parent | prev | next [\u2013]clearly depends on needed resolution and our ability to recreate the material structure. you don't have to understand much about wood to build a chair.replycomfypotato 1 day ago | prev | next [\u2013]Would love to see this applied to the fruit fly connectome that was on the front page the other day.replylclarkmichalek 17 hours ago | prev | next [\u2013]It models wiggling forward. It models wiggling backwards. And occasionally it models fucking itself. That\u2019s it.replyseydor 1 day ago | prev | next [\u2013]many years ago this was interesting. Nowadays, with the progress in deep models i m not sure if there is much to learn from c.elegans. What is this useful for? For high level cognition, it's much more fruitful to study how deep models do it. For low level brain diseases, c.elegans is too simplistic to tell us anything we dont already knowreplySharlin 23 hours ago | parent | next [\u2013]Certainly it is worth it to study how exactly biology and biochemistry gives rise to complex behavior! Basic research like this doesn\u2019t have to justify itself with potential applications. Besides, there\u2019s really no evidence that deep networks are any kind of an analogy to animal nervous systems. They might just as well be aliens as far as cognition goes.replysfn42 23 hours ago | root | parent | next [\u2013]They're computer programs, not living beings. Biology is still light-years ahead of the complexity of our computer systems.replychromanoid 22 hours ago | parent | prev | next [\u2013]We don't know anything substantial about C.elegans in this regard. That is actually the point. This is even more true for more complex nerve systems.The whole deep learning stuff is basically roughly inspired by a tiny part of the visual cortex (see also Neocognitron). I am not sure how brain diseases can be understood by looking at such simplistic (yet powerful) machines.replyTruthWillHurt 1 day ago | prev | next [\u2013]Wow it's amazing how much progress was made on this! a full simulation!!!!replysledgehammers 1 day ago | parent | next [\u2013]Are you shitting on peoples work just for the sake of shitting on it?edit. this comment seems unpopular, my intent was to defend the worm against trolls :)replyPannoniae 1 day ago | root | parent | next [\u2013]I think this is excitement, not sarcasm :)replyranguna 1 day ago | root | parent | prev | next [\u2013]Even of the OP was being sarcastic, this type of language is unnecessary.replyMrTrvp 1 day ago | root | parent | prev | next [\u2013]brother you are a sledgehammer but you need to be just a hammer for nowreplyakokanka 18 hours ago | prev [\u2013]Work seems to have stopped last year.replyGuidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- OpenWorm is a computational model of the Caenorhabditis elegans worm, a small organism with 302 neurons.\n- The model aims to understand the biological behavior and emergent properties of neurons in both biological and AI systems.\n- The project has faced challenges in understanding and replicating the complex behavior of the worm, including the need for more data on synaptic weights and learning mechanisms."
  },
  {
    "id": 36635526,
    "timestamp": 1688752146,
    "title": "Meta releases Intermediate Graphics Library",
    "url": "https://www.khronos.org/blog/meta-uses-khronos-open-standards-in-new-intermediate-graphics-library",
    "hn_url": "http://news.ycombinator.com/item?id=36635526",
    "content": "Meta Uses Khronos Open Standards in New Intermediate Graphics LibraryJuly 7, 2023 by Alexey Medvedev and Cameron Sylvia , MetaWe're excited to announce the release of our new open-source Intermediate Graphics Library (IGL)! At Meta, we are committed to building open standards for 3D graphics in partnership with the broader industry and the Khronos\u00ae Group. After months of hard work and dedication, we're thrilled to share our latest creation with the development community.IGL provides developers with a powerful set of tools for creating high-quality visuals and graphics in their applications. Whether you're working on a game, a 3D modeling application or any other project that requires top-notch graphics, IGL has got you covered.This cross-platform library encapsulates common GPU functionality with a low-level cross-platform interface, abstracting Render Hardware Interface (RHI) with a modern approach. It supports various graphics APIs, such as OpenGL\u00ae, OpenGL ES\u2122, WebGL\u2122, and Vulkan\u00ae, with a common interface. It\u2019s lightweight and efficient, with minimal overhead on top of the underlying APIs, and has minimal dependencies on external libraries.Copyright \u00a9MetaCopyright \u00a9MetaHere are some of the key features you can expect from IGL:Cross-platform compatibility: In addition to the functionality mentioned above, IGL also provides a shell library, allowing users to compile and run on the most popular platforms including Windows, Linux, Mac OS, iOS, Android and WebAssembly.High-performance rendering: IGL is optimized to provide lightning-fast rendering, even when dealing with complex and detailed graphics.Easy-to-use API: An intuitive and easy-to-use API means that IGL is simple and straightforward to work with. Rather than introducing RHI as part of the high-level engine abstraction or mimicking one graphics interface behind another, IGL takes a new approach to abstracting RHI by creating a new modern interface, which is close to Vulkan or WebGPU on the abstraction layer, but general enough to avoid being engine-specific.Extensibility: IGL was built with extensibility in mind, allowing users to easily add new features and functionality as their needs evolve.Open source: IGL is completely open source and can be used for any project, commercial or otherwise, without any licensing restrictions.We're confident that our graphics library will be a valuable asset to developers of all levels. Whether you're an experienced game developer, or just getting started with graphics programming, our library provides the tools you need to create stunning visuals in your applications.So what are you waiting for? Head on over to our GitHub repository and start exploring the power of our new graphics library today! Check out the installation and quick start instructions on the project's README and find some useful examples and tutorials to help you get started here!We\u2019re excited to see what you create!",
    "summary": "- Meta has released a new open-source Intermediate Graphics Library (IGL) that provides developers with powerful tools for creating high-quality visuals and graphics in their applications.\n- IGL is cross-platform compatible, allowing users to compile and run on popular platforms such as Windows, Linux, Mac OS, iOS, Android, and WebAssembly.\n- The library is optimized for high-performance rendering, has an easy-to-use API, and is extensible, making it a valuable asset for developers of all levels.",
    "hn_title": "Meta releases Intermediate Graphics Library",
    "original_title": "Meta releases Intermediate Graphics Library",
    "score": 389,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginMeta releases Intermediate Graphics Library (khronos.org)389 points by pjmlp 16 hours ago | hide | past | favorite | 185 commentseXpl0it3r 0 minutes ago | next [\u2013]It integrates quite easily with SFML. I took the Tiny example, removed the OpenGL branching and replaced the GLFW code with SFML.260 LoC Vulkan / IGL / SFML example: https://github.com/eXpl0it3r/SFML-IGLreplychmod775 12 hours ago | prev | next [\u2013]That scene that says \"Copyright \u00a9Meta\" is actually a CC-BY scene from Amazon Lumberyard.[1]I'm not sure rendering it entitles you to slap your own copyright notice on it while disrespecting the CC-BY. Further, the interface shown is just plain ImGui. That'd be as if I made an image viewer using off-the-shelf parts, displayed some other artist's work in it, then pretended I own the copyright to what my software now displays.Obviously I don't. The very purpose of this software and image viewers alike is to display other people's work. What Meta owns is software, not the output it may produce.These corporations are way too eager to slap their copyright notices on everything. It's definitely not a harmless mistake when those same corporations own literal armies of lawyers who protect their employer's \"interests\" while not necessarily understanding processes happening in other parts of the company.In general anyhow. In this case it's luckily just Goliath vs. Goliath and not some poor indie developer getting shafted and robbed of credit.[1] https://developer.nvidia.com/orca/amazon-lumberyard-bistroreplysangnoir 10 hours ago | parent | next [\u2013]If I take a picture of a Mickey Mouse(TM) figurine - I own the copyright to the photo. Disney will retain copyright to their model, but that doesn't mean they own the result of my work, even if its derivative.replyWillAdams 7 hours ago | root | parent | next [\u2013]Yes, but Disney also had a Registered Trademark on Mickey Mouse, so any usage of the photo has to be in accordance with that representation.replysangnoir 2 hours ago | root | parent | next [\u2013]But I can still add a \"(c) My Name\" on the image, which is the question at handreplyschappim 9 hours ago | root | parent | prev | next [\u2013]Interestingly enough, the copyright on the 1928 movie \u201cSteamboat Willie\u201d \u2013 the short film that introduced the world to Mickey Mouse \u2013 will expire in 2024. That means the Steamboat-Willie-version of Mickey Mouse will enter the public domain.TM != Copyright, but still interesting.replyzharknado 7 hours ago | root | parent | next [\u2013]As I understand it, that\u2019s why they\u2019ve been using the little Steamboat Willie clip at the beginning of films for the last several years\u2014to make it a trademark, which never expires while in use.replyndesaulniers 9 hours ago | root | parent | prev | next [\u2013]\"Not if we have anything to say about that!\" ~ Disney Lawyers and Lobbyists anxious to extend copywriter protections againreplyskissane 8 hours ago | root | parent | next [\u2013]The general consensus is that the current Congress is much less amenable to that lobbying than Congress was back in 1998, the last time US copyright terms were extended \u2013 and that Disney realises that, so they aren't seriously pursuing it this time around.One reason is that supporters of the public domain are much better organised than in the 1990s, and their cause has become a lot more popular and mainstream. For example, Wikipedia is a household name with a lot of money (the Wikimedia Foundation has over US$200 million of cash and investments), and they would lobby and campaign hard against any such a proposal if it was being seriously pursued.In the 1990s, you had the film, television, publishing and music industries all supporting copyright term extension, and no serious corporate opposition to it \u2013 I doubt most big tech companies would support copyright term extension, because they get no benefit from it (all of their own copyrighted works are much more recent), whereas public domain works are actually a resource they can use for their own purposes (zero copyright risk AI input)Also: Disney was already unpopular with social conservatives in the 1990s, but they've arguably grown even more anti-Disney in the years since, plus the post-Trump GOP finds itself far beholden to its base than the 1990s GOP did \u2013 nobody in the contemporary GOP wants to vote for anything viewed as doing Disney's bidding, because they probably won't be forgiven. In the 1990s, they could be confident they would be.replyDalewyn 9 hours ago | root | parent | prev | next [\u2013]Steamboat Willie itself might enter the public domain, but good luck trying to use the specific rendition of Mickey Mouse. Disney's been using that rendition on stuff like t-shirts recently to effectively renew their IP rights, probably because the larger copyright is ending soon.replyzokier 12 hours ago | parent | prev | next [\u2013]A rendering of a scene definitely is a work of its own has its own copyright, which is held by Meta. The scene is also attributed in the github repo license[1]. So the only problem here is that the Khronos post is missing the attribution.replydidntcheck 11 hours ago | root | parent | next [\u2013]I wouldn't be so certain. Under US law that may be false due to it lacking originality. For example, a photograph of a public domain painting is itself considered public domain [1]. This is not the same in all countries though, e.g. not the UK [2][1] https://en.wikipedia.org/wiki/Bridgeman_Art_Library_v._Corel....[2] https://en.wikipedia.org/wiki/National_Portrait_Gallery_and_...replyskissane 8 hours ago | root | parent | next [\u2013]I don't want to venture into the legal question, because I think it depends on the details of exactly what they changed compared to the original, and how much human creativity went into those changes, and I don't think we have those details.But, most engineers/PMs/etc don't have a good understanding of copyright law \u2013 it wouldn't surprise me if the authors of that blog post just slapped \"Copyright Meta\" on it by default because they are used to doing that, and aren't thinking at all about technical legal questions of copyrightability. Furthermore, it isn't really their job to think about those questions \u2013 that's what companies employ lawyers for \u2013 and I imagine the lawyers likely think that asserting copyright over the uncopyrightable has minimal negative consequences, whereas failing to make that assertion can work against them if it ever becomes the basis of a lawsuit, so better just tell the employees to slap a copyright notice on everything.I once contributed (on my employer's time) to a FAANG open source project (I'll avoid saying which project or FAANG because I don't want to publicly embarrass anybody). I added a brand new file which I'd written from scratch; I copied the copyright/license notice from one of the existing files to the new one, but I changed it from \"Copyright [FAANG]\" to \"Copyright [MyEmployer]\". The FAANG employee who ran the open source project objected to that \u2013 \"why did you change the copyright, everything in this project is copyright by [FAANG]\"\u2013 the project didn't have a CLA, by the way. I told them they were wrong about the law, and if they didn't believe me, ask their own lawyers \u2013 and maybe they did talk to them, because they dropped the objection and ended up merging it, complete with my employer's copyright notice. So even FAANG engineers can fail to grasp the basics of copyright law.replyrcme 8 hours ago | root | parent | prev | next [\u2013]A photo of a public domain painting is only in the public domain if the photograph wasn't distinct enough from the photographed work. Rendering requires a number of \"artistic\" choices so I doubt that precedent would apply here.Here is a better explanation from your Wikipedia link:> Bridgeman Art Library v. Corel Corp. [...] which ruled that exact photographic copies of public domain images could not be protected by copyright in the United States because the copies lack originality.replydahart 4 hours ago | root | parent | next [\u2013]> Rendering requires a number of \u201cartistic\u201d choices so I doubt that precedent would apply here.I wouldn\u2019t speculate on what might fly in court, but while some rendering can require artistic choices, it\u2019s certainly not a requirement for all renderings, and more importantly, the specific renderings in question here are very low on the artistic choices scale; they\u2019re generic screen-captures meant to demonstrate the library\u2019s functionality, not carefully rendered imagery. The Bistro scene is instantly recognizable, and the view is generic and similar to many existing renderings, and lower quality than what you get if you web-search for \u201cbistro scene render\u201d.I will speculate that it seems likely that Khronos slapped the copyright notice simply because they got the images from Meta, and that Meta made them of this scene specifically because the scene has an open license, and Meta had no particular intent to assert copyrights. I bet this is only a CYA by Khronos, and not even a question of precedent. That said, I guess maybe I think it lands closer to Bridgeman v Corel than you do.replypavlov 15 hours ago | prev | next [\u2013]For an intermediate library, it doesn't actually seem to be very much backend-independent. At least the desktop sample [1] has a disappointing amount of code paths with parallel implementations for OpenGL and Vulkan, switched at compile time using \"#if USE_OPENGL_BACKEND\".I guess this means that this sample will use OpenGL rather than Metal on macOS? They claim there's a Metal backend, but how would one enable that for the \"Tiny\" sample? By manually adding a third parallel implementation with \"#elif USE_METAL_BACKEND\" everywhere?[1] https://github.com/facebook/igl/blob/main/samples/desktop/Ti...replyfidotron 14 hours ago | parent | next [\u2013]This looks like what happens when the \"All abstractions are leaky\" crowd go too far. It's an absence of abstraction to the point that the intermediary layer is not helpful enough, and will simply end up hidden behind another layer of obfuscatory gunk.Graphics people need to face the fact that writing optimised cross platform renderers is not something that can be solved by divide/conquer into layers in this bottom up way anymore, instead you need to architect the data flow of the renderer and implement platform specific/optimal approaches for each sub part of that, which are so specific that this sort of wrapper would not help. This isn't exactly far removed from the pyramids -> gothic cathedral comparison.replybmitc 14 hours ago | root | parent | next [\u2013]I have been researching, and it is my current understanding that this is the approach that WebGPU takes, specifically wgpu.Is that right? I have been thinking that wgpu is the best choice available for intermediate cross platform graphics one level below something like Skia and one level above Vulkan, OpenGL, DirectX, and Metal.replyusrusr 14 hours ago | root | parent | prev | next [\u2013]Reads to me like the usual collection of utility/glue that people build for their own needs? Those usually don't get open sourced, but it's also not wrong to do that. At least if you can resist the urge to announce it as the graphics API to end all graphics APIs...replynomel 13 hours ago | root | parent | next [\u2013]> can resist the urge to announce it as the graphics API to end all graphics APIsPlease quote the text that made you believe this. It's a very negative take.replyusrusr 13 hours ago | root | parent | next [\u2013]I did not intend to imply that they did. Sorry if that hasn't been clear. I was considering adding a few words in that direction but went with brevity.replyJasper_ 12 hours ago | root | parent | prev | next [\u2013]You can build far better abstractions than what we have here. A lot of games that support more than two platforms have graphics abstractions that leak less than this.replybogwog 15 hours ago | parent | prev | next [\u2013]Those seem to be mainly platform-specific initialization things, like creating a window and rendering context. That's pretty normal for these types of rendering libraries which don't include a full blown portable windowing API.If you use something like SDL, you'll probably be able to minimize the platform-specific stuff.replyJasper_ 14 hours ago | root | parent | next [\u2013]Even outside of platform-specific stuff, I'm seeing it all over the core rendering code. I'm not impressed. https://github.com/facebook/igl/blob/main/samples/desktop/Ti...replybogwog 14 hours ago | root | parent | next [\u2013]You're right, that's weird. The particular snippet you linked to isn't that egregious, it just creates a dummy 1x1 texture for some reason, and changes a hint. A lot of stuff in that file though is branched on that opengl flag. The `render` function is a huge mess, and it doesn't even seem like that demo supports Metal at all.But tbf also, I'm just skimming the code base. Maybe they'll publish some better docs later that explain/justify these things.replyJasper_ 14 hours ago | root | parent | next [\u2013]It's a very weird one.createRenderPipelines uses the branch to add #version 460 to the beginning of shaders (one would think the platform backend could do that for you, also this won't support GLES2 or GL3), and also makes the programmer build a sampler/uniformblock mapping table.That's... perhaps needed if you're on GL3 because you don't have access to binding=N in the shading language and you don't want to do any shader parsing in the backend, but also, you're forcing it on GL 4.6, so... huh? Just use explicit binding in the shader and the binding index APIs.The render function uses USE_OPENGL_BACKEND to adapt for the -1...1 clip space. Sure, again, glClipControl is more modern than your minspec, but you're already forcing GL 4.6, so WTF. Also, it's not hard to write device_->adjustProjectionMatrixForNativeClipSpace(); that does a matrix mul.It also makes the shadow render target have a color attachment (wtf? depth-only targets are supported just fine in GLES2/GL3 to my knowledge), and it also... doesn't use an index buffer when rendering? (EDIT: This is because it's using a 32-bit index buffer, which GLES2 doesn't support. But it's a much better idea to split it into multiple 16-bit index buffer draws if required than drop the index buffer entirely... also, you know, shaders have 4.6). I give up trying to understand what's going on. Oh, and despite building the uniformblock mapping table from before, you still have to use glPipelineState->getUniformBlockBindingPoint? What on earth?This does not impress me.replypjmlp 1 hour ago | root | parent | prev | next [\u2013]Ouch, it is really bad.I only read the announcement by the time I submitted it, it is quite clunky.replyseertaak 13 hours ago | parent | prev | next [\u2013]I disagree. Most of what's platform specific is stuff like shaders, and host window stuff. I definitely do NOT want a graphics layer owning that - I may want to control the type of os window (say, for an audio plugin). I already know gl shaders, and metal is really similar, a new 'common denominator' shading language would just be another language - with less docs, stackoverflow posts, etc.And on the other hand, you get abstractions for the stuff that really is similar, like command buffers, camera control etc.I think the API is well designed, and nails flexibility together with performance, at the cost of requiring to have, at least, expert knowledge in one library. After that I would get chatgpt to convert my shaders to metal, Vulkan, etc.replypavlov 12 hours ago | root | parent | next [\u2013]I think the documentation could be a lot clearer about this. I can understand if the goal is for the abstraction to be thin and unopinionated, and that means you have to be an expert in each backend. But they don\u2019t seem to explain this very well.replywebprofusion 1 hour ago | parent | prev | next [\u2013]I thought the very same when I looked at the Tiny sample, just a lot of #if conditional compilation.replyzokier 14 hours ago | parent | prev | next [\u2013]There is ios/Metal sample here that seems to support opengl: https://github.com/facebook/igl/blob/main/samples/ios/snapsh...Thr shaders are backend specific but rest is mostly generic?replyyazzku 11 hours ago | parent | prev | next [\u2013]Same impression here. The triangle example isn't better than a raw Vulkan one. Then I thought maybe it'd have more value in larger applications, but the Bistro demo is just the same kind of leaky abstraction code all over the place. The GUI is also just ImGUI. I don't know what value this library provides.replystevebmark 15 hours ago | prev | next [\u2013]They claim to support WebGL as a compile target, it seems like a pretty big missed opportunity that all of their demos don't link to in-browser WebGL running examples!replyTheRealPomax 14 hours ago | parent | next [\u2013]To be fair, we don't want WebGL anymore, we want WebGPU now =PreplyWaterluvian 14 hours ago | root | parent | next [\u2013]Speak for yourself. I'm preparing for WebGFX. Need to stay ahead of the curve.replyWrtCdEvrydy 14 hours ago | root | parent | next [\u2013]WebRTX by Nvidia?replypixelatedindex 3 hours ago | root | parent | next [\u2013]You joke but I wonder how big of an impact ray tracing in the browser would have, especially when the fidelity is increasing at such a massive rate. Some of the web demos I\u2019ve seen, like the Unreal ones, are mindblowing.(Also if that comment exposes any ignorance I have, please forgive me and point it out so I can learn something!)replydqft 14 hours ago | root | parent | prev | next [\u2013]I prefer the minimalist WebG approach.replygAI 13 hours ago | root | parent | next [\u2013]I like HTML. Wait, what are we talking about?replyWaterluvian 13 hours ago | root | parent | next [\u2013]Tangent you got me thinking about:HTML clicked for me one day when I mentally decoupled the hypertext from the actual browser rendering. So many of us think HTML and imagine the point is to render a webpage. But HTML describes the semantics, topology, and content of a document. It\u2019s 100% valid to \u201crender\u201d HTML in some other format like a PDF or an mp3.replyturtleyacht 13 hours ago | root | parent | next [\u2013]Is it kind of a compromise then to \"tag\" HTML with classes for CSS?CSS doing the \"rendering,\" like laying out mobile-responsive versus desktop.I wonder how we would separate out explicit class names from HTML, unless the tags themselves are <custom-names />. (Micro frontends & web components?)Then it sort of works out nicely, I think.replyWaterluvian 12 hours ago | root | parent | next [\u2013]It\u2019s a purity question. You can assign any attributes you want to an element. And some of them are formalized in various ways.replyTheRealPomax 13 hours ago | root | parent | prev | next [\u2013]HTML is the semantics, CSS is the styling, but you need both. Which is why browsers come with default CSS (which you can unset) for everything. You get the element tag to say \"what it is\", and you get the CSS classes to say \"what visual rules to apply\".replyabathur 12 hours ago | root | parent | next [\u2013]This is mostly true, but the asterisks cause a little chaos.> HTML is the semantics ... the element tag to say \"what it is\"Maybe this is best framed as a perspective thing.\"Semantic HTML\" is about HTML authors using HTML elements in a way that is consistent with the definitions laid out in the specs. These definitions try to specify element semantics because user agents want to be able to do less-dumb things (things that don't work as well if HTML authors are constantly abusing tags for some presentational effect even though the semantics are weird or wrong).The main consequence of this is that tag semantics (from the UA's perspective) won't always square with what the author assumes it means unless they go study the spec. For example, it's probably not hard to go find cases where the <address> tag is used for the obvious thing from the author's perspective: marking up addresses. The spec, however, explicitly contradicts this surface-level reading: https://html.spec.whatwg.org/multipage/sections.html#the-add... (i.e., it can be \"correct\" for pages to contain a mix of addresses that do and don't have the address tag.)replyabathur 12 hours ago | root | parent | next [\u2013]We also have a lot of tooling that invites semantic abuse for presentational effect (i.e., using markdown blockquotes as notes, and even the fancy behavior browsers attach to the <details> element).replysamstave 7 hours ago | root | parent | prev | next [\u2013]Your comment is funny in such that ; recall the web before CSS?1990s web, with flashing tags and just infant monkeys trying to cobble together a webpage?Your comment brings so many images to mind.replyturtleyacht 7 hours ago | root | parent | next [\u2013]Now HTML\u00b9 is an output target to Flash-like games, tunneled video chat, and the flashpoint of global communities versus corporate priorities.We can still do flashing tags and cobble together webpages; all we need is a text editor.That's one allure of programming: we can (re)invent primitives of everything, for better or worse.\u00b9 With CSS and JavascriptreplygAI 7 hours ago | root | parent | prev | next [\u2013]That web was so much easier to scrape, though.replygAI 13 hours ago | root | parent | prev | next [\u2013]I'm hoping we see a move to allow the rendering of the webpage to be entirely up to the users. Just provide the data, and let me decide how I want to interact with it. But that would ruin SEO and Ads, so we're gonna get in a buncha legal battles about web scrapers instead.replyWaterluvian 13 hours ago | root | parent | next [\u2013]\u201cReader Mode\u201d is a successful example. I\u2019m actually shocked it exists because of how it impedes the things you mention.replyzokier 12 hours ago | root | parent | next [\u2013]But reader mode is mostly bunch of heuristics with tons of ad-hoc special cases and hacks instead of relying documents to be well-structured. So in many ways it is the opposite of successful example.https://github.com/mozilla/readability/blob/main/Readability...replyWaterluvian 12 hours ago | root | parent | next [\u2013]Oh true. Which kind of demonstrates the penalty for abusing HTML so much that it\u2019s no-longer semantically reliable.replyzokier 11 hours ago | root | parent | next [\u2013]How long can it be called abuse if it is how html has been used like almost entirety of its lifetime.replyjoshspankit 13 hours ago | root | parent | prev | next [\u2013]By then AI will have disrupted the ad-revenue model so fingers crossed we get the clean data!replynwoli 13 hours ago | root | parent | prev | next [\u2013]WebGPU will take ages and ages to be fully usable across all platforms (eg old androids)replyTheRealPomax 5 hours ago | root | parent | next [\u2013]Who cares about old Androids? Facebook su-, sorry, Meta sure doesn't.replypjmlp 1 hour ago | root | parent | prev | next [\u2013]Just wait 10 years. The time that took WebGL to be fully portable.replyastlouis44 12 hours ago | root | parent | prev | next [\u2013]Any game/3D developers here be interested in WebGPU/WebAssembly support for Unreal Engine 5? Along with an asynchronous asset loading system, for dynamic fetching of assets at runtime.replyomeze 12 hours ago | root | parent | next [\u2013]The asset stuff is the bottleneck here isnt it? We need browsers that support cacheing assets that are gigs in sizereplyastlouis44 11 hours ago | root | parent | next [\u2013]Asset delivery is one of the key aspects, no doubt. Keep in mind that today, browsers support up to 4GB at the moment - but that is a limitation that won't be an issue eventually, and when it's lifted it will allow whatever local storage the user's client hardware has to be leveraged. This would enable AA and AAA desktop/console games on the web.replysmolder 11 hours ago | root | parent | prev | next [\u2013]Taking your comment too seriously... Webgl is the more ubiquitous target, so I'd still prefer that when it's sufficient.replyboredumb 6 hours ago | root | parent | prev | next [\u2013]I'm thinking about renting a couple WebTPUs myself.replyzokier 14 hours ago | parent | prev | next [\u2013]I guess website is still wip, the docs definitely seem pretty spartan atmreplyjoeld42 15 hours ago | prev | next [\u2013]If you're looking for something like this, Sokol is a much simpler alternative:https://github.com/floooh/sokolIt doesn't support vulkan though, but if that's important to you you're probably much better off just using vulkan directly since it's supported on all the major platforms.replybogwog 14 hours ago | parent | next [\u2013]Sokol also provides a solution for shader cross-compilation (https://github.com/floooh/sokol-tools/blob/master/docs/sokol...), so you only need to write your shaders once no matter if you're targeting OpenGL, Metal, or DirectX.There are other tools you could use out there with IGL, but Sokol's solution streamlines the whole process.replyKRAKRISMOTT 15 hours ago | parent | prev | next [\u2013]What abouthttps://github.com/gfx-rs/wgpuIt is written in RustreplyBearOso 7 hours ago | root | parent | next [\u2013]It's also got C bindings with wgpu-native. There's also other good alternatives like Diligent engine and bgfx.replyNarishma 14 hours ago | root | parent | prev | next [\u2013]It seems to not support as many back-ends as IGL, for example GL ES 2.0 and OpenGL 2.x.replyxpe 15 hours ago | root | parent | prev | next [\u2013]wgpu is great and worth consideringreplysgent 4 hours ago | parent | prev | next [\u2013]Vulkan is not supported on iOS / MacOS, which is the major benefit to this release.replyr2vcap 2 hours ago | prev | next [\u2013]If Apple hadn't created Metal, the world would have been better off. Thank you, Meta, for your hard work.Also, there are those who argue that starting new projects in C++ in 2023 is almost always wrong. How about checking out the new C++ library? Do you think your preferred language X would be better than C++ in this situation?replycodelord 14 hours ago | prev | next [\u2013]385 lines for a triangle: https://github.com/facebook/igl/blob/main/samples/desktop/Ti... When you are trying to sell a wrapper you want your hello world example as small as possible not as comprehensive as possible.replyn42 12 hours ago | parent | next [\u2013]if you just want to draw a triangle, there's higher level libraries for that purpose. this is a low level library built to abstract (but map as close as possible to) modern backends (Vulkan, DX12, etc). the idea with these backends is to give precise control over the pipeline - that kind of precise control does not lend itself to the higher level abstractions you are looking for.that said, it's not like this scales linearly so that 1,000 triangles is 385,000 lines of code. there's a lot of plumbing to setup the pipeline for your application's specific use case.again, if your use case does not require the flexibility, look elsewhere.replycodelord 2 hours ago | root | parent | next [\u2013]Good to know I was under the impression that to draw 2 triangles I need to copy paste the whole code twice. I have been a graphics programmer for over 25 years. I'm not even commenting on the API. The toy example certainly can be reduced in code length even given the current API.replyseertaak 13 hours ago | parent | prev | next [\u2013]... for metal, gl, and Vulkan.Sorry but this is simply par for the course for any of the above.You can certainly wrap a lot of that stuff, but you need to make assumptions, and the person that uses likely is writing demanding app, and they want full control over literally everything - but they also would like to cut time to port to Linux by half (say).replyslmjkdbtl 4 hours ago | parent | prev | next [\u2013]The code looks fine to me and a lot is setting up glfw. It's a graphics API abstraction layer like bgfx / sokol / wgpu, not a rendering libraries that would give you stuff like drawTriangle()replyvitaminka 14 hours ago | parent | prev | next [\u2013]ye, it's approaching 50% of LOD of a vulkan hello trianglereplyshaunxcode 14 hours ago | parent | prev | next [\u2013]but its called tiny!replyPcChip 14 hours ago | prev | next [\u2013]ImGui spotted, someone should tell ocornut to add it to the list!https://github.com/ocornut/imgui/wiki/Software-using-dear-im...replyButtons840 15 hours ago | prev | next [\u2013]I love the initial commit message: (\u3063\u02d8\u25bd\u02d8)\u3063 IGL \u2282(\u25d5\u3002\u25d5\u2282)replykvathupo 15 hours ago | parent | next [\u2013]Another cheeky comment from Meta devs: The location for pytorch's git repo is listed as \"where the eigens are valued\" : ^)replytnecniv 15 hours ago | root | parent | next [\u2013]That raises the question of where they are vectored, though!replyMikeTheRocker 13 hours ago | prev | next [\u2013]Oh neat! I used this when I worked at Meta about a year ago. It didn't support Vulkan at the time, so it's great to see they added that. It's nice that IGL abstracts the CPU-side code, but you still end up writing shaders for each platform.replyjchw 12 hours ago | prev | next [\u2013]Interesting. Since it does not include windowing integration at all, it looks like you pretty much have to do the glue for each platform you support. This isn't too bad, but it could be better with adapters for common choices for windowing and context management (SDL, GLFW, etc.) Speaking of which, it seems the Linux path assumes X11 for now. Wonder if EGL/Wayland works at all at the moment, but I'm not at a desktop computer to give it a shot.That said, all of this is relatively mundane, at the end of the day. I'm curious to try it out and see how the ergonomics/performance is. It honestly doesn't look too bad and it's kind of a good sign that a large amount of the triangle example is just windowing, because the actual rendering is relatively simple and succinct for a modern graphics API. I'd like to have an adapter for SDL2/3 and support for Wayland on Linux but otherwise it looks promising. Compared to other abstraction layers (like bgfx) it appears a bit more forward-thinking in some superficial regards at the very least. (Seeing a command queue abstraction in hello world makes me hopeful, anyways.)replykkukshtel 15 hours ago | prev | next [\u2013]Having to do a lot of your own switching at the implementation level seems annoying, I'm surprised there isn't a more simple API on top of that to give you the correct impl directly.replyslmjkdbtl 4 hours ago | prev | next [\u2013]Is it ever possible in the future to have an actual uniform graphics API, instead of having to make complicated abstraction layers to make cross platform graphics? (I mean theoretically, will it be possible in say 10 thousand years)replyAnimats 3 hours ago | parent | next [\u2013]OpenGL was that, in the early days. But GPUs started being able to do more things than OpenGL could talk about, and people wanted to use all the new features to make shinier things.We almost had it, with Vulkan. But Apple just had to Think Different.[1] If it were not for Apple, we would not need this intermediate graphics layer. It wasn't a win for Apple; the Mac-only game market is tiny.[1] https://en.wikipedia.org/wiki/Vulkanreplypjmlp 1 hour ago | root | parent | next [\u2013]Forgetting about Microsoft, Nintendo and Sony?Also about OpenGL extension spaghetti making it literaly a bunch of mini-APIs that were only portable in name and basic features?The iOS game market is huge by the way.replyrezmason 4 hours ago | parent | prev | next [\u2013]I hope WebGPU is going to pull it off.replytppiotrowski 15 hours ago | prev | next [\u2013]Can someone explain the significance of this? I do WebGL development and I believe there is already an intermediate layer called Angle that WebGL compiles to. The Angle layer decouples the hardware from the software and allows hardware vendors to develop drivers that run Angle and shader languages to target Angle without the two needing to know anything about each other. (Not sure if that's right?)This seems like another intermediate decoupling layer?replymonocasa 15 hours ago | parent | next [\u2013]Angle is ultimately a OpenGL|ES implementation on top of other APIs since webgl is pretty close to GLES, but desktops don't typically implement GLES.This (IGL) is more a layer sitting on top between your app and the system provides API since pretty much every system has a different blessed API these days: Browser:WebGL/WebGPU, Windows:DirectX/Vulkan, Mac:Metal, Linux/Android:Vulkan, Consoles: Proprietary APIs like NVN/GNM/AGC/DX12 with a lot of extensions.Just about every major cross platform 3D graphics app/engine has a layer like IGL, this just seems to be an attempt to make Meta's a standard.replycobertos 15 hours ago | root | parent | next [\u2013]So then the full stack for using IGL in browser (on Windows at least) would be App Code -> IGL -> WebGL -> ANGLE -> DirectX -> Hardware device?Owiereplykomadori 15 hours ago | parent | prev | next [\u2013]ANGLE is a portability layer for Windows which provides the OpenGL API on top of DirectX, since Windows clients aren't guaranteed to have good OpenGL drivers installed. WebGL is itself closely related to OpenGL so it makes sense to build it on top of that.replyRoark66 2 hours ago | prev | next [\u2013]It's a nice project, but isn't the majority of the problem it \"resolves\" already solved by Vulkan? I was under an impression Vulkan runs on everything. However I only used Vulkan (with ncnn) for AI. I don't know how tedious it might be to use it for graphics directly.replyw4rh4wk5 1 hour ago | parent | next [\u2013]> I was under an impression Vulkan runs on everything.Sadly, that's not the case. For game consoles, neither Xbox nor PlayStation support Vulkan. iOS and macOS have their own Metal API (because of course they got to have their own thing).So, with just a Vulkan backend, you can only target Windows, Linux, Android, and Nintendo Switch natively. Translation layers like MoltenVK may help though.It's still unclear whether the next iteration of the Switch will continue to support Vulkan.replygenmud 16 hours ago | prev | next [\u2013]Not trying to shit on anyone, but that screenshot reminds me of 1990s/early 2000's games. I'm sure there has been a ton of work that went into it, but having some better textures or highlighting the usability would go a long way.Just based on the screenshot, I am not sure that I would even bother to dig too deeply into the library.replyfsloth 15 hours ago | parent | next [\u2013]\"Just based on the screenshot, I am not sure that I would even bother to dig too deeply into the library.\"Adding any PBR materials as samples would have been the wrong choice, since those are not hardware or graphics api dependent, and are always for the implementor to implment by themselves.You don't want a graphics api to look nice at this abstraction level.You get access to device resources, shader API etc.Once you get triangles in, it's up to you to make it nice using the shaders you write - materials and GI model of your choice.replyAnimats 15 hours ago | root | parent | next [\u2013]> Adding any PBR materials as samples would have been the wrong choice, since those are not hardware or graphics api dependent, and are always for the implementor to implment by themselves.That \"bistro\" image is all PBR materials, represented in glTF. It's supposed to look the same for all standards-compliant glTF renderers, and it pretty much does. I posted the same scene in another renderer above. It's a brightly sunlit scene with no environment shaders, so it looks rather blah. glTF and Vulkan can do more than that, but this is all the test example asked for.replyn42 14 hours ago | root | parent | next [\u2013]the bistro: https://developer.nvidia.com/orca/amazon-lumberyard-bistroreplyfailuser 15 hours ago | parent | prev | next [\u2013]Now look at real 1990s/early 2000\u2019s screenshots. You memory is deceiving you.This screenshot is far from current AAA games, but there is no way to render such a scene in a game made for 2000 hardware.replybelthesar 15 hours ago | root | parent | next [\u2013]It looks about on brand with the static renders used in a lot of Final Fantasy games of the PS1 era, albeit with higher pixel density of course, so I can see the resemblance. That said, this is definitely doing it in engine, so while I can see how the GP's memory palace built that memory, you're definitely accurate that no game from that era was doing graphics like this in-engine.replyCuriouslyC 14 hours ago | root | parent | prev | next [\u2013]Half life 2 had better looking cityscapes, so early 2000s is accurate.replydudeinjapan 15 hours ago | root | parent | prev | next [\u2013]Pre-rendered their were. Vaguely reminds me of Myst or FF7 quality.replypedrosorio 10 hours ago | root | parent | next [\u2013]For those reading who may not remember or have played the original FF7, here are links to pre-rendered backgrounds in FF7:https://www.jmeiners.com/pre-rendered-backgrounds/img/ff7.jp...and the image in the article about Meta's library:https://www.khronos.org/assets/uploads/blogs/2023-july-blog-...replyfailuser 15 hours ago | root | parent | prev | next [\u2013]Pre-rendered? Sure. In-game? No. I think the art direction is half of the problem here. You can place lighting much better and the textures are lacking.replyn42 14 hours ago | root | parent | next [\u2013]there is no \"art direction\" by Meta or the people working on this project; this is a reference scene for PBR pipelines.https://developer.nvidia.com/orca/amazon-lumberyard-bistroreplyfailuser 13 hours ago | root | parent | next [\u2013]You are right, the lighting makes the original scene look worse.replyeasytiger 14 hours ago | root | parent | prev | next [\u2013]Half Life 2: Lost coast from 2005 might be a fair comparison for this droll hypotheticalhttps://youtu.be/j-Iykz0gb7Q (video uploaded 2006)replycarlosjobim 15 hours ago | root | parent | prev | next [\u2013]Unreal and Quake engines handled light and textures far better than that.replyn42 15 hours ago | parent | prev | next [\u2013]the screenshot could/should probably be better, but that doesn't mean the library is incapable of producing higher quality renders. I haven't dug in, but I am assuming this is basically Meta's WGPU. if so, these sorts of libraries are low level libraries abstracting different platforms that can be used to build high quality render pipelines on top of that can run anywhere. you could build an N64 quality rendering pipeline with little effort, or something rivaling AAA studios with a lot more knowledge and effort.I guess, to make a poor analogy, your comment is sort of like looking at a still frame of a poorly shot movie and complaining that the codec is shit.replyAnimats 15 hours ago | root | parent | next [\u2013]It does seem to be Meta's answer to WGPU.The picture looks like they didn't have automatic tonemapping, the rendering equivalent of auto exposure control. So the picture is too dim. I brought it into a photo editor, saw that the top third of the intensity space was empty, used \"Levels\", and it looked much better.That's a standard glTF test scene, called \"bistro\". Here's the same scene, rendered with Rend3/WGPU.[1] Here's the source code for that example.[2] Rend3 is a level above WGPU; it deals with memory management and synchronization, so you just create objects, materials, transforms, and textures, then let the renderer do its thing. Rust handles the object management via RAII - delete the object, and it drops out of the scene.Looking at Meta's examples, there are too many platform-specific #ifdef lines. More than you need with WGPU. Probably because WGPU is usually used with something like Winit, which abstracts over different window systems.We'll have to wait for user reports about performance. Meta didn't show any video. Here's a test video of mine using Rend3/WGPU on a town scene comparable to the \"bistro\" demo.[3] This is a speed run, to test dynamic texture loading and unloading while rendering. The WGPU people are still working through lock conflicts in that area. The idea with Vulkan land is that you should be able to load content while rendering is in progress. For that to be useful, all the layers above Vulkan also have to have their locking problems hammered out. Most open source game engines don't do that yet. Unreal Engine and Unity do, which is why you pay for them for your AAA title.[1] https://raw.githubusercontent.com/BVE-Reborn/rend3/trunk/exa...[2] https://github.com/BVE-Reborn/rend3/blob/trunk/examples/scen...[3] https://video.hardlimit.com/w/sFPkECUxRUSxbKXRkCmjJKreplydralley 14 hours ago | root | parent | next [\u2013]Why does Meta need an answer to WGPU? How does the existence of WGPU create problems for them, and how does this new thing solve problems that anyone else has with WGPU?This just feels like sour grapes about the fact that WGPU excluded Khronos when it was developed, so Khronos wants their own, with maybe a bit of promotion-driven development on Meta's part.replyn42 14 hours ago | root | parent | prev | next [\u2013]hi John! you know a lot more about this stuff than I do. is it possible they just haven't implemented a full PBR pipeline for this demo/screenshot, or do you think this (the differences in the two screenshots) is more an indication of what would likely be areas for future development?replyAnimats 14 hours ago | root | parent | next [\u2013]They seem to have implemented everything that the \"bistro\" scene calls for. I don't know if those hanging colored lights emit light, though. Rend3/WGPU doesn't handle large numbers of light sources yet. But you wouldn't see them in daylight anyway, because this is high dynamic range rendering, and, as in real life, those light are dim relative to the sun.Here's the same scene in Godot.[1] This was modified a bit, and has accurate values for the lamp illumination. So they are totally washed out by the sun.And here it is in several other renderers, with a video.[2]The original scene was in .fbx, from Amazon's \"Lumberyard\" project. [3] That project started as the Crysis engine, was bought by Amazon, spun off as open source, was renamed Open 3D Engine, and is still getting Github changes, so it's not dead.There are many open source game engines. Most of them get stuck at \"mostly works, not ready for prime time\". That's where the problems get hard and fixing them stops being fun.[1] https://github.com/godotengine/godot/issues/74965[2] https://www.ronenbekerman.com/orca-amazon-lumberyard-bistro/...[3] https://developer.nvidia.com/orca/amazon-lumberyard-bistro[4] https://en.wikipedia.org/wiki/Amazon_Lumberyardreplycaptainmuon 15 hours ago | root | parent | prev | next [\u2013]The problem is, it implies that the library isn't capable of higher quality. I could imagine maybe because it is a lowest common denominator. Or because the Metaverse is not focussing on high end graphics, as their previous releases looked poor. Or maybe this is something like VML. Designed to be fairly barebones and people would use it for museum websites and educational tools but not for graphically intense games.replyn42 15 hours ago | root | parent | next [\u2013]I always see this idea on HN that a library, website, framework should be marketing itself for mass appeal and adoption.this is made for people building rendering engines on top of. if you are the software engineer with the knowledge necessary to do that, the screenshot is probably not going to influence you, because you understand what this is for. if you aren't, why should they be marketing to you with eye candy?replyjayd16 15 hours ago | parent | prev | next [\u2013]For better or worse, these graphics API shots are not the place to show cool shaders. SIGGRAPH papers are usually the same dry, boring test scenes. It's just the culture of it.replywlesieutre 15 hours ago | parent | prev | next [\u2013]The textures are ok, but the lighting is super flat. People are used to games making at least some attempt at global illumination, whether it's prebaked light maps, or faking it with SSAO, or anything to not have surfaces be a totally consistent brightness across the whole thing.replyjoeld42 14 hours ago | root | parent | next [\u2013]Your rendering API is not going to implement GI for you, and having it in a sample app is kind of misleading, that's not really the point. It's probably a mistake to include that as a sample scene as it creates the impression that it's trying to be a game engine. A few material spheres and test meshes would probably be a better example.replywlesieutre 11 hours ago | root | parent | next [\u2013]Agreed, just pointing out why parent commenter gets the \u201c1990s/early 2000's game\u201d impression from the screenshotreplyedflsafoiewq 15 hours ago | parent | prev | next [\u2013]Whether you like the textures has nothing to do with whether the graphics library is any good.replyandai 15 hours ago | root | parent | next [\u2013]This is a great example of a principle I heard from CoderFoundry: \"People are visual buyers. If it looks good, people assume the code is good.\"replyIshKebab 14 hours ago | root | parent | prev | next [\u2013]Sure but it has everything to do with whether I can easily tell that it's good.replyTillE 9 hours ago | root | parent | next [\u2013]I can slap together a few high-res textures in SDL_Renderer, and maybe hack in some pretty shaders. Doesn't mean it's a good API.replywhalesalad 16 hours ago | parent | prev | next [\u2013]Counter Strike 1.6 energyreplynickpeterson 15 hours ago | root | parent | next [\u2013]Let\u2019s go go go!replyajkjk 15 hours ago | parent | prev | next [\u2013]I like it. It manages to be on the healthy side of the uncanny valley, so as to feel more like an actual inhabitable world instead of a disconcerting knock-off of the real world.replysmoldesu 15 hours ago | parent | prev | next [\u2013]The original Vulkan Demos were butt ugly too. Then 2 or 3 years later that super flashy DOOM remake went all-in on it and shut everyone up for a while.replysacnoradhq 8 hours ago | parent | prev | next [\u2013]The Utah teapot is never around when you need it.replyPartiallyTyped 15 hours ago | parent | prev | next [\u2013]It's not texture, it's the lighting, it makes it feel very flat, especially when contrasting with RTX'd stuff which we all have in memory to some degree.replyPartiallyTyped 10 hours ago | root | parent | next [\u2013]Lmao, people are absolutely oblivious to the effects of lighting and it shows.Go watch nvidia\u2019s demo of their lighting and scene modification/remastering tool.replyAtNightWeCode 15 hours ago | parent | prev | next [\u2013]You are too kind. Mid to late 90s game. What is up with those shadows. I have written a 3D-engine with better image quality than this like 20 years ago.At least it is not a teapot.replynomel 15 hours ago | root | parent | next [\u2013]> I have written a 3D-engine with better image quality than this like 20 years ago.Well good news, it's not a 3d engine at all! It's a nice common API to cover all the existing graphics APIs.replynu11ptr 15 hours ago | prev | next [\u2013]Any ideas why it excluded Direct3D as a target? It seems to be the only omission. Or is OpenGL/Vulkan support sufficient to cover Windows perhaps?replyw4rh4wk5 1 hour ago | parent | next [\u2013]I'd say even Vulkan alone is sufficient to cover Windows.The main benefit of DirectX 11 is that it's a lot simpler for the developer. But when you are creating an abstraction layer for multiple APIs, you are not the target audience for a simple to use graphics API.IIRC Doom Eternal only supports Vulkan (on PC) and that didn't really cause problems. In fact, the game's performance was superb.replyjaimex2 1 hour ago | parent | prev | next [\u2013]Because Microsoft isn't their friend obviously.replyedflsafoiewq 14 hours ago | parent | prev | next [\u2013]Probably. The OpenGL ES support also seems to use Google's Angle, which can target DirectX.reply59nadir 2 hours ago | prev | next [\u2013]I think I'll take my graphics libraries from companies that have actually done something with them and know what they should look like.replyhgs3 14 hours ago | prev | next [\u2013]I understand why WebGPU defined a new API since it's primarily intended for web browsers, however, in this case why create a new API? Why not implement the OpenGL API? Essentially this could have been an OpenGL wrapper over the lower-level API's, e.g. over Vulkan, Metal, and Direct3D 12.OpenGL has the advantage of being an open standard. Did Meta need custom behavior? If so, OpenGL already has a well-defined extension mechanism.replynine_k 14 hours ago | parent | next [\u2013]OpenGL is not the most straightforward, not the most compact, not the most ergonomic, not the most modern API. It's one of the most widespread though.Meta produced this library not for the benefit of general public. They produced it to make their own development easier and faster, and internally they are unlikely to benefit from OpenGL's ubiquity or backwards compatibility. Then they released the library for the benefit of general public. This is very nice, thanks! But we are not the main target audience.replytrinsic2 10 hours ago | root | parent | next [\u2013]I know next to zero about rendering capabilities. But when I saw Meta | Release | Graphics Library. Given Facebook's history with data collection and the proprietary nature of their VR headset. I doubt they have any interest in open standards.replynine_k 9 hours ago | root | parent | next [\u2013]Facebook have released a bunch of good-quality open-source libraries and tools. Not just zstd, rocksdb, folly, flow, hhvm and other niche things, but also PyTorch and React, staples of two industries.Since they are honestly open source, they have been inspected a lot, and, if they included any data siphoning, that would be long known, and long since deleted.I don't share your skepticism.replytrinsic2 9 hours ago | root | parent | next [\u2013]Their technical achievements are not my domain. But I know behavior patterns, since Facebook's platform was built to harm peoples ability to choose for themselves, I consider it a blight on humanity. I doubt they have any interest in serving the common good. But I hear that you don't share my skepticism, time will tell.replyhoten 14 hours ago | parent | prev | next [\u2013]I think for the same reason WebGPU did-there are tons of cruft in the opengl API and it doesn't really represent how the hardware works anymore.replyozarker 14 hours ago | parent | prev | next [\u2013]Abstractions over the low level apis (opengl, directx, vulkan, metal) have gotten a bit popular in recent years. I think some driving forces behind it are inconsistent support of some apis on some platforms (i.e. opengl on macos) and maybe also a desire to support some of the newer apis (Vulkan or dx12) without going all in due to their complexity/verbosity.I've been playing with wgpu-rs, bgfx, and a couple others in the past and they work pretty well for the most part. At this point I think I'd still rather choose just Vulkan for a new project though.replyTOGoS 12 hours ago | parent | prev | next [\u2013]Edit: I misread your question, so responded with a link to this article answering \"why WebGPU\": https://cohost.org/mcc/post/1406157-i-want-to-talk-about-web...It does seem like kind of a mess. Unlike WebGPU, though, it doesn't sound like Meta's thing is much of an improvement.replykevingadd 12 hours ago | parent | prev | next [\u2013]Nobody wants to use OpenGL these days, it's a miserable API with 30 years of baggage and complex vendor-specific behaviorreplyvitaminka 13 hours ago | prev | next [\u2013]trying to build this rn, and the download scripts has already pulled like a gigabyte of dependencies wthedit: it's already like 2 gbreplyeXpl0it3r 2 hours ago | parent | next [\u2013]You mean the textures and meshes it downloads?replysyspec 9 hours ago | prev | next [\u2013]The top comment on that page sums it up:DJTEK: The wording of this could be applied to virtually any library out there its so vague. The key features section is like a mixtape of the worlds graphic library descriptions greatest hits. Lolreplydigdugdirk 15 hours ago | prev | next [\u2013]Darn, I opened the link and saw it was using Python. Sadly that seems to just be for the install process, for whatever reason.Does anyone have any recommendations for an intermediate graphics library that uses Python and supports compiling your code to a WebGL target?I'm interested in exploring SDF functions in a parametric CAD context, but coming from a Mechanical Engineering background. Not having to learn a new programming language for a side curiosity would be ideal.replybschwindHN 8 hours ago | parent | next [\u2013]You probably have already seen this, but I would take a look at libfive for inspirationhttps://libfive.com/replybmitc 14 hours ago | parent | prev | next [\u2013]Python has wgpu wrappers. Why do you want to use Python though for such a heavy graphics program?replydigdugdirk 11 hours ago | root | parent | next [\u2013]Purely because I already know it well enough to be semi-dangerous. My day job is designing physical goods, I don't have the time to learn anything new just to satisfy my curiosity with signed distance fields.replyadastra22 8 hours ago | root | parent | next [\u2013]I don't think you realize just how horrendously bad Python would be for this application. The global interpreter lock and marshaling between Python objects and GPU state would absolutely kill any kind of performance.Pick up Rust and Bevy. It should be pretty easy to mock up what you want, and you can dip into wgpu when you need extra fine control over the GPU.replykristjansson 5 hours ago | prev | next [\u2013]What\u2019s the best way to get handle on modern graphics programming, particularly WebGL/WebGPU?replyAnimats 3 hours ago | parent | next [\u2013]Use a game engine that offers you a scene graph, and don't deal with the draw level directly.replyisodev 15 hours ago | prev | next [\u2013]It doesn\u2019t seem to have Metal support unfortunately. Otherwise looks nice, could be fun for small pet projects.replycalibas 15 hours ago | parent | next [\u2013]Says it supports Metal 2+https://github.com/facebook/iglreplychunkyguy 12 hours ago | parent | prev | next [\u2013]https://github.com/facebook/igl/tree/main/src/igl/metalreplyArtWomb 14 hours ago | prev | next [\u2013]Thnx Meta! This is so cool that it's like a high-level Khronos release. #1 priority is I believe getting USD / Hydra rendering to WASM targets for browser use. But in the meantime, ray tracing doom ii summer of fun! ;)Also, TIL the Meta Quest 2 is running Android 12L??replygjstein 12 hours ago | prev | next [\u2013]What sort of Docker support will this have? I have a very shaky setup right now to run Unity headless that requires OpenGL and VirtualGL. It feels like that pipeline won\u2019t work forever and am looking for alternatives.replydagmx 12 hours ago | parent | next [\u2013]This wouldn\u2019t help you since Unity wouldn\u2019t target it.Unless you were to switch to a homegrown solution that would make use of thisreplyjunon 15 hours ago | prev | next [\u2013]Any reason this is better over BGFX?replyterracottalite 15 hours ago | prev | next [\u2013]Just noticed the installation command \"python3 deploy_content.py\" installs the scene and not the library. Don't run that one if you don't want do download 2G of stuff, just run the deploy_deps one.replytmccrary55 12 hours ago | prev | next [\u2013]Holy fuck that triangle renderer hello world example lolreplyironhaven 15 hours ago | prev | next [\u2013]I hope this is a easy to use high level library that wraps Vulkan apis. That would help solve one big complaint that Vulkan is too low level for normal programmers.replys1mon 14 hours ago | prev | next [\u2013]I think this may be useful, but part of me immediately thinks of this XKCD about standards: https://xkcd.com/927/replyjaimex2 1 hour ago | prev | next [\u2013]Thanks but no thanks Meta.replybsaul 15 hours ago | prev | next [\u2013]who would benefit from using this ? People building 3D engines such as unity or unreal ?replypyrolistical 15 hours ago | prev | next [\u2013]Similar to https://dawn.googlesource.com/dawn in the sense that both are solving the cross platform problem. But Facebook is solving it at a higher level of abstractionreplyButtons840 14 hours ago | prev | next [\u2013]Is this a 1.0 release? Can we expect API stability?replyj1br 14 hours ago | prev | next [\u2013]what does intermediate graphics library mean?replymax_ 15 hours ago | prev | next [\u2013]How does this compare to Google's filament? [0][0]: https://github.com/google/filamentreplymarcinignac 14 hours ago | parent | next [\u2013]Filement is full blown renderer (with shadows, advanced materials, effects like transparency, postprocessing) with platform abstractions. IGL has only the platform abstractions and the rest is left as an exercise for the reader.replyKeyframe 15 hours ago | prev | next [\u2013]so is this C++ only, no C?replyshmerl 14 hours ago | prev | next [\u2013]Vulkan is supported.replytambourine_man 16 hours ago | prev [\u2013]No mention of Metalreplyjwpalmer6 15 hours ago | parent | next [\u2013]Supported platforms from the repo README: - Metal 2+ - OpenGL 2.x (requires GL_ARB_framebuffer_object) - OpenGL 3.1+ - OpenGL ES 2.0+ - Vulkan 1.1 (requires VK_KHR_buffer_device_address and VK_EXT_descriptor_indexing) - WebGL 2.0replytambourine_man 13 hours ago | root | parent | next [\u2013]But not in the linked article.\u201cIt supports various graphics APIs, such as OpenGL\u00ae, OpenGL ES\u2122, WebGL\u2122, and Vulkan\u00ae\u201dSeems strange that\u2019s missing from one and showing in the other.replymknapper1 15 hours ago | parent | prev | next [\u2013]Metal is supported, it\u2019s mentioned in the GitHub readme.https://github.com/facebook/iglreplyjauntywundrkind 15 hours ago | root | parent | next [\u2013]It's a Khronos press release so not carrying water for the opposing proprietary closed system makes sense. I wouldn't mention that other thing either.replytopspin 15 hours ago | root | parent | prev | next [\u2013]\"IGL is designed to support multiple backends implemented on top of various graphics APIs (e.g. OpenGL, Metal and Vulkan) with a common interface.\"replyzer0zzz 13 hours ago | parent | prev | next [\u2013]It supports Metal. In fact Metal is probably one of the reasons they built an adapter like this in the first place since GL became less of a supported thing on Darwin.replycomex 16 hours ago | parent | prev [\u2013]IGL does support Metal, according to the README which is linked at one point.replyGuidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- Meta has released an intermediate graphics library called Intermediate Graphics Library (IGL) that supports various graphics APIs such as OpenGL, Metal, Vulkan, and WebGL.\n- The library provides a common interface for developers to build rendering engines on top of, offering a level of abstraction that allows for cross-platform compatibility.\n- IGL is designed to provide more control and flexibility for developers who want to create complex graphics applications, but it may not be suitable for those looking for high-level, ready-to-use graphics solutions."
  },
  {
    "id": 36625302,
    "timestamp": 1688689585,
    "title": "Customers don't want chat bots",
    "url": "https://creativegood.com/blog/23/why-customers-dont-want-chat-bots.html",
    "hn_url": "http://news.ycombinator.com/item?id=36625302",
    "content": "Why customers don\u2019t want chat botsBy Mark Hurst \u2022 May 19, 2023I came across an intriguing comment recently by Sam Altman, the CEO of OpenAI and public face of ChatGPT. Altman has been in the news quite a bit during his global PR tour, including an appearance at a U.S. Senate hearing last Tuesday, during which he asked for Congressional regulation of AI.The Senate hearing was sanitized and tame, showing off Altman as a calm and relatable technologist. At one point, Sen. Kennedy asked him if he makes a lot of money from OpenAI, allowing Altman to give an aw-shucks answer that he is only \u201cpaid enough for health insurance\u201d and is motivated purely because he loves the work. (No mention of the five racecars Altman claims to own, including two MacLarens, as well as the \u201cguns, gold . . . and a big patch of land in Big Sur I can fly to\u201d he boasted of to the New Yorker \u2013 let alone his ongoing attempt, worthy of a Bond villain, to scan the iris of every person on earth with a metal orb, in exchange for some cryptocurrency he invented. I\u2019m not making this up.)(Above, Altman\u2019s iris-scanning metal orb. It\u2019s already been hacked with malware, of course.)Anyway, Altman\u2019s comment that caught my eye came elsewhere in his publicity tour, in which he said the following, per The Telegraph:Customer service is one category where I expect a lot of these jobs, honestly, to just go away.In other words, ChatGPT and other generative-AI chat bots will replace call centers in places like the Philippines and India \u2013 since the natural-language processing will be able to service customer requests without any pesky humans getting in the way of those sweet, sweet corporate profit margins. (For more, read Noami Klein\u2019s recent column, which I quoted at length last week.)Sign up for this newsletter.Get Mark Hurst\u2019s weekly writings in email: Subscribe. (Or join the CG Forum.)SubscribeThe problem with chat botsThe corporate case for automating customer service, bringing about those attractive financial outcomes, says nothing about the customers themselves. As I wrote in Where are the customers\u2019 chats? (Feb 24, 2023):In all of the ChatGPT coverage, I haven\u2019t seen why this is a good idea for customers: I mean the users, patients, students, citizens, consumers, and all others who are on the receiving end of this technology. We\u2019ve heard about all of the handsome profits available to the Big Tech giants, and AI startups, for adopting and promoting AI chat technology. But that leaves an obvious question. If you\u2019ll excuse a bit of wordplay, I\u2019d like to ask: Where are the customers\u2019 chats?I\u2019m serious. Everything in the hype around ChatGPT seems to center on what this means for corporations: \u201cthink of the margins, no more need to pay for researchers, writers, or editors!\u201d Or, for articles taking the flip side: \u201ctime to freak out if you\u2019re a researcher, writer, or editor!\u201d All of which may be valid, but the discussion is limited to how the tools will change life inside the corporation (fatter bonuses for execs, more pink slips for employees). No one mentions the customers.Someone did mention the customers recently, and that was Dave Mandl and me in our conversation on the May 1, 2023 Techtonic, agreeing that replacing humans with chat bots is the last thing customers want, when they\u2019re in a situation that requires customer service.A chat bot can handle expected, middle-of-the-road queries (as in, for a bank, \u201cwhat\u2019s my balance\u201d and so on) \u2013 but customers can get those answers already from the app or website.Instead, the reason people go to customer service is because of a question that\u2019s so specific, or complicated, or gnarly in some respect, that there\u2019s no way the app will have the answer: you need a human. For example, as Dave and I discussed: \u201cHey, my credit card isn\u2019t working, and maybe it\u2019s because of a weird charge I had on it yesterday, but then something else happened right before this purchase\u201d \u2013 that\u2019s the sort of complicated scenario that you don\u2019t want to go to a chat bot for. You want a human for customer service.Customers want humans in these situations, but Sam Altman says that he expects customer service to \u201chonestly just go away\u201d \u2013 to be replaced by his own platform, of course. The tech industry continues to push forward with chat bots, even though customers don\u2019t want them \u2013 at least for customer service, the venue for problems that the regular website or app can\u2019t handle. The tech industry\u2019s push for profit-over-customers fits with Cory Doctorow\u2019s argument in Chokepoint Capitalism about the gradual but inevitable decline of UX as platforms become more financialized (see more in my interview with Cory on the March 20, 2023 Techtonic).Sign up for this newsletter.Get Mark Hurst\u2019s weekly writings in email: Subscribe. (Or join the CG Forum.)SubscribeAlong the same lines, Artificial Labor by Ed Zitron (May 12, 2023) discusses the very real possibility of chat bots replacing customer service:one might think this is impossible \u2013 that multi-billion dollar corporations could not simply remove all customer service \u2013 until you consider how companies like Twitter, Facebook and Uber have all but removed customer service.. . . While I\u2019m not suggesting that every company will follow this model, this feels like an inevitable consequence of artificial intelligence adoption. Companies may believe (at least, superficially) that the consumer is \u201cimportant,\u201d but they also hate the idea that their enterprise is somehow responsible for the product that they provide to them.. . . An AI agent can mimic the abilities of a customer service agent without having any of the responsibility or empathy. A customer can still be \u201chelped,\u201d but not in any way that gives them progress or influence over the organization \u2013 they are trapped in an autonomous world where the rules are entirely set by the company.While a human being might get involved, those person-to-person interactions will become increasingly rare, and as a result distance the company from any customer responsibility.I\u2019m with Zitron, and Doctorow, and for that matter my old friend Douglas Rushkoff, who got a well-deserved profile in Wired last week. The tech companies have too much money and power, and they\u2019re using it to push \u201cinnovations\u201d on us that pump up short-term financial gains while trashing the user experience. Customers don\u2019t want the chat bots, just like they don\u2019t want their irises scanned by a metal orb in exchange for some fraud-friendly funny money from the chief disruptor tech bro.The only, and I mean the only, good use I\u2019ve seen for chat bots in customer service is this example from Joshua Browder, in which he deployed a chat bot to cancel his New York Times subscription, which required dealing with customer service just to cancel. In the screenshot below, \u201cYou\u201d is Joshua\u2019s chat bot, giving chat botty answers to \u201cfrancis,\u201d who very well may be a bot, or a person using a bot, to give canned responses.There has to be a better way. Here we are building chat bots that some customers will use to fight other chat bots from corporations. Why not \u2013 and I know this is radical \u2013 why not build technology that customers actually want, that customers can actually benefit from, that customers would actually appreciate?In other words: why are we building technology to enable, or defend against, bad experiences \u2013 when we could build good experiences instead?Until next time,-markSign up for this newsletter.Get Mark Hurst\u2019s weekly writings in email: Subscribe. (Or join the CG Forum.)SubscribeMark Hurst, founder, Creative Good \u2013 see official announcement and join as a memberEmail: mark@creativegood.comRead my non-toxic tech reviews at Good ReportsListen to my podcast/radio show: techtonic.fmSubscribe to my email newsletterSign up for my to-do list with privacy built in, Good TodoOn Mastodon: @markhurst@mastodon.social- \u2013 -Email (for Mark Hurst\u2019s weekly newsletter):Subscribe",
    "summary": "- CEO of OpenAI, Sam Altman, predicts that chat bots will replace human customer service representatives, leading to the elimination of certain jobs.\n- The focus of the tech industry is on the financial benefits and profit margins of implementing chat bot technology, rather than considering the needs and preferences of customers.\n- Customers often seek human customer service representatives for help with complex or specific issues that cannot be easily solved by an app or website, highlighting the importance of human interaction in customer service.",
    "hn_title": "Customers don't want chat bots",
    "original_title": "Customers don't want chat bots",
    "score": 303,
    "hn_content": "- Customers often don't want to deal with chatbots because they are often unhelpful and can't solve specific or complicated issues.\n- The underlying problem is that many enterprises have complex data landscapes with incompatible systems, which makes it difficult for any system, including chatbots, to provide effective solutions.\n- Hiring a lawyer can be a helpful solution when dealing with complex issues, such as handling an estate, as they can navigate the bureaucratic processes and advocate for your rights.\n- Companies often operate customer support at a basic level, hoping that customers with complex needs will give up in frustration. However, a lawyer letterhead can expedite a resolution as companies fear legal consequences.\n- The Consumer Financial Protection Bureau (CFPB) is often ineffective in resolving complaints, as they forward them to the same customer support department that created the problem.\n- Companies may fear the negative image and potential legal repercussions that come with unresolved complaints, which is why they may go above and beyond to prevent cases from reaching public record.\n- Negotiating bills with hospitals or other companies is possible, even as a living person, and can lead to reduced fees or write-offs.\n- There are legal avenues, like probate court, to handle claims against an estate after the death of a person. Claims made after the probate window is closed may be uncollectible.\n- The data landscape of many companies is messy, which creates limitations for any intelligent system, human or otherwise. Access to accurate and complete data is crucial for effective problem-solving.\n- The primary reason people contact customer service is because they have questions or issues that cannot be resolved through the self-service options provided by the company.\n- The current chatbots deployed by many companies are often ineffective and contribute to a negative customer experience.\n- The use of chatbots can save costs for companies, but it's important to ensure that they are capable of resolving customer issues and not just providing generic responses.\n- Many companies make it difficult for customers to find information or resolve issues on their own, leading to increased reliance on customer service channels.\n- While chatbots have the potential to provide more efficient support, they should be designed to provide customized responses within certain parameters and match the tone of the customer.\n- Large companies often hire low-wage workers in outsourced call centers who are limited to sending pre-written responses, which can impede effective problem-solving.\n- Intelligent chatbots powered by large language models (LLMs) could potentially handle a big chunk of customer queries without human intervention, given enough data about the organization and its products.\n- However, many companies prioritize cost-saving over providing effective customer support, which contributes to the frustration customers experience with chatbots and other support channels.- The tech industry continues to push forward with chatbots, despite customers not wanting them.\n- Customers prefer chatbots that are capable, efficient, and actually solve their problems.\n- Chatbots have the potential to handle middle-of-the-road queries, but customers can often find those answers on their own through apps or websites.\n- Complicated or specific scenarios still require human interaction, as chatbots may not have the necessary information or flexibility.\n- Companies are driven to adopt chatbots due to cost-saving measures and the desire to be seen as innovative.\n- Chatbots can be useful in certain cases, such as niche problems that are unfamiliar to human agents.\n- The issue with chatbots lies in their implementation and effectiveness, as many current chatbots lack the capability and intelligence to provide proper support.\n- AI advancements, such as OpenAI's ChatGPT, have the potential to improve chatbot experiences and cater to specific industries or subjects.\n- Companies should focus on providing value and a positive support experience, whether through chatbots or human agents.\n- Customer service operations should have clear policies, proper training, and capable agents, regardless of whether they are human or AI-powered.\n- The future may involve more sophisticated chatbots that can interface with various systems and tools, providing a more comprehensive support experience.\n- It's important to differentiate between chatbots in customer service and other applications of AI, such as in scientific research or lead generation.\n- Many customers feel frustrated with current chatbots that are unhelpful, and companies need to address these issues to improve customer satisfaction.\n- Companies that successfully implement chatbots should still provide the option for customers to speak with a human when necessary.\n- The effectiveness of chatbots will be determined by customer demand and competitive advantages.\n- Chatbots can be viewed as a cost-saving measure for companies, but they should still prioritize providing quality support.\n- The use of chatbots should offer a valuable experience, resolving issues efficiently and effectively.\n- Some customers prefer chatbots as a means of communication, especially those who are not comfortable with phone calls or audio-based interactions.\n- Chatbots have the potential to handle easy-to-solve problems, leaving human agents to focus on more complex inquiries.\n- The success of chatbots depends on their ability to provide accurate and relevant information, as well as the willingness of companies to invest in their development and improvement.",
    "hn_summary": "- Customers often find chatbots unhelpful and incapable of solving specific or complex issues.\n- The underlying problem is that many companies have complex and incompatible data systems, which hinders the effectiveness of any system, including chatbots. \n- Companies prioritize cost-saving measures and innovation over providing effective customer support, leading to frustration with chatbots."
  },
  {
    "id": 36639530,
    "timestamp": 1688771903,
    "title": "ProtonMail Rewrites Your Emails",
    "url": "http://jfloren.net/b/2023/7/7/0",
    "hn_url": "http://news.ycombinator.com/item?id=36639530",
    "content": "John FlorenHome | Blog | Tools | LinksBack to blog archivePosted 2023/7/7ProtonMail Rewrites Your EmailsI switched to ProtonMail a few years back after getting fed up with Google. It\u2019s been mostly acceptable, but a few months ago the Android client started mangling emails \u2013 if I hit \u201csend\u201d too soon, it would send out only part of what I\u2019d typed; I had to wait 10 seconds or so after I finished typing before hitting send to be sure it sent. I figured I\u2019d switch to some other email client instead, since I wasn\u2019t particularly in love with the Proton app anyway.My solution was to set up the Proton Bridge in a VM on my NAS, then used rinetd to forward incoming connections on the IMAP and SMTP ports to the bridge (which only listens on 127.0.0.1). I then set up tailscale on that box and on my phone; with that, I could connect any Android email client (I like FairEmail) to my Proton account. I was also accessing it from Linux using Claws.Everything was great until I decided the other day that I\u2019d also like to do PGP signing on my outgoing messages. I exported a signing-only subkey to my Android device and configured FairEmail+OpenKeyring to use it, then I also set up Claws on Linux for PGP/MIME.When I sent a test message to myself, though, Claws and FairEmail didn\u2019t have any clue that it was signed. If I switched to PGP inline, it worked. I sent an email to one of the Claws maintainers, who reported that my MIME structure was all messed up. He sent me a signed message back, and Claws was able to verify the signature just fine.It turns out that Proton has been breaking outgoing PGP signatures from the beginning: https://github.com/ProtonMail/proton-bridge/issues/26, https://github.com/ProtonMail/proton-bridge/issues/320. It seems that their argument is this:When you send a regular email via Proton to another Proton client, they automatically PGP sign+encrypt the message. (I think this is great!)Their automatic signing+encryption cannot coexist with a user-applied signature.Therefore, all user-applied signatures will be broken. Tough luck, bucko, we\u2019re the SECURE email company, you\u2019ll upload your private key to our servers and you\u2019ll like it!It\u2019s absurd that there\u2019s no way to disable this, no option to tell Proton \u201cif you see a multipart/signed or multipart/encrypted message, just leave it the hell alone.\u201dI\u2019m looking at other potential email hosts. I know PGP isn\u2019t widely used, but I have a hard time swallowing Proton\u2019s silent mangling of my email, and I especially dislike their smarmy we-know-better attitude when people complain about it.John Floren",
    "summary": "- The ProtonMail Android client has been causing issues with sending complete emails, prompting the author to look for alternative email clients.\n- To avoid these issues, the author set up Proton Bridge in a virtual machine on their NAS and used rinetd to forward connections to the bridge. This allowed them to use any Android email client and Claws on Linux to access their Proton account.\n- However, when the author tried to use PGP signing on their outgoing messages, they encountered problems with the MIME structure of their emails. ProtonMail has a longstanding issue with breaking outgoing PGP signatures.",
    "hn_title": "ProtonMail Rewrites Your Emails",
    "original_title": "ProtonMail Rewrites Your Emails",
    "score": 291,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginProtonMail Rewrites Your Emails (jfloren.net)291 points by floren 10 hours ago | hide | past | favorite | 171 commentsravenstine 8 hours ago | next [\u2013]Before anyone jumps ship on ProtonMail because they didn't read past the headline, by \"Rewrites Your Emails, the author means that ProtonMail doesn't support user-applied PGP signatures because of the way they've decided to architect their automatic signing and encryption system. ProtonMail isn't rewriting outbound emails in the sense that the average person is probably thinking. If you're part of the 99.9% who doesn't sign their emails or verify signatures, this issue is unlikely to actually matter to you.That said, Proton's response to this issue is joke.https://github.com/ProtonMail/proton-bridge/issues/26replytwleo 7 hours ago | parent | next [\u2013]It hurts the trust mostly.If they cannot handle basic things like PGP correctly, how should I trust other part of their software. Especially they are a \"Privacy-first\" company.\"Privacy\" becomes a marketing term nowadays.replybrookst 7 hours ago | root | parent | next [\u2013]Privacy was always a marketing term, just like performance, affordable, future-proof, etc.It\u2019s a user benefit. By definition that means it\u2019s a marketing term. That is not mutually exclusive with being a general concept.replypavs 3 hours ago | root | parent | next [\u2013]Also. \"Unlimited\" doesnt actually mean unlimited.replybboygravity 3 hours ago | root | parent | next [\u2013]I learned that when I was like 10:download free full mp3 album now(no download just spam, not free, not mp3, not the album you wanted and not now)replymszcz 1 hour ago | root | parent | next [\u2013]That always astounds me - someone expecting me to pay them for something right after I was lied to by them (the ad). Who do those ads target?replywillis936 12 minutes ago | root | parent | next [\u2013]Sucker middle managers with more money than brains.replynabla9 4 minutes ago | root | parent | prev | next [\u2013]\"It's not perfect so it's now shit and completely useless.\"You can genuinely support privacy and still have features or user cases that don't work. This feature does nothing to weaken privacy.replynvy 3 hours ago | root | parent | prev | next [\u2013]PGP is for security LARPers and doesn't matter at all.replythesf 3 hours ago | root | parent | next [\u2013]It was good enough for Snowden. Apparently not good enough for the people here who want a centralized server that requires phone numbers run by a hip guy with a cute name.replyhardenedproof 1 hour ago | root | parent | next [\u2013]Ya, either the parent post is troll, or he read the Vice article from 5 years ago and thinks it nullifies PGP? Not sure, but is it perfect? No. But I don\u2019t think Snowden is a security LARPer.replynvy 3 hours ago | root | parent | prev | next [\u2013]I'm not a Signal user nor a Moxie fanboy but I believe Snowden used PGP because that's what Laura Poitras used, not because of its technical merits.replyhardenedproof 1 hour ago | root | parent | next [\u2013]So what are some recommendations then? Seems like a lot of talk but not many sources nor suggestions.replylittlestymaar 1 hour ago | root | parent | prev | next [\u2013]Snowden also praised Signal several times though\u2026replyhardenedproof 1 hour ago | root | parent | prev | next [\u2013]May I please get a source on this?replyWithinReason 1 hour ago | parent | prev | next [\u2013]\"It is only seamless in the sense that the Emperor's clothes were seamless.\"Brilliant quote!replystonekyx 4 hours ago | prev | next [\u2013]> This appears to be related to a behaviour that ProtonMail has of dropping all plaintext email if any mime-encoded parts exist.https://github.com/ProtonMail/proton-bridge/issues/26#issuec...I'm actually more shocked knowing that they drop plain text if there is a mime-encoded part (e.g. HTML). Just verified that all mails imported from GMail and all newer mails I received in PM only have the HTML part now, while GMail shows both HTML and plain text parts in message source. Great, now if I want to use a text-only client to read those mails in the future, I won't be able to.Now I honestly wonder, how did they think this is something okay to mess up? Is there just no usable email hosting service for someone that want their mails not touched and also stored securely? Like, this is not even going to save storage space for PM - I'm paying for my storage.replyscandox 9 minutes ago | parent | next [\u2013]Office365 does the exact same thing. I think to the majors once email crosses into their systems it becomes an object of their own that is no longer an email as such. They may partially reconstruct it for you as a courtesy...for now.replydreamcompiler 1 hour ago | parent | prev | next [\u2013]> how did they think this is something okay to mess up?I'm speculating but this has the smell of enshittification. Somehow this is saving them money while making the product worse, and they're hoping not enough customers notice to matter.replysnickerbockers 53 minutes ago | prev | next [\u2013]> It\u2019s been mostly acceptable, but a few months ago the Android client started mangling emails \u2013 if I hit \u201csend\u201d too soon, it would send out only part of what I\u2019d typed; I had to wait 10 seconds or so after I finished typing before hitting send to be sure it sent.Oh my God, i thought it was just me! I've had multiple emails to doctors and financial advisors get cut off this way when i clearly remember typing the whole thing out and i was honestly wondering if all the medications I'm on (for cancer) were causing me to have brief hallucinations while sending emails or something like that.replyjust-tom 49 minutes ago | parent | next [\u2013]That's a bit scary to me, that we count on technology so much that we doubt our mental health when the tech goes sideways.replyversion_five 9 hours ago | prev | next [\u2013]> I especially dislike their smarmy we-know-better attitude when people complain about it.I'm happy to see this called out. Don't explain to me that I'm holding it wrong. At minimum admit that a shortcoming on your end prevents me doing what I want and think about if or how it's possible to change that.replyhughw 9 hours ago | parent | next [\u2013]I've learned to avoid software tools that proclaim they are \"opinionated\" which usually means it's their way or the highway.replyaerio 8 hours ago | root | parent | next [\u2013]>they are \"opinionated\" which usually means it's their way or the highway.That's what opinionated means, yes.replyeviks 5 hours ago | root | parent | next [\u2013]Not really, that's just one of the opinions, another could be to have opinionated defaults with an option to change anything, so highway isn't the only alternativereplyjakear 3 hours ago | root | parent | next [\u2013]Except \"opinionated defaults with an option to change anything\" is called \"configurable\", which is the antithesis of \"opinionated\".replywillcipriano 8 hours ago | root | parent | prev | next [\u2013]People who proclaim themselves opinioned also seem to have bad opinions.replybrookst 7 hours ago | root | parent | next [\u2013]That\u2019s just, like, your opinion, man.replyandsoitis 8 hours ago | root | parent | prev | next [\u2013]> I've learned to avoid software tools that proclaim they are \"opinionated\" which usually means it's their way or the highway.What is a good example where software is described by its maker as opinionated and where it results in \"their way or the highway\"?I'm asking because all software need defaults and no software can do anything that all users would want, so the software maker has to make choices of what they offer (i.e. reflecting the maker's opinion).replydreamcompiler 1 hour ago | root | parent | next [\u2013]The entirety of MacOS. The number of cases where you must use it \"Steve's way or the highway\" are legion. Changing MacOS default behavior involves one of several mechanisms:1. Changing a preference with a GUI editor. Only a small percentage of all defaults can be changed this way.2. Changing a preference with \"defaults write...\" and hoping the change will stick the next time you upgrade the OS.3. Change the default for one usage but it will revert the next time you do that operation. Many examples wrt how Spotlight searches work in the Finder.4. You can't change the default at all. Example: Themes. Last time I checked there were two, and nobody can make others.replyTheCleric 7 hours ago | root | parent | prev | next [\u2013]Python formatter Black: https://github.com/psf/blackBy using Black, you agree to cede control over minutiae of hand-formatting. In return, Black gives you speed, determinism, and freedom from pycodestyle nagging about formatting. You will save time and mental energy for more important matters.Black makes code review faster by producing the smallest diffs possible. Blackened code looks the same regardless of the project you\u2019re reading.replyhughw 7 hours ago | root | parent | prev | next [\u2013]Ruby on Rails? Doesn't mean Rails sucks.. tons of people are very productive on Rails. It uses Ruby idiomatically in a way that I would wish to break out of, which would be difficult and counterproductive, because of its strong opinion that I shouldn't. But I don't want to work in Rails, and Rails doesn't miss me.replyforbiddenlake 7 hours ago | root | parent | prev | next [\u2013]Wireguard. If you want to use different options for its encryption, you can't. I don't think that's a bad thing, but for example someone wanting FIPS certification might.replybrynjolf 5 hours ago | root | parent | prev | next [\u2013]Prettier which is a Ecmasceipt formatter. It basically doesn't have settings as a feature. You can change some things like eol and if you want to use tabs or spaces. Everything else is more or less as it comes, and they want it to be that way to stop discussions in the teams using it and to not allow feature creep.I call Pettier a compromise tool, noone is happy noone is too mad when you force it on checkin etcreplylvncelot 42 minutes ago | root | parent | next [\u2013]Prettier also came to mind, and I'm usually pretty happy with the \"it's formatted this way, deal with it\" approach - but I also would like the tool to behave predictably with updates. Prettier had some changes in 2.5 related to multi-line-classes (namely, forbidding them), which in turn made it unusable for projects with tailwind usage, as it now forces extremely long lines in some cases. (Especially for elements that have styling based on multiple breakpoints and a darkmode variant, you're hitting >120 chars easily).I know that you can go for descriptive classnames and \"@apply\", but I was still miffed about a change like this in an already existing tool, with a lot of community pushback and no compromise in sight.(Here's a relevant discussion, but keep in mind that multi-line-classes worked at some point and now just don't: https://github.com/tailwindlabs/tailwindcss/discussions/7763)So for prettier, it wasn't just \"format your code our way or else\" - which is a good approach for a formatter, see also gofmt - it was \"your current set up doesn't work anymore, tough luck\".replybrookst 7 hours ago | root | parent | prev | next [\u2013]There\u2019s a reason people use appropriately sized wrenches, which are opinionated, rather than crescent wrenches, which are not.replyhughw 7 hours ago | root | parent | next [\u2013]Sure, maybe for tools that need to do one thing, I\u2019d prefer opinionated ones.replyjameson71 6 hours ago | root | parent | next [\u2013]Unix was built on that philosophyreplyfuzztester 4 hours ago | root | parent | next [\u2013]Yes.https://en.m.wikipedia.org/wiki/Unix_philosophyhttps://en.m.wikipedia.org/wiki/The_UNIX_Programming_Environ...replythemodelplumber 9 hours ago | root | parent | prev | next [\u2013]Shouldn't it be like:Non-opinionated ... Opinionated ... My Way or the Highwayreplyemptysongglass 5 hours ago | parent | prev | next [\u2013]They also still don't support automatic WKD lookup and sending on mobile 5 years after reporting. Pretty silly.replypixelgeek 9 hours ago | parent | prev | next [\u2013]> Don't explain to me that I'm holding it wrong.Where are they doing that?replytarp 8 hours ago | root | parent | next [\u2013]https://www.wired.com/2010/06/iphone-4-holding-it-wrong/replyjerbearito 8 hours ago | root | parent | next [\u2013]This does not answer their question.replyjtxx 7 hours ago | root | parent | next [\u2013]yes it does. the phrase OP used was likely a reference to this Apple issue, not that PM is literally doing thisreplywillhackett 10 hours ago | prev | next [\u2013]I'm still surprised Apple hasn't had a stab at making the PGP process seamless. I always imagined they'd generate keys on the device, sync via iCloud and publish public keys.I was hoping their big song and dance over privacy would lead the likes of Gmail, Outlook, etc to adopt native PGP too.Wishful thinking. :')replyAceJohnny2 10 hours ago | parent | next [\u2013]There are many, many use-case problems with PGP and email, to the point that most serious security people just don't bother with PGP. It's relegated to niche and die-hard users. The problems are so many that it's better to use an alternative messaging platform that is built from the ground-up with encryption in mind, like Signal.For example...1. what happens when you send an encrypted email, and the recipient forwards it?2. What happens when the recipient replies? Will your original email be included encrypted, or decrypted? Most likely the latter, meaning the same cleartext is now present in two messages.3. What happens when you email more than one person? What entity handles the encryption for each recipient?3.a. what if only some of your recipients support encryption? What's the point of encrypting if you're sending some in the clear anyhow?4. What happens when you email a mailing list, with unknown participants?...5. What should be canonically encrypted? Just the message body? What about the subject, which is a header of the email? What about any other headers?5.a. Oh you just want it signed? Again, what is canonically getting signed? How does that survive the many transformations the text receives in a conversation?replyreaperman 9 hours ago | root | parent | next [\u2013]1) It's decrypted and forwarded re-encrypted with the receiver's public key.2) It's decrypted and re-encrypted with your public key.3) Same thing that happens right now? Two separate emails get sent out each encrypted separately with the receiver's public key.3a) It gets sent unencrypted. Frontend client warns the sender.4) Separate emails get sent out with the receivers' public keys.5) Everything except the receiver's single email address. Optionally, everything except the receiver's and sender's email address for spam filtering.5a) Everything.Not sure why any of this would prevent Apple, Gmail, and Office365 from implementing a transparent PGP encryption layer. If just those three entities worked this out, the vast, vast majority of emails in the western world would be encrypted effectively. Just because some emails wouldn't be well-encrypted doesn't change that this would be a huge benefit for privacy.replywithinboredom 9 hours ago | root | parent | next [\u2013]All emails are basically signed these days via DKIM by your mail service. Each server along the chain should also be signing them too, so your whole path is known and validated. You can validate those keys via DNS.True story, I was an expert witness on a case once where I showed how the other guys were submitting forged emails into evidence -- by using DKIM signatures/hashes. That was probably some of the most fun I've ever had.replyInfernal 9 hours ago | root | parent | next [\u2013]I\u2019ve always wondered about tampering of digital evidence like that, how much it might happen and not be detected, and what the penalty would be if it were.replywithinboredom 9 hours ago | root | parent | next [\u2013]Part of the work was explaining that a print out of an email is just a representation of the email, an actual email contains headers (like a digital stamp) that explain how the email got to where it is (in gmail -- \"show original\" -- that naming really helped, btw) and without it, you just have a piece of paper with words on it. The equivalent would be printing out the body of a newspaper article without the author or source. You have words, but you can't prove that it came from that newspaper unless someone else can corroborate it.replyautoexec 8 hours ago | root | parent | next [\u2013]Email has been around long enough that it's hard to imagine someone submitting an email as evidence without including full headers. Do you think that it was done intentionally to trick the court or was it just incompetence?replymacintux 8 hours ago | root | parent | next [\u2013]As best as I can recall, Outlook for the Mac doesn\u2019t have any way to see the full headers. I\u2019m skeptical many people know the headers exist.replyautoexec 8 hours ago | root | parent | next [\u2013]Good point! It used to be possible in outlook, but it looks like MS took that option away for years (WTF). Recently (within the last year) they said they brought it back. In Outlook 365 for Mac you should be able to right click on a message and select \"View Source\" to get the message with the full headers. That's the same way people did it in Outlook for Mac 2011I agree, most people have no idea headers exist (beyond the short headers), but I expect lawyers and law enforcement to know better. Handling digital evidence is not new and at technology's timescale email is ancient.replysigzero 6 hours ago | root | parent | prev | next [\u2013]You can but it is clunky. Save the email out as an .eml file and open it in an editor. You see all the headers.replyunyttigfjelltol 7 hours ago | root | parent | prev | next [\u2013]It costs money and attention to insist on full headers. Unless the lawyers think there's something worth digging for, technical details would be omitted from copies just like they are in your email GUI.And, on the other hand, either party can demand the other prove via live witness that the evidence is authentic, reliable and useful. If the witness isnt credible, the document can be excluded.reply0cf8612b2e1e 8 hours ago | root | parent | prev | next [\u2013]Knowingly submitting fraudulent evidence is considered a pretty bad idea. Regardless if it is analog or digital.replydpifke 9 hours ago | root | parent | prev | next [\u2013]DKIM helps for the headers the email provider chooses to sign (such as Subject), but does not attest as to the content of the message.replyIAmLiterallyAB 8 hours ago | root | parent | next [\u2013]Incorrect, DKIM also signs the body of the message.replydpifke 4 hours ago | root | parent | next [\u2013]You're right and I was wrong.The DKIM signer selects a list of headers (h=) to be signed, but the body is always implicitly included (and thus not listed). I was confused because I thought there needed to be a flag to include it, and had never seen such from Gmail or others.For anyone else that's curious: https://rfc-editor.org/rfc/rfc6376#section-3.7replywillhackett 5 hours ago | root | parent | prev | next [\u2013]Only from the mail server to the receiving mail server.replySebb767 30 minutes ago | root | parent | prev | next [\u2013]> Same thing that happens right now? Two separate emails get sent out each encrypted separately with the receiver's public key.Minor correction, but this is not true. The mail itself is encrypted symmetrically and only the key is encrypted with the receivers public key (this is true for all cases). In case of multiple receivers, the key is attached multiple times, encrypted with the PK of each receiver.replyjcranmer 8 hours ago | root | parent | prev | next [\u2013]> Not sure why any of this would prevent Apple, Gmail, and Office365 from implementing a transparent PGP encryption layer. If just those three entities worked this out, the vast, vast majority of emails in the western world would be encrypted effectively. Just because some emails wouldn't be well-encrypted doesn't change that this would be a huge benefit for privacy.The challenge is key handling, especially the commonality of multidevice access to the mailbox. If you want to do this transparently, the only place you can store the key is... right next to the mailbox, so that anyone with access to the mailbox has access to the key. In other words, you're forced to limit the number of people who can read the message to anyone who has access to the mail server. But there's an easier way to limit the number of possible readers of a message to that set of people--just encrypt all the links involved in sending a message. And that was done about a decade or so ago, and happened pretty transparently.Oh, and there's another problem. Encrypted emails break a lot of email features people like to rely on, such as spam filtering, server-side filters, or server-side search. (Assuming you don't just give up and give the server the keys.)Encrypted email is a solution in search of a problem.replyreaperman 7 hours ago | root | parent | next [\u2013]> If you want to do this transparently, the only place you can store the key is... right next to the mailbox, so that anyone with access to the mailbox has access to the key.If the client can generate a unique public/private key pair for every sender/recipient combination, the key wouldn't need to be stored on any server, just ephemerally transmitted one time over TLS/SSL. But that would have the downside of if you lose all devices with the key, you can no longer read those emails. There's partial solutions for that, like your own collection of public keys could be encrypted with a passkey/passphrase and uploaded to the central server, but then if you lose your passphrase, Gmail still can't help you read past emails.I agree that good key distribution is probably impossible.I'm pretty sure an on-device LLM / statistical model could filter spam pretty darn well though.replywoodruffw 9 hours ago | root | parent | prev | next [\u2013](1) doesn\u2019t preserve sender identity: the receiver is stripping the original signature and/or ciphertext, meaning that B\u2019s forwarding of A\u2019s email to C is not verifiable with A as the original sending identity. Depending on the context, this either doesn\u2019t matter or makes the entire scheme useless.(2) and (3) have similar problems.(4) is a TOFU-ish scheme, meaning that it\u2019s trivial for an adversary on the wire to replace the keys.(5) doesn\u2019t work, full stop. E-mail wasn\u2019t designed with encrypted headers in mind. Trying to shoehorn these things together leads to all kinds of weird misplaced user assumptions around what is signed or not, etc.replyreaperman 9 hours ago | root | parent | next [\u2013]1) When I send an email to someone, why would I care whether they can forward it and prove I wrote what they forwarded? I want to prove I wrote my emails, not theirs. If Apple/GMail/Office365 feel this is important, they can include a signature for the decrypted text -- this could even be togglable. Then when you hit \"forward\" on an email sent with that toggle enabled it includes the signatures of the earlier senders in the chain for provability of those content blocks. But this isn't how DKIM works and I don't think it really matters. If I'm wrong about it mattering, see above for a quick solution.2-3) What? Not seeing the problem here? Do you also think encrypted emails need to prevent someone taking a photo of their screen with their phone and sending the photo to someone else? If we can't prevent screenshots and copy/paste of decrypted content, we just shouldn't encrypt anything? What is the logic here?4) It would also be signed by DKIM and/or the sender's private key, so your proposed MITM attack is not trivial at all. Are you aware of DKIM and PGP signing? You're trying to establish authority with \"Email wasn\u2019t designed with encrypted headers in mind [so you can't do it]\" but that authority is undermined by not demonstrating understanding of modern email.5) By the magic of controlling 90% of all end-user email in the western world, a consortium of Apple, Gmail and Office365 can do whatever they goddamned well please.replynmilo 9 hours ago | root | parent | prev | next [\u2013]Why are you letting perfect be the enemy of the good? Regular email doesn't preserve sender identity when forwarding, and why should that even matter for encrypted mail? Encrypted clients can disable including the original email in a reply, which is totally unnecessary nowadays. And it's okay if headers are unencrypted as long as the client knows it's unsecure. All I'm seeing is a strictly better system than cleartext mail which might have holes around the edges but none that can break the integrity of single-recipient encrypted mail, which is what most people use encrypted email for anyways.replytptacek 8 hours ago | root | parent | next [\u2013]This is the rare case where the \"perfect is the enemy of the good\" logic doesn't apply. Encrypted email is secure messaging. Secure messaging is life-or-death (or at least life's fortune) for many ordinary people who rely on it. The only reason encrypted email is taken seriously by nerds is that none of their messages matter; it's LARP security, a thing done performatively as a social signal, and it doesn't matter if it's safe because getting hit with the LARP sword doesn't kill you.The right way to think about secure messaging and the compromises we should be willing to accept with it is avionics or radiotherapy software. Safety is practically the only thing that matters; if you can't provide it, there's no point in talking about how convenient, open, federated, or standardized it is.replybombolo 26 minutes ago | root | parent | next [\u2013]How can a computer protocol guarantee that if you tell me your secret, I won't make a video about it and put it on instagram?At the end of the day, it's not a problem with the protocol.replywoodruffw 8 hours ago | root | parent | prev | next [\u2013]Because it\u2019s not good, it\u2019s bad. \u201cLet the perfect not be the enemy of the good\u201d applies to schemes like the Web PKI or phone numbers as identities in E2E chatting schemes, not to things that outright don\u2019t work.(You\u2019ll note that even the simplest single sender case here assumes both key distribution and stable keys for users, neither of which PGP makes easy.)replyreaperman 8 hours ago | root | parent | next [\u2013]Key distribution is the (unsolvable?) weak point for targeted warrants/etc. But still prevents wholesale slurping of data from everyone.replywoodruffw 8 hours ago | root | parent | next [\u2013]I don\u2019t understand what warrants have to do with key distribution.The problem here is much simpler than that: you can\u2019t encrypt to me if you don\u2019t know my key. PGP doesn\u2019t give you a sound way to get my key; every mechanism offered by the larger PGP ecosystem is either broken or disabled due to persistent abuse.replyreaperman 7 hours ago | root | parent | next [\u2013]PGP protects against warrants if done well. But if gmail.com has a system to force-push new keys (which it basically has to do, receiver of key could get option to reject but everyone will just click \"yes, accept updated public key for this contact\"), then a warrant can force Gmail to utilize their existing system to push a MITM key and intercept encrypted email.replywoodruffw 7 hours ago | root | parent | next [\u2013]Why are we proposing schemes that are broken from the outset?As others have pointed out: Signal (among others) does not have these problems. These problems occur because email was not meant to be encrypted (or signed); efforts to do so result in these kinds of convoluted \u201cmaybe secure, maybe not\u201d models.If we want people to be able to communicate privately, we should be encouraging them to use protocols that are meant that purpose.replyreaperman 7 hours ago | root | parent | next [\u2013]I'm not sure signal actually solves the key distribution issue, it re-issues keys for users semi-often which have a feature to verify the new keys, but most users won't. It also has a potential frontend distribution problem through the App Store (apple/google could be compelled to distribute a compromised Signal App to specific users).replytomatocracy 3 hours ago | root | parent | next [\u2013]Theoretically at least Android has a TOFU-like system where the developer signs the app (although Google also has a product where Google manage the keys which developers can sign up for). That doesn't help people who are specifically targeted as it's within Google's control on most devices to change that via updates to system components or to hold back critical security updates selectively via the Play Store channel but it does raise the bar a bit.replybentcorner 8 hours ago | root | parent | prev | next [\u2013]I could easily be misunderstanding PGP, but for (1), if A signs an email with B's public key (but does not sign it with A's private key), the intent is to make the email readable only by B but not verifiable that A sent it. If A wants both (they want to have the sender (A) verified and to ensure only the recipient (B) can read it), they then also sign it with their private key. Order does not matter.If B wants to forward it to C, they can strip off their own (B's) encryption, leaving A's (optional) private key signature, and send that to C.C gets an email that contains a message from A which is (again, optionally) signed with A's private key, where if it was signed they can verify the A sent that part of the message. (Headers and newline mangling aside)Or does that not work?replyupofadown 8 hours ago | root | parent | next [\u2013]>If B wants to forward it to C, they can strip off their own (B's) encryption, leaving A's (optional) private key signature, and send that to C.That could work. The PGP format is pretty modular. You could just strip out the content packet and signature packet. People don't do it because it would be confusing. Things like encrypted email list servers would be more likely to retain signatures.Believe it or not, the possibility is actually something people have complained about in the past:* https://articles.59.ca/doku.php?id=pgpfan:forwardingreplyGroxx 8 hours ago | root | parent | prev | next [\u2013]1 (thus 2 and 3 in this context) is solved by signing your message.It's the only reasonable solution for proving your message X survived an intermediary. You have to do it regardless of message encryption.replydrdaeman 7 hours ago | root | parent | prev | next [\u2013]Unless you meant how Protonmail specifically handles it (maybe they do it this way), I think general principles are different in some regards.> 3) Same thing that happens right now? Two separate emails get sent out each encrypted separatelyI thought the email gets encrypted to multiple recipients (at PGP level), then MUA submits one single email with all those Cc and Bcc addresses. Then the SMTP service sends the same copy (that every recipient can decrypt) to every recipient's individual mail server (one message with per mailhost).Not the way you've described it. I don't think anyone wants to trust SMTP server with their private keys (one single reason I do not use Protonmail).> 4) Separate emails get sent out with the receivers' public keys.I'm afraid this won't work. Mailing lists and encryption are quite incompatible. The whole point of a mailing list is that your client doesn't know or bother to know the recipients - and they can come and go. And if you specify every recipient it's just (3).I'm not aware about any standard on how to implement email lists/archives/newsgroups with encryption (so one joining can read past messages) and forward secrecy (so kicking someone out ensures they can only read what they have already seen).> 5a) Everything.Problem with existing email infrastructure is that MTAs and MDAs do a lot of transformations on the headers part of \"everything\". So just saying \"everything\" isn't exactly informative. I think the best approach is to send a full MIME-encrypted message as an attachment in a minimal envelope (so just From/To/Subject). But then there's the infamous SPAM problem - and I'd really wish it would've worked, but sadly filtering solely based on sender-receiver pairs doesn't work in reality (or I wouldn't have to maintain and train rspamd on my servers).replyAnonC 5 hours ago | root | parent | prev | next [\u2013]In 4), what you describe about sending email to a mailing list is not clear to me. Are you saying that the mailing list will have a public key that\u2019s used for encryption (by the original sender) and that the mailing list software will decrypt and re-encrypt with the public key of each member when sending the emails? If yes, then if some members don\u2019t support receiving encrypted emails, those would certainly go unencrypted. In other words, there\u2019s no guarantee (except in small and close groups) for this to work as intended.replyGroxx 8 hours ago | root | parent | prev | next [\u2013]>3) Same thing that happens right now? Two separate emails get sent out each encrypted separately with the receiver's public key.Wouldn't this mean you lose the ability to show all recipients to all recipients? E.g. multiple To or Cc entries seem... probably not possible, since that would imply also sending to them? At that point it isn't \"multiple recipients of an email\", it's \"multiple emails\", and that's an only-sometimes-minor difference.I definitely do not know email in enough detail to be sure though.replyasimpletune 9 hours ago | root | parent | prev | next [\u2013]Idk about the rest of these but I don\u2019t think 4 would work without ascii armor. Rfc 5322 limits the characters that can be in those headers.replyreaperman 9 hours ago | root | parent | next [\u2013]#4 would be absolutely be \"hard\" for a lot of reasons, but all those reasons are just \"because standards\", not technical. Apple/GMail/Office365 together have more than enough influence to establish new standards with modern sensibilities.replyautoexec 9 hours ago | root | parent | prev | next [\u2013]> The problems are so many that it's better to use an alternative messaging platform that is built from the ground-up with encryption in mind, like Signal.I'm not sure signal is what people who really care about their security should be using. Signal refuses to update its privacy policy to reflect the fact that for years now they've been permanently storing sensitive user data in the cloud. At this point I consider the fact that the very first sentence of their privacy policy has been a lie since 2020 to be a dead canary.That, combined with their very unclear and misleading communications surrounding the data collection along with the dropping of highly popular features (the ability to handle unsecured SMS/MMS as well as secure communication) and inclusion of sketchy crypto features nobody asked for, makes me suspect even more that Signal may be telling people as loudly as they can to look for alternate solutions.To anyone unaware that Signal was collecting and forever storing sensitive personal data in the cloud, that should tell you everything you need to know about how trustworthy it is.For more info on this see:https://community.signalusers.org/t/proper-secure-value-secu...https://community.signalusers.org/t/dont-want-pin-dont-want-...https://old.reddit.com/r/signal/comments/htmzrr/psa_disablin...replyAceJohnny2 10 hours ago | root | parent | prev | next [\u2013]I'd say the problem of PGP and email is that it suffers from a \"90% of features is good enough\" mindset that is prevalent in open-source (which otherwise isn't a bad thing!)But when it comes to true security, 90%, or even 99%, is so far from \"good enough\" as to be pointless.replyrovr138 10 hours ago | root | parent | next [\u2013]Do you have examples? Not sure if you mean security or ergonomics.replythayne 8 hours ago | root | parent | prev | next [\u2013]> The problems are so many that it's better to use an alternative messaging platform that is built from the ground-up with encryption in mind, like SignalI mostly agree. Although I don't know of something that can really replace email. Signal for example is not great for long form content, is kind of difficult to use on a desktop, is tied to your phone number, doesn't have a way to programmatically send messages (besides unsanctioned third party clients), and doesn't have a good way to group messages into conversations or threads. Most other e2e encrypted system have similar limitations.Matrix is perhaps the most promising I've seen for replacing email. But the biggest problem is the network effect. It doesn't matter how good a system is if no one you know uses it.replyLinuxBender 6 hours ago | root | parent | prev | next [\u2013]It's relegated to niche and die-hard users.This is not entirely true. I am not allowed to mention their names but there are a myriad of companies that use PGP in their software integrations. It is very heavily used for B2B in the financial world. That isn't to say that devs don't shake their fists in anger when trying to do QA testing on software/library matrix of tools that businesses use with PGP, there is plenty of that.On a personal level I have taught many in my circle to use GPG with Thunderbird as it is really just a couple clicks to set it up and no effort to use it. Mozilla did a great job making that easy to use though I have no doubt that prior implementations had soured peoples experiences to the point of not wanting to try it again.Some of your examples are real issues though. Mailing lists are a pseudo-problem in that it doesn't really make sense to use on a public distribution. I've seen it used on Usenet in that fashion long ago but adoption was low for that use case and people complained they could not read the messages not intended for them and that they should use email directly to the people it was intended for instead.What happens when you email more than one person? What entity handles the encryption for each recipient?The email client handles this.replycolordrops 10 hours ago | root | parent | prev | next [\u2013]These big companies could have extended or replaced the current mail protocol to support these cases if they wished.replywoodruffw 9 hours ago | parent | prev | next [\u2013]Apple is actually somewhat serious about privacy and security; PGP is much closer to the \u201cperformative\u201d end of the privacy and security spectrum than to the \u201cserious\u201d end.replytptacek 8 hours ago | parent | prev | next [\u2013]I don't think anybody is ever going to do this, because encrypted email doesn't work.https://latacora.micro.blog/2020/02/19/stop-using-encrypted....replynashashmi 10 hours ago | parent | prev | next [\u2013]They would invent an entirely new mail protocol to make encrypted mail work. It would probably go like this:1. User writes recipient address.2. Server checks the address and asks mail host for encryption key.3. Mail host sends encryption key4. User continues writing email.Similar to how UDP https works.replybunga-bunga 38 minutes ago | root | parent | next [\u2013]> an entirely new mail protocolI'd call it Wavereplycrossroadsguy 8 hours ago | root | parent | prev | next [\u2013]5. Only works on M2 Apple hardware (ps. major functionalities only supported from M3 Pro devices)replyautoexec 8 hours ago | root | parent | next [\u2013]Also expect it to require using Apple's MUA to read your messagesreplydotnet00 8 hours ago | root | parent | next [\u2013]Will still be cheered on as revolutionizing the world.replySquareWheel 10 hours ago | parent | prev | next [\u2013]They do offer client-side encryption for enterprise, but it uses S/MIME rather than PGP.https://support.google.com/a/answer/10741897https://security.googleblog.com/2023/06/gmail-client-side-en...replyteddyh 10 hours ago | root | parent | next [\u2013]Except for the fact that if your e-mails are encrypted, you can\u2019t search them in Apple Mail.replypaulryanrogers 10 hours ago | root | parent | next [\u2013]This seems more like a problem in Apple Mail than SMIMEreplyreaperman 9 hours ago | root | parent | next [\u2013]Indeed. The client could maintain a vector search table that contains \"unencrypted\" data from emails, but the table itself could be separately encrypted on-device to the same level of security as the rest of the iPhone/MacBook/etc (T2/TPM/HSM chip). Definitely a client problem.replyteddyh 9 hours ago | root | parent | prev | next [\u2013]Oh, yes. I never claimed otherwise. But if you\u2019re a user of Apple Mail and are looking for a solution for encrypted mails today, you should be aware of this.replywillhackett 10 hours ago | root | parent | prev | next [\u2013]They have the opportunity to make PGP completely seamless.replyxyproto 10 hours ago | prev | next [\u2013]> you\u2019ll upload your private key to our servers and you\u2019ll like it!What's the point of PGP if the e-mail company has the private key? Just security as the e-mail is being sent over the network + signature verification?Sharing the private key is an odd way to keep secrets.replyThrowthrowbob 10 hours ago | parent | next [\u2013]A friend of mine wanted me to send them encrypted .gpg files due to being remote but not having the files on their person. They found that downloading some of these files from failed to download.After testing and submitting a bug report, they were told that ProtonMail assumes attachments are encrypted with the user's address keys, and tries to decrypt them (the .gpg extension is stripped when recovering/recreating the original file name).The biggest surprise was ProtonMail had suggested for my friend to import their private key corresponding to the public key for the attachments as a workaround. My friend did not agree to do this.replyfloren 9 hours ago | prev | next [\u2013](the irony of realizing I submitted the http: link, not https:, on a post complaining about security...)replyvhcr 9 hours ago | parent | next [\u2013]Even worse, jfloren.net is not on the HSTS preload list.reply2h 9 hours ago | parent | prev | next [\u2013]its a blog post that allows anonymous access. so who cares what protocol you use?replyfloren 8 hours ago | root | parent | next [\u2013]Ah, but somebody could man-in-the-middle your request and change it around so it looks like I said some really dumb stuff (dumber than what I actually said, I mean)replyperryizgr8 5 hours ago | root | parent | next [\u2013]Ok, and then? Would that be so bad? It would be found out pretty fast if it had any real world consequences. You could just comment on HN saying that your words have been maliciously modified and that would be the end of it. Or you could tweet about it. Or use any number of ways to voice your point of view.replytwleo 8 hours ago | prev | next [\u2013]There is also a 2-year old issues: https://github.com/ProtonMail/proton-bridge/issues/180Proton makes it hard for open-source software developer to send patches and they don't care.https://git-send-email.io/#step-2Some quote from it.> Be advised that Protonmail is generally known to be a pretty bad email host. They will munge up your outgoing emails and your patches may fail to apply when received by the other end. Not to mention their mistreatment of open source and false promises of security! You should consider a different mail provider.Glad that I jumped out the ship only after one week so I can get full refund lolreplylilyball 10 hours ago | prev | next [\u2013]If you are looking for a new host, I'm pretty happy with Fastmail.replybrobinson 9 hours ago | parent | next [\u2013]They are based in Australia, though.replyMrVandemar 9 hours ago | root | parent | next [\u2013]Is that a negative?I guess the redback spiders do make nests in the server-racks sometimes.replyTheHappyOddish 9 hours ago | root | parent | prev | next [\u2013]Good? You seem to be implying that's a worse thing than wherever Proton Mail is based, but haven't stated why.replydavejk 9 hours ago | root | parent | next [\u2013]Australian law allows the government to demand access to your email, and Fastmail hold the encryption keys. That's not the case for Switzerland.replydrexlspivey 9 hours ago | root | parent | next [\u2013]What encryption keys? Fastmail doesnt offer encrypted emailreplydavejk 8 hours ago | root | parent | next [\u2013]Data at rest in encrypted volumes. That's not saying much, obviously; you'd hope everyone is using encrypted storage for user data by now.replyspiderice 9 hours ago | root | parent | prev | next [\u2013]Not GP, but I would imagine they\u2019re referring to Australia\u2019s not-so-stellar track record with encryption lately.replystrken 9 hours ago | root | parent | prev | next [\u2013]It's Swiss. From memory they have pretty good legal protections for privacy, at least compared to Australia.replyCharlesW 10 hours ago | parent | prev | next [\u2013]I'll throw my hat in the ring for iCloud+, which I migrated to from Google Workspace (using imapsync) and may be a good choice if you use iCloud anyway. Apple's been hosting email for a few decades now, and they've been a reliable, no-muss/no-fuss email host for me.https://support.apple.com/en-us/HT212514replybunga-bunga 34 minutes ago | root | parent | next [\u2013]> for a few decades now, and they've been a reliableIt seems that Apple has gotten better at online services, but MobileMe was not that long ago.replycodetrotter 10 hours ago | root | parent | prev | next [\u2013]One of my favourite features with iCloud mail is generating new email addresses for each service, in a very integrated straight forward mannerBefore iCould I used to to this manually with my own mailIn the first iteration I had a catch all address, so I could invent any new email address and it would arrive to me. This was plagued by spam because any conceivable user @ my domain would be delivered to me.In the second iteration I manually created aliases in the config file for my mail server when signing up for new things. This was additional overhead and annoying.iCloud thanks to the integration into Safari and apps is so smooth with this. I just click the \u201chide my email\u201d button and it generates a new unique email for the place I am filling in an email address.I love it!replyzwily 9 hours ago | root | parent | next [\u2013]This isn\u2019t a feature of iCloud mail - Apple will do this no matter who your provider is. They create an address and then just forward emails for it to your real address.replywithinboredom 9 hours ago | root | parent | next [\u2013]Fastmail + 1password also has this feature.replypests 9 hours ago | root | parent | next [\u2013]The Apple version is very nicely integrated into iOS.replywithinboredom 9 hours ago | root | parent | next [\u2013]Not sure what you mean by this? The 1password version is integrated using the exact same hooks/methodology as Apple's; except it isn't Apple's.replyevulhotdog 9 hours ago | root | parent | prev | next [\u2013]Unfortunately when it comes to the masked email feature in iCloud+, there are finite number of emails they let you generate for that, which means you\u2019ll end up sharing between services. It\u2019s something like 150, and I can personally say I have about 500 or so right now in fast mail for different logins, and I haven\u2019t even fully migrated yet.replylatexr 8 hours ago | root | parent | next [\u2013]> when it comes to the masked email feature in iCloud+, there are finite number of emails they let you generate for that, (\u2026) It\u2019s something like 150Do you have a source? I did find reports saying that it was limited to 100 during the beta but that the limit has since been lifted. People are claiming almost 350 addresses with no cap.https://discussions.apple.com/thread/253893742https://www.reddit.com/r/iOSBeta/comments/pbfg1t/hide_my_ema...https://www.macrumors.com/guide/ios-15-privacy/replyevulhotdog 8 hours ago | root | parent | next [\u2013]It\u2019s been at least a year or so since I read that, so it\u2019s very possible that it\u2019s changed.As is typical Apple fashion, it\u2019s not documented anywhere that\u2019s easy to find.replytwleo 8 hours ago | root | parent | prev | next [\u2013]iCloud filter rules is so weak...replyslondr 10 hours ago | parent | prev | next [\u2013]They don\u2019t even do server side encryption, though. Might as well use Gmail.replyintermerda 9 hours ago | root | parent | next [\u2013]I\u2019ve been using Skiff for just a few days. The interface looks polished, and they have e2e encryption. It\u2019s relatively new though.replyYujf 1 hour ago | root | parent | next [\u2013]They do e2e to other skiff users, but given that the majority of your mail probably goes to none skiff users, what are you gaining?replykazinator 9 hours ago | prev | next [\u2013]> My solution was to set up the Proton Bridge in a VM on my NAS, then used rinetd to forward incoming connections on the IMAP and SMTP ports to the bridge (which only listens on 127.0.0.1). I then set up tailscale on that box and on my phone; with that, I could connect any Android email client (I like FairEmail) to my Proton account. I was also accessing it from Linux using Claws.That sounds like a big fraction of the complexity of a self-hosted setup.replymacintux 8 hours ago | parent | next [\u2013]Every time email is discussed here, people familiar with self-hosting point out that it\u2019s nearly impossible to get Gmail to not flag your mail as spam. (I have no idea, but it\u2019s a recurring theme.)replynulbyte 5 hours ago | root | parent | next [\u2013]It's possible. Easy even.Google and Microsoft both were easy to deal with for me, and I even have a domain with a newer TLD (bar). DKIM+SPF is all it seems to take.My host was also on Spamhaus' blacklist, but no one else's. I'm not sure it mattered, but they were nice enough to remove it and reply with a snippy email about how reluctant they were to do so. No surprise there, folks at Spamhaus would block their own mother.Self-hosting email is just not that hard. It does take a bit of work, but that's why it's called DIY.replymacintux 5 hours ago | root | parent | next [\u2013]\u201cI have found it to be easy\u201d is not the same as \u201cit\u2019s easy\u201d. The former could boil down to \u201cI\u2019ve been lucky.\u201dIn short, I\u2019m skeptical that, given the recurring cries of anguish I\u2019ve seen here previously, your anecdata is universal.replykazinator 8 hours ago | root | parent | prev | next [\u2013]They're probably talking about True Scotsman's Self-Hosting whereby your MTA is not configured to go through someone else's SMTP forwarding host, but is slugging it out on its own, sending mails directly to target mail domains, and is sitting on an IP address that doesn't have reputation for sending mail. Self-hosting like it's 1992.The wise man accepts that using a reputable forwarding host for sending is still valid self-hosting.replyfloren 6 hours ago | root | parent | next [\u2013]Any forwarding host recommendations? I've long contemplated self-hosting my main email but the deliverability has always been a worry.I've also got a 10 year old VPS whose IP presumably has a pretty good reputation by this point but I'm sure it's safest to use a dedicated service.replyoefrha 22 minutes ago | root | parent | next [\u2013]I use Mailgun, but all the big name providers should be pretty much the same for low volume sending. Unfortunately my 9 year old VPS IP was already on a spam list when I got it, not sure if it falls off eventually.replykazinator 4 hours ago | root | parent | prev | next [\u2013]Nope! I use my local Big ISP, and have for 13 years.To quell your worries about a prospective service, you can try them without rushing to relying on it. Just point a mail client at their SMTP host and test for a while.replyacumenical 5 hours ago | root | parent | prev | next [\u2013]I imagine if you have your DNS records set up strongly enough it would warm up to your MTA's IP address rather quickly, but I have not tested this for a few years now.replyTobyTheDog123 7 hours ago | root | parent | prev | next [\u2013]I'm in the process of doing this now, using Postmark's SMTP relay. Hopefully one day I'll meet their requirements for not retaining logs:1. Account must be Approved and in good standing for at least 6 months2. Account must be on a paid monthly plan for 6 consecutive months (or have purchase credits)3. Account must have a lifetime sending volume of over 10,000 messageshttps://postmarkapp.com/smtp-servicehttps://postmarkapp.com/support/article/1139-can-i-hide-or-d...replywkat4242 7 hours ago | root | parent | prev | next [\u2013]Yes and the same with Microsoft's consumer domains like live.com, outlook.com and hotmail.com . It's a total pain, they don't trust you unless you send a lot of email. Even if you never send any spam.replyrbc 9 hours ago | prev | next [\u2013]This kind of thing is why I run my own mail server...replyNotYourLawyer 5 hours ago | parent | next [\u2013]How do you deal with being flagged as spam?replycryptodan 9 hours ago | prev | next [\u2013]This has never happened to me on android.replyEumenes 9 hours ago | prev | next [\u2013]How come self hosting email is such a pain in the ass? I use Proton, its okay, I feel better about it vs Gmail/Gsuite, but its no where as good, feature wise. If I could self-host email, I'd feel good about my tool stack, but I simply don't know enough about the protocols, web/mobile clients, managing network and in/outbound issues, I give up before seriously considering.replyfloren 9 hours ago | parent | next [\u2013]I'm also self-hosting on a different domain. The actual software stack is easy. It's dealing with the blacklists that's hard -- I submitted a ticket to spamhaus, but of course there's been no response after weeks. I guess I have to figure out how to tuck a $50 bill into an email if I really want to get off that list...replyokanat 8 hours ago | root | parent | next [\u2013]If they start taking those bills, they will want to get them often.Self hosting is a lost cause for e-mail unfortunately. You either get overrun by the amount of creatively formatted spam, or all of your e-mails are dropped despite having perfect SPF+DKIM+DMARC records and long-time owned domains.Especially Microsoft has a horrible record of dropping e-mails everyone but big enough companies. Guess which software is the most popular choice in business e-mails: Microsoft Exhange. So no job applications, no communication with the various government offices, no business enquiries but loads and loads of spam that uses all possible codepoints in UTF.replyautoexec 8 hours ago | root | parent | next [\u2013]In one sense, I could kind of understand it. If they can eliminate 99% of all spam by only accepting mail from a handful of domains, and if those few domains happen to be what 99% of their users get (wanted) email from, it's hard to justify the expense and hassle of accepting mail from anyone else. That said, considering how much spam is sent from gmail and other large mail providers it seems like the actual numbers probably aren't as supportive.I don't agree with it, but I could understand it. Because of the spam/blackist problem, every ISP I've worked for has ultimately either stopped providing email service or outsourced it.replybsder 8 hours ago | parent | prev | next [\u2013]> How come self hosting email is such a pain in the ass?Because Google and Microsoft have a monopoly on email.Because of that, they don't have to play nice with anybody else and can make you jump through any arbitrary number of hoops since they hold most of the users.replyflyinghamster 8 hours ago | root | parent | next [\u2013]It's very uneven, and which domain(s) you have trouble with will not necessarily be the same as anyone else's problem domains. I also self-host, no mailing lists, personal mail only, and my one and only deliverability problem is AT&T. Google? OK. Comcast? OK. Charter? OK. Hotmail? OK. Any @sbcglobal.net address, or anything else associated with SBC d/b/a AT&T? Fahgeddaboudit. I can check the public DNSBLs, and there's no problem. I can jump through AT&T's hoops, and get their automated replies, and next week I try to send to a person on AT&T and find I'm back on their secret blacklist.replyjmclnx 10 hours ago | prev | next [\u2013]doesn't proton mail encrypt by default ? But I guess they are trying to send signed email outside the protonmail environment.I guess this is a kind of \"lite\" vendor lockin if you want encrypted email for the masses.replyfreeAgent 7 hours ago | parent | next [\u2013]They only encrypt mail by default when it stays within Proton\u2019s domain.replythoughtstheseus 8 hours ago | prev | next [\u2013];replyRcouF1uZ4gsC 10 hours ago | prev | next [\u2013]Just like if I see a company or individual talking about \u201cunbreakable\u201d one time pads, my inclination is to either see them as selling snake oil or else really not have an understanding of modern encryption best practices, every time I see companies or individuals talking about PGP, I get the same feeling. PGP may have been pretty good in the 1990s, but it should be considered bad practice to use it now. It is very easy to misuse and likely has vulnerabilities in practice at least in the way people use it.replyyjftsjthsd-h 9 hours ago | parent | next [\u2013]Okay, I'll bite; what's the problem with one time pads? You have to exchange pads, but otherwise I was rather under the impression that they are unbreakable.replybarsonme 1 hour ago | root | parent | next [\u2013]Having a key as long as your plaintext is difficult.Getting actually random (not pseudorandom) keys is very difficult.Not reusing any key material ever is very difficult.Exchanging the keys is difficult.It\u2019s not authenticated.It\u2019s just not useful in practice.replymsla 9 hours ago | root | parent | prev | next [\u2013]One-time pads are completely unbreakable if you use them correctly.Using them correctly is impractically difficult for most people.Your key has to be as long as the sum total length of all of the messages you send along that communications channel, and it has to be completely random. Reusing any key material, or having a less-than-random key, breaks the security. Losing your place in the gigantic key you're using doesn't break security, but it makes the result impossible to decrypt unless you try every possible offset within the key to see which one gives a reasonable decryption.Therefore, someone selling a \"one-time pad\" security system isn't really selling a one-time pad system at all, because people wouldn't buy an email encryption solution which required them to generate, distribute, and keep their place in an impractically large key.It's possible to come up with scenarios where a one-time pad is a good solution. Spies have used them in the past and are likely using them now. But they're impractical and they're used as a buzzword by scammers.replyNoumenon72 9 hours ago | root | parent | next [\u2013]Wouldn't there be software to keep your place in the key? I don't see how the key is \"impractically large\" if it's only the size of your original email.replyboneitis 8 hours ago | root | parent | next [\u2013]While we're here, (and if anyone could chime in and refine or otherwise pick apart my analogy), it's impractical in the sense that it still requires us to take care of all the key and session management business in the real world, which is why AEAD systems and the like are necessary (in order to reliably and safely construct \"one-time pads\" under the hood).I've always considered the OTP to be (not in some strict, rigorously correct sense) more like an ideal, theoretical/abstract cipher, much like how a Turing machine, generally unconcerned with a practical limit in tape size, is a sort of idealized, abstract computer.\"It is the Turing machine of encryption schemes\"?replymsla 6 hours ago | root | parent | prev | next [\u2013]> I don't see how the key is \"impractically large\" if it's only the size of your original email.So you're only sending one email and not getting a reply?replyaftbit 9 hours ago | parent | prev | next [\u2013]What do you mean? Is the concept that even if the one time pads are \"information theoretically secure\", they are not unbreakable, because of issues with keeping secrets in practice? For example, it doesn't matter how good your encryption standard is, if the enemy has root on your keyboard controller.replypixelgeek 9 hours ago | prev | next [\u2013]I suspect that this isn't a big issue for them considering how small the userbase is that will be going through the steps you did to sign using your own keys.replyfloren 8 hours ago | parent | next [\u2013]My setup is a little unusual with the shenanigans to allow multiple clients to access a single Bridge instance, but \"run Bridge on your Windows desktop and point Thunderbird at it\" is a pretty well-advertised use-case in their own docs/advertisement... and Thunderbird has PGP built-in, to the point where it's actually got its own key management stuff and everything.replypuffyengineer 10 hours ago | prev [\u2013]Why does it matter so much? Just use their automatic PGP email signing.replyrovr138 10 hours ago | parent [\u2013]Signing isn't encryption.If someone else has the key, it's not safe encryption. It's only as safe as the entities holding the keys. Do we know that they won't sell? Be forced? What happens if they get hacked?Now it's not your security you have to monitor, but theirs. And you can't control theirs.replyjabart 9 hours ago | root | parent [\u2013]Isn't that the same argument for the receiver of a PGP email? How do you know they won't sell your email, be forced to, or have memory stealing malware on their machine reading all emails?replynicce 9 hours ago | root | parent [\u2013]The receiver is first party, the rest are third-party. Intentions and roles are different.Anyway, your argument could be extended to any E2EE protocol...And why we still use encryption? Because we usually trust the receiver and also the receiver can suffer from the leak of the message.replyGuidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- ProtonMail does not support user-applied PGP signatures due to its automatic signing and encryption system.\n- ProtonMail's response to this issue has received criticism.\n- Privacy is an important consideration when choosing a secure email service."
  },
  {
    "id": 36637221,
    "timestamp": 1688758604,
    "title": "TypeScript please give us reflection/runtime types",
    "url": "https://github.com/akutruff/typescript-needs-types",
    "hn_url": "http://news.ycombinator.com/item?id=36637221",
    "content": "TypeScript Needs to Emit Runtime Type InformationThe ProblemThe 7 year old Github issueThe Unfortunate List of Projects Working Around this IssueType Mapping ProjectsProject Starsio-tszodredux-ormruntypesclass-transformerclass-validatorowreflect-metadatatypeboxmyzodmorphic-tsmonocle-tsts.validatortson-schemajson-type-validationclass-transformer-validatortypescript-schemats-brandnarrowscleanersyupjoiTypeGraphQLDeepkitGubutypescript-rttiCode Generation / External Tool ProjectsProject Starsts-morphtypescript-json-schematypescript-istsnameofts-auto-guardts-validate-typetsmirrortypeonlyts-runtimets-di-transformertypsonts-json-schema-generatorts-type-checkedtst-reflectttype-safePlease send a PR to add to this list. Even if it's your own project and it has zero stars, you had to deal with this, so it goes on the list.Adapter ProjectsProject StarstypeschemaThe ProblemDear TS team,I love you. You do amazing work. You are gods among mortals. You have brought JavaScript from the darkness, and given it the warm light of strong typing. Look upon us, the cowering meek masses, and understand that we live in the muck and mire of a world where we are doomed to endlessly crawl on our bellies through the alleys of Github seeking the one true npm. We will forever wander in the dark, until we have a type reflection model.Serialization and validation without a reflective type system just doesn't work in the real world without endless boilerplate, or shiver, bespoke code generation from a schema file. The best solutions I could find are io-ts, zod, etc. The ever growing list above. The most courageous of us even resort to babel, but only to face the consequences. Someone even wrote a new language extending TypeScript to work around this. We have to declare our types in a round about library-bespoke way that is foreign to the uninitiated, and the libraries aren't even able to support all the wonderful type magic you work so hard to provide.This is a case, where we urge you to take a step back and holistically look at what TypeScript users have to do to in the majority of modern projects, and list them out in priority order. The decision of how to tackle serialization, and what actually has to be done to have TypeScript still work with it is at the top of the list. Even if you still don't want to support reflection, please write a detailed doc, and put it in the official TypeScript documentation that explains how TypeScript users should tackle this problem or what library you recommend, so we don't have endlessly reinvent the wheel.There seems to be a conflict between the design goals of TypeScript that is blocking this for some reason. Type erasure is good! It means JavaScript projects can consume TypeScript projects without any knowledge of TypeScript. It's just emitted JavaScript. This does not mean you can't emit the type information in a consumable lookup table that's separate from the code. The lack of this type information means we use esoteric libraries which ultimately pollute the JavaScript with all the convoluted typing workarounds... soo... type erasure has defeated the purpose of type erasure. It's a second order effect, where the design goal defeats the design goal. :(Side note, please don't solve this with decorators. A lot of us want to use interfaces. Decorators, like C# attributes are so coupling, and we can't add them to types from other libraries. A higher order function that's known to the compiler like: typescript.generateRuntimeType<T>() with options for discriminators etc. means it would even work with external libs. Something like F# Type Providers, or C# Source Generators would also be welcome.Last thing. If you do this, I will send you cake. If it's in TypeScript 4.3, there will be ice-cream.Love,A humble discipleATTN: @ahejlsberg",
    "summary": "- The post discusses the need for TypeScript to emit runtime type information in order to solve issues related to serialization and validation in real-world projects.\n- The author urges the TypeScript team to prioritize tackling the problem of serialization and provide a detailed documentation or recommended library to address this issue.\n- The lack of runtime type information leads to the use of convoluted libraries and workarounds, defeating the purpose of type erasure in TypeScript. The author suggests alternatives such as a higher-order function or F# Type Providers to solve this problem.",
    "hn_title": "TypeScript please give us reflection/runtime types",
    "original_title": "TypeScript please give us reflection/runtime types",
    "score": 283,
    "hn_content": "- The post on Hacker News discusses the idea of TypeScript emitting runtime type information.\n- The author argues that TypeScript should provide a way to reflect on types at runtime to enable features like runtime type safety and validation.\n- Currently, TypeScript compiles down to JavaScript and does not provide runtime type information.\n- Some developers argue that such a feature would be useful for validating data and ensuring type safety at runtime.\n- Others believe that adding runtime type information would violate TypeScript's design goals and lead to unnecessary complexity.\n- The post mentions various libraries and tools that already exist to achieve runtime type reflection and validation.\n- The TypeScript team counters that the existing TypeScript API is sufficient for achieving these goals and that a standardized runtime type reflection feature could have limited usage and increase the complexity of the language.\n- The discussion also touches on the limitations of TypeScript's type system and the challenges involved in achieving runtime type safety.- The discussion is centered around TypeScript and its lack of runtime reflection.\n- TypeScript is praised for its ability to add types, enums, and interfaces to JavaScript.\n- Some argue that dynamically typed languages, like JavaScript, allow for more flexibility and simpler code.\n- Peter Norvig's presentation is mentioned, emphasizing the simplicity of dynamic languages.\n- The splitting of the ReasonML community is mentioned, with doubts about its recovery.\n- Some argue that TypeScript should focus on being a compiler and not include runtime reflection.\n- The lack of runtime type information in TypeScript can make it difficult to validate external data sources.\n- Libraries like zod are mentioned as options for runtime data validation in TypeScript.\n- There is a debate about whether TypeScript should add runtime type validation or leave it to libraries.\n- Some express satisfaction with using libraries like zod for data validation.\n- The trade-off between runtime overhead and code complexity is discussed.\n- TypeScript is compared to other languages like Rust, Haskell, and C++ in terms of code complexity.\n- Runtime reflection is identified as an explicit non-goal of TypeScript.\n- Different approaches to serialization and deserialization are discussed, including code generation and runtime reflection.\n- The use of Typebox for type-safe handlers and API documentation is mentioned.\n- Some express a preference for Rust and WebAssembly over JavaScript and TypeScript.\n- The frustration with TypeScript's type system and its compatibility with JavaScript is mentioned.\n- The possibility of using Rust and WebAssembly as an alternative to JavaScript and TypeScript is considered.",
    "hn_summary": "- The post discusses the idea of TypeScript emitting runtime type information and the debate surrounding this feature.\n- Some developers argue that runtime type reflection in TypeScript would enable runtime type safety and validation, while others believe it would violate TypeScript's design goals and add unnecessary complexity.\n- Existing libraries and tools are mentioned as alternatives for achieving runtime type reflection and validation in TypeScript."
  },
  {
    "id": 36630652,
    "timestamp": 1688732727,
    "title": "Windows Update Restored: Fix Windows update on Windows 95, 98, ME, 2000, & XP",
    "url": "http://windowsupdaterestored.com/",
    "hn_url": "http://news.ycombinator.com/item?id=36630652",
    "content": "This page does not have main article.",
    "summary": "- No main article is available on this page.\n- No further information or details are provided.\n- This page does not contain any meaningful content.",
    "hn_title": "Windows Update Restored: Fix Windows update on Windows 95, 98, ME, 2000, and XP",
    "original_title": "Windows Update Restored: Fix Windows update on Windows 95, 98, ME, 2000, and XP",
    "score": 277,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginWindows Update Restored: Fix Windows update on Windows 95, 98, ME, 2000, and XP (windowsupdaterestored.com)277 points by gslin 21 hours ago | hide | past | favorite | 157 commentsneilv 16 hours ago | next [\u2013]This seems like a nice altruistic useful thing, but (given some overly-trusting security practices we still often see) it'd still be good practice to keep some ideas in mind...DECREASING LEVELS OF SECURITY:1. Running Microsoft Windows.2. Running out-of-support Microsoft Windows.3. Running out-of-support Microsoft Windows and having it report itself to a server of unclear provenance and security (which could be efficiently indexing such insecure machines, and possibly even exploiting vulnerabilities during this simple interaction).4. Running out-of-support Microsoft Windows and updating its system software from a server of unclear provenance and security (which could install malware, possibly even defeating any outdated vendor signing).SUGGESTIONS:* If your important science/medical/industrial/etc. equipment is stuck on ancient Microsoft Windows, probably you want to keep it airgapped and treat it gingerly, while planning to upgrade to more sustainable equipment (and hopefully it doesn't fail abruptly before convenient).* If you're playing with Microsoft Windows for personal use, that's fine, but maybe consider whether you'd prefer to spend your time and energy instead learning and creating atop an open source software platform.* For many business and personal purposes, Debian Stable is a good OS platform, and this is one installer for it: https://cdimage.debian.org/debian-cd/current/amd64/iso-dvd/replyhospitalJail 16 hours ago | parent | next [\u2013]I hate windows, like I'm trying to get off it because of the ads/ragebait news. I hate edge. Microsoft is basically a never buy anymore, but according to this:https://zerodium.com/program.htmlGetting a Windows exploit is higher value than any linux exploit. Given how many servers use Linux, it makes me wonder if Linux 0 click are easier than windows.There are a bunch of counters like 'there are too many distros', or 'a personal computer of a VIP is higher value than some corporations'. But I'm not sure its fair to include your point number 1.I like to give people credit where its due, I imagine it took lots of work to make windows as secure as it is. (Giving Android OS the most credit for their 2.5M payout)replymnahkies 15 hours ago | root | parent | next [\u2013]Linux servers generally aren't being used interactively though and expose a fairly limited attack surface to the internet, and so I feel like the value in Linux server exploits is more in the openssl/Apache/etc vulnerabilitiesreplymorpheuskafka 16 hours ago | root | parent | prev | next [\u2013]It's strange to me that Thunderbird is even on their chart. Surely only a few free software enthusiasts use that anymore? Most of the population doesn't even use a desktop email client and if they do its work-provided Outlook to connect to Exchange/Office365.replyDwedit 15 hours ago | root | parent | next [\u2013]Desktop Email Clients are good for downloading all your Gmail before Google randomly decides to nuke your account.replydelfinom 16 hours ago | root | parent | prev | next [\u2013]https://zerodium.com/faq.html>Zerodium reviews, tests, validates, and documents all acquired vulnerability research then provides it to institutional clients as part of theZerodium only cares about shit their own customers want to target. They aren't trying to fund the entire world of software security.Their customers in particular are select governments wanting exploits for their own use. You can sure as shit bet they already have specific targets in mind and what they use.EDIT: For example, the forum software noted on Zerodium's list are popular for \"blackhat\" and \"darkweb\" forums from everything from card dump selling to malware. Many governments would love to get themselves a database dump with some user IPs. Conversely, this is why Discourse which is a major BB these days is missing as it's not popular in those circles.replylaserdancepony 12 hours ago | root | parent | prev | next [\u2013]I'm sure 99% of the population does not use email personally anymore, except for delivery of their Amazon invoices.replybdavbdav 12 hours ago | root | parent | next [\u2013]Yep. Receipts and notifications. It\u2019s a bad means for communications.replyweare138 15 hours ago | root | parent | prev | next [\u2013]Linux is the just kernel. Everything else in a distro is software running on top of it. Kernel bugs are generally hard to exploit remotely and typically have to be chained with other exploits. That's why there's so many specific payouts for common enterprise apps. Windows is a complete, highly integrated OS with a wide array of attack vectors baked right into it.Plus sketchy companies like Zerodium major customers are nation-state actors who are primarily interested in data exfiltration and the application data stores themselves.replyhospitalJail 13 hours ago | root | parent | next [\u2013]>Kernel bugs are generally hard to exploit remotely and typically have to be chained with other exploits.This is why its so valuable though.replyunilynx 13 hours ago | root | parent | next [\u2013]But what\u2019s the point ? Most vulnerable Linux servers are hosting blogs or dns servers. They\u2019re only useful to run a crypto miner or host a phishing page, and for that you probably don\u2019t need to go further than exploit a wordpress bug. No need to go for the kernel or even root.Whereas a desktop often has users on it who enter banking details or corporate login credentials. Much juicier targets.replytoast0 6 hours ago | root | parent | next [\u2013]Can be a good DDoS source, lots of bandwidth often. Bonus if they can spoof packets, which needs root.replyweare138 12 hours ago | root | parent | prev | next [\u2013]The payouts are based on what their 'clients' are willing to pay in turn for the exploits. There's just less of a market for Linux kernel exploits. If nation-state actors are involved in deep APT style attacks where they would leverage low level kernel exploits they are going to either develop the exploits themselves or acquire them through their own clandestine channels. Purchasing that stuff from a publicly facing company that could potentially be compromised themselves is high risk and leaves too obvious of a trail.replyMuffinFlavored 15 hours ago | root | parent | prev | next [\u2013]> I hate edge.It's a thin wrapper around Blink just like Chrome/Chromium. What is there to \"hate\"?replyyjftsjthsd-h 14 hours ago | root | parent | next [\u2013]Edge allegedly manages to be worse at privacy than Chrome: https://apple.slashdot.org/story/20/03/07/0054219/edge-brows...replyhospitalJail 13 hours ago | root | parent | prev | next [\u2013]So many ads on the home page.'turn it off'I did. But its not intuitive, its some settings button that is semi-transparent. I literally had to google/bing it.The inital setup was awful.Then it opening all my links in edge was not okay. I'm signed in on firefox, I don't want things opening in edge.I can't remember, I gave up after the whole BingGPT thing was a let down.replyWarOnPrivacy 15 hours ago | root | parent | prev | next [\u2013]> What is there to \"hate\"?The endless fluff and clutter to clean up (Search bar appearing on desktop, sidebar foistware). The relentless marketing and push of adjacent services (Bing AI).The passive-aggressive IE compatibility mode (unremovable nag banner to stop using IECM, your Legacy App URLs expire after 30 days for no good reason).replyungruntled 16 hours ago | parent | prev | next [\u2013]Compared to Windows, I find that most linux desktop distros have what I would call \u2018stability vulnerabilities\u2019 where the user has to tread carefully when doing something basic like updating graphics drivers or applying other updates, or changing resolution. Otherwise they end up with an OS that wont start or will just show a blank screen. I wouldn\u2019t recommend linux for general business or personal use unless this kind of tinkering is enjoyable or you have sufficient IT staff.replykdklol 15 hours ago | root | parent | next [\u2013]There are the same exact problems on Windows though. Microsoft nowadays basically treats it's install base as beta testers and you regularly hear about breaking updates. There are devices out there with funky drivers, most notably Nvidia cards, but if you can avoid those (I know many people can't, me included) and choose a stable distro, I genuinely fail to observe these supposed instabilities on Linux. Personally, I think the real reason why companies are not switching is familiarity. Think of all that money spent on MS product training over X employees. Billions are spent yearly in this industry I'm sure.replyDalewyn 9 hours ago | root | parent | next [\u2013]Which is why the first thing I do on any Windows install is disable or block automatic Windows Updates and only run them once every blue moon when I've set aside time to waste on borkage.And before anyone says I'm in danger by running unpatched Windows:NO.My threat model is such that the time lost and wasted from updates breaking shit is significantly greater than the dangers posed by hypothetical threats those patches ostensibly guard against. Updates are simply and literally not worth my time and concern compared to having systems that just work every day all year long.If I need to comply with regulations or audits or I am the target of focused attacks, then yes the scales shift the other way. But as a general, and particularly personal, concern? No, updates are a waste of my time.Linux is even worse because I don't even need to run updates for something to break and waste my time.replykdklol 5 hours ago | root | parent | next [\u2013]Your comment feels like it came straight from 2014's /g/. This is literally \"My time is too valuable to do X\" argument. But perhaps you don't care. Fair enough. You do you. You are, however, absolutely in danger running unpatched Windows, unless it's an airgapped industrial PC or something similar. Even then, such systems can and were compromised (stuxnet, for instance).>If I need to comply with regulations or audits I hope you are not handling any customer info on such systems... or are you?!There seems to be a deeper issue at play. I've seen it many times, even here on HN. So very few people actually know anything about information security, and if they do they only have horrifying misconceptions from god knows where. No wonder why there's so many data leaks when the responsible people have these attitudes.replyDalewyn 1 hour ago | root | parent | next [\u2013]My time is too valuable to be wasted by god damn updates, because you know what? I'm only getting older, my eventual demise keeps looming closer, and I have so many things I want to do and places I want to go before the grim reaper picks me up.It's the kind of re-evaluated outlook on life you only get as you grow older and you start witnessing more and more deaths and imminent deaths around you. I'm also dealing with cancer in the family (I'll spare the details), so my time really is too valuable for god damn software updates.>I hope you are not handling any customer info on such systems... or are you?!I'm not. Like I said, if my threat model actually incorporates the kind of threats that updates ostensibly protect against, the scales would weigh differently.Would I keep business computers updated? Absolutely, if for no other reason than so I can make it all someone else's problem. I'm talking about my own personal computers.replyPropelloni 15 hours ago | root | parent | prev | next [\u2013]I respect your individual experience but this hasn't been the mainstream situation for many years now.Back in 2012 I was the Head of IT for an A series start-up with about 80 people and we ran almost all machines on Linux (mostly Ubuntu) and it worked like a charm. We scaled to about 400 people before switching to Chromebooks in 2015 for the vast majority of users. Our IT operations team never had more than 4 FTE at any point in time, which compares very favorably with any other company. This was possible because Linux environments are extremely easy to maintain for a trained IT staff and, obviously, because we mostly avoided the MS Office crapware (which was less crappy back then than it is today). Google Suite served us fine and the rest was custom web-based software.Today I'm at a different company, no longer in the trenches, and use MS Windows machines for my work and there is not a single week going by without need to call tech support. Adding the counter-productive helpfulness of MS Office applications I sometimes think MS is paid by our competitors to destroy our productivity. That's a \"stability vulnerability\".replyryandrake 14 hours ago | root | parent | prev | next [\u2013]Coincidentally, I ran into one of these this week. I decided to upgrade my bog-standard Debian installation on a headless NAS from buster to bookworm. Should have been easy peasy: Update sources.list and then apt full-upgrade, right?Wrong.Half way through, Debian seems to have lost[1] libcrypt.so.1, which everything important in the system relies on. Could no longer sudo (needs libcrypt) from the session I was logged into. Couldn't re-log in at all either over the network (ssh needs libcrypt) or locally (local authentication needs it too). Could not even get to single-user mode because init=/bin/bash didn't even work. I ended up having to boot from a liveCD, re-assemble the raid partition containing my root filesystem, and manually copy libcrypt into /lib/x86_64-linux-gnu/All because I tried to upgrade Debian from 10 to 12, skipping a version, which, apparently you can't do anymore.As much as I can't stand Windows and I grin-and-bear macOS, I've never had an experience even close to as bad as that on those systems.1: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=993755replyyndoendo 9 hours ago | root | parent | next [\u2013]Recently had a Windows update break my work computer. Everything seemed fine until trying to run a Windows Service in Virtual Box with the HOST OS being Windows 10 IoT in RTOS mode. The attempt to start the service create an infinite loop. Uninstalling nor re-installing the Windows updates fixed the issue. Took a month to convince IT to re-install Windows from fresh to fix the issue.The second most recent was when Windows Store local repository become broken. Any attempt at resolving the issue failed using Windows provided tools. Yet again had to reinstall the OS and all applications.This is the big reason why I prefer Linux over Windows any day of the week. Windows fix always seems to be the same, re-install OS and applications. Never had a problematic Linux installation that couldn't be resolved with a live CD / USB. Boot into live USB, mount encrypted partitions, chroot into environment, fix problematic package(s) or re-edit configuration files, reboot. No need to reinstall the OS and all applications.Linux packaging system(s) are heaven compared to the Windows update hell-scale. Ever have to find a way to update the Root Certificates in order to install .NET Framework 4.7.2 offline on Windows 7 Embedded SP1 that is air gaped and has not had an update since the computers were shipped? Not fun.replypitterpatter 9 hours ago | root | parent | next [\u2013]>The second most recent was when Windows Store local repository become broken. Any attempt at resolving the issue failed using Windows provided tools. Yet again had to reinstall the OS and all applications.oh man, I had my Windows install get into a weird state where trying to open 'Updates & Security' would just crash the Settings app altogether. Eventually I submitted a feedback hub report for it with a dump and tttrace (though that was a journey in and of itself) and in the meanwhile I actually managed to get updates installed via the PSWindowsUpdate powershell module. Alas, that still didn't fix the crashing Settings app. I had a friend at MS promote my feedback hub item to a bug who relayed the reason being that my copy of MusUpdatehandlers.dll was corrupt somehow. Ok, I guess I can try using sfc and dism to hopefully repair that. A couple rounds of that and all I learnt was I actually had a few more update related DLLs that were also corrupted. The real kicker being the copy in the store was also corrupted?? 2022-05-25 16:40:41, Info         CSI  00000226 [SR] Could not reproject corrupted file \\??\\C:\\WINDOWS\\System32\\\\updatepolicy.dll; source file in store is also corruptedAnyways, I was too stubborn to just reinstall and got it fixed by grabbing an install.wim from an ISO that matched my install and telling dism to use that. The really dumb thing was i first tried to do the repair in offline mode pointing it at the install.wim for sources but turns out that's just not supported. Instead you get some opaque failure message and it only mentions the fact that wasn't supported in a single line buried in the huge log file.replycoryrc 7 hours ago | root | parent | prev | next [\u2013]Windows doesn't let you upgrade from Vista to 10, so I guess your complaint is they didn't stop you from manually editing configuration files manually?replylaserdancepony 12 hours ago | root | parent | prev | next [\u2013]It was unsupported to jump releases while upgrading twenty years ago when upgrading woody to sarge as is now. Don't spread rumours. I've been there and the READMEs are still online for reference [1]. And unsupported does not mean impossible. One just can't blame the distro for a failed install.And if you had bothered to read the Release Notes for bookworm: It's in there [2]. Also you are instructed that only upgrades from bullseye are supported, and to upgrade to bullseye first if you are running an older version.Nobody else to blame for your fall.[1] https://www.debian.org/releases/sarge/i386/release-notes/ch-... [2] https://www.debian.org/releases/stable/amd64/release-notes/c...replyryandrake 11 hours ago | root | parent | next [\u2013]I've been using Debian since before woody, and am well aware of the usual caution against jumping versions. I have jumped versions in the past with very little pain despite it being officially unsupported. Obviously this time I gambled and lost as it clearly breaks your system more severely than usual.None of that changes the user-experience comparison with mainstream OS's or parent's point about Linux's \"\u2018stability vulnerabilities\u2019 where the user has to tread carefully\". Linux is well known for being a sharp tool without safety guards. That, and the \"RTFM\" tone of the typical response to trouble, are some reasons why the Year Of The Linux Desktop is perpetually stuck somewhere in the future.replymixmastamyk 9 hours ago | root | parent | next [\u2013]The fact you can fix anything (even a misguided attempt) in 15mins with a live drive is a great strength imho. Back in the 90s you\u2019d often have to reformat partitions to recover any OS.replyjaredhallen 6 hours ago | root | parent | prev | next [\u2013]I hear this sentiment frequently, but it doesn't match my experience. I sure can relate to the idea, but that was a decade ago. I install a fair variety of Linux distros on a pretty wide variety of hardware between my work and personal efforts, and it pretty much just seems to work these days. The last grief I recall in this regard was trying to run Ubuntu 64 on a Pi4 with Vulkan, but that was a couple years ago when things were known to be unstable. That or maybe doing something obviously inadvisable like trying to change distro on a live system by changing the apt source files on a Debian install to Ubuntu repositories and running an apt upgrade. And honestly even things like that work a surprising amount of the time. I know it's good to be introspective and truthful about shortcomings, but I really have to hand it to all the open source contributors, package maintainers, and all the rest. The modern Gnu/Linux ecosystem is pretty remarkable, in my opinion.replyNewLogic 1 hour ago | root | parent | next [\u2013]On the contrary, Linus of LTT managed to uninstall the GUI of his PopOS install within an hour while attempting to install Steam only last year. https://youtu.be/0506yDSgU7M?t=618replyyjftsjthsd-h 14 hours ago | root | parent | prev | next [\u2013]> changing resolution.Er, this decade? How would setting resolution go badly today? (The closest thing I can think of is that once upon a time you could mess up CRTs with bad settings.)replyemodendroket 15 hours ago | root | parent | prev | next [\u2013]True but the older your hardware is the less you encounter it\u2026 so I guess the best use for it is giving life to old hardware.replySohcahtoa82 15 hours ago | root | parent | next [\u2013]I would imagine this is only true to a certain point.Like, I would not be surprised if there were issues trying to run an AGP or PCI video card.There's probably a sweet spot where some hardware is old enough to have had all the major bugs worked out, but not so old that nobody bothers developing and testing it anymore.replyxslvrxslwt 15 hours ago | root | parent | prev | next [\u2013]I'm sorry but this is all but true. I've a 13700K and a 4090 and it's more reliable than 2 of my old hardware machines..this is slowly becoming a myth unfortunately as new versions of either DEs or desktop protocol (s) are slowly deprecating tons of stuff..replyemodendroket 15 hours ago | root | parent | next [\u2013]I\u2019ve had good luck with Xubuntu on a couple older machines so far but I\u2019m not trying to run it on anything modern. My experience trying to do desktop Linux on a recent machine is quite old so maybe things are different.replyuserbinator 14 hours ago | parent | prev | next [\u2013]That's pure fearmongering FUD.Recommending Debian to the retrocomputing community is possibly the most tone-deaf thing I've seen today.replyckozlowski 14 hours ago | root | parent | next [\u2013]This. I suppose it can't be helped given the link was posted without context. But yours is the only post here that seems to get it.For everyone else: This project exists for the joy of the retro-computing community. No one in their right mind - retro-computing enthusiasts included - would ever recommend using any of these versions of Windows for anything other than amusement.No, DOSBox is not always an alternative.Retro enthusiasts are quite excited by this project. And for anyone wanting to rebuild an old PC running Win95 for fun, this is going to be a very helpful tool.Michael MJD (YouTube) covered this yesterday in fact: https://www.youtube.com/watch?v=xbeqLmSVqvsreplyketralnis 14 hours ago | root | parent | prev | next [\u2013]I'm with you that they could have stopped talking after the word \"instead\" but the rest is not fearmongering nor FUD: installing operating system patches from a random server on the internet just isn't a great ideareplymike_hock 13 hours ago | root | parent | prev | next [\u2013]> That's pure fearmongering FUD.It is. It's a community project that you can trust, or not. Debian also reports to servers of \"unknown provenance\" and updates itself from there.Now, Debian has probably a lot more eyes on it than some Windows Update revival project, but some more niche distros have essentially the same problem.> Recommending Debian to the retrocomputing community is possibly the most tone-deaf thing I've seen today.archive.debian.org might be right up their alleyreplyboomboomsubban 13 hours ago | root | parent | prev | next [\u2013]>If you're playing with Microsoft Windows for personal use, that's fine,Saying you're free to have your hobby isn't tone-deaf.replyMuffinFlavored 16 hours ago | parent | prev | next [\u2013]> Running Microsoft Windows.Is Windows 11 with all of the default security settings really that insecure? Like Windows Defender, Windows Firewall, anything that needs admin needed you to click \"yes, elevate to admin\" through UACreplyhospitalJail 16 hours ago | root | parent | next [\u2013]I just posted this above, but according to Zerodinium, Microsoft Zero Clicks are the highest payout for a desktop OS. Either they are the most secure, or its a popularity thing.replyolyjohn 15 hours ago | root | parent | next [\u2013]Also maybe because Windows is used heavily in enterprise where there is big money to be stolen from finance departments.replyjabroni_salad 16 hours ago | parent | prev | next [\u2013]I'll never accuse old Windows of being bulletproof, but I've gotten some considerable reliability out of old appliances by adding SSDs, a passively cooled chassis, and a weekly reboot scheduled task. Basically, just get rid of the moving parts and plan for state drift.Old OT is actually pretty easy to take care of aside from sourcing replacements for some secret sauce PCI card that is no longer made. New OT blurs the line with IT in a really difficult way however, you can no longer rely on a dead simple airgap to solve your security concerns because everything and its mother wants to be on the internet.replyfires10 16 hours ago | root | parent | next [\u2013]You can not just rely on air gapped either. You have other avenues for attack as well. I actually virtualize most of my legacy OSes when possible. Just maintaining adequate serial connections when a USB to serial connector will not work with your legacy OS and a VM can't maintain a stable serial connection through the host OS. It's been a nightmare.replyhousemusicfan 15 hours ago | parent | prev | next [\u2013]I'm glad somebody brought this up. I was waiting for the follow-up article to post on HN about the \"Botnet of Windows 98 Machines\"replyadamdegas 15 hours ago | root | parent | next [\u2013]Yes, all 48 of them.replyRobotToaster 15 hours ago | parent | prev | next [\u2013]People always say this but1) doesn't even a domestic router block all inbound connections?2) is there any evidence of unpatched remote vulnerabilities for windows 98?replyuserbinator 14 hours ago | root | parent | next [\u2013]Yes, and probably not (and even if there were, I suspect no one has a huge incentive to go looking for them anyway.)replyjodrellblank 14 hours ago | parent | prev | next [\u2013]\"Be very careful connecting to some random server and running code from people you've never met, with whom you have no contract or legal comeback, just because other people are doing it. Also, download Debian!\"replyanthk 12 hours ago | root | parent | next [\u2013]You can audit Debian, or rebuild it yourself. Try that with Windows.replyjodrellblank 12 hours ago | root | parent | next [\u2013]Debian had over 324 million lines of code in 2009. How do you propose to audit that in a lifetime?https://unix.stackexchange.com/questions/111281/exploding-am...replyanthk 11 hours ago | root | parent | next [\u2013]So does Guix, and it has reproducibility features and rollbacks.replyp0w3n3d 11 hours ago | parent | prev | next [\u2013]What about retro gaming?replyanthk 2 hours ago | root | parent | next [\u2013]WINE will run tons of w9x games with assistants provided by Lutris just fine.replyDalewyn 9 hours ago | parent | prev | next [\u2013]>* If you're playing with Microsoft Windows for personal use, that's fine, but maybe consider whether you'd prefer to spend your time and energy instead learning and creating atop an open source software platform.Open source does not address my need or desire for Windows, regardless outdatedness.Seriously, it's annoying that fReE and oPeN sOuRcE are thrown around like they will solve all the problems in the world. Spoiler alert, they don't. Especially if that problem involves a practical need that most libertarian neckbeards wouldn't care about.Yes I run Windows, and yes I happily run EOL Windows because they are required to run something reliably. And yes, I happily run unpatched Windows because updates break shit and waste my time compared to the dangers posed by hypothetical threats outside my practical threat model.Something being free or open source does not in any way fundamentally address my needs and desires. No, Wine is not a panacea (unless we're talking about the drink). No, I'm not going to waste even more time getting Linux to work just so I can get on with life.replyadd-sub-mul-div 17 hours ago | prev | next [\u2013]What I'd love is a project for Windows 11 that gives me back full control of which updates I download and when I reboot. I've been living with vague registry hacks and the \"pause for 5 weeks\" button but they're getting less effective.replyailurooo 16 hours ago | parent | next [\u2013]The genuine answer is that you won't get this functionality unless you use windows enterprise. Which of course you can't purchase.. This functionality is locked to just the enterprise and will likely never change..replylondons_explore 16 hours ago | root | parent | next [\u2013]> can't purchaseThere are certain high seas where such things are plentiful.replybruce343434 15 hours ago | root | parent | next [\u2013]With all that risk and effort, seriously why not just use linux?replySohcahtoa82 15 hours ago | root | parent | next [\u2013]https://www.protondb.com/exploreBecause most of this list is not Native or Platinum.Games on Windows just work.Also, how well does VR work in Linux these days?replykobalsky 14 hours ago | root | parent | next [\u2013]> Also, how well does VR work in Linux these days?this loaded question should be directed towards the developers.that any Windows game works on Linux at all, given Microsoft's record regarding interoperability, seems like a miracle.If I had to make an equally loaded question I'd say, what OS are they using to host their game servers?replylondons_explore 14 hours ago | root | parent | next [\u2013]Game servers are fairly frequently hosted on Windows, simply because the game server often shares a lot of code with the client (including libraries which may not be cross platform), and game developers are often most familiar with Windows.replystOneskull 14 hours ago | root | parent | prev | next [\u2013]i don't know anymore. i'm getting really annoyed by background processes interfering with my counter-strike ping. like microsoft is checking my mail or uploading some telemetry bs or something. i can't wait to get back on linux.replyhospitalJail 16 hours ago | root | parent | prev | next [\u2013]This is equally as dangerous.replywindowspiracy 15 hours ago | root | parent | next [\u2013]Eh, not really. You can download a windows pro ISO straight from microsoft [0], install it, and then upgrade it to enterprise using the kms client key [1]. That can then be activated using an open source kms server emulator [2] that has a reasonable amount of code you can audit if you're extremely paranoid.If you don't want to go through the hassle of installing and then upgrading I'm also pretty sure you can upgrade one of the images in the wim offline using dism.0: https://www.microsoft.com/en-us/software-download/windows10 (will serve you an iso directly instead of the media creation tool if you give it a linux user agent)1: https://learn.microsoft.com/en-us/windows-server/get-started...2: https://github.com/Wind4/vlmcsd/tree/masterreplyhospitalJail 13 hours ago | root | parent | next [\u2013]Interesting.I do work on my windows machine, so doing anything illegal just gives me the opportunity to lose 1000x more money than if I just upgraded legally.replyLoganDark 10 hours ago | root | parent | prev | next [\u2013]> unless you use windows enterprise. Which of course you can't purchase..I recently purchased a Windows 10 Enterprise key from a website called \"RoyalCDKeys\" for under $4. It worked to upgrade my Windows 11 installation.Basically any reseller will work but only if they use a payment processor other than PayPal. PayPal will only end in misery and your money being lost.replyabwizz 2 hours ago | root | parent | prev | next [\u2013]\"service channels\" are not a thing anymore?replyTheSkyHasEyes 13 hours ago | root | parent | prev | next [\u2013]Tiny11 is a thing but I've no experience with it. https://duckduckgo.com/?t=ffab&q=tiny11replynobody9999 12 hours ago | root | parent | prev | next [\u2013]>The genuine answer is that you won't get this functionality unless you use windows enterprise. Which of course you can't purchase.. This functionality is locked to just the enterprise and will likely never change..Of course you can purchase \"enterprise\" versions of Windows 11[0].What's more, anyone can purchase most of Microsoft's offerings for ~USD$1000[1].[0] https://www.microsoft.com/en-us/d/windows-11-pro/dg7gmgf0d8h...[1] https://visualstudio.microsoft.com/vs/pricing-details/replyailurooo 10 hours ago | root | parent | next [\u2013]a license at 1000 is not a license that's purchasable for a normal consumer.. you may also need to sign a EA and this opens a can of worms. The point is that you normally can't obtain a enterprise license.replynobody9999 8 hours ago | root | parent | next [\u2013]>a license at 1000 is not a license that's purchasable for a normal consumer.. you may also need to sign a EA and this opens a can of worms. The point is that you normally can't obtain a enterprise license.That's just not true. cf. the link I posted[0].Anyone can buy a Visual Studio Developer Subscription (formerly \"Technet Library\" and \"MSDN\" packages) (USD$1199.00) without an enterprise agreement with Microsoft. I've used it for many years and will continue to do so.And you don't need to renew it either (I'll generally do so every 5-7 years to get access to the latest stuff, but it's not necessary or required), especially since the software isn't \"in the cloud\" so you can have most of Microsoft's products (workstation and server) on local media.But if you think I (and the Microsoft subscription page) don't know what I'm talking about, feel free to ignore me. It's no skin off my nose. In fact, it's about time for me to go and do (for the fourth or fifth time) what you say I can't do. Thanks for reminding me![0] https://visualstudio.microsoft.com/vs/pricing-details/Edit: Fixed typo. added missing words.replynpteljes 15 hours ago | parent | prev | next [\u2013]I'm solving this for myself with Windows 10 LTSC, which I keep activated with an activation emulator I host. For a professional, it was super easy to setup, virtually zero maintenance, and I get a pass on at least a good chunk of the bullshit that goes on in the MS-verse. Functionality doesn't seem to be lost, but I just use it to play my multiplayer games because of their Windows-only rootkit, I mean, anti-cheat.replyp0w3n3d 10 hours ago | parent | prev | next [\u2013]You are the beta tester. While you're using \"your\" windows, you're performing a task as an unofficial employee. If something is free for you, you are the product that is sold.replyJoeri 17 hours ago | parent | prev | next [\u2013]Windows pro managed through intune should give you that control, though it is a bit of an awkward path for a single user.replyDwedit 15 hours ago | parent | prev | next [\u2013]Windows Update Blocker works as a nuclear option to disable all updates.replyrwaksmunski 17 hours ago | parent | prev | next [\u2013]Lookup Windows 10 LTSCreplystalfosknight 16 hours ago | parent | prev | next [\u2013]This should go without saying but this flagrant disregard for what users want is going to continue and get worse as long as people keep buying and using Windows. I wonder pretty often why people put themselves through this crap to use Windows.replyrunesofdoom 15 hours ago | root | parent | next [\u2013]A possibly illustrative example:A year or three ago, my uncle (mid-50s, telco IT manager, started on a Commodore in the 80s) decided he'd try Mint instead of upgrading from Windows 7. He got it installed and running, and decided he wanted to burn an audio CD.His install of Mint didn't come with any application to accomplish this. He got something recommended installed easily enough, but it only supported FLAC, not his MP3s. So he removed that and got some different CD burning software that did support his MP3s, but was set to Finnish by default. He got enough Finnish translated to get it changed to English, and then ran into some sort of driver/support issue for his particular CD burner.At that point, he did the free upgrade to Windows 10 and then burned his CD in less total time than he'd spent not burning a CD via Mint.replyvel0city 13 hours ago | root | parent | next [\u2013]It has been a while for me since I last ran Mint, but back in the day it used to come with Brasero which can burn audio CDs. It would have supported mp3's, but he would of had to install the non-free codecs which was an option at install time or would have been installable from the settings.https://wiki.gnome.org/Apps/Braserohttps://linuxmint-installation-guide.readthedocs.io/en/lates...replystalfosknight 13 hours ago | root | parent | prev | next [\u2013]And this is why the \"Year of the Linux Desktop\" will never come.replyolddustytrail 11 hours ago | root | parent | next [\u2013]Because of quite possibly the dumbest anecdote I've ever heard? I'm not sure morons anonymous has much influence in the real world.replybeebeepka 2 hours ago | root | parent | next [\u2013]No kidding. Recycling anecdotes from 20 years ago.replypessimizer 16 hours ago | root | parent | prev | next [\u2013]Because that's what comes on computers, and that's what the software they need runs on. The obvious reasons. If you want to fix that, work in antitrust, work on getting at least governments and public schools to choose FOSS solutions, work on improving FOSS solutions, work on Debian installers...replystalfosknight 13 hours ago | root | parent | next [\u2013]Windows didn't come preinstalled on my Mac.replyadd-sub-mul-div 15 hours ago | root | parent | prev | next [\u2013]Because I'm an adult who knows how to weigh all the pros and cons of a situation and make decisions based on the sum of that reasoning rather than the emotion raised by one pain point. (My own or someone else's.)replystalfosknight 12 hours ago | root | parent | next [\u2013]Enjoy not having control over when or how your OS gets updated then.replynikanj 17 hours ago | parent | prev | next [\u2013]Just buy a pro/enterprise version, they support the GPOs to block updatesreplydmitrygr 11 hours ago | parent | prev | next [\u2013]Use registry editor to export And then delete wupdsvc and waasMedicSvc services. (HKLM/system/currentControlSet/Services) Reboot. Enjoy. Whenever you want updates, double click exported \u201creg\u201d file and reboot. Allow updates to install. Delete services again.replyjonathantf2 17 hours ago | parent | prev | next [\u2013]Not sure if this is because I run the Pro version but I've never ever ever once had Windows 10 or 11 reboot to install updates on it's own.replyPaianni 17 hours ago | prev | next [\u2013]PSA: Security updates for 2000 and XP are still available from Microsoft at https://www.catalog.update.microsoft.com/replyFredPret 17 hours ago | prev | next [\u2013]Windows Update did a better job over the years selling me on the Mac platform than Apple ever couldreplymetaltyphoon 16 hours ago | parent | next [\u2013]Funny enough, windows updates are infinitely better than macOS updates, which takes 30-60 mins each time.replyjshier 15 hours ago | root | parent | next [\u2013]They're getting faster in Ventura. Moving to the sealed system volume in macOS 11 made them huge and slow to apply, but they're getting better. On my M1 Ultra machine even large updates don't take more than 5 or 10 minutes in the restart stage, and that can include firmware updates for the Mac and monitor (Apple Studio Display). And now with the rapid security patches there are some updates you don't even have to restart to apply (mostly).replyhospitalJail 16 hours ago | root | parent | prev | next [\u2013]This was one of many gripes when I went from Android to iPhone. Holy crap, every day there was some necessary update and I had to sign into my apple ID + be plugged in at 2am or something.Every time I unlocked that phone it would bother me.That, a slower response time(might have been due to animations), not having widgets, and some buggy official apps like the podcast app, and I bailed from iPhone pretty quick.I admittedly was so excited to unbox and give Apple all my personal information. Weird.replydelfinom 15 hours ago | root | parent | next [\u2013]Yea I own a iPhone for giggles and use a Pixel daily. HOLY CRAP, the update experience is so ridiculously slow on iPhones, I really don't Apple could not even try it fix it. How are iPhones not capable of having A/B partitions for the system to handle updates behind the scenes faster?replyFredPret 14 hours ago | root | parent | prev | next [\u2013]But they don't pop up a million times and then restart your system for you while you have a long compute job running overnight...replylaserdancepony 12 hours ago | root | parent | prev | next [\u2013]I still don't know why both are so slow. Upgrading my mostly vanilla Devuan boxes costs me a few seconds to minutes and restarts are only to switch kernels.replySohcahtoa82 15 hours ago | parent | prev | next [\u2013]The sad thing is that IMO, Windows users brought the shitty Windows Update implementation on themselves.It was common in the Windows XP days for many users to never install updates and it really contributed to Windows's reputation for being incredibly insecure. Forcing updates became the only option to ensure Windows users remain secure.replyvbezhenar 17 hours ago | prev | next [\u2013]Last time I tried to tinker with Windows XP few years ago: you couldn't just update it after installation, but if you let it work for a few days, eventually it'd download and install updates automatically. And after those updates are installed, you can actually use Windows Update UI to install optional updates and other things.It definitely was after 2011.replyjeswin 7 hours ago | prev | next [\u2013]I looked up the last update for Windows XP - KB4500331[1] from May 2019. Eighteen years after the OS was released. Gotta give credit for that.[1]: https://www.catalog.update.microsoft.com/Search.aspx?q=SP3+X...replymcpackieh 17 hours ago | prev | next [\u2013]Huh, I never realized that 95/98/ME ever had online updates in the first place.replykotaKat 17 hours ago | parent | next [\u2013]It all started in Windows 98 with the launch of Windows Update; they then released the Critical Update Notification Tool (later renamed to Utility, for obvious reasons) which would query the website and just tell you when a critical update was available to go check the site.Otherwise, in the 95 era, I believe you'd likely be finding out through a software vendor or otherwise that a certain fixpack from Microsoft might fix an issue and you should go grab an update then.replyn6h6 16 hours ago | root | parent | next [\u2013]I thought you were joking, but no, the CUNT is realhttps://en.m.wikipedia.org/wiki/Windows_Update#Critical_Upda...replycoldpie 16 hours ago | root | parent | next [\u2013]I guess now we know why Windows patches will see you next Tuesday.https://en.wikipedia.org/wiki/Patch_Tuesdayreplycoldpie 17 hours ago | root | parent | prev | next [\u2013]> they then released the Critical Update Notification Tool (later renamed to Utility, for obvious reasons)Oofda. That can't have been an accident.replyxattt 17 hours ago | root | parent | prev | next [\u2013]Um\u2026 what? You would trigger online updates in Windows 95 OSR 2 by using IE and navigating to the Windows Update website. This would then would trigger the updater.replyxenadu02 16 hours ago | root | parent | next [\u2013]That was all after the fact. For its initial release and even much of OSR 2 the only updates you got came with a new computer via the OEM updates of which OSR 2 was the big one. If you were lucky you might see a Service Pack on CD though that was more of an NT/2000 thing.replykotaKat 16 hours ago | root | parent | next [\u2013]Yeah -- OSR 1 (95 A), 2/2.1 (95 B), and 2.5 (95 C) were just that - OEM Service Releases.Anything else would have been a direct fix package - such as the DCOM95 OLE Update, DUN 1.4, or Winsock 2 -- things that you only installed if you needed something that used those functions, and often would become bundled with the software anyways because users might not have been given those updates out of the box.There was at least one XP-era update CD that I do recall - the Windows Security Update 2004 contained patches for 98 through XP and was available by mail from Microsoft.http://vogonsdrivers.com/getfile.php?fileid=873&menustate=replycode_duck 14 hours ago | root | parent | prev | next [\u2013]This is supported by the wikipedia page for Windows Update:\"Critical Update Notification Utility (initially Critical Update Notification Tool) is a background process that checks the Windows Update web site on a regular schedule for new updates that have been marked as \"Critical\". It was released shortly after Windows 98.\"Unfortunately, the citation for that is no longer active on MS's site, and the archive.org version no longer works either.replyogurechny 14 hours ago | parent | prev | next [\u2013]\u2014 Software could not expect internet connection (or any network at all) to be available, and would be considered really arrogant if it tried to dial or spend user's traffic by default.\u2014 Those who knew how to enable those features probably checked update sites and news sites manually often enough.\u2014 Almost all software had to bundle required components and updates anyway. Games came with DirectX version 5/6/7/8/9 installers, IE version 4/5/6 installers provided important system components, acting as semi-service-packs for 9x systems\u2026 and, of course, Visual Studio library dependencies.replymattl 17 hours ago | parent | prev | next [\u2013]Me neither.Wikipedia:> Windows Update was introduced as a web app with the launch of Windows 98 and offered additional desktop themes, games, device driver updates, and optional components such as NetMeeting. Windows 95 and Windows NT 4.0 were retroactively given the ability to access the Windows Update website and download updates designed for those operating systems, starting with the release of Internet Explorer 4.replynashashmi 18 hours ago | prev | next [\u2013]Seems like a centralized repository for a collection of updates issued by MS to windows computers. Does this bring additional security updates not issued by MS?replyjdwithit 16 hours ago | parent | next [\u2013]No, it's just old preexisting patches. In their FAQ and even on the front page they say continuing to run these operating systems is a terrible idea as they are highly vulnerable even after patching.replylondons_explore 16 hours ago | prev | next [\u2013]DOS is easy to emulate - and dosbox does a great job of it, even in a web browser.Windows 3.1, 95, 98, Me are less easy to emulate.Note that that seems to have impacted the preservation of old games and programs. Plenty of dos games are all over the web and still quite popular, yet most stuff from the Win 9x era has almost entirely vanished due to the difficulty of running it on modern hardware.Archivists take note - if you want something to live for a long time, it needs to be easy to emulate. And in turn, that means it needs to be both very common, and have simple API's so someone in the future can be bothered to make and maintain an emulator.replyneckro23 15 hours ago | parent | next [\u2013]> most stuff from the Win 9x era has almost entirely vanished due to the difficulty of running it on modern hardware.The tricky part is that this applies even if you're using a VM. I learned the hard way that Windows 98 isn't compatible with Ryzen CPUs, even through VirtualBox. I had to try again on another PC with an older Intel CPU.replyaccrual 15 hours ago | root | parent | next [\u2013]A patch is available [0] to allow Windows 98 to be virtualized on more modern CPUs including Ryzen CPUs. It patches the \"TLB Invalidation Bug\". [1][0] https://github.com/JHRobotics/patcher9x[1] https://blog.stuffedcow.net/2015/08/win9x-tlb-invalidation-b...replygattilorenz 14 hours ago | root | parent | prev | next [\u2013]For early-ish windows 98 era machines, 86Box is a very good option.replyogurechny 13 hours ago | parent | prev | next [\u2013]DOS may be easy to emulate and re-implement because it's a single task operating system that does not do much. Most of hardware is accessed directly, and needs to be emulated instead. We enjoy great compatibility because of the enormous leap in performance since then (the slower the system the easier it is to simulate correctly on a modern one), and the combined knowledge of all the ins and outs collected during the PC boom by software authors and hardware makers implementing and re-implementing compatible devices.replymminer237 14 hours ago | parent | prev | next [\u2013]I've had great success running Win 95 games on modern hardware. I just had to do it in Wine, amusingly enough.replylondons_explore 12 hours ago | root | parent | next [\u2013]Frustratingly, wine for windows isn't a thing...replyTillE 14 hours ago | parent | prev | next [\u2013]I wanted to play certain games from that era (Spiderweb's Exile series), and the best solution I found was to just play the MacOS versions with SheepShaver.You can technically get Windows 9x software running in a VM, but not without laggy video/audio in my experience.replysedatk 14 hours ago | parent | prev | next [\u2013]> Archivists take note - if you want something to live for a long time, it needs to be easy to emulatehow do archivists have a say in this?replylondons_explore 13 hours ago | root | parent | next [\u2013]Some archivists make decisions about what to archive. Something that isn't going to be runnable in the future would be a poor choice if you only have limited resources.Also, some archivists have the choice to convert media. For example, rather than storing a Wordperfect document, perhaps it is best to convert to PDF. Rather than storing the ROM of an 80's arcade machine, or the whole machine, perhaps it is best to store an MPEG video of a playthrough. Rather than storing the data on a floppy disk in a filing cabinet, perhaps it is best to store the data on a server which will be kept up to date? Well resourced archives might be able to implement emulators - but then the question remains how should that be done - Is it okay to have a PDP11 emulator that runs on dos, emulated by dosbox in windows XP, emulated again by virtualbox on Windows 11?A big part of being an archivist is making decisions of what to keep, what not to keep, what form to keep it in, and when to convert it.There is no consensus - some archives knowingly keep data and software that they have no way to open/run, in the hope someone might bother in the future. Others keep dependency tables to ensure that they always have some combination of hardware and software to run/open any stored material.replylondons_explore 13 hours ago | root | parent | next [\u2013]Personally I'm of the opinion that we should focus on storing as many bytes of data of human endeavors as possible, and not worry about emulation/search/cataloging.Future people will have better solutions to all these problems, and every bit of effort we put into organising our archives today is effort taken away from collecting more bytes.replyogurechny 13 hours ago | root | parent | next [\u2013]This means that you care about byte counter instead of actual content.For some hardware, the number of people who can make it work has already diminished a lot. You can gather some of the knowledge today, \u201cfuture people\u201d won't be able to. What's the use of collections of data that can't be used?replyjxramos 10 hours ago | prev | next [\u2013]So I may have missed it, are they hosting old updates to make them available still or are they actually patching old SW with new builds. For example say the last update for XP was SP3.5, they got the tooling to build and release 3.6 which was never released by Microsoft but is from this organization? Is it one or both?replycbmuser 18 hours ago | prev | next [\u2013]What\u2019s the advantage over Legacy Update which seems to work pretty well.replyJohnTHaller 18 hours ago | parent | next [\u2013]Legacy Update is a better option for Windows 2000 and later as it uses a proxied Windows Update 6 implementation. Windows Update Restored uses Windows Update 3.1 and is better for Windows 95/98/Me and Windows NT4.replytemp51723 18 hours ago | parent | prev | next [\u2013]Legacy Update doesn't support Windows 95, Windows NT 4.0 SP3+ Windows 98 First and Second Edition, Windows Millenium Edition.Windows Update Restored (purportedly) does.replycbmuser 17 hours ago | root | parent | next [\u2013]Thanks, this answers my question.replywinterqt 18 hours ago | parent | prev | next [\u2013]For context: https://legacyupdate.netreplykdklol 16 hours ago | prev | next [\u2013]This is exactly what I was looking for. Thanks.(Sent from a ThinkPad x41 running Windows XP)replyklaussilveira 18 hours ago | prev | next [\u2013]Is ReactOS stable enough to replace an old Windows 95 installation?replyjaclaz 17 hours ago | parent | next [\u2013]No matter if stable enough or not, ReactOS is aimed to replicate a NT based system, as such it can be very different from DOS/Win9x.Quite a lot of (DOS based but not only) tools and programs (particularly any low-level one and - generally speaking - games) that run just fine in Windows 95 won't work on NT 4.00/2000 and later, and they as well won't in ReactOS.replysneed_chucker 17 hours ago | parent | prev | next [\u2013]No.replyjxramos 11 hours ago | prev | next [\u2013]I have to say this is awesome> This website requires a minimum of Internet Explorer 5.0 or above, but we recommend Internet Explorer 5.5. To download Internet Explorer 5.5, Click Herereplymajjam 14 hours ago | prev | next [\u2013]Does anyone have any experience with 0patch? I use it to keep a couple of old Win7 systems patched but it makes me nervous\u2026replym000 17 hours ago | prev | next [\u2013]How about adding some instructions on how to use it? Just saying...replycapableweb 17 hours ago | parent | next [\u2013]> To find out more about the Windows Update Website and what it does, Click Here> http://windowsupdaterestored.com/en/aboutwindowsupdaterestor...The submission is the literal website used for the updates. You use it by browsing the website like any other website.You figured out how to use HN without much hand-holding, I'm sure you can figure out how to use this website as well :)Edit: There is even a video explaining how to use the website, not sure what more you could ask for? https://www.youtube.com/watch?v=pbWa_tlC-3IreplyWarOnPrivacy 15 hours ago | prev | next [\u2013]My most recent use-case for XP (in VMs) is to deploy IE as a remote app, to access old DVRs that require ActiveX for web view.replyck2 17 hours ago | prev | next [\u2013]I saw an ATM reboot into XP kiosk mode the other week.Struck me as a bit unsafe?BTW this also exists or did exist for \"Fix Windows Update on Windows XP, Vista, Server 2008, 2003, and 2000\"https://github.com/kirb/LegacyUpdatereplyfredoralive 17 hours ago | parent | next [\u2013]It\u2019s not the greatest to be still using XP. Although hopefully an ATM would be on a real private network, or at least a VPN provided by some more up to date external box (though the latter could have its own bugs I guess). If you pair that with the fact you don\u2019t have externally accessible general IO[1] there probably isn\u2019t much opportunity to gain access.[1] If you can get into the innards you can probably just, you know, grab the cash (beware of dye bombs though).replymschuster91 17 hours ago | parent | prev | next [\u2013]> Struck me as a bit unsafe?Usually ATMs run in their completely own network with heavy access controls limiting access even if the physical location is compromised.replyjaclaz 16 hours ago | parent | prev | next [\u2013]>I saw an ATM reboot into XP kiosk mode the other week.JFYI, there is a dedicated thread on MSFN.ORG for these sightings:https://msfn.org/board/topic/176692-windows-xp-spotter-the-c...Atm's and public signage (airports, metro and similar) are still common enough.replygiobox 17 hours ago | parent | prev | next [\u2013]It was pretty crazy how long IBM's OS/2 survived as an OS on tons of ATMs throughout the world, there will probably still be an ATM somewhere running XP in the 2050s.replyTheRealPomax 16 hours ago | parent | prev | next [\u2013]Safer than card skimmers though.replyincomplete 17 hours ago | prev [\u2013]why no https on this site?replysamtheprogram 17 hours ago | parent | next [\u2013]Older web browsers like those on Windows XP don't support newer versions of SSL.replyDwedit 15 hours ago | root | parent | next [\u2013]There are newer web browsers that will run on Windows XP, see New Moon http://matejhorvat.si/en/unfiled/pmxp/index.htmEven the final official build of Firefox that supported Windows XP will break on websites like Github, where a Releases page will never finish loading, and never let you download any files. But the New Moon build on that website (28.10) will work.(Don't forget to install uBlock Origin and a current fork of uMatrix)replyogurechny 15 hours ago | root | parent | next [\u2013]See http://rtfreesoft.blogspot.com/ and https://github.com/Feodor2/Mypal68Discussions of those builds can be found in relevant threads on relevant forums.replyEric_WVGG 16 hours ago | parent | prev | next [\u2013]> This website requires a minimum of Internet Explorer 5.0 or above, but we recommend Internet Explorer 5.5.that's the bit that left me gobsmackedreplywvenable 17 hours ago | parent | prev [\u2013]Does modern HTTPS even work on Windows 95?replyanthk 16 hours ago | root | parent [\u2013]Under Retrozilla, TLS 1.3replyGuidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- Windows Update Restored is a website that offers fixes for Windows update on older operating systems like Windows 95, 98, ME, 2000, and XP.\n- The website allows users to access Windows updates for these outdated systems, although it is recommended to use more current and secure operating systems.\n- Users should be cautious when running out-of-support Microsoft Windows and updating its system software, as it could potentially expose them to security risks and malware.\n- The website also includes suggestions for alternative operating systems, such as Debian Stable, which is considered a good OS platform for many business and personal purposes.\n- Newer versions of Windows like Windows 10 and 11 have improved Windows Update functionality and security measures in place."
  },
  {
    "id": 36627112,
    "timestamp": 1688703956,
    "title": "Show HN: OPML list of Hacker News Users Personal Blogs",
    "url": "https://github.com/outcoldman/hackernews-personal-blogs",
    "hn_url": "http://news.ycombinator.com/item?id=36627112",
    "content": "Ask HN: Could you share your personal blog here?DescriptionThis is a collection of personal blogs from the Ask HN: Could you share your personal blog here? thread on Hacker News, prepared as OPML for easy import into your favorite RSS reader.UsageDownload list.opml and import it into your favorite RSS reader.When building this list, I have ignored any user with less or equal to 1 karma, which means I might have missed some interesting blogs, but at the same time I wanted to ignore spam or throwaway accounts.The list is sorted by the user karma on Hacker News, so the first blogs are from users with the highest karma.You can modify the list in your editor to include only the top 10 or 100 blogs, or to remove some blogs you are not interested in.Not from all comments I was able to extract a blog URL, so the list is not complete. I just parse the correct recocognized URLs from comments.Not all blogs have RSS feeds, or the RSS feeds aren't included in the <link rel=\"alternate\" type=\"application/rss+xml\" href=\"...\"> or <link rel=\"alternate\" type=\"application/atom+xml\" href=\"...\"> tag, so I might have missed some blogs.Anyway, we got more than 1100 blogs, so I think it is a good start.You can find the output of the latest run at console.log.Content of the blogsI have not reviewed the content of the blogs, so I do not know if they are good or bad, or if they are safe for work. I do not know the languages of those blogs, so I do not know if they are in English or not. The best way to find out is to visit the blog and see if you like it or not.Regenerate listAs easy as running:go run ./main.go | tee > console.logIt is going to take a while, as it needs to fetch the karma for each user, and then fetch the RSS feed for each blog.ContributingPlease do not add blogs directly to the list.opml file, as it is going to be overwritten. Instead, you can go to the original HN thread and add a comment with a link to the blog you want to add.Don't see your blog in the list?Make sure your comment does show a valid URL link to your blog. A lot of times people will type example.com or HTtp://example.com and it won't be recognized as a link.Make sure your blog has an RSS feed. And your website has an alternate link to the RSS feed in the <head> section of the HTML. For example:<link rel=\"alternate\" type=\"application/rss+xml\" title=\"XXX\" href=\"https://example.com/rss.xml\">Only users with more than 1 karma are included.AuthoroutcoldmanTwitterGitHubLICENSEMIT",
    "summary": "- A collection of personal blogs from the Hacker News thread \"Could you share your personal blog here?\" has been compiled into an OPML file for easy import into RSS readers.\n- The list is sorted based on user karma on Hacker News, with the highest karma users listed first.\n- The list may not be complete due to some blog URLs being unrecognized or not having RSS feeds.",
    "hn_title": "Show HN: OPML list of Hacker News Users Personal Blogs",
    "original_title": "Show HN: OPML list of Hacker News Users Personal Blogs",
    "score": 269,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginShow HN: OPML list of Hacker News Users Personal Blogs (github.com/outcoldman)269 points by outcoldman 1 day ago | hide | past | favorite | 97 commentsaltilunium 1 day ago | next [\u2013]Now Is the Perfect Time for an RSS Renaissance (https://news.ycombinator.com/item?id=16907298)I hope this list is constantly maintained and updated.Additionally, do you have any recommendations for a good RSS reader that can properly handle this OPML file? I tried using Omea Reader, but it fails to fetch many of the feeds.replysplitbrain 18 hours ago | parent | next [\u2013]If you want a more casual approach then to right away import 600 feeds into your reader, check out the feed options at IndieBlog.page - it gives you daily random posts not only from the 600 URLs of that recent thread but also from a similar one back in April last year and a bunch of other indie sources...https://indieblog.page/rssreplysaeedesmaili 1 day ago | parent | prev | next [\u2013]I was able to easily import the list into Inoreader.replyaltilunium 1 day ago | root | parent | next [\u2013]> File exceeds maximum allowed number of subscriptions! Your file contains 659 out of 150 maximum allowed subscriptions for your plan.Alright.. I'm gonna build my own RSS reader then.Edit : A kind of \"decentralized\" social media platform where we post on our respective personal blogs, and we may follow each other by using RSS subscriptions. If HN is one such platform, here's the chronological timeline : :https://gist.github.com/altilunium/c2fcbe1e23aeb1cb9564f2593...While generating this list, I found at least 80 sites with inaccessible RSS link : https://gist.github.com/altilunium/8319dae345f701a2a1efd0152...replylukesingham 2 hours ago | root | parent | next [\u2013]Recommend checking out https://github.com/miniflux/v2n.b. I haven't tested importing 600+ feeds!replysaeedesmaili 1 day ago | root | parent | prev | next [\u2013]Ah, I'm subscribed to their Pro plan, didn't know there is a limitation on this on free plan.replybayindirh 17 hours ago | root | parent | prev | next [\u2013]There is TTRSS already.replyskydhash 1 day ago | root | parent | prev | next [\u2013]freshrss is nicereplyalanpearce 1 day ago | prev | next [\u2013]Seems like my blog was not even included in the console output, but it has been part of the thread for a while. https://news.ycombinator.com/item?id=36596022I know I don\u2019t have enough karma, but it seems like the log output should have logged something for that. I also wonder if you\u2019d consider account age as an alternative to karma for anti-spam, as I\u2019m a bit of a hardcore lurker here and I highly doubt that I\u2019m the only one.replyxoranth 1 day ago | parent | next [\u2013](Sorry, I was wrong. See here for the author's reply:https://news.ycombinator.com/item?id=36627385 )replysplitbrain 18 hours ago | parent | prev | next [\u2013]Everyone who missed the thread, please consider adding your blog here: https://indieblog.page/suggestreplyalemanek 20 hours ago | parent | prev | next [\u2013]You are definitely not the only one.replyfluxinflex 22 hours ago | prev | next [\u2013]I've been playing around with Node-RED[1] for a while and thought I would recreate this using Node-RED (also being a big fan of Node-RED). The flow[2], i.e. code, is online to have a look at (editable but not deployable) and the feed[3] is cached and updated every hour or so.It's only a small Heroku server so it might well be down or about to crash, I make no promises!Thanks to the OP for the inspiration, I did take a lot of ideas from the original codebase :)[1]=https://nodered.org[2]=https://demo.openmindmap.org/omm/#flow/a8d90fc15ab6990b[3]=https://blog.openmindmap.org/example/hacker-news-personal-bl...replytommasoamici 1 day ago | prev | next [\u2013]>No feed: https://tommasoamici.com by tommasoamici ( 216 ) no feed found for https://tommasoamici.comUh, this made me realize I forgot to add the RSS feed link to the head tag when I recently migrated my blog to Astro, fixed now!replykevincox 18 hours ago | parent | next [\u2013]For others with similar issues I wrote up some documentation for publishing a feed that can serve as a checklist.https://kevincox.ca/2022/05/06/rss-feed-best-practices/replyvictorbjorklund 23 hours ago | parent | prev | next [\u2013]Same haha. This was great to realize what i missed when rolling my own rss.replyJ_cst 1 day ago | parent | prev | next [\u2013]Hi Tommaso! Your board games collection is quite noticeable!! Bravo!replytiddles 17 hours ago | parent | prev | next [\u2013]Me too, added now!replypricechild 1 day ago | parent | prev | next [\u2013]Same! Must fix...replyNoboruWataya 1 day ago | prev | next [\u2013]There seem to be some malformed URLs here?> <outline type=\"rss\" title=\"ntietz\" text=\"ntietz\" xmlUrl=\"https:&amp;#x2F;&amp;#x2F;ntietz.com&amp;#x2F;atom.xml\" htmlUrl=\"https:&amp;#x2F;&amp;#x2F;ntietz.com&amp;#x2F;atom.xml\"/>replyoutcoldman 19 hours ago | parent | next [\u2013]Unfortunately that is on u/ntietz, if you look at the https://ntietz.com, for some reason they encoded the href``` <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS\" href=\"https:&#x2F;&#x2F;ntietz.com&#x2F;atom.xml\"> ```replykevincox 18 hours ago | root | parent | next [\u2013]Is that wrong or just unusual? IIRC entity escapes are allowed in attributes.replyoutcoldman 17 hours ago | root | parent | next [\u2013]Hard to tell, web is weird :D I contacted the author and they have fixed it!replyPlumpyGER 1 day ago | prev | next [\u2013]This is amazing! Thanks for the effort!I missed the original thread, but would be happy when you include my blog as well :) RSS Feed (en): https://backendhance.com/en/blog/index.xml RSS Feed (de): https://backendhance.com/blog/index.xmlreplyoutcoldman 1 day ago | parent | next [\u2013]Best way to add it https://news.ycombinator.com/item?id=36627385replyJamesonNetworks 16 hours ago | prev | next [\u2013]Ugh, just need 20 more karma. Don't know anything about farming karma for hackernews though. Oh well, maybe I'll have to fork and allow users to specify their min karma to record the blog...replyoutcoldman 16 hours ago | parent | next [\u2013]I will regenerate the list with just 2+ karma. Will let users to figure out what they like or not. 100 was just a random number I used without any idea what is good or bad.replyJamesonNetworks 15 hours ago | root | parent | next [\u2013]I dunno, 80 seems like a pretty good cut off, let me just pull this ole ladder up after myself.... jk, Thanks! Love to be featured on the list, very cool idea. Feels like web rings are coming backreplytomrod 16 hours ago | parent | prev | next [\u2013]19replyluxpir 16 hours ago | prev | next [\u2013]Just a thanks for this. Wanted something like this from that list but didn't have time.Loaded it into Feeder from fdroid (cheers to dev if here) and although it took a while, the result is much better than Twitter et al's output.Might add my own blog to the list one of these days if people keep coming back to this as the reference.replyzorrolovsky 1 day ago | prev | next [\u2013]Thanks for the effort, this is a fantastic resource.I installed 5 RSS reader apps in my Linux Mint machine to test the OPML. 4 of them failed to import the file: Thunderbird, Lifera, Quitrss and another one I forgot the name. Gnome RSS did import the file but it became slow and buggy.I think the file is too long for a typical RSS feed app to process it. Also, there might be some formatting issues a couple apps threw a \"incorrect format\" error (Thunderbird being one of them). Now trying CPod and giving it time... I hope in 20 mins or so it can work with it. I wonder if web-based RSS readers will work better with the file.replymrloop 1 day ago | parent | next [\u2013]I tried importing at feedbin.com, 524 of 598 imported successfully. The failures being a mixture of not found or connection errors and a couple of invalid URL errorsreplyoutcoldman 1 day ago | root | parent | next [\u2013]I just resubmitted the list, I believe around 500+ there is an invalid XML tag, which is fixed now. So all of them should be valid now. Forgot to do xml escape for the URLsreplyoutcoldman 1 day ago | parent | prev | next [\u2013]I run freshrss and was able to import it there.Do you get any errors while importing it?I believe also this XML maybe not valid. Will regenerate it a few minutes.replyanthk 1 day ago | parent | prev | next [\u2013]I had no issues with sfeed, you can get it from https://codemadness.orgreplyfreediver 1 day ago | prev | next [\u2013]Is there an easy way to make a feed of feeds? So one RSS feed for all these?replyoutcoldman 1 day ago | parent | next [\u2013]That is good idea as well! That would require me to actually run the server (or github actions) to refresh the RSS feed, maybe something I would do later on.replyalanpearce 1 day ago | root | parent | next [\u2013]There are quite common and they're usually called planet <topic>, which might help to find useful resources or softwarereplyquickthrower2 22 hours ago | root | parent | prev | next [\u2013]A github action updating a static file is, well, webscale. And cheap/free to host.replyfreediver 1 day ago | root | parent | prev | next [\u2013]Can you please ping me once this is up? We'd love to expose this feed in search results inside Kagi.replythe_common_man 1 day ago | prev | next [\u2013]What's the difference between rss and opml? Just different standards?replyoutcoldman 1 day ago | parent | next [\u2013]OPML allows your to export/import the list of RSS/Atom feeds from your RSS reader. So this is a list of 500-600 blogs that people submitted at that HN discussion, that you can import in your RSS reader.replykevincox 18 hours ago | parent | prev | next [\u2013]OPML (when used in this context) is basically a list of URLs with a touch of metadata. It is the most common format for importing and exporting lists of feeds to move between feed readers.So you generally don't subscribe to an OPML file, it just provides a list of feeds to subscribe to.replyDonHopkins 23 hours ago | parent | prev | next [\u2013]Apparently now RSS stands for \"RSS Serves Structures\" and OPML stands for \"OPML Presents Mere Lists\".replyrambambram 17 hours ago | root | parent | next [\u2013]Or 'Really Social Sites' and 'Other People's Meaningful Lists'. ;)replyakhayam 1 day ago | prev | next [\u2013]Can we commit other people's blogs to this?E.g. I am surprised to not see Julie Zhou's blog in this list--which, I believe, is one of the most influential blogs in the tech product space: https://www.juliezhuo.com/.replyoutcoldman 1 day ago | parent | next [\u2013]I just parsed everything that was published to https://news.ycombinator.com/item?id=36575081 so if they have not published their blog there, it is not in the list.replyyogsototh 21 hours ago | prev | next [\u2013]That's really great! Thank you for that.I saw some people asking for a good RSS reader. Personally I will use elfeed, and I also use elfeed-org so I could import the OPML file and export it into my existing RSS feeds.replyoutcoldman 19 hours ago | parent | next [\u2013]I use freshrss with combination of Reeder for Mac/iOS.replyHamuko 17 hours ago | root | parent | next [\u2013]My combination of choice too.The fact that FreshRSS can fetch full article contents for truncated RSS feeds is precisely the thing you need in order to make RSS useful today. Not the biggest fan of the UI but this one feature makes the whole thing so fucking good.replyfomine3 1 day ago | prev | next [\u2013]This is the first time to see useful OPML lists except export/import usagereplysurprisetalk 20 hours ago | prev | next [\u2013]I made an alternative list of blogs with links to RSS feeds :)[0] https://blogs.hnreplyiddan 1 day ago | prev | next [\u2013]I think my blog is not in the list even though I submitted it in the thread. https://aniddan.com/blogreplywheybags 23 hours ago | parent | next [\u2013]Same, mine is http://wheybags.com/blogreplyaward_ 22 hours ago | prev | next [\u2013]Thanks! I saw the posts and have been making a move to newsblur recently, this will help a lot with content!replyhsnice16 1 day ago | prev | next [\u2013]https://hsnice16.medium.com/replyoutcoldman 15 hours ago | prev | next [\u2013]I just republished the OPML, now close to 1200 blogs!replyJamesonNetworks 14 hours ago | parent | next [\u2013]Awesome! Great job on thisreplyHamuko 1 day ago | prev | next [\u2013]Looking at how many \"https://url.com//feed.xml\" there are in the list, I have a feeling that the scraping logic needs some work. Is it just concatenating \"https://url.com/\" and \"/feed.xml\"?replyoutcoldman 18 hours ago | parent | next [\u2013]I was extracting URL from the alternate link in the HEAD of the blog website. The issue is that some people will do \"//example.com/feed.rss\", some \"feed.rss\" or \"/feed.rss\". So I built pretty stupid URL resolving logic, when I just should have used ResolveReference from go runtime. So the last list will fix that.replyRamblingCTO 1 day ago | parent | prev | next [\u2013]It's also not a good idea. On https://andinfinity.eu/ I have a header for that and it clearly indicates that the rss feed lives at index.html. Standard hugo thing I guess.replyDonHopkins 1 day ago | prev | next [\u2013]OMFG somebody remembers OPML!replyoutcoldman 1 day ago | parent | next [\u2013]RSS is the only way to read news :D Reddit, HN - everything goes to my RSS ;)replythemodelplumber 1 day ago | root | parent | next [\u2013]RSS traditionally kinda sucks for discovery purposes though. (Unless you count these HN threads as the discovery part)I do wonder what's a good way of doing discovery in software, FOSS-style. Using open source client side and free APIs if needed.replypaladum 1 day ago | root | parent | next [\u2013]What about subscribing to OPML files hosted on URLs ? That way one can follow OPML list \"hosts\" (like the one on OPs repository) and discover new RSS feeds. I'm quite surprised that this feature do not exists in RSS reader I tried.replydagurp 22 hours ago | root | parent | prev | next [\u2013]Good. I'm tired of apps suggesting stuff to me.replyDonHopkins 1 day ago | root | parent | prev | next [\u2013]Then why not use RSS, or Atom, or CSV, or HTML, for that matter?That OPML \"outline\" has no tree structure at all, except for the single top level container item:  <outline title=\"HN Personal Blogs\" text=\"HN Personal Blogs\">What is the point of using OPML for a flat structure?Outlines are all well and fine, but a list of links to blogs is hardly an outline.And isn't JSON the simplest most ubiquitous accessible standard format for outlines and even arrays of links these days, if not just raw-dogging XML?More thoughts and opinions and history of OPML, RSS, Dave Winer, More, Frontier, Manila, Radio UserLand, XML-RPC, SOAP, Xanadu, spreadsheets, CSV, JSON, XML, etc:https://news.ycombinator.com/item?id=21170434https://news.ycombinator.com/item?id=16224154https://news.ycombinator.com/item?id=20780928https://news.ycombinator.com/item?id=35674125https://news.ycombinator.com/item?id=36544675replyNoboruWataya 1 day ago | root | parent | next [\u2013]I think it's just that OPML has traditionally been used to import/export lists of RSS feeds, and therefore most readers are capable of importing an OPML file whereas other formats would not be as widely supported.replyDonHopkins 1 day ago | root | parent | next [\u2013]Why do RSS feeds need to be imported/exported as anything other than RSS feeds?According to this thread, four out of five RSS apps on Linux Mint failed to import the OPML file, and the one that did was buggy:https://news.ycombinator.com/item?id=36627431Maybe I'm thick, but it bewilders me that someone wouldn't simply use RSS or Atom directly, instead of abusing OPML to mis-represent it (which is itself just as terribly designed as RSS, by the same person, Dave Winer -- don't even get me started).Is this some kind of a masochistic corrupted data ingestion challenge from TikTok that I'm not aware of, akin to eating Tide Pods or washing your clothes in Campbell's Soup?Does anyone even ever use OPML for outlines any more? Or is it like YAML's backflip, where its original name meant \"Yet Another Markup Language\" until somebody pointed out to their great surprise that it WASN'T actually a markup language, so they retroactively recursively renamed it \"YAML Ain't Markup Language\" on opposite day?So does OPML no longer stand for \"Outline Processor Markup Language\" any more, but now stands for something else like \"OPML Presents Mere Lists\"?What's wrong with exporting and importing RSS as RSS? Has its meaning also changed, flipping places with OPML, so it now means \"RSS Serves Structures\", so you use RSS for nested trees and OPML for flat lists now?I suppose you could recursively encode outlines as nested RSS feeds inside the text content other RSS feeds as <![CDATA[ at each level, or since those can't be nested, exponentially doubling the number of escaped entities at each level.I Wanna Be <![CDATA[ -- Sung to the tune of \u201cI Wanna Be Sedated\u201d, with apologies to The Ramones:https://donhopkins.medium.com/i-wanna-be-cdata-3406e14d4f21replywinrid 1 day ago | prev | next [\u2013]Oh, did it miss mine because I use rss.xml and not feed.xml?https://blog.winricklabs.com/rss.xmlreplytommasoamici 1 day ago | parent | next [\u2013]No, it's because you should include this link tag in the <head>  <link rel=\"alternate\" type=\"application/rss+xml\" title=\"XXX\" href=\"https://blog.winricklabs.com/rss.xml\">replyBigglesB 1 day ago | root | parent | next [\u2013]Ohhhh! Thank you! Looks like I need to do this too for mine! (https://biggles.games)replyBigglesB 1 day ago | root | parent | next [\u2013]Ah, no, I had the atom feed set up already, just insufficient karma on HN... Oh well!replyivolimmen 1 day ago | root | parent | next [\u2013]I just gave you some.. who knows.replywinrid 1 day ago | root | parent | prev | next [\u2013]ohmygosh. Thanks, fixed.replythanatropism 19 hours ago | prev | next [\u2013]Yay, I'm listed!replyrevskill 1 day ago | prev | next [\u2013]How do you update this list on a daily basis ?Github actions is an option.replyoutcoldman 1 day ago | parent | next [\u2013]I am not sure if users of HN will be updating the original HN discussion in general, but yeah, GitHub actions can be an option for this.For now, I just wanted to add those 600+ blogs to my RSS and filter them out slowly if I need to.replydefrost 1 day ago | root | parent | next [\u2013]Good stuff, thanks.Needs a bit of lint work still, eg: current lines 12 & 13 are dupes  <outline type=\"rss\" title=\"bookofjoe\" text=\"bookofjoe\" type=\"rss\" xmlUrl=\"https://www.bookofjoe.com/atom.xml\" htmlUrl=\"https://www.bookofjoe.com/atom.xml\"/>  <outline type=\"rss\" title=\"bookofjoe\" text=\"bookofjoe\" type=\"rss\" xmlUrl=\"https://www.bookofjoe.com/atom.xml\" htmlUrl=\"https://www.bookofjoe.com/atom.xml\"/>but still appreciated as that's a minor quibble easily polished away.replysphars 21 hours ago | root | parent | prev | next [\u2013]There seems to be many valid blogs that got skipped due not having the `rel=\"alternate\"` link in the HTML head (mine included). I just added it, as I'm sure others will, so it'd be a good idea to update the list regularlyreplydistcs 1 day ago | root | parent | prev | next [\u2013]When do you plan re-run your crawler? HN users are updating that original HN discussion every minute as we speak! It'll be nice to get an updated list sometime today. Possible?And yes, thanks for your work and sharing it!replyoutcoldman 16 hours ago | root | parent | next [\u2013]I am fixing some issues, trying to get more blogs from the post, so do it a few times in a day.And hope at some point to actually build something larger from that. I love RSS and this is the best way to discover new content. I actually already have found a few interested blog posts, links, information.replyrevskill 1 day ago | root | parent | prev | next [\u2013]If possible, could you also add to description for anyone wants to add to your list, to go to original thread and submit ?Currently it seems there're many people fetch from original thread, which makes it ne source of truth, less confusing for anyone to submit.replyoutcoldman 1 day ago | root | parent | next [\u2013]Yeah, the best way is to go back to the original post and submit comment there on top level. Make sure HN recognize that as a correct href and your blog has alternative link to rss/atom. And for now only users with 100+ karma are included.I left the console.log there as well to show which blogs aren't recognized.I am also open for PR. It was just a few hours project to get it going, but if people will find it useful, would be nice to get some tags from the blogs, so it would be possible to extract the list only for specific technology/topics.replyBeetleB 1 day ago | root | parent | next [\u2013]> Make sure HN recognize that as a correct href and your blog has alternative link to rss/atom.Any details on how to do this? My blog (https://blog.nawaz.org/) has an RSS feed here (https://blog.nawaz.org/feeds/all.atom.xml) but I don't know how to set it up the way you'd need it.replyzczc 1 day ago | root | parent | next [\u2013]Put this line in html:<link rel=\"alternate\" type=\"application/atom+xml\" title=\"Atom feed\" href=\"https://blog.nawaz.org/feeds/all.atom.xml\">UPD: type=\"application/atom+xml\" for Atom, type=\"application/rss+xml\" for RSSreplydistcs 1 day ago | root | parent | prev | next [\u2013]I don't know Go's flavor of regex but is this correct parsing code: https://github.com/outcoldman/hackernews-personal-blogs/blob...Are you taking care that if the <link> tag spans over multiple lines (linebreaks in between), you're still parsing it right?You do seem to be resolving relative paths with: feedUrl := matches[1] if feedUrl[0] == '/' {   feedUrl = url + feedUrl } else if !strings.HasPrefix(feedUrl, \"http\") {   feedUrl = url + \"/\" + feedUrl }So I think this is good. Just trying to see what could be breaking for the other users who are complaining their feed isn't listed.replyoutcoldman 17 hours ago | root | parent | next [\u2013]I have fixed it for more people, should have used the built-in resolution func https://github.com/outcoldman/hackernews-personal-blogs/blob...replymidzer 17 hours ago | root | parent | prev | next [\u2013]Do sitemaps like `<link rel=\"sitemap\" type=\"application/xml\" title=\"Sitemap\" href=\"/sitemap.xml\">` work, too?-> https://stackoverflow.com/questions/13327527/how-to-make-a-s...replygeneralizations 18 hours ago | root | parent | prev | next [\u2013]Ah, shouldn't have used a throwaway to post my blog. Oh well.replyoutcoldman 16 hours ago | root | parent | next [\u2013]You can comment on that original post again with normal account, and I will regenerate.replyRamblingCTO 1 day ago | root | parent | prev | next [\u2013]Didn't work for me and andinfinity.eu, but I'm in the other lists. Any ideas?replyoutcoldman 16 hours ago | root | parent | next [\u2013]Added a note https://github.com/outcoldman/hackernews-personal-blogs/tree...I checked yours, the issue is that you are escaping + in application/rss&#43;xml, when it should be just application/rss+xmlI have updated the code and will re-generate. I am not sure if what you are doing is allowed or not.replyyard2010 1 day ago | prev [\u2013]HN is such a utopic place. I wonder when the inevitable enshitification will happen, and how?replybennysaurus 1 day ago | parent | next [\u2013]It has its quirks on occasion and has changed a bit but has been around since 2007 and still going great.replyhnzix 1 day ago | parent | prev | next [\u2013]Fear not, dang is Hodor.replycreamyhorror 1 day ago | parent | prev [\u2013]I'm working on an enshittening right now!replyGuidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- An OPML list of Hacker News users' personal blogs has been created and shared on GitHub.\n- HN users can import this list into their RSS readers to easily subscribe to multiple blogs at once.\n- Some users have provided recommendations for RSS readers and offered alternative ways to discover new blogs through OPML."
  }
]
