[
  {
    "id": 36101501,
    "timestamp": 1685252786,
    "title": "Why I Left Rust",
    "url": "https://www.jntrnr.com/why-i-left-rust/",
    "hn_url": "http://news.ycombinator.com/item?id=36101501",
    "content": "HomeTagsTwitterMastodonAtom/RSSPoemsWhy I left RustMay 28, 2023 - thoughts rustThere's a lot of speculation about why I left Rust yesterday, so I want to set the record straight in this post.What happenedA short timeline of what happened from my perspective, as this is relevant for later:A request went out to the interim leadership group for potential keynote speakers for RustConf.JeanHeyd Meneide was proposed by myself and Manish as a keynote. JeanHeyd is one of the two editors of the official C standard, a C++ expert, and a good speaker. We felt like he'd be a great invited expert with an outsider perspective.A few days later it was held to a vote, and JeanHeyd was selected as one of the keynotes.JeanHeyd was asked and accepted the keynote.Before the schedule was posted, it was discussed in a team meeting that JeanHeyd had been selected as one of the keynote speakers.A couple team members had strong opinions/discomfort against JeanHeyd being selected as a keynote speaker, as best as I understand it, because of the content of JeanHeyd's blog post on reflection in Rust.This discomfort was brought to the interim leadership group as a problem that must be fixed immediately. There was no discussion of the ramifications of making a change at this point. There were complaints that this pushback was not sufficient to require change, but this feedback was ignored. The discussion focused on the discomfort of the team members and changing JeanHeyd away from being a keynote speaker as the only solution.A person in Rust leadership then, without taking a vote from the interim leadership group (remember, JeanHeyd was voted on and selected by Rust leadership), reached directly to RustConf leadership and asked to change the invitation.RustConf leadership decided to wait a week before informing JeanHeyd, giving Rust leadership time to change its mind. The interim leadership group was not informed of this week delay.After the week expired, JeanHeyd was informed of the decision to downgrade the talk. Understandably, he fully declined to speak at RustConf.When I read JeanHeyd's blog post and learned of the declining of the invitation, I immediately resigned from the Rust project.I'll also note that the above is the best I am able to understand and piece together. A full investigation needs to happen to uncover how and why the above happened. I also reserve the right to edit the above if new information comes to light.Why did I leave?To my mind, why I left is obvious. I just watched the Rust organization disgrace one of the experts in my field. As an organization, Rust and RustConf offered little resistence to Rust being wielded as a weapon against an individual because of some discomfort of a couple team members.What rang in my mind is: \"a system is what a system does\"Rust acted as a cruel, heartless entity that did not care about JeanHeyd and treated him as disposable. Easy to offer a place of respect and just as quick to snatch it away. That is what Rust is because that is what Rust did.I left because when I felt JeanHeyd's pain and disappointment at being mistreated and betrayed, my heart broke. I wept because of the cruelty. But I also wept because I helped create the system that could do this to someone.But it was just a downgradeI shake my head at people that say things like this. Clearly, they are not used to treating people - let alone experts in the field - with respect. Downgrading a keynote that you explicitly invited the speaker to give (and prior to this they weren't even going to speak at your conference) is extraordinarily disrespectful. I asked around to see if anyone had experienced this or even heard of it happening. No one had.Decisions are made with context, never in a vacuumI also felt the weight of the context of the decision. JeanHeyd isn't just a recent grant recipient of the Rust Foundation. JeanHeyd has important history with the Rust project.It was JeanHeyd who called Rust out for having no Black representation among Rust conference speakers. Rightly so, as both the Rust organization and the conferences had little to no Black representation.When I saw an organization that not only could act so coldly to an expert in the field, but also to one who was a vocal critic of Rust's lack of diversity, it was hard not to see the additional context.Systems have memory and biases. If the people that make up the system don't work to fight against these, they are perpetuated.As my buddy Aman pointed out, the context that this would have also been the first keynote by a person of color at RustConf should not be lost here.It's time for accountabilityI read back over how I handled the situation as it unfolded, and I could have done much better. My go-to tool is diplomacy, trying to build bridges, getting information, and finding compromises. But, after reading over what happened and how I acted, it's clear part of the problem is too much diplomacy in leadership. Too many people giving each other the benefit of the doubt. Too many people asking for answers and then being satisfied to let bad decisions slide.So let me do my part to fix my failings:What we need isn't diplomacy, it's accountability. We need people to take responsibility for what happened and to make amends. We need people to step back from leadership who abused it to perform cruel acts against an expert in the wider programming language community. We need an organization that does not act cruelly so that the project it creates and the organization of people behind it can rebuild the trust it has lost.Questions that need to be answeredRust, as an organization, is guilty of cruelty. It needs to be held accountable. Here are the first questions that come to mind that need to be answered:How was it possible for a decision to be made without a leadership vote?Why was downgrading the talk the only path explored?Why did RustConf leadership go along with this decision and not protect the speaker? Why wasn't Rust leadership notified of the time period in which to change the decision?Who ultimately is responsible for turning some team discomfort into disgracing a public expert? How are we going to hold them accountable?How do we put safeguards in place so that this doesn't happen again?How can Rust not only be held accountable now, but maintain long-term accountability into the future?A simple dev-blog theme created by Bennett. You can follow him on Github (if you like).PreviousMaking a keyboard layout",
    "summary": "- An expert in the field was disgraced by Rust and RustConf for having a controversial blog post on reflection in Rust.\n- The speaker was downgraded from keynote speaker without any discussion of the ramifications, leading to his resignation and the author's departure from the Rust project.\n- Rust must be held accountable for its cruel actions, and questions must be answered about the decision-making process, path explored, and safeguards put in place to prevent such incidents from happening in the future.",
    "hn_title": "Why I Left Rust",
    "original_title": "Why I Left Rust",
    "score": 799,
    "hn_content": "A RustConf speaker has withdrawn from the lineup after accusations of \"uncomfortable technical viewpoints\" and a lack of transparency between the Rust community and its contributors. The situation has led some to question the Rust committee's behavior, culture, and leadership. Rust is winning market share because it incorporates advances in computer language design that C/C++ cannot adopt without breaking backwards compatibility. However, its community has been accused of toxic behavior and emotional blackmail as Rust grows in popularity. The Rust community has a code of conduct, created to address this sort of behavior. But some feel that relying on the Rust committee to enforce its rules is not enough, and members of the community should be more responsible for their conduct.The comments include various opinions about the use of codes of conduct in online communities that cater to tech-savvy individuals. There are concerns about potential misuse of codes of conduct and their effectiveness, as well as criticism of the so-called \"woke\" culture that some believe drives these codes of conduct. The discussion also touches on how exclusion often plays a role in group formation, but sometimes this can include discrimination and other harmful behaviors. Overall, the post explores how culture and shared beliefs can influence how communities develop, and how this can affect the success and integrity of these communities.The Rust community is in turmoil over the disinvitation of a keynote speaker due to concerns over the appropriateness of his talk. Some members of the community believe that the disinvitation was due to the speaker's identity as a Black man. Others believe that it was a technical disagreement that was not brought up earlier. Some commenters criticize the community's handling of the situation, using \"weirdly stylized language of emotion and abuse.\" There are concerns that this incident highlights a larger problem of unchecked mismanagement within the Rust Foundation. The drama may harm Rust's reputation and push away talented contributors. However, some speculate that as Rust becomes more commercially important, its leadership will become more professional.A developer leaving the Rust project due to mistreatment and betrayal from other contributors has sparked discussion about governance within the Rust community. Some believe that it highlights flaws in the project culture and a lack of adequate management of the human element. Others express concerns over trusting the Rust governance to make the right decisions for the ecosystem's future. The emotional language used in the original post has been the subject of scrutiny and debate, with some viewing it as manipulative or melodramatic and others suggesting that it is a reflection of the author's personal experiences. Additionally, there is speculation about possible alternative languages to Rust gaining more adoption, but it is unlikely to replace Rust anytime soon.No new or exciting tech news in this text. The conversation revolves around the use and effectiveness of Codes of Conduct in online communities, specifically in the Rust programming language community. Some argue that Codes of Conduct are necessary to address problematic behavior, while others criticize their implementation and the language used in them. The importance of clear communication and democratic processes is highlighted as key to resolving conflicts within online communities. Some comments use sarcastic or exaggerative language to express their opinions, but the main point is that online communities need to find effective ways to address conflict and promote inclusion.The post features comments from users on Reddit discussing a controversy around a retired programmer from Rust's core team who recently resigned over perceived lack of community engagement. Some comments imply that the language's community is off-putting, while others criticize the use of \"uncomfortable\" as a tool of political fighting. The blogger notes that the situation revealed some internal dynamics in Rust's leadership group, which they argue are not as open as the project appears to be. Some comments suggest that Rust attracts some enthusiastic developers who preach fanatical devotion to the language. Finally, the blogger notes that the ex-member suing Rust over the actions leading to their departure could lead to an overhaul of Rust's leadership.- Rust team members are struggling to balance volunteering for Rust, working on code, reviewing, moderation, and diplomatic tasks\n- Lack of resources leads to heavy moderation and sometimes thread deletion\n- A keynote at RustConf about compile-time reflection caused discomfort among Rust team members\n- Some members believe the Rust project needs more transparency and accountability for decisions made\n- Calls for more diverse viewpoints and involvement from people in different organizationsRustConf 2021 has faced controversy after the organizer \u201cdowngraded\u201d a talk about compiler reflection from a keynote to a \u201cregular talk\u201d. Rust members were uncomfortable with this purely technical viewpoint, resulting in the speaker withdrawing their offer to speak. The incident has sparked various reactions from netizens, with some defending Rust's decision while others criticized it; some attributed it to egotistical behavior in the tech community while others claimed it was a display of \u201cchildish behavior\u201d. Many commented on the need for open discussions and a culture of healthy disagreement within tech communities. The incident did not indicate that Rust has more zealots than other programming languages, and it is an isolated incident. Overall, it has caused observers to reflect on how OSS communities should behave and handle disagreements.",
    "hn_summary": "- RustConf speaker withdrawn from lineup due to accusations of \"uncomfortable technical viewpoints\" and lack of transparency in Rust community\n- Community split over decision, with some calling out potential discrimination and others criticizing community's handling of situation\n- Discussion around governance, management, and culture within Rust community highlighted, as well as effectiveness of codes of conduct for addressing harmful behavior in tech communities."
  },
  {
    "id": 36105629,
    "timestamp": 1685292150,
    "title": "YouTube removed dislike counts, so this guy made Rotten Tomatoes for YouTube",
    "url": "https://bgr.com/tech/youtube-removed-dislike-counts-so-this-guy-made-rotten-tomatoes-for-youtube-videos/",
    "hn_url": "http://news.ycombinator.com/item?id=36105629",
    "content": "Home Tech Apps & SoftwareYouTube removed dislike counts, so this guy made Rotten Tomatoes for YouTube videosBy Jacob SiegalPublished May 25th, 2023 3:39PM EDTImage: FavoreeNear the end of 2021, YouTube made the controversial decision to make dislike counts private across the entire service. You can still dislike YouTube videos with the thumbs down button, but the only people who will ever see those dislikes are the channel\u2019s owners. At the time, YouTube explained that the goal was to protect creators from harassment and dislike attacks, but it also removed a potentially valuable metric that viewers could use to evaluate a video.Pros and cons aside, dislike counts probably aren\u2019t coming back soon (if ever), but there are a few alternatives. One is a browser extension, such as Return YouTube Dislike, which effectively restores the feature on YouTube.com. Another is a site being hailed as \u201cthe Rotten Tomatoes of YouTube,\u201d where users can review their favorite (or least favorite) channels.Earlier this week, one user disappointed with the removal of YouTube\u2019s dislike counts took to Reddit to promote their new site Favoree. Rather than simply giving a channel a thumbs up or thumbs down, you can give it a rating out of five stars and even write a review. That way, you can actually see why people like or dislike a given channel.This is a new site, so only a small handful of YouTube channels are currently represented (much less have many ratings or reviews), but the channel pages themselves convinced me to spend a few minutes browsing around. For example, Summoning Salt is a stellar channel a friend turned me on to a few years ago, which features long-form documentary-style videos about the history of speedrunning video games. The channel page on Favoree features a short description, a list of relevant keywords, embedded videos, and several written reviews.Obviously, this is only going to work if Favoree really picks up steam and thousands of users start writing reviews and submitting new channels. That said, it\u2019s an interesting project, and the creator is accepting feedback on Reddit and acting on many of those suggestions rather quickly. It will be interesting to track Favoree to see how it develops.Don\u2019t Miss:If you\u2019re not paying for YouTube Premium yet, you might regret that very soonThis article talks about:YOUTUBEJacob SiegalAssociate EditorJacob Siegal is Associate Editor at BGR, having joined the news team in 2013. He has over a decade of professional writing and editing experience, and helps to lead our technology and entertainment product launch and movie release coverage.Jacob Siegal's latest storiesMarvel's Thunderbolts, Blade, and Wonder Man stop production over writers' strike, so where does that leave the MCU?New on Prime Video: June 2023Sony's quiet PlayStation Showcase opened the door for the Xbox Series XMore TechHands-on: HomePod 2 exceeds expectations, but there\u2019s one thing you should knowTechJos\u00e9 AdornoThis mind-blowing iOS 17 concept video shows the major update Apple\u2019s iPhone deservesTechJos\u00e9 AdornoHow to find your contacts in GmailTechChris SmithWWDC 2023: How to watch Apple\u2019s first event of the yearTechJos\u00e9 AdornoLatest NewsRotten Tomatoes wants you to think The Little Mermaid remake earned a near-perfect audience scoreEntertainmentAndy Meek5 shows about schemers, strivers, and cutthroat capitalism for fans of HBO\u2019s SuccessionEntertainmentAndy MeekWatch these 4 Netflix series instead of Fubar if you\u2019re in the mood for an action-thrillerEntertainmentAndy MeekAstronomers spotted a supernova so close that you can see it with an amateur telescopeScienceJoshua Hawkins",
    "summary": "- YouTube made the decision to make dislike counts private across the entire service, removing a valuable metric for viewers to evaluate YouTube videos.\n- Favoree, a new site, allows users to rate and review YouTube channels, similar to Rotten Tomatoes for movies.\n- Favoree is still in its early stages and needs more users to submit ratings and reviews to be effective.",
    "hn_title": "YouTube removed dislike counts, so this guy made Rotten Tomatoes for YouTube",
    "original_title": "YouTube removed dislike counts, so this guy made Rotten Tomatoes for YouTube",
    "score": 422,
    "hn_content": "YouTube has removed the dislike count feature, which a BGR article suggests could be a preventative measure against \"troll hordes.\" Meanwhile, users who don't have access to the negative feedback are seeking alternative methods of gauging a video's value. The comment section, which YouTube has also been criticized for reducing negativity in, is now being described as a \"cesspool of toxic positivity\" by some, who claim that the platform is heavily biased towards only showing positive comments, making it difficult to ascertain whether the content is actually trustworthy. Critics are suggesting that this approach hides crucial flaws about the video,\u00a0and has made YouTube comments far less a true \"discussion\" space, even for professionals such as physical therapists.YouTube removed the ability to mark content as \"disliked\" due to concerns over trolls banding together to downvote videos they dislike. However, some argue that it may have more to do with YouTube's business model of advertising and engagement. Removing the dislike button may increase user engagement by forcing people to spend more time watching videos, even those that are known to be bad. However, there is no evidence to indicate that the dislike count was abused by troll hordes. Some suggest alternative solutions such as requiring users to watch a significant portion of the video before leaving a like or dislike, or only allowing feedback from more verified users. Additionally, YouTube also removed the ability to sort videos in chronological order.YouTube has removed the \"Sort by Oldest\" option from video playlists, much to the frustration of some users. Some speculate that this move was made to cut down on the cost of hosting older and less popular videos. Videos that are rarely watched are stored on fewer servers, and are more expensive to access. Others suggest that this could also serve creators, who favor newer videos with better production values. Some viewers have turned to browser extensions, such as Return YouTube Dislike, as a workaround to display accurate dislike counts. However, some argue that the data from these extensions can be inherently biased due to the sampling from a specific subset of users who care about dislike counts.Users discuss the negative impact of Chrome's monopoly in the browser industry and advocate for Firefox to have more extensions available. One user suggests an extension that displays \"rotten tomatoes\" ratings on YouTube, while others express concern over the privacy implications of such an extension. The conversation shifts towards the political influence of YouTube and its content algorithms, with some users claiming that it suppresses certain narratives. Others argue that the algorithms simply serve up content that is more likely to increase engagement, regardless of political leanings. Overall, the discussion emphasizes the need for a more open and transparent internet.Users on YouTube discuss the hidden \"New to You\" button that curates personalized recommendations. Users complain about the quality of recommendations and the effects of downvotes on content and creators. Some argue that the algorithm is biased based on the viewpoints of tech-savvy groups, while others suggest that the downvote button helps prevent the spread of clickbait and misinformation. Concerns around censorship and shadowbanning are also raised. Some suggest that personalized recommendation middle-men could solve the problem of low-quality recommendations but note that adversarial interoperability is currently illegal. Overall, the discussion highlights the challenges of managing user-generated content and the need for better moderation mechanisms.- YouTube removed the dislike counts feature, prompting criticism from users who believe it helped identify misleading videos at a glance.\n- There are also concerns that YouTube is suppressing negative comments, particularly on controversial topics.\n- Some suggestions have been made, such as implementing multiple dislike reasons, requiring users to select a reason for disliking a video, or implementing verified reviews.\n- Others have criticized the focus on dislike counts and comments, and argue that YouTube should instead prioritize its core feature of playing videos and recommending related content.\n- There are also tangential discussions about review bombing and the performance of certain media companies.",
    "hn_summary": "- YouTube has removed the dislike count feature, causing concerns that misleading videos may go undetected.\n- Some users suggest alternative methods to implement negative feedback, such as multiple dislike reasons or verified reviews.\n- There are also concerns that YouTube is suppressing negative comments, making it difficult to gauge the trustworthiness of the content."
  },
  {
    "id": 36106925,
    "timestamp": 1685301891,
    "title": "Health officials delayed report linking fluoride to brain harm",
    "url": "https://www.salon.com/2023/03/16/health-officials-delayed-report-linking-fluoride-to-brain-harm_partner/",
    "hn_url": "http://news.ycombinator.com/item?id=36106925",
    "content": "Last May, the National Toxicology Program (NTP), a federal research agency, was set to release its eagerly awaited report into the cognitive and neurodevelopmental impacts on humans from fluoride exposure.The report was anticipated for several reasons, including its review of studies linking fluoridated water to cognitive harm in children. Water fluoridation is the long-established public policy of adding fluoride to drinking water to fight tooth decay. The report was also set to play a key role in an ongoing lawsuit, filed by government accountability nonprofit Food & Water Watch, to get the Environmental Protection Agency to regulate water fluoridation because of fluoride's possible neurotoxic harm. More than two years ago, the judge put the case on hold in expectation of the NTP report's public release.Before the NTP could release the report, however, \"They were blocked,\" said Linda Birnbaum, NTP director until 2019. According to Freedom of Information Act (FOIA) records obtained by the plaintiffs and shared with Capital & Main, the U.S. Department of Health and Human Services (HHS) held back the release of the report after criticism of its findings from health and dental organizations that advocate for community water fluoridation. Those groups challenged the report's scientific validity and expressed concern that it could jeopardize water fluoridation, which they said could especially impact the dental health of low income communities.Advertisement:The report found that a link between typical levels of fluoride added to water and possible harm to brain development is unclear, with a recommendation for more studies, according to records. But the report did find a possible link to cognitive harm at approximately two times the current recommended water fluoridation level, records show. Some health experts believe this finding makes current water fluoridation levels potentially unsafe for developing fetuses and young children. Because many common foods and drinks contain fluoride, consuming them along with fluoridated water could amount to harmful exposure levels, these experts say.Leading up to the report's intended release, individuals from dental organizations including the American Dental Association (ADA) scrutinized the report's scientific credibility in communications with staff from other dental groups and health agencies including the National Institutes of Health and the NTP, divisions of HHS, records show.This January, Birnbaum issued a scathing legal declaration as part of the lawsuit, writing, \"The decision to set aside the results of an external peer review process based on concerns expressed by agencies with strong policy interests on fluoride suggests the presence of political interference in what should be a strictly scientific endeavor.\" Birnbaum said she issued the legal declaration in part over concerns the report might never be publicly released.Advertisement:The NTP has announced that it will now release the report on March 15, alongside an updated version of the same document that includes the NTP's responses to what it describes as a \"significant number\" of comments and criticisms received from experts at various federal health agencies.Birnbaum, however, remains adamant that the science proves there is \"no real benefit\" from ingesting fluoride. \"The benefit from fluoride is from topical applications,\" she said.*  *  *Water fluoridation is described as one of the 10 greatest public health achievements of the 20th century for its part in reducing tooth decay in adults and children by roughly 25%. According to the latest figures, nearly 73% of people connected with community water systems receive fluoridated water, accounting for more than 200 million people, or just under two-thirds of the overall U.S. population. Advocates argue that fluoridation is especially needed in low income communities where rates of tooth decay are generally higher than in wealthier neighborhoods.Advertisement:At the same time, a growing body of research links fluoride exposure to neurotoxicological impacts in humans, including IQ loss and a higher prevalence of ADHD in children.The NTP has been working since 2016 on its systematic review of the science into these impacts. By the time the report was set for release last May, it had already undergone more rounds of peer review than is typically the case for such a document, court records show \u2014 twice with the National Academies of Sciences, Engineering, and Medicine (NASEM), and external peer review by five experts in the field. According to Birnbaum, similar reports are typically sent out for public comment, peer reviewed by an on-site panel, then finalized by the NTP.Despite this unusually rigorous review process, a network of health officials and influential dental groups argued that the NTP had failed to address several issues raised by the NASEM review committee. These issues include a need to consider more studies in the review, and a failure to properly account for bias among some of the studies selected. One key health official wrote that if the Centers for Disease Control and Prevention (CDC) had been given the option to clear the report, \"We would have non-concurred,\" records show.Advertisement:Birnbaum said she strongly disagrees that the NTP had failed to address NASEM's concerns. In her declaration, Birnbaum wrote that various sources told her the five external peer reviewers agreed with what was then the final report's conclusions, and that \"NTP's staff and leadership considered the monograph to be complete and ready for publication by May 2022.\"The report's critics also feared its findings could erode public trust in water fluoridation, with the head of one leading dental research organization calling it \"potentially very bad fluoride news.\"In April of last year, American Fluoridation Society President Johnny Johnson wrote an open letter to \"Oral Health Advocates and Public Health Leaders\" warning how the NTP's findings were already causing public health officials to second guess their stance on community water fluoridation (CWF).\"In at least one U.S. state the NTP's draft Monograph has led to that state's Toxicologist not being willing to support CWF as safe, when in the past that same Toxicologist was supportive. This is directly due to the NTP's report,\" Johnson wrote.Advertisement:In response to questions, Johnson wrote in an email that \"since the NTP report is not yet publicly available, it would be premature to comment on something that I haven't seen.\" Johnson did not answer when asked which state toxicologist had reversed their stance on water fluoridation.Though the report has not been public, records suggest that in the lead-up to last May's scheduled release it had been shared with members of nongovernmental dental groups like the ADA.If federal health agencies shared the report with outside organizations, \"That was completely inappropriate,\" said Birnbaum. \"It's either everybody gets a chance to look at it, or only very restricted government entities,\" Birnbaum added. \"That trust, I would say, was broken.\"In a February 2022 email to various senior health officials including HHS Assistant Secretary for Health Rachel Levine, ADA senior manager for strategic advocacy and public policy Robert Burns asked the NTP to \"exclude \u2014 or carefully consider how to characterize \u2014 any lingering neurotoxin claims\" from the upcoming report. He wrote that \"such claims are often taken out of context,\" and might \"undermine national, state, and local efforts to expand community water fluoridation\" at the CDC's recommended levels.Advertisement:Jayanth Kumar, who sits on the board of the nonprofit Association of State & Territorial Dental Directors (ASTDD), wrote in June to other figures within the organization that the NTP \"has dug in and doesn't want to change its recommendations. The report gives the impression that the effect observed at high level [sic] of fluoride is causal although the report doesn't state it. NTP recommends more studies at low F [fluoride] levels.\"Neither Burns nor the ADA responded to repeated requests for comment.Kumar, state dental director for the California Department of Public Health, forwarded an email request for comment to an agency spokesperson, who wrote \"CDPH does not comment on pending litigation or on studies in which it did not participate.\"Last May, current NTP Director Rick Woychik sent the document for yet another round of peer review with the agency's Board of Scientific Counselors (BSC). Once the BSC has made its recommendations, Woychik will decide about \"publication and dissemination\" of what is now expected to be the final version of the report.The decision to put the report on hold last May appears to have come from Levine, communications show. Levine's office did not answer questions about whether she made the decision to shelve last May's report and if so, why. A spokesperson for Levine instead linked to the NTP webpage summarizing the report's scientific progress.Advertisement:Christine Flowers, communications director for the National Institute of Environmental Health Sciences (NIEHS), where the NTP is headquartered, did not answer questions about who ultimately decided to shelve NTP's report last year. Instead, she pointed to the same NTP webpage.\"It is important to note that the NTP is an INTERAGENCY organization made up of the NIH [National Institutes of Health], FDA [Food and Drug Administration] and the CDC, which work collaboratively,\" Flowers wrote in an email.*  *  *The EPA's legal drinking water limit for fluoride is 4 parts per million (ppm), but that level was established for naturally occurring fluoride. The CDC uses a nonenforceable guideline of 0.7 parts per million (ppm) as a safe level to counter problems like dental fluorosis, which is a change in the appearance of tooth enamel.Communications between federal health officials and others show that the report the NTP was set to issue last May found that at typical fluoridated water levels in drinking water in the U.S., the effects on brain development are unclear. But it found a possible statistical association with cognitive harm and fluoridated water exposure at approximately 1.5 ppm and above, records show.Advertisement:That level is not low enough to be safe because of fluoride in other foods and drinks consumed daily, said population health scientist Bruce Lanphear, an expert witness for the plaintiffs. This includes certain teas, coffee, canned shellfish, as well as oatmeal, raisins and potatoes. \"Even if there's no effects at the optimally fluoridated levels, people are going to be exposed to other sources of fluoride like black tea,\" explained Lanphear. \"For pregnant women or avid drinkers of black tea, they're going to get more fluoride because it's a hyper accumulator of fluoride.\"The CDC provides guidelines for fluoride intake in small children and babies in the womb, including a recommendation for youngsters under 8 years old living in communities where fluoride occurs naturally at levels above 2 ppm to be given alternative drinking water.The CDC recommends breastfeeding infants, as breastmilk contains significantly less fluoride than fluoridated drinking water. If breastfeeding is not possible, the CDC also endorses using fluoridated water in infant formula, though it suggests mixing the formula with low-fluoride bottled water to lessen the risk of dental fluorosis.Advertisement:Infants who are fed formula made with fluoridated tap water can have three to four times higher fluoride exposure than adults, warned Lanphear. He added that before an infant's teeth erupt, there's no benefit to fluoride exposure. \"There are vulnerable groups we have to be worried about,\" he said, \"and that's not being brought out adequately by these agencies.\"",
    "summary": "- A long-awaited report by the National Toxicology Program (NTP) on the possible cognitive and neurodevelopmental impacts of fluoride exposure in humans was delayed by the US Department of Health and Human Services (HHS) after criticism from health and dental organizations advocating for community water fluoridation.\n- The report found that a link between typical levels of fluoride added to water and possible harm to brain development is unclear, but it did find a possible link to cognitive harm at approximately two times the current recommended water fluoridation level.\n- Experts suggest that current water fluoridation levels may potentially be unsafe for developing fetuses and young children, as many common foods and drinks also contain fluoride.",
    "hn_title": "Health officials delayed report linking fluoride to brain harm",
    "original_title": "Health officials delayed report linking fluoride to brain harm",
    "score": 294,
    "hn_content": "Health officials delayed a report linking fluoride to brain harm. Adding fluoride to water has always seemed weird to some people, and people suggest comparisons between regulations between countries. Fluoride must be added only to toothpaste and mouthwashes. Fluoride acts against the tooth enamel. RO systems can remove some amount of fluoride in water. Drinking fluoridated water only significantly hardens tooth enamel but has bad effects when ingested. Hydroxyapatite toothpaste can actually fix damage, while fluoride reacts with pre-existing enamel. Breastmilk contains significantly less fluoride, and before an infant's teeth erupts, there's no benefit to fluoride exposure. Infants fed by formula made with fluoridated tap water can have three to four times higher fluoride exposure than adults.The article is a debate about the safety and benefits of consuming fluoride. The comment section debates the effects of early lifetime exposure, and some suggest that studies are flawed and lack proper accounting for lifetime consumption. Many commenters suggest alternative remedies such as high-concentration fluoride toothpaste, hydrogen ion supplements, or nanohydroxyapatite toothpaste. The controversy around fluoride is a complex issue that deserves further study. Fluoride can be either beneficial or dangerous based on the concentration, and exposure occurs during all stages of life through various sources, including water, food, and dental products. The conversation highlights the importance of informed decision-making, as most people's exposure to fluoride comes from their source of water.Amidst a discussion on the impacts of fluoride, a biochemist comments that while fluoride benefits dental health when applied externally, ingestion of fluoride can have detrimental effects and has no known benefits. Skeletal fluorosis from high fluoride content in water can occur in regions such as India, but it is challenging to do similar studies on locations with artificially fluoridated water due to the lack of comprehensive past statistics and confounding factors. The reader should note that there is no study indicating the benefits of ingesting fluoride, but there is evidence that it might be harmful. It is suggested that fluoridated salt is available in some countries as an alternative to fluoridated drinking water.The discussion revolves around fluoride in drinking water, toothpaste, and salt, and the impact it has on dental health and brain development. There are mixed opinions on the effectiveness of water fluoridation to improve dental health, and some evidence suggests that too much fluoride can harm cognitive function. Some countries, like the Netherlands, have stopped fluoridating their water and instead use fluoride in salt and gel. Issues surrounding the politics and history of fluoride are also discussed. There are concerns about the potential dangers of over-exposure to other additives in tap water, like chlorine and aluminum. Overall, the report provokes debate about the balance between dental health and potential harm from additives in our food and water.Water fluoridation has sparked a debate around its safety and necessity in modern times, with some suggesting that it may have contributed to bone disorders, cancer, and thyroid problems, and questioning why it's still in use despite regulation against other environmental pollutants. Some comments in the thread suggest that fluoride is discarded by a variety of mineral-based industries and not just aluminum, with some countries struggling to find safe waste disposal methods. One user suggests using vodka as a replacement for fluoride toothpaste suggesting that residual fluoride is detrimental, but others argue that fluoride toothpaste helps prevent gum disease and tooth decay and that residual fluoride in toothpaste produces minimal side effects. Calcium fluoride toothpaste has been suggested as a non-poisonous alternative to conventional toothpaste.",
    "hn_summary": "- Adding fluoride to water has been linked to brain harm and is debated for its safety and benefits\n- The controversy around fluoride is a complex issue that deserves further study and highlights the importance of informed decision-making\n- Alternatives to fluoridated drinking water include fluoridated salt and high-concentration fluoride toothpaste, and calcium fluoride toothpaste is suggested as a non-poisonous alternative to conventional toothpaste."
  },
  {
    "id": 36106267,
    "timestamp": 1685296841,
    "title": "Lua: The Little Language That Could",
    "url": "https://matt.blwt.io/post/lua-the-little-language-that-could/",
    "hn_url": "http://news.ycombinator.com/item?id=36106267",
    "content": "Lua: The Little Language That Could2023-05-28Lua is probably my favourite \u201clittle language\u201d - a language designed to have low cognitive load, and be easy to learn and use. It\u2019s embedded in a lot of software, such as Redis, NGINX via OpenResty and Wireshark. It\u2019s also used as a scripting language in games such as World of Warcraft and Roblox via Luau. This post is a brief love letter to the language, with some examples of why I like it so much.SimplicityLua is not a complicated language, with relatively few features and not a lot of syntax to learn. There are eight types:nilbooleannumberstringuserdata (used to represent C data structures, or blocks of raw memory)functionthread (used for coroutines)table (an associative array, and the sole data structure in Lua)There is no need to worry about float, int, usize. No need to worry about discrete structures to differentiate between arrays, dictionaries or structs. Even classes are \u201cjust\u201d tables with a metatable. This simplicity makes it easy to learn and use, while providing enough power to do most things you need to do.For example, let\u2019s implement a simple binary search in Lua:function binary_search(array, value)  local low = 1  local high = #array -- # is the length operator  while low <= high do    -- library functions are accessed via the global table    local mid = math.floor((low + high) / 2)    local mid_value = array[mid]    if mid_value < value then      low = mid + 1    elseif mid_value > value then      high = mid - 1    else      return mid    end  end  return nilendres = binary_search({2, 4, 6, 8, 9}, 6)print(res)All this should be relatively familiar to look at, even if you\u2019ve never seen Lua before. The only thing that might be unfamiliar is the local keyword, which is used to declare variables. Variables are global by default, so local is used to declare a variable as local to the current scope.CompilabilityLua is an excellent target to compile to, due to its simplicity and easy C interop. This makes it a great choice for domain-specific languages (DSLs), such as Terra, MoonScript and Fennel. As a quick example, here is that same binary search implemented in MoonScript and Fennel:binary_search = (array, value) ->  low = 1  high = #array  while low <= high    mid = math.floor((low + high) / 2)    mid_value = array[mid]    if mid_value < value      low = mid + 1    else if mid_value > value      high = mid - 1    else      return mid  return nilprint binary_search {2, 4, 6, 8, 9}, 6(fn binary-search [array value] (var low 1) (var high (length array)) (var ret nil) (while (<= low high)  (local mid (math.floor (/ (+ low high) 2)))  (local mid-value (. array mid))  (if (< mid-value value) (set low (+ mid 1))    (> mid-value value) (set high (- mid 1))    (do     (set ret mid)     (set low high)))) ; no early returns in Fennel ret)(local res (binary-search [2 4 6 8 9] 6))(print res)EmbeddabilityReally, the true strength of Lua is that you can embed it almost anywhere - Lua is implemented as a library for a host program, like Redis. Traditionally, this was a C program, but there are implementations of a Lua VM in many languages, such as JavaScript via Fengari or Go via GopherLua. However, it has perhaps achieved most success as the primary scripting language for Roblox.Perhaps one of my favourite uses is through HAProxy, harkening back to the days of Apache + mod_php scripting. Let\u2019s set up a HAProxy configuration to respond to requests on a particular path with a random fortune:local function fortune(applet)  local responses = {    {      quote = \"The only people who never fail are those who never try.\",      author = \"Ilka Chase\"    },    {      quote = \"The mind that is anxious about future events is miserable.\",      author = \"Seneca\"    },    {      quote = \"A leader is a dealer in hope.\",      author = \"Napoleon Bonaparte\"    },    {      quote = \"Do not wait to strike until the iron is hot; but make it hot by striking.\",      author = \"William B. Sprague\"    },    {      quote = \"You have power over your mind - not outside events. Realize this, and you will find strength.\",      author = \"Marcus Aurelius\"    }  }  local response = responses[math.random(#responses)]  local resp = string.format([[    <html>      <body>        <p>%s<br>&nbsp;&nbsp;--%s</p>      </body>    </html>  ]], response.quote, response.author)  applet:set_status(200)  applet:add_header(\"content-length\", string.len(resp))  applet:add_header(\"content-type\", \"text/html\")  applet:start_response()  applet:send(resp)endcore.register_service(\"fortune\", \"http\", fortune)global  lua-load fortune.luadefaults  retries         3  timeout http-request  10s  timeout queue      1m  timeout connect     10s  timeout client     1m  timeout server     1m  timeout http-keep-alive 10s  timeout check      10sfrontend fe_main  bind :8080  mode http  http-request use-service lua.fortune if { path /fortune }And then we can run it:$ haproxy -f haproxy.cfg$ curl localhost:8080/fortune    <html>      <body>        <p>Do not wait to strike until the iron is hot; but make it hot by striking.<br>&nbsp;&nbsp;--William B. Sprague</p>      </body>    </html>Why might we want to do this? It\u2019s pretty easy to imagine wanting some small application logic on top of a web server, but not wanting to write a full web application. It can even be used to extend functionality on top of existing applications, like adding a small health endpoint to a Redis server:-- this is a custom fork of redis-lua to support TLSlocal redis = require(\"redis-tls\")local settings = { host = \"127.0.0.1\", port = 6379, database = 14, password = nil,}local utils = { create_client = function(params) local client = redis.connect(params.host, params.port, 1, false) if params.password then  client:auth(params.password) end return client end,}local function redis_health(applet)  -- pcall is like try/catch, takes a func and func args  -- returns true/false and the return value of the func local ok, client = pcall(utils.create_client, settings) if not ok then local string_resp = '{\"ok\":false}\\n' applet:set_status(500) applet:add_header(\"content-length\", string.len(string_resp)) applet:add_header(\"content-type\", \"application/json\") applet:start_response() applet:send(string_resp) return end local resp = client:ping() local string_resp = string.format('{\"ok\":%s}\\n', resp) applet:set_status(200) applet:add_header(\"content-length\", string.len(string_resp)) applet:add_header(\"content-type\", \"application/json\") applet:start_response() applet:send(string_resp)endcore.register_service(\"redis_health\", \"http\", redis_health)global  lua-load redis.luafrontend fe_main  bind :8080  mode http  http-request use-service lua.redis_health if { path /redis_health }$ curl 127.0.0.1:8080/redis_health{\"ok\":false}## start redis$ curl 127.0.0.1:8080/redis_health{\"ok\":true}This can be expanded even beyond this with register_action and register_fetches (see the docs) to intercept request information and modify it, or add additional auth capabilities to software that doesn\u2019t support it natively.CommunityThe Lua community is not particularly large, but there is a lot of excellent development occuring, with many libraries available through the Lua package manager, LuaRocks. From libraries for fast JSON parsing and encoding to an extended standard library, there is a little something for everyone.A special mention must go to Leaf Corcoran, who wrote Lapis - a fantastic little web framework for the OpenResty distribution, which powers the LuaRocks website.ConclusionIs there really a conclusion? Lua is great, you can pick it up in a weekend and start taking advantage of it to write auth layers in HAProxy, World of Warcraft addons, a game in Roblox, script your window manager, map some networks or just small libraries that make you happy.",
    "summary": "- Lua is a simple and easy-to-learn programming language used in various software, including Redis, NGINX, Wireshark, World of Warcraft, and Roblox.\n- Its simplicity allows for easy learning and use, and it can be compiled to various other languages with Lua interop, making it a great choice for domain-specific languages.\n- Lua's ability to be embedded in almost anything, along with a supportive community and available libraries through LuaRocks, makes it a reliable choice for many small applications and extensions.",
    "hn_title": "Lua: The Little Language That Could",
    "original_title": "Lua: The Little Language That Could",
    "score": 270,
    "hn_content": "Lua, a small and lightweight programming language, continues to gain popularity, especially in the game development industry. Not only is it easy to embed in other programs, but it's also tiny and efficient with only 3MB, making it preferable to Node.JS or Java which require significantly more memory. Lua is also an example of excellent language design, with a minimum of concepts for maximum expressibility. Players in the programming industry are still exploring Lua, though there are already other embeddable scripting languages such as Guile or Janet. The language's unique feature is 1-based \"tables\" which serve as both arrays and hashmaps -- a source of debate amongst developers. Some love it as it allows them to get the last element in an array easier, while others find it frustrating when translating between languages.Lua programming language is discussed on its 30th birthday. The argument for and against its 1-based indexing is debated. The discussion includes using Lua to integrate with C++, L\u00d6VE game engine to create 2D games and TekUI GUI library. There is mention of the limited standard library in Lua and its use with C++ bindings to expose external libraries as Lua modules. There is also discussion about Lua and TypeScriptToLua along with comparisons of 0-based indexing with modular arithmetic calculations and negative numbers. Overall, it is an interesting read for those interested in Lua programming and its syntax.Comments on a forum thread praise Lua- Discussion of the Lua programming language's default index for arrays\n- Commenters point out that alternative indexing ranges can be used\n- Noted that the construction of the language's constructors doesn't seem difficult\n- One commenter is criticized for being too upset over the issue\n- No significant news or developments regarding Lua are presented in this post.",
    "hn_summary": "- Lua programming language is discussed on its 30th birthday\n- Debate over the 1-based indexing of \"tables\", some find it useful, while others find it frustrating\n- Comparisons made with other programming languages and alternative indexing ranges"
  },
  {
    "id": 36106942,
    "timestamp": 1685302109,
    "title": "Rust: The wrong people are resigning",
    "url": "https://gist.github.com/fasterthanlime/42da9378768aebef662dd26dddf04849",
    "hn_url": "http://news.ycombinator.com/item?id=36106942",
    "content": "Rust: The wrong people are resigning(Note: I usually blog at https://fasterthanli.me but I'm away for a couple days and wanted to make a statement)Up until recently, I was part of two private online discussion spaces where a bunch of Rust people hung out.So, whenever there was drama, like when the entire mod team resigned, or when a trademark draft got a lot of people seriously worried, or just recently when RustConf took back the keynote from ThePHD https://thephd.dev/i-am-no-longer-speaking-at-rustconf-2023 then JT resigned over it https://www.jntrnr.com/why-i-left-rust/ and Saoirse wrote about governance https://without.boats/blog/if-you-can-keep-it/, I had some place to go, to assess how serious things were this time around.And most of the time, it turned out that the intentions were, in fact, good! But the execution was poor \u2014 or that there was a lack of resources, a lack of process, or a lack of manpower, or a deadline to hold, or it was just that person being that person again.Except, it\u2019s never just that one person, you know? Otherwise I could burn myself by outing them, and do the whole community a favor.It\u2019s really more like those 4 or 5 persons.And it\u2019s not like they\u2019re really bad people, it\u2019s more like they tend to\u2026 use back channels rather than follow process? Or they have too many responsibilities, and are unable to fulfill all of them properly? Or maybe they don\u2019t listen enough?Or maybe it\u2019s not individuals, but pairs of individuals who have a feud for some reason or other (sometimes completely valid). Maybe one party feels slighted by something that happened years ago, maybe they have irreconcilable goals or technical views, or differing opinions on what belongs where.But, at no point was there anything nearly as malicious as what everyone else, in the \u201ctrue out\u201d group, speculated.The recent incident with ThePHD\u2019s keynote downgrade was not racially motivated, thankfully, but\u2026 if that\u2019s what it looks like from the outside, and any form of official communication is still days or weeks away, does it really make a difference?I was able to reassure myself, by checking these private discussion places, that there were good people, fighting for the right thing to be done. That things weren\u2019t irremediably broken. That there was hope for improvement in the near future.But what about all the others? Those who only had the rumors, the sparse official statements, the deleted subreddit threads to go by?Part of me was very disappointed at ThePrimeagen's content around the trademark policy, which in my view added fuel to the fire and resulted in actual harassment (edit: it appears things have improved since, I'm still catching up)Part of me was very disappointed in the enormous waste of time that is the \u201ccrablang\u201d fork, and wishes the people involved could have engaged in a constructive manner instead.But then, part of me can think of a very simple way to prevent that from happening again: the Rust project as a whole needs to be better, and communicate better.It should be possible to be confident and optimistic about the future of the Rust project even without having back channels. There\u2019s people several years into research or business endeavors staked on Rust. They deserve clarity.Additionally, it should be possible to engage with the Rust project at the level you choose to.I have chosen to do Rust education (and, one could argue, evangelism) and that\u2019s what I want to keep doing \u2014 even though it is VERY tempting to try and get involved with governance matters(I have seen many follow the \u201cto do X I must first fix Y\u201d thread all the way into burnout. I won\u2019t be doing that.)I\u2019d be really excited if ThePHD & friends organized a conference, but it shouldn\u2019t be a prerequisite for them to be able to explore and present research re: compile-time reflection in Rust https://soasis.org/posts/a-mirror-for-rust-a-plan-for-generic-compile-time-introspection-in-rust/So!I\u2019m joining the \u201cout group\u201d (or leaving the \u201cin group\u201d, depending on how you look at it).Rust deserves competent critics, and I intend to do my part, using only publicly available knowledge from now on.The state of my \u201cin group\u201d knowledge will soon be obsolete, but as of today, I can tell you that all the good people who could\u2019ve left haven\u2019t yet, and that all the people who should\u2019ve resigned, haven\u2019t yet.I\u2019ll be here, waiting for that to happen. If there\u2019s any hope for the project moving forward, there must be accountability.",
    "summary": "- A former member of two private online discussion spaces for Rust people expresses disappointment in the poor execution or lack of resources/process/manpower when dealing with drama within the community.\n- The writer suggests that a lack of communication and engagement with the Rust project resulted in disappointment and frustration among those who were not privy to private discussions and official statements.\n- The writer calls for better communication and engagement within the Rust community, emphasizing the need for accountability and competent criticism to promote improvement in the project's future.",
    "hn_title": "Rust: The wrong people are resigning",
    "original_title": "Rust: The wrong people are resigning",
    "score": 268,
    "hn_content": "The Rust community is experiencing internal conflict due to the resignation of some key members. There is debate on whether resigning or staying and attempting to fix problems from the inside is more effective. Some users compare the Rust community to other language communities like Go and C#, mention good examples of design discussions without vitriol, and explain the role of benevolent dictators. Other users criticize ego-driven personal projects and the overlap between personal style and professional separation. Additionally, there is discussion of a member of the Rust community narrating a Linux GPU driver for M1 Macs through an anime \"waifu\" avatar, but gender and identity assumptions are debated.The post discusses the taboo around discussing fictional characters past their work or content in the culture of virtual youtubing. Speculation on the motivations behind decisions without clear communication from the decision-makers can lead to harmful assumptions and divisions. Including a black engineer in opportunities to be honored can help make them feel more welcome in a field where they are underrepresented, and ignoring this issue does more harm than good. Corporations and institutions are not immune to immature or petty behavior, and it's essential to create structures that support fairness, wisdom, and maturity. It's best to base accusations of racism on evidence rather than assuming race is always a factor. Casual speculation and baseless claims can create divisions and harm minority considerations.The article discusses drama in the Rust community, including a fork of the language called CrabLang, and concerns over leadership and communication. The author advocates for a shift towards a better-governed, more democratic system. Criticisms are directed towards certain unnamed individuals in the Rust community who have not yet resigned. The article also touches on the role of YouTube and Twitch streamers in milking these controversies for views and the need for more constructive discourse.The Rust programming community has been dealing with drama stemming from the downgrading of a keynote and other decisions made by a small group of individuals. Many argue that the issue stems from a lack of governance and leadership within the community. Some members have resigned from the Rust team in response. However, some commenters suggest that the situation is blown out of proportion and that the drama is toxic. Overall, there is a call for more transparency and community input to prevent similar situations from happening in the future. The drama has raised questions about identity and attachment to programming languages, and some argue that the situation is not unique to Rust and could happen in other technical fields.Rust is facing criticism over the cancellation of a keynote speaker and their keynote slot being downgraded to a \"normal talk\" without proper procedures being followed. The incident highlights concerns over Rust's governance, with some arguing that Rust has become too bureaucratic and political. While some cite Python as an example of good governance after their BDFL system, others point out that other popular languages, such as Elixir, have achieved popularity without much drama. Members of the Rust community have resigned over the handling of the situation, and there are calls for better communication and accountability. The drama highlights the importance of clear procedures and transparency in open-source project governance.The Rust programming community has been criticized for creating drama and an infantile governance structure over a recent keynote downgrade at a Rust conference. Some commenters criticized the community for its extreme level of evangelists who create unnecessary tantrums and dramas over the slightest things. Others suggested that the community has devolved and called for a fork of the project devoid of identity politics. Others have used the incident to applaud alternative programming languages like Elixir and criticize the politics behind the Rust community. The article has generated interest in the Rust community's governance style and the politics surrounding it.There is strife between developers over encoding human needs in code that is visible on mailing lists and old forums. New languages adopt communication methods like blogs and tweets. There are controversies surrounding some programming languages like C++ and Go, including conflicts over standards committees, the role of a single BDFL, and lack of generics. However, users can still use these languages without knowing about the drama and actual development does not seem to suffer. Applications for YC Summer 2023 are open.",
    "hn_summary": "- The Rust community is experiencing internal conflict due to the resignation of key members and concerns over governance and leadership.\n- Criticisms have been directed towards certain individuals, and there are calls for more transparency and community input to prevent similar situations from happening in the future.\n- The drama in the Rust community has generated interest in the governance style and politics surrounding the language, and has raised questions about identity and attachment to programming languages."
  },
  {
    "id": 36102406,
    "timestamp": 1685265171,
    "title": "ARM's Cortex A53: Tiny but Important",
    "url": "https://chipsandcheese.com/2023/05/28/arms-cortex-a53-tiny-but-important/",
    "hn_url": "http://news.ycombinator.com/item?id=36102406",
    "content": "ARM's Cortex A53 is a low-power dual issue, in-order architecture that optimizes for power efficiency and non-CPU sensitive tasks. Despite newer cores like the A55, the A53 remains popular. The A53's branch predictor emphasizes low power and area over speed and accuracy, resulting in an underwhelming performance compared to out-of-order CPUs. It has an eight-deep return stack and a 256-entry indirect target array. The A53's instruction cache capacity can range between 8 and 64 KB, and parity protection is optional, enabling implementers to save power and area in exchange for lower reliability. The A53 can dual-issue common integer and floating-point instructions, but not 128-bit vector operations. Its execution engine bypasses pipeline hazards and lacks register renaming. Non-blocking loads allow for some reorder capability around cache misses, but internal buffers are small, and it stalls quickly. Big code footprints lead to poor instruction throughput when fetching instructions from memory.- The ARM Cortex A53 is an in-order CPU with internal buffers, aimed at improving performance without the complexity of out-of-order execution.\n- The A53 has a single address generation pipeline for memory operations, limiting it to one memory operation per cycle, which is a significant weakness compared to out-of-order CPUs.\n- A53's load/store unit is simpler than out-of-order CPUs, but still has to handle byte granularity and memory dependencies, with some penalty for forwarding and accessing data cache in non-aligned chunks.\n- A53's TLB setup delivers address translations at low latency across small memory footprints, optimized for power and area by only supporting 40-bit physical addresses, limited to 1TB of physical memory.\n- A53's L1 data cache has a 3 cycle latency, can deliver 8 bytes per cycle on cache hit, and up to three pending misses to L2, that is 16-way set-associative and can be configured with capacities from 128KB to 2MB.\n- A53 struggles with more complex workloads due to load misses, and prediction accuracy is a problem, but IPC holds its own in specific cases where less than 1% of instructions are branches.\n- A53's high DRAM latency and low bandwidth are typical for low power CPUs, but the cluster is especially limited because it doesn't have a lot of cache in front of memory.ARM's in-order Cortex A53 CPU is optimized for power and area efficiency, rather than outright performance, making it well-suited for low-power and limited performance use cases. The A53's design goals are achieved through smaller, less power-hungry caches, and in-order execution. While the A53's design results in high-memory access latency and fewer instruction execution resources, it possesses modern features such as indirect branch prediction, dual issue capability for floating point math, and better prediction for direct branches. The A53's strength can be seen in its widespread use in the mobile market and in various low-power applications after its days in cell phone SoCs. However, A53's limitations in execution latency and cache size may hamper its performance in more demanding applications.",
    "summary": "- ARM's Cortex A53 is a low-power CPU, optimized for power efficiency and non-CPU sensitive tasks.\n- A53's design is achieved through smaller, less power-hungry caches, and in-order execution.\n- A53's strength can be seen in its widespread use in the mobile market and in various low-power applications after its days in cell phone SoCs.",
    "hn_title": "ARM\u2019s Cortex A53: Tiny but Important",
    "original_title": "ARM\u2019s Cortex A53: Tiny but Important",
    "score": 247,
    "hn_content": "- The Cortex A53 microarchitecture is notable for remaining largely unchanged for over a decade.\n- Intel's revs to their Atom cores and new E-core contribute to the potential for more progress.\n- ARM's newer and less power-efficient designs, Cortex-A7x and Cortex-X, are now the focus.\n- SiFive's U74 and XuanTie C910 show that ARM's revised Cortex-A57 has been surpassed in performance, power, and area.\n- Mobile phones with background tasks that do not require much CPU power use A53 and save power.\n- \"Race to sleep\" designs, which are focused on quickly turning the core on and then going back to sleep effectively, require OS support and are efficient with software.\n- Users can visually understand the chip's labels, specifications, pin labels, and similar help locate which part does what.\n- A53 cores are suitable for low-power platforms, but modern Android runtimes are probably too heavy for these cores alone.\n- Millions of new phones sold worldwide have only A53 cores, and some consider them \"perfectly useable.\"An article discussing the design goals of Cortex-A55 and Cortex-A510, which implement additional instructions over those of Cortex-A53, respectively. They are intended to be paired with big and medium-size cores, prioritizing improved ISA's and design enhancements that lead to greater performance. The article also touches upon the scheduling of processes between efficient and performance cores. The comments section includes discussions on RISC-V as a potential competitor to ARM, the toxicity of IP cores, and the preferability of licensing ARM cores versus creating a RISC-V core from scratch. While the comment section is diverse, it points towards the growing interest in open/free ISAs, the importance of competition, and the potential for performance improvement through micro-architecture design.Major tech companies like Google, Apple, and Amazon may use their resources to leverage their core products. This trend is prevalent in low-margin and low R&D investment areas. Going solo may not be a viable option against competitors who are teaming up. An aggressive editor could help streamline the article. Despite some bloating, the current state is manageable as long as regular checks are in place.",
    "hn_summary": "- Cortex A53 microarchitecture has remained largely unchanged for over a decade and is used in millions of phones worldwide.\n- Newer and less power-efficient designs, Cortex-A7x and Cortex-X, are now the focus, while SiFive's U74 and XuanTie C910 show that Cortex-A57 has been surpassed in performance, power, and area.\n- Article also discusses the design goals of Cortex-A55 and Cortex-A510, intended to be paired with big and medium-size cores, prioritizing improved ISA's and design enhancements that lead to greater performance."
  },
  {
    "id": 36106196,
    "timestamp": 1685296272,
    "title": "Libuv \u2013 Linux: io_uring support",
    "url": "https://github.com/libuv/libuv/pull/3952",
    "hn_url": "http://news.ycombinator.com/item?id=36106196",
    "content": "Skip to contentProductSolutionsOpen SourcePricingSign inSign uplibuv/libuvPublicNotificationsFork 3.4kStar 21.5kCodeIssues106Pull requests47DiscussionsActionsSecurityInsightsNew issuelinux: introduce io_uring support #3952Mergedbnoordhuis merged 1 commit into libuv:v1.x from bnoordhuis:iou on Apr 18Apr 18, 2023on Apr 18+662 \u221235Conversation 52Commits 1Checks 36Files changed 7ConversationMemberbnoordhuis commented on Apr 12Apr 12, 2023 \u2022editedAdd io_uring support for several asynchronous file operations:read, writefsync, fdatasyncstat, fstat, lstatio_uring is used when the kernel is new enough, otherwise libuv simplyfalls back to the thread pool.Performance looks great; an 8x increase in throughput has been observed.This work was sponsored by ISC, the Internet Systems Consortium.\ud83c\udf8955olof-nord, ericphanson, espoal, mcollina, asio1337, ronkorving, MomenNano, joy4eg, gurgunday, H4ad, and 45 more reacted with hooray emoji\u2764\ufe0f74tsondergaard, puzpuzpuz, feniljain, debadree25, ozcanay, CircuitCoder, jorgebay, vdeturckheim, Theofilos-Chamalis, paambaati, and 64 more reacted with heart emoji\ud83d\ude8054paambaati, jmillan, bricss, haoyu234, MomenNano, aapoalas, rektide, Ender-events, GaryGSC, debadree25, and 44 more reacted with rocket emojibnoordhuis force-pushed the iou branch from 8dd8b3e to efc9bbfComparelast monthApril 12, 2023 21:48bnoordhuis mentioned this pull request on Apr 12Apr 12, 2023Use io_uring for read/write/fsync on Linux #2322Closed7 taskstrevnorris reviewed on Apr 12Apr 13, 2023View reviewed changessrc/unix/linux.cShow resolvedMoelf mentioned this pull request on Apr 12Apr 13, 2023Scaling IO with number of threads to achieve high throughput JuliaLang/julia#48232Openbnoordhuis force-pushed the iou branch from 86c2f62 to ea34563Comparelast monthApril 13, 2023 12:33rektide commented on Apr 13Apr 13, 2023 \u2022editedAlso potentially resolves or progresses #1947.Also: \ud83c\udf89! \ud83d\ude80!Comment from the peanut gallery here, but, personally I'd be fine with/love/prefer an io_uring that targeted more modern io_urings. My understanding is 5.15 (2021.10.31) had a bunch of pretty sizable improvements to how folks could use io_uring. That's already nearly two years old, and is going to get more and more expectable. Meanwhile folks on older kernels (5.1 is 2019.5.5) still have the very fast existing libuv thread pool implementation to fall back on.Maybe there's no sacrifice, but \"a carefully chosen feature subset\" leaves the impression that we're going way out of our way to support already pretty aged kernels. Grain of salt here, but being rip-raring future-forward-facing & adopting every whiz-bang shiny-new-whistle we can would be my pick at this juncture.\ud83d\udc4d9paulstuart, johnm, matthiasgoergens, hackerjones, ptrwis, chientrm, haf, the9000, and fazalmajid reacted with thumbs up emoji\ud83d\ude041nalply reacted with laugh emojiMembertrevnorris commented on Apr 13Apr 13, 2023Did some basic benchmarking, and it's giving me > 8x performance when reading small chunks out of /dev/zero. So great news on that side.valgrind isn't happy about a few tests. Mostly with the error Syscall param io_uring_enter(sigsz) contains uninitialised byte(s). Simplest repro I could make is this:#include <uv.h>void on_read(uv_fs_t *req) { }int main() { uv_fs_t read_req; uv_buf_t buffer; int fd; char bytes[64]; buffer = uv_buf_init(bytes, 64); fd = uv_fs_open(NULL, &read_req, \"/dev/zero\", UV_FS_O_RDONLY, 0, NULL); uv_fs_read(uv_default_loop(), &read_req, fd, &buffer, 1, 0, on_read); uv_run(uv_default_loop(), UV_RUN_DEFAULT); uv_fs_close(NULL, &read_req, fd, NULL); uv_fs_req_cleanup(&read_req); uv_loop_close(uv_default_loop()); return 0;}\u2764\ufe0f9matthiasgoergens, orin220444, dvergeylen, GaryGSC, chientrm, MomenNano, xorgy, corporatepiyush, and magJ reacted with heart emoji\ud83d\ude801benjamingr reacted with rocket emojibnoordhuis force-pushed the iou branch from ea34563 to a8e328dComparelast monthApril 14, 2023 18:43MemberAuthorbnoordhuis commented on Apr 14Apr 14, 2023personally I'd be fine with/love/prefer an io_uring that targeted more modern io_uringsThings may be heading that way out of necessity.IORING_SETUP_SQPOLL requires linux v5.11 if you want to use it with non-fixed files (IIUC) but libuv can't do fixed files and without sqpoll it has to call io_uring_enter(IORING_ENTER_GETEVENTS) so often that any performance benefits are negated.\ud83d\udc4d3hackerjones, rektide, and espoal reacted with thumbs up emojisantigimeno reviewed on Apr 14Apr 14, 2023View reviewed changessrc/unix/linux.cOutdatedShow resolvedbnoordhuis force-pushed the iou branch from a8e328d to 87fd159Comparelast monthApril 15, 2023 18:57bnoordhuis marked this pull request as ready for review last monthApril 15, 2023 18:58MemberAuthorbnoordhuis commented on Apr 15Apr 15, 2023This is ready for review now. Linux v5.13 is the minimum required, otherwise libuv falls back to the thread pool.santigimeno reviewed on Apr 15Apr 15, 2023View reviewed changesMembersantigimeno left a commentShould we document this change in the fs docs?src/unix/linux.cShow resolvedtest/test-threadpool-cancel.cShow resolvedsrc/unix/linux.cShow resolvedMemberAuthorbnoordhuis commented on Apr 15Apr 15, 2023 \u2022editedShould we document this change in the fs docs?Yes. I thought it didn't say anything about the implementation but it does. I'll do that tomorrow.santigimeno approved these changes on Apr 16Apr 16, 2023View reviewed changesMembersantigimeno left a comment \u2022editedLGTM (once docs are updated). This is awesome, thanksMembertrevnorris commented on Apr 17Apr 17, 2023Still getting the following from valgrind:fs_file_asyncSyscall param io_uring_enter(sigsz) contains uninitialised byte(s)  at 0x4993A3D: syscall (syscall.S:38)  by 0x4F1366: uv__io_uring_enter (src/unix/linux.c:351)  by 0x4F23A9: uv__iou_submit (src/unix/linux.c:644)  by 0x4F24B5: uv__iou_fs_read_or_write (src/unix/linux.c:692)  by 0x4DDAAC: uv_fs_write (src/unix/fs.c:2212)  by 0x422F97: create_cb (test/test-fs.c:491)  by 0x4DA38C: uv__fs_done (src/unix/fs.c:1779)  by 0x4CDFD0: uv__work_done (src/threadpool.c:326)  by 0x4D6433: uv__async_io (src/unix/async.c:176)  by 0x4F2F95: uv__io_poll (src/unix/linux.c:1076)  by 0x4D6B2D: uv_run (src/unix/core.c:417)  by 0x42241C: run_test_fs_file_async (test/test-fs.c:915)trevnorris approved these changes on Apr 17Apr 17, 2023View reviewed changesMembertrevnorris left a commentLGTM other than the valgrind error. The current code you have for incrementing events is fine enough since it basically follows what the threadpool is doing. It's a bug, but not one you should need to worry about. I'll take care of that in a future PR.trevnorris reviewed on Apr 17Apr 17, 2023View reviewed changessrc/unix/linux.cOutdatedShow resolvedMemberAuthorbnoordhuis commented on Apr 18Apr 18, 2023FWIW, I don't get that warning with valgrind 3.18.1.I'm 99% sure it's a valgrind bug because that sigsz it's complaining about is something that libuv doesn't use and doesn't exist in newer kernels.On kernels where it was a thing libuv simply never calls io_uring_enter().bnoordhuis force-pushed the iou branch from a1b1303 to a66dbfeComparelast monthApril 18, 2023 10:02linux: introduce io_uring support \u202626c79a9bnoordhuis force-pushed the iou branch from a66dbfe to 26c79a9Comparelast monthApril 18, 2023 10:07View detailsbnoordhuis merged commit d2c31f4 into libuv:v1.x on Apr 18Apr 18, 202335 of 36 checks passedbnoordhuis deleted the iou branch last monthApril 18, 2023 10:32Membertrevnorris commented on Apr 18Apr 18, 2023 \u2022edited@bnoordhuis I'm also running valgrind 3.18.1. Upon further testing, the error only appears when I compile with clang (I tried all versions 11 to 15). It doesn't happen with gcc. Think it's a bug in clang or just a strange interaction with valgrind? Side note: need to compile with -gdwarf-4 when using clang for valgrind to work.MemberAuthorbnoordhuis commented on Apr 18Apr 18, 2023Oh, that's interesting. Yes, I'm getting the same warning with clang.gcc emits this code for the syscall wrapper:  0x00000000000997f0 <+0>:   endbr64  0x00000000000997f4 <+4>:   sub  $0x10,%rsp  0x00000000000997f8 <+8>:   mov  %ecx,%r8d  0x00000000000997fb <+11>:  xor  %r9d,%r9d  0x00000000000997fe <+14>:  mov  %edx,%ecx  0x0000000000099800 <+16>:  push  $0x0  0x0000000000099802 <+18>:  mov  %esi,%edx  0x0000000000099804 <+20>:  xor  %eax,%eax  0x0000000000099806 <+22>:  mov  %edi,%esi  0x0000000000099808 <+24>:  mov  $0x1aa,%edi  0x000000000009980d <+29>:  call  0xe810 <syscall@plt>  0x0000000000099812 <+34>:  add  $0x18,%rsp  0x0000000000099816 <+38>:  retWhile clang emits this:  0x00000000000a31f0 <+0>:   push  %rax  0x00000000000a31f1 <+1>:   mov  %ecx,%r8d  0x00000000000a31f4 <+4>:   mov  %edx,%ecx  0x00000000000a31f6 <+6>:   mov  %esi,%edx  0x00000000000a31f8 <+8>:   mov  %edi,%esi  0x00000000000a31fa <+10>:  movl  $0x0,(%rsp)  0x00000000000a3201 <+17>:  mov  $0x1aa,%edi  0x00000000000a3206 <+22>:  xor  %r9d,%r9d  0x00000000000a3209 <+25>:  xor  %eax,%eax  0x00000000000a320b <+27>:  call  0xd780 <syscall@plt>  0x00000000000a3210 <+32>:  pop  %rcx  0x00000000000a3211 <+33>:  retI'm guessing that valgrind gets confused by that movl $0x0,(%rsp) for the sigsz argument somehow.KyleSanderson mentioned this pull request on Apr 18Apr 18, 2023feature: nonblocking disk IO transmission/transmission#2462Openbnoordhuis added a commit to bnoordhuis/libuv that referenced this pull request on Apr 18Apr 19, 2023linux: fix academic valgrind warning \u2026571c551bnoordhuis mentioned this pull request on Apr 18Apr 19, 2023linux: fix academic valgrind warning #3960MergedMemberAuthorbnoordhuis commented on Apr 18Apr 19, 2023@trevnorris figured it out while I was doing something completely different (isn't it always like that?), please see #3960. :-)\ud83c\udf891trevnorris reacted with hooray emojibnoordhuis added a commit that referenced this pull request on Apr 18Apr 19, 2023linux: fix academic valgrind warning (#3960) \u2026a7ff759espoal mentioned this pull request on Apr 19Apr 19, 2023Add experimental support for io_uring nodejs/node#34388Closedespoal commented on Apr 19Apr 19, 2023 \u2022editedamazing work, I will make sure to add this PR to my awesome io_uring repo.Is there a way to test it? Maybe I could write a small tutorial / benchmarkAlso is this PR just for files or also for network operations?espoal reviewed on Apr 19Apr 19, 2023View reviewed changesdocs/src/fs.rst@@ -12,6 +12,12 @@ otherwise it will be performed asynchronously.All file operations are run on the threadpool. See :ref:`threadpool` for informationon the threadpool size.Starting with libuv v1.45.0, some file operations on Linux are handed off to`io_uring <https://en.wikipedia.org/wiki/Io_uring>` when possible. Apart froma (sometimes significant) increase in throughput there should be no change inespoal on Apr 19Apr 19, 2023is it true that there are no changes in observable behaviour? I can think of a couple of edge cases with NFS. I guess it's time to test :) Also is this PR just for files or also for network operations?MemberAuthorbnoordhuis on Apr 19Apr 20, 2023Just file operations for now. If you want to test without io_uring to compare, you can set UV_USE_IO_URING=0 in the environment (but note that's undocumented and may go away in the future.)Contributorclason 2 weeks agoMay 12, 2023Hi! Neovim dev here. You know what's coming now... This change has introduced regressions in some file operations (hang when polling a large number of files neovim/neovim#23595 and reproducible downstream failures in CI that we're still trying to narrow down).So an official way to disable io_uring, preferably through the API, would be necessary for us.MemberAuthorbnoordhuis 2 weeks agoMay 12, 2023I don't plan on doing that but if it's a libuv bug, I'll fix it of course, and if you're hitting a kernel bug, I can probably add detection-and-fallback code. I'll need the kernel version, arch and faulting IORING_OP at the very least for that.Contributorclason 2 weeks agoMay 12, 2023Affected kernels I know about:Arch Linux, kernel 6.3.1-arch1-1ChromeOS M113's 5.15.103-17409 inside of a Crostini containerand possibly whatever GHA is currently using with ubuntu-latestI'll have to see about tracing the IORING_OP calls for that (any advice or links for that?)Load more\u2026Contributorclason 2 weeks agoMay 12, 2023And here's a minimal reproducer (in Lua): neovim/neovim#23595 (comment)MemberAuthorbnoordhuis 2 weeks agoMay 12, 2023Thanks, I'll take a look! Caveat emptor: weekend, kids, etc., so it might take me a few days to circle back.\ud83d\udc4d1clason reacted with thumbs up emojiMembersantigimeno 2 weeks agoMay 12, 2023It seems to me that the cq ring might have overflowed IORING_SQ_CQ_OVERFLOW and we might need to call io_uring_enter() to recover the events that didn't make it.MemberAuthorbnoordhuis 2 weeks agoMay 14, 2023Yes, I strongly suspect it's something along those lines. I'll open a pull request once I've managed to reproduce with just libuv.(Or if you want to send one, of course go ahead.)Membersantigimeno 2 weeks agoMay 14, 2023@bnoordhuis I've given this a try in #3991. Let me know what you think. Thanks!angelsanzn mentioned this pull request 3 weeks agoMay 11, 2023io_uring new uSockets backend uNetworking/uWebSockets#1603Opensantigimeno mentioned this pull request 2 weeks agoMay 12, 2023Release proposal: v1.45.0 #3887Closed2 tasksaktau commented 2 weeks agoMay 15, 2023After Neovim merged the fix for overflow, I could start using it and it seems to work. But I see the following in dmesg:nvim: epoll_ctl support in io_uring is deprecated and will be removed in a future Linux kernel version.Neovim does not appear to use epoll_ctl(2) itself, so this is likely libuv.Membersantigimeno commented 2 weeks agoMay 15, 2023 \u2022edited@aktau it's being taken care of upstream: https://lore.kernel.org/io-uring/20230501185240.352642-1-info@bnoordhuis.nl/T/#uplajjan mentioned this pull request last weekMay 18, 2023New kernel polling interface for Linux 4.18 (io_uring)? #1947Closedsantigimeno mentioned this pull request last weekMay 19, 2023deps: upgrade to libuv 1.45.0 nodejs/node#48078Closedzhaozg mentioned this pull request last weekMay 20, 2023request bind v1.45.0 new features luvit/luv#646Closedsantigimeno added a commit to santigimeno/node that referenced this pull request last weekMay 20, 2023deps: upgrade to libuv 1.45.0 \u20267170fc9squeek502 mentioned this pull request last weekMay 20, 2023valgrind thinks statbuf is uninitialised during uv_fs_stat (false positive) #4008Openaantron mentioned this pull request last weekMay 23, 2023Upgrade libuv to 1.45.0 aantron/luv#151Opensantigimeno added a commit to santigimeno/node that referenced this pull request 5 days agoMay 24, 2023deps: upgrade to libuv 1.45.0 \u2026851508bnodejs-github-bot pushed a commit to nodejs/node that referenced this pull request 5 days agoMay 24, 2023deps: upgrade to libuv 1.45.0 \u20269e68f94corporatepiyush mentioned this pull request 10 hours agoMay 28, 2023improve socket read throughput dart-lang/sdk#48210Open4 tasksoowl mentioned this pull request 4 hours agoMay 29, 2023New kernel file interface polling interface for Linux 4.18 (io_uring)? ossrs/srs#3558Opengithub-actions bot mentioned this pull request 2 hours agoMay 29, 2023Hacker News Daily Top 30 @2023-05-29 meixger/hackernews-daily#253OpenSign up for free to join this conversation on GitHub. Already have an account? Sign in to commentReviewerstrevnorristrevnorris approved these changessantigimenosantigimeno approved these changesclasonclason left review commentsespoalespoal left review commentsAssigneesNo one assignedLabelsNone yetProjectsNone yetMilestoneNo milestoneDevelopmentSuccessfully merging this pull request may close these issues.None yet7 participantsFooter\u00a9 2023 GitHub, Inc.Footer navigationTermsPrivacySecurityStatusDocsContact GitHubPricingAPITrainingBlogAbout",
    "summary": "- Libuv, an open-source library that provides asynchronous I/O capabilities, has introduced support for io_uring on Linux.\n- This io_uring support enables several file operations such as read, write, and fsync, to be more efficient and reduce latency.\n- Performance tests with the new feature have reported up to eight times better throughput when reading small chunks from \"/dev/zero\".",
    "hn_title": "Libuv \u2013 Linux: io_uring support",
    "original_title": "Libuv \u2013 Linux: io_uring support",
    "score": 237,
    "hn_content": "Libuv now supports io_uring, a modern asynchronous I/O system for Linux.\nThe new system is specifically beneficial for disk I/O, but testing it against epoll in a real-world scenario for BIND9 is complicated.\nAdopting io_uring support in existing code can be challenging, but it's great for new code.\n\"Windows X for Y\" is a common phrasing in the tech world, but it can be ambiguous.\nNode.js v21 is anticipated to be very fast with the inclusion of io_uring support in Libuv.- Node.js may see performance improvements on newer versions of the Linux kernel using an updated version of libuv with integrated io_uring support.\n- Although benchmarks have shown an 8x improvement in throughput, this is largely limited to file I/O bound workloads, such as TCP/HTTP/UDP proxy servers and static file servers.\n- The implementation of \"async\" disk I/O with libuv can result in massive overhead, although this is somewhat necessary on Linux and possibly unnecessary on other systems.\n- Other libraries, VMs, and runtimes, such as .NET, are also backed by libuv.\n- Python's asyncio event loop uses uvloop, which is based on libuv.",
    "hn_summary": "- Libuv now supports io_uring, a modern asynchronous I/O system for Linux.\n- Node.js v21 is anticipated to be very fast with the inclusion of io_uring support in Libuv.\n- Benchmarks have shown an 8x improvement in throughput, largely limited to file I/O bound workloads."
  },
  {
    "id": 36103801,
    "timestamp": 1685280439,
    "title": "Octopuses are building small \"cities\" off the coast of Australia (2017)",
    "url": "https://arstechnica.com/science/2017/09/why-octopuses-are-building-small-cities-off-the-coast-of-australia/",
    "hn_url": "http://news.ycombinator.com/item?id=36103801",
    "content": "URBAN PLANNING OVERLORDS \u2014Why octopuses are building small \u201ccities\u201d off the coast of AustraliaDivers found octopuses building structures out of shells, socializing with neighbors.ANNALEE NEWITZ - 9/27/2017, 12:53 PMA map of Octlantis, the second settlement of gloomy octopuses found off the coast of Australia. About 10 to 15 octopuses live here, in mounds of shells that have been constructed over generations.Scheel, et. al.Previous SlideNext SlideThe first time that divers discovered a \"city\" of octopuses off the coast of Australia, it seemed like a fluke. Octopuses are notoriously solitary animals. Divers found a small group of them in 2009 living together in burrows built around a piece of discarded metal, and they called it \"Octopolis.\" At the time, scientists believed it was a rarity, perhaps caused by human meddling in the environment. But, in 2016, divers found another community of octopuses living in dens built from discarded shells. And this time there was no hunk of metal that had disturbed the natural environment. Researchers now suspect octopuses have been building group habitats for a long time.Alaska Pacific University marine biologist David Scheel and his colleagues described the new discovery in the journal Marine and Freshwater Behavior and Physiology. They call it \"Octlantis,\" and, over several months of observation, they determined that the settlement is made up of roughly 10 to 15 gloomy octopuses (yes, that is actually the common name for Octopus tetricus). Octlantis is hardly a metropolis, though\u2014it's more like a tiny village of dens clustered around rocks, built up over several generations. These octopuses only live for about three years, so each generation is relatively short. But they leave behind mounds of discarded shells from their prey, as well as junk they've scavenged, like beer bottles and lead fishing lures. Over the years, octopuses pushed these mounds against the rocks, burrowed inside, and created dens next to each other.Using video footage from divers and camera traps, the scientists were able to observe the social behavior of city slicker octopuses. They saw at least three pairs of neighbors mate, and there were also a few near-miss \"attempted\" matings. Mating must have been particularly strange for the octopuses in close quarters, because their reproductive systems are optimized for long-distance fertilization between the solitary animals. Typically, octopuses mate when the male shoots a package of sperm called a spermatophore at the female through the water. The barbed package burrows into her skin and releases the sperm. No touching is required.AdvertisementThe researchers also got a lot of footage of what can only be called octopus evictions. One octopus would reach into a burrow and pull its occupant out, then move in. In one case, the evicting octopus followed its victim to a new burrow and yanked it out again. Sometimes these evictions led to physical fights between two octopuses, which are dangerous for a number of reasons. Often sharks will hover around Octlantis, just waiting for the octopuses to emerge. Fighting octopuses are distracted and therefore perfect prey.Building Octlantis might also put the octopuses in danger, since they have to come out of hiding to pile up shells and create burrows. According to the researchers, Octlantis residents also regularly engage in social behavior that humans have never witnessed between octopuses before. All these activities require them to leave their shelters and expose themselves to predators far more often than solitary octopuses do.Given the dangers of octopus city life, what would make these animals want to live together? Possibly for the same reason that other species cluster into groups. \"Congregations such as these probably occur wherever shelter is limited to small patches of habitat, and food is plentiful,\" Scheel told Quartz. The rocky outcropping and metal debris at the cores of Octlantis and Octopolis are rare examples of shelter-ready regions on a generally flat ocean floor. Plus, the shell mounds of the cities create perfect habitats for scallops and other octopus food. It's likely that octopuses gathered in these spots for the shelter and food, and their social behaviors evolved over time.Scheel and his colleagues add that other species of octopus have been observed living in clusters of dens. Perhaps octopus cities are more common than we believed. It's only now that so many people are diving with cameras that we are seeing the full range of octopus behavior. We have much more to learn about these mysterious, intelligent animals who sometimes choose to live alone and sometimes choose to live with neighbors.Listing image by Scheel et al.READER COMMENTS132WITHANNALEE NEWITZAnnalee Newitz is a former Senior Tech Culture Editor at Ars Technica. She is the author of Scatter, Adapt, and Remember: How Humans Will Survive a Mass Extinction, and her first novel, Autonomous, came out in September 2017.AdvertisementChannel Ars TechnicaBiomarkers, from diagnosis to treatmentTo find cancer before it strikes, look for the molecular cluesBiomarkers, from diagnosis to treatmentScott Manley Reacts To His Top 1000 YouTube CommentsTeach the Controversy: DowsingTeach the Conspiracy: GMOsHow Does That Work?: Rising sea levelsTeach the Controversy: Flat EarthersHow Does That Work?: Radiometric DatingHow Does That Work?: The Large Hadron ColliderWhat \"First Man\" tells you about Neil Armstrong, and what it doesn'tDelta V: The Burgeoning World of Small Rockets, Paul Allen's Huge Plane, and SpaceX Gets a Crucial Green-lightInside the International Space Station with Scott KellyChris Hadfield explains his 'Space Oddity' videoAstronaut Scott Kelly teaches orbital mechanics with Kerbal Space ProgramGo Inside the Aerodrome, Where the Future of Flight Takes ShapeThe soft future of roboticsSee the Gear the CDC's Disease Detectives Use in the FieldArs Technica interviews Peggy WhitsonThe Ice Age Secrets of White Sands National MonumentInSight Landing On MarsTalking Space and Robots with NASA's Terry FongMore videos\u2190 PREVIOUS STORYNEXT STORY \u2192Related Storiesby TaboolaSponsored LinksIncredible: Military Invention Turns Men 40+ Into BeastsTactical XPeople Born 1941-1979 - Are Due a Large SurpriseSuper Penny SaverLearn MoreWhy people are so passionate about Ka\u2019ChavaKachavaTry NowUnsold Senior Cruise Deals (Take A Look At The Prices)Senior Cruise DealsCalifornia: Say Bye To Expensive Solar If You Own A Home In These Zip CodesEnergyBillCruncherSan Francisco: 9% Interest Savings Account Is Turning HeadsWalletGeniusLearn MoreToday on Ars",
    "summary": "- Octopuses, known to be solitary animals, have been found building their own \"cities\" off the coast of Australia.\n- Researchers suspect octopuses have been building group habitats for a long time and have been previously undiscovered because they are usually solitary.\n- These octopuses gathered around the rocky outcroppings due to shelter and food, with their social behaviors evolving over time.",
    "hn_title": "Octopuses are building small \u201ccities\u201d off the coast of Australia (2017)",
    "original_title": "Octopuses are building small \u201ccities\u201d off the coast of Australia (2017)",
    "score": 234,
    "hn_content": "Octopuses are building small cities off the coast of Australia, which is a concept featured in the sci-fi book \"Children of Ruin\" by Adrian Tchaikovsky; the octopuses in the book illustrate a civilization and address what civilizations could look like with distinct kinds of intelligence from humans. Readers of the book convey their enjoyment and evoke discussion of other sci-fi books like \"Zones of Thought.\" The conversation ranges from the book's ability to explore the concept of sinentience, a moral obligation during consumption of octopus meat, personal opinions on moral objections against eating certain animals, and intelligence level as a\u00a0proxy for the ability to suffer.The comments section of an article discussing the moral implications of giving animals enhanced cognitive capabilities has inspired a variety of tangential conversations, including a debate about the implications of panpsychism and discussions of various works of science fiction. Octopuses feature heavily in many of the comments, with commenters reflecting on the creatures' mating habits and pondering the possibility of their enhanced cognitive abilities making them more or less social. Some commenters speculate that such modifications could lead to commercial applications, such as \"nub massages\" offered by specially bred octopuses.A \"city\" of octopuses is discovered off the coast of Greece. Octopuses are living in mounds of shells constructed over generations, suggesting social behaviour. Researchers speculate that, where shelter is limited, gatherings like this may occur and could have been going on for a long time. Evolutionary advantages for social behaviour in octopuses are unclear as prey is usually small. Still, octopuses team up to thwart predators. Octopuses are not making conscious decisions to live nearby each other. The octopus village in Greece contains 10 to 15 creatures. Previous octopus city discovered off the coast of Australia. The headline of this article can be seen as misleading, suggesting a new behaviour, while researchers believe that building group habitats may have been going on for some time. ",
    "hn_summary": "- Octopuses are building small cities off the coast of Australia and Greece.\n- Discussions on moral implications of enhancing animal cognitive capabilities.\n- Speculations on octopus intelligence, behavior, and potential commercial applications."
  },
  {
    "id": 36104533,
    "timestamp": 1685285810,
    "title": "The Gemini protocol seen by this HTTP client person",
    "url": "https://daniel.haxx.se/blog/2023/05/28/the-gemini-protocol-seen-by-this-http-client-person/",
    "hn_url": "http://news.ycombinator.com/item?id=36104533",
    "content": "NETWORKTHE GEMINI PROTOCOL SEEN BY THIS HTTP CLIENT PERSONMAY 28, 2023 DANIEL STENBERG LEAVE A COMMENTThere is again a pull-request submitted to the curl project to bring support for the Gemini protocol. It seems like a worthwhile effort that I support, even if it is also a lot of work involved and it might take some time before it reaches the state in which it can be merged. A previous attempt at doing this was abandoned a while ago.This renewed interest made me take a fresh tour through the current Gemini protocol spec and I decided to write down some observations for you. So here I am. These are comments based on my reading of the 0.16.1 version of the protocol spec. I have implemented Internet application protocols client side for some thirty years. I have not actually implemented the Gemini protocol.Motivations for existenceGemini is the result of a kind of a movement that tries to act against some developments they think are wrong on the current web. Gemini is not only a new wire protocol, but also features a new documentation format and more. They also say its not \u201cthe web\u201d at all but a new thing. As a sign of this, the protocol is designed by the pseudonymous \u201cSolderpunk\u201d \u2013 and the IETF or other suitable or capable organizations have not been involved \u2013 and it shows.Counter surveillanceGemini has no cookies, no negotiations, no authentication, no compression and basically no (other) headers either in a stated effort to prevent surveillance and tracking. It instead insists on using TLS client certificates (!) for keeping state between requests.A Gemini response from a server is just a two-digit response code, a single media type and the binary payload. Nothing else.Reduce complexityThey insist that thanks to reduced complexity it enables more implementations, both servers and clients, and that seems logical. The reduced complexity however also makes it less visually pleasing to users and by taking shortcuts in the protocol, it risks adding complexities elsewhere instead. Its quite similar to going back to GOPHER.Form over contentThis value judgement is repeated among Gemini fans. They think \u201cthe web\u201d favors form over content and they say Gemini intentionally is the opposite. It seems to be true because Gemini documents certainly are never visually very attractive. Like GOPHER.But of course, the protocol is also so simple that it lacks the power to do a lot of things you can otherwise do on the web.The specThe only protocol specification is a single fairly short page that documents the over-the-wire format mostly in plain English (undoubtedly featuring interpretation conflicts), includes the URL format specification (very briefly) and oddly enough also features the text/gemini media type: a new document format that is \u201ca kind of lightweight hypertext format, which takes inspiration from gophermaps and from Markdown\u201c.The spec says \u201cAlthough not finalised yet, further changes to the specification are likely to be relatively small.\u201d The protocol itself however has no version number or anything and there is no room for doing a Gemini v2 in a forward-compatible way. This way of a \u201cliving document\u201d seems to be popular these days, even if rather problematic for implementers.Gopher revivalThe Gemini protocol reeks of GOPHER and HTTP/0.9 vibes. Application protocol style anno mid 1990s with TLS on top. Designed to serve single small text documents from servers you have a relation to.Short-lived connectionsThe protocol enforces closing the connection after every response, forcibly making connection reuse impossible. This is terrible for performance if you ever want to get more than one resource off a server. I also presume (but there is no mention of this in the spec) that they discourage use of TLS session ids/tickets for subsequent transfers (since they can be used for tracking), making subsequent transfers even slower.We know from HTTP and a primary reason for the introduction of HTTP/1.1 back in 1997 that doing short-lived bursty TCP connections makes it almost impossible to reach high transfer speeds due to the slow-starts. Also, re-doing the TCP and TLS handshakes over and over could also be seen a plain energy waste.The main reason they went with this design seem to be to avoid having a way to signal the size of payloads or do some kind of \u201cchunked\u201d transfers. Easier to document and to implement: yes. But also slower and more wasteful.Serving an average HTML page using a number of linked resources/images over this protocol is going to be significantly slower than with HTTP/1.1 or later. Especially for servers far away. My guess is that people will not serve \u201cnormal\u201d HTML content over this protocol.Gemini only exists done over TLS. There is no clear text version.GET-onlyThere are no other methods or ways to send data to the server besides the query component of the URL. There are no POST or PUT equivalents. There is basically only a GET method. In fact, there is no method at all but it is implied to be \u201cGET\u201d.The request is also size-limited to a 1024 byte URL so even using the query method, a Gemini client cannot send much data to a server. More on the URL further down.QueryThere is a mechanism for a server to send back a single-line prompt asking for \u201ctext input\u201d which a client then can pass to it in the URL query component in a follow-up request. But there is no extra meta data or syntax, just a single line text prompt (no longer than 1024 bytes) and free form \u201ctext\u201d sent back.There is nothing written about how a client should deal with the existing query part in this situation. Like if you want to send a query and answer the prompt. Or how to deal with the fact that the entire URL, including the now added query part, still needs to fit within the URL size limit.Better use a short host name and a short path name to be able to send as much data as possible.TOFUthe strongly RECOMMENDED approach is to implement a lightweight \u201cTOFU\u201d certificate-pinning system which treats self-signed certificates as first- class citizens.(From the Gemini protocol spec 0.16.1 section 4.2)Trust on first use (TOFU) as a concept works fairly well when you interface a limited set of servers with which you have some relationship. Therefore it often works fine for SSH for example. (I say \u201cfine\u201d for even with ssh, people often have the habit of just saying yes and accepting changed keys even when they perhaps should not.)There are multiple problems with doing TOFU for a client/server document browsing system like Gemini.A challenge is of course that on the first visit a client cannot spot an impostor, and neither can it when the server updates its certificates down the line. Maybe an attacker did it? It trains users on just saying \u201cyes\u201d when asked if they should trust it. Since you as a user might not have a clue about how runs that particular server or whatever the reason is why the certificate changes.The concept of storing certificates to compare against later is a scaling challenge in multiple dimensions:Certificates need to be stored for a long time (years?)Each host name + port number combination has its own certificate. In a world that goes beyond thousands of Gemini hosts, this becomes a challenge for clients to deal with in a convenient (and fast) manner.Presumably each user on a system has its own certificate store. What user A trusts, user B does not necessarily have to trust.Does each Gemini client keep its own certificate store? Do they share? Who can update? How do they update the store? What\u2019s the file format? A common db somehow?When storing the certificates, you might also want to do like modern SSH does: not store the host names in cleartext as it is a rather big privacy leak showing exactly which servers you have visited.I strongly suspect that many existing Gemini clients avoid this huge mess by simply not verifying the server certificates at all or by just storing the certificates temporarily in memory.You can opt to store a hash or fingerprint of the certificate instead of the whole one, but that does not change things much.I think insisting on TOFU is one of Gemini\u2019s weakest links and I cannot see how this system can ever scale to a larger audience or even just many servers. I foresee that they need to accept Certificate Authorities or use DANE in a future.Gemini ProxyingBy insisting on passing on the entire URL in the requests, it is primarily a way to solve name based virtual hosting, but it is also easy for a Gemini server to act as a proxy for other servers. On purpose. And maybe I should write \u201ceasy\u201d.Since Gemini is (supposed to be) end-to-end TLS, proxying requests to another server is not actually possible while also maintaining security. The proxy would have to for example respond with the certificate retrieved from the remote server (in addition to its own) but the spec mentions nothing of this so we can guess existing clients and proxies don\u2019t do it. I think this can be fixed by just adjusting the spec. But would add some rather kludgy complexity for a maybe a not too exciting feature.Proxying to gopher:// URLs should be possible with the existing wording because there is no TLS to the server end. It could also proxy http:// URLs too but risk having to download the entire thing first before it can send the response.URLsThe Gemini URL scheme is explained in 138 words, which is of course very terse and assumes quite a lot. It includes \u201cThis scheme is syntactically compatible with the generic URI syntax defined in RFC 3986\u201c.The spec then goes on to explain that the URL needs be UTF-8 encoded when sent over the wire, which I find peculiar because a normal RFC 3986 URL is just a set of plain octets. A Gemini client thus needs to know the charset that was used for or to assume for the original URL in order to convert it to UTF-8.Example: if there is a %C5 in the URL and the charset was ISO-8859-1. That means the octet is a LATIN CAPITAL LETTER A WITH RING ABOVE. The UTF-8 version of said character is the two-byte sequence 0xC3 0x85. But if the original charset instead was ISO-8859-6, the same %C5 octet means ARABIC LETTER ALEF WITH HAMZA BELOW, encoded as 0xD8 0xA5 in UTF-8.To me this does not rhyme well with reduced complexity. This conversion alone will cause challenges when done in curl because applications pass an RFC 3986 URL to the library and it does not currently have enough information on how to convert that to UTF-8. Not to mention that libcurl completely lacks UTF-8 conversion functions.This makes me suspect that the intention is probably that only the host name in the URL should be UTF-8 encoded for IDN reasons and the rest should be left as-is? The spec could use a few more words to explain this.One of the Gemini clients that I checked out to see how they do this, in order to better understand the spec, even use the punycode version of the host name quoting \u201cPending possible Gemini spec change\u201d. What is left to UTF-8 then? That client did not UTF-8 encode anything of the URL, which adds to my suspicion that people don\u2019t actually follow this spec detail but rather just interoperate\u2026The UTF-8 converted version of the URL must not be longer than 1024 bytes when included in a Gemini request.The fact that the URL size limit is for the UTF-8 encoded version of the URL makes it hard to error out early because the source version of the URL might be shorter than 1024 bytes only to have it grow past the size limit in the encoding phase.OriginThe document is carelessly thinking \u201chost name\u201d is a good authority boundary to TLS client certificates, totally ignoring the fact that \u201cthe web\u201d learned this lesson long time ago. It needs to restrict it to the host name plus port number. Not doing that opens up Gemini for rather bad security flaws. This can be fixed by improving the spec.Media typeThe text/gemini media type should simply be moved out the protocol spec and be put elsewhere. It documents content that may or may not be transferred over Gemini. Similarly, we don\u2019t document HTML in the HTTP spec.Misunderstandings?I am fairly sure that once I press publish on this blog post, some people will insist that I have misunderstood parts or most of the protocol spec. I think that is entirely plausible and kind of my point: the spec is written in such an open-ended way that it will not avoid this. We basically cannot implement this protocol by only reading the spec.Future?It is impossible to tell if this will fly for real or not. This is not a protocol designed for the masses to replace anything at high volumes. That is of course totally fine and it can still serve its community perfectly fine. There seems to be interest enough to keep the protocol and ecosystem alive for the moment at least. Possibly for a long time into the future as well.What I would changeAs I believe you might have picked up by now, I am not a big fan of this protocol but I still believe it can work and serve its community. If anyone would ask me, here are a few things I would consider changing in order to take it up a few notches.Split the spec into three separate ones: protocol, URL syntax, media type. Expand the protocol parts with more exact syntax descriptions and examples to supplement the English.Clarify the client certificate use to be origin based, not host name.Drop the TOFU idea, it makes for a too weak security story that does not scale and introduces massive complexities for clients.Clarify the UTF-8 encoding requirement for URLs. It is confusing and possibly bringing in a lot of complexity. Simplify?Clarify how proxying is actually supposed to work in regards to TLS and secure connections. Maybe drop the proxy idea completely to keep the simplicity.Consider a way to re-use connections, even if that means introducing some kind of \u201cchunks\u201d HTTP-style.DiscussionHacker newsNETWORKPROTOCOLS",
    "summary": "- Gemini is a new wire protocol and documentation format emerging from a movement against developments considered wrong on the current web.\n- Gemini has been designed to reduce surveillance and tracking by eliminating cookies, negotiations, authentication, and compression, using instead TLS client certificates for keeping state between requests.\n- The protocol is minimalist, not visually attractive to users, and lacks the power to accomplish many things possible on the current web, but is expected to allow more server and client implementations.",
    "hn_title": "The Gemini protocol seen by this HTTP client person",
    "original_title": "The Gemini protocol seen by this HTTP client person",
    "score": 216,
    "hn_content": "The Gemini protocol has been discussed on Hacker News, with some users criticizing its loose and vague specification. The Gemtext format is a minimal markup format for text documents, allowing the client to render the text document as they choose. A proponent of the Gemini protocol defends Gemtext, saying that its focus on semantically indicating plaintext, links, and headers rather than offering the author a way to style documents is intentional. The loose specification is seen as a significant hurdle for any competitors to the HTTP world and criticism of the technical choices is fair game. The Gemini community should take the input of long-time spec user and writer Daniel Stenberg seriously. Standards such as UTF-8 and RFC-3986 were debated, but no consensus was reached.Gemini is a new protocol for \"a small web with a focus on privacy, performance, and ease of implementation.\" It's an alternative to HTML that only supports basic text formats and simple design. The protocol is meant to offer an alternative to the modern web, which is seen as too complicated and centralized. Gemini uses a simple connection model, where users can connect to servers using a client that only supports a subset of features. The use of TLS and mandatory secure connections does limit the adoption of Gemini by hobbyists and limits the number of devices that support it. Gemini blocks features such as POST that enable interactivity within a page, focusing on simple, static pages. Markdown is also discussed as an alternative text format.Gemini, a lightweight protocol that originated from the Gopher protocol, has recently gained traction among users who prefer its simplicity over HTTP. Some users find it better than Markdown while others criticize it for being subtly similar yet incompatible. Gemini has some unique features, such as the use of client-side certificates as unforgeable session identifiers and no automatic requests to external systems. The protocol also offers some challenges, such as short-lived TLS connections, ambiguous URLs, and TOFU (Trust on First Use) concerns. While Gemini isn't intended to replace HTTP, it is gaining popularity among hobbyists who enjoy playing with a protocol that doesn't have to deal with ads and tracking.",
    "hn_summary": "- Gemini protocol is a new minimal markup format for text documents, aimed to offer an alternative to the complicated and centralized modern web.\n- The protocol focuses on privacy, performance, and ease of implementation, and replaces HTML with basic text-format supporting simple design.\n- The use of TLS and mandatory secure connections limits Gemini's adoption by hobbyists and devices, and features like POST are blocked, but Gemini is gaining popularity among hobbyists who enjoy playing with a protocol that doesn't have to deal with ads and tracking."
  },
  {
    "id": 36100994,
    "timestamp": 1685246336,
    "title": "Private spies hired by FBI & corporations infiltrate Discord, Reddit, WhatsApp",
    "url": "https://www.leefang.com/p/private-spies-hired-by-the-fbi-and",
    "hn_url": "http://news.ycombinator.com/item?id=36100994",
    "content": "Discover more from Lee FangInvestigations and observations about the public interest.Over 18,000 subscribersSubscribeContinue readingSign inPrivate Spies Hired by the FBI and Corporate Firms Infiltrate Discord, Reddit, WhatsAppLeading \u201cthreat intelligence\u201d firms are creating fake online personas to gain access to every corner of the web.LEE FANGMAY 10, 202329324ShareThat anonymous internet persona with an anime cartoon avatar in your Discord chat might actually be a contractor sent to spy on you. Enter the world of \u201cthreat intelligence.\u201d It\u2019s the term of art for a growing set of surveillance and security firms that create fake online personas to infiltrate and scrape data from private corners of the internet. The industry provides corporate and government clients with insight into conversations on private, invite-only Discord chats, WhatsApp groups, Reddit forums, and dark web message boards to help those powerful customers keep tabs on a variety of potential threats, from political hacktivists to the illegal markets that traffic in stolen passwords and intellectual property. I spoke to representatives of ZeroFox, DarkOwl, Searchlight Cyber, Recorded Future, CyberInt, Flashpoint, and other threat intelligence firms at RSA Conference 2023, an annual convention for cyber security professionals from across the world that is held in San Francisco. \u201cWe have personnel who already have established credentials in these environments so that we're able to go in and look for things,\u201d said A.J. Nash, the vice president of intelligence at ZeroFox, a leader in the threat intelligence industry that is based in Baltimore, Maryland.Nash confirmed that the company is active in Discord, an audio and video group chat app popular among young video-game players.\"We can do the same thing with Discord,\" Nash added. \"It's hard to infiltrate a small group because everybody knows everybody. But some of the groups that are larger, yeah, we have the ability to get into some opportunities.\"An executive at DarkOwl, a Denver-based threat intelligence firm that provides clients with a special database of information from its snooping, explained that the company creates fake identities and usernames to gain admission to many of the private platforms and chatrooms that it uses to collect information. \"What we do, we work with personas,\" said Magnus Sv\u00e4rd, a director at DarkOwl. \u201cWe've done this at scale since 2018 so there's some trust in the personas that we've built up, whether they're on Discord, on Telegram, or wherever.\u201dSearchlight Cyber, a British firm that specializes in dark web message boards, similarly uses internet personas to gain access to private online forums and chat platforms.\"We actually get invited to those. We have human actors and get invited. We obviously don't identify as Searchlight on them,\u201d said Peter Ritter, a sales manager at the firm. \u201cThen we see what's going on there.\"CyberInt, an Israeli threat intelligence firm, advertises how its team of analysts uses fake personas to thwart hackers, retail fraud, hacktivists, and other cyber security threats.In one video posted by CyberInt, an analyst for the firm discusses her approach to go into online communities and \u201cdetect threat actors when they are young or starting out at 14 or 15, that's when I start observing and documenting their malicious activities.\u201d At that age, they are \u201cmore careless and open,\u201d the analyst said.In another CyberInt marketing video, the firm walks a potential client through the process of using a fake online alias to contact a hacker over the messaging app Telegram and \u201cget as much information as we can.\u201dDanny Miller, a director of marketing at CyberInt, confirmed to me that his firm has analysts infiltrating Discord servers, among other platforms.Many of these firms maintain close ties to law enforcement and government agencies. Several are currently under contract with the Federal Bureau of Investigation or military intelligence.The role of ZeroFox\u2019s collaboration with the FBI, in particular, came to light in documents unearthed by the special House committee investigating the U.S. Capitol riot on Jan. 6, 2021. In a Jan. 3, 2021, email exchange between FBI officials preparing for the right-wing protests slated to occur, one official noted that the FBI team charged with monitoring groups due to assemble at the Capitol had just signed on with ZeroFox days earlier. The official said that the agency was still learning how to use the software to monitor social media posts from political extremists headed for Washington on Jan. 6, 2021.Subscribe\"[O]ur social media abilities might be slightly degraded during this [sic] events as we are getting use [sic] to this new tool but we're gonna make it work,\" the FBI official wrote.Having already gained access to traditional social media platforms, the federal government now has its sights set on private online communities where terrorist groups, radical political activists, and hackers can operate with relative freedom.The recent disclosure of classified Pentagon documents, shared on an invitation-only chatroom on Discord, is fueling a new push for access to one of the last secretive corners of the internet. Air National Guardsman Jack Teixeira allegedly posted the classified documents in his group chat for months before authorities became aware of the leaks.Following Teixeira\u2019s arrest in mid-April, the federal government has begun calling for increased surveillance of Discord and similar platforms. The Biden administration is currently \u201clooking at expanding how it monitors social media sites and chatrooms after U.S. intelligence agencies failed to spot classified Pentagon documents circulating online for weeks,\u201d NBC News reported last month. A congressional aide told the news outlet that senior members of President Joe Biden\u2019s team are looking at ways to \u201cscrub platforms like Discord in search of relevant material to avoid a similar leak in the future.\u201dShould the federal government proceed with its plans, the threat intelligence companies present at RSA Conference 2023 stand to play a lucrative role in supporting those efforts. A representative of Recorded Future initially agreed to an interview with me, but later backed away over concerns that any discussion of the leak of classified documents on Discord would be too sensitive for the company. Federal contracts show that over the last year, Recorded Future has performed work for a host of federal government clients, including the U.S. Secret Service, Immigrations and Customs Enforcement, and U.S. Cyber Command.Flashpoint, which openly advertises that it monitors activist groups and continually mines data from platforms such as Reddit and Discord, signed a contract with the FBI last year.At the RSA Conference, a representative of Flashpoint said that his firm engages in a variety of tools, but generally does not \u201cviolate the terms of service\u201d when accessing chatrooms and other forums.\u201cThere is this tension between platforms being a safe space, and also not being able to harbor things that are being put out, you know, that are intellectual property, that are national security threats,\u201d said Matthew Howell, vice president of product at Flashpoint.Watchdog groups are raising concerns that the push for more surveillance of chatrooms, including gaming communities, will violate civil liberties. Government scans of private communications risks violating constitutional rights against unreasonable search and seizure.\"There's a disturbing trend toward government agencies contracting out surveillance, paying the likes of data brokers to spy on people even when agents wouldn't be allowed to,\u201d said Sean Vitka, senior policy counsel of Demand Progress.\u201cIt's becoming frighteningly apparent that a similar privatized spying cottage industry targeting private chat rooms also exists,\u201d Vitka added.Nash, the vice president of ZeroFox, said that every action at his firm, which signed a contract with the U.S. Navy Criminal Investigative Service in January, is vetted by a legal team.\"We're not violating people's civil rights or civil liberties. We're not working as a conduit to work around the Fourth Amendment,\u201d said Nash. \u201cWe wouldn't do that.\u201dDarkOwl President Russel Cohen provided a similar assurance.\"We have algorithms about what information we find interesting. So if somebody is talking about guns, that would be something we find interesting,\u201d Cohen said. \u201cWe're not looking for things that are not commercially interesting, such as pornography.\"Cohen said that on occasion, his firm has alerted government authorities when they come across material that suggests a threat to security.Determining whether something is a \u201cthreat\u201d to national security is inherently subjective. And historically, the federal government has committed its worst infringements on personal freedom in the name of policing these vaguely defined threats. It is especially hard to assess the lawfulness of these new threat intelligence firms\u2019 surveillance practices, because the industry is shrouded in secrecy.On the rare occasions when the public has gained greater insight into the activities of these companies, the revelations have not been reassuring. The veil was briefly lifted in 2011, when a set of threat intelligence firms plotted to disrupt the hacktivist network LulzSec and attempt to discredit journalist Glenn Greenwald. The contractors, led by the now defunct firm HBGary, devised a plan to infiltrate left-leaning organizations using fake online identities, in a bid to win lucrative deals defending corporations facing public scrutiny.The plan was eventually discovered and thwarted after hackers dumped emails from HBGary onto the web, embarrassing its partner firms, including Berico Technologies and Palantir.SubscribeU.S. intelligence agencies also have a record of coming up empty after infiltrating private, online spaces, raising the possibility that the security justifications for the current incursions are weaker than the agencies are claiming. The documents leaked by former National Security Agency contractor Edward Snowden revealed that FBI and CIA spies had created fake personas to hunt for potential terror plots discussed in online games, such as World of Warcraft and Second Life, as well as on platforms like Xbox Live. Those initiatives fizzled after the intelligence agencies found little to no evidence of terror communications.But the federal government and its allies in academia and the media are pushing full-speed ahead for expanded surveillance of platforms like Discord that could mirror the now-defunct programs exposed by Snowden.Ren\u00e9e DiResta, a research manager at the Stanford Internet Observatory, who has worked alongside Department of Homeland Security efforts to police online speech, has seized upon the so-called Discord Leaks to call for more monitoring of chat rooms. DiResta recently co-authored an essay in Foreign Policy to suggest that online gamers and chat rooms have \"eclipsed spies as an intelligence threat\":Even where ideological commitments have motivated leakers, internet culture has often played a major role. U.S. Army intelligence analyst Chelsea Manning\u2019s involvement with WikiLeaks began when she started monitoring\u2014and then actively participating in\u2014the forum\u2019s chat channel. Her decision to leak diplomatic cables was initially motivated by debates about Icelandic politics on the WikiLeaks channel. When one looks at Manning\u2019s conversations with WikiLeaks founder Julian Assange and others on the channel, they read very much like someone trying to connect with and impress her new internet friends; later, it was a similar desire to connect online that led to her arrest. Edward Snowden, too, attributed his decision to leak documents about National Security Agency surveillance programs to his concerns that they undermined the values he cherished as an avid denizen of early internet forums and chatrooms: anonymity, self-expression, and the right to reinvent oneself.The conclusion that online community forums are somehow a prerequisite to radicalization suggests a sweeping view of potential government threats that encompasses almost anyone born after 1980 with access to the internet. DiResta, an influential voice in cyber security circles, is far from alone. A variety of journalists have urged a crackdown on private messaging platforms. \u201cThe FBI and other law enforcement organizations are not spending enough time trolling the edges of the web like Discord and Telegram,\u201d veteran reporter Lucian Truscott IV declared in Salon, a progressive news outlet. A news article in Time took the validity of national-security officials\u2019 concerns about Discord as a given. \u201cThe leak has also put a spotlight on the lack of law-enforcement visibility into platforms like Discord,\u201d wrote Vera Bergengruen and W.J. Hennigan.The growing number of calls for greater surveillance worries Vitka of Demand Progress.\u201cIf this follows the course of previous surveillance practices, it means we are headed toward a digital resurgence of neighbors spying on neighbors,\u201d said Vitka. \u201cMeanwhile, we have no way of knowing how many private chat rooms are already infiltrated or to whom those spies are selling information, which will ultimately lead to a severe erosion of trust online.\" Image via Boris Zhitkov/Getty Images.Subscribe to Lee FangThousands of paid subscribersInvestigations and observations about the public interest.Subscribe293 Likes\u00b720 Restacks29324Share",
    "summary": "- Surveillance firms known as \"threat intelligence\" are creating fake online personas to gain access to private corners of the web, including Discord, Reddit, WhatsApp, and dark web message boards.\n- These firms provide corporate and government clients with insight into private conversations to help them keep tabs on potential threats, such as political hacktivists and those involved in illegal markets.\n- Many of these firms have close ties to law enforcement and government agencies, and there are concerns that the push for more surveillance of private online communities risks violating civil liberties.",
    "hn_title": "Private spies hired by FBI and corporations infiltrate Discord, Reddit, WhatsApp",
    "original_title": "Private spies hired by FBI and corporations infiltrate Discord, Reddit, WhatsApp",
    "score": 215,
    "hn_content": "Private spy firms hired by the FBI and corporations have been using fake personas to infiltrate online platforms like Discord, Reddit, WhatsApp, and gaming sites, according to an investigation by journalist Lee Fang. The contractors extract and sell to clients a range of information that includes social media posts, data associated with online payment tools, and geolocation tracking. Activists and civil liberties advocates call for more transparency and oversight, concerned that this private industry's power and activities are not subject to public scrutiny. The public-private partnership raises concerns about an extension of law enforcement without the appropriate legal oversight and the potential for these entities to undermine constitutional protections.Various comments discuss the topic of intelligence gathering by both private companies and government agencies through online forums, dating and Muslim prayer apps, and other means. The legality and ethics of these practices are debated, with some pointing out that the information obtained can be used for nefarious purposes. However, others argue that it is a routine practice for intelligence work and that civilians must take steps to protect their personal information. The use of contractors by government agencies is also questioned for plausible deniability.Sorry, this text is not providing any meaningful content for an article summary.",
    "hn_summary": "- Private spy firms hired by both the FBI and corporations have been infiltrating online platforms with fake personas to extract and sell a range of information that includes social media posts, data associated with online payment tools, and geolocation tracking.\n- Activists and civil liberties advocates call for more transparency and oversight, concerned that this private industry's power and activities is not subject to public scrutiny.\n- The use of private contractors by government agencies raises concerns about an extension of law enforcement without the appropriate legal oversight and the potential for these entities to undermine constitutional protections."
  }
]
