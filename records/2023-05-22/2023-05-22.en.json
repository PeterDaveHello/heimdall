[
  {
    "id": 36018621,
    "timestamp": 1684652399,
    "title": "Writing Python like it's Rust",
    "url": "https://kobzol.github.io/rust/python/2023/05/20/writing-python-like-its-rust.html",
    "hn_url": "http://news.ycombinator.com/item?id=36018621",
    "content": "A software engineer explains how his experience programming in Rust has changed the way he designs programs in other languages, particularly Python. He explains that using Rust's strict type system has made him more conscious of designing APIs that are hard to misuse and thus prevent bugs. He shows examples of how he has adopted concepts from Rust in his Python programs, including using type hints, dataclasses, algebraic data types, newtypes, and construction functions. By explicitly defining types, his programs have become easier to understand and change, and he has gained productivity benefits from autocompletion and the ability to catch errors that are otherwise hard to spot.- The use of type systems to encode invariants that would otherwise be tracked at runtime is a powerful concept in programming.\n- In Python and other languages, classes that track object invariants at runtime can lead to messy code and missed edge cases.\n- Separate types can be used to model mutually exclusive states of an object, such as connected and authenticated states for a Client class.\n- Separating types for normalized and denormalized bounding boxes can avoid mistakes in computer vision programming.\n- Rust provides a very nice interface for mutexes and locks, but Python can use context managers to ensure safety when accessing protected data.\n- The design of Python's mutex interface can be made safer with a little bit of effort.",
    "summary": "- Programming in Rust has taught a software engineer to create more robust APIs and avoid common bugs while writing Python code.\n- Adopting concepts from Rust, such as type hints and dataclasses, has resulted in more maintainable and understandable code, while also increasing productivity.\n- Explicitly defining types in Python can lead to benefits such as autocompletion and catching errors that may otherwise be missed.",
    "hn_title": "Writing Python like it's Rust",
    "original_title": "Writing Python like it's Rust",
    "score": 467,
    "hn_content": "A post on Hacker News discusses Python's versatility and optional typing. Some commenters note that Python can be used for initial experimentation but can be challenging during industrialization. Static typing has benefits, but can hinder iteration. Strong, static typing provides a clearer sense of potential breakages during refactoring, but it can be difficult to predict what will break early on. Some prefer using static typing for rapid design iteration. Dynamically typed languages allow the trying of multiple ideas in parallel. Many Python codebases tend to use antagonistic ideas/paradigms that hamper productivity. The commenters highlight that Python offers numerous benefits, and static typing can be made to work with the language.Many Python programmers fail to recognize that using Python should be perceived as more of an expectation than a liberty, likely due to the broader adoption of the language. The ability to industrialize each module as design details emerge is a favorite aspect of Python amongst developers. However, this flexibility does not always result in proper reworking of codebases for industrial-level quality. Scrum is criticized for rushing work towards the end of a sprint, resulting in the often-sloppy work. While type hints are viewed by some as more of a quality of life feature than a code quality feature, they absolutely help identify potential errors in descriptions or following attempts, enhancing code quality. Python's readability is one of the significant factors distinguishing it from other coding languages, and one of its most remarkable features.Python coding styles fall into two categories: class hierarchies that nobody understands, or functional and iterator spaghetti written by academics. Some argue that classes are mostly not necessary in Python, and that code can be perfectly correct and readable without them. The typing system is also considered a weak point of the language and can limit its use in some cases. Python is not a panacea; some problems require performance or safety guarantees that Python cannot meet, so it must be rewritten in another language. Python's strengths lie in it being a language for people whose job isn't primarily to write software, with practical features like Ordered Dictionaries. Python has poor support for compiled extensions. TypeScript doesn't have the same scientific ecosystem as Python, and there is no equivalent to Django in the JS world. TypeScript with Deno is better than Python for one-off scripts.The comments discuss the use of Python as a programming language, with some users expressing frustration with aspects of the language, such as its type system and syntax. Some users suggest alternative languages like Go and Nim. However, others argue that Python is still a valuable language with a rich ecosystem and testing support. Overall, the discussion raises questions about the trade-offs between simplicity and versatility in programming languages. There is no particular new release or development being discussed in this post.Users of Go modules have discussed their experiences with the dependency management system. Some find it easy to use, while others have difficulty setting up a private proxy and often encounter issues with dependencies of dependencies. Users recommend that those interested in programming explore Rust as an alternative that offers better support for typing. Others suggest using Typescript instead, while some recommend C# and .NET for its ORM and LINQ. However, some maintain that Python remains their favorite language, as it is versatile and powerful. The article concludes with the reminder that users should consider their team's knowledge and willingness to learn, as well as the maintenance requirements of a language before choosing it.The conversation on HackerNews revolves around programming languages and tools, including Python, Rust, Java, and C#. Some users suggest that if someone needs everything fully-typed, they should switch to Java or C#, not Rust, which is not necessary for memory semantics. Others argue that they never had any memory management issues with Rust, and memory management is the point of Rust. They also debate the pros and cons of garbage collection. Some users discuss the best tools for type checking in Python, including Pyright, MyPy, Pydantic, and Pylance, and their relative performance and merits. A few users mention refactoring and complexity, and state the importance of type hints and object-oriented design patterns in larger code bases to avoid hard-to-spot bugs.Using type hints in Python significantly reduces cognitive burden and potential development errors. TypedDict is a great fit for use cases. Developers can describe the sequence of their programs explicitly through types. Named tuples have both field names and numeric indexes, and using them instead of tuples or dictionaries is not ideal. Statically-typed languages are preferred over dynamically-typed ones for large codebases. Writing Rust-like Python is possible, but Rust tooling is still superior. Type hinting in Python improves editor integration. Using class methods instead of static methods when creating constructors is more common. Libraries may not have type stubs available.This post discusses various opinions regarding Python's type hinting, static methods, and readability. Some argue that type hints can enhance readability and catch errors, but others point out that it requires maintenance and may not always be enforced. There is a mention of writing Python code with Rust-like discipline to transpile it into Rust. The importance of good variable naming is mentioned, and there is a discussion of the trade-offs between aesthetics, maintainability, and extensibility in Python coding. Some argue that too much type information can be detrimental to code documentation and readability, while others believe it is important for code quality at scale.- Strict typing is important and naming variables properly helps colleagues and future coders\n- Good databases store data per column, with each batch being a dictionary of string to list of T\n- The article mentions connection to the DB rather than the data\n- YC is accepting applications for Summer 2023",
    "hn_summary": "- Python's versatility and optional typing can hinder industrialization but provide flexibility for experimentation and rapid design iteration.\n- Python's readability distinguishes it from other languages and its typing system is a weak point, but can still be made to work with the language.\n- The discussion raises questions about the trade-offs between simplicity and versatility in programming languages."
  },
  {
    "id": 36021197,
    "timestamp": 1684679204,
    "title": "The end of the accounting search",
    "url": "https://lwn.net/Articles/925782/",
    "hn_url": "http://news.ycombinator.com/item?id=36021197",
    "content": "LWN.net has stopped using the QuickBooks accounting system, which was forced to update with little added functionality, prone to crashes, arbitrary limits, and discontinuation of previous desktop versions. Instead, it has moved to GnuCash, which has a graphic interface, adaptable to most needs, and\u00a0basic accounting operations are simple. Although GnuCash is not perfect, it meets all the requirements listed in a 2017 restart, including ease of importing and exporting data, simplicity of accounting operations, suited to LWN's operations, and a healthy development community. Some aspects of GnuCash are not quite finished, such as its report-generation mechanism. One of the significant losses is the ability to export data directly into the proprietary tax-preparation system. The scripts used for migration from QuickBooks are available on GitHub.Many universities teach Java as a first language, which CS students can stick to, despite the rising popularity of Python. The author thinks that learning Java alone may limit graduates' potential opportunities, and suggests some alternatives like Rust, Haskell, Lisp, and Prolog. However, not all courses have the resources to teach programming, such as Medicine. In the comments section, there are personal anecdotes about programming language classes the authors have taken, such as using Python for CS 1, C++ for CS 2, Prolog, Java, Scheme, and others. One commenter praises Lisp and Scheme but admits that the parenthetical notation is not for everyone, while another recommends the plain text accountancy tools movement.Experts discuss the use of text-format accounting for easier manipulation of accounts and reduced vendor lock-in. Some accountants point out that a well-designed system could be manipulated too easily. The use of cheques for payment and their continued relevance in some countries is also debated. In Germany, cheques are almost never used, whereas some people in the US still use them, particularly for transactions between individuals.- Banks have two options when dealing with cheques: delay posting for 6 months or take the risk of a bounced cheque.\n- Banks are promoting electronic payments as a third option, leading to a social problem for those who struggle with the new technology. \n- Asynchronous cheque payments add to the fraud risk, with a delay of up to 180 days for detection.\n- The burden of responsibility for fraud falls on the payee, with bounced cheques being the only way to move risk around. \n- Quarterly statements are used by disabled individuals who require assistance with account reconciliation. \n- Banking regulations dictate that the payment has been made by cheque and only fraudulent cheques can be blocked. \n- Fraud checks for electronic payments can be done earlier, allowing banks to move risk around to the payer.- Cheques are still popular among businesses due to workflow and accounting reasons, despite advancements in QR codes, mobile payments, credit cards, and stored wallets.\n- In Singapore, 99% broadband penetration and instant transfers exist, but businesses still prefer cheques due to the manual process involved.\n- The cheque issuance process in small owner-operated firms usually involves the Accountant preparing payment vouchers, the Owner signing them, and the despatch being left to the Accountant.\n- In some countries, SEPA Instant has become widely adopted, but in other countries, stagnant banking markets have caused a slow adoption rate.\n- ACH transfers in the US require setup, but checks are still used for one-off or infrequent payments.\n- US routing and account numbers can be misused if they fall into the wrong hands, which highlights the importance of minimizing their distribution.\n- The end goal for banks is to reduce fraud risk and other risks to as low as possible, which is why cheques are not compatible with this goal.",
    "summary": "- LWN.net has shifted from QuickBooks to GnuCash for accounting, which offers a graphic interface, adaptable features, and meets all the necessary requirements.\n- Learning only Java in computer science courses may limit graduates' potential opportunities, and exploring alternatives such as Rust, Haskell, Lisp, and Prolog can be beneficial.\n- Experts discuss the use of text-format accounting, the relevance of cheques in different countries and their risks, and the goal of banks to minimize fraud and other risks.",
    "hn_title": "The end of the accounting search",
    "original_title": "The end of the accounting search",
    "score": 344,
    "hn_content": "Users of QuickBooks online voice concerns over Intuit's decision-making which have forced simplistic updates and a migration away from the desktop version.\nThe shift has forced customers to pay higher rates, choose features from different subscriptions and endure slow, clunky experiences.\nIntuit owns a growing portfolio of software which includes Mailchimp and it is argued that users have little influence over the redesign and updates.\nChanges have felt targeted more towards Intuit's convenience than the user's, leading users to consider moving to alternatives and creating uncertain futures for accountants that rely on the software as part of their livelihood.The comment section on Hacker News discusses the changes in Microsoft Excel and other software tools like LibreOffice. Some users express dislike for the ribbon interface and prefer older versions of software. Others discuss the role of designers in pushing for changes, while some discuss their experiences as accountants and find aspects of their work creative while also acknowledging limitations imposed by rigid tools and regulations. There is speculation that Intuit may phase out their desktop version of Quickbooks in favor of their online platform, which may lead to changes in features like accounts receivable and payments through third-party vendors.A comment thread on the website Hacker News discusses complaints about accounting software company Intuit and its pricing and customer support practices. Users complain of slow, unintuitive software from QuickBooks, and dislike the high prices and forced subscriptions to QB's cloud-based service. Users also mention other accounting software products like GnuCash, Xero, and FreshBooks, but note that accountants are often only familiar with QB and are hesitant to switch. Some users discuss the benefits of terminal-driven accounting software, but others argue that it is harder to develop UX for such software. A user also posts a GitHub link to scripts and documentation for migrating from QB to GnuCash.Users discuss various accounting software options, including GnuCash, QuickBooks, Xero, Manager.io, ERPnext, and Odoo. People mention reasons for sticking to legacy software, such as industry momentum and getting recommendations from accountants, as well as issues with current options, such as regulatory barriers and difficulty in use. Users mention various features they like, including concurrent programming support in GnuCash, REST API for transaction query and archiving in Xero, Hubdoc for automatic invoice processing in Xero, and version control via text format in Beancount. Overall, users express frustration with the lack of customization and ease of use in existing options and desire alternatives that are simple, affordable, and easily adaptable to changing business needs.In this discussion on HN, users talk about the various accounting software they use for their businesses, including QuickBooks, GnuCash, Firefly III, Ledger, and others. Some users mention custom scripts they had to write to import data into GnuCash. Others discuss the benefits and limitations of plaintext accounting and using open-source software. One user also mentions a new AGPL V3.0 licensed accounting software called GnuKhata aimed at small businesses and professionals. Many users express satisfaction with the accounting software they use, but opinions on the best software vary.",
    "hn_summary": "- QuickBooks online users voice concerns over Intuit's forced migration away from desktop version, leading to higher rates and poor experiences.\n- Users discuss other accounting software options and express frustration with lack of customization and ease of use in existing options.\n- Some users mention custom scripts and benefits of plaintext accounting and using open-source software."
  },
  {
    "id": 36019580,
    "timestamp": 1684665371,
    "title": "GPT detectors are biased against non-native English writers",
    "url": "https://arxiv.org/abs/2304.02819",
    "hn_url": "http://news.ycombinator.com/item?id=36019580",
    "content": "",
    "summary": "- GPT detectors are language models designed to identify\u00a0plagiarism and gauge originality.\u00a0\n- These language models follow a biased approach when it comes to non-native English writers, which leads to the flagging of unique content as plagiarized.\u00a0\u00a0\n- This issue needs to be addressed to ensure fair treatment of non-native English writers in academia and the industry.",
    "hn_title": "GPT detectors are biased against non-native English writers",
    "original_title": "GPT detectors are biased against non-native English writers",
    "score": 306,
    "hn_content": "GPT detectors are biased against non-native English writers, with false positives serving to disadvantage those who are least likely to be able to defend themselves. While the notion of detecting an LLM that is outputting text seems absurd, GPT-style writing is becoming more widespread, with many people being exposed to its output and mimicking its style. However, ChatGPT's output is often repetitive and fluffy, relying on \"shallow wells\" and lacking nuanced phrasing or opinion. Some feel that chatGPT is teaching people what should have been learned in grade school about how to write clearly. The post includes discussions of plagiarism, how people learn to cheat, and the effectiveness of modern plagiarism detectors.Cheating by using AI is becoming a growing problem in education as the cost of AI services approaches zero. Testing students on skills that can be done as well or better by AI is becoming obsolete. Students cheat because it is an easy way out in a competitive educational system. Cheating is endemic in Chinese culture. Attempts to identify AI-generated text are often unreliable. Vanilla GPT generates text in a \"five paragraph essay\" style that is easily identifiable. However, identifying LLM-generated text is more difficult as it has idiosyncrasies. LLM is a propaganda term.The comments section discusses the use of GPT and similar technologies for cheating, as well as the difficulty of detecting AI-created text. One person suggests using in-person tests or testing more realistic scenarios instead of traditional essay-based assignments. Another comment suggests recording the writing process or using AI detection tools.The author discusses the challenges of education in an age where Artificial Intelligence (AI) is becoming increasingly important, arguing that people need to know at least a little about AI in order for it to be effectively used and controlled. The article also includes a discussion about cheating detection, with some suggesting the use of artificial intelligence to detect cheating on writing assignments. However, some commenters point out the potential flaws in this method and advocate for a focus on the quality of the content instead. Overall, the article highlights the ongoing debates and challenges related to AI and education.The article and comments discuss the use and limitations of language models (LLMs) like GPT-4 in detecting AI-generated text. Non-native English speakers may have an advantage in avoiding detection due to their use of less common phrasing and word choices; however, LLMs can also be trained with spelling and grammar checkers to detect even minor issues in text. There are concerns about the impact of LLMs on writing instruction and plagiarism detection, but also potential benefits in aiding tedious research tasks and creative writing. Lastly, the article raises questions about whether the use of LLMs constitutes cheating and whether LLMs reflect the biases of their creators.A study has found that AI systems used to identify texts produced by language models (LLMs) often demonstrate racial biases, leading to false positives that unfairly penalize non-native English speakers. While native writing samples were accurately identified, LLM-produced texts tended to undergo higher scrutiny. However, prompting strategies mitigated the issue, improving accuracy levels. The findings suggest that detecting LLM-produced texts is a challenge, given the tool's nature as an assistive tool to enhance human writing. Prompting strategies have shown promise in enhancing the accuracy of detecting original texts written by humans. Furthermore, the study raises questions about the traditional way of assessing essay-based assignments in academic settings and whether contextualized approaches should replace them.A study reveals that current AI detectors misclassify non-native English writing as AI-generated. Native writing samples are accurately identified. Simple prompting strategies can mitigate this bias and bypass GPT detectors. The study suggests that GPT detectors may penalize writers with constrained linguistic expressions. The use of AI is becoming widespread in content farms, raising the question of whether it matters if it is accurate and better than the average stack exchange response, similar to the question of whether content farms use AI. Hard limits for AI include domain-specific knowledge and novel insights, which are the domain of humans for some time, but it is uncertain for how long that will remain the case. AI capabilities are bootstrapping human creativity and productivity from the current level.",
    "hn_summary": "- GPT detectors are biased against non-native English writers, with false positives serving to disadvantage those who are least likely to be able to defend themselves.\n- Cheating by using AI is becoming a growing problem in education as the cost of AI services approaches zero.\n- The study suggests that GPT detectors may penalize writers with constrained linguistic expressions."
  },
  {
    "id": 36017309,
    "timestamp": 1684634090,
    "title": "Rodney Brooks on GPT-4",
    "url": "https://spectrum.ieee.org/gpt-4-calm-down",
    "hn_url": "http://news.ycombinator.com/item?id=36017309",
    "content": "ARTIFICIAL INTELLIGENCENEWSJust Calm Down About GPT-4 AlreadyAnd stop confusing performance with competence, says Rodney BrooksGLENN ZORPETTE17 MAY 202313 MIN READFormer MIT, Carnegie Mellon, and Stanford University faculty member\u2014and serial entrepreneur now on his third robotics startup\u2014Rodney Brooks recently asked GPT-3.5 the question Who is Rodney Brooks? It said he is an AI skeptic. On that score, Brooks says, GPT-3.5 got it right. RODNEY BROOKS: CHRISTOPHER MICHEL/WIKIPEDIA; BACKGROUND: RUBY CHEN/OPENAI",
    "summary": "- Rodney Brooks, a former faculty member at MIT, Carnegie Mellon, and Stanford University, urges people to stop conflating the performance of AI models like GPT-4 with their competence.\n- Brooks confirms that GPT-3.5's response to the question of who he is as an AI skeptic is accurate.\n- Brooks is a serial entrepreneur on his third robotics startup, and his expertise and experience provide context on the discussion of AI and its limitations.",
    "hn_title": "Rodney Brooks on GPT-4",
    "original_title": "Rodney Brooks on GPT-4",
    "score": 266,
    "hn_content": "The abilities of LLMs have left many people surprised, with the question remaining as to whether or not it \"understands\" and has the ability to think in the same way humans do. One possible explanation for LLMs' abilities is that text contains much more information than previously thought, which includes the entropy in the choices made while writing it. However, LLMs are limited to working with text, unlike humans who work with language, and they can struggle with ambiguity. LLMs' abilities have presented new possibilities for the future of computing, particularly in terms of natural language processing, but the question of understanding remains. Technologies like LLMs could be used to solve many industries' challenges, but their limitations must be acknowledged to prevent any potential issues.Experts are discussing the relationship between text and language, including how much information is encoded in text and how it affects machine learning models. ChatGPT, an AI language model, is being tested by experts such as Noam Chomsky, who argue that the model may lack the ability to truly \"understand\" language and reasoning. The discussion covers topics such as the differences between spoken and written language, DNA analysis, and the importance of context and cultural norms in understanding language and text. Despite disagreement over the definition of \"understanding,\" ChatGPT is seen by many as a significant advance in language processing technology.Users report that using ChatGPT to develop or double-check their logical reasoning on technical topics not widely discussed in its training data doesn't work well and devolves into guesswork and fabrication. One potential problem is that ChatGPT doesn't have an internal dialogue to understand the conversation about specific points. Experts debate whether or not ChatGPT fulfills the definition of \"understanding,\" with some arguing that it has no mental representation or model of the world, while others claim it can derive information from language use and context to generate responses that explain the real world. However, some users conclude that ChatGPT is a waste of time and should not be used.The discussion revolves around the limitations of language models, particularly their lack of understanding and the inability to apply knowledge to real-life situations. GPT-4 can play chess, but not well, and LLMs may know the rules of chess, but they don't necessarily understand them. The process of speech and writing involves predicting the next word, but it's more complex than that, and humans have the ability to edit their thoughts. There are limitations to LLMs' ability to reason beyond language tokens, and introspection is critical to developing a feedback loop for human thinking. The debate between determinism and free will is touched upon, and the role of natural selection in human cognition is discussed.The discussion revolves around the topics of determinism, free will, and the relationship between language and thought. One point made is that physics may not follow hard determinism, but this doesn't necessarily imply the existence of free will. Neuroscience suggests that the human brain is deterministic and predictable. Language is seen as a way to encode thought, but it isn't what thoughts are made of. Language models have shown the ability to reason dynamically and even with outlandish examples, suggesting that they have built some kind of world model that understands the physical and three-dimensional properties of objects. However, the reliance on a deterministic environment and predictable methods of communication through text may make the world feel more boring and deterministic.Researchers discuss the limits of reasoning in AI language models and whether they can truly mimic human-level reasoning. GPT-4 scores well on basic reasoning but struggles with complex and extremely complex reasoning tasks. While some argue that language models are just \"stochastic parrots\" with limited, if any, reasoning capabilities, others suggest that language is a way of encoding vast amounts of information about reality. There are debates about whether humans themselves are just advanced stochastic parrots. Some researchers argue that language models can learn world models, while others suggest using follow-up questions to test their understanding. The risks of AI posing an existential threat to humankind are discussed, but some argue that there are more pressing risks, including climate change and nuclear proliferation.A discussion thread on Hacker News includes comments about the potential risks of artificial intelligence (AI) and its impact on human extinction. Some argue that there are other existential threats like climate change and astroid impacts that would lead to civilizational collapse but not human extinction, whilst others point out that all negative outcomes are possible but it's their probability that matters. However, some feel that AI experts shouldn't be overconfident and should be cautious to prevent any negative outcomes. The discussion also includes comments on the capabilities of GPT-4, which reportedly has the ability to understand the world.The post discusses the capabilities of GPT-4 and its ability to reason using language-based training, rather than lived experiences; GPT-4 demonstrates hierarchical prediction with sense data and accuracy; despite limitations in common sense, LLMs are powerful and useful for automated tasks, and the trick is boxing them in and making them do things they can; GPT-4 is a significant improvement over GPT-3.5, and those opining on GPT are encouraged to test with the latest models.- Discussions on AGI and GPT models' capabilities on Hacker News forum.\n- GPT models are vast but relatively shallow compared to human intelligence, and making them deeper requires better designs.\n- OpenAI's CEO thinks they have reached a point of diminishing returns with GPT4, and there may be economical walls to consider.\n- There are various approaches that could potentially get around GPT4's limitations, but they require time and money to prove out.\n- There is a lack of understanding of how LLMs work at a high level, and numerous approaches are yet to be tested.",
    "hn_summary": "- Experts discuss the abilities of LLMs, including their limitations in working with text and struggles with ambiguity.\n- Users report limitations in using ChatGPT for logical reasoning on technical topics.\n- The discussion focuses on the limits of reasoning in AI language models, the debate between determinism and free will, and potential risks of AI."
  },
  {
    "id": 36020196,
    "timestamp": 1684672042,
    "title": "Suspicious iOS KeePass Client",
    "url": "https://old.reddit.com/r/techsupport/comments/13nqarb/suspicious_ios_keepass_client/",
    "hn_url": "http://news.ycombinator.com/item?id=36020196",
    "content": "A user discovered a suspicious KeePass client called iOSKeePass, that was removed from the App Store and discovered to have been sending clipboard contents to a third-party server. The app's repository was wiped clean of comments and activity after a GitHub user posted about the issue. Security experts warn that any credentials stored in the app are now compromised and should be changed. The developer, Frank Hausmann, has not responded to questions. The post serves as a reminder to be cautious and vet all apps, especially those storing sensitive information, and highlights the importance of regularly updating passwords.",
    "summary": "- A suspicious KeePass client called iOSKeePass was discovered to have been sending clipboard contents to a third-party server and was removed from the App Store. \n- Any credentials stored in the app are now compromised and should be changed. \n- This serves as a reminder to vet all apps, especially ones storing sensitive information, and to regularly update passwords.",
    "hn_title": "Suspicious iOS KeePass Client",
    "original_title": "Suspicious iOS KeePass Client",
    "score": 256,
    "hn_content": "A Reddit user has shared their experiences with self-hosted password managers, recommending solutions such as KeepassXC with Syncthing and NordPass. They caution against using 1Password due to its reliance on cloud storage and overuse of unverified modules, instead favoring Strongbox as a native app that supports auto-fill and biometrics. The article also includes discussions of other password managers such as PasswordWallet and Pass, and notes the security risks associated with using iCloud and other cloud-based password storage solutions. Finally, users discuss the benefits and drawbacks of various browser extensions and the security of browser APIs.There's a discussion about developing and distributing open-source software for iOS through Apple's App Store. There is no straightforward way of correlating published code on GitHub to the binary code in the App Store. Side-loading apps with open-source lines of code in them can be safer than downloading from an app store because of the untrustworthiness of the said centralized app stores. The problem lies in the insufficient oversight of Apple's App Store, which provides an untrustworthy package. The primary issue is not with the reproducible builds but with the lack of testing of what's being released. One viable solution to this is a trusted app store that provides more low skills and better verifications for non-technical users. Though it's easier said than done, we must focus on providing good security practices, turning them into common sense.Users are warning against using the KeePassMini app after discovering it sends passwords directly to a server. They recommend using an alternative client that does not have network access, or using a paid app called Strongbox that is fully offline. Some commenters discuss the difficulty of verifying whether apps on iOS access the network, but suggest checking the privacy report. Others point out that open-source software does not necessarily guarantee security or trustworthiness. Some suggest using reputable password managers such as 1Password or Bitwarden, but others warn that users are ultimately trusting multiple supply chains and code bases when using these services. Overall, the post highlights the need for caution and research when using password managers and related apps.A potential security issue with the iOSKeePass app has been raised after it was removed from the App Store and a new version was uploaded to GitHub. The issue stems from the inclusion of a malicious code in the new version that could potentially steal passwords. The incident highlights the challenges in verifying code from open-source repositories and shows the risk of relying on decentralised software that is not subject to rigorous security testing for key apps such as password managers. Users are advised to change their password and use other proven password management software like Bitwarden or Strongbox that offer centralisation and have robust security protocols in place.",
    "hn_summary": "- A Reddit user recommends using self-hosted password managers like KeepassXC and NordPass while cautioning against 1Password due to its reliance on cloud storage and unverified modules\n- Users discuss issues with developing and distributing open-source software for iOS through Apple's App Store and suggest a need for more reliable verifications for non-technical users\n- Users warn against using KeePassMini and advise using alternative clients or paid apps like Strongbox that are fully offline to avoid potential security issues and urge caution when using password managers"
  },
  {
    "id": 36020431,
    "timestamp": 1684673812,
    "title": "Potentially millions of Android TVs & phones come with malware preinstalled",
    "url": "https://arstechnica.com/information-technology/2023/05/potentially-millions-of-android-tvs-and-phones-come-with-malware-preinstalled/",
    "hn_url": "http://news.ycombinator.com/item?id=36020431",
    "content": "ATTACK OF THE ANDROIDS \u2014Potentially millions of Android TVs and phones come with malware preinstalledThe bane of low-cost Android devices is showing no signs of going away.DAN GOODIN - 5/18/2023, 5:36 PMEnlarge / Cybercriminals or anonymous hackers use malware on mobile phones to hack personal and business passwords online.Getty Images114WITHOverall, Android devices have earned a decidedly mixed reputation for security. While the OS itself and Google's Pixels have stood up over the years against software exploits, the never-ending flow of malicious apps in Google Play and vulnerable devices from some third-party manufacturers have tarnished its image.On Thursday, that image was further tarnished after two reports said that multiple lines of Android devices came with preinstalled malware that couldn\u2019t be removed without users taking heroic measures.The first report came from security firm Trend Micro. Researchers following up on a presentation delivered at the Black Hat security conference in Singapore reported that as many as 8.9 million phones comprising as many as 50 different brands were infected with malware. First documented by researchers from security firm Sophos, Guerrilla, as they named the malware, was found in 15 malicious apps that Google allowed into its Play market.Guerrilla opens a backdoor that causes infected devices to regularly communicate with a remote command-and-control server to check if there are any new malicious updates for them to install. These malicious updates collect data about the users that the threat actor, which Trend Micro calls the Lemon Group, can sell to advertisers. Guerrilla then surreptitiously installs aggressive ad platforms that can deplete battery reserves and degrade the user experience.Trend Micro researchers wrote:While we identified a number of businesses that Lemon Group does for big data, marketing, and advertising companies, the main business involves the utilization of big data: Analyzing massive amounts of data and the corresponding characteristics of manufacturers\u2019 shipments, different advertising content obtained from different users at different times, and the hardware data with detailed software push. This allows Lemon Group to monitor customers that can be further infected with other apps to build on, such as focusing on only showing advertisements to app users from certain regions.The country with the highest concentration of infected phones was the US, followed by Mexico, Indonesia, Thailand, and Russia.Guerrilla is a massive platform with nearly a dozen plugins that can hijack users\u2019 WhatsApp sessions to send unwanted messages, establish a reverse proxy from an infected phone to use the network resources of the affected mobile device, and inject ads into legitimate apps.Unfortunately, Trend Micro didn\u2019t identify the affected brands, and company representatives didn\u2019t respond to an email asking for them.The second report was published by TechCrunch. It detailed several lines of Android-based TV boxes sold through Amazon that are laced with malware. The TV boxes, reported to be T95 models with an h616, report to a command-and-control server that, just like the Guerrilla servers, can install any application the malware creators want. The default malware preinstalled on the boxes is known as a clickbot. It generates advertising revenue by surreptitiously tapping on ads in the background.TechCrunch cited reports (here and here) by Daniel Milisic, a researcher who happened to buy one of the infected boxes. Milisic\u2019s findings were independently confirmed by Bill Budington, a researcher at the Electronic Frontier Foundation.FURTHER READINGUS Government-funded Android phones come preinstalled with unremovable malwareAndroid devices that come with malware straight out of the factory box are, unfortunately, nothing new. Ars has reported on such incidents at least five times in recent years (here, here, here, here, and here). All the affected models were in the budget tier.People in the market for an Android phone should steer toward known brands like Samsung, Asus, or OnePlus, which generally have much more reliable quality assurance controls on their inventory. To date, there have never been reports of higher-end Android devices coming with malware preinstalled. There are similarly no such reports for iPhones.READER COMMENTS114WITHDAN GOODINDan Goodin is Senior Security Editor at Ars Technica, where he oversees coverage of malware, computer espionage, botnets, hardware hacking, encryption, and passwords. In his spare time, he enjoys gardening, cooking, and following the independent music scene.Promoted Commentsmha71While I understand your post as a reference to the first comment...It begs the question of why the author of the article put in the last line given that its irrelevant to the content of the article, and literally only serves to create trolling like in the first reply.Does Ars pay its authors based on engagement metrics?If so, I'd suggest we all take your comment to heart by not rewarding the obvious troll fishing by the article author, and leave this reply thread barren.Or maybe it\u2019s an article that says that cheap Android devices have malware pre installed, then goes on to say that the more expensive Android phones do not have malware pre installed, and ends by saying iPhones do not have malware pre installed. Seems logical to me to finish the article by stating to which degree of the phone/device market as a whole is suffering from this.May 19, 2023 at 1:36 amChannel Ars Technica\u2190 PREVIOUS STORYNEXT STORY \u2192Related StoriesToday on Ars",
    "summary": "- Multiple lines of Android devices, including TVs and phones, come with preinstalled malware that cannot be removed without users taking heroic measures, according to two reports.\n- One security firm found as many as 8.9 million phones, comprising as many as 50 different brands, to be infected with malware, while TechCrunch reported on Android-based TV boxes sold through Amazon that are laced with malware. \n- Buyers of budget Android devices should be wary of such problems, and instead opt for known brands, such as Samsung, Asus, and OnePlus.",
    "hn_title": "Potentially millions of Android TVs and phones come with malware preinstalled",
    "original_title": "Potentially millions of Android TVs and phones come with malware preinstalled",
    "score": 251,
    "hn_content": "Millions of Android devices may come preinstalled with malware including adware and trojans, according to a report by Ars Technica. This can result in unusable phone batteries, poor performance, and rapidly growing app libraries, suggesting that less tech-literate consumers should consider iPhone SE as a more friendly option. Less expensive Android devices (often below $200) from no-name brands can be especially problematic, allegedly featuring a range of adware that can download additional unwanted content over time. Such devices may have firmware retracted automatically or be infected with malware from the factory, with regulations called for to prevent the sale of what is, in effect, \"bloatware\".Android app permissions are now regularly checked when apps need them, much like on iOS, and Android also prompts for permission renewal if the app has used it recently. Adware and bloatware can be installed on any device no matter the price, including Apple devices. The ubiquity of native apps that don't need to be installed is a strange design decision with no equivalent on the web. Android phones are often used by software engineers for their flexibility, and there is software available that can disable bloatware. The iPhone SE is the best smartphone bang for buck, at $57 per supported year.Trend Micro has discovered that at least 5,000 Amazon Fire TV and Firestick devices have been infected with a new Mirai variant that can mine cryptocurrencies, steal passwords and data, and conduct DDoS attacks. The so-called\u00a0Lemon_Duck malware is part of a larger trend of infecting IoT and streaming devices, including Android-based TVs sold through Amazon and other vendors. While device password weaknesses remain a significant issue, devices infected\u00a0by\u00a0Lemon_Duck\u00a0have been found to originate from known and trusted brands, indicating a wider security issue. Trend Micro declined to name the brands or models that were found to have malware but has published\u00a0online the IoCs\u00a0of malware-related domains, file hashes, and commands related to\u00a0the\u00a0monero\u00a0mining.\u00a0\nA discussion thread on removing Chinese bloatware from Xiaomi devices leads to suggestions for hackable/open Android TV devices that don't phone home and support running Jellyfin and Tailscale. Suggestions include the Nvidia Shield, custom ROMs for cheap Amazon TV boxes, Sony Android TVs, and custom ROMs for Nvidia Jetson devices or Raspberry Pis. Some comments mention issues with DRM support and sideloading apps. The thread also reveals concerns about malware preinstalled on cheap Android devices and the difficulty of finding out what's in their system image, as well as experiences with touchpal (a system app) being discovered as malware on an HTC flagship phone. One commenter suggests steering toward known brands like Samsung, Asus, or OnePlus which generally have more reliable quality assurance controls.Trend Micro has found millions of preinstalled malware on cheap Android devices sold on Amazon and other retailers, with many vendors shipping devices that have never been updated. The Lemon Duck malware is designed to attack corporate cloud systems, but the researchers claim that these devices can still open a dangerous channel between TV sets and more sensitive home networks. Users of Samsung devices expressed frustration that the company ships spyware and cannot uninstall the apps without rooting. Apple has its transparency limitations and operates differently in various countries. Some readers provide tools to remove preinstalled spyware or to create a separate network to separate vulnerable devices. Commenters criticize the practice of preinstalling malware or adware on devices, which is expected to spy on users, sell data and even sign them up for premium services.",
    "hn_summary": "- Millions of Android devices might have malware preinstalled including adware and trojans, which can lead to poor performance and unusable batteries.\n- The iPhone SE is a more user-friendly option for less tech-savvy consumers.\n- Trend Micro discovered that Android-based TVs sold through Amazon and other vendors have been infected with malware."
  },
  {
    "id": 36025611,
    "timestamp": 1684711721,
    "title": "Beej's Guide to Network Programming",
    "url": "https://beej.us/guide/bgnet/",
    "hn_url": "http://news.ycombinator.com/item?id=36025611",
    "content": "Like the guide? Pitch in!Buy the Guide as a Real Life Perfect-Bound BOOK right now!Holy Moly!Beej's Guide to Network ProgrammingUsing Internet Sockets(Click here for other guides!)(Notably, this is a WIP guide to general C Programming right here!)Hello, one and all! This is my little how-to guide on network programming using Internet sockets, or \"sockets programming\", for those of you who prefer it. The sockets API, though started by the Berkeley folk, has been ported to many many platforms, including Unix, Linux, and even Windows.Unfortunately, it can be a little, um, \"much\" to digest the API, but as long as you know some C or C++, this guide should springboard you into the realm of network programming with hopefully as little hassle as humanly possible!What's Here for Readers:Errata (mistakes? What?)HTML:HTMLHTML, widescreenHTML, single pageHTML, single page, widescreenHTML ZIPHTML ZIP, widescreenPDF:US Letter, one sided, syntax highlightingUS Letter, two sided, syntax highlightingA4, one sided, syntax highlightingA4, two sided, syntax highlightingUS Letter, one sided, black and whiteUS Letter, two sided, black and whiteA4, one sided, black and whiteA4, two sided, black and whiteExamples:Loose downloads (Run make to build.)ZIP fileMirrors:Let me know if you have mirrored the site.kfbk.net (Germany)retran.com (USA)rainydayz.org (Great Britain)Translations!Let me know if you have made a translation that I should link to.Simplified ChineseTraditional ChineseDanishEstonianFarsiFrenchGermanHungarianItalianKoreanKoreanBrazilian Portuguese HTML PDF olderPolishRomanianRussianSerbianSwedishTurkishUzbekBroken translation linksLet me know if you have updates.ChineseDutchHebrewSpanishWhat's Here for Translators and Writers:Clone the whole thing from GitHub and follow the README.Contact Beej: beej@beej.us",
    "summary": "- Beej's Guide to Network Programming is a how-to guide for network programming using Internet sockets, available on various platforms, including Unix, Linux, and Windows\n- The guide is aimed at individuals who know some C or C++, as it provides tips to make the API easier to digest\n- The guide offers resources for readers and translators and can be bought as a perfect-bound book.",
    "hn_title": "Beej's Guide to Network Programming",
    "original_title": "Beej's Guide to Network Programming",
    "score": 217,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginBeej's Guide to Network Programming (beej.us)218 points by mutant_glofish 6 hours ago | hide | past | favorite | 38 commentsvajrabum 4 hours ago | next [\u2013]All Beej's guides are fantastic, but if you're interested in Network programming you could do way worse than follow this up with his guide to network concepts. https://beej.us/guide/bgnet0/If you search Algolia for Beej you'll see his material has been on hacker news numerous times.replycaust1c 6 minutes ago | prev | next [\u2013]Beej's guides are fantastic. He went to Chico State and I was happy to learn that his books were used for teaching network programming there when I attended.Genuinely inspirational hacker. Feel's great to have had that experience at a state school.replykqr 36 minutes ago | prev | next [\u2013]Open question: in what fields are you working where you really need to work with actual sockets? Most of the network programming I do fall into one of two categories:1. A library exists to abstract over the bytes-into-sockets layer, meaning I don't need to deal with it; or2. A library probably exists to abstract over the bytes-into-sockets layer, but I've chosen to ignore it either because I'm truly ignorant of it, or for intellectual stimulation.(Note that in category 2 I count things like \"not using protobuf/thrift/etc. for IPC.)When are these things not true? Genuinely curious! I'm guessing interfacing with existing obscure third parties, or using obscure language environments, but what are examples of that? And what other usages are there?replyGoblinSlayer 8 minutes ago | parent | next [\u2013]At least on Unix and Windows file read and write methods work for sockets too, so streaming bytes isn't different.How would you implement, say, netcat? Launch a jango rest service with kubernetes, which will run in a wm if it's a wrong OS, create a certificate with letsencrypt and access it with a react electron app?replyDoingIsLearning 11 minutes ago | parent | prev | next [\u2013]Had plenty of use cases where even zmq was overkill.E.g. interfacing a research machine with an OEM machine or a machine to a standalone embedded target, sometimes it makes sense to just serialize, send over a socket, ethernet crossover cable and be done.replyforrestthewoods 23 minutes ago | parent | prev | next [\u2013]There is a whole universe of programming that exists outside of webdev. Firmware, video games, high performance systems, etc.replykeyle 4 hours ago | prev | next [\u2013]There is also a C guide [1] which has a pretty interesting email policy...   I\u2019m generally available to help out with email questions so feel free to write in, but I can\u2019t guarantee a response.   I lead a pretty busy life and there are times when I just can\u2019t answer a question you have.   When that\u2019s the case, I usually just delete the message. It\u2019s nothing personal;   I just won\u2019t ever have the time to give the detailed answer you require. [...][1] https://beej.us/guide/bgc/html/split/replyftxbro 4 hours ago | prev | next [\u2013]> \"The way I see it, it's the educators who hold all the power in the world. No, stop laughing and hear me out. A good instructor can, over the course of their career, create hundreds of millions or even billions of dollars of GDP. Let's say a teacher teaches 40 students a year for 30 years. And Each of those students goes on to work for 40 years. And, due to the quality of instruction, they earn $10,000 more per year than they would have otherwise. That's $480 million in extra revenue. From one good instructor.\"OK but providing value isn't the same as having power. It's almost the opposite thing.replyjrumbut 3 hours ago | parent | next [\u2013]> OK but providing value isn't the same as having power.Providing value is absolutely a way of having power. You change the world, that's power.Having power isn't the same as yielding benefit (for yourself).replywhimsicalism 4 hours ago | parent | prev | next [\u2013]What are you quoting?replyftxbro 4 hours ago | root | parent | next [\u2013]it's beej saying why he write guidesreplypeter_l_downs 5 hours ago | prev | next [\u2013]Posted a million times before, and should be posted a million times again in the future. This is one of the only reference books I've ever used, and it got me through my first real programming job. Wonderful text. Thank you, Beej!replyeep_social 4 hours ago | parent | next [\u2013]This is probably the best one: https://news.ycombinator.com/item?id=26100075replygabagool 3 hours ago | root | parent | next [\u2013]Could be wrong, but isn't this the same Guide?replybdcravens 3 hours ago | root | parent | next [\u2013]I think that's the point. They were talking about how many times it's been posted, so that's probably the best of those submissions.replyeep_social 3 hours ago | root | parent | prev | next [\u2013]whoops, best thread is what I was thinking.replyalberth 5 hours ago | prev | next [\u2013]Beyond this being a fantastic document, I really appreciate it being offered as a single HTML page:https://beej.us/guide/bgnet/html/replyasdfkljvalkj 5 hours ago | parent | next [\u2013]The funny thing is at the time downloading that took like 5 minutes back in the day.replyschaefer 5 hours ago | parent | prev | next [\u2013]And a physical print book.replyb33j0r 4 hours ago | prev | next [\u2013]My nick has been Beej or b33j ever since starcraft or counterstrike 1.5.I will always bring up \u201cbut you know who the real beej is, right?\u201d if the other person is a nerd.replytomcam 4 hours ago | parent | next [\u2013]Now maybe I have to change all my usernames to animats0r for the same reasonreplyb33j0r 2 hours ago | root | parent | next [\u2013]Funny enough I only got this joke on my second read. One of my uncles had a company with a name similar to your joke :D ADD probably.So, to me it was beej. But in reality, to the public [you can\u2019t nickname yourself].So it\u2019s always been b33j0r. My friend who had the first dedicated server I encountered named me that because my name is Brian Jor\u2014-Finding me has been trivial since I first AWP\u2019d in a CAL-O match. This was before scoutznknives were more than merit badges.replygirvo 4 hours ago | parent | prev | next [\u2013]> counterstrike 1.5I miss WON. Man my friends and I hated Steam when it came out...replyverandaguy 4 hours ago | prev | next [\u2013]This gets reposted on HN every few months or so,And I couldn't be happier, Beej's guide is a seminal read for anyone looking to get into net programming. Exposing as many newbies to it as possible helps strengthen the field.replysaboot 4 hours ago | prev | next [\u2013]I'll ask here in case I can get help.I followed Beej's linked guide to transfer data over udp sometime ago, written in C on a Windows machine. I then compiled the code on Mac os x but could never get it to work properly. Tried all the Google suggestions at the time, posting this comment in case there's an obvious \"oh did you set X?\" tip from someone that has done a similar task.replya2800276 1 hour ago | parent | next [\u2013]Maybe the reason you're not getting help is is that you're not asking a question. You're not even describing a problem. You're only stating that you have a problem.replydaydream 2 hours ago | parent | prev | next [\u2013]What was the specific issue you ran into?replyTallGuyShort 4 hours ago | prev | next [\u2013]There is a handful of people whose tabs I would instantly pick up were I to meet them somewhere because of the immense value I have gotten from their free work online, writing stuff, answering forum posts, etc.Beej possibly tops that list.replyd1n037 5 hours ago | prev | next [\u2013]Funny I was just going over this again yesterday. Also didn't know he had one called Beej's Guide to Network Concepts[0], which has some really good explanations in it.[0] https://beej.us/guide/bgnet0/html/split/replythrwawy74 3 hours ago | prev | next [\u2013]I'm not saying Rust is the answer to all things, I'm saying I want a Rust translation for continuity of the wisdom and concision I loved in this guide as a 14 year old.replydeaddodo 1 hour ago | parent | next [\u2013]The only problem is that it wouldn't be quite as useful. Zig, Rust, D, etc offer libraries and methodologies (async/await, for instance) that deprecate traditional raw socket programming. Instead, you would use something like tokio in Rust to do the same thing.You certainly can program raw sockets, the techniques are almost orthogonal to the beej guide. It's the same API and Structs (using FFI) and you would change some glue logic to make it more rust idiomatic. It would just be less useful in those languages, generally.replysnarkypixel 4 hours ago | prev | next [\u2013]This guide was my bible when I was a kid. I learned not just network programming, but also C with it.replyCamperBob2 4 hours ago | parent | next [\u2013]That's how Andrej Karpathy's video lectures are shaping up for me... I'm learning a lot about not just neural networks, but Python and Pytorch.It's more or less magical when you find just the right conjugate match between tutorial material and your own learning style. I can see how Beej's Guide might do the same for someone new to both socket programming and C.replyghoshbishakh 2 hours ago | prev | next [\u2013]This is a fantastic guide and this was used in our programming lab at IIT Kharagpur. The lab was headed by an equally awesome instructor - Abhijit Das [1][1] https://cse.iitkgp.ac.in/~abhij/replydavidw 3 hours ago | prev | next [\u2013]Pre-pandemic, beej used to come to programmer/hacker events here in Bend. Haven't seen him in a while though.replycode_witch_sam 4 hours ago | prev | next [\u2013]learned sockets with this like 20 years ago programming IRC fserve bots in Creplynickelpro 2 hours ago | prev | next [\u2013]This guide taught me how to program. I owe my entire career to beejreplyzabzonk 5 hours ago | prev [\u2013]it is what a great short guide should be. but i am sure dang will be posting a huge number of previous links.replyApplications are open for YC Summer 2023Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- Beej's Guide to Network Programming is a popular and highly recommended resource for learning network programming and concepts through C code examples.\n- The guide is praised by many for its clear and concise explanations that are helpful for newbies in network programming.\n- The guide's author, Beej, is an inspirational hacker who has made a significant contribution to the programming community with his guides and books."
  },
  {
    "id": 36017793,
    "timestamp": 1684640044,
    "title": "Feynman Lectures on Physics (1964)",
    "url": "https://www.feynmanlectures.caltech.edu/",
    "hn_url": "http://news.ycombinator.com/item?id=36017793",
    "content": "Caltech's Division of Physics, Mathematics and Astronomy and The Feynman Lectures Website are pleased to present this online edition ofFeynman \u2022 Leighton \u2022 Sands    Restore my view 1Now, anyone with internet access and a web browser can enjoy reading2 a high quality up-to-date copy of Feynman's legendary lectures.This edition has been designed for ease of reading on devices of any size or shape; text, figures and equations can all be zoomed without degradation.3Volume Imainly mechanics, radiation, and heatVolume IImainly electromagnetism and matterVolume IIIquantum mechanicsFeynman's Tips on Physicsa problem-solving supplement to the feynman lectures on physics\u2662Feynman's Messenger Lecturesfull hd videos of 7 lectures feynman gave at cornell in 1964.Lecture Recordings 1961\u201164117 flp lecture recordings4Lecture Photos 1961\u2011643043 flp lecture photos5Feynman's Notes611 pages of flp lecture notesOriginal Course Handouts 1961\u201163744 pages of flp student handouts6\u2662Feynman Lectures Infothe original feynman lectures websiteFor comments or questions about this edition please contact Michael Gottlieb.Richard Feynman talking with a teaching assistant after the lecture on The Dependence of Amplitudes on Time, Robert Leighton (left) and Matthew Sands (right) in background, April 29, 1963.Photographs by Tom Harvey. Copyright \u00a9 California Institute of Technology.Contributions from many parties have enabled and benefitted the creation of the HTML edition of The Feynman Lectures on Physics. We wish to thankCarver Mead, for his warm encouragement and generous financial support, without which this edition would have been impossible,Thomas Kelleher and Basic Books, for their open-mindedness in allowing this edition to be published free of charge,Adam Cochran, for tying up the many slippery loose ends that needed to come together in order for this edition to be realized,Alan Rice for his steadfast enthusiasm for this project, and for rallying the support of Caltech's Division of Physics, Mathematics and Astronomy.Clicking the \"Restore my view\" link will take you back to where you last left off reading and listening in FLP chapters, or you can restore your view directly by loading a special URL, feynmanlectures.caltech.edu#restore - bookmark it for convenience. The \"Restore my view\" link and URL will become active only after you've closed one of the chapters of this edition. \u21a9However, we want to be clear that this edition is only free to read, look at and listen to online, and this posting does not transfer any right to download all or any portion of the book The Feynman Lectures on Physics, its photos or tape recordings, for any purpose. \u21a9This HTML5-based edition features LaTeX equations rendered by MathJax JavaScript, and scalable vector graphic (SVG) figures. Your browser must support javascript and permit scripts from mathjax.org. LocalStorage must be enabled. We recommend using a modern browser; some older browsers may not display this edition correctly. PNG figures (that degrade when scaled) may be served to browsers that do not support SVG. We do not support versions of Internet Explorer older than 9.0. For information about MathJax features and accessibility options, right-click on any display equation. \u21a9The lecture recordings can also be played in their respective FLP chapters. \u21a9Links to the photos also appear near the title of each FLP chapter. \u21a9Updated in March 2022 with a new presentation featuring deep-zoomable images. \u21a9Copyright \u00a9 1963-1965, 2006, 2013 by the California Institute of Technology, Michael A. Gottlieb and Rudolf Pfeiffer",
    "summary": "- Caltech and The Feynman Lectures Website are offering an online edition of Richard Feynman's lectures on physics, which can be accessed by anyone with internet and a web browser.\n- The lectures have been designed for easy reading on any device, and include volumes on mechanics, electromagnetism, matter, and quantum mechanics.\n- The edition also includes Feynman's notes, problem-solving supplements, lecture recordings, lecture photos, and original course handouts.",
    "hn_title": "Feynman Lectures on Physics (1964)",
    "original_title": "Feynman Lectures on Physics (1964)",
    "score": 211,
    "hn_content": "The Feynman Lectures on Physics have been available online since 2013, with the copyright date of that announcement site being the same year. However, Feynman's volumes are still recommended for modern students and hold up well. Feynman's Volume III (quantum mechanics) changed physics education by dispensing with traditionally complex continuous PDE's in favor of more elegant, simpler discrete systems. Some users felt that Volume III missed certain advancements like EPR and Bell's theorem. Physicists have felt pedagogical discoveries since Feynman's published work, but fundamentals remain largely the same, with textbooks old and new covering data structures, algorithms, and numerical methods among others. While the audio quality of the lectures is poor, they have been recently digitized into \"archival\" recordings and are sufficient for physics learners.The Feynman Lectures on Physics, a renowned three-volume textbook series, is now completely available for free online reading and listening, although downloading content is not permitted due to copyright. The lectures, given by Nobel Prize Laureate Richard Feynman, are said to offer a distinctive writing style and practicality, inspiring science enthusiasts and enlightening students with a keen interest in physics. Despite criticism of their suitability for effective pedagogy, experts acknowledge the lectures' elegance and subtlety, and consider them a valuable resource for refreshing concepts. The online edition of the lectures, initially published in 2013, includes a new presentation with deep-zoomable images, and offers a unique and accessible way to explore physics.",
    "hn_summary": "- Feynman Lectures on Physics are available online for free reading and listening since 2013, but are still highly recommended for modern students.\n- Volume III of the lectures introduced more elegant and simpler discrete systems, but missed certain advancements like EPR and Bell's theorem.\n- Despite their criticism for effective pedagogy, the lectures' elegance, subtlety, and practicality make them a valuable resource for refreshing concepts, which experts acknowledge."
  },
  {
    "id": 36020717,
    "timestamp": 1684676204,
    "title": "Show HN: Trogon \u2013 An automatic TUI for command line apps",
    "url": "https://github.com/Textualize/trogon",
    "hn_url": "http://news.ycombinator.com/item?id=36020717",
    "content": "TrogonAuto-generate friendly terminal user interfaces for command line apps.\ud83c\udfac Video demonstrationTrogon works with the popular Click library for Python, but will support other libraries and languages in the future.How it worksTrogon inspects your (command line) app and extracts a schema which describes the options / switches / help etc. It then uses that information to build a Textual UI you can use to edit and run the command.Ultimately we would like to formalize this schema and a protocol to extract or expose it from apps. This which would allow Trogon to build TUIs for any CLI app, regardless of how it was built. If you are familiar with Swagger, think Swagger for CLIs.ScreenshotsWhy?Command line apps reward repeated use, but they lack in discoverability. If you don't use a CLI app frequently, or there are too many options to commit to memory, a Trogon TUI interface can help you (re)discover options and switches.What does the name mean?This project started life as a Textual experiement, which we have been giving give bird's names to. A Trogon is a beautiful bird I was lucky enough to photograph in 2017.See also Frogmouth, a Markdown browser for the terminal.RoadmapTrogon is usable now. It is only 2 lines (!) of code to add to an existing project.It is still in an early stage of development, and we have lots of improvements planned for it.InstallingTrogon may be installed with PyPI.pip install trogonQuickstartImport from trogon import tuiAdd the @tui decorator above your click app. e.g.@tui()@click.group(...)def cli():  ...Your click app will have a new tui command available.See also the examples folder for two example apps.Follow this projectIf this app interests you, you may want to join the Textual Discord server where you can talk to Textual developers / community.",
    "summary": "- Trogon is an automatic TUI (Terminal User Interface) that generates user-friendly interfaces for command-line apps.\n- It inspects the command-line app and builds a textual UI that allows the user to edit and run the command.\n- The project is in an early stage of development, but it already supports the Click library for Python and has plans to support other libraries and languages in the future.",
    "hn_title": "Show HN: Trogon \u2013 An automatic TUI for command line apps",
    "original_title": "Show HN: Trogon \u2013 An automatic TUI for command line apps",
    "score": 208,
    "hn_content": "A project called Trogon has been released to generate a textual user interface (TUI) for command-line apps, with its aim being to present arguments, options and switches as a form. Trogon currently works with Python and the Click library, but theNo meaningful content to summarize.",
    "hn_summary": "- Trogon is a new project for generating TUIs for command-line apps\n- It aims to make arguments, options, and switches more user-friendly\n- Trogon currently only works with Python and the Click library"
  },
  {
    "id": 36019485,
    "timestamp": 1684664198,
    "title": "Dolphin Emulator: Progress Report February, March, & April 2023",
    "url": "https://dolphin-emu.org/blog/2023/05/21/dolphin-progress-report-february-march-april-2023/",
    "hn_url": "http://news.ycombinator.com/item?id=36019485",
    "content": "The latest Dolphin progress report highlights major changes to Dolphin's Android Input Handling, as well as the implementation of Document Provider Support, resulting in easier access to per-app directories. Other notable changes include fixes for Wii Remote disconnection and new post-processing shaders, while developers have also made progress in the emulation of figurine portals for Disney Infinity and Skylanders: Trap Team. The Kill Renderer update is a significant change to Dolphin's core, which will lay the foundation for asynchronous presentation and future efforts to improve frame pacing. All of these changes demonstrate the continued dedication and progress of the Dolphin Emulator project.Sharp Bilinear is a combination of both Nearest Neighbor and Bilinear filtering techniques that produces sharp results without artifacts and shimmering in 2D graphics and pixel art. ASCII Art Shader returns, optimized for modern graphics cards that support subgrouping. Six bounding box games have been discovered and fixed by enabling the disabled default bounding box setting. Users can report similar issues with the newly added \"bounding box reads\" feature. Several contributors have helped advance Dolphin, and users can join the discussion on the progress report forum thread.",
    "summary": "- The Dolphin Emulator project has made significant progress in improving the Android input handling and implementing document provider support for easier access to app directories.\n- Fixes have been made for Wii Remote disconnection and new post-processing shaders, and progress has been made in emulating figurine portals for Disney Infinity and Skylanders: Trap Team.\n- The Kill Renderer update will lay the foundation for future improvements to frame pacing, and users can report issues with the new \"bounding box reads\" feature.",
    "hn_title": "Dolphin Emulator: Progress Report February, March, and April 2023",
    "original_title": "Dolphin Emulator: Progress Report February, March, and April 2023",
    "score": 198,
    "hn_content": "Dolphin Emulator has released a Progress Report documenting the changes made between February and April 2023. Users shared their positive experiences with the emulator, including successful dumping of entire Wii and GameCube libraries and connection of original Wiimotes to PCs via Bluetooth. The report includes release notes that focus on individual developers' contributions and highlights changes made and issues resolved. The accuracy of emulation and perfect compatibility over optimization of performance is a priority for MAME and MESS, which are emulator collections with different goals to Dolphin. Some users question why people contribute to stand-alone emulators rather than making MESS work. The report includes a discussion on the efforts to hack the Wii for dumping purposes.- MESS/MAME is an archival project designed for perfect reproduction of works indefinitely into the future, not for efficient and \"fun\" emulation.\n- MESS is a low-level emulator that doesn't use speed hacks or performance optimizations by design, making it not useful for modern 3D consoles like the GameCube and Wii.\n- Dolphin is a state-of-the-art console emulator with a focus on performance achieved through optimization efforts.\n- RetroArch is a popular multi-emulator system used by many emulation-adjacent projects for its integration capabilities.\n- Integrating with MESS wouldn't provide anything useful for other emulators due to its architecture not being friendly to dynarec.",
    "hn_summary": "- Dolphin Emulator released a Progress Report detailing changes made between February and April 2023.\n- Users reported successful dumping of Wii and GameCube libraries and connecting original Wiimotes via Bluetooth.\n- MAME and MESS are archival projects designed for perfect reproduction of works, not efficient emulation, while Dolphin prioritizes performance through optimization efforts."
  }
]
