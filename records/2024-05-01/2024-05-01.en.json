[
  {
    "id": 40213591,
    "title": "US DEA Proposes Reclassifying Marijuana",
    "originLink": "https://apnews.com/article/marijuana-biden-dea-criminal-justice-pot-f833a8dae6ceb31a8658a5d65832a3b8",
    "originBody": "The U.S. Drug Enforcement Administration will move to reclassify marijuana as a less dangerous drug, a historic shift to generations of American drug policy that could have wide ripple effects across the country. Read More Photos 1 By ZEKE MILLER, JOSHUA GOODMAN, JIM MUSTIAN and LINDSAY WHITEHURST Updated 11:51 PM UTC, April 30, 2024 Share Share Copy Link copied Email Facebook X Reddit LinkedIn Pinterest Flipboard Print WASHINGTON (AP) — The U.S. Drug Enforcement Administration will move to reclassify marijuana as a less dangerous drug, The Associated Press has learned, a historic shift to generations of American drug policy that could have wide ripple effects across the country. The proposal, which still must be reviewed by the White House Office of Management and Budget, would recognize the medical uses of cannabis and acknowledge it has less potential for abuse than some of the nation’s most dangerous drugs. However, it would not legalize marijuana outright for recreational use. The agency’s move, confirmed to the AP on Tuesday by five people familiar with the matter who spoke on the condition of anonymity to discuss the sensitive regulatory review, clears the last significant regulatory hurdle before the agency’s biggest policy change in more than 50 years can take effect. Once OMB signs off, the DEA will take public comment on the plan to move marijuana from its current classification as a Schedule I drug, alongside heroin and LSD. It moves pot to Schedule III, alongside ketamine and some anabolic steroids, following a recommendation from the federal Health and Human Services Department. After the public comment period and a review by an administrative judge, the agency would eventually publish the final rule. READ MORE Stock market today: Global stocks are mixed after Wall St tumble. Most markets close for holiday New era for pot regulation leaves old problem: Many cannabis companies can’t find a bank Biden’s historic marijuana shift is his latest election-year move for young voters “Today, the Attorney General circulated a proposal to reclassify marijuana from Schedule I to Schedule III,” Justice Department director of public affairs Xochitl Hinojosa said in a statement. The DEA is a component of the Department of Justice. “Once published by the Federal Register, it will initiate a formal rulemaking process as prescribed by Congress in the Controlled Substances Act.” Attorney General Merrick Garland’s signature throws the full weight of the Justice Department behind the move and appears to signal its importance to the Biden administration. It comes after President Joe Biden called for a review of federal marijuana law in October 2022 and moved to pardon thousands of Americans convicted federally of simple possession of the drug. He has also called on governors and local leaders to take similar steps to erase marijuana convictions. “Criminal records for marijuana use and possession have imposed needless barriers to employment, housing, and educational opportunities,” Biden said in December. “Too many lives have been upended because of our failed approach to marijuana. It’s time that we right these wrongs.” The election year announcement could help Biden, a Democrat, boost flagging support, particularly among younger voters. Biden and a growing number of lawmakers from both major political parties have been pushing for the DEA decision as marijuana has become increasingly decriminalized and accepted, particularly by younger people. A Gallup poll last fall found 70% of adults support legalization, the highest level yet recorded by the polling firm and more than double the roughly 30% who backed it in 2000. The DEA didn’t respond to repeated requests for comment. Schedule III drugs are still controlled substances and subject to rules and regulations, and people who traffic in them without permission could still face federal criminal prosecution. Some critics argue the DEA shouldn’t change course on marijuana, saying rescheduling isn’t necessary and could lead to harmful side effects. Jack Riley, a former deputy administrator of the DEA, said he had concerns about the proposed change because he thinks marijuana remains a possible “gateway drug,” one that may lead to the use of other drugs. “But in terms of us getting clear to use our resources to combat other major drugs, that’s a positive,” Riley said, noting that fentanyl alone accounts for more than 100,000 deaths in the U.S. a year. On the other end of the spectrum, others argue marijuana should be treated the way alcohol is. “While this rescheduling announcement is a historic step forward, I remain strongly committed to continuing to work on legislation like the SAFER Banking Act as well as the Cannabis Administration and Opportunity Act, which federally deschedules cannabis by removing it from the Controlled Substances Act,” Senate Majority Leader Sen. Chuck Schumer of New York said in a statement. “Congress must do everything we can to end the federal prohibition on cannabis and address longstanding harms caused by the War on Drugs.” Federal drug policy has lagged behind many states in recent years, with 38 having already legalized medical marijuana and 24 legalizing its recreational use. That’s helped fuel fast growth in the marijuana industry, with an estimated worth of nearly $30 billion. Easing federal regulations could reduce the tax burden that can be 70% or more for businesses, according to industry groups. It could also make it easier to research marijuana, since it’s very difficult to conduct authorized clinical studies on Schedule I substances. The immediate effect of rescheduling on the nation’s criminal justice system would likely be more muted, since federal prosecutions for simple possession have been fairly rare in recent years. But loosening restrictions could carry a host of unintended consequences in the drug war and beyond. Critics point out that as a Schedule III drug, marijuana would remain regulated by the DEA. That means the roughly 15,000 cannabis dispensaries in the U.S. would have to register with the DEA like regular pharmacies and fulfill strict reporting requirements, something that they are loath to do and that the DEA is ill equipped to handle. Then there’s the United States’ international treaty obligations, chief among them the 1961 Single Convention on Narcotic Drugs, which requires the criminalization of cannabis. In 2016, during the Obama administration, the DEA cited the U.S.’ international obligations and the findings of a federal court of appeals in Washington in denying a similar request to reschedule marijuana. ___ Goodman reported from Miami, Mustian from New Orleans. AP writer Colleen Long contributed. ZEKE MILLER Zeke is AP’s chief White House correspondent twitter mailto JOSHUA GOODMAN Goodman is a Miami-based investigative reporter who writes about the intersection of crime, corruption, drug trafficking and politics in Latin America. He previously spent two decades reporting from South America. twitter mailto JIM MUSTIAN Mustian is an Associated Press investigative reporter for breaking news. twitter mailto LINDSAY WHITEHURST Whitehurst is a national criminal justice reporter for The Associated Press, based in Washington, D.C. She covers the Justice Department, public safety and legal issues. twitter mailto",
    "commentLink": "https://news.ycombinator.com/item?id=40213591",
    "commentBody": "US drug control agency will move to reclassify marijuana (apnews.com)582 points by JacobHenner 16 hours agohidepastfavorite726 comments mannyv 15 hours agoOne major effect of this is that weed stores will be able to use banks and payment processors legally once the regulators catch up. reply ncr100 15 hours agoparentTHEREFORE they will be able to move CASH money out of their stores TO BANKS, resulting in fewer \"smash and grab\" incidents ... aka, \"Hyundai meet storefront of weed shop.\" Looking forward to this, silly to see so many Kia \"boys\" being used for gross violence crimes when regulation changes could lessen it. > https://www.king5.com/article/news/crime/seattle-pot-shop-cr... for example reply NewJazz 15 hours agorootparentThe poor San Bernardino Sheriff's department is going to need a new funding source, too. https://www.latimes.com/california/story/2022-01-28/marijuan... reply pests 15 hours agorootparentprevEvery dispo in my area (Metro Detroit) has concrete pillars surrounding the building, usually every two feet or so. One of the first to open a few years back got hit early and everyone seems to have learned the lesson. reply dexwiz 14 hours agorootparentThose short pillars are called bollards. reply jcims 14 hours agorootparentEvery fan of physics is recommended to look up bollard test videos. reply wallaBBB 13 hours agorootparentAnd one of the best Twitter accounts: https://twitter.com/WorldBollard reply jpsouth 6 hours agorootparent‘I don’t even think it was my fault!’ Well the static, bright yellow pole didn’t waltz into the side of your car now, did it? People are so ignorant it’s actually unbelievable. https://x.com/WorldBollard/status/1781394728899993984 Edit: reminds me of my neighbour who dropped his motorbike because a car pulled out on him from a fuel station. I asked how fast he was going, he said with absolute conviction he was doing no more than 5mph. When I told him that was too fast he couldn’t wrap his head around it. reply squigz 11 hours agorootparentprevI just browsed this far longer than I'd care to admit. reply geph2021 9 hours agorootparentsame :) reply LoveMortuus 2 hours agorootparentprevThis is amazing, made me laugh out loud, have to be careful though, as I'm currently in the office. :D reply nullhole 3 hours agorootparentprevThe gravity of physics always brings me down. (sorry!) reply yuppiemephisto 14 hours agorootparentprevJust did! =) reply schoen 4 hours agorootparentprevWell-known to expert GeoGuessr players as a convenient way to quickly tell what country you're in on a random rural road, as different countries use mysteriously consistent different bollard styles even when their road surfaces are otherwise almost identical. https://duckduckgo.com/?q=bollard+meta reply TylerE 8 hours agorootparentprevThe ones in DC typically seem to be either on 2nd floors or in basements. Security outside at the entrance to the steps. reply Mountain_Skies 7 hours agorootparentThe ones I've seen in the Detroit area seem to mostly be in areas zoned industrial, which typically means single story, stand alone buildings with few \"eyes on the street\". Going to guess Michigan has restrictive zoning requirements for marijuana businesses that keep it out of the public eye. reply justinator 13 hours agorootparentprevI guess the weed can still be stolen reply sambazi 1 hour agorootparentthen again, you can just grow it yourself w/o risk of being shot reply leptons 11 hours agorootparentprevFirst line in your link: >\"The owner says around $15,000 of products and items were stolen from the store.\" It doesn't mention anything about cash. \"Smash and grab\" in weed shops doesn't usually have much to do with having piles of cash sitting around (though I'm sure that might happen too) - it's the product that thieves want to steal because it's got no serial numbers, it's pretty light-weight and easy to run out with thousands of dollars worth of product, and it's easy to resell. If there's any cash in the register that's often secondary to grabbing a few pounds of high-quality product. 3 pounds of high quality weed can be valued at $20k. I doubt there's that much in the cash register at the end of the day, and good luck getting into the safe. It's much easier to run out with 3 pounds of weed. reply pixl97 9 hours agorootparentCash has to leave the building at some point. reply michaelt 1 hour agorootparentUp to the 1990s (and probably still to this day, IDK how electronic payments have impacted this) there was a whole industry dedicated to getting cash off business premises and into banks. For example, banks often had special \"night safes\" allowing small business owners to drop off bags of cash outside of branch opening hours. Some businesses would get daily armoured car visits to collect the day's takings. There were even supermarkets with a system of pneumatic tubes allowing cashiers to transfer money to the back room without leaving their stations, so their tills never had enough cash to be worth robbing. You could also get safes with a deposit slot, so employees could drop the takings into the safe, but didn't have the combination needed to get anything out again. Assuming these all still exist, there are options for keeping cash secure, and getting it off the premises fast. Of course, by similar logic they could store all the product in a safe out of hours. Jewellery stores manage to store loads of diamonds without getting robbed, after all... reply leptons 6 hours agorootparentprevThere's typically far more monetary value in product in any weed shop than there is cash, likely by an order of magnitude. Many of the purchases are done electronically, so there's not as much cash as you might think in most dispensaries. reply ajmurmann 2 hours agorootparentHow are these purchases done electronically if the stores cannot process credit cards? After there dispensaries more commonly using crypto that I don't know about? reply danielscrubs 5 hours agorootparentprevThe poverty and gangster culture is going to stay the same so this seems like a weird kind of social take, I mean wont grifters just find another way to hurt common folk? I mean... I can leave a 2000 USD Macbook for a toilet break in Starbucks over here without any issues and have done so regularly. reply mannyv 14 hours agoparentprevPeople are talking about schedule 3 needing a prescription, etc. From the financial point of view that's irrelevant; the point is that you CANNOT legally sell schedule 1 drugs commercially (with some exceptions that I can't remember). Schedule 1 -> banned from the financial system. Schedule 3 -> OK to use the financial system. How the DEA schedule and the financial system interact is still unclear. The important part is that once regulations are updated weed businesses won't be restricted from access to the financial system. There may be some more regs around that access, but I'm sure they'll be worked around. reply lukew3 4 hours agorootparentIf it has been illegal to sell cannabis commercially, how have cannabis companies been allowed to form and be publicly traded? I would think that federal regulation to be publicly traded would cause issues. reply yurishimo 4 hours agorootparentWhich US based weed companies are publicly traded? reply samtho 13 hours agorootparentprev> How the DEA schedule and the financial system interact is still unclear. You already answered this already :) > the point is that you CANNOT legally sell schedule 1 drugs commercially Schedule 1 means illegal under (nearly) any circumstance, commercial dispensaries fall under “any circumstance.” Drug scheduling is just a tiered system for classification in order to determine which rules to apply to its sale, distribution, and possession of the substance. reply refurb 8 hours agorootparentprev> Schedule 1 -> banned from the financial system. This is not true. Here is a legitimate business selling schedule 1 drugs: https://www.caymanchem.com/product/10801/mephedrone-(hydroch... Regulatory Information: DEA Schedule I With a schedule I DEA license, you can buy this product, and the manufacturer can deposit your money into a bank. That's why I'm not sure moving marijuana from schedule 1 to 2 or 3 will really change much from a banking perspective. Marijuana dispensaries will still be violating federal law, no different than if they were selling sleeping pills illegally. reply mattmaroon 6 hours agorootparentRight. At the end of the day we need to just de-list it and strike all federal laws on it. The ship has sailed and the states won, let’s just do the inevitable thing and get on with it. reply andrewxdiamond 15 hours agoparentprevA lot of them have wiggled around this problem by offering “atms” at the cash register. You pay with a debit card, but it’s not a normal transaction, it’s an ATM withdrawal! I don’t understand how the money is vended to the business, but it keeps it out of the store reply wnevets 15 hours agorootparentThat's a fairly a common practice for cash only businesses, normally a different company is supplying the ATM and its cash. For example I've seen cash only ice cream shops with the same setup. reply mattmaroon 13 hours agorootparentThat's not what he's describing. In this case there actually is no cash or traditional ATM involved on-site. It's connected to the dispensary POS, not a physical ATM. (They often have a regular ATM like you describe also, though.) So you do an ATM transaction, but the money goes to the dispensary somehow. I do not know how it works on the back end, but I've used it as a customer. It's lovely and can even be done over your phone. reply cgriswald 6 hours agorootparentIsn't that how a traditional ATM transaction works? You use the ATM and the money goes to the ATM owner (plus a fee). The only difference here is you get weed instead of cash. reply wnevets 12 hours agorootparentprevOh interesting. Does it appear on your end as a cash advance when using a credit card? reply andrewxdiamond 12 hours agorootparentNope. ATM withdrawal. My bank even reimburses the ATM fee associated with it reply czscout 12 hours agorootparentAn ATM withdrawal with a credit card is a cash advance. reply andrewxdiamond 11 hours agorootparentOh my bad, read the question wrong. They just don’t support CCs. Debit only reply swalling 15 hours agorootparentprevYes this seems to be increasingly common, at least on the west coast. The suboptimal part is that the buyer typically gets hit with an out-of-network ATM fee for doing this, so the consumer is paying $2-5 for processing per transaction. reply ghaff 15 hours agorootparentThat’s pretty small potatoes though compared to going to a bank yourself and making a transaction for cash you don’t normally have around. Maybe there’s an ATM down the block but that’s not the case for many people. reply filoleg 14 hours agorootparentAnd those ATMs around the block from a dispensary (or even in the same buildimg) would still charge a fee for withdrawal anyway (as they are always a third-party ATM and not a bank one, so you get that big message on the screen about an extra fee for withdrawal). reply garciasn 14 hours agorootparentprevUse a credit union or bank that doesn’t charge ATM fees; that’s what I do. Any CU-related ATM withdrawal is always free and I get 10 ATM withdrawals a month with fees reversed. reply hinkley 4 hours agorootparentAlmost all CUs use the same company to provide the ATM network. The fees between them get zeroed out in part because the transaction stays in house. It’s probably better to say “nearly all CU withdrawals” because they don’t have a perfect monopoly. reply hunter2_ 14 hours agorootparentprevUnlimited fees reversed with Schwab checking. No monthly fee to figure out how to avoid, either. reply ada1981 13 hours agorootparentSo they just eat the fees? reply hunter2_ 11 hours agorootparentYes, even exorbitant ones like on a cruise ship or casino. Free checks, too. And mutual funds with lower fees than Vanguard. But virtually no physical branches (most locations are brokerage offices only) so not ideal for depositing cash or getting a cashier's check... use something else for that. reply CydeWeys 10 hours agorootparentprevThey eat the fees because operating physical branches is much more costly still. And if you're truly abusing it and costing them massively with fees, they can always close your account. reply toomuchtodo 15 hours agorootparentprevYou can use a brokerage account that reimburses atm fees. reply kstrauser 14 hours agorootparentOr a credit union. reply zoklet-enjoyer 10 hours agorootparentOr some banks reply hirsin 10 hours agorootparentprevBusiness 2 owns the building and the atm, renting it to business 1, the dispensary. B1 pays the cash as rent to b2 who puts it into the ATM again. A SWAG but it's common enough in other business setups to alter costs as I understand it. reply bobthepanda 15 hours agorootparentprevthere is still a lot of cash on site due to the presence of an ATM though, and in the cash registers. the primary problem is that weed shops are incredibly attractive robbery targets due to being one of the few businesses in 2024 that handle large amounts of cash. reply filoleg 14 hours agorootparentOften enough, it isn’t an actual ATM. You pay at the counter like you usually would using a card or an NFC payment method (e.g., Apple Pay), but the payment reader processes it as an ATM withdrawal transaction (hence an extra transaction fee of a few dollars). There is no physical cash involved at any point in this (at least not on the dispensary premises). reply bobthepanda 13 hours agorootparentMaybe this is a state by state thing? I have never observed this in WA. reply mikestew 13 hours agorootparentI've heard Origins in Redmond does this, IIRC. But I believe that to be the exception, not the rule. reply neilv 12 hours agorootparentprevIs the payment service operating in a regulatory gray area or loophole? reply BobaFloutist 14 hours agorootparentprevSure, for people that want to pay 5$ more for every transaction. Probably a good number of people don't. reply Vegenoid 14 hours agorootparentWhere I’ve been, they round up to the nearest multiple of 5, and the extra you pay is kept as credit on your account towards future purchases. reply millzlane 11 hours agorootparentThat's kinda shitty. They just give us the 5 back cash. reply CydeWeys 15 hours agorootparentprevI think the ATM isn't actually dispensing cash. You're doing an ATM transaction for a certain amount of money, but what you're actually getting is weed. It's not just \"You can buy with cash, and we conveniently have an ATM available to get cash if you didn't go to your bank.\" reply mikestew 13 hours agorootparentIt's not just \"You can buy with cash, and we conveniently have an ATM available to get cash if you didn't go to your bank.\" I have heard from a very reliable source that the ATMs in most weed shops on the Eastside of Seattle dispense cash because you're going to be required to pay with cash at the counter. There are allegedly a few exceptions, but the majority of shops accept only cash and the ATM dispenses bills. reply hughesjj 13 hours agorootparentOut of the 15+ SWIM has been to in WA state, SWIM has never seen a dispensary take anything but physical cash (bills and coins). reply 14u2c 13 hours agorootparentprevNope, it's just a regular ATM operated by a 3rd party company. You get cash from it then give them the cash. The store will also often reimburse for the ATM fee. reply CydeWeys 10 hours agorootparentNope, see other comments. My interpretation is correct. reply mattmaroon 13 hours agorootparentprevMy brother supervises at a dispensary. They are not attractive robbery targets at all. They have a lot of security. Like a bank, they expect the amount of cash would bring trouble if they were not prepared. Unlike a bank, they don't dispense much cash (just petty change) so they don't even have to leave much in the drawers, which are emptied frequently and dropped into a safe nobody there can access. They have cash-handling processes similar to a casino, but again, they have much less than a casino or bank to take. Employee theft is a much bigger problem than robbery, because you can imagine who works at them, but even then, it's hard to get away with. You'd be much better off robbing a busy gas station or the like. reply chimpanzee 12 hours agorootparent> Employee theft is a much bigger problem than robbery, because you can imagine who works at them This is lazy thinking. Any business dealing in cash and desirable inventory will have theft problems. In fact, the inventory doesn’t even have to be desirable. Consider office supply theft. It’s rampant; a cost of business to some degree. And part of the motivation is simply the righting of perceived wrongs. Employees will always take from their employers, in every industry and at every class level. In industries where there are no “things” to take, the employees simply take back their time. reply yogurtboy 12 hours agorootparentprevThat dig at employees of dispensaries is really low reply millzlane 11 hours agorootparentI've known directors to steal from companies so the stereotype doesn't really jive. reply flawsofar 13 hours agorootparentprev> you can imagine who works at them This is disgracefully elitist. White collar crime hurts more people. reply mattmaroon 9 hours agorootparentI see why you would say that, but you probably have not met very many people who work at a dispensary, I have. My brother got promoted to supervisor in a month for the simple reason that he is the only person who could wait until after work to get high. He’s told me quite a bit of what goes on there, and I am sure different dispensaries are different, but in any state where it is relatively recently legalized and there aren’t that many, it’s just the biggest stoners working there. You would have to be kind of special to decide to steal things with that much security around, they always get caught reply flawsofar 7 hours agorootparentI as a customer an hour ago had a long conversation with a friend I made behind the counter. Some software engineers do partake of the weed. So yeah I’ve met them. Tattoos, piercings? They’re just people. Getting high isn’t a sign of larceny reply mattmaroon 6 hours agorootparentI didn’t say it was. I just said employee theft is a bigger problem than robbery. reply kelseyfrog 4 hours agorootparent> you can imagine who works at them You might want to be more careful then. This empty space is a well known rhetorical device used to allude that you're making a negative judgement about people. reply DonHopkins 3 hours agorootparentprevWhich is why if you want to steal from dispensaries, just work in security, like your brother. Who's to say he's not stealing, and simply not bragging to you about it? reply dragonwriter 7 hours agorootparentprevThe federal illegality of the weed business (and downstream effects of that illegality on working/business conditions) affects who works there, and that includes white collar employees (also investors, etc.) reply Spivak 12 hours agorootparentprevGolden rule of customer service is you can not demand service while simultaneously degrading the people who provide it to you. reply leptons 11 hours agorootparentprev> the primary problem is that weed shops are incredibly attractive robbery targets due to being one of the few businesses in 2024 that handle large amounts of cash. It's also the product that's the target much of the time - it's got no serial numbers and it's light-weight, and easy to resell. reply ethbr1 15 hours agorootparentprevSigns that times are a' changing -- you can buy illegal drugs with a card now. (Call me crazy and old-fashioned, but I don't think I'd want 50+ illegally-correlated transactions on my financial record that the government could lump into other charges...) reply coffeebeqn 15 hours agorootparentDo they have jurisdiction to go and do that? reply ethbr1 14 hours agorootparentIf you get hit with a federal charge and they care enough, federal prosecutors can absolutely dig into your financial records. That said, I imagine it would only get done if they really wanted to throw the book at you... reply biomcgary 14 hours agorootparent\"For my friends, everything. For my enemies, the law.\" reply mattmaroon 13 hours agorootparentprevThe Silver Platter doctrine prevents your financial institutions from handing over that data unbidden, but they can do so by request from law enforcement. reply denimnerd42 14 hours agorootparentprevsure they do. for example it's illegal to be in possession of marijuana and a firearm. the purchase of said MJ would be pretty good evidence that could lead to other warrants. That's the Hunter Biden gun charge. reply beaeglebeachh 14 hours agorootparentIt's oddly not. Only to be a user or addict with a firearm. IIRC if you just like the way weed looks in your hand that doesn't make you a user, and there's plenty of reasonable doubt you're guarding it for grandma or whoever. Of course people are still being convicted of weed and firearm, but it gets recorded as gun law violation and nobody cares, cuz left hates guns and right hates weed, so they'll never repeal it. reply int_19h 10 hours agorootparentThe worst part is that the states are quite happy to help the feds enforce this. E.g. Hawaii has both mandatory gun registration and requires a state-issued license for medical marijuana. And if you happen to have both, well: https://www.leafly.com/news/politics/surrender-your-guns-pol... It should also be noted that while DEA is instructed by the executive to not go after cannabis users in states where it's legal for recreational use, there's no equivalent directive issued to ATF. reply somenameforme 5 hours agorootparentprevWhat you're saying is how people generally think the law works, but it's not how it works in practice. This is easily illustrated with possession of drug paraphernalia charges. There's two types of possession, actual and constructive - but both face the exact same charge. Constructive just means something like 'could be reasonably accessed.' So imagine you're in a car, get pulled over, it smells of weed so the cop executes a search, and he finds a pipe in the glove compartment. You're getting arrested for PDP there 100%. Even if it genuinely wasn't yours, you stand very little chance of acquittal. Beyond a reasonable doubt doesn't mean 'is there some other viable explanation' because there literally always is. It means is it reasonably likely that one of these other explanations is what really happened. reply denimnerd42 14 hours agorootparentprevoh fair enough about the \"user\" vs possession. but my point was they could possible use this info to get a warrant to surveil you to catch you using it. reply beaeglebeachh 14 hours agorootparentThey don't need that. I was served a federal search warrant after a detective wrote an anonymous officer claimed an anonymous DOG accused me of wrongdoing. When 3rd order anonymous interspecies hearsay is sufficient for a warrant it means a warrant is just a rubber stamp. reply denimnerd42 14 hours agorootparentfair. its not hard to get a warrant. but your info in the database could still make you a target reply vkou 13 hours agorootparentprevEven a rubber-stamp warrant process serves a point, by making the police identify who they are targeting, as opposed to targeting everyone, and deciding who to charge after the fact. Warrants aren't supposed to be hard to get. They are only supposed to stop the most blatant fishing expeditions. reply zoklet-enjoyer 10 hours agorootparentprevThis is why I'm going to buy a gun to celebrate marijuana moving to schedule 3 reply JojoFatsani 10 hours agorootparentprevExcept they’re legal drugs reply somenameforme 5 hours agorootparentReclassified, not legalized. As per the article it will now be classified along anabolic steroids, ketamine, and other such things. reply reshie 9 hours agorootparentprevWhich most take off the couple of bills for processing fee's. reply NewJazz 15 hours agorootparentprevDoes it actually keep cash out of the store? They might just have to keep track of it at the back of house still. reply justsomehnguy 14 hours agorootparentyou answered it yourself reply loeg 15 hours agorootparentprevThe ATM is usually registered to a different business around the corner or something like that. reply bregma 14 hours agoparentprevThat's so sad. Here in Ontario Canada I can walk into a local neighbourhood cannabis store (one of many on every block, it seems) and make a purchase using my debit or credit card. I'm not sure if any of them even keep a cash float although I imagine they must, just in case granny comes in \"for medicinal use\". Alternatively, I could just go to the government-run web store and get home delivery through Canada Post at no extra charge. reply dgellow 4 hours agorootparentI’ve done it in New York City, in a really clean and hipstery shop in park slope, Brooklyn. Paid with a debit card, the whole process felt legit and professional, that was a great experience. They also offered really fancy teas and coffees. reply oooyay 14 hours agorootparentprevYou can in the U.S. too. For instance, in Portland we have a neighborhood shop and you can use a debit card there because each transaction is classified as an ATM transaction. All the ban ever did was making accounting and reporting more complicated, it didn't stop state legal sales or transactions. reply jkaplowitz 14 hours agorootparentThe difference is in Canada it's actually fully legal at all levels of government, so the transaction is a normal point of sale transaction, it can also go through a credit card as a normal purchase without being subjected to the expensive cash advance interest rates, and so on. It can even be a tax-deductible and reimbursable business entertainment expense under similar conditions to alcohol. reply bawolff 13 hours agorootparentIts super weird how america can make things half legal. In canada the responsibilities are divided up between different levels of government. None of this legal at one level but not another level bullshit. reply dghlsakjg 11 hours agorootparentThe same is true in Canada. There are things that are federally illegal that are not illegal at the provincial level. There are also local laws that supersede federal law. E.g. There is no federal law against woodburning for home heat, but many local jurisdictions have banned it for air quality reasons, and provinces also have pollution laws. You can have something be illegal in one town, and legal outside of it, or illegal province wide but legal in another province. What is going on is that not that weed is 'half-legal' in the states. It is fully illegal. What is true is that the federal enforcers have more or less decided to leave people alone when the state allows the use of Marijuana. Pre 2017, the exact same thing was happening across Canada where local jurisdictions allowed cannabis use and sales, and the RCMP basically turned a blind eye. Vancouver is the most obvious example, where there was actually a decline in the number of dispensaries after weed became federally legal. reply bawolff 7 hours agorootparent> There are also local laws that supersede federal law. E.g. There is no federal law against woodburning for home heat, but many local jurisdictions have banned it for air quality reasons, and provinces also have pollution laws That's not what supersede means. There is no federal law about wood burning stoves because the constitution assigns environment to the provinces. reply dghlsakjg 5 hours agorootparentIf environment is assigned to the provinces then what is the Canadian Environment Protection Act https://www.canada.ca/en/environment-climate-change/services.... AFAICT it’s the federal laws about pollution. reply AnthonyMouse 12 hours agorootparentprevIt was supposed to be that way in the US but then populists decided they wanted the federal government to do all the things the constitution said it couldn't. reply callalex 12 hours agorootparentprevIt’s easier to pull this off when the number of states fits on one hand. reply pempem 12 hours agorootparentprevExtended banking services are difficult. Finding a fdic insured bank that will do business with a dispensary is hard. The business, esp those that aren't already multinational or national conglomerates with enormous amounts of cash This is really exciting to see. reply singleshot_ 10 hours agorootparentWill US Bankruptcy Court deal with a debtor that sells weed? reply dragonwriter 7 hours agoparentprevWill they? Since it will be Schedule III, “weed stores” that aren't pharmacies distributing properly labelled drugs to people with prescriptions will still be violating the Controlled Substances Act and will probably have the same banking problems. reply sambull 6 hours agorootparentI don't see how this anything but a mandate for the DEA to crack down on recreational. reply dragonwriter 6 hours agorootparentI don't see how rescheduling to a less-restrictive category is a mandate to change the existing enforcement policy to a more restrictive one. reply meepmorp 38 minutes agorootparentObviously, weed has made OP paranoid reply LgWoodenBadger 14 hours agoparentprevI guess, but have you tried to gamble online using a CapitalOne mastercard? It's impossible. Your only recourse is an ACH transfer. reply giantg2 14 hours agoparentprev\"One major effect of this is that weed stores will be able to use banks and payment processors legally once the regulators catch up.\" Assuming banks/processors don't decide to restrict them for other reasons. reply feoren 14 hours agorootparentWouldn't that be leaving money on the table? The bank that accepts business with marijuana vendors is at a competitive advantage to one that doesn't, no? reply giantg2 14 hours agorootparentNot necessarily. It depends on the risks, morals, and stuff like ESG. We've seen this with stuff like alcohol, tobacco, and guns. reply anigbrowl 10 hours agorootparentThere is no liquor store in the country where you can't pay with a card. Well, maybe not Uncle Ted's Moonshine Shack, but realistically it's not something anyone has to worry about. Different funds may not invest invest in those thing, payment processors might charge some businesses a slightly higher premium, but Visa/MC are not gonna police your legal consumer purchases. reply dghlsakjg 13 hours agorootparentprevBut you can buy alcohol, tobacco and guns with just about any payment method? reply ryandrake 12 hours agorootparentPorn and gambling are probably better examples. They're kryptonite to payment processors due to the chargeback risk. reply ajmurmann 2 hours agorootparentGambling is actually illegal trough, no? AFAIK porn is the only proper example reply Jiro 2 hours agorootparentprevhttps://en.wikipedia.org/wiki/Operation_Choke_Point reply hyperbovine 13 hours agoparentprevBut will they be able to write off business expenses? Section 280E of the US Tax Code is, as I understand it, is the major killer for the whole industry right now. Edit: yes https://www.duanemorris.com/alerts/tax_implications_reclassi... reply coffeebeqn 15 hours agoparentprevHopefully this will also help internationally. Many countries are just copying what the US is doing since they run a large part of world commerce and finance reply beaeglebeachh 15 hours agoparentprevHow? It's still federally illegal to sell schedule 3 to consumers without a DEA licensed rx and dea licensing. The banks would still be knowingly in conspiracy to transmit illegal drug money and a litany of felonies for recreational or purely state-licensed 'medical'. reply mannyv 14 hours agorootparentYou can sell schedule 3 drugs to consumers. Pharmacies do this all the time. reply beaeglebeachh 14 hours agorootparent'without a DEA licensed rx and dea licensing' Rx under DEA scrutiny is nothing like rec or laughable state controlled medical 'recommendations'. You pull that shit as a provider on controlled scripts and your charts get audited, your DEA license gets pulled. reply jkaplowitz 14 hours agorootparentBut it does mean that it will actually, for the first time ever in living memory, be possible for someone to fully federally legally possess a THC-active form of cannabis without further Congressional action. I'm not sure if a state-legal cannabis supply chain could be fully federally legal in this context, but imagine if a pharma company goes through the FDA approval process for a THC pill and then doctors prescribe it for patients based on their medical judgment that it will help alleviate pain for some chronic condition like Crohn's disease. (I expect both of those steps to happen in practice, over time of course due to how many prerequisites exist for FDA approval, to the extent they haven't already been begun.) Imagine a noncitizen in that situation being able to tell a border officer, or a citizen being able to tell a security clearance investigator: \"Yes, I do use THC. Here's my prescription and the bottle from the pharmacy.\" and being confident of no negative repercussions. Wonderful progress compared to where we are now. reply cogman10 13 hours agorootparent> for the first time ever in living memory My parents are still alive and they were alive when THC was legal. This is what's bonkers to me, THC being criminalized happened very recently. reply beaeglebeachh 13 hours agorootparentVery briefly. Until recent history the 10th amendment was understood to constrain the government from going outside enumerated powers, like intrastate commerce. This is why they needed an amendment instead of law to federally outright ban alcohol. Thus weed had an essentially unpayable 'tax' that got overturned by Timothy Leary Then it was legal for like a year until feds realized they didn't need to follow the Constitution and they just outright made it illegal, no matter if it's actually interstate. reply beaeglebeachh 14 hours agorootparentprevAgree with the sentiment but isn't legal marinol roughly fulfilling that niche of THC pill? You could already get THC script, in that context this seems like a half hearted concession for flower to stall and poison legalization efforts by giving a victory poisoned with DEA licensing that inserts the nasty tendrils of the weed hating DEA into medical flower. reply shkkmo 12 hours agorootparentprev> it will actually, for the first time ever in living memory, be possible for someone to fully federally legally possess a THC-active form of cannabis without further Congressional action. Interesting point of history, the Federal US Government has actually been running a small medical program for almost 50 years. https://www.mpp.org/policy/federal/federal-governments-medic... reply int_19h 10 hours agorootparentprevI think the point is that banks are no longer automatically required to reject any customer that deals with weed, because some of those transactions are going to be legal under the federal law. Which basically allows them to look the other way for all such transactions. reply lightedman 7 hours agorootparentprev\"'without a DEA licensed rx and dea licensing'\" I know of several grocery stores without pharmacies or a local Rx license selling 1% hydrocortisone/hydrocortisone acetate - Schedule 4, 3, AND 2, simultaneously. reply refurb 5 hours agorootparent1% hydrocortisone, at least in the US, is not a controlled drug not do you need a pharmacy license to sell it. No different than buying Tylenol at a gas station. reply m463 11 hours agoparentprevI wonder if this means more tracking of drug purchases. Does alcohol consumption show up on credit card bills and filter back to insurance companies? reply markdown 11 hours agoparentprevDon't be so sure. Kava is regulated by the FDA as a food, but many banks and payment processors refuse to work with businesses that sell it. reply defiamazing 15 hours agoparentprevI don’t get why they don’t just use Bitcoin or Ethereum. reply kstrauser 14 hours agorootparentMainly because your employees, suppliers, and landlord have no desire to be paid in Bitcoin. reply AnthonyMouse 12 hours agorootparentWhat does that matter? You can convert Bitcoin into cash. But then you can do that in an undisclosed location at your leisure instead of keeping a mountain of cash in your publicly advertised storefront location and becoming a huge robbery target. Also, it doesn't seem like it would be that hard to find someone to accept it as payment, since they can convert it to cash too. And the sort of landlords/suppliers/employees willing to do business with a dispensary seem like exactly the sort who would accept Bitcoin. reply kstrauser 11 hours agorootparentAll of the legit Bitcoin-to-cash orgs will report that to the IRS, and then you're back to square one: what do you do with that wad of cash? Orgs that don't report to the IRS probably aren't giving you a good exchange rate, and you're still left holding the bag afterward. If you're going through all that hassle, it's much easier just to be a cash-only business in the first place. reply AnthonyMouse 11 hours agorootparent> you're back to square one: what do you do with that wad of cash? Keep it in a safe somewhere undisclosed instead of a retail storefront everybody knows is holding a ton of cash, or spend it. The point is that it moves the cash from the publicly visible location to somewhere nobody knows to rob. reply buildsjets 11 hours agorootparentprevNo sane person uses Bitcoin as a currency because it is a fundamentally unsound ponzi scheme for suckers. I don't want my salary to be subject to the vagaries and manipulations of the Bitcoin exchange rate. reply emptysongglass 4 hours agorootparentThere are plenty of sane people who use Bitcoin as a currency. Making blithe moral declarations like this doesn't spark curiosity and is incredibly tired after so many years (you're not the first). \"Unsound ponzi scheme\" could just as well be applied to any fiat currency. It has all the same rules (early entrants are more privileged in \"the game\" and can invest to out-perform younger players). It is very odd to hear people applying such qualitative judgments like this when the alternative is a currency that is actively debased by its issuers. Or do you think the inflation we've all suffered under isn't a problem? reply AnthonyMouse 11 hours agorootparentprevIf you don't want to hold Bitcoin or be exposed to price changes, you can set your hourly rate in dollars, be paid at the current exchange rate and immediately convert it back into dollars. The advantage of this over being paid in physical cash is that it's electronic and then you're not carrying two weeks salary in physical cash on your person for somebody to mug you. reply anigbrowl 10 hours agorootparenttwo weeks salary in physical cash How expensive do you think weed is? You can get baked every day for two weeks for $50, probably less reply AnthonyMouse 55 minutes agorootparentWe're talking about their employees, not their customers. If you can't get a bank account, you can't pay employees with direct deposit. reply tensility 10 hours agorootparentprevYes, and the drooling Bitcoin fans also haven't been able to figure out that a speculative meme \"investment\" vehicle doesn't make a good vehicle for a stable currency. reply dghlsakjg 11 hours agorootparentprevSo if I as a consumer want to buy weed: I show up and convert cash to bitcoin, presumably losing some of its value to exchange fees. Pay the merchant my bitcoin, who then has to convert it back to cash losing more of its value to fees so that he can pay all of his staff, suppliers, utilities, etc... Why not just skip the bitcoin step and save time and money? reply AnthonyMouse 10 hours agorootparentBecause you don't have cash to begin with, you have money in a bank account, which you have to convert to something else to pay the dispensary. Converting it via cash instead of Bitcoin just makes it easier for you to be mugged. reply dghlsakjg 9 hours agorootparentTo be honest, I’m far more concerned about crypto scams, wallet hacks, etc, than I am worried about getting mugged for ~$100 at the dispensary parking lot. reply AnthonyMouse 40 minutes agorootparentThat seems like a weird set of priorities? If someone hacks your crypto wallet with $100 in it, you could lose $100. If someone mugs you when you have $100 in your wallet, you could lose $100 and get shot. Crypto scams are... completely unrelated? It's like being worried about using a bank account because there are ponzi schemes that use bank transfers. reply paulddraper 11 hours agorootparentprevAnd for all that convenience, each BTC transaction costs only $7 ! reply AnthonyMouse 11 hours agorootparentSo use Bitcoin Cash or any of the other alternatives with lower transaction fees. reply dghlsakjg 10 hours agorootparentThe transaction fee for a cash transaction is $0 and no time for the consumer. That is the benchmark you are competing against. reply AnthonyMouse 10 hours agorootparentCash transactions require you to make change and are a target for theft. This is neither free nor zero time. reply dghlsakjg 10 hours agorootparent> Cash transactions require you to make change and are a target for theft. This is neither free nor zero time. That's why I specified \"for the consumer\", who is typically the person that is going to make a purchasing decision. Using crypto for dispensaries has been tried, and it hasn't gained traction in the many years that its been an option. If you introduce friction (by forcing people to transact using a novel payment form), you are going to lose customers. The fact that the very few dispensaries that accept crypto continue to accept cash and debit should tell you what consumers like. reply AnthonyMouse 45 minutes agorootparent> That's why I specified \"for the consumer\" It takes the same amount of time to make change for the consumer as the store. Or more, because now you have to wait while they make change for the person in front of you, then for you on top of that. And nobody wants to be at a store which is more likely to get robbed. Not only do you lose your cash, you could lose your life. > The fact that the very few dispensaries that accept crypto continue to accept cash and debit should tell you what consumers like. There are multiple consumers. If you can get half of them to use Bitcoin, you have half as much cash on hand to lose in a robbery, and on top of that half as much incentive for someone to rob you to begin with. reply callalex 12 hours agorootparentprevNobody wants to stand around for several minutes waiting for transactions to clear. reply ErikBjare 3 hours agorootparentEthereum average block time is 12s (with low variance) and high chance of getting tx included in the next block. Still too long for a point-of-sale payment, but its feasible. Then there's fees that are too high on L1 (several dollars minimum). L2s fix this (~immediate settlement, cents in fees), but it's another layer and another account for users to manage (which is annoying). reply DonHopkins 2 hours agorootparentprevThat's just because crypto shills just don't get obvious facts about reality, not because obvious facts about reality aren't objectively and provably true. That's just the way cults and get-rich-quick pyramid schemes and fraud work, so stop being a shill and wondering why nobody believes or respects you, because there's a lot you don't get. reply CyberDildonics 8 hours agorootparentprevThose two specifically have super high transaction fees which basically kills their use as normal currencies. https://bitinfocharts.com/comparison/transactionfees-btc-eth... reply mr_spothawk 13 hours agorootparentprevBecause you can't yet purchase electricity/internet with bitcoin (directly). reply andrewxdiamond 16 hours agoprevWeed being illegal on a federal level has had some interesting effects. Because of these laws, all legal weed has to be grown, processed, and retailed within a single state. So much industry and local employment has been created by the legal barriers in place. It’s probably still a net positive to release the federal restriction, but I hope all these small/mid sized businesses don’t get gulped up by big tobacco or other mega corps reply sokoloff 13 hours agoparentIt's sometimes even smaller than states. Many waterways are federal, meaning islands have to grow their own in order to avoid having to transport weed from one part of the state to another part of the same state across a federal waterway. reply joecool1029 14 hours agoparentprev> I hope all these small/mid sized businesses don’t get gulped up by big tobacco or other mega corps Calling it: CVS and Walgreens will move into the medical market for this. You think these little shops will be able to process health insurance payments when that sector gets in on it? lol reply hn_version_0023 14 hours agorootparentYou described a worst-case scenario. I’d rather smoke Marlboro Greens, and I promised myself 20 years ago I’d never spend another penny with them. reply konfusinomicon 14 hours agorootparentthe marlboro man has traded in his horse and cowboy hat for some natty dreads and a gravity bong. Joe Camel now sports a wook blanket and a heady crystal wrap. can't wait to see what the overly happy and diverse Newport pleasure party goers have adopted reply selimthegrim 7 hours agorootparentYou must not have seen the same Newport ads I did reply DonHopkins 2 hours agorootparentprev\"You've come a long way, dude.\" reply shicholas 10 hours agorootparentprevlol reply HeyLaughingBoy 14 hours agorootparentprevLOL @ Marlboro Greens :-) They'd be insane to not go with that name. reply jeffwask 14 hours agorootparentprevMarboro Green with 200 hundred additional chemical additives for your enjoyment. reply hughesjj 13 hours agorootparentAka the 'backdoor removal of social security' reply hollerith 14 hours agorootparentprevI bet that in the US, no health insurer will ever pay for an insured person's marijuana. reply SoftTalker 12 hours agorootparentI agree it's unlikely. THC may have some medical uses, but smoking it certainly does not. Perhaps gummies/edibles would be covered under some circumstances -- but to be a prescription or even an OTC \"medication\" it has to go through FDA approval to demonstrate efficacy and document the side effects, and it will have to be manufactured to pharmaceutical standards of potency and purity, which will make it more expensive. I think it will most likely be like alcohol: sold for recreational use, age-restricted, and not medical. reply int_19h 10 hours agorootparentprevI bet that CBD will be covered very quickly, because it really does work very well for so many things, so it shouldn't take long to have enough studies clearly in support of it. reply hollerith 9 hours agorootparentAre there strains of marijuana high in CBD but almost absent of THC? reply int_19h 6 hours agorootparentI'm not sure exactly how this works, but you can get CBD as pills with no THC in them. (Although anecdotally the best results are obtained from taking mostly CBD with a tiny bit of THC; it appears that the latter does something that makes the former's effect more potent. So you see stuff like e.g. 20:1 CBD:THC pills around - can't get high on that, but very effective at pain management. However pure CBD pills are still more common.) reply Red_Leaves_Flyy 7 hours agorootparentprevYes but the trick is mostly just harvesting early. reply grugagag 8 hours agorootparentprevYes reply Invictus0 14 hours agorootparentprevI'll happily take the other side of that bet. reply gwbas1c 11 hours agorootparentprevI could see them carrying CBD in pill / gelcap form. (It pretty much snuffs out my migraines.) I don't think they'll carry intoxicating forms of marijuana, though. (I've never seen a CVS with alcohol, but that could be because of how my state handles liquor licenses.) reply joezydeco 9 hours agorootparentCVS in Illinois definitely sells liquor. They seemed to switch to it around the same time they publicly announced they wouldn't sell tobacco anymore. reply adventured 11 hours agorootparentprevWalgreens sells cigarettes, cigars, basic alcohol (beer, wine, hard seltzers etc), occasionally liquor, nicotine patches & packets, and snuff. They sell OTC Narcan, and now OTC birth control. They moved into the last two items pretty much immediately upon availability. They'll definitely look at their options for the marijuana business as they can safely do so legally. reply stevenwoo 13 hours agoparentprevThis discrepancy had the effect of jump starting the prominence of large chinese gangs in the marijuana and fentany and money laundering business in the USA, incidentally contributing to home shortage because they bought homes in California to grow pre pandemic and in Oklahoma now. There’s lots of older articles about California but some recent OK news https://www.kosu.org/news/2024-03-18/gangsters-money-and-mur... reply squigz 10 hours agorootparentInteresting use of italics reply stevenwoo 9 hours agorootparentI thought it was of most relevance that gangs stepped in when the comment I was responding to was more concerned with larger companies and them being Chinese is a weird detail since one would have expected one of existing gangs in USA already like those with central or South American cartels instead. reply RankingMember 15 hours agoparentprevIt's also made touching the financial aspect radioactive- none of the big credit cards want to have anything to do with it so all transactions are cash, which makes things more difficult/risky for operators. reply ehsankia 15 hours agorootparentAlso made research very hard too. reply ethbr1 15 hours agorootparentThe research component seems the biggest boon from this. I assume Schedule III is much easier to get approved for. Which in turn will increase the number of studies. Which will in turn provide more support for eventual legalization. Research being blocked (often by the DEA) was one of the biggest hold-ups. reply cryptonector 14 hours agoparentprevUnder Wickard even all-in-state marijuana trade would still fall under the Interstate Commerce clause and be subject to federal criminal statutes, regulations, and taxes. reply giantg2 14 hours agorootparentYep, some people tested this same theory out for firearms (or was it suppressors?) all produced and sold in one state in accordance with state laws. Of course the Feds shut that down and the courts agreed. The only reason they don't do this with pot is because they don't feel like it. reply cryptonector 13 hours agorootparentI believe that case is not resolved yet. reply giantg2 9 hours agorootparentMaybe it was the other case from that same state where they said state law enforcement couldn't assist the feds in enforcing federal gun laws. reply AuryGlenz 3 hours agorootparentprevMy one big Supreme Court wish is that Wickard gets shot down. I could actually see it happen with the current court. reply eyelidlessness 15 hours agoparentprevA couple quick thoughts, having worked in the legal cannabis industry (now a few years out): - Consolidation is already happening in a lot of ways, in some cases despite state laws designed to prevent it - Consolidation by big tobacco seems less likely than probably other major industry incumbents (in the long run, I’d bet on companies primarily oriented around alcohol) - Federal posture since Cole (when first states legalized recreational, partially rolled back under Trump/Sessions but seemingly not as much as was feared at the time) is largely what prompted strong local laws; it’s based in analysis of interstate commerce; federal legalization could have a similar analysis without undermining existing strong local laws; the tradeoff would probably be large disparity of justice between states (on party lines) - A much better outcome would be a central rule not just to legalize, but to more strongly incentivize justice for people affected by draconian laws in the first place. This is a pipe dream, but it should be the focus because any compromise will start with that. reply omgCPhuture 14 hours agorootparentTobacco smoke killed ALL my grandparents, well, well one of them would have died from alcohol use, as he was a fisherman and they drink a lot. My uncle died from liver and bowel cancer, the liver cancer stems from alcohol consumption, or rather it's metabolite, acetaldehyde, which is _scary as hell_: It makes cancerous scar tissue of whatever it touches, thats why alcoholics die from liver failure: it becomes all scar tissue and cannot regenerate, which is part of its function (the average adult has a liver 3 years of average age). It is also what gives the alcohol buzz. He was not a heavy drinker, but only drank wine and aqua vit/liquor, 1-2 times a year he would get shitfaced -- he was a funny drunk. I miss him. I miss all my grandparnts, they were the best and did not deserve Emphysema , lung cancer and so forth. Grandma taught me soldering, welding, basic ircuitry, how to ride a bike, composting, growing veggies, all about berries in the wild and helped me save up for my Nintendo NES,encuraged mt curiosity...I would beat the crap out a tobacco exec if I crossed paths with one, a part of me wants to torture them. I smoked for 15 years, turns out quitting was easy, once you undestood the way the addiction works, but nobody considers that they developed oral fixation from sucking on a potennt noootropic habit forming substance all day, But then we have Silvy Listhaug (politician): Marijuana will continue to be banned because she is a mom, she told the reporter photographing her smoking cigarettes. I hope she gets lung cancer. Personally, as a monkey with a lump of fat in my head called a brain, I think drinking fat solving solvents are a bad idea for that reason alone.fMRI scans shows white brain tissue in drinkers literally dissolves over time. The increase in marijuana use is mostly due to 3 factors: * Nobody is hiding anymore. * We become more people every day. * More & more people realise alcohol sucks. The UK and CAnada's offcial stance on alcohol is that there is no such thing as a safe amount of alcohol consumption. The war on drugs is going well in Norway: Cocaine & MDMA purity averages above 80%, Racemic amphetamine is cheaper than hash now, and the hash is good as anything you can find in dutch coffeeshops. ..and it is all getting cheaper at the same time. The war is being lost so bad the police have stopped issuing Narcotics stats 2 times a year as mandated and dropped it to once a year. Last year crystal meth averaged over 99% purity, 99.2%-99.6% according to Kripos Crimelab!! 5000 mafia families in Europe alone funds their organized crime with proceeds from the artificially high price of cannabis caused by the ban, legalizing and taxing it resoanbly would snuff out those and would be a massive blow to organized crime. GHB is fueling a rape epidemic here. Oh and you can legally buy poppy seed and grow them here... reply jjulius 12 hours agorootparent... what? reply RobRivera 16 hours agoparentprev'Time for them to perform due diligence and refactor their operations to take advantage of the new legal landscape to retain competitive pricing inorder for' all these small/mid sized businesses don't get gulped up by big tobacco or other mega corps. reply pm90 16 hours agorootparentAmerican corporations are great at retooling their business/supply chains for different products (see how quickly everyone moved into hard seltzers). I do expect big tobacco to move in aggressively if weed is made legal. reply Scoundreller 15 hours agorootparentHasn’t really happened in Canada. I think a small-player alcohol company did move in, but only after the bubble popped. Turns out legalization of a drug doesn’t lead to massive increases in consumption. Who knew. Definitely kneecapped the black market though: most moved to the legal side and black market prices cratered. reply mminer237 15 hours agorootparentMarijuana use has massively increased in the US as states have legalized it. Users have doubled: https://www.statista.com/statistics/264862/cannabis-consumpt... Use among users has also increased 20%: https://www.eurekalert.org/news-releases/962353 reply otherme123 15 hours agorootparentIf I could face consequences for using drugs, I will deny it even after being positive in a test. Of course, once legalized, I'll have no problem saying that I used in once or twice a year. Being it legal, safer and out of the dangerous black market, there will be some new users. Same happened after alcohol prohibition: more people consumed after the ban was lifted, but consumption was safer. But rarely people that didn't consume during the prohibition went on alcohol binge after the end of the ban. They just drank a couple of beers per week, maybe even a glass of bourbon twice a year, now that they can buy and consume it safely. Thus the stats you linked doesn't necesarily show a \"massive\" increase in use, but many people using it sparsely now and many people now admiting to use it that were using previously. In fact, while statista.com shows a 100% increase, the second and more controlled study shows only a ~20% increase that makes more sense (far from massive). reply Retric 15 hours agorootparentprev20% increase in consumption isn’t exactly what I would call massive. Looking at historic trends the point where pot was first legalized for recreational use isn’t obvious. If anything the long term upward tends started long before legalization which didn’t seem to have significant impact. https://bmcpublichealth.biomedcentral.com/articles/10.1186/s... reply ghaff 15 hours agorootparentI’m surprised it’s not more personally if the numbers are accurate. A lot of pretty casual users in professional jobs were mostly not going to find a friend of a friend to do an illegal transaction with. But they’ll go into a dispensary now and then. But you really see that reflected in the doubled number of users which is probably the more relevant number. reply grobgambit 6 hours agorootparentprevI have had my first legal weed experiences in the past year in New York and even the lowest THC % at the legal weed store is stronger than anything I use to get on the black market when weed was illegal. Then there are these incredible 10mg THC infused lemonades that are amazing. On the other hand, the novelty of legal weed only lasted about 4 months for me. Because the store was there and there was this selection I never had access to before I wanted to try different things and was smoking more than I would have normally. At the end of the day though it is all still just weed. It is fun for me but only once a month at most now. I also don't know a single person that didn't smoke weed because it was illegal and now they do because they can go to the store and purchase it legally. I think that the polling has doubled for users because people can answer the poll honestly when weed is legal. The idea that weed being illegal is keeping 50% of the potential weed smoking population from smoking is utterly preposterous. If anything, what is interesting is how many people who would never try weed when it was illegal, will still never try it when it is legal. They may say it is because it is illegal or they don't want to smoke but you can't sell them on 10mg legal lemonaid either. reply pseudosavant 15 hours agorootparentprevI'd bet alcohol use went way up after prohibition too. Both in number of people consuming, and on how much they consume on average. I've personally known people with terminal cancer who wouldn't use marijuana to manage pain and nausea because it is federally illegal. They suffered more than they should have. Is lower use always good? reply cooper_ganglia 15 hours agorootparentprevLobbyists don't care about uncapturable black market money. The legal market has led to massive increase in legal, taxable money, so now is exactly the time for big tobacco to start salivating over the idea of capturing all of those transactions. reply The_Blade 15 hours agorootparentprevDenver definitely had perverse consequence. people eking out a living selling weed on the street quickly turned to... harder substances. people will get their dollar and people will get their high reply jiayo 15 hours agorootparentprevBig tobacco might have stayed out of the fray but since legalization the vape giant JUUL owns and operates dispensaries. reply dbtc 9 hours agorootparent> Altria Group (formerly Philip Morris Companies), acquired a 35% stake in Juul Labs for $12.8 billion on December 20, 2018. Altria is the largest tobacco company in the United States. https://en.wikipedia.org/wiki/Juul reply rascul 14 hours agorootparentprevJuul is Big Tobacco. reply chrisweekly 15 hours agorootparentprevAgreed -- but I think nobody knows quite how it'll play out. I think of the thriving microbrewery scene (vs not just Budweiser et al but so-called \"premium\" beers from megabreweries that don't hold a candle to the local stuff). I also wonder about the degree to which psilocybin might be following THC's path, wrt state vs federal laws.... reply tensility 10 hours agorootparentprevPabst already makes THC seltzers for the California market. Big business is already here, folks. reply jerlam 15 hours agorootparentprevHopefully, the small/mid sized businesses hold a niche in the same way that craft brewers have maintained their existence (until they get acquired). reply kgdiem 15 hours agoparentprevYes really good point. Won’t it still be up to the states to decide what the regulatory environment will look like — eg they can choose to preserve these jobs through existing regulatory frameworks in the same way that certain goods cannot be shipped to certain states reply alistairSH 15 hours agorootparentNote, they're only planning to move it from Schedule 1 (alongside heroin) to Schedule III (alongside anabolic steroids and ketamine). So, it won't be fully legal in the same sense as alcohol. Regardless, unless Congress does something to make it legal nationally, we'll still have the state frameworks. Just hopefully avoiding the most draconian criminal charges. reply tialaramex 15 hours agorootparentOne very important thing this does is get rid of a really glaring error. As a Schedule I drug, Marijuana supposedly is completely useless, its only role is as a potential danger and that's why nobody must have any - except, we've known for many years a bunch of people find it useful as a therapeutic drug, so that's clearly wrong and the Schedule I status is an error. Perhaps there shouldn't be any Schedule I drugs at all, the idea seems misconceived, but certainly if there are Schedule I drugs, Marijuana doesn't belong among them. Meanwhile in Schedule III it's a judgement call. Schedule III drugs like K or steroids are drugs we know are useful, your doctor can prescribe them, your hospital pharmacy has them, but we also know they get abused. That sounds much more like marijuana, and, to be honest, alcohol. Can we justify Schedule III for Marijuana and yet not for Alcohol? It's at least a serious question whereas the Schedule I status was just nonsense. reply alistairSH 14 hours agorootparentYeah, I largely agree. Alcohol is broadly available/legal due to historical quirks, not sane regulation in relation to other similar (social impact, not chemistry) drugs. Same for tobacco to an extent. reply tialaramex 13 hours agorootparentAlso booze is really easy to make. Marijuana is hardly difficult but if you ain't got any plants somebody has to smuggle them to you, whereas if you've got a bunch of say, apples, or potatoes, or berries - which are just food - the only thing that prevents you from having booze is constant oversight to ensure you don't allow the food to be converted into booze. I can see tobacco becoming effectively a Schedule III type substance, made only when it is deemed necessary for some reason and not generally available - New Zealand tried to set off on that path, the UK is attempting it now, unlike booze (or marijuana) which has a population of people who say \"Hey, that's fun, don't take that away\" the smoker are almost all against smoking, they see it as an unpleasant mistake they made rather than a choice they're glad to have taken. reply saalweachter 12 hours agorootparentShit, you can accidentally make alcohol. reply kgdiem 15 hours agorootparentprevI read TFA after commenting. I think that is even more interesting; it’ll be very helpful for better understanding the safety profile of marijuana. Still curious to see how this may affect cannabis commerce. Will CVS have cannabis extracts behind the pharmacy counter? reply beaeglebeachh 15 hours agoparentprevKeeping in state doesn't help. It's still interstate commerce even just picking a plant and smoking on site non-commercially. Just walking an object within 1000 ft of a school, non-commercially, is interstate commerce. reply NewJazz 15 hours agorootparentAccording to a really old SC decision that rests on shaky foundations at best. reply beaeglebeachh 14 hours agorootparentThey'll never give it up. It would mean the end of the civil rights act, and tons of popular regulatory regimes that apply to in-state only trade. And the return of in state over the counter machine guns. reply mr_spothawk 13 hours agorootparentRelevant case: Wickard v. Filburn United States Supreme Court case Wickard v. Filburn, 317 U.S. 111, is a United States Supreme Court decision that dramatically increased the regulatory power of the federal government. It remains as one of the most important and far-reaching cases concerning the New Deal, and it set a precedent for an expansive reading of the U.S. Constitution's Commerce Clause for decades to come. The goal of the legal challenge was to end the entire federal crop support program by declaring it unconstitutional. An Ohio farmer, Roscoe Filburn, was growing wheat to feed animals on his own farm. The U.S. government had established limits on wheat production, based on the acreage owned by a farmer, to stabilize wheat prices and supplies. Filburn grew more than was permitted and so was ordered to pay a penalty. In response, he said that because his wheat was not sold, it could not be regulated as commerce, let alone \"interstate\" commerce. [Wikipedia](https://en.wikipedia.org/wiki/Wickard_v._Filburn) reply MarCylinder 14 hours agoparentprevBig corps are already an issue. They may not be able to move product over borders, but they can move money and resources reply tonymet 5 hours agoparentprevit's another good reason to advocate for more state autonomy . prior to 80s savings & loan crisis and then financial collapse, small family run banks were thriving too reply ranger_danger 8 hours agoparentprevI think they would make so much MORE money by making it federally regulated and generally accessible... the problem is that also takes away some incentive to keep spying on citizens in the name of drugs and related bad guys. reply golergka 15 hours agoparentprev> I hope all these small/mid sized businesses don’t get gulped up by big tobacco or other mega corps Why not? Laws of scale would drive the price down while improving the profit margins, both clients and investors would win. reply peddling-brink 14 hours agorootparentThere are more people involved than just clients and investors. I think some inefficiencies are important, especially when scoped to \"who can do this thing the cheapest?\" reply bumby 13 hours agorootparent>I think some inefficiencies are important To add a bit, the importance of some inefficiencies are lost when viewed strictly through an investor lens. E.g., investigative journalism is expensive and largely inefficient regarding the profitability of a newspaper. Redundant inventory/equipment is largely inefficient until low-probability events effect supply. Small businesses may be inefficient but provide economic stability to a non-urban center etc. etc. reply notaustinpowers 15 hours agoparentprevI've got my tinfoil hat on but I totally believe this to be due to the lobbying efforts of big tobacco. Purely because cigarette sales continue to decline and vaping is becoming more and more regulated and, therefore, less profitable. But marijuana enjoys high markups, pseudoscience \"health benefits\", and is becoming more and more acceptable to Americans each and every year. reply pwillia7 15 hours agorootparentI don't even think that's that tinfoil hat-y What else will I spend my billions in revenue on if I can't advertise and have to hide all my employees? reply jajko 14 hours agoparentprevBig tobacco means even more pressure to normalize it, globally, via UN just like they pushed it down the throat of every nation worldwide including those where its sacred plant for millenia like India or Nepal. US reversed decades of severe oppression and is leading free world (I know Canada, I know) so there is massive hope our idiots in EU and elsewhere will seriously wake up, even if in some primitive cargo culting effort. I don't mean half-assed decriminalization here and there which still feeds very healthy criminal ecosystem and for end user of say weed doesn't change a zilch in anything, I mean same legal treatment as tobacco and alcohol, we don't prescribe that for anxiety do we, its all fun and chill and introspection (for me). Its 2024 FFS, and we see idiocy live where politicians are lying in the cameras to please old conservative folks for next elections. I want to buy edibles, happy to pay any tax they slap on it. I want to buy a single joint, of strength and power I want to choose. Or vapes. Not some overpriced mediocre shit from paranoid desperate illegal immigrant standing in dark corners of shady parts of cities. Give that man an honest job on some weed farm or distribution system. reply cm2012 15 hours agoparentprevBeing gulped up big corporations is good. They will much more efficiently serve the market. SMBs are notoriously unproductive. Though maybe you want your drug dealers to be unproductive, for society's sake! I may take this back... reply soperj 15 hours agorootparentCan't say I've ever felt that massive corps and the people that work there are super productive. In many instances they seem less productive than government. reply astrange 10 hours agorootparentIf the small companies were productive they'd be big companies. reply int_19h 5 hours agorootparentThis assumes that every small company wants to be a big company. reply DonHopkins 1 hour agorootparentprevExcept the many that are productive because they're NOT big companies. reply ElevenLathe 15 hours agorootparentprevEven without nationwide economies of scale, Michigan regularly has businesses selling weed vape carts forJack Riley, a former deputy administrator of the DEA, said he had concerns about the proposed change because he thinks marijuana remains a possible “gateway drug,” one that may lead to the use of other drugs. >“But in terms of us getting clear to use our resources to combat other major drugs, that’s a positive,” Riley said, noting that fentanyl alone accounts for more than 100,000 deaths in the U.S. a year. reply a13o 10 hours agoparentI think these 'gateway drug' believers will be pleasantly surprised. One reason it's a gateway drug is because of a line of thought like this: 1) Govt says cannabis is the most dangerous drug. 2) I try cannabis, nothing bad happens. 3) So when the govt says drugs are dangerous, they are incorrect? I guess I can't use their rating system and will have to base it on my own experiences. There is a trust penalty for over-classifying drugs. And then of course picking up your cannabis from the popular pharmacy chain means you never had a reason to introduce yourself to a dealer, who may stock cannabis alongside other drugs. Cannabis isn't intrinsically a gateway drug. All the gateway-ness flows from the social structure surrounding its misclassification. reply mmanfrin 10 hours agorootparentThat or the other 'gateway' pathway: 1) Govt says cannabis is the most dangerous drug. 2) I find someone who will sell me illegal thing. 3) I try cannabis, nothing bad happens. 4) Vendor has other items for sale. reply ClassyJacket 9 hours agorootparentprevThis is precisely how my thought process went back when I used to use drugs heavily. I remember a teacher telling me drugs make hair grow out of your teeth. I figured if drugs were really that bad they wouldn't need to lie about what they do. reply vehementi 8 hours agorootparentNot to go all Godwin but a lot of people have the same reaction to news about Trump -- for some reason, people see the need to lie about and misrepresent Trump. \"If he's so bad, surely people could just list off his crimes without having to try to trick me right? Must not be so bad, it couldn't hurt to give him a turn as president.\" reply joshmarinacci 14 hours agoparentprevIt is a gateway drug. When marijuana is illegal you have to get it from drug dealers, who have an incentive to upsell you to harder stuff. Make it legal and that gateway goes away. reply pixelpoet 13 hours agorootparentAnecdote: I've had countless dealers over 20 years in many countries and continents, not once has someone tried to sell me anything else (besides hash). It's always been some cheery barefoot guy with dreads growing it in his closet. Now that it's legal in Germany I'm going to grow my own, and experience the (surprisingly common!) miracle of harvesting the exact legal limit of 25 grams from 3 plants ;) reply tensility 10 hours agorootparentSame has been true for me in the US over 35+ years. This has always been a stupid and false boogeyman narrative. reply bogtog 9 hours agorootparentprevHowever, if you wanted something other than weed, you would have someone who may be able to help you out reply DonHopkins 1 hour agorootparentSounds like you're the one who needs help. See a professional. reply flawsofar 4 hours agorootparentprevLet it go. reply IncreasePosts 6 hours agorootparentprevIn my experience, the weed dealers aren't the same dealers as the guys moving the harder stuff. If you can get meth from a guy, he can probably get you coke too. But your weed guy probably can't get you either. At least, IME with NYC dealers. reply insane_dreamer 4 hours agorootparentprevIn that case it ceases to become a gateway drug once legal. reply whalesalad 7 hours agoparentprevthe difference between fentanyl and marijuana is like a nuclear bomb versus a slingshot. reply ip26 4 hours agoparentprevOr, he's a savvy guy talking to the people who do still believe it's a gateway drug, and deftly explaining to them why this is good without trying to tell them they are wrong. reply Jerrrry 7 hours agoparentprev>It’s a gateway drug; while simultaneously ignoring that the drug killing people, fent has a perfectly causal gateway drug in vicodin/percs Cannabis IS a gateway drug, indirectly, by means of social contagion. It's simply a catch-22 because the government (and media, and both sides of the political spectrum) has completely destroyed their credibility with the people. Teenagers have had plenty of excuses, through loss of trust in the self-anointed's reputation of exaggeration, to (rightly) assume the government is outright lying or masquerading the facts about all substances. So when artistic pieces of blotter paper of unknown orgin start making appearances in high school's around the world in 2014, students had 0 reason to believe they were dangerous; after all, \"cup of orange juice man\" had already long been debunked. Many kids have died, directly because of this DIS-education. Oxy/Hydro's are the actual gateway drugs; recreational/unfettered use, alongside the constant social pressure, will (nearly always), cascade into more dependent use of more potent opiates, then opioids. When fent-laced pills finally starting working their way into the aging supply of real Percoset in the hills of Appalachia, three generations of drug addicted families had already resigned their fate to a long, painful retirement of addiction. By the way - these same, (\"simple, flyover, farmer, uneducated\" by blue/'learned'/democract) people trusted their government to get hooked on these, remember? If it is a surprise to you that the vast majority of Americans distrust the DEA, FDA, or CDC, or CNN, or even FOX then you have never left the conform of your post-modern urban hell-scape. source: i am veteran of the war on drugs reply paulddraper 11 hours agoparentprevVicodin/percs also require prescriptions tho. Not so much of a gotcha. reply 463 more comments... GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The U.S. Drug Enforcement Administration is considering reclassifying marijuana to a less dangerous drug, potentially reshaping drug policies in the country.",
      "President Biden backs a review of federal marijuana laws and has granted clemency to individuals with possession convictions.",
      "The proposed change may align federal drug policies with state legalization movements and appeal to younger voters, potentially benefiting President Biden's public image."
    ],
    "commentSummary": [
      "The discussion delves into various aspects of marijuana legalization and regulation in the US, such as reclassification, banking regulations impact, dispensary security, business challenges, and cryptocurrency use for transactions.",
      "It also explores the effects of federal laws, the marijuana retail market, and varying viewpoints on drug use and legalization.",
      "Misinformation, gateway drugs, and the influence of large corporations on the market are among the highlighted concerns in the discussion."
    ],
    "points": 582,
    "commentCount": 726,
    "retryCount": 0,
    "time": 1714498320
  },
  {
    "id": 40216057,
    "title": "Exploring Musical Notation in CSS Grid",
    "originLink": "https://cruncher.ch/blog/printing-music-with-css-grid/",
    "originBody": "Printing music with CSS Grid Too often have I witnessed the improvising musician sweaty-handedly attempting to pinch-zoom an A4 pdf on a tiny mobile screen at the climax of a gig. We need fluid and responsive music rendering for the web! Stephen Band 24 Apr 2024 Music notation should be as accessible and as fluid as text is, on the web; that it is not, yet, is something of an afront to my sensibilities. Let us fix this pressing problem. The Scribe prototype SVG rendered by Scribe 0.2 Some years ago I prototyped a music renderer I called Scribe that outputs SVG from JSON. The original goal was to produce a responsive music renderer. It was a good demo, but to progress I was going to have to write a complex multi-pass layout engine, and, well, other things got in the way. Shortly after making that I was busy adopting Grid into our projects at Cruncher when something about it struck me as familiar, and I wondered if it might not be an answer to some of the layout problems I had been tackling in Scribe. The class .stave The musical staff is grid-like. Pitch is plotted up the vertical axis and time runs left to right along the horizontal axis. I am going to define these two axes in two seperate classes. The vertical axis, defining grid rows, will be called .stave. We'll get to the time axis in a bit. A .stave has fixed-size grid rows named with standard pitch names, and a background image that draws the staff. So for a treble clef stave the row map might look like this: .stave { display: grid; row-gap: 0; grid-template-rows: [A5] 0.25em [G5] 0.25em [F5] 0.25em [E5] 0.25em [D5] 0.25em [C5] 0.25em [B4] 0.25em [A4] 0.25em [G4] 0.25em [F4] 0.25em [E4] 0.25em [D4] 0.25em [C4] 0.25em ; background-image: url('/path/to/stave.svg'); background-repeat: no-repeat; background-size: 100% 2.25em; background-position: 0 50%; } Which, applied to agives us: Ok. Not much to see, but on inspecting it we do see that each line and each space on the stave now has its own pitch-named grid line to identify each row: Placing pitches up the stave Any given row on a stave may contain any of several pitches. The pitches G♭, G and G♯ must all sit on the G stave line, for example. To place DOM elements that represent those pitches in their correct rows I am going to put pitch names in data-pitch attributes and use CSS to map data-pitch values to stave rows. .stave > [data-pitch^=\"G\"][data-pitch$=\"4\"] { grid-row-start: G4; } This rule captures pitches that start with 'G' and end with '4', so it assigns pitches 'G♭4', 'G4' and 'G♯4' (and double flat 'G𝄫4' and double sharp 'G𝄪4') to the G4 row. That does need to be done for every stave row: .stave > [data-pitch^=\"A\"][data-pitch$=\"5\"] { grid-row-start: A5; } .stave > [data-pitch^=\"G\"][data-pitch$=\"5\"] { grid-row-start: G5; } .stave > [data-pitch^=\"F\"][data-pitch$=\"5\"] { grid-row-start: F5; } .stave > [data-pitch^=\"E\"][data-pitch$=\"5\"] { grid-row-start: E5; } .stave > [data-pitch^=\"D\"][data-pitch$=\"5\"] { grid-row-start: D5; } ... .stave > [data-pitch^=\"D\"][data-pitch$=\"4\"] { grid-row-start: D4; } .stave > [data-pitch^=\"C\"][data-pitch$=\"4\"] { grid-row-start: C4; } That should give us enough to begin placing symbols on a stave! I have a bunch of SVG symbols that were prepared for the Scribe prototype, so let's try placing a couple on a stave: That looks promising. Next, time. The class .bar and its beats Rhythm is perhaps a little trickier to handle. There is not one immediately obvious smallest rhythmic division to adopt that will support all kinds of rhythms. A judgement call must be made about what minimum note lengths and what cross-rhythms to support inside a grid. A 24-column-per-beat approach supports beat divisions to evenly lay out eighth notes (12 columns), sixteenth notes (6 columns) 32nd notes (3 columns) as well as triplet values of those notes. It's a good starting point. Here is a 4 beat bar defined as 4 × 24 = 96 grid columns, plus a column at the beginning and one at the end: .bar { column-gap: 0.03125em; grid-template-columns: [bar-begin] max-content repeat(96, minmax(max-content, auto)) max-content [bar-end]; } Add a couple of bar lines as ::before and ::after content, and put a clef symbol in there centred on the stave with data-pitch=\"B4\", and we get:Inspect that and we see that the clef has dropped into the first column, and there are 96 zero-width columns, 24 per beat, each seperated by a small column-gap: Placing symbols at beats This time I am going to use data-beat attributes to assign elements a beat, and CSS rules to map beats to grid columns. The CSS map looks like this, with a rule for each 1/24th of a beat: .bar > [data-beat^=\"1\"] { grid-column-start: 2; } .bar > [data-beat^=\"1.04\"] { grid-column-start: 3; } .bar > [data-beat^=\"1.08\"] { grid-column-start: 4; } .bar > [data-beat^=\"1.12\"] { grid-column-start: 5; } .bar > [data-beat^=\"1.16\"] { grid-column-start: 6; } .bar > [data-beat^=\"1.20\"] { grid-column-start: 7; } .bar > [data-beat^=\"1.25\"] { grid-column-start: 8; } ... .bar > [data-beat^=\"4.95\"] { grid-column-start: 97; } The attribute ^= starts-with selector makes the rule error-tolerant. At some point, inevitably, unrounded or floating point numbers will be rendered into data-beat. Two of their decimal places is enough to identify a 1/24th-of-a-beat grid column. Put that together with our stave class and we are able to position symbols by beat and pitch by setting data-beat to a beat between 1 and 5, and data-pitch to a note name. As we do, the beat columns containing those symbols grow to accommodate them:… … … … … …Ooo. Stems? Yup. Tails? Yup. The tail spacing can be improved (which should be achievable with margins) – but the positioning works. Fluid and responsive notation Stick a whole bunch of bars like these together in a flexbox container that wraps and we start to see responsive music:… … … …There are clearly a bunch of things missing from this, but this is a great base to start from. It already wraps more gracefully than I have yet seen an online music renderer do. The space between the notes Ignoring these beams for a moment, notice that note heads that occur closer in time to one another are rendered slightly closer together: It's a subtle, deliberate effect created by the small column-gap, which serves as a sort of time 'ether' into which symbol elements slot. Columns themselves are zero width unless there is a note head in them, but there are more column-gaps – 24 per beat – between events that are further apart in beats, and so more distance. Constant spacing can be controlled by adjusting margins on the symbols. To get a more constant spacing here we would reduce the column-gap while increasing the margin of note heads: But ugh, that looks bad, because the head spacings give the reader no clue as to how rapid the rhythm is. The point is, CSS is giving us some nice control over the metrics. And the aim now is to tweak those metrics for readability. Clefs and time signatures You may be wondering why I employed seperate classes for vertical and horizontal spacing, why not just one? Seperating the axes means that one can be swapped out without the other. Take the melody: To display this same melody on a bass clef, the stave class can be swapped out for a bass-stave class that maps the same data-pitch attributes to bass stave lines: ... Or, with CSS that mapped data-duration=\"5\" to 120 grid-template-columns on .bar, the same stave could be given a time signature of 5/4: ... Clearly I am glossing over a few details. Not everything is as simple as a class change, and a few stems and ledger lines need repositioned. Here's a stave class that remaps pitches entirely. General MIDI places drum and percussion voices on a bunch of notes in the bottom octaves of a keyboard, but those notes are not related to where drums are printed on a stave. In CSS a drums-stave class can be defined that maps those pitches to their correct rows: ... 4 4 ... 4 4 That's some very readable drum notation. I'm pretty pleased with that. Chords and lyrics CSS Grid allows us to align other symbols inside the notation grid too. Chords and lyrics, dynamics and so on can be lined up with, and span, timed events: 4 4 In A♭maj the bleak A♭maj/G mid- win- C7♭9 ter, F-7 A♭7sus Frost- D♭maj y wind B♭/D made moan– E♭7sus♭9 C/E♭ But what about those beams? Beams, chords and some of the longer rests are made to span columns by mapping their data-duration attributes to grid-column-end span values: .stave > [data-duration=\"0.25\"] { grid-column-end: span 6; } .stave > [data-duration=\"0.5\"] { grid-column-end: span 12; } .stave > [data-duration=\"0.75\"] { grid-column-end: span 18; } .stave > [data-duration=\"1\"] { grid-column-end: span 24; } .stave > [data-duration=\"1.25\"] { grid-column-end: span 30; } ... Simple as, bru. Sizing Lastly, the whole system is sized in em, so to scale it we simply change the font-size: Limits of Flex and Grid Is it the perfect system? Honestly, I'm quietly gobsmacked that it works so well, but if we are looking for caveats… 1. CSS cannot automatically position a new clef/key signature at the beginning of each wrapped line, or 2. tie a head to a new head on a new line. And 3., angled beams are a whole story onto themselves; 1/16th and 1/32nd note beams are hard to align because we cannot know precisely where their stems are until after the Grid has laid them out: So it's going to need a bit of tidy-up JavaScript to finish the job completely, but CSS shoulders the bulk of the layout work here, and that means far less layout work to do in JavaScript. Let me know what you think If you like this CSS system or this blog post, or if you can see how to make improvements, please do let me know. I'm on Bluesky @stephen.band, Mastodon @stephband@front-end.social, and Twitter (still, just about) @stephband. Or join me in making this in the Scribe repo...A custom element for rendering music Scribe Code repo github.com/stephband/scribe/ Sequence JSON Scribe's data format github.com/soundio/music-json/ I have written an interpreter around this new CSS system and wrapped that up in the element . It's nowhere near production-ready, but as it is already capable of rendering a responsive lead sheet and notating drums I think it's interesting and useful. Whazzitdo? Theelement renders music notation from data found in it's content:0 chord D maj 4 0 F#5 0.2 4 0 A4 0.2 4 0 D4 0.2 4Or from a file fetched by its src attribute, such as this JSON: Or from a JS object set on the element's .data property. There's some basic documentation about all that in the README. Try it out You can try the current development build by importing these files in a web page: As I said, it's in development. Asides from some immediate improvements I can make to Scribe 0.3, like tuning the autospeller, fixing the 1/16th-note beams and detecting and displaying tuplets, some longer-term features I would like to investigate are: Support for SMuFL fonts – changing the font used for notation symbols. So far I have not been able to display their extended character sets reliably cross-browser. Support for nested sequences – enabling multi-part tunes. Split-stave rendering – placing multiple parts on one stave. The mechanics for this are already half in place – the drums stave and piano stave currently auto-split by pitch. Multi-stave rendering – placing multiple parts on multiple, aligned, staves. I leave you with a transposable lead sheet for Dolphin Dance, rendered by : Dolphin Dance Herbie Hancock Transpose: +12 +11 +10 +9 +8 +7 +6 +5 +4 +3 +2 +1 0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12",
    "commentLink": "https://news.ycombinator.com/item?id=40216057",
    "commentBody": "Printing Music with CSS Grid (cruncher.ch)579 points by speckx 13 hours agohidepastfavorite52 comments adrianh 7 hours agoImpressive hack — kudos from a fellow sheet music software developer! I've spent more than 10 years now building Soundslice, which does web-based sheet music rendering. I believe we were the first to do \"responsive\" web notation (that part of the site launched in 2014). Here's a tech talk I gave with a lot of details: https://www.youtube.com/watch?v=XH5EtQge_Bg Here's an example of responsive Soundslice notation: https://www.soundslice.com/slices/zzNlc/ (in the settings, set the stave width to maximum to get \"Fit to screen\" for the true responsive effect) We've got a whole suite of tools built around this, including an excellent web-based editor, rich practice functionality and a relatively new scanning feature (extracting the musical data from a photo or PDF). I agree with other commenters here that this CSS Grid approach could be handy for lightweight projects but it likely isn't up to snuff for the incredibly subtle and complex world of full scores. With that said, I just want to stress again that this is super cool and I'm glad it exists! reply vintagedave 11 hours agoprevThis is extraordinary. While JavaScript is needed now, I’d encourage the author to see what needs to be added to CSS to allow a CSS-only solution, and promote it in the CSS community. For example, repeating the clef when wrapping is akin to a sticky table header, and would have more applications than only music. Some CSS notation is wholly new to me: > .stave > [data-pitch^=\"A\"][data-pitch$=\"5\"] { grid-row-start: A5; } I’ve never seen CSS selectors with square brackets before. Apparently it’s an attribute selector: https://css-tricks.com/attribute-selectors/ reply mewpmewp2 11 hours agoparentThese css selectors are actually fairly common I would say. They were used for querySelector a lot before Angular, React, etc. In addition in current times they are frequently used to grab elements by their data-testid either for jest tests or e2e tests. reply wizzwizz4 11 hours agoparentprevI'd suggest a ::line pseudoelement for that. We already have ::first-line, which could perhaps be considered an abbreviated ::line:first-of-type. Though, ::first-line doesn't seem to support enough properties to be useful here, so maybe another approach is needed. reply stephbd 11 hours agorootparentMy only thought on this was to have a strip down the side with a vertically repeating background of an SVG data URL with the clef in it. But I don't like it. It'll be brittle. And it wouldn't support clef / key / time changes very easily. reply thrtythreeforty 12 hours agoprevI started the article thinking \"ohhh the horror, this will not go well.\" And I ended up being mildly impressed with the typesetting quality, especially for the relative simplicity of the approach. So kudos to the author for demonstrating the flexibility of CSS. I am concerned that there are lots of edge cases, essentially ligatures for engraving, that might not compose so well. A triad, or the author's called-out relative head spacing of 8th and 16th notes, or letting the program align different parts across different grids - would this also work well? Lilypond has proven to be exceptionally flexible for these kinds of complexities. reply stephbd 11 hours agoparentIt would be nigh-on impossible to align parts across different grids – but it's perfectly possible to generate one huge grid with multiple staves in it. I'm pretty confident that will work out. reply dsmmcken 8 hours agorootparent> align parts across different grids Maybe a CSS `subgrid` would help? Subgrid is newly available. (I know nothing about music notation, and basing this entirely off that statement). reply todotask 57 minutes agoprevI utilized JavaScript to render music notation from pppp to ffff iirc that can connect to a MIDI keyboard, allowing users to practice along with the interactive notes. Initially, I experimented with Adobe Flex before transitioning to web-based solutions and yes, it can read and play any MIDI files to my SF2 soundfont. The only problem is that MuseScore community took years to fix a missing measurement in MusicXML structure, I had to patch the code on my own. reply donatj 1 hour agoprevI have spent weeks recently working on a little side project converting MIDIs to colored children’s piano sheet music. I am most of the way there but have been dragging my feet on building the web ui specifically because I was unsure how to render the notes in a flexible way that could look good on multiple devices. This looks like it could be a good jumping off point, and I fully intend to give it a try. My daughter absolutely loves my Little Tikes piano from the 1980s but all the sheet music I find online, even for the newer Little Tikes pianos, have different colors associated with notes. I have built up a small library of simple MIDIs, and my intent is to have some preset toy pianos to choose from or let the end user specify colors-to-notes manually. reply hantusk 2 minutes agoparentFor a shortcut, Musescore has a plugin called colornotes that does this, installable from the GUI. You can alter the color scheme by editing the .js plugin code: https://github.com/musescore/MuseScore/blob/master/share/ext... It can also print note names inside of each head. reply alnvdl 10 hours agoprevCSS grids are quite interesting. I once implemented a furniture designer with it (pure frontend JS, no backend): https://alnvdl.github.io/2023/01/07/designing-furniture-usin... reply knighthack 10 hours agoparentThis was an interesting (and unexpectedly) practical use of CSS for non web-dev purposes. Great idea! reply bredren 10 hours agoparentprevHey, that's a great lightweight tool. Thanks for sharing that. reply russelg 10 hours agoparentprevAwesome post! I can see myself using your planner for sure. reply spankalee 12 hours agoprevThis is very cool! Like the author, I'm pretty impressed that just CSS can get you this far. I'm very excited to see thecustom element too! I had an intern work on wrapping VexFlow with web components a few years back, but the summer ended before everything was finished, and it hasn't been maintained: https://github.com/PolymerLabs/vexflow-elements/blob/web-com... A maintained and easy-to-use library could do a lot of good for music notation on the web. reply sonovice 5 hours agoparentThere is https://www.verovio.org/ which is both easy-to-use and really well maintained. reply MilStdJunkie 11 hours agoprevNice to have an alternative to Lilypond (lilypond.org), but given the extreme complexity of notation, I would bet that any brevity gains are short lived. For those Asciidoc freaks among you, Lilypond is fairly easy to get running in your Asciidoc toolchain of choice. I use the DocBook PDF pipeline, and the lilypond output is quite nice looking. It's awfully TeX-like. reply mrweasel 2 hours agoparentIf you can make do with a more limited feature set, I'd properly go with a CSS alternative, rather than using Lilypond (depending on your environment and use case). Lilypond is fairly complicated and not without security risk and have been used as an attack vector due to it being able to embed Postscript. reply atonse 11 hours agoparentprevBut does Lilypond generate responsive sheets? That to me was the coolest part of this (apart from what others have said, the power of modern CSS) reply bollu 0 minutes agorootparentYes, lilypond generates SVG that rescales smoothly reply Tokkemon 11 hours agorootparentprevThey can be rendered at any size. reply lukan 10 hours agorootparentA PDF is still not that responsive. Clean HTML/CSS is. reply stephbd 11 hours agoparentprevI would also suggest checking out ABCjs for web rendering. reply TheRealPomax 11 hours agoparentprevNot everyone needs to typeset a full symphony with all the crazy notation for every single instrument though, having an easy responsive web presentation for even 50% of the \"simple\" scoring you do is a fantastic option to have. reply Tokkemon 11 hours agorootparentBut this solution won't even get you that far, let's be honest. reply microtherion 2 hours agoprevThe visual quality is really good. I'm not entirely convinced of making this responsive, in the particular area of Jazz leadsheets. I've found myself preferring line breaks at regular intervals (mostly every 4 bars, with exceptions for pickups and alternate endings), rather than trying to cram as many bars as possible onto each line. reply stephbd 2 hours agoparentThe beauty of the system is that a flex box rule of flex: 1 1 25%; will give you 4 bars per line (each averaging 25% of the width). The system is flexible. reply Tokkemon 11 hours agoprevIt's a nifty solution. But speaking as a music engraver, it could use a lot of improvement, and I don't think there's enough tolerance in CSS to make it work. The beams, slurs, and ties, in particular have real problems visually. This is why other methods of getting notation into the browser don't use such tools. You need pinpoint precision for vector rendering, which is why almost all browser notation is done with SVG or some sort of Canvas drawing. Other than the clever solution of using CSS, why would you do this? One can already do scalable notation in the browser with other tools (Check out Adrian Holovaty's Soundslice or Sibelius Cloud Publishing). reply scop 10 hours agoparentWhat is a music engraver? I could google it, but I would appreciate a music engraver actually telling me vs some random page on the internet. reply Tokkemon 9 hours agorootparentSure. It's an old-fashioned term for the artisans who engraved music notation onto metal plates. These were then inked for pressing. It's a highly specialized skill and requires a deep knowledge of now notation works and how musicians will respond to it. Today it is all done on computer but the artistry of knowing how the notation should look and the meaning behind it is still there. That's the basics but the work we do is quite varied and complicated. It happens that I work for Avid as a designer for Sibelius, the leading music notation program in the world. I also run the Music Engraving Tips Facebook group if you're interested in learning more. reply amiga386 7 hours agorootparentThat's very much it. You could also make an analogy to the arts of typography and typesetting. It's of the same importance to a composer or musician that the notation is legible and beautiful, as it is to a graphic designer or reader that type and layout are legible and beautiful. If the GP is interested in the topic, there are great videos by Tantacrul on his experience redesigning the notation font for MuseScore [0] and his overview of MuseScore 4.0's engraving improvements [1] - in particular this second video, concerning mainly layout, shows just how far this CSS approach would have to go to have a truly legible, reflowable layout in the face of beams/slurs/ties. (I don't want to take away from anyone on the Sibelius team, they're likely even better experts on the subject than Tantacrul is, but as far as I know, they didn't make long-form Youtube videos about the topic! He also likely got the job of leading the MuseScore redesign thanks to his previous videos that critiqued and reimagined the interfaces of music composition software... including older versions of Sibelius [2] and MuseScore [3]) [0] https://www.youtube.com/watch?v=XGo4PJd1lng [1] https://www.youtube.com/watch?v=Qct6LKbneKQ&t=2004 [2] https://www.youtube.com/watch?v=dKx1wnXClcI [3] https://www.youtube.com/watch?v=4hZxo96x48A reply analog31 9 hours agorootparentprevAs a player (jazz bassist) I'm amazed by the subtlety of making notation work. Oddly enough, most of my band's material is still not in computer readable form. A lot of it was hand copied. reply itishappy 9 hours agorootparentprevsomeone who makes music look pretty https://en.wikipedia.org/wiki/Music_engraving reply xhevahir 8 hours agoparentprev>One can already do scalable notation in the browser with other tools (Check out Adrian Holovaty's Soundslice or Sibelius Cloud Publishing). Can either of those be incorporated in one's own software, without paying somebody? (I don't see a license for this project, but I'm guessing it will be a lot more permissive than whatever that Sibelius thing has.) Also, the examples for this project are simple leadsheets. I think your average jazz musician is probably a lot less fussy about notation than a professional music engraver would be. reply mbo 8 hours agoparentprev> Other than the clever solution of using CSS, why would you do this? Seems lightweight enough for maybe a music theory blog post or interactive notebook. reply nixpulvis 11 hours agoprevJust going to remind people of https://www.musicxml.com and https://opensheetmusicdisplay.org for a more complete solution at a much larger cost. reply sonovice 5 hours agoparentAlso have a look at https://www.verovio.org for a pretty complete but still free solution. reply spopejoy 6 hours agoparentprevNot web, but https://musescore.org is free software that reads and writes musicxml. reply toastal 1 hour agoprevThis is a really clever use of grid & a case where the named templates is actually well done instead of overused. reply emadda 3 hours agoprevCool, I often use grid for precise placement of items even for small widgets like toggle buttons. If you’d like an intro into grid: https://cssprinciples.com/3/grid/ reply xhevahir 10 hours agoprevThis looks really nice. I'd like to see if this could replace the janky notation functionality in Impro-Visor ( https://github.com/Impro-Visor/Impro-Visor ). reply ivanjermakov 12 hours agoprevThis feels like a CSS benchmark haha reply darepublic 4 hours agoprevbeautiful music notation. The main page of the site also has a tasteful use of position sticky! reply coldtea 11 hours agoprevLooks good, and with surprisingly clean CSS. reply elijahbenizzy 5 hours agoprevThis is great! reply ramijames 12 hours agoprevI'm super impressed. reply rdevsrex 10 hours agoprevThis is pretty cool! reply rcarmo 12 hours agoprevPretty awesome! reply sfink 10 hours agoprevThis feels so wrong in one way, and simultaneously so right in another. reply ulrischa 10 hours agoprevIncreadible what css can do today. It is some kind of general purpose representation language reply rocken7 10 hours agoprev [–] imagine a bot drone that flies around a big city like NY, and just tags walls + suitable spots with interesting gen art from various sources .. likely a lawsuit in the making but cool to see. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The Scribe prototype utilizes CSS Grid to generate a grid-like musical staff for enhanced music notation accessibility and smoothness on the web.",
      "It demonstrates how to position musical symbols on a stave through CSS grid and data attributes, modify layout and spacing using CSS, and highlights the system's constraints and potential enhancements.",
      "Additional features include stave splitting for drums and piano, multi-stave rendering, and offers a transposable lead sheet for a jazz standard."
    ],
    "commentSummary": [
      "The article delves into utilizing CSS Grid for music notation, outlining its advantages and constraints.",
      "Commenters propose enhancements to CSS, aiming for a more effective resolution in music typesetting.",
      "Users exchange views on rendering music notation and explore different tools and alternatives, expressing varying opinions on CSS effectiveness in comparison to other methods."
    ],
    "points": 579,
    "commentCount": 52,
    "retryCount": 0,
    "time": 1714509599
  },
  {
    "id": 40211655,
    "title": "Streamline Infrastructure Automation with Pyinfra",
    "originLink": "https://pyinfra.com/",
    "originBody": "pyinfra automates infrastructure using Python. It’s fast and scales from one server to thousands. Great for ad-hoc command execution, service deployment, configuration management and more. Here's why you should try pyinfra: 🚀 Super fast execution over thousands of targets with predictable performance. 🚨 Instant debugging with realtime stdin/stdout/stderr output (-vvv). 🔄 Idempotent operations that enable diffs and dry runs before making changes. 📦 Extendable with the entire Python package ecosystem. 💻 Agentless execution against anything with shell access. 🔌 Integrated with connectors for Docker, Terraform, Vagrant and more. Quickstart Install pyinfra with pip: pip install pyinfra Now you can execute commands over SSH: pyinfra my-server.net exec -- echo \"hello world\" Or target Docker, the local machine, and other connectors: pyinfra @docker/ubuntu exec -- echo \"Hello world\" pyinfra @local exec -- echo \"Hello world\" As well as executing commands you can define state using operations: pyinfra @docker/ubuntu apt.packages iftop update=true _sudo=true Which can then be saved as a Python file like deploy.py: from pyinfra.operations import apt apt.packages( name=\"Ensure iftop is installed\", packages=[\"iftop\"], update=True, _sudo=True, ) And executed: pyinfra @docker/ubuntu deploy.py Now you know the building blocks of pyinfra! By combining inventory, operations and Python code you can deploy anything. See the more detailed getting started or using operations guides. See how to use inventory & data, global arguments and the CLI or check out the documented examples.",
    "commentLink": "https://news.ycombinator.com/item?id=40211655",
    "commentBody": "Pyinfra: Automate Infrastructure Using Python (pyinfra.com)490 points by InitEnabler 19 hours agohidepastfavorite184 comments Fizzadar 17 hours agoHey all, I'm the creator/primary maintainer of pyinfra! Super excited (a little terrified) to see this on the frontpage, happy to answer any questions :) I also hang out on the Matrix room: https://matrix.to/#/#pyinfra:matrix.org Another thing: the GH repo points at currently in beta v3 and the docs for this are here: https://docs.pyinfra.com/en/next (highly recommend starting with v3, I just haven't had any time recently to wrap up the release, but it's stable). reply negus 17 hours agoparentAs you can see here, the main question is what are the advantages over Ansible, a mature and the most popular agentless configuration management tool written in Python. So I propose putting this answer right to the landing page reply Fizzadar 17 hours agorootparentI think I tried to shy away from specifically being \"Ansible does this bad so pyinfra does this\" and instead focus on the features that differentiate like \"Instant debugging with realtime stdin/stdout/stderr output (-vvv).\". But it seems like that isn't enough and the landing page needs to be more explicit in comparison. Ty for the feedback! reply gh02t 14 hours agorootparentI applaud trying to be positive and focus on \"this is what we do well,\" but yeah at least some explicit comparison would help. The copy right now is kind of assuming the reader already knows Ansible to compare against as a baseline. Which is probably fair for most people who find your project, but people who find your project are also probably not happy with Ansible and want to know if this addresses their pain points immediately. Is very interesting though, I think I'm gonna try it myself. reply Anarch157a 14 hours agorootparentprevI like Ansible, but that doesn't mean thera are no pain points. One of them is handling \"if-this-then-that-else-that\". Being purely declarative, Ansible is horrible at that. Pyinfra can be used in imperative mode, am I right? This would make the use of if-else a breeze, which would be a really good reason for me to to switch. reply tryauuum 13 hours agorootparentAnsible is declarative? In puppet and saltstack you can declare that a folder is empty and declare a specific file in this folder. The system's smart enough to delete all the files except the one. To achieve such feat in ansible is hard. Easiest way is to have two tasks, one deletes everything and second recreates your file. Doesn't feel very declarative Unrelated thing, they don't even try to be declarative in ansible E.g you can have a file with state \"touch\". It not a state if it updates each playbook run! reply Anarch157a 9 hours agorootparentYou're confusing declarative with idempotent. Ansible is both, it won't change anything if the state is already what you declared. The nitpicked case you chose, you want the file to have the latest timestamp, this is a valid state to declare. reply otabdeveloper4 37 minutes agorootparentAnsible tries to be declarative and idempotent, but fails at being both. reply verdverm 7 hours agorootparentprevThe shell task breaks the declarative nature a bit, along with registering task results and then writing conditional whens based on them. Interpolating values based on the registered results does too imho reply aflukasz 3 hours agorootparentPlus, what your are declaring is often times not the state you desire but... action you want to take. Say you use `apt.name: [pkg1, pkg2]`, run it, then remove `pkg2` from the list. Running this again won't remove `pkg2` from your system. So it's declarative, but not necessarily on the optimal level all the times. reply goodpoint 1 hour agorootparentprevAnsible is neither. reply verdverm 7 hours agorootparentprevThere's definitely a trend in this direction. Pulumi for Terraform and Dagger for Docker are two examples I use I like CUE as a language to replace my Yaml that has some of the typical language constructs but maintains the declarative approach reply erikbye 15 hours agorootparentprevIs performance better than Ansible? I have used Ansible extensively and find it excruciatingly slow. reply Fizzadar 15 hours agorootparentYes! https://docs.pyinfra.com/en/next/performance.html reply mxuribe 14 hours agorootparentHi @Fizzadar and congrats on making this and getting it out the door; kudos! As you craft your \"Why this and not Ansible\" content, you might actually state clearly what you already noted on the Performance page, namely: \"One of the reasons pyinfra was started was performance of agent-less tools at the time.\" If I read that, it'd instantly make me want to stick around and read some more, play with pyinfra, etc. BTW, i will be playing with it anyway, but just wanted to point out that you likely won;t need to start from scratch for copy (on a comparison or answering \"Why this and not Ansible\" content). Cheers! reply helsinki 15 hours agorootparentprevExcruciatingly slow is an understatement :) reply surfingdino 14 hours agorootparentWhy being slow is a bad thing? Ansible gives me a legitimate excuse to have proper lunch. ;-) reply verdverm 7 hours agorootparentYou're supposed to be writing compilers during that time reply ShakataGaNai 6 hours agorootparentprevThat would be appreciated. I saw the homepage and my first thought was \"Ansible is python. How are these things different?\" Obviously pure python vs yaml is one thing. But beyond that it's not clear. Perhaps are specific use cases in your mind where one or the other is a better fit, and that would be helpful as well. reply OJFord 17 hours agoparentprevIs it declarative? Obviously python isn't, but since it's not executed as a script but rather the module passed to pyinfra, it could be, and looks like maybe it is just registering work to (potentially) do on module load? If so, nice, shout about it more - it's my number one requirement of such a tool, why I think Terraform (or OpenTofu) is great and mostly everything else sucks, and I think it should be everyone's. It's just obviously (at least, once someone makes it available!) the correct paradigm for managing stateful resources and coping with drift. reply Fizzadar 17 hours agorootparentYes... and no. It depends on the operation (the docs explicitly state if an operation is _not_ idempotent \"stateless operation\"). Operations are either: - state definitions, \"ensure this apt package is installed\" (apt.packages: https://docs.pyinfra.com/en/next/operations/apt.html#operati...) - stateless, \"run these shell commands\" (server.shell: https://docs.pyinfra.com/en/next/operations/server.html#oper...) Most operations are state definitions and much preferred, the stateless ones exist to satisfy edge cases where either the state-ful version isn't implemented or simply isn't possible. reply tetha 16 hours agorootparentAh, so this is similar to the Terraform CDK approach? In Terraform CDK, you use a language like python to compute the set of resources and such you want to have, and then hand that over to the terraform core, which does the usual terraform song and dance to make it happen. This is actually interesting to me, because we struggle with even the simplest data transformations in ansible so much. Like, as soon as you start thinking about doing a simple list comprehension in python in jinja templating, lots and lots of pain starts. From there, we're really starting to think about templating the inventories in some way because it would be less painful. reply Fizzadar 16 hours agorootparentInteresting, not heard of CDK before! Kind of similar? As long as the language is Python I suppose! Would be possible to integrate with other languages too I guess, not something I’ve ever looked into though. Totally agree on templating which is why inventories have always been python code just as operations, giving maximum flexibility (with some complexity/type confusion drawbacks). reply F-Lexx 14 hours agorootparentRelevant XKCD: https://xkcd.com/303/ reply peteradio 16 hours agorootparentprevI never understood the desire to make things declarative. It seemed to me to always hide what is actually happening and it made it more difficult to understand. Is there a simple way to understand why declarative stuff is desirable to some people? reply michaelmior 16 hours agorootparentI think the main reason people like the declarative approach is that done right, it's idempotent. You also don't have to think about the current state of the system at all. You just need to describe what you want it to look like. Of course in practice it can be more nuanced than that, but thinking declaratively can make things much simpler in some scenarios. reply Spivak 15 hours agorootparentThese aren't as related as you think. Ansible is imperative and idempotent. reply bjt12345 4 hours agorootparentAnsible is only as idempotent as the module it calls though. reply windexh8er 14 hours agorootparentprevAnsibles' resources are declarative [0]. What part of Ansible is imperative? https://docs.ansible.com/ansible/latest/reference_appendices... reply matrss 13 hours agorootparentAnsible playbooks are usually a list of steps to execute in order (imperative). Those steps may try to present a declarative interface to what they are supposed to do, but many fail to fulfill the definition of \"declarative\" that you have linked. E.g. with the built-in modules it is impossible to declare a desired set of installed packages, only a set of packages to be installed _in addition to all already installed packages_. This means it is impossible to remove an installed package again by removing it from the declaration, you have to specify a second step (imperative) that explicitly removes the package. This makes it impossible to declare a final state for \"installed packages\" with ansible. reply XorNot 9 hours agorootparentThis is debating state-management though, which Ansible makes the correct choice about: Ansible largely works the way a user expects when they transition to it from doing things on the command line, and guides them towards idempotency (which is a pre-requisite for declarative configuration). The problem is to track deletions you either have to constantly have a view of global state (i.e. do you want to put `linux-kernel` in your package list?) or you need to store specific state about that machine (i.e. `redis` was installed by playbook redis-server.yml, task \"install redis\") - because the packages absence in that list doesn't necessarily mean \"uninstall it\" if something else in another playbook or task will later declare it should be present. As soon as you're trying to do deletions, you're making assumptions that the view of the state you have is complete and total and that is usually not the case - and even if it is within the scope of your system, is it the case on the system you're interacting with? Do you know every package that should be installed because it comes out of the box in the distro? Do you want to (aka: do you have the time, resourcing and effort to do this for the almost zero gain it will get you in the short term unless you can point to business outcomes which are fulfilled by the activity?) reply matrss 5 minutes agorootparentYes, this is debating state management. For full declarativity some form of state management for the parts of the system that should be under declarative control (like terraform) or a stateless but very holistic view of the system (like NixOS, I guess also Guix System) are needed. Given that ansible has neither it can't be much better then what it is. I disagree that that is the right choice though. As it is I see not much more value in ansible than in some sort of SSH over xargs contraption combined with a list of servers. The guarantees they give are the same. > Do you know every package that should be installed because it comes out of the box in the distro? Do you want to [...]? No, I don't want to. Thankfully, with NixOS I don't need to, since the pre-installed packages are automatically part of the declared state of my NixOS systems (i.e. I declare the wanted state in the same way in which the defaults are also declared, which makes it easy to merge both). jacobr1 7 hours agorootparentprev> As soon as you're trying to do deletions, you're making assumptions that the view of the state you have is complete and total and that is usually not the case terraform does this, which is why it tracks the its own representation of the prior global state. So when you remove a declared resource the diff against the prior state is interpreted as a delete. Note this does introduce the problem of \"drift\" when you have resources that are not captured in the scope of the state. > i.e. do you want to put `linux-kernel` in your package list? Yes. At least I want to put something like \"core-packages\" or \"default\" or similar as part of setting my explicit intent. reply NortySpock 7 hours agorootparentprevIt lets you separate \"here is the final state of the system that I want\" from \"how to get there\". If a SQL compiler or `terraform plan` command can convert \"the current state of the system\" + \"desired end-state\" to a series of steps that constitute \"how to get there from here\", then I can usually just move forward to declaring more desired states after that, or debugging something else, etc. Let the computer do the routine calculations. When using a path-finding / route-finding tool, having the map and some basic pathfinding algorithms already programmed in means we no longer need to \"pop a candidate route-segment off the list of candidates and evaluate the new route cost\"... I simply observe that I am \"probably here\" and I wish to get to \"there\"; propose a route and if it's good enough I'll instruct the machine to do that. If I can declare that I want the final system to contain only the folder \"/stuff/config.yaml\" with permissions 700 -- I don't care what the contents of stuff were previously, and if it had a million temp files in it from an install going sideways or the wrong permissions or a thousand nested folders in it, well, it would be great if the silly computer had a branching workflow that detected and fixed that for me, rather than me having to write yet another one-off script to clean up yet another silly mis-configured system that Bob left as a dumping ground that I have to write yet more brittle bizarre-situation-handling code for. Same for SQL and data. \"Look, Mr. Database, I don't actually know what's in the table today, and I don't know why the previous user dumped a million unrelated rows in the table.... Can you answer my query about if my package has shipped, or not?\" reply mmh0000 15 hours agorootparentprevIt’s the cattle not pets mindset. In most organizations the sysadmin team is really undersized. Not uncommon to have one admin per several hundred systems. In such places, there is no time to care for individual servers. If a server is misbehaving we blow it away and spin up a clean replacement. Declarative scripts make it easy to manage a fleet. reply OJFord 15 hours agorootparentI think that's.. perhaps not orthogonal, but has some orthogonal component - you could certainly have something like: for i in range(100): ip = cidrhost(subnet, i) if exists := get_server(ip): continue create_server(ip=ip) and so on. I don't like it, but because it's procedural/imperative, not because it's particularly more 'petty' than the Terraform (or equivalent) would be. For me it's more about what I'm doing, conceptually. I want a server to exist, it to have access to this S3 bucket, etc. - the logic of how to interface with the APIs to make that happen, to manage their lifecycle and check current state etc. isn't what I'm thinking about. (In Terraform terms, that belongs in the provider.) When I write the above I'm just thinking I want 100 servers, so: resource \"cloud_server\" \"my_servers\" { count = 100 ip = cidrhost(subnet, count.index) # and so on } comes much more naturally. reply linuxdude314 15 hours agorootparentThis fails completely even at small scale when the script is interrupted before finishing. The difference between just using some Python vs Terraform is idempotency. TF isn’t going to touch the nodes the script succeeded on; if you have to start your for-loop script it will, which may not be desirable. Frankly these days configuration management is a bit dated… You’re much better off in most cases using a tool like Packer with whatever system you want to bake an image, then use a simple user-data script for customization. It’s very hard to scale continuous config management to thousands of servers. reply OJFord 13 hours agorootparentEh, any way you do it could leave it in an unfinished state if interrupted, I'm not too bothered about that. (But it does sound like you think I was speaking in favour of doing it in a procedural python script sort of way? I was not.) Packer and Terraform do different jobs (they're both by Hashicorp!) - you can bake an immutable image all you like, you still need to get a server, put the image on it, give it that S3 bucket it needs, IAM, etc. reply jacobr1 7 hours agorootparentThey work together to produce immutable cattle. The alternative is managing a pool of servers where you are doing things like in-place patch upgrades, vs a teardown of the old infra and replacing it with the newly baked servers. reply OJFord 49 minutes agorootparentI'm well aware, I just don't see what 'use Packer' has to do with choice of programming paradigm for Terraform or other tool in that role. reply hathawsh 14 hours agorootparentprevHave you been introduced to functional programming? It's excellent and mind-bending at first. Here's an overview: https://github.com/readme/guides/functional-programming-basi... Declarative structure is at the heart of functional programming. Declarative is not the right choice everywhere, but when it makes sense, it can significantly raise the quality of the code. reply jacobr1 7 hours agorootparentprevBecause what most people want is actually something closer to \"Goal Seeking.\" If the system works as intended (and as you point out with the need to debug is often does not!) then defining the desired end-state and letting the system figure out how to get there, is a simpler, higher order abstraction. And it can also often be clearer to just say \"ensure these prerequisites are met\" such that alternative implementations can achieve the same outcome. In practice, abstractions are leaky. reply Fizzadar 16 hours agorootparentprevConceptually I think it’s much nicer to define the state of the system rather than the steps to get there, and tool of choice figures it out. But there’s always edge cases and situations that doesn’t work which is why pyinfra supports both and they can combine any way you like. reply dboreham 13 hours agorootparentprevIt makes people feel that they're smarter than you. See also functional programming. That said sometimes it's useful as s way to auto generate imperative actions. reply OJFord 12 hours agorootparentI really can't see how you could feel that way about it after spending even just a few minutes (which it sounds like you have) to understand what it means beyond just reacting to terminology, something having a name. I definitely think it'd be easier to explain a python-like declarative language to someone who asks what programming is than actual python. 'It's just describing the way things should be' vs. 'it's like a series of instructions for how to compute ...' Certainly not more clever IMO, if anything the opposite. Like I said above or elsewhere in this thread, when I'm managing infrastructure with Terraform I don't want to (and don't have to) be thinking about how to interface with the API, check whether things exist already, their current state, how to move from that to what I want, etc. I just know the way I want it being, I declare that, and the procedure for figuring it out and making it so is the provider's job. That's not smarter! The smart's in the provider! (But ok if you're going to make me flex, I've written and contributed to providers too... But that's Go; not declarative.) reply pid-1 11 hours agorootparentprev> Obviously python isn't Obviously you can create declarative idioms in Python reply OJFord 8 hours agorootparentSure, if you keep reading I described one that it looked like this might be doing. reply mrled 15 hours agoparentprevOh man this is really cool. I have also written a Python infrastructure-as-code project (https://pages.micahrl.com/progfiguration/), I really like the idea of using a programming language rather than a text document to define infrastructure. Yours looks very polished, and the built in support for testing in Docker is a brilliant idea. reply InitEnabler 15 hours agoparentprevdang this exploded. I came across the project this morning when I was looking at a blog on how to implement a generic programming language to become a configuration language and it mentioned pyinfra. Glad this project is getting some exposure. :) reply linsomniac 7 hours agoparentprevWhat is different in v3? Didn't see it in the \"Next\" docs. reply js2 7 hours agorootparentMostly this from the 3.x changelog: > pyinfra now executes operations at runtime, rather than pre-generating commands. Although the change isn't noticeable this fixes an entire class of bugs and confusion. See the limitations section in the v2 docs. All of those issues are now a thing of the past. https://github.com/pyinfra-dev/pyinfra/blob/3.x/CHANGELOG.md reply rbut 10 hours agoparentprevHow does it compare to Fabric? At first glance it looks quite similar. All our scripts are written in Fabric, but Fabric appears to be somewhat abandoned and the latest version never reached full parity with v1. I'd be looking to try something new next time. reply esafak 15 hours agoparentprevHow does it compare with pulumi? reply gnosek 13 hours agoparentprev[yet another reference to Ansible, sorry! :)] This looks like infinity times better than Ansible in some cases and somewhat worse in others (python.call every time I'd need to access a previous operation's result feels clunky, though I certainly understand why it works that way). Do you think it would be possible to use Ansible modules as pyinfra operations? As in, for example: - name: install foo apt: pkg: foo state: present could be available as: from pyinfra import ansible ansible(name='install foo').apt(pkg='foo', state='present') where the `ansible` function itself would know nothing about apt, just forward everything to the Ansible module. Note 1: I know pyinfra has a way to interface with apt, this is just an example :) Note 2: It's just my curiosity, my sysadmin days are long gone now. reply Fizzadar 13 hours agorootparentDefinitely possible! Not familiar with the ansible Python API so partially guessing but the pyinfra op could yield a callback function that then calls ansible at execution time. Alternatively you could just yield ansible cli and execute from the local machine using the @local connector. reply mdaniel 12 hours agorootparentFWIW, ansible modules (all of them, to the best of my knowledge) operate via a stdin/stdout contract since that's the one universal api for \"do this thing over (ssh|docker|ssm|local)\". That's also why it supports writing plugins in any language (shell, compiled, python, etc) since `subprocess.Popen().communicate(b'{\"do_awesome\":true}')` works great DISCOVERING the available ansible actions is the JFC since, like all good things python, it depends on what's currently on the PYTHONPATH and what makes writing or using any such language-server some onoz And this wasn't what you asked, but ansible has a dedicated library for exec, since the normal `ansible` and `ansible-playbook` CLIs are really, really oriented toward interactive use: https://github.com/ansible/ansible-runner#readme reply dang 13 hours agoprevRelated: Pyinfra automates infrastructure super fast at scale - https://news.ycombinator.com/item?id=33286972 - Oct 2022 (37 comments) pyinfra v2 - https://news.ycombinator.com/item?id=30999030 - April 2022 (2 comments) Pyinfra v2.0 Released - https://news.ycombinator.com/item?id=30973976 - April 2022 (3 comments) Pyinfra v1.4 - https://news.ycombinator.com/item?id=26983266 - April 2021 (3 comments) Pyinfra – automate infrastructure super fast at scale - https://news.ycombinator.com/item?id=23487178 - June 2020 (64 comments) Pyinfra v0.3 - https://news.ycombinator.com/item?id=13862942 - March 2017 (1 comment) Pyinfra v0.2 - https://news.ycombinator.com/item?id=12956784 - Nov 2016 (2 comments) reply activatedgeek 18 hours agoprevI current use Ansible to setup both local and remote hosts. I've been very happy with it, and love that Pyinfra intends to support the Ansible connector. My main gripe with Ansible is the YAML specification. Ansible chooses to separate the task specification and task execution. Pyinfra chooses to directly expose the Python layer, instead of using slightly ugly magic functions/variables. I like this approach more since it allows standard Pythonic control flow instead of using a new (arguably ugly and more hassle to maintain) grammar. Excited for Pyinfra! reply nijave 11 hours agoparentReal Python instead of templating (Jinja in YAML) would be nice. In Ansible, it's fairly arduous to try to reshape data from command outputs into structures that can be used in loops in other tasks--especially if you want to merge output from multiple commands. Main usecase is more dynamic playbooks where you combine state from multiple systems to create a new piece of infrastructure. I think templating yaml or templates inside yaml is a bit of an anti pattern. reply WesolyKubeczek 18 hours agoparentprevI'm only using Ansible because of its extensive documentation and mindshare, but my best successes with it were when I let go of the idea that the playbooks specify state \"declaratively\". I now treat them as imperative steps where each step is being checked as to whether it needs to be done or not, and it has vastly simplified my mental model of what Ansible is actually doing. reply letmeinhere 17 hours agorootparentI think of ansible as a declarative-imperative lasagna, where each playbook is a desired state, achieved by an imperative sequence of plays, which themselves are desired states, achieved by a sequence of roles, which have the same properties, and then tasks too below that, finally resolving to plain old imperative Python. It's all pretty messy but useful. reply WesolyKubeczek 16 hours agorootparentI never grokked this “plays” and “roles” business. All in all, this clever and cute terminology gives me creeps. I only use “playbooks” as series of tasks, more or less. Maybe I need an explanation “like I’m just a programmer/sysadmin and I need to use boring terms years old” of what is what, every explanation so far (when I bothered to look for it last) was too invested in this theatrical terminology, so I gave up and stuck to what worked after a command or two. Same with Chef and its galore of cooking words, but thankfully I don’t have to use Chef. reply zanecodes 16 hours agorootparentTo this day I'm miffed that Chef has \"cookbooks\" which contain \"recipes,\" which contain... \"resources.\" Why not \"ingredients??\" It was right there! reply ornornor 3 hours agorootparentprevAnsible is useful but so confusin (to me anyway). The way I see roles vs playbooks is whether I’m going to reuse it or not. Roles are more generic playbooks in a sense that I can share with others or across deployments (for example setup a reverse proxy, or install a piece of software with sane, overridable defaults. I can then use roles within playbooks to tweak the piece of software’s configuration. If it’s a one-off confit/setup then I’ll use a playbook. I don’t know if it’s the right paradigm (I don’t think it’s explained well and clearly in the docs), but using this rule of thumb has helped me deal with it. Of course, any role can be a playbook and vice versa since they do the same thing functionally, it’s all about reusability and sharing. Kinda how you have libraries in software: role = library, playbook = the software you actually want to write. reply rmetzler 16 hours agorootparentprevAn Ansible playbook is usually the main entrypoint, it consists of a list of plays. Each play has hosts and a list of tasks to run at them. Because people wanted to reuse their code, the abstraction of roles was created. A role is something like „setup basic OS stuff“, „create this list of users“, „setup a Webserver“, „setup a database“. The association, which roles to run on which machine still happens in the playbook. reply WesolyKubeczek 16 hours agorootparentI'm using include_tasks: and import_playbook:, like an animal :) reply trallnag 15 hours agorootparentYou can't share a set of tasks on Ansible Galaxy without wrapping it in a role reply polski-g 17 hours agoparentprevMy biggest problem with Ansible is the YAML, doing anything with loops is horrendous & trying to mangle nested variable types requires a StackOverflow post every time. A few years ago, I found a library that lets you utilize Ansible's tasks in raw Python, without the huge hassle of using the Ansible Python API. I cannot find it again however. But PyInfra looks great. reply Fizzadar 17 hours agorootparentThis alone is the entire reason I started working on pyinfra, loops in YAML is just evil. reply bruh2 16 hours agorootparentWhy did you choose to roll your own modules rather than do what's described in the comment you replied to, i.e. provide a Python layer for interacting with the rich set of available Ansible modules? Not trying to be rude ofc, I'm sure you considered it and have a good reason – just curious as of what it is. An incredible project you put there, nonetheless:) reply Fizzadar 15 hours agorootparentNot rude at all :) When I first started (not sure if this is still the case?) Ansible would push Python code to the target machine and execute there, meaning it wasn’t actually agentless. I always thought of pyinfra as copying what a human would do if configuring a server by hand over SSH, so new modules that use only shell commands were needed. reply natebc 11 hours agorootparentprevI recall the Ansible Python API to be labeled as Interal Use Only and subject to change on a whim because of that. That at least discouraged using ansible in that way. Seems they still kinda discourage it but do have examples at least. https://docs.ansible.com/ansible/latest/dev_guide/developing... reply geerlingguy 15 hours agorootparentprevIt could be interesting if you could write a translator to use any Ansible module with this, and vice versa. reply movedx 12 hours agorootparentprevBut you can just write a small module in Python, have it do the looping logic for you, install it at the root of your project's configuration-as-code repository, and then use the module in the YAML, removing the need to do complex, ugly loops in YAML. Is there a reason this isn't an option for you? reply jdoss 16 hours agoprevI just started using Pyinfra to wrangle a bunch of servers and it is a breath of fresh air compared to Ansible. I moved all of my server OS installs to Fedora CoreOS which doesn't ship with Python in the OS and since Pyinfra doesn't need Python on the host node I can kick off tasks in bulk to do server things. It is great. I cannot wait to see where the Pyinfra project goes. On a side note, one of the most hacky things I came up with to get Ansible working on Fedora CoreOS was to bind mount a container rootfs that had python 3 and then symlink it into the right spots. You can of course add Python in with rpm-ostree if you want but I wanted to avoid layering packages at the time. I wasn't proud of it. But it worked. https://github.com/forem/selfhost/blob/main/playbooks/templa... reply shoggouth 15 hours agoparentDoesn’t IBM/Red Hat own Ansible and Fedora CoreOS? I would think they would mix together perfectly. reply movedx 12 hours agoparentprev> since Pyinfra doesn't need Python on the host node I can kick off tasks in bulk to do server things. And you can do this with Ansible, too. Check out the raw module/command. reply jdoss 12 hours agorootparentI am aware of the raw module. The stuff I was doing with Ansible and Fedora CoreOS required more than just that module. reply zbentley 17 hours agoprevI think Puppet hits the sweet spot in this area. It's default is a series of idempotent \"here's how this should be configured\" statements, but it can be used as a full programming language in its more advanced capacity, and it's reasonably extensible (in Puppet-lang and Ruby) to support specific custom applications. I also think that the facts/manifest/apply separation is conducive to nicely testable infra code, and useful dry-run output. I'm always surprised that Puppet isn't still more popular. My theory is that it's passed over because of its age/cruftiness/bad vibes in some cases, and that a couple of technical flaws mess it up for some key userbases: For folks who just want a quick-to-start management tool for a small set of config, Puppet's ugly and clunky client/server model and the hyper-YAML-ification of its best practices (which is pursued to a fault by the community, and not helped by the Hiera pitch that the Puppet stack can also be sort of an asset tracking/catalog system) make small-scale usage and prototyping hard. Puppet doesn't have to be used that way (it can be used just like pyinfra/Ansible with a local-apply or via Bolt, hitting a nice sweet spot between ad-hoc/non-idempotent commands and nice declarative/idempotent Puppet code), but I think the puppetmaster/hiera-all-the-things legacy in the community does Puppet and potential new users a disservice. From the other side, I think a lot of more cloud-oriented users looking for a \"better Terraform for server state\" end up annoyed by the quality of modules on the Puppet forge and Puppet's lack of a statefile equivalent (meaning that it doesn't support deletes or infrastructure state snapshots in the same way TF does). reply turtlebits 16 hours agoparentAdding config management agents to run on your infra is IMO unnecessary operational burden. (ie puppet, chef, saltstack, etc.) In the day and age of everything running on Docker, the closer you are to a bare OS image, the better. Config management that uses SSH is generally good enough. reply zbentley 16 hours agorootparentI agree; that's the \"client-server legacy\" that I mentioned in GP. It's unfortunately not widely known that Puppet can be run just like you describe, over SSH (or, for e.g. running in a Docker container, can be invoked as a one-shot \"puppet apply\" against a local configuration file like pyinfra's \"local\" transport): https://www.puppet.com/docs/bolt/latest/bolt.html. Doing that requires no background daemons, puppetmasters, cert-signing hell, inventory management PuppetDB/Foreman stacks, or any of that stuff: you run a command which SSHes to a remote/local machine and applies changes based on instructions written in Puppet-lang or one-off scripts. The remote end is entirely self-hosting; it doesn't rely on anything being running on the remote host (Bolt will install the \"puppet-agent\" package to bootstrap itself, but in this context that package is inert and is used equivalently to a library when you run tasks). I'm with you that the agent-based approach is far from the best way to go these days. I'm just bummed that we're throwing the baby out with the bathwater: I wish Puppet-the-language and Puppet-the-server-management-tool weren't so often dismissed along with the Puppet-as-inventory-system or Puppet-as-daemonized-continuous-compliance-engine. reply bigstrat2003 16 hours agorootparentprevHard disagree. Having an agent running on things is IMO far superior for preventing config drift (agents checking in versus one big centralized cron job pushing state to everything). And to be honest, the fact that it doesn't play as well with Docker is a flaw with the idea of putting everything in Docker, not having a config agent. Some things work well in containers, but it's silly to try to shoehorn everything into them the way many people do. reply eurekin 16 hours agorootparentprevCan concur, used puppet a bit at the dayjob and agent issues were common at some point. Also, for bigger inventories on a single vm runtimes shot up quickly in the hour realm reply zbentley 16 hours agorootparentYeah, dealing with agent issues sucked; I'm glad I haven't worked on one of those setups in awhile. And if the agent bootstrapped some part of the shell-in-and-remotely-troubleshoot tooling, good luck debugging it, and if the agent bootstrapped the telemetry system, good luck telling the difference between \"host with agent failure\" and \"host that disappeared\"... anyway. Fun times. For hour+ runtimes I really do think that's pretty much always user error. I know that's a clichéd and grouchy comment, but (as, I'll admit, a Puppet fan with some personal defensiveness for a favored tool) I do think it's true in this case. reply esoterae 16 hours agorootparentprevSsh and its child processes are just another agent. Agents of a model that must be up at time-of-convergence as seen from the coordinator node; a remarkably inflexible arrangement that can only be addressed with additional development not otherwise necessary. Ruby is far, far preferable to shell for ease of idempotence and implicit convergence. reply slyall 7 hours agoparentprevAnother reason for puppet being less popular is lots of places ended up with very complicated configuration that did everything on the server but was hard to work with. Ansible you could deploy a small playbook that did just one thing. A lot easier to get started with and keep under control. As others have mentioned puppet was also a lot less useful when server images can per-configured and often short lived. It was more designed to take a bare OS install and turn into a long-lived server. reply bityard 12 hours agoparentprevI was an early adopter of Puppet back when it was fairly new. It was a breath of fresh air when the state of the art was cfengine! Despite its many great ideas, I never particularly liked the agent or need for a master server. And I've always managed to avoid learning Ruby so I couldn't easily hack on it myself. The company I'm with now uses it extensively so I'm having to re-learn it and so far my impression is that it went from \"cool new open source thing\" to \"your average enterprise-grade bloatware thing\". reply aprdm 16 hours agoparentprevI believe it's due to Ruby being its language of choice. Ruby is mostly a dead language in the Ops space, unlike Python. Having inherited a big mess on Puppet of some people who used the flexibility of Ruby to automate 5 datacenters, but then left the company was also an interesting experience.. reply nijave 11 hours agoparentprevUsually when I use these types of tools I'm building immutable infrastructure where a golden image gets built and an existing app data volume gets attached to a new OS image (same workflow as Docker containers but more access to kernel/hardware) Puppet doesn't work well for that. I've seen it come up in auditing scenarios since the agent can effectively report if the instance is still in the correct config state. reply Maledictus 56 minutes agoprevIMHO Ruby is better for creating DSLs, so I wrote a small thing to scratch my own itch: https://github.com/marius/koch This is not meant to scale to more than a handful of machines, but you get the idea how nice straight Ruby is for a machine specification DSL. reply kureikain 14 hours agoprevThanks for making Pyinfra. It's one of the tool that get out of your way and let. you get the work done. The tool works for you instead of you fighting with the tool. Pain point of ansible: storing state and checking later, coordinate state between server is all a breezy with Pyinfra because you write the Python code to perform those check. The system is very well though out. No need to hack around host file, inventory is just a python script that export resource definition. No more static, ad-hoc host var, you get a real python script to define and return your variable. Using pyinfra I was able to focus more on the \"compute\". the state such as credential, inventory can managed and store outside such as in SSM or just call python ec2 api to filter instance by tag. reply photonthug 17 hours agoprevAgree with those saying the landing page needs work. But terraform/docker integration sounds interesting.. after many years of ansible you’d think there is a more comfortable way to replace a hundred lines of hacky bash in dockerfiles. Also, can I just say that cm is extremely frustrating? Not sure this is the fix, but hopefully the story isn’t over. In my experience the maintenance of cm codebases never, ever stops. At first I thought it was a matter of expertise, but experts typically agree and just call it the cost of doing business. Shelve something for three months and it will break on the next run, on the same os/host where it used to work. Blame the package manager, blame the os choice, or the cm tool. But it’s embarrassing and insulting for Devops teams after putting in the effort to do things right, and evangelizing to everyone else about repeatability. I’d rather just see tighter integrations with containers moving forward and never think about it again. Not everyone is using k8s but in the 2020s everyone probably should default to using docker before doing things of even marginal complexity directly on hosts. reply Fizzadar 17 hours agoparent> Agree with those saying the landing page needs work. Any & all feedback much appreciated! It's basically just a very rough copy of the README at the moment. reply wg0 9 hours agoprevAnsible needs a working Python interpreter on the target machine. Pyifra doesn't even need that. Just needs a shell. Subjective opinion but it is heavily under recognized piece of software. Ansible is really great but you soon end up writing Python in Yaml strings. So why not straight up Python? reply pants2 15 hours agoprevThis will tie nicely into my favorite way to deploy services these days: 1. Use PyInfra to set up Docker and Tailscale on remote hosts and any other setup. Open the Docker port to your Tailnet. 2. Use the Docker provider for Terraform to set up and manage containers on those hosts from your dev machine or from a CI/CD tool. Tailscale allows containers on different machines to communicate privately, or you can open a port to the web. This makes for such an easy-to-use and bulletproof setup. In the past I would have used Kubernetes but I've come to realize that's overkill for anything I do and way harder to debug. reply nijave 11 hours agoparentThis kind of setup is a nice improvement over golden images with a lot of the benefits. Application setup, upgrades, and rollback become much easier when the whole app is packaged together and has its own copy of dependencies. You can also throw in systemd units for Docker or Podman. I usually create a small shell script that pulls, removes any old container, then runs a new container with correct args in the foreground and toss that in a simple systemd unit reply udev4096 7 hours agoparentprevWhy not go for headscale? reply asselinpaul 14 hours agoparentprevis there a blog post or github repo with more info on how you do this? reply pants2 13 hours agorootparentNo but I'll think about writing one up! reply posix_monad 16 hours agoprevPython seems like a really poor choice for infrastructure. - Python is not easy to build into portable binaries - The package ecosystem is very hard to use in a reproducible way - The language is not truly typed - types add massive value for infrastructure and scripts because they are less likely to be unit-tested - The lack of a \"let\" or \"var\" keyword makes simple programming errors more likely (again, this code is less likely to be unit-tested) Maybe I'm missing something? I don't know why I would want to introduce Python in this domain. reply DandyDev 15 hours agoparentWhy is it important to be able to build into portable binaries? Pyinfra doesn't require running Python on the machines you manage. Pyinfra basically turns your Python code into shell commands which it runs over SSH. So only your development machine has to run Python. I think there is not a lot of overlap between people who need to automate infrastructure and people who don't know how to install Python on their development machine. As for your other comments regarding Python as a language: I mostly agree. I have stepped away from Python as a language to develop production software. In Python I miss the confidence I get from static typing. Having said that, for automating infrastructure, you're effectively comparing Pyinfra and Python to bash scripts and YAML (for things like Ansible), which are both orders of magnitude worse if you like static typing or any form of being able to verify what you wrote. reply yjftsjthsd-h 9 hours agorootparentN=1 I'm capable of handling python on my dev/deploy box(es), but that doesn't mean it's not a pain. In my perfect world, ansible/puppet/chef/whatever would ship as a single static binary even when they mostly ran against remote SSH targets. reply fire_lake 3 hours agorootparentprev> So only your development machine has to run Python. If you have a team of developers and a CI process, then portability is important. There isn’t one development machine. reply BirAdam 7 hours agorootparentprevRight, but this makes me wonder why I can’t just do: ssh user@host “echo ‘Hello World’” All these kinds of tools essentially just executing commands over SSH… I could just SSH. reply Fizzadar 16 hours agoparentprevExtremely aware of this (see pyinstaller attempt): https://github.com/pyinfra-dev/pyinfra/pull/768) I chose Python because it’s what I was writing all day back in 2015. Which makes me realise pyinfra is almost 10! Edit: I mostly write Go or YAML (k8s) these days but Python still makes an appearance from time to time (outside of pyinfra dev). reply nijave 11 hours agoparentprevA decent Python development tool chain handles most of that. Docker, pylint, black, type hints integrated with IDE/editor Admittedly some languages like Go do a better job integrating all this into the core of the language. However, Go doesn't tend to have as powerful of a stdlib so it tends to be a lot more verbose to achieve the same thing. reply fire_lake 3 hours agorootparentDocker should not be required for day-to-day development. reply exceptione 13 hours agoparentprevI 100% agree with your points. No type checking = no serious job. I have learned enough from Ansible to not ever touch that kind of stuff again. There has been a time that Python was a fringe language, only known by some hardcore nerds. I thought Joel Spolsky had once mentioned that having Python on your resume was a signal of a quality developer, someone who went off the beaten path. Times have changed. Python is now the MS Excel for developers. It shines for quick and dirty data mangling. Unfortunately, that is how a seizable portion of people approach software engineering. My theory is that for some having to do abstract thinking and perform a dry analysis beforehand is an impediment. They can only discover what they want while banging out something. They fix the runtime errors they could catch, and slap some more features on top. Types imply a kind of foresight, and that is what some people really have difficulty with. EDIT: Might sound negative, so I admit that the quick feedback cycle you can get from an interpreter language like php/python is a feature in itself. reply goodpoint 1 hour agoparentprevPython is an excellent choice. > - Python is not easy to build into portable binaries > - The package ecosystem is very hard to use in a reproducible way People use OS packages since 4 decades. > - The language is not truly typed The language IS strictly typed. > - types add massive value for infrastructure and scripts because they are less likely to be unit-tested 99% of errors in deployment are not solved by typing. > - The lack of a \"let\" or \"var\" keyword makes simple programming errors more likely (again, this code is less likely to be unit-tested) If your logic is so complex that let/var makes a difference you should be not touching infra. reply aprdm 16 hours agoparentprevMaybe because Python is already in use by pretty much every company that makes money in this (and others) domain ? Some of what you mention looks like pebkac problems as well. reply mhh__ 16 hours agorootparentWell so is pretty much any configuration language under the sun, and all the other options that aren't python. reply benrutter 15 hours agoparentprevI think Go would be a logically choice if you're being completely language agnostic, but most teams aren't. If teams are working exclusively in python already for web or data projects, there's a benefit to not introducing a new language just for architecture deployment if that's a small part of a teams function. reply JoBrad 15 hours agoparentprevWhat would you have used? All of your issues aside, Python is very approachable to people who are used to managing infrastructure but may not have a strong programming background. reply dboreham 13 hours agoparentprevShiv is a decent solution for making a portable package. Single file that only depends on a recent system Python being installed. reply mountainriver 11 hours agoparentprevIt’s better than Yaml or HCL though reply bborud 15 hours agoparentprevPython is a nightmare when used for tooling. I’ve wasted so much time wrangling Python tooling for embedded development. Go would be a much better choice. reply mixmastamyk 14 hours agoparentprevSounds like you'ved misjudged the use case. Tools like this do the deployment, they aren't generally deployed themselves. So a portable binary is not a requirement. Other points like let or types are not an impediment either, there are many quality tools available if you need them (ruff, pyflakes, mypy), and python has been doing this kind of work productively for thirty years now. reply posix_monad 56 minutes agorootparent> Tools like this do the deployment, they aren't generally deployed themselves. It will have to be executed on many different developer machines (or even your own machine several years in the future) so a simple, reproducible build process, including fetching pip dependencies, is critical. reply IshKebab 12 hours agoparentprevI agree, Python is a pretty bad choice for all the reasons you mentioned. That said I think there are precious few good alternatives. I've been using Deno a fair bit for \"scripting\" and it works pretty well, but I wish there were more options. Also I have to say if you are using a tool like this to manage thousands of machines you're absolutely doing it wrong. I don't even work in ops/infra but even I know that manually running commands on multiple machines via SSH is asking for trouble. reply mattbillenstein 9 hours agoprevWas there any thought to perhaps do a version with an agent? I really like how fast Saltstack can be as compared to Ansible. I've been using my own homegrown project that does just this - Python roles, server/client, Mako templates: https://github.com/mattbillenstein/salty It's very very fast to do deploys on long-lived infrastructure, but it hasn't been optimized for large clusters yet; I expect the server process will be a bottleneck with many clients, but still probably faster than Ansible for most setups. reply Fizzadar 3 hours agoparentpyinfra supports executing on the local machine (@local connector: https://docs.pyinfra.com/en/2.x/connectors/local.html). If you store the operation files on the machine that’s basically an agent when executed just without a periodic check for other changes. Adding a mode to do that in a loop would be pretty trivial.. reply mattbillenstein 1 hour agorootparentYeah, I'm talking more about RPC - the server sends a command to the agent - the agent does a thing and returns a response. There's no external sync of the command and given a long-lived connection - client/server what you will - this can all be completed in milliseconds with no new-connection overhead. reply ornornor 3 hours agoprevI use pyinfra through molecule for testing sensible roles, it’s made it possible to have a process resembling TDD and have automated tests for my roles and playbooks. I actually don’t know how else to do it than with molecule and pyinfra, being able to have automated tests on ansible “code” made a big difference for me! reply rajaravivarma_r 15 hours agoprevThis is great. We tried ansible and gave up as it was difficult to keep configuration DRY and annoying to create conditions with no control structure. It was before ansible 2, so probably things are better now. Then we started using Python fabric. Wow it was so freeing. Any helper methods were easily extracted and writing conditions felt natural. Now I am using Python invoke to maintain my local setup. reply bityard 12 hours agoparentI gave up being religiously DRY in Ansible playbooks early on. It's much easier to open a file and read through a list of simple 2- or 3-line tasks that execute sequentially, than it is to chase down a bunch of imports. Same as in programming, over-adherence to DRY leads to spaghetti code. reply rajaravivarma_r 1 hour agorootparentI have tried this path of not trying to DRY everything, but has regretted and refactored to a more DRY approach eventually. The cost of remembering to fix/alter the logic everywhere is more than trying to keep it DRY. More often a method or a module is enough, nothing fancy. The only place where I have accepted that DRY is not worth it is, unit tests. I used to extract any common behavior in a shared test, but each object will eventually evolve in its own way that the effort to make it DRY will be useless. reply Izmaki 15 hours agoparentprevAnsible is strong when done right. Check out the tutorial series by Jeff Geerling on YouTube, he's amazing. reply rajaravivarma_r 1 hour agorootparentMay be, but moving to Python did not take anything away. It brought more joy that you have more control over things like, on which server to run the migration and choose UAT or prod and just a list of servers specified in the command line. And organizing the modules was straight forward as we already knew/did that in the project. Perhaps, it comes from my programming background, but its true. reply Lucasoato 17 hours agoprevShould this be considered some kind of alternative to tools like Ansible? Also CDKTF should be in the space for imperative infrastructure as code definitions. - https://developer.hashicorp.com/terraform/cdktf reply slt2021 16 hours agoparentcdktf is fantastic reply Lucasoato 15 hours agorootparentWhat languages are you using it with? Last time I tried with python the code was super verbose, type hinting suggestions was not happening, both vs code and pycharm… can it be linked by the fact it’s transpiled from typescript? reply mhh__ 16 hours agoprevI worry about using python for this kind of thing. It's very hard to be confident about python code. If you have a good code review feedback loop and so on then it can be OK but proper types enable lots of good things when dealing with configuration and state. reply Spivak 15 hours agoparentI mean Python has your back with static type hints. While Python's type system isn't the most powerful in terms of expressiveness -- TypeScript is stronger, Go is weaker, it's more than capable enough for a config management system. reply mhh__ 14 hours agorootparentEmphasis on hints. And my point is that it can be way too capable. reply Spivak 13 hours agorootparentI guess the fact that they're hints doesn't really bother me when you're doing static analysis. You can have strong typing with a weak type system like C and Go where the types will be rigidly enforced but they're also not expressive. There end up being lots of things you can't express in the type system which leads you to do things like void* or `any` with manual casting. But a fully type-hinted Python codebase is extremely expressive, the times where you have to opt-out of the type system is much much rarer and the types you end up writing are much more specific so you get stronger guarantees. It's not without downsides but I don't think it's \"because they're hints you can't trust them\" since lots of languages erase their types on compilation. reply exceptione 13 hours agorootparentI am not elbow deep into Python ecosystem, but how many python code bases are fully type-hinted? Maybe I am overlooking because I am not a pythonista, but when looking at this code [1] I see only some superficial hints. Looking at `_make_command`, I need to look inside the body to see that the first argument is expected (?) to be callable (it just ignores otherwise). ____ 1. https://github.com/pyinfra-dev/pyinfra/blob/3.x/pyinfra/api/... reply manojlds 18 hours agoprevDoes it allow me to run a script against an EC2 instance, say, and it spins it up and take care of everything? Something like packer would but without creating an AMI reply letmeinhere 17 hours agoparentYou ever try cloud-init? You can specify your config in user-data when launching pretty generic AMIs. https://cloudinit.readthedocs.io/en/latest/index.html reply manojlds 15 hours agorootparentI don't want to launch instances (and run a script to set it up etc), I want to run my script THROUGH an instance. reply nijave 11 hours agorootparentI made this a while back that utilizes shell script and AWS cli to spin up and cloud init to run things https://github.com/nijave/cloud-init-golden-image For this type of use case AWS has managed services like Batch, ECS, or even auto scaling groups that can make this easier depending on what you're trying to achieve. ECS with Fargate executors is fairly easy to run arbitrary things inside a VPC reply Fizzadar 17 hours agoparentprevYou'd need to create the EC2 instance outside of pyinfra (ie in Terraform). This could be done as part of the inventory itself, but wouldn't self-delete afterwards. If using Terraform there's a connector that allows you to plug Terraform output as a pyinfra inventory: https://docs.pyinfra.com/en/2.x/connectors/terraform.html reply verdverm 17 hours agoparentprevfyi, in Packer, there is an option to not create the final image reply manojlds 15 hours agorootparentYes! Which is what I am doing now, but was feeling it was using a tool that wasn't meant for that job a bit. reply godisdad 16 hours agoprevSeems like an interesting generalized mix of something like https://github.com/cloudtools/troposphere and Ansible from a glance. The value add would be unifying provisioning and configuration management in a Python-y experience? The lifecycle of each is distinct and that's traditionally where the headaches of using a single tool for both has come in reply umen 5 hours agoprevThere is need for python module that complies to ansible code reply riffic 17 hours agoprevthis feels like Michael DeHaan's OpsMop project that existed for like a week before he pulled all the code offline. https://news.ycombinator.com/item?id=18717422 Interesting to see all the Ansible comments here. I'll have to check this out asap. reply lodriv 2 hours agoprevHowever the email address was not being processed reply crispyambulance 17 hours agoprevYeah, I like this approach. There's something about YAML that just sucks the joy out of programming. It seems like a giant step backwards when we have plenty of amazing programming languages in existence. Even when infrastructure yaml like cloudformation are wrapped by some SDK, it can still be a pain because you end up with stuff like... do_something(\"___((!-prickly_config_string_::might as well use yaml _blah-blah:blah))\") Back in the days of java and xml, there used to be a distant promise of \"binding\" the xml to code (remember jaxb?) so that you could then just manipulate it fluently as code and then \"marshall\" it out back to xml when you were done. Those days and that promise are gone, right? reply mdaniel 17 hours agoparenthttps://github.com/aws/aws-cdk#at-a-glance is the \"generate cloudformation using code,\" and is the AWS version of troposphere as best I can tell reply Feathercrown 13 hours agoprevThis is really cool! Kinda seems like the Nix config approach. reply subhro 17 hours agoprevWhy does this sound so familiar to Chef? reply beefnugs 7 hours agoprevDoes anyone have any info on if saltstack is going to be enshittified? That is the situation that would get me to go looking for a replacement such as this reply mixmastamyk 14 hours agoprevHow often is this kind of tool needed since containers went mainstream? I had gathered they were not used as often any longer. reply mdaniel 12 hours agoparentMy experience has been that for day zero stuff, e.g. how do you get a system _prepared_ for containers, this kind of tooling is handy. I side with the sibling comment that cloud-init is The Way but it also requires (a) some trial and error (b) to think entirely in terms of cattle/pets which some folks/organizations are not there yet reply emacsen 18 hours agoprevMaybe this is the best thing ever, but the documentation doesn't answer one simple question: What problem is it solving? It is a configuration management tool, like Ansible? Is it meant for running one-off commands across the infrastructure, like Salt? It says it integrates with Terraform, so it's not a provisioning tool... What does it do different (and presumably better) than other tools? The Getting Started guide doesn't cover this. The FAQ doesn't cover this, and the Docs doesn't have an Introductory section to cover this. It's disheartening to find a potentially interesting project, but not really know what it does and how it might fit in your workflow. reply fermigier 18 hours agoparentIt's similar to Ansible, but uses Python as a declation language rather than YAML. It can also run one-off commands across the infrastructure (like Tentakel: https://pypi.org/project/tentakel/ ). I've been using Pyinfra for some time. It's good enough for me. reply js2 17 hours agorootparentI've been using it as well with great success. A couple years ago I inherited about 100 Mac Pros that are part of $dayjob's CI infrastructure. They had been managed over the years using a combination of shell scripts, Chef, and manually via VNC. No two machines were alike. The Chef recipes had all bit-rotted and weren't usable and due to $reasons were based on an old version of Chef that $company was stuck on. So I looked around for alternatives, and being most comfortable in Python, I explored Ansible, Salt, and Pyinfra. Ansible seemed like the obvious choice, but it has very few playbooks/actions for macOS systems. I was going to have to write my own. As I dug into its documentation, I found it was taking me a long time to wrap my head around all that I needed to do and started to sour on its complexity. This is a matter of taste, but I just didn't find Ansible very welcoming. I wanted something simpler. I had previously used Fabric, so considered using it again. But Fabric offers too little (it's really not much more than parallel ssh-if you want idempotent operations you have to write that yourself), and I don't agree with the direction it took with version 2.x. Then I found Pyinfra. It took me less than 30 minutes to understand it in its entirety. It's conceptually simple: you have an inventory of machines that it connects to in parallel over ssh. You provide it with a deploy script that combines facts and operations. Pyinfra uses the deploy script to gather facts about each machine, then you use those facts to decide whether you need to perform any operations. It then performs those operations on each machine as needed. The inventory file, deploy script, facts, and operations are trivial to write for someone comfortable with Python. It's all Python with the facts and operations being decorated functions. There is no DSL to learn. (It comes with a bunch of pre-written facts and operations, but they are mostly for Linux systems. I had to mostly wrote my own for macOS, but I found them really easy to write.) I had it operational the same day I found it. I used it to successfully get all of the Mac Pros into consistent state: things like system settings, installing Xcode, automating installs of brew packages all at the same version, installing JVMs, updating and upgrading macOS, installing Sentinel One, etc. I've been very happy with it, even contributing a few PRs to fix small bugs and contribute minor functionality. reply Fizzadar 15 hours agorootparentI would love to see any macOS facts/operation code if you can/would be willing to share! We also managed a bunch of macs using pyinfra but mostly stuck to shell commands. reply Fizzadar 17 hours agoparentprev> It is a configuration management tool, like Ansible? Yes > Is it meant for running one-off commands across the infrastructure, like Salt? Also yes. > It says it integrates with Terraform, so it's not a provisioning tool... The TF integration is specifically to use TF as an inventory source - ie TF to create resources and pyinfra to then configure them. > What does it do different (and presumably better) than other tools? The homepage covers the highlights, I originally created pyinfra because debugging Ansible was complicated (no plain stderr as not \"just\" commands on the remote side) and slow, but things have evolved significantly since then. > The Getting Started guide doesn't cover this. The FAQ doesn't cover this, and the Docs doesn't have an Introductory section to cover this. Hugely appreciate this feedback, this is super helpful and something I will attempt to make clearer. --- Quick attempt at a better explanation: You write Python code that defines operations (either state \"this apt package should be installed\" or stateless \"run this command\"), provide an inventory of targets (SSH, local machine) and pyinfra executes it. Roughly sits where Ansible does for configuring servers, but also solves the case of \"how do I run this command across my server fleet\" (which I believe Ansible can also do). reply emacsen 15 hours agorootparentI hope I wasn't coming across as too negative. I genuinely think that an introduction with a few user stories would go a long way! reply the_duke 17 hours agorootparentprev> and slow, but things have evolved significantly since then Well, Ansible is still dog-slow, so that part has not evolved... reply Fizzadar 15 hours agorootparentHeh yeah this is very true, I updated the perf test repo earlier this year to confirm https://docs.pyinfra.com/en/next/performance.html reply remram 17 hours agoparentprev> Great for ad-hoc command execution, service deployment, configuration management and more I found that pretty clear to be honest. reply dangoodmanUT 17 hours agoparentprevPeople will know whether it solves their problem when they see it, no need to akchually the OP or maintainer reply tryauuum 13 hours agoparentprevSalt is not meant for running one-off commands. You can easily make sure state.apply is run for all of your infra several times an hour reply paulddraper 18 hours agoparentprevIt's like Ansible. That's what I discovered by reading the homepage. reply mdaniel 18 hours agorootparentI would disagree with that since ansible actually does two things simultaneously: cloud provisioning and local provisioning (and that \"local\" is actually hiding a 3rd axis, actual local, not just local to the managed instance, say for example if you needed the azure libraries or such, you can use a pre_tasks: block to create a virtualenv and install the deps locally before firing up the main workload) Reasonable people can 100% disagree about whether yaml is the correct packaging for those operations, and ansible is a bit too imperative for my liking, but as far as \"I have one hammer...\" it does all the things reply paulddraper 14 hours agorootparentAnsible can technically do cloud and local provisioning, just as Terraform can technically do cloud and local. But practically, these tools have their areas of speciality. reply mdaniel 14 hours agorootparent> just as Terraform can technically do cloud and local. I feel as though we're splitting hairs here, given there is, to the best of my knowledge, no `resource remote_file make_sshd_config { inventory_host = \"whatever\" dest = \"/etc/sshd_config\" src = \"./sshd_config.tmpl\" vars = {...} }` in TF. There is template, and there is local_exec and the rest is a Simple Matter Of Programming :-/ I'm waiting patiently for someone to chime in \"well, just spawn ansible in local_exec\" as if they're missing the point reply activatedgeek 17 hours agorootparentprevAny kind of provisioning doesn't seem too far a step though. It is just another \"operation\" with its own state management logic. reply mdaniel 17 hours agorootparentI mean, I hear you in that python is Turing complete so all things are possible through another level of indirection, but I didn't see one shred of amazon.aws.autoscaling_group anywhere in their docs so .. what, I write my own? If I was going to go through the trouble of writing custom shit for Yet Another Awesome Cloud Thingy I'd fire me reply activatedgeek 16 hours agorootparentThe fact that Pyinfra does not currently support a feature which can be implemented using Pyinfra philosophy does not make it different than Ansible. I believe that was what the parent comment was about. reply emacsen 18 hours agorootparentprevDigging in the docs, it uses words like \"inventories\" and \"operations\" which indeed look like a configuration management system, much like Ansible, it's agent-less. And that's cool- Ansible is a bit of an oddball system, but then I'm still left wondering, why is this better, or why it is better for the author at least? I've used cfengine, Puppet, Chef, bcfg2 (briefly) and ansible. I want to know what makes this tool different and better. :) reply koko-blat 17 hours agoparentprevit's bc it solves all problem ever exist. reply Invictus0 17 hours agoprevNo one else thinks its weird that this is the number 1 hn link with only 40 upvotes? reply remram 17 hours agoparentSee FAQ #2 reply cheptsov 15 hours agoprevWe build a similar tool except we focus on AI workloads. Also support on-prem clusters now in addition to GPU clouds. https://github.com/dstackai/dstack reply linuxdude314 15 hours agoprevShould probably just stick with the Terraform CDK or Chef if you need this level of expressibility. This is no where near the level of readiness needed to be reliably used in a production environment. Verbose logging is not a reason to introduce a non-standard tool into your stack. reply yjftsjthsd-h 9 hours agoparent> Should probably just stick with the Terraform CDK or Chef if you need this level of expressibility. I'm not familiar with Terraform CDK, but I don't see what Chef does/has that this doesn't? > This is no where near the level of readiness needed to be reliably used in a production environment. Why? reply imiric 12 hours agoparentprev> This is no where near the level of readiness needed to be reliably used in a production environment. This is baseless FUD. Pyinfra is 8 years old, just 2 years younger than Terraform. It's well maintained, stable, and used by many teams in production. Just because it's not as widely known or adopted as other tools, doesn't mean it should be avoided. In fact, as you can see from testimonials here, users often prefer it over Ansible. > Should probably just stick with the Terraform CDK or Chef if you need this level of expressibility. Terraform is used for provisioning infrastructure. Pyinfra is a configuration management tool. They're not equivalent. Chef is closer, but it's an older tool that has largely been superseded by Ansible. It shouldn't be anyone's first choice, unless they really need some obscure feature it does better than Ansible, or Puppet for that matter. > Verbose logging is not a reason to introduce a non-standard tool into your stack. Why would that be the only reason to use this? That's not even one of its prominent features, and surely all tools in this space support verbose logging... What a confused comment. reply 0xbadcafebee 16 hours agoprev [–] so, it's Ansible...? Configuration Management tools (that's what this, and Ansible, are) are a nice idea, but get very complicated very quickly. The tools themselves get complicated, the configuration gets complicated, you're constantly finding ways that the state gets broken that you need to re-incorporate into your script, it has to work in a variety of states, and you have to keep re-running and re-running and re-running it, monitoring for problems, investigating, fixing. Very complex, lots of maintenance, lots of potential problems. The \"Pets\" model from the phrase \"Cattle, not Pets.\" I strongly recommend you do not raise Pets. Instead, use Immutable Infrastructure: build an immutable image one time that works one way. Deploy that image. If you need to change it, change the build script, build a new image (with a new version), deploy a new instance with the new image, take the old one out back and shoot it. (The \"Cattle\" of \"Cattle, not Pets\") If the state gets out of whack or there are problems, just shoot it and deploy a new one that you know works. This is the single most revolutionary concept i've seen in over 20 years of doing this job. It is an absolute game-changer. I would not go back to Configuration Management for all the tea in China. reply aprdm 16 hours agoparent [–] You're conflating different things - this has nothing to do with Pet vs cattle. Even in your confusion, State still exists in the real world and needs to live somewhere, it also is unfeasible to always recreate big states. reply 0xbadcafebee 12 hours agorootparent [–] This happens so often on HN, and it is so god damn frustrating. I'm literally a fucking expert, telling you the best thing to do, and explain why, and I get downvoted for it. The next person who tells me in a comment \"explain your opinion! you're not helping!\" when I don't write an entire novel to justify my position, I'm going to link back to this thread. Pointless. I've gone to the trouble of googling these articles for you (it took me a whole 30 seconds!). Please read any of them. https://webcache.googleusercontent.com/search?q=cache:https:... https://devopscube.com/immutable-infrastructure/ https://thenewstack.io/a-brief-look-at-immutable-infrastruct... https://www.digitalocean.com/community/tutorials/what-is-imm... https://www.hashicorp.com/resources/what-is-mutable-vs-immut... https://www.techtarget.com/searchitoperations/definition/imm... https://www.oreilly.com/radar/an-introduction-to-immutable-i... https://www.terraformpilot.com/articles/mutable-vs-immutable... https://www.bmc.com/blogs/immutable-infrastructure/ https://www.linode.com/docs/guides/what-is-immutable-infrast... https://devops.com/immutable-infrastructure-the-next-step-fo... https://openupthecloud.com/what-is-immutable-infrastructure/ https://www.opsramp.com/guides/why-kubernetes/infrastructure... https://www.cloudbees.com/blog/immutable-infrastructure https://www.daily-devops.com/devops/immutable/architecture-p... http://radar.oreilly.com/2015/06/an-introduction-to-immutabl... https://highops.com/insights/immutable-infrastructure-what-i... https://docs.aws.amazon.com/wellarchitected/latest/financial... reply aprdm 8 hours agorootparent [–] Maybe you're not the only expert in HN ? For someone to write what you wrote after 20y of experience is a bit interesting - and you did write a lot ! I might have more YOE than you do for example, and might have worked on bigger companies/infras than you did - what does it matter to the opinion at hand ? reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "pyinfra is a Python tool for infrastructure automation, featuring speed, scalability, and versatility for ad-hoc commands, service deployment, and configuration management.",
      "It offers fast execution, instant debugging, idempotent operations, and integration with connectors, making it a comprehensive solution for infrastructure automation.",
      "Users can install pyinfra via pip, run commands over SSH, define states using operations, and deploy tasks using Python code, with the flexibility to extend it using the Python package ecosystem."
    ],
    "commentSummary": [
      "Comparison of infrastructure automation tools like Pyinfra, Ansible, Puppet, and Terraform based on declarative and imperative approaches, complexities, benefits, and limitations.",
      "Users praise Python-based Pyinfra for automation tasks, express concerns about Ansible and Puppet limitations, and stress the importance of state management in infrastructure automation.",
      "Discussion covers challenges of efficiently managing large server fleets, benefits of declarative programming, and the balance between DRY programming principles and simplicity in configuration management."
    ],
    "points": 490,
    "commentCount": 184,
    "retryCount": 0,
    "time": 1714488885
  },
  {
    "id": 40211891,
    "title": "Borgo: A Statically Typed Language Compiling to Go",
    "originLink": "https://github.com/borgo-lang/borgo",
    "originBody": "The Borgo Programming Language I want a language for writing applications that is more expressive than Go but less complex than Rust. Go is simple and straightforward, but I often wish it offered more type safety. Rust is very nice to work with (at least for single threaded code) but it's too broad and complex, sometimes painfully so. Borgo is a new language that transpiles to Go. It's fully compatible with existing Go packages. Borgo syntax is similar to Rust, with optional semi-colons. Tutorial Check out the online playground for a tour of the language. You can also take a look at test files for working Borgo code: codegen-emit.md infer-expr.md infer-file.md Features Algebraic data types and pattern matching use fmt enum NetworkState { Loading, Failed(int), Success(string), } let msg = match state { NetworkState.Loading => \"still loading\", NetworkState.Failed(code) => fmt.Sprintf(\"Got error code: %d\", code), NetworkState.Success(res) => res, } Option instad of nil // import packages from Go stdlib use fmt use os let key = os.LookupEnv(\"HOME\") match key { Some(s) => fmt.Println(\"home dir:\", s), None => fmt.Println(\"Not found in env\"), } Result instad of multiple return values use fmt use net.http fn makeRequest() -> Result { let request = http.Get(\"http://example.com\") match request { Ok(resp) => Ok(resp.StatusCode), Err(err) => Err(fmt.Errorf(\"failed http request %w\", err)) } } Error handling with ? operator use fmt use io use os fn copyFile(src: string, dst: string) -> Result { let stat = os.Stat(src)? if !stat.Mode().IsRegular() { return Err(fmt.Errorf(\"%s is not a regular file\", src)) } let source = os.Open(src)? defer source.Close() let destination = os.Create(dst)? defer destination.Close() // ignore number of bytes copied let _ = io.Copy(destination, source)? Ok(()) } Guessing game example Small game from the Rust book, implemented in Borgo. Things to note: import packages from Go stdlib strconv.Atoi returns an Option Reader.ReadString returns a Result (which can be unwrapped) use bufio use fmt use math.rand use os use strconv use strings use time fn main() { let reader = bufio.NewReader(os.Stdin) rand.Seed(time.Now().UnixNano()) let secret = rand.Intn(100) + 1 loop { fmt.Println(\"Please input your guess.\") let text = reader.ReadString('').Unwrap() let text = strings.TrimSpace(text) let guess = match strconv.Atoi(text) { Ok(n) => n, Err(_) => continue, } fmt.Println(\"You guessed: \", guess) if guesssecret { fmt.Println(\"Too big!\") } else { fmt.Println(\"Correct!\") break } } } Running locally Borgo is written in Rust, so you'll need cargo. To compile all .brg files in the current folder: $ cargo run -- build The compiler will generate .go files, which you can run as normal: # generate a go.mod file if needed # $ go mod init foo $ go run .",
    "commentLink": "https://news.ycombinator.com/item?id=40211891",
    "commentBody": "Borgo is a statically typed language that compiles to Go (github.com/borgo-lang)487 points by manx 18 hours agohidepastfavorite310 comments tbrockman 8 hours agoThis addresses pretty much all of my least favorite things with writing Go code at work, and I hope--at the very least--the overwhelming positivity (by HN standards -- even considering the typical Rust bias!) of the responses inspires Go maintainers to consider/prioritize some of these features, or renews the authors interest in working on the project (as some have commented, it seems to have gone without activity for a little bit over half a year). Some of the design decisions seem to me to be a bit more driven by being Rust-like than addressing Go's thorns though. In particular, using `impl` to define methods on types (https://borgo-lang.github.io/#methods), the new syntax for channels and goroutines (https://borgo-lang.github.io/#channels), and the `zeroValue()` built-in (https://borgo-lang.github.io/#zero-values-and-nil) seem a bit out of place. Overall though, if I had a choice, I would still rather write Borgo by the looks of it. reply nobleach 6 hours agoparentI have to disagree. I'm on record here lamenting Go. I've never really enjoyed writing it. When I've had to use it, I've used it. Lately though, I've found a lot more pleasure. And much of that comes from the fact that it does NOT have all these features. The code I write, is going to look like the code written by most other on my team. There's an idiomatic way to write Go, and it doesn't involve those concepts from other languages. (For better or for worse) So I'm super hyped that we'd have a \"compiles TO Go\" language, but I'm not as excited as using it as a catalyst to get new (and perhaps wrong for the language) features into Go. reply lordofgibbons 17 hours agoprevWow, this is everything I want from a new Go! Having worked on multiple very large Go codebases with many engineers, the lack of actual enums and a built-in optional type instead of nil drive me crazy. I think I'm in love. Edit: Looks like last commit was 7 months ago. Was this abandoned, or considered feature complete? I hope it's not abandoned! reply H1Supreme 13 hours agoparentAn Enum type has to be on the core Go team's radar by now. It's got to be tied with a try/catch block in terms of requested features at this point (now that we have generics). reply Thaxll 9 hours agorootparentNo one wants try/catch/exception in Go. reply pjmlp 0 minutes agorootparentBecause if err != nil { return nil } is the epitome of productivity! callc 9 hours agorootparentprevComments like this are what drives me away from Go; comments that enforce a particular belief about how or what features you should or should not use/introduce in your PL. Talking in absolutes is so far removed from a logical arguments and from good engineering. I would appreciate if anyone could recommend a language like Go (static, strong typed, not ancient, good tooling) with a friendly community, that won’t ostracize the non-believers. Zig? reply AnonymousPlanet 8 hours agorootparentGo is a very opinionated language from it's inception. We could probably argue for all eternity about code formatting, for instance. But Go went and set it in stone. Maybe it's part of good engineering to keep things simple and not allow hundreds of ways to do something. Maybe the people who use Go are the ones who just want to write and read simple and maintainable code and don't want it to be cluttered with whatever is currently the fashion. You could look at Lisp. It's kind of the opposite of Go in this regard. You can use whatever paradigm you like, generate new code on the fly, use types or leave them. It even allows you to easily extend the language to your taste, all the way down to how code is read. But Lisp might violate your set of absolutes. reply callc 3 hours agorootparentThanks for your response AnonymousPlanet. I agree there is value in the pursuit of a minimal set of features in a PL which brings many benefits. And of course the opposite - an overly feature packed and/or extensible PL as a core feature has tradeoffs. Over this range of possibilities my preference probably falls somewhere in the middle. I see an effect where the languages whose primary goal is a particular set language design choices (such as strict memory safety over all else) grow a cult following that enforces said design choices. Maybe in the pursuit of an opinionated language, even if the designers are reasonable at the language's inception, the community throws out logic and \"opinionated\" becomes a in-group out-group tribal caveman situation. reply littlestymaar 2 hours agorootparentprev> Go is a very opinionated language from it's inception. True. > We could probably argue for all eternity about code formatting, for instance. But Go went and set it in stone. This is part of the story that Rob Pikes uses to justify how opinionated Go is, but it's a bit stupid given that most language do fine and I've never seen any debates about the code formatting after the very beginning of a project (where it's always settled quickly in the few case where it happens in the first place). The real reason why Go is opinionated is much more mundane: Rob is an old man who think he has seen it all and that the younger folks are children, and as a result he is very opinionated. (remember his argument against syntax coloring because “it's for babies” or something). It's not bad to be opinionated when designing a language, it give some kind of coherence to it (looking at you Java and C++) but it can also get into the way of users sometimes. Fortunately Go isn't just Rob anymore and isn't impervious to changes, and there is finally generics and a package manager in the language! reply AnonymousPlanet 1 hour agorootparentSeriously, if you feel patronised by how someone designs a programming language, it might be best to move on. It's obviously not for you. Especially when you feel compelled to bad faith assumptions and ageism over it. For those who want to feel the wind of coding freedom blow through their hair, I can recommend to spend some time learning Lisp. It offers the most freedom you can possibly have in a programming language. It might enlighten you in many other ways. It won't be the last language you learn, but it might be the most fruitful experience. reply rendaw 4 hours agorootparentprevAside from \"not ancient\" Java has everything you want! I'd consider the best tooling (Intellij), static, strongly typed, has enums now (sealed interfaces), composeable error handling, null safety with new module flags, etc. Not sure about the community, but the maintainers I've worked with seemed nice enough. I imagine the community has a lot less ego than rust/go due to the general perception of the language. reply Mawr 8 hours agorootparentprevYou're reading way too much into what the parent poster said. He just correctly stated the overall sentiment of the community. That said, suggesting adding exceptions to Go is about as reasonable as adding a GC to Zig. How much effort would you spend arguing against someone bringing that up as a serious proposal? reply randomdata 7 hours agorootparent> That said, suggesting adding exceptions to Go is about as reasonable as adding a GC to Zig. Suggesting the addition of exceptions to Go is as reasonable as suggesting the addition of loops to Rust. Which is to say that it already has exceptions, and always has. Much of the language's design is heavily dependent on the presence of exceptions. Idioms dictate that you probably shouldn't use exceptions for errors (nor should you in any language, to be fair), but even that's not strictly adhered to. encoding/json in the standard library famously propagates errors using the exception handlers. reply Mawr 7 hours agorootparentGo doesn't use exceptions as a primary way of handling errors, which is what we're talking about here. Pedantry is not welcome. reply randomdata 7 hours agorootparentIt doesn't not use exception handlers as a primary way of handling errors either, though. Go doesn't specify any error handling mechanism. Using exception handlers is just as valid as any other, and even the standard library does it, as noted earlier. The only error-related concept the Go language has is the error type, but it comes with no handling semantics. Which stands to reason as there is nothing special about errors. Originally, Go didn't even have an error type, but it was added as a workaround to deal with the language not supporting cyclic imports. Your pedantry is hilarious and contradictory. reply Mawr 7 hours agorootparentYou're absolutely technically correct, in the \"spherical cow in a vacuum\" sense. In reality though, essentially all Go code out there handles errors through the pattern of checking if the error in a `(value, error)` tuple returned from a function is `nil` or not. That is what the discussion here is about - the way errors are handled in a language in practice, not in theory. Therefore, pedantry. Basically, discussions have context and I have no intention of prepending 10 disclaimers to every statement I make to preemptively guard against people interpreting my comments as absolutes in a vacuum. reply randomdata 7 hours agorootparentThat's a lot of pedantry you've got there for someone who claims it is not welcome. Rules for thee, not for me? But, if you'd kindly come back to the topic at hand: > That is what the discussion here is about - the way errors are handled in a language in practice, not in theory. While I'm not entirely convinced that is accurate, I will accept it. Now, how does: - \"That said, suggesting adding exceptions to Go is about as reasonable as adding a GC to Zig.\" Relate to that assertion? What does \"suggesting adding exceptions to Go\" have to do with a common pattern that has emerged? reply mplewis 4 hours agorootparentIt’s not simply a common pattern. It is a way of doing things in the community. The stdlib uses it, the libraries use it, and if you do not use it, people will not use your software. reply vbezhenar 1 hour agorootparentprevI would be happy if they would add in compiler some thing that'll allow to ignore error return values and in this case compiler would just throw exception^Wpanic from that point. I think it even makes sense for go purists, like you need to handle errors or get panicked. And I'd just mostly ignore errors and will have my sweet exceptions. reply smt88 6 hours agorootparentprevYou have the same PL preferences as me. I haven't tried Rust yet, but Kotlin, modern C#, and F# all fit your requirements. Kotlin is closest because it uses the enormous Java ecosystem. reply bbkane 4 hours agorootparentI haven't had time to really try to write anything in it, but https://gleam.run/ looks really good too. Like Elm for backend + frontend! reply VS1999 7 hours agorootparentprevWhy would you not enforce a particular belief about how a language should be designed? There are languages designed around being able to do anything you want at any time regardless of if it makes sense, and then you end up with everyone using their own fractured subset of language features that don't even work well together. Not every language needs to be the same feature slop that supports everything poorly and nothing well. reply thefounder 7 hours agorootparentprevLet’s hope Go never gets try/catch exceptions reply randomdata 5 hours agorootparentfunc try(fn func()) { fn() } func catch(fn func(any)) { if v := recover(); v != nil { fn(v) } } func throw(v any) { panic(v) } func fail() { throw(\"Bad things have happened\") } func main() { try(func() { defer catch(func(v any) { fmt.Println(v) }) fail() }) } Sorry. reply rnmmrnm 3 hours agorootparentthe day the go codebase throws random panics is the day I quit the company. reply marcus_holmes 2 hours agorootparentprevESBuild, one of my favourite Go projects, uses panics to handle try/catch exceptions. The syscall/js package [0] throws panics if something goes wrong, rather than returning errors. Go already has try/catch exceptions. We just don't use them most of the time because they're a really bad way of handling errors. [0] https://pkg.go.dev/syscall/js reply MathMonkeyMan 9 hours agorootparentprevpanic/recover/error? reply beeboobaa3 8 hours agorootparentprevObjectively wrong. reply IshKebab 3 hours agorootparentThey didn't mean literally 0 people. reply TwentyPosts 12 hours agorootparentprevThe issue is that it's more or less impossible to graft onto the language now. You could add enums, but the main reason why people want them is to fix the error handling. You can't do this without fracturing the ecosystem. reply foldr 3 minutes agorootparentDepends what you mean by 'enums' exactly, but now that generics has been added, a small change would be to allow interfaces defined via type disjunction to be used as concrete types: type Option1 struct { ... } type Option2 struct { ... } type MyEnum interface { Option1Option2 } var myValue MyEnum // currently not legal Go That doesn't solve all the use cases for enums / sum types, but it would be useful. reply drdaeman 12 hours agorootparentprev> but the main reason why people want them is to fix the error handling Why do you think so? Maybe I'm an odd case, but my main use case for enums is for APIs and database designs, where I want to lock down some field to a set of acceptable values and make sure anything else is a mistake. Or for state machines. Error handling is manageable without enums (but I love Option/Result types more than Go's error approach, especially with the ? operator). reply Kamq 5 hours agorootparent> but I love Option/Result types more than Go's error approach The thing is, these don't add much on their own. You'd have to bring in pattern matching and/or a bunch of other things* that would significantly complicate the language. For example, with what's currently in the language, you could definitely have an option type. You'd just be limited to roughly an api that's `func (o Option[T]) IsEmpty() bool` and `func (o Option[T]) Get() T`. And these would just check if the underlying point is nil and dereference it. You can already do that with pointers. Errors/Result are similar. A `try` keyword that expands `x := try thingThatProducesErr()` to: x, err := thingThatProducesErr() if err != nil { return {zero values of the rest of the function signature}, err } Might be more useful in go (you could have a similar one for pointers). * at the very least generic methods for flat map shenanigans reply Mawr 4 hours agorootparentUsing an Option instead of a pointer buys you the inability to forget to check for nil. Just need to make sure the Option exposes the internal value only through: func (o Option[Value]) Get() (Value, bool) { return o.value, o.exists } Accessing the value is then forced to look like this: if value, ok := option.Get(); ok { // value is valid } // value is invalid Thus, there's no possibility of an accidental nil pointer dereference, which I think is a big win. A Result type would bring a similar benefit of fixing the few edge cases where an error may accidentally not be handled. Although I don't think it'd be worth the cost of switching over. reply imetatroll 9 hours agorootparentprevhttps://www.postgresql.org/docs/current/datatype-enum.html Then wrap appropriately. Something like sqlc will actually generate everything you need. reply randomdata 12 hours agorootparentprev> my main use case for enums is for APIs and database designs, where I want to lock down some field to a set of acceptable values and make sure anything else is a mistake Then what you are really looking for is sum types (what Rust calls enums, but unusually so), not enums. Go does not have sum types, but you can use interfaces to archive a rough facsimile and most certainly to satisfy your specific expectation: type Hot struct{} func (Hot) temp() {} type Cold struct{} func (Cold) temp() {} type Temperature interface { temp() } func SetThermostat(temperature Temperature) { switch temperature.(type) { case Hot: fmt.Println(\"Hot\") case Cold: fmt.Println(\"Cold\") } } reply throwaway143829 7 hours agorootparentEnums and sum types seem to be related. In the code you wrote, you could alternatively express the Hot and Cold types as enum values. I would say that enums are a subset of sum types but I don't know if that's quite right. I guess maybe if you view each enum value as having its own distinct type (maybe a subtype of the enum type), then you could say the enum is the sum type of the enum value types? reply randomdata 7 hours agorootparent> Enums and sum types seem to be related. They can certainly help solve some of the same problems. Does that make them related? I don't know. By definition, an enumeration is something that counts one-by-one. In other words, as is used in programming languages, a construct that numbers a set of named constants. Indeed you can solve the problem using that: type Temperature int const ( Hot Temperature = iota Cold ) func SetThermostat(temperature Temperature) { switch temperature { case Hot: fmt.Println(\"Hot\") case Cold: fmt.Println(\"Cold\") } } But, while a handy convenience (especially if the set is large!), you don't even need enums. You can number the constants by hand to the exact same effect: type Temperature int const ( Hot Temperature = 0 Cold Temperature = 1 ) func SetThermostat(temperature Temperature) { switch temperature { case Hot: fmt.Println(\"Hot\") case Cold: fmt.Println(\"Cold\") } } I'm not sure that exhibits any sum type properties. I guess you could see the value as being a tag, but there is no union. reply lelanthran 3 hours agorootparentUnfortunately, this: const ( Hot Temperature = 0 Cold Temperature = 1 ) Isn't really a good workaround when lacking an enumeration type. The compiler can't complain when you use a value that isn't in the list of enumerations. The compiler can't warn you when your switch statement doesn't handle one of the cases. Refactoring is harder - when you add a new value to the enum, you can't easily find all those places that may require logic changes to handle the new value. Enums are a big thing I miss when writing Go, compared to when writing C. reply nyssos 3 hours agorootparentprevEnums are exactly sums of unit types (types with only one value). reply blueberry87 11 hours agorootparentprevannoyingly go can't have proper sum types, as the requirement for a default value for everything doesn't make any sense for sum types reply throwaway143829 7 hours agorootparentCouldn't the zero value be nil? I get that some types like int are not nil-able, but the language allows you to assign both nil and int to a value of type any (interface{}), so I wonder why it couldn't work the same for sum types. i.e. they would be a subset of the `any` type. reply andyferris 10 hours agorootparentprevYou can just default to the first variant, no? reply jhoechtl 5 hours agorootparentprevI would like to have proper stack traces. With that the error handling in go would be fixed. reply LorenzoGood 9 hours agorootparentprevI just want regular enums, that would solve the problems that result from using the current status quo. reply AnonymousPlanet 8 hours agorootparentprevI am so tired of reading Java/C++/Python code that just slaps try/catch around several lines. To some it might seem annoying to actually think about errors and error handling line by line, but for whoever tries to debug or refactor it's a godsend. Where I work, try/catch for more than one call that can throw an exception or including arbitrary lines that don't throw the caught exception, is a code smell. So when I looked at Go for the first time, the error handling was one of the many positive features. Is there any good reason for wanting try/catch other than being lazy? reply slt2021 8 hours agorootparent>the error handling was one of the many positive features. sounds good on paper, but seeing \"if err!=nil\" repeated million times in golang codebases does not create positive impression at all reply slt2021 8 hours agorootparentgolang keyboard ftw https://pbs.twimg.com/media/DCIF7-2W0AEAv9c.jpg reply lelanthran 3 hours agorootparentprev> sounds good on paper, but seeing \"if err!=nil\" repeated million times in golang codebases does not create positive impression at all Okay, but other than exceptions, whats the alternative? reply nindalf 3 hours agorootparentThe ? Operator in Rust? reply dureuill 3 hours agorootparentMore than just that, Result in general also prevents from accessing the value when there is an error and accessing an error when there is a value. reply Mawr 6 hours agorootparentprevYes but the impression is largely superficial. The error handling gets the job done well enough, if crudely. reply FuckButtons 4 hours agorootparentThe ability to quickly parse, understand and reason about code is not superficial, it is essential to the job. And that is essentially what those verbose blocks of text get in the way of. reply marcus_holmes 2 hours agorootparentAs an experienced Go dev, this is literally not a problem. Golang code has a rhythm: you do the thing, you check the error, you do the thing, you check the error. After a while it becomes automatic and easy to read, like any other syntax/formatting. You notice if the error isn't checked. Yes, at first it's jarring. But to be honest, the jarring thing is because Go code checks the error every time it does something, not because of the actual \"if err != nil\" syntax. reply Mawr 4 hours agorootparentprevSure, I just don't think it's that significant. Humans don't read/parse code character-by character, we do it by recognizing visual patterns. Blocks of `if err != nil { }` are easy to skip over when reading if needed. reply bbkane 4 hours agorootparentI agree, though I was really surprised to learn this when reading Go code. Much easier to skip over than I was expecting it to be reply IshKebab 3 hours agorootparentprevThe idea that error handling is \"not part of the code\" is silly though. My impression of people that hate Go's explicit error handling is that they don't want to deal with errors properly at all. \"Just catch exceptions in main and print a stack trace, it's fine.\" Rust's error handling is clearly better than Go's, but Go's is better than exceptions and the complaints about verbosity are largely complaints about having to actually consider errors. reply Mawr 6 hours agorootparentprev> Is there any good reason for wanting try/catch other than being lazy? It's the best strategy for short running programs, or scripts if you will. You just write code without thinking about error handling at all. If anything goes wrong at runtime, the program aborts with a stacktrace, which is exactly you want and you get it for free. For long-running programs you want reliability, which implies the need to think about and explicitly handle each possible error condition, making exceptions a subpar choice. reply dalyons 8 hours agorootparentprevThe huge volume of boilerplate makes the code harder to read, and annoying to write. I like go, and I don’t want exceptions persay, but I would love something that cuts out all the repetitive noise. reply jacobr1 7 hours agorootparentThe example in the article is a good one. Result and Optional as first class sum types reply RedComet 6 hours agorootparentThat just changes the boilerplate from if's to match's. reply Mawr 6 hours agorootparentSee the example with the `?` operator: https://github.com/borgo-lang/borgo?tab=readme-ov-file#error... The main benefits of a Result type are brevity and the inability to accidentally not handle an error. reply RedComet 4 hours agorootparentYes, but that isn't necessarily a feature of option types. Is it the case that similar sugar for the tiresome Go pattern couldn't achieve similar benefits? reply Mawr 2 hours agorootparentPerhaps, but there have been several proposals along those lines and nobody seems capable of figuring out a sensible implementation. A funny drawback of the current Go design that a Result type would solve is the need to return zero values of all the declared function return types along with the error: https://github.com/golang/go/issues/21182. reply BillyTheKing 3 hours agorootparentprevexactly.. yes, I understand why ? is neat from a type POV since you specifically have to unwrap an optional type whereas in Go you can ignore a returned error (although linters catch that) - so at the end of the day it's just the same boilerplate, one with ? the other with err != nil reply tadfisher 7 hours agorootparentprevYes, it's the ability to unwind the stack to an exception handler without having to propagate errors manually. Go programs end up doing the exact same thing as \"try/catch around multiple lines\" with functions that can return an error from any point, and every caller blindly propagating the error up the stack. The practice is so common that it's like semicolons in Java or C, it just becomes noise that you gloss over. reply Mawr 5 hours agorootparentThe difference is that all code paths are explicitly spelled out and crucially that the programmer had to consider each path at the time of writing the code. The resulting code is much more reliable than what you end up with exceptions. reply bootsmann 59 minutes agorootparentDo you really do that in practice, or do you just blindly go 'if err != nil return nil, err'? Because fundamentally the function you called can return different errors at any point so if you just propagate the error the code paths are in fact not spelled out at all because the function one above in the hierarchy has to deal with all the possible errors two calls down which are not transparent at all. reply BillyTheKing 3 hours agorootparentprevI agree, I don't really understand everyone's issue with err != nil.. it's explicit, and linters catch uncaught errors. Yes the ? operator in Rust is neat, but you end up with a similar issue of just matching errors throughout your code-base instead of doing err != nil.. reply nyssos 3 hours agorootparentThe problem is that you're forced to have four possible states 1. err != nil, nondefault return value 2. err != nil, default return value 3. err == nil, nondefault return value 4. err == nil, default return value when often what you want to express only has two: either you return an error and there's no meaningful output, or there's output and no error. A type system with tuples but no sum types can only express \"and\", not \"or\". reply marcus_holmes 1 hour agorootparentthis is true, but not a problem. Go's pattern of checking the error on every return means that if an error is returned, that is the return. Allowing routines to return a result as well as an error is occasionally useful. reply dgellow 7 hours agorootparentprev> Is there any good reason for wanting try/catch other than being lazy? In a hot path it’s often beneficial to not have lots of branches for error handling. Exceptions make it cheap on success (yeah, no branches!) and pretty expensive on failure (stack unwinding). It is context specific but I think that can be seen as a good reason to have try catch. Now of course in practice people throw exceptions all the time. But in a tight, well controlled environment I can see them as being useful. reply tredre3 7 hours agorootparent> In a hot path it’s often beneficial to not have lots of branches for error handling. This is true but the branch isn't taken unless there's an error in Go. Given that the Go compiler emits the equivalent of `if (__unlikely(err != nil)) {...}` and that any modern CPUs are decently good at branch prediction (especially in a hot path that repeats), I find it hard to believe that the cost would be greater than exceptions. reply mixmastamyk 7 hours agorootparentprev> try/catch for more than one call that can throw an exception or including arbitrary lines You generally need to skip all lines that the exception invalidates. That's why it's a block or conditional. reply tayo42 3 hours agorootparentprevYou can print or log the stack trace of the exception in python. reply jurschreuder 12 hours agorootparentprevI've never needed either. Try/catch is super confusing because the catch is often far away from the try. And in Python I just put try/catch around big chunks of code just in case for production. I think Go is more stable and readable because they force you not to use the lazy unreadable way of error handling. Enums I honestly never used in Go also not the not-type-safe ones. But I'm also someone who used interfaces in Go maybe I think 4 times only in years and years of development. I just never really need all those fancy things. reply kbenson 11 hours agorootparentI think what this comment is missing is any sort of analysis of how your experience maps to the general go user, and an opinion on while you've never needed either whether you think it could have provided any benefit when used appropriately. For example, and option type with enums combined can ensure return values are checked by providing a compile time error if a case is missing (as expressed in the first few examples of the readme). reply jurschreuder 4 hours agorootparentI know it can, the compiler can do one more \"automatic\" unit test based on the type checking system. But they decided not to add enums because it conflicted and overlapped too much with interfaces. I just want to add \"my\" experience that personally, yes maybe you can argue enums are nice, but I never missed them in Go. I personally agree with the Go team on how they argue and for me it would be a step back if they listened to the herd that does not take all sides of the story into consideration but just keeps pushing enums. Try/catch is just a really bad thing all \"hacky solution\" alarm bells go off for me if you want to change error handling to giant try/catch blocks. reply lelanthran 3 hours agorootparent> But they decided not to add enums because it conflicted and overlapped too much with interfaces. I'm very curious now about how it might conflict and/or overlap with interfaces. To reach the goal of an enumeration type (and all the strong type-checking that that brings with it), enums could look as simple as: type DayNames enum { Sunday Monday Tuesday Wednesday Thursday Friday Saturday } ... func isFunDay (dow DayNames) { // This must fail to compile, because there is an unhandled enumeration switch { case Sunday: ... case Monday: ... case Tuesday: ... case Thursday: ... case Friday: ... case Saturday: ... } ... } ... isFunDay (0) // Compile failure var x int isFunDay (x) // Compile failure And I don't see how that conflicts or overlaps with interfaces. reply jurschreuder 10 minutes agorootparentI think something like when a variable type in an enum was an interface it would destroy the galaxy or something, not 100% sure, would have to look it up... 1 sec. Here you Go: https://go.dev/doc/faq#variant_types reply lelanthran 1 minute agorootparent> I think something like when a variable type in an enum was an interface it would destroy the galaxy or something, Hah :-) > Here you Go: https://go.dev/doc/faq#variant_types Not quite the same: Variants are a constrained list of types. Enums are a constrained list of values. Let's assume that I agree with the reasoning for not having a constrained list of types. It still doesn't tell me why we can't have a constrained list of values. pdimitar 11 hours agorootparentprevYour comment could have been a nice opinion that proves to a drive-by reader that needs can differ drastically between programmers. But you ruined it with \"fancy things\" which shows offhand disregard and disrespect. A question like \"what do you need these features for?\" would have been a better contribution to the forum. reply jurschreuder 4 hours agorootparentI actually really have a disrespect for them. I'm in a constant fight against developers that want to translate code in almost the same code but \"only using language features from the Advanced book\". I also wanted to add that I used inheritance only ONCE in all my years of writing Python in all other millions of lines of code inheritance was not the best solution. This is my daily struggle as a CTO. People using waaayy too many \"fancy\" features of languages making it totally unreadable and unmaintainable. It's their ego they want to show off how many complex language features they know. And it's ruining my codebases. reply samatman 11 hours agoparentprevWhile I have no particular beef with Rust deciding to call its sum types \"enum\", to refer to this as the actual enum is a bit much. Enumerated types are simply named integers in most languages, exactly the sort you get with const / iota in Go: https://en.wikipedia.org/wiki/Enumerated_type Rather than the tagged union which the word represents in Rust, and only Rust. Java's enums are close, since they're classes and one can add arbitrary behaviors and extra data associated with the enum. reply gr4vityWall 11 hours agorootparentHaxe also has Enums which are Generalized Algebraic Data Types, and they are called \"enums\" there as well: https://haxe.org/manual/types-enum-using.html reply samatman 11 hours agorootparentVery well then: Rust is not the only one to call a variant type / tagged union an enum. It's a nice language feature to have, whatever they decide to call it. It remains a strange choice to refer to this as the true enum, actual enum, real enum, as has started occurring since Rust became prominent. If that's a meaningful concept, it means a set of numeric values which may be referred to by name. This is the original definition and remains the most popular. reply mattgreenrocks 9 hours agorootparentRust is targeting both users who know the original definition as well as people who don’t. Differentiating between real enums and sum types means the language gets another keyword for a concept that overlaps. From a PL theory perspective, enum denotes an enumerable set of values within a type. It just happens that sums slot in well enough with that. reply bobbylarrybobby 7 hours agorootparentBut the instances of a sum type aren't enumerable unless all of its generic parameters are enumerable. reply danielscrubs 7 hours agorootparentprevChecked the definition. An enum is defined as a set of named constants. Id argue that a set by definition needs to be constrained. If it lacks the constraints/grouping id argue it no longer is a set. reply turdprincess 9 hours agorootparentprevSwift enums support union types as well, and are also very useful. reply Hasnep 8 hours agoprevAbout a year ago, I tried writing a language that transpiled to Go with many of the same features, in my research I found other attempts at the same idea: - braid: https://github.com/joshsharp/braid - have: https://github.com/vrok/have - oden: https://oden-lang.github.io/ reply ackseq 26 minutes agoprevto me the problem is not the language per se but the emerging complexity of a project written in a language. I.e. say I'm familiar with go and a k8s user. Does that mean that I can understand the architecture of k8s project and be meaningfully productive in a short period of time? Far from it. Sometimes I think we focus too much and formalize on the first order tooling we use, language being one of them, while we neglect the layers upon layers of abstractions built on top of them. I wonder whether a meta-language could exist that would be useful in these upper layers. Not a framework that imposes its own logic. More of a DSL that can capture both business logic and architecture. reply ralegh 17 hours agoprevGreat! Something I've always wanted. I'd love to be able to use a bit more type-y Go such as Borgo, and have a Pythonesque dynamic scripting language that latches onto it effortlessly. Dynamic typing is great for exploratory work, whether that's ML research or developing new features for a web app. But it would be great to be able to morph it over time into a more specified strongly typed language without having to refactor loads of stuff. Like building out of clay and firing the parts you are happy with. Could even have a three step - Python-esque -> Go/Java-esque -> Rust/C++esque. reply anonzzzies 16 hours agoparent> Like building out of clay and firing the parts you are happy with. > Could even have a three step - Python-esque -> Go/Java-esque -> Rust/C++esque. We do exactly that with Common Lisp. It compiles to different languages/frameworks depending on what we require (usually sbcl is more than enough, but for instance for embedded or ML we need another step. All dev (with smaller data etc) is in sbcl so with all the advantages. reply ralegh 16 hours agorootparentIs there somewhere I could read more about this? I've always wanted to learn Lisp but lacked a specific need for it. reply claudionaoto 14 hours agoparentprevDart? Version 1 was a lot like Javascript/Typescript in one spec (a dynamic language with optional unsound typing). Version 2 uses sound typing, but you can still let variables unannoted (and the compiler will infer type \"dynamic\") for scripts. reply mattlondon 16 hours agoparentprevSounds like JavaScript and typescript would be a good fit for you. Highly expressive, dynamic and strongly typed, and highly performant both on server side and within the browser. reply ralegh 16 hours agorootparentI do like JavaScript but it strikes a weird balance for me where it's a bit too easy to write and a bit too verbose so I tend to end up with hard to maintain code. Feels good at the start of a project but rarely a few weeks in. Also not a fan of the node ecosystem, I try to use deno where I can (maybe that would be bun these days). reply zem 14 hours agorootparentprevperhaps rescript [https://rescript-lang.org/] even more than typescript reply adsharma 6 hours agoparentprevpy2many does python-esque to both Go and Rust. The larger problem is building an ecosystem and a stdlib that's written in python, not C. Use ffi or similar instead of C-API. reply VBprogrammer 16 hours agoparentprevI like the idea but in all honesty I have difficulty imagining it working in practice. Once your python code is stable (i.e. You've worked out 99% of the bugs you might have caught earlier with strict type checking) would there be any incentive to go back and make the types more rigid or rigorous? Would there be a non-negligible chance of introducing bugs in that process? reply zem 14 hours agorootparentby the time you have your code in its final state (i.e. you're done experimenting) and shaken out the bugs, your types are mostly static; they're just implicitly so. adding annotations and a typechecker helps you maintain that state and catch the few places where type errors might still have slipped through despite all your tests (e.g. lesser-used code paths that need some rare combination of conditions to hit them all but will pass an unexpected type through the call chain when you do). it is very unlikely that you will introduce bugs at this point. reply ralegh 16 hours agorootparentprevI agree it's a bit of a pipe dream. I'm more thinking of performance here, e.g. web services using Django. You could start off in dynamic/interpreted land and have a seamless transition to performant compiled land. Also lets you avoid premature optimisation since you can only optimise the hot paths. Also types are self documenting to an extent. Could be helpful for a shared codebase. Again Python just now getting round to adding type definitions. At the end of the day good tooling/ecosystem and sheer developer hours is more important than what I'm suggesting but it would be nice anyway. I dream about cool programming languages but I stick to boring for work. reply throwaway17_17 3 hours agoprevI am genuinely appreciative that a post like this, a GitHub link to a semi-slow moving, but clearly well considered and sincerely developed programming language, can not only remain on the front page of HN, but can generate a diverse and interesting group of discussions. It’s material like this that keeps me coming back to the site. I’m not sure if anyone needed this comment, but I’m sure my posting it isn’t going to hurt. reply DerSaidin 15 hours agoprevI like the graph at the top of the readme as a summary. The rest of the readme focuses on the delta between Go and Borgo. It doesn't say much about the delta between Borgo and Rust. I think the delta there is mainly no lifetimes/ownership? reply eximius 14 hours agoparentNo traits, const generics, probably no turbofish equivalent for when inference struggles. reply sushisource 13 hours agorootparentMost importantly: Null pointers still exist (yes I know they technically exist in unsafe Rust, to head off any pedants) Also: No `?` operator reply jdknezek 13 hours agorootparentThere is a `?` operator: https://github.com/borgo-lang/borgo?tab=readme-ov-file#error... reply HippoBaro 17 hours agoprevGo has an amazing runtime and tool ecosystem, but I’ve always missed a little bit more type safety (especially rust enums). Neat! reply preommr 17 hours agoprevThis and pub/private modifiers for structs instead of letter casing is all I've ever wanted. reply odc 16 hours agoparentI love Go's letter casing. It's such a neat way to remove cruft. reply phplovesong 16 hours agorootparentIt also adds cruft. Public struct members JSON usually needs to be converted to lowercase. Hence the stuct tags. reply eadmund 15 hours agorootparentJSON is just one tiny part of most programs, sitting on the edge where the program interacts with other programs; it doesn’t permeate the entire codebase. Structure privacy, OTOH, does. Count me in as someone who really enjoys the case-based approach. It’s not the only one which could work, but it does work. reply gpderetta 15 hours agorootparentThe single most productive habit I picked up int the last few years is to always use exactly the same name for the same entity across source files, configs files, database entries, protocol fields, etc. reply doctor_eval 12 hours agorootparentThat’s funny, I did it your way for years and ended up considering it a big mistake. Today I use idiomatic names - MyName in Go, myName in JS/JSON, my_name in SQL. There are many reasons but generally speaking, for me, it’s less effort and code is more readable. Curious what your rationale is? reply __float 7 hours agorootparentI just ran into this earlier today - it makes navigating code with grep more difficult. I had a YAML file using `some_property_name`, which was turned into `SomePropertyName`, and it's a small annoyance. It's not a huge deal, but it adds friction where some languages have none. (Or alternately, getting reordered in a separate system like `property_name_some`.) reply gpderetta 1 hour agorootparentEase of grepping is one benefit, but for me the main benefit is the cognitive overhead when reading code. reply doctor_eval 3 hours agorootparentprevThe issue that I ran into is dealing with lot of code across different languages, like plpgsql, go and JavaScript. Especially with database code, something that's fine in Go, like EmployeeID, ends up being employeeid in SQL. You can use underscores in Go but that can trigger other behaviours. If you mix your own JSON with JSON from other sources, you get inconsistent capitalisation. And so on. And when you have hundreds or thousands of identifiers like this, it gets really hard to read. You can of course capitalise in SQL - even though it's not semantic - but that becomes inconsistent, too. And then of course the lifecycles of each of these things can be different, which adds another layer of complexity - maybe you refactor your Go code before you upgrade the database, so you end up with two identifiers anyway. Ultimately I switched to using idiomatic names everywhere, and I really haven't looked back. The boundaries between these systems tend to be pretty clear, as mentioned by someone else, so finding things shouldn't be hard regardless of what they're named. It's certainly takes slightly longer to deal with idiomatic names - but you read code way more than you write it, and it's easier to read idiomatic code. reply gpderetta 1 hour agorootparentprevI have the benefit of writing mostly C++ where there is really no globally agreed idiomatic naming. At $JOB we use snake_case naming for C++ functions and objects (as opposed to types), which also matches the python naming convention we use. Snake case is not idiomatic for xml, but we still happen to use it for leaf config options. The main benefit is reducing ambiguity to what maps to what across files. Ease of grepability is also an advantage. reply zer00eyz 15 hours agorootparentprevAnd database col name, and validation and... The moment you integrate with a third party your US centre zip_code field is suddenly coming over the wire as postCode. The conversions are going to go on, at least in go I can define all of that conversion with ease in one place. reply hgs3 14 hours agorootparentprevGo's semantic use of case is objectively bad because most of the worlds scripts do not have the concept of it. For example ideographs, as used in eastern countries, do not have capitalization. This means programmers in many parts of the world cannot express identifiers in their native tongue. reply randomdata 14 hours agorootparentIt looks like something was lost in the middle of your comment. You open with something about it be objectively bad, but then it jumps to something about how it is subjectively bad. What was omitted? reply from-nibly 12 hours agorootparentHow is \"i cant name variables in my native language\" subjective? reply bigstrat2003 12 hours agorootparentI don't really think the sarcastic tone was called for, but the previous poster is right. \"I can't name variables in my native language\" is objective, but whether or not that's bad is subjective. reply langnutty 7 hours agorootparentVery true but “bad” is always subjective so at least they came up with an evaluation that is binary — either you have capitalization in your language or you don’t, either the analogy fits or it doesn’t. (Some linguist will point out that Bongo-Bongo has half-capitalization, or half has capitalization). reply groestl 9 hours agorootparentprevTrue, as a non-native speaker: naming variables in a native language (that's not English) is objectively bad. reply akira2501 15 hours agorootparentprev> It's such a neat way to remove cruft. I don't disagree, the problem I have with it is, I have to pay for that up front and have to factor it into my design immediately. This also combines with the fact that the namespace is very flat with no heirarchy, so, choosing good public names is something I feel like I spend way too much time on. Go is the only language that causes me to pull out a thesaurus when trying to name methods and struct members. It's kinda maddening. Although, after going through this exercise, I end up with code that reads like English. I just wish I could refactor my way into that state, rather than having to try to nail it up front. reply bbkane 4 hours agorootparentChatGPT is really good at suggesting 20 names for . Try it out! reply lanstin 9 hours agorootparentprevChoosing names is something that often is in the bucket of oh I wish I had thought a little more before sharing these names. reply aatd86 13 hours agorootparentprev>I just wish I could refactor my way into that state, rather than having to try to nail it up front. Procrastination looms. :o reply metaltyphoon 16 hours agorootparentprevDislike it very much specially with codebases which have lots of acronyms, aka aviation. Having to change an acronym from upper to lowercase just suck. reply Groxx 16 hours agorootparentIn that case, maybe try: `_ACRNYM` reply metaltyphoon 16 hours agorootparentFunction names with _ ? That’s not for me :) reply jjallen 15 hours agorootparentprevI spent quite a few hours tracking down bugs due to miscased struct fields unfortunately. Strongly prefer explicitness over implicitness reply randomdata 15 hours agorootparentThe casing rules are quite explicit and enforced by the compiler. A build would have immediately failed on whatever mismatch you had. A few hours and you didn't even think to try compiling it? I'm guessing you are talking about something else entirely, like, perhaps, decoding JSON into a struct using reflection and encountering a situation where the field names didn't match? Indeed, implicitness can bite you there. That's true in every language. But, then again, as you prefer explicitness why would you be using that approach in the first place? reply jjallen 3 hours agorootparentThe rules are explicit but the actual changes in code are very small and unique to this language (or unique from the languages I had ever used). It’s one of those things that you can forget about — because it’s a small difference in code and arguably isn’t explicit. I forget what it was, but basically my code wasn’t working the way I thought it should and it was solely due to a lowercased struct field. It happened twice where I spent at least a little while trying to figure it out. And yeah I would guess that I tried to compile. Would be very dumb if I hadn’t although wouldn’t be the dumbest thing I’ve ever done reply latchkey 15 hours agorootparentprevWhich IDE do you use? Mine would flag this as an error pretty quickly. reply jjallen 2 hours agorootparentGoland. How would an IDE know that you intended a struct field to be public or not? reply doctor_eval 12 hours agorootparentprevI like the terseness of it but having to refactor just because I change visibility is a bit stupid. I never wrote ObjC but didn’t they use + and - (and nothing) as visibility modifiers? reply tredre3 7 hours agoparentprevSame. It's ugly, it breaks acronyms, it doesn't work in all (spoken) languages, it doesn't work well with serialization, etc. Frankly if they insisted on visibility being part of the name, I would have preferred they go with the age-old C++/ancientPHP tradition of using a _ prefix for private members. reply shepherdjerred 15 hours agoprevI would kill for these languages features in Go reply neonsunset 14 hours agoparentThat's what C# offers (except true* Rust-style enums). The latter will be there in one of the future versions and is in an active design phase, which luckily focuses on tagged-union implementation strategy. With that said, you can already easily use one of the Option/Result libraries or write your own structure - switching on either is trivial (though you have to sometimes choose between zero-cost-ness and convenience). It already has struct generics, iterator expressions (LINQ), switch pattern matching, good C interop and easy concurrency primitives (no WaitGroup nonsense, also has Channel). Oh, and also portable SIMD, C pointers and very strong performance in general. * True as in proper tagged unions with either a tag or another type of discriminant and aliased layout, instead of tag + flattening all constituent parts into a one jumbo struct. Or making it an opaque pointer to a box (like Java does, or C# if you go inheritance/interface route). These don't count. I'm curious about Borgo's lowering strategy for enums, but given Go doesn't have those, I'm not holding my breath and expecting something like F# struct unions at best. reply mdaniel 13 hours agorootparentAs someone who is \"C# curious,\" but haven't been able to keep up with all the horrific number of rebrands of the \"new, open, .net, core, framework\", what is the C# equivalent of $(for GOOS in linux darwin; do for GOARCH in amd64 arm64; do dotnet build -o thing_${GOOS}-${GOARCH}; done; done)? reply nrr 13 hours agorootparentThat's spelled `dotnet publish -r ${GOOS}-${GOARCH}` with the new ahead-of-time (branded Native AOT) compilation features installed and enabled. It isn't without a whole list of caveats if you're used to Go's way of doing things though. Seefor details. reply mdaniel 13 hours agorootparentYou're very kind, thank you For others wanting to play along at home: $ docker run --name net8 --rm -it mcr.microsoft.com/dotnet/sdk:8.0-jammy-arm64v8 bash -c ' cd /root dotnet new -d -o console0 console cd console0 dotnet publish --nologo --self-contained -v d -r osx-arm64 -o console0-darwin-arm64 sleep 600 ' although it didn't shake out $ docker cp net8:/root/console0/console0-darwin-arm64/console0 ./console0 $ ./console0 Killed: 9 I tried with and without --self-contained and the biggest difference was that self-contained emitted a bazillion .dll files and without just emitted the binary. I case the context isn't obvious, $(dotnet new console) is a skeleton for the infamous WriteLine(\"Hello, World\") without doing crazy whacko stuff reply neonsunset 13 hours agorootparentFor simple JIT-based but fully self-contained binaries, without adding any properties to .csproj, the command is a bit mouthful and is as follows dotnet publish -p:PublishSingleFile=true -p:PublishTrimmed=true -o {folder} (you can put -p: arguments in .csproj too as XML attrs in ...) This will give you JIT-based \"trimmed\" binary (other languages call it tree shaking). You don't need to specify RID explicitly unless it's different from the one you are currently using. For simple applications, publishing as AOT (without opting in the csproj for that) is dotnet publish -p:PublishAot=true -o {folder} Add -p:OptimizationPreference=Speed and -p:IlcInstructionSet=native to taste. Official docs: https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-p... reply mdaniel 13 hours agorootparentYou're also very kind, and I realized that it's possible there were a bazillion \"watch out\"s on the docs and was just trying the true trick when I saw your comment However, it seems this brings my docker experiment to an abrupt halt, and is going to be some Holy Fucking Shit to re-implement that $(for GOOS) loop in any hypothetical CI system given the resulting explosion /usr/bin/sh: 2: /tmp/MSBuildTemproot/tmp194e0a13157b47889b36abb0ce96cd2d.exec.cmd: xcodebuild: not found reply neonsunset 12 hours agorootparentYou need an OS for which you are building to be able to compile an AOT binary - it depends on OS-provided tooling (MSVC on Windows, Clang on macOS and Linux, and a system-provided linker from each respective system). In fact, once ILC is done compiling IL to .a or .lib, the native linker will just link together the csharp static lib, a GC, then runtime/PAL/misc and a couple of system dependencies into a final executable (you can also make a native library with this). Cross-architecture compilation is, however, supported (but requires the same extra dependencies as e.g. Rust). If you just want to publish for every target from a single docker container (you can't easily do that with e.g. Rust as noted), then you can go with JIT+single-file using the other command. Keep in mind that Go makes concessions in order for cross-compile to work, and invested extra engineering effort in that, while .NET makes emitting \"canonical\" native binaries using specific system environment a priority and also cares a lot about JIT instead (there aren't that many people working on .NET compiler infrastructure, so it effectively punches above its weight bypassing Go and Java and matching C++ if optimized). reply neonsunset 13 hours agorootparentprevThe sibling comment pretty much sums it up. But if you want more detail, read on: Generally, there are three publishing options that each make sense depending on scenario: JIT + host runtime: by definition portable, includes slim launcher executable for convenience, the platform for which can be specified with e.g. -r osx-arm64[0]. JIT + self-contained runtime: this includes IL assemblies and runtime together, either within a single file or otherwise (so it looks like AOT, just one bin/exe). This requires specifying RID, like in the previous option, for cross-compilation. AOT: statically linked native binary, cross-OS compilation is not supported officially[1] because macOS is painful in general, and WindowsLinux/FreeBSD is a configuration nightmare - IL AOT Compiler depends on Clang or MSVC and a native linker so it is subject to restrictions of those as a start. But it can be done and there are alternate, more focused toolchains, that offer it, like Bflat[1]. If you just want a hello world AOT application, then the shortest path to that is `dotnet new console --aot && dotnet publish -o {folder}`. Otherwise, the options above are selected based on the needs either via build properties or CLI arguments. I don't know which use case you have - let me know if you have something specific in mind (\"Just like in Go\" may or may not be optimal choice depending on scenario). [0] https://learn.microsoft.com/en-us/dotnet/core/rid-catalog [1] https://github.com/bflattened/bflat (can also build UEFI binaries, lol) reply shepherdjerred 12 hours agorootparentprevTo clarify, my team uses Go and prefers to stick with \"idiomatic\" Go. So, while we could implement our own types, there would be pushback. As an example I liked lo [0] but my team was resistant because it's not considered idomatic. If were up to me we'd be using a language with a better type system :) [0]: https://github.com/samber/lo reply orthoxerox 12 hours agorootparentprevIt's not the best solution, but an analyzer like [0] covers most of the cases for reference types. For enums and struct DUs in general we'll have to wait for language (or even runtime) support. [0] https://github.com/shuebner/ClosedTypeHierarchyDiagnosticSup... reply giovannibonetti 16 hours agoprevThis seems to achieve a similar type safetycomplexity tradeoff as Gleam [1] does. However, Gleam compiles to Erlang or JavaScript, which require a runtime and are not as performant as Go. I wonder if Borgo's compiler messages are as nice as Rust's/Gleam's, though. [1] https://gleam.run/ reply ffsm8 16 hours agoparent> are not as performant as Go. Ymmv, you might be surprised if you actually bothered to benchmark. Depending on the workload, either JS or erlang can ultimately turn out on top. They're all optimized to a degree that each has a niche it excells at and leaves the others in the dust. even with heavily scewed benchmark like techempower fortunes (https://www.techempower.com/benchmarks/#hw=ph&test=fortune&s...) you end up with JS getting ahead of Go with raw requests. And not just slightly, but by 1.5 times the throughput. In other benchmarks, Golang does indeed win out with similar or even bigger advantages... so the only thing you can ultimately say is ... that it depends. Its a different story if you chose other languages though. But JS, Golang and Erlang are all extremely optimized for their ideal usecase. reply hombre_fatal 12 hours agorootparentWell hold on a second. The JS impl that you're talking about uses a minimal custom runtime (https://github.com/just-js/just) that you would never use—it barely implements JS. It's basically only used for this benchmark. It doesn't make sense to compare that to Go when we're talking about Javascript vs. Go performance. Scroll down to the \"nodejs\" entry for a more realistic comparison. reply ffsm8 6 hours agorootparentFeel free to switch to json serialization and the the same pattern repeat with uwebsockets.js. I'm not saying that JS is \"just as fast as golang\" generally. My argument is specifically that it's optimized to a degree that there are cases in which JS, an interpreted language, does end up on top. The same applies to erlang and it's optimization for efficient concurrency. On average you'll likely get better performance with go, but depending on the workload the results can differ reply lolinder 15 hours agorootparentprevI'd add Java to that list as well. JIT compilers have come a long way, and OpenJDK was on par with Rust for performance on the last project I tried porting. reply eximius 17 hours agoprevBe still my heart. I would use this so fast at work where we currently use Go. But introducing a new language is a scary thing. reply cellularmitosis 1 hour agoprevHas anyone written a language which targets golang assembler yet? I’m surprised I don’t see that. reply metadat 18 hours agoprevIs it correct to say Borgo \"compiles to Go\", or should it say \"transpiles to Go\" It appears to be a transpiler (consumes a Borgo and does the work to convert and emit a Go program as text): https://github.com/borgo-lang/borgo/blob/main/compiler/src/c... reply jerf 17 hours agoparentThe word \"transpiler\" propagates the misunderstanding that there is something special about a compiler that emits machine code, that requires some special \"compiler\" techniques for special \"compiler\" purposes that are not necessary for \"transpiler\" purposes because \"transpiling\" requires a completely different set of techniques. There aren't any such techniques. If one were to create an academic discipline to study \"transpilers\" and one to study \"compilers\", all you'd end up with is an identical bunch of techniques and analyses with different names on them. (A thing that sometimes happens when diverse disciplines study what turns out to be the same thing; see machine learning versus statistics for a well-known example.) Even \"compiling\" to machine code isn't special anymore, because CPUs don't actually execute assembly anymore. They themselves compile assembly into internal micro-ops, which is what they actually execute. So compilers don't even compile \"machine language\" anymore; it's just another target. This also dodges \"is it a 'compiler' or a 'transpiler' if it targets WASM?\", which is good, because there is no value in that question on any level. reply Matheus28 17 hours agorootparent1. Transpilers output to another programming language that is typically written by hand by others (so not assembly). 2. Transpilers don’t typically optimize code, leaving those transformations to the compiler of the target language. 3. Compilers will typically have an internal representation (SSA) which they operate on to optimize. Transpilers typically operate on the AST (because they don’t need to do any but the most trivial optimizations). There are exceptions to the rules but these cover the majority of the reasons on why people make the distinction. reply lolinder 15 hours agorootparentThese differences aren't inherent to transpilers vs compilers, they're mostly the result of the fact that the vast majority of transpilers are less mature than the battle-tested compilers that you're thinking of. The average hobby compiler—regardless of target—doesn't optimize code and works directly on the AST because that's simple to get started with. Most hobby compilers also target some other language rather than LLVM or machine code because that's simple to get started with, so the result is that most transpilers are hobby projects that don't optimize. But there's no reason why a transpiler shouldn't include optimization steps that adapt the output to use code paths that are known to be fast, and a production-grade transpiler typically will include these steps. reply randomdata 15 hours agorootparentprev> the majority of the reasons on why people make the distinction. You have provided some defining properties that might allow for distinction, but you have not given any reasons for why people make a distinction. But perhaps we can suss it out. Given the statement \"Borgo compiles to Go\", what important information is lost that would be saved if \"Borgo transpiles to Go\" was used instead? reply Matheus28 13 hours agorootparentIn that statement, it doesn't really add anything. In the statement \"XYZ is a compiler/transpiler\", it does. It doesn't hurt to have a word that is more specific than others. Otherwise we should just refer to compilers as an \"app\" :) reply randomdata 12 hours agorootparent> In the statement \"XYZ is a compiler/transpiler\", it does. Okay. What important information is lost in \"XYZ is a compiler\" that would be gained in \"XYZ is a transpiler\"? > It doesn't hurt to have a word that is more specific than others. It can if the intent is not properly understood. And so far I'm not sure we do have that understanding. reply lolinder 13 hours agorootparentprevI don't think anyone here is saying we shouldn't have the word \"transpiler\" at all, just that \"transpiler\" is a subcategory of \"compiler\" and there's no reason for OP to try to correct the title of this story. It reminds me of how my 5-year-old son always corrects me when I tell him to get in the car—\"you mean the van!\". I have tried to explain to him that a minivan is a kind of car, and he's just about getting it, but it's been a challenge for him to grasp. reply Matheus28 13 hours agorootparent>I don't think anyone here is saying we shouldn't have the word \"transpiler\" at all This thread chain is in response to jerf's comment \"transpiler shouldn't be a word\" (simplifying his comment for brevity's sake) reply lolinder 13 hours agorootparentEh, that's one possible reading, but their actual take is more nuanced than that: > The word \"transpiler\" propagates the misunderstanding that there is something special about a compiler that emits machine code, that requires some special \"compiler\" techniques for special \"compiler\" purposes that are not necessary for \"transpiler\" purposes because \"transpiling\" requires a completely different set of techniques. In context of the parent comment I read this to be a reaction to someone insisting that we use \"transpiler\" instead of \"compiler\"—more an observation of what is happening here than a call to stop using the word altogether. reply gergo_barany 11 hours agorootparentprevWe shouldn't have the word \"transpiler\" at all. reply markusde 17 hours agorootparentprevIt doesn't matter but I fully disagree with this. A transpiler emits code the user is supposed to understand, a compiler does not. At least that's the general way I've seen the term used, and it seems quite consistent. reply jerf 17 hours agorootparentThere is a phenomenon I have observed many times where you can get a bunch of people in a room and make some statement, in this case, \"Compilers are different than transpilers\", and everyone around the table will nod sagely. Yup. We all agree with this statement. But if you dig in, it will turn out that every single one of them has a different interpretation, quite often fatally so to whatever the task at hand is. I mention this because my impression has been that the distinction between \"transpiler\" and \"compiler\" is that the latter is into some machine code and the former is not. I think if we could get people to sit down and very clearly define the difference we'd discover it is not as universal a definition as we think. My personal favorite is when I say a particular term is not well defined on the internet, and I get multiple commenters to jump up and tell me off about how wrong I am and how well-defined the term is and how universal the understanding is, while each of them gives a completely different definition. As I write this it hasn't happened in this thread yet, but stay tuned. Anyhow, the simple solution is, there isn't a useful distinction between them. There's no sharp line anyhow. Plenty of \"transpilers\" produce things like Python that looks like def f000000001_bch(a0023, a0024, bf___102893): __a1 = f000000248_BCh1(a0024, const_00012) if __c_112__0: f0000000923(__a1) else: f0000000082(__a1) and it's really quite silly to look at what can be a very large process and make a distinction only in how the very last phase is run, and on a relatively superficial bit of that last phase too. reply jerf 15 hours agorootparent2 hours later, I think it's safe to say there are multiple definitions in play that are, if not outright contradictory, certainly not identical. It seems the term is not terribly useful even on its own terms... it is not as well defined as everyone thinks. Ultimately, \"compiler\" isn't a bright shining line either... I can take anything and shade it down to the point where you might not be sure (\"is that a 'compiler' or an 'interpreter'?\"), but the \"transpiler\" term is trying to draw a line where there isn't even a seam in the landscape. reply norir 13 hours agorootparent> the \"transpiler\" term is trying to draw a line where there isn't even a seam in the landscape. I don't think you have proven that it is a seamless landscape. In fact, I think that people's definitions have been remarkably consistent in spite of their fuzziness. The heart of what I have read is that most people understand a transpiler to be an intermediate text to text translation whose output is input to another tool. The common colloquial definition of a compiler is a text to machine code (for some definition of machine code) translation whose output is an executable program on a host platform. You can make an argument that every compiler is a transpiler or every transpiler is a compiler, but I think it requires a level of willful obtuseness or excessive pedantry to deny that there is something behind the concept of a transpiler. This discussion wouldn't even be happening if transpiler were a completely meaningless term. reply floydnoel 16 hours agorootparentprevI've observed this sort of behavior frequently, is there a name for this phenomenon yet? Something like \"Assuming all concepts are universal to one's own peculiar definition\" Maybe \"semantic egocentrism\" could fit the bill? reply zer00eyz 14 hours agorootparentAnd in the other corner you have Chomsky with universal grammar... and in another you have Platonic Forms... I love the \"draw me a tree\" idea of a Platonic form, we all have an idealized model of what that is, that is uniquely our own. With that in mind isnt everything subject to some sort of semantics? reply Jtsummers 17 hours agorootparentprev> A transpiler emits code the user is supposed to understand, a compiler does not. No, a transpiler emits code that another system is meant to understand (often another compiler or interpreter). Whether a human can understand it or not is immaterial to the objective of transpiling. reply randomdata 17 hours agorootparentDoes that imply that a compiler emits code that nothing can understand? Or are you saying that 'transpile' is just another word for 'compile'? reply Jtsummers 17 hours agorootparent> Does that imply that a compiler emits code that nothing can understand? Bizarre take. No, compilers in the classical sense target byte code and machine code which is meant to be interpreted by a byte code interpreter or a hardware machine. > Or are you saying that 'transpile' is no more than another word for 'compile'? Yes. Compilers translate from one language to another. Transpilers translate from one language to another. Both have the objective of preserving the behavior of the program across translation. Neither has the objective of making something intended for humans as a general rule. That transpiled code (if we draw a distinction) targets languages meant for humans to read/write means that many transpiled programs can be read by people, but it's not the objective. reply randomdata 16 hours agorootparent> Bizarre take. Bizarre in what way? If compilers are somehow different, then they mustn't target systems, as that's what your previous comment says transpilers do. Which leaves even your own classical definition to be contradictory, if they are somehow different. What does that leave? > Yes. But it seems you do not consider them different, which was the divergent path in the previous comment. But evaluating both the \"if\" and the \"else\" statement is rather illogical. The evaluation of both branches is what is truly bizarre here. reply rowanG077 17 hours agorootparentprevBut then compilation is the same thing as transpilation as noted. reply Jtsummers 17 hours agorootparentYes. reply unshavedyak 16 hours agorootparentprevYea, not sure i disagree with anything being said here. Though to me, transpiler just typically means it goes from one language i could write, to another i could write. I don't necessarily expect to enjoy reading or perhaps even understanding the JavaScript output from any lang that builds to JS, for example. reply randomdata 16 hours agorootparent> transpiler just typically means it goes from one language i could write, to another i could write. What possible compiler target couldn't you write? Compilers are not exactly magic. reply unshavedyak 12 hours agorootparentFair, by \"could write\" i meant one intended for humans to write. Ie i would not say LLVM bytecode is intended for humans to write by hand. Can they? Sure. The difference (to the parent comment) in my eyes is that the target language is the thing intended for humans, not the target output itself. As another commenter points out, transpiled code is often not intended for humans, even if the language is. reply randomdata 11 hours agorootparentMachine code is intended to be written by humans. That was the only way to program computers at one point in time. Given a machine code target, would you say it is product of transpilation or compilation? reply unshavedyak 9 hours agorootparentI would stand by my original statement, as i don't consider that \"intended\" or common by modern day standards. Humans hand wrote binary for a while too hah. If it's not clear, these are just my opinions. Not an attempt at an objective fact or anything. reply randomdata 6 hours agorootparent> Humans hand wrote binary for a while too hah. Like, as in flipping toggle switches? Isn't that just an input device? They were still producing machine code from that switching. reply randomdata 17 hours agorootparentprevAll compiler outputs are understandable. I suppose you mean with the intent of it being a one-time translation? As in, like when the Go project converted the original C codebase into Go source with the intent of having developers work in the Go output afterwards and the C code to be never touched again? What is meaningful about such a distinction? reply eklavya 17 hours agorootparentprevI see what you mean but how is it academically useful to identify transpilers something of their own? It's still compiling (lowering) from one notation to another. reply itishappy 17 hours agorootparentprevIs Babel a transpiler? reply philwelch 10 hours agorootparentprevActually, I can understand assembly. reply Joker_vD 16 hours agorootparentprevI'm fairly certain that source-to-source transpilers rarely use anything like BURS or any other sufficiently smart \"instruction selection\" (or insturction scheduling, for that matter) algorithms because why would they, the compilers for the targeted language already incorporate such algorithms, maybe even of the higher quality than the transpiler's author are capable to write themselves. reply jerf 15 hours agorootparentAll compilers end up with local considerations. Instruction selection or register allocation is not a consideration special to compilers that \"transpilers\" do not need to have, they are specific considerations for that particular compiler target. A compiler to Go must consider Go's identifier rules, which does not apply to compilers targeting a CPU. A compiler to SQL must consider valid SQL syntax and have their own optimization concerns that don't apply to Go. And so on. The middles all look very similar, though, which is where the heart of \"compiler\" comes from; that process of some sort of parsing and then transforming down to some other representation. This has a distinguishing set of characteristics and problems despite what frontends and backends get slapped on them. reply PurpleRamen 18 hours agoparentprevReadme says transpile: \"Borgo is a new language that transpiles to Go.\" And it's written in rust. Kinda unholy. reply metadat 18 hours agorootparentYeah, the top of the project says \"compiles\", then the readme says \"transpiles\". Perhaps the author was just trying to get all the SEO terms in there. > And it's written in rust. Kinda unholy. Agreed, it's like, do you really hate writing Go so much that you'll really write all that Rust to get out of it? Haha. Reminds me of the web frameworks which generated the JS so you didn't have to touch it, like GWT of old. I'm sure it was a fun exercise to create Borgo, though. My favorite transpiler is Haxe. It targets so many other languages, the surface area is impressive. https://haxe.org/ reply Alifatisk 30 minutes agorootparentI’ve totally forgotten about Haxe! reply speed_spread 14 hours agorootparentprevNothing unholy there. It's easier to transpile to a less constrained language. Transpiling to Rust would require using one of the GC crates or refcount everything. Then you'd have to also satisfy the mutability and send/sync constraints. Go needs none of these things, so all the transpiler needs to care about is it's own added constraints. reply pjmlp 17 hours agorootparentprevNothing like adding dependencies to the build toolchain. reply frozenport 17 hours agoparentprevTranspiler is a kind of compiler reply michaelsbradley 17 hours agoparentprev“transpiler”, “compiler”, either terminology is valid: https://en.wikipedia.org/wiki/Source-to-source_compiler reply metadat 17 hours agorootparentThanks, I'd always thought targeted transformations -> transpiler, but it makes sense it's really a subset of general compiler functionality, sans binary output. reply randomdata 17 hours agorootparent> but it makes sense it's really a subset of general compiler functionality, sans binary output. Tell us more about this compiler subset that does not produce binary output. What do they produce? Ternary? Qubits? Nothing? reply lolinder 15 hours agorootparentThey produce text, such as Golang source code. reply randomdata 14 hours agorootparentThanks for your response, but the Go spec asserts that Go source is represented as UTF-8. UTF-8 is a binary encoding. We're talking about compilers that produce something other than binary output. reply lolinder 14 hours agorootparentAh, my mistake, I thought you were making an earnest inquiry and not a joke. Carry on. reply Qerub 17 hours agoprevReminds me of this previous effort to build upon Go but add a more flexible type system: https://github.com/oden-lang/oden reply lf-non 4 hours agoprevIn the same vein, Go+ is also interesting, and its being actively developed. https://goplus.org/ reply vbezhenar 1 hour agoprevNo exceptions - no love. reply owenpalmer 8 hours agoprevThis looks like an interesting sweet spot. Rust is often praised for the borrow checker, but honestly I really only like rust for the type system and error handling. Go is praised for it's simplicity, but hated for it's error handling. reply noisy_boy 5 hours agoparentRust without borrow checker is much less feasible than Go with Result/Option types to address the nil overdose problem. Unfortunately Go team refuses to acknowledge the common themes coming out of years of user complaints. They don't have to cater to every wishlist but when nil/enum related complaints are the majority in every discussion about issues with Go, one would think to acknowledge the legitimacy of those shortcomings. Nope, not Go team and their band of simplicity zealots. reply Mawr 2 hours agorootparentI'm not sure what exactly you mean by acknowledgement, but here are some counterexamples: - A proposal for sum types by a Go team member: https://github.com/golang/go/issues/57644 - The community proposal with some comments from the Go team: https://github.com/golang/go/issues/19412 Here are some excerpts from the latest Go survey [1]: - \"The top responses in the closed-form were learning how to write Go effectively (15%) and the verbosity of error handling (13%).\" - \"The most common response mentioned Go’s type system, and often asked specifically for enums, option types, or sum types in Go.\" I think the problem is not the lack of will on the part of the Go team, but rather that these issues are not easy to fix in a way that fits the language and doesn't cause too many issues with backwards compatibility. [1]: https://go.dev/blog/survey2024-h1-results reply noisy_boy 44 minutes agorootparentI guess I should have been more clear that I mean actions that have resulted from the feedback. Sure, the survey brings out the concerns in a structured form, but to anyone who has seen more than a few discussions about Go, the feedback regarding error handling or enum or sum types etc would not have been news. I can't imagine Go team at Google is stunned by developer demand for these things. Question is why there hasn't been a concerted effort to prioritize these top concerns (I will stand corrected if there is already something underway that I'm not aware of). One of the proposals you linked has been raised in 2017 and it is still open with \"No one assigned\"; same fate for the other item. That doesn't inspire confidence in terms of Go team treating these things as top priority. I think stuff developers are moaning about the most should be top priority but I guess that is just my simpleton thinking. > I think the problem is not the lack of will on the part of the Go team, but rather that these issues are not easy to fix in a way that fits the language and doesn't cause too many issues with backwards compatibility. They have made many changes to the language, some significant ones like Generics (which I would assume was also not an easy problem to solve) while they have largely left the elephant in the room unaddressed i.e. error handling - and the developers deal with that one on a daily basis and I would wager a lot more frequently compared to Generics. If I had to gauge their priority, I would go by where they they are putting their money instead of surveys and proposals. And their priorities seem to be different from what the populace is asking. And that is my point. reply templaedhel 17 hours agoprevThey made a coffeescript for go reply christophilus 17 hours agoparentThey made a Typescript for go. Coffeescript was dynamic. reply recursive 17 hours agorootparentCoffeescript added semantics and behavior. Typescript for better or worse is almost only types on top of existing behavior. (with the primary exception being the `enum` concept) reply peterkos 7 hours agoprevThis looks a lot like Swift. To me, that's a good thing :) reply jjnoakes 14 hours agoprevWhat's the license? reply rdevsrex 16 hours agoprevIt looks pretty interesting! Definitely something to play around with, but honestly, I'd rather just use Rust (or Gleam if GC is ok). reply fl0ki 14 hours agoprevIt's a little suspicious the example uses math/rand.Seed() which has been deprecated for over a year. That's when I noticed the repo itself hasn't had a single commit in 7 months. Why is this suddenly news, when by all appearances it's abandonware? reply OJFord 14 hours agoparent> Why is this suddenly news, when by all appearances it's abandonware? Because the submitter suddenly found it, and it was new to many others too? It's not a 'Show HN'. reply littlestymaar 16 hours agoprevMany people on HN “Rust syntax is so ugly” rustaceans “I love the Rust syntax so much I want it in Go too” reply Scramblejams 16 hours agoparentThe author notes[0] that it keeps the Rust syntax to avoid having to write a parser. I have no issue with the syntax but I think the chance of uptake would be considerably improved if the syntax were as close to Go's as reasonably possible. That's because I estimate Go programmers to be a better target for this than Rust programmers, but maybe I'm wrong. [0] https://news.ycombinator.com/item?id=36847594 reply speed_spread 14 hours agorootparentHaving a soft-Rust alternative is a recurring topic in the Rust community and is acknowledged as being of interest by core members: https://www.reddit.com/r/rust/comments/j2l9v9/revisiting_a_s... reply Scramblejams 4 hours agorootparentYeah, it'd be great to see something come of it. Been a while, though. reply pornel 10 hours agoparentprevThere’s no contradiction here. Rust’s syntax looks alien to people who are not familiar with it, but the syntax itself is fine. Some users also blame Rust’s syntax for being complicated when they actually struggle with Rust’s semantics, e.g. borrow checking wouldn’t be any less strict if Rust chose a less weird sigil for lifetime labels. reply sevkih 17 hours agoprevSo swift? reply foolfoolz 9 hours agoparentit looks a lot like java 21+ reply 62951413 8 hours agorootparentJava < Kotlin < Scala Golang < Borgo < Rust reply OJFord 14 hours agoprevWhy compile to Go rather than less-than-ideal (or even slightly-unsafe) Rust? I find it conceptually compelling, I'm just surprised the target would then be in the GC'd, larger-binary'd direction. Like 'Java expressiveness with C simplicity, transpiles to Java'. Perhaps 'just' because it's a lot simpler to just expand the target language slightly and then you only have to deal with mapping the new bits into implementation, it's less like writing a compiler for a whole new language? reply Mawr 10 hours agoparentGood question. It's probably to be able to continue using the Go ecosystem. You could not incrementally switch a Go codebase to a Rust-based Borgo, but you can when it's Go-based. reply leecommamichael 9 hours agoparentprevI suspect emitting safe Rust would necessitate your very own implementation of a borrow-checker, or a weak flavor of it, in the language frontend. From there you place yourself in the author's shoes and consider the tradeoffs that come with emitting unsafe Rust. My interpretation of _that_ tradeoff is emitting \"something like C++\" or \"something like Java,\" to use your analogy. There appears to be less to get wrong. reply pdimitar 10 hours agoprevDoes Borgo have a Treesitter grammar? An LSP? I'd use it in a heartbeat if so. reply himujjal 1 hour agoparentNeovim user detected! reply rthnbgrredf 16 hours agoprevWould it be possible to make a Python (without C extensions) that compiles to Go? reply cardanome 14 hours agoparentI am not sure you can easily directly transpile to Golang from Python. Python is very, very dynamic and can have extremely complex types that are not representable with the Golang type system. Not impossible but I guess you might end up with an extra runtime layer and some more dynamic operations will not be very fast. Or you restrict it to a subset of Python like this project does: https://github.com/zanellia/prometeo You could of course write a bytecode VM in Golang but I guess that defeats the purpose. reply funny_falcon 16 hours agoparentprevThere was one: https://github.com/grumpyhome/grumpy Looks like abandoned though. reply philosopher1234 17 hours agoprevThe only language I can think of that has pulled off “compiles to another totaling language” and gained mainstream adoption is typescript, and I’m sure it wouldn’t have done so if it were possible to run in the browser otherwise. Can anyone think of another example? reply furyofantares 17 hours agoparentC++ is for sure gonna be the biggest example. I think Objective-C too. There's other successful but not \"mainstream\" languages that might count or semi-count, like Clojure targeting the JVM (though not Java) and being able to use Java packages, or ClojureScript targeting JavaScript. reply ARandomerDude 17 hours agoparentprevCoffeeScript was pretty popular about 10 years ago and did this. reply dhosek 15 hours agoparentprevThere’s web2c which transpiles Pascal-Web to C code. And in the 90s, Eberhard Mattes, to enable his port of TeX and friends to OS/2 and DOS wrote a Pascal to C compiler (I remember when it was first released, there was speculation that it might have been a pirated commercial implementation because how could one guy manage this, but that was short-lived as people realized it was faster than any of the commercial versions.) reply zem 14 hours agoparentprevhaxe is not quite \"mainstream adoption\" level but it has a decent amount of stuff done in it clojurescript is fairly popular too. reply hiccuphippo 16 hours agoparentprevNot exactly the same but a few languages compile to llir which then is compiled by llvm to machine code. reply elliotlarson 17 hours agoparentprevElixir compiles to Erlang, I think. reply toolz 17 hours agorootparentNot exactly correct, it does have \"core erlang\" as a compilation step, but they both have that as a compilation step ultimately compiling to beam bytecode. reply giancarlostoro 17 hours agorootparentprevCorrect Elixir runs on the BEAN. reply michaelsbradley 17 hours agoparentprevNim compiles to C by default, and it seems most Nim devs stick with that default. Nim hasn’t gained mainstream adoption, though. reply tylerhou 17 hours agoparentprevC++ used to compile to C. reply doctor_eval 12 hours agoparentprevI like your take but - not that this was important to TypeScript - JavaScript was literally the assembly language of the web (asm.js) until WASM came along. There was no other target that TypeScript could compile to. I guess that’s why TypeScript simply added types to JS, rather than being a wholly new language, which in turn made it compatible and familiar to potential adopters. It also solved a big problem caused by the growing size of client code bases. All of that said - this train of thought lead me to discover AssemblyScript! https://www.assemblyscript.org/ reply dexwiz 17 hours agoprevCan you use Go modules? reply tbrockman 9 hours agoparentWith a little bit of effort: https://borgo-lang.github.io/#package-definitions reply 59 more comments... GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Borgo is a new programming language that transpiles to Go, combining the simplicity of Go with the expressiveness of Rust.",
      "It includes algebraic data types, pattern matching, error handling with the ? operator, and is compatible with existing Go packages.",
      "Borgo syntax resembles Rust, with optional semi-colons, and offers features like Option for nil handling, Result for multiple return values, demonstrated through a guessing game example."
    ],
    "commentSummary": [
      "The discussion delves into Borgo, a language transpiling to Go, addressing common frustrations with Go code and offering additional features like enums and optional types.",
      "Users are intrigued by Borgo's functionalities, pointing out benefits and drawbacks of opinionated languages like Go, discussing error handling via try/catch in comparison to Go's error handling, and highlighting the importance of idiomatic naming conventions.",
      "The conversation also covers compiler vs. transpiler distinctions, backward compatibility challenges, and examples of languages compiling to other languages, focusing on language design, error management, and cross-language compatibility."
    ],
    "points": 487,
    "commentCount": 310,
    "retryCount": 0,
    "time": 1714490002
  },
  {
    "id": 40211010,
    "title": "Reddit Exposed: Bots Repost Thread 10 Months Later",
    "originLink": "https://lemmy.blahaj.zone/post/11615413",
    "originBody": "@Blaze to Reddit@lemmy.worldEnglish • 18 hours ago Reddit if full of bots: thread reposted exactly the same, comment by comment, 10 months later i.imgur.com 223 1.11K",
    "commentLink": "https://news.ycombinator.com/item?id=40211010",
    "commentBody": "Reddit is full of bots: thread reposted comment by comment, 10 months later (blahaj.zone)318 points by SushiHippie 20 hours agohidepastfavorite259 comments segasaturn 18 hours ago404Media ran an expose on a new LLM product designed to mimmick real users having discussions on Reddit and plug your product in the comments, called \"Reply Guy\" (lol) https://www.404media.co/ai-is-poisoning-reddit-to-promote-pr... Google is failing, so users start putting \"Reddit\" on the ends of their search results. Where do we go when Reddit is no longer useful and contains the same AI generated dreck as all the Google search results? It shows how many single points of failure there are on the informational web. Pretty much the only informational resource on the web that's still unscathed is Wikipedia (thanks herculean-level efforts by its editors, mind you), but I wouldn't bank on it in the same way I wouldn't bank on Reddit. The \"information age\" might be coming to an end. reply stagger87 18 hours agoparentVery timely, I just came across this account doing this exact thing if you want to see it in action. https://www.reddit.com/user/Clear-Car862/ If you inspect their comment history, they are recommending several products in almost every reply. ContractsCounsel is one of the services they recommend. The formula they use for recommending is very similar for every post. Also interesting, one of their only actual posts mentions the phenomenon of using bots to advertise, I guess trying to throw people off their trail? reply wobfan 14 hours agorootparentTBF I just went into this EmploymentLaw sub, and when you look at the posts here (https://www.reddit.com/r/EmploymentLaw/comments/1boucq8/cali...), it just looks like there are bots talking to bots. I find it pretty funny tbh. reply user3939382 17 hours agoparentprev> the only informational resource on the web that's still unscathed is Wikipedia Wikipedia is great as long as the topic isn’t politically controversial. In those cases you get the US State Dept/corporate media-approved perspectives with all the censored perspectives available in the Talk page. reply adamomada 14 hours agorootparentDon’t forget Corporate PR I was kinda shocked to see the stats on active editors, laid out fairly well in this report by a source that was banned from Wikipedia by a ridiculously small group https://thegrayzone.com/2020/06/10/wikipedia-formally-censor... reply user3939382 8 hours agorootparentThat was a particularly egregious ban. I googled a random username of those that voted to ban them, and it belonged to someone that worked for a political think tank in DC that was opposed to their editorial stance on US foreign policy. reply racional 5 hours agorootparentprevExamples? reply q1w2 10 hours agorootparentprevEven political and historical events that you would not think are controversial have become biased. As an example, there are some Wikipedia editors that continually remove mentions of genocide from the opening paragraphs of Stalin's page, whereas they leave them there for Hitler. People really enjoy pushing their ideology in their spare time. I really don't understand it. reply barbariangrunge 18 hours agoparentprevTangental: 404 media is a fun agency, always enjoy their articles. Edit: This plug is not by a bot, but in the near future, nobody will ever trust a plug like this because they’ll suspect it is by a bot. Weird reply Aardwolf 18 hours agorootparentA bot could add \"Edit: ....\" to their reply just to make it seem like they're human and need to edit their responses reply XorNot 18 hours agorootparentIf you prompt it on how to do it, ChatGPT nails this. reply qingcharles 10 hours agorootparentprev\"This plug is not by a bot\" Exactly what a bot would say. reply MyFirstSass 18 hours agoparentprevSo are we headed towards some sort of identification like passport, drivers license etc to be able to post? Would you be able to create system where you somehow battle this spam but retain privacy in some way? Is there an alternative that retains max privacy in a world with a trillion bots spamming away? Ie. does any good systems exist where say you can get a HUMAN-ID, by some sort of verification, this then grants you access to create users, but no one can see what user are tied to what HUMAN-ID, but you can only create say 5 total, and if some are busted doing spam they are all revoked (bad orwellian idea) Or maybe some advanced federated trust chains where if lots of different people deem you a spammer you can get your users taken away, but no state power can revoke it in one move for example or see who you are. reply mike_hearn 16 hours agorootparentYes it's possible to do this. I wrote up a scheme for that years ago that I called \"proof of passport\". You can create anonymous identities tied to a hash of your epassport certificate using SGX enclaves and some careful protocol design. Needless to say, such ideas make some people very unhappy, although it can be done in a way that doesn't grant governments any new powers they don't already have. The most common objection is from Americans who make the same arguments they make about elections: some people don't have id of any kind and shouldn't be expected to get one. You can also of course buy identities from people who don't care, as a sibling comment says. But that's inevitable for any identity system where identities can be had cheaply. reply MyFirstSass 37 minutes agorootparentI think systems like yours could become extremely valuable sooner than people expect, as the alternative is effectively 100% noise. As others have mentioned, there are numerous ideological issues. However the alternative might be never encountering a real person online again. And if not applicable for the broader internet, then probably in smaller or even country-sized gated communities, where people will expect to interact with 'real humans. Also while IDs may be traded, the relatively small number of fake IDs compared to the infinite bots that can be created today is not even comparable. reply catbird 16 hours agorootparentprevEven if a passport was required, I think the same problems would appear. There are plenty of people with no interest in ever posting on Reddit. Some of them might be convinced to allow someone else to use a bot to post on their behalf if there is money to be made. reply q1w2 10 hours agorootparentNot to mention there are plenty of leaked/faked passports out there reply bryan_w 17 hours agorootparentprevI'll just put this out there because I don't know if I could ever implement it, I've had this idea that's essentially \"IP permitted from\" We would extend the whois database to contain an oauth url for a given IP block and then forums or other services that need to ensure a real human person is present (Like at registration or when combined with some other trust systems), would bounce the user over to the URL and it would require the user to login via U2F/passkeys/TOTP/etc. The thinking is that isps are the ones who know their customers are real, and as long as they can challenge them in a human interactive way, that should provide a strong signal that it's a real human. It's also a good way to protect against cookie stealing and could provide resistance from 'man in the browser\" attacks as the end user would become suspicious of all the isp challenge pages popping up if a machine was being used in spamming. It's not foolproof, there could be insiders working at the ISP, and this would require cooperation of all isps everywhere, but it would be a step in the right direction reply pavel_lishin 17 hours agorootparentprevFolks have suggested web-of-trust systems. I don't know how they would be implemented - for now, I guess this is already sort of a thing on any platform where users can \"repost\"/\"retweet\" things. reply tmaly 17 hours agorootparentprevWe will probably need dogs like they did in the Terminator movies at some point. reply Gibbon1 15 hours agorootparentprev> Is there an alternative that retains max privacy in a world with a trillion bots spamming away? Block and fine ISP's that host bots. Throw people in prison that run bots. reply q1w2 10 hours agorootparentNot possible as most are in Russia/China/Iran/Nigeria/etc... reply 6gvONxR4sf7o 18 hours agoparentprevHuh, that just put a new perspective on facebook's huge push for open LLMs. The less useful anonymous stuff becomes, the more useful content made by people you know IRL is. And that's facebook's/IG's original value proposition. reply barbariangrunge 13 hours agorootparentThen why is my feed 95% ads lately? reply kbenson 18 hours agoparentprev> The \"information age\" might be coming to an end. Or we weren't in it all the way quite yet, and the real information age is not defined only by the availability of information, but also by the massive quantity which drowns out simplistic search methodologies. Maybe this is the natural end state of information systems. First they gather useful information, then they gather all information, then information starts being generated that is tailored to the system for the purpose of being in the system and affecting how it's used, often negatively. I can think of lots of examples, from internal wikis to rumor mills at work. reply nzealand 13 hours agoparentprevReplyGuy was posted here six months back under a different name... https://news.ycombinator.com/item?id=38070502 reply orangevelcro 18 hours agoparentprevI think I've come across this bot on reddit before. I read a lot of skincare-related subreddits and people talk about their routine and 'holy grail' products...so that seems like an appealing place for this type of thing to infest. It wasn't quite obvious marketer-speak, but certain comments have just seemed like not quite the way a regular commenter would word things. I figured it was regular humans doing it though. Sigh... reply tsunamifury 18 hours agorootparentIt’s hard to tell because the small communities have their own newspeak which seems weird to outsiders. reply chaosharmonic 18 hours agoparentprev/r/LocalLlama has also had multiple[0][1] trending threads about dead Internet generators just within past week [0] https://reddit.com/r/LocalLLaMA/comments/1cc0fyy/i_made_a_li... [1] https://www.reddit.com/r/LocalLLaMA/comments/1cg39yq/deaddit... reply jprete 18 hours agoparentprevI downloaded Wikipedia months ago so I would have access to only-slightly-tainted information during the information winter. reply jtriangle 18 hours agorootparentI'm glad that I'm not the only one who keeps local backups of Wikipedia reply nimajneb 18 hours agoparentprevI've started putting reddit, servethehome, etc to my searches. Otherwise the results are lackluster in google or bing. reply ccppurcell 18 hours agorootparentAre you a bot? reply MiguelX413 18 hours agoparentprev> 404Media ran an expose... *exposé reply Tau_Cygna_V 3 hours agoparentprevWe live in crazy times reply dartos 18 hours agoparentprev> The \"information age\" might be coming to an end. This is a little melodramatic, no? Access to information, even without Wikipedia or Reddit, can still be found easily (compared to pre internet days) I personally don’t use google search anymore, but can still find links to public MIT textbooks (like SICP or Deep Learning) by searching on there. I’m sure google scholar, scihub, and arxiv will be around for a good while. I’m sure if Wikipedia falls, another encyclopedia would take its place, since so many primary sources are still discoverable if you know the terms to search for. Maybe with a paywall, maybe not. reply Phenomenit 18 hours agorootparentYeah the problem is that academia has the same issue with garbage papers. As long as information has some ad value, be it commercial or political it will fill all spaces with garbage to make a buck. reply ffsm8 18 hours agorootparentprevI don't think it's melodramatic. First time I've heard people making that claim was around 2020 in the context of corona iirc. I think they called it \"the age of misinformation\", and that has only become more relevant since then, so I think it was even more on point then they realized back then. reply Eisenstein 18 hours agoparentprevI absolutely love having access to so much information, but it really seems like most people just don't even care. The ability to access experts of all kinds for advice or just to fill curiosity has been a boon to me, and I like sharing what I know with people who are interested. But when I look around at the people I know -- some of them are incredibly smart (much smarter than I am) but instead of making a reddit post or going on a topical forum, they just watch a youtube video or try to attempt whatever it is poorly themselves or just don't care to know more about things. When I was a kid I wanted to learn electronics, so I got some books and parts at radio shack but certain things weren't obvious for someone who knows nothing, so I didn't know where the ground was supposed to go in a schematic diagram for instance. And the adults around me didn't know -- so I just had to figure it out. Now a kid can go on /r/askengineers and get an answer from an engineer in less than 20 minutes. But overall -- maybe the 'information age' has backfired for society in general. Those kids will figure out what they want to know regardless of how easy it is, and so many people just look for information that confirms what they already think then weaponize 'facts' so they don't have to budge. I'm really not sure -- it is so useful to me, but every time a nice place gets an influx of people it turns to shit, so I tend to lean misanthropic in the long term. reply krainboltgreene 18 hours agoparentprevNone of this content is AI generated, not sure why you're bringing that up? reply segasaturn 18 hours agorootparentI personally don't make much distinction between content that's generated by AI (LLMs), posted by bots, and manually forwarded by your grandma to your old AOL account. It's all the same spam, the new stuff is just more sophisticated. reply krainboltgreene 18 hours agorootparentI mean you're welcome do whatever you want, but I guess don't be surprised in the future when people are either confused by what you're saying or annoyed that you decided to talk about something else. reply schlauerfox 18 hours agorootparentprevYou don't define a bot as AI? reply nickthegreek 18 hours agorootparentWhy would someone define bot as AI? Bots have been around forever. A bot could use AI, but not most bots currently do not. reply moi2388 18 hours agorootparentBecause it is? AI is just artificial intelligence. It does not say this has to be done with ML (machine learning), LLMs, or even any statistical methods. reply nilamo 18 hours agorootparentprevA bot is just anything automated. Which has nothing to do with ai in any capacity, and only confuses the conversation. reply krainboltgreene 18 hours agorootparentprevWhat does this have to do with it not being generative AI? reply SlowRobotAhead 18 hours agoparentprev>the only informational resource on the web that's still unscathed is Wikipedia Ask a conservative about that opinion. Do it before you do exactly what I'm accusing you of and downvoting the bad man who said the thing against \"your side\". EDIT: Yea, thanks for the gaslighting but Wikipedia's organized effort to remove conservative editors to shift a left bias in the content is well documented. I'm the crazy one injecting politics into \"fair and unbiased wikipedia\" lol reply segasaturn 17 hours agorootparentWhy do you assume that I'm not a conservative? reply Eisenstein 17 hours agorootparentprevInjecting right/left politics into everything is so tired. I hope one day you realize how silly and artificial it is. Stop letting people who benefit from civil strife convince you that we always have to fight each other. reply EGreg 18 hours agoparentprevI have predicted this exact VERY predictable scenario this for years and got downvotes by AI enthusiasts who don’t want to even deal with any downsides of AI. Examples: https://news.ycombinator.com/item?id=35688266 We are racing towards the abyss orders of magnitude faster than with climate change or nuclear proliferation, and even the overwhelming majority AI experts coming out and saying there is at least 20% chance of a global catastrophe or even risk of extinction earns a mere shrug: https://arstechnica.com/information-technology/2023/05/opena... And CEOs: https://amp.cnn.com/cnn/2023/06/14/business/artificial-intel... And yet even the most mild, libertarian-friendly proposal to mitigate the harm is utterly rejected by AI fans who gang up on any criticism, as the future botswarms will: https://news.ycombinator.com/item?id=35808289 I said the entire internet will turn into a dark forest, including all forums like Reddit and even HN. Swarms of bots will cooperate to “gang up on” opponents and astroturf to shift public opinion. And the worst part will be when humans start to PREFER bots the way organizations already do (eg trading bots replaced humans on wall street). The AI people are building a dystopian future for us and won’t face ANY accountability or disincentives, but rather the opposite. I expect this post to be downvoted by AI people chafing at any criticism. (Like the opposite of web3 posts.) The replies, if any would even appear, will be predictably “well, it was all already possible with human efforts”, ignoring the massive difference in scale and cost to malicious actors (well, the replies would have been that if I didn’t call it out just now, because they always are, and hardly any actual substantive discussion of the extreme dangerous outcomes that are only starting to come about in very early stages). reply LargeWu 18 hours agorootparentCan anybody explain, specifically, what that 20% risk looks like? The most specific I ever see is \"an adversarial AI will become sentient and wipe out humanity\". It sounds like as much snake oil as the people pushing AI itself. reply EGreg 17 hours agorootparentIt doesnt need to become sentient to cause great disruption. 1. Bot swarms will simply disrupt everything about the Internet as we know it. Most people ALREADY barely scritinize chats and articles, so bots can EASILY produce those at scale to push opinion in any direction, or just sell shyt 2. Botswarms will outplay adversarrial games vs humans for karma / reputation points, as well as launch coordinated attacks on opponents organically trying to stop whatever viewpoint is being gradually pushed or sold, until they give up or are totally reputationally discredited 3. People start to PREFER bots to humans, just as they PREFER google maps to asking for directions etc. At that point most humans would be surrounded by 100-1000 bots and have no way of affecting other humans. 4. Physical world, cameras capturing all the info and cross correlating where you are. Maybe slaughterbots are mass-produced. Who knows. When the costs come down and scale goes up, it doesnt matter about AGI, the entire society is disrupted permanently. And that’s what AI is on track to so. It’s far easier to continually create a mess than to continually clean it up. reply LargeWu 15 hours agorootparentYou see, the jump from \"Bots take over all the karma points on social media sites\" to \"Slaughterbots\" is a pretty wide chasm I'm having trouble getting over mentally. This is why I can't take such predictions seriously. reply EGreg 15 hours agorootparentOkay. So remove point 4 and it’s still very dystopian… Not to mention point 4 contains things that have been in place already for over a decade. It’s not even a prediction: https://magarshak.com/blog/?p=169 But sure, take the one tiny thing you can caricature and ignore the rest. That’s one step up from strawman, I guess reply LargeWu 14 hours agorootparentYour original post didn't just posit a \"dystopian\" future. \"...even the overwhelming majority AI experts coming out and saying there is at least 20% chance of a global catastrophe or even risk of extinction\". You're the one bringing up the prospect of extinction. Extinction! And a 20% chance at that. So no, I don't think it's unreasonable to ask about how we arrive at that outcome. Because there's a massive distinction between \"dystopian\" and \"extinction\". reply EGreg 13 hours agorootparentNo I’m not “the one” bringing it up, the experts and the people asking them and publishing their words are, and you seize on the most hard-to-substantiate claims first, and ignore the rest. Great debate technique for realtime debates, but this is HN and I can reply to focus the point. My main concern for the next 5 years is that the Internet is going to become a dark forest where you can’t trust anything, it will be impossible to discern fake stuff, and even if it was, the botswarms will gang up to take care of any dissent. That alone is extremely plausible and scary. Every single institution we have relies on the inefficiency of an attacker. Let alone swarms of attackers that any member of the institution can run instead of themselves, and can be subverted to bring about ANY goal, by who knows behind the scenes. reply jprete 18 hours agorootparentprevI've made the same prediction. It was blatantly obvious to me what would happen as soon as I saw GPT 3.5 producing decent quality responses. I had hoped the finger problem of image generators would last longer, but there are a lot of people with absolutely no foresight on the potential downsides of technology. SORA and other video generators are absolute madness. reply ai_what 19 hours agoprevThis is why I felt surprised to read this article about a week ago: https://sherwood.news/tech/reddit-is-quietly-changing-the-wa... It states: > \"The most popular posts on Reddit have switched from reposted content from “karma farmers,” or engagement hackers, to nearly entirely original content from less popular Reddit users. Original content from smaller communities is now outperforming recycled evergreen content by a tremendous margin across the platform. As of October, none of the top five posts of the month on r/all were original. By March of this year, four out of five of these posts were original. \" In my experience this hasn't been the case at all. I've also noticed that if you click the profile of people that end up on the front page, they are often new (or suddenly active) accounts with a certain pattern: 1) Make 3-4 posts not related to the content they want to promote, to \"warm up\" the account. I'm guessing there's a soft-ban on new accounts here. 2) Post the actual content/narrative they want to promote. 3) Suddenly, this post gets 10k upvotes and reaches the frontpage. reply causal 19 hours agoparentSeems plausible that LLMs have made it much easier to fool Reddit's own metrics by generating \"original\" content and comments. reply debacle 18 hours agorootparentI haven't seen a massive correlation in LLM popularity and reddit bots. A good old markov chain can simulate the average reddit thread, and the botting issue has been prevalent for quite a long time. reply astolarz 14 hours agorootparentBots used to just take other popular comments and repost them either in whole copies of threads, as in the example here, or taking a top comment in a new thread and reposting it elsewhere in the same thread. Now they're using LLMs to rephrase comments to try to avoid detection (though they often come across sounding a bit off so they're sometimes easy to spot). reply dartos 18 hours agorootparentprevMaybe fun little bike shed: Are LLMs not just fancy Markov chains? They are next token predictors which have some hidden internal state that output probability distributions which lead to further states. reply gield 16 hours agorootparentprev>A good old markov chain can simulate the average reddit thread Someone did this on Reddit 9 years ago. It was remarkably good. https://old.reddit.com/r/SubredditSimulator/comments/3g9ioz/ reply causal 18 hours agorootparentprevI just don't know how I'd be sure a comment isn't written by an LLM. reply chipdart 18 hours agoparentprev> In my experience this hasn't been the case at all. I've also noticed that if you click the profile of people that end up on the front page, they are often new (or suddenly active) accounts with a certain pattern: You make a great point. It's highly unlikely that a newly-created account just so happens to post content that's engaging enough to be featured in Reddit's frontpage. It's far more likely that these \"less popular Reddit users\" are sock puppet accounts used to post special-purpose content which is then subjected to industrial-grade boosting to force it onto everyone's first page. Changes of this magnitude are practically impossible without the backing of either Reddit itself or marketing companies intending to control the flow of information. reply q1w2 9 hours agorootparentExactly - and it's important to make a distinction between the bots that post comments and posts, and the much larger and more influential bot farms that manipulate content (both promoting and demoting). Personally, I'm fairly certain it's a difficult cat-and-mouse game, but there's no question that some very popular mods also use bot farms to promote the content they want on the subs they mod. reply qingcharles 9 hours agoparentprevThere are thousands of nicely aged Reddit accounts for sale online. A lot of subs have low-karma blocks for new accounts, so spammers have to buy aged accounts to be able to post in a lot of places. reply unethical_ban 5 hours agoparentprevI've noticed something like that. Something I see a lot is a years old account with no account history prior to the past few days, spamming unoriginal content. Check /r/interestingasfuck, /r/satisfyingasfuck, /r/natureisfuckingcute, hellsomememes, and a lot of other subs. Qualities of subs particularly susceptible to such spam: * Subs that don't require OC (not news, not a hobby sub) * Subs that don't demand proof of identity (/r/selfies, /r/glowups) So, counter to the quote you cited, I still see a lot of karma farmers on reddit, and like you say, they'll often do what you and I describe and then turn into an Onlyfans account, or something like that. reddit is just such a goddamned cesspool, and I am so curious as to what nefarious actors are doing on it and why they're doing it. Different topic, but I'm ranting: The political echo chambers are wild. Places like BadHasbara, Palestine, IsraelExposed, Conservative, Libertarian, antiwork, WorkersStrikeBack, Anticonsumption, all have wild agendas that will instaban anyone who challenges the dreck that gets posted there. reply throwreplyguy 19 hours agoparentprevI wish it was that obvious. I think it's like criminals - the obvious ones get caught, and people go \"criminals are pretty dumb\", but there are plenty of smart ones too. I posted this example earlier today https://news.ycombinator.com/item?id=40208741 of a reddit account shilling Sourcegraph. They flat-out deny that this's a bot, but it's clear to Me. Can't trust anything or anyone any more. Pretty sad. reply jdorfman 18 hours agorootparentHi, head of community at Sourcegraph here. We don't use bots. u/Prolacticus is a Pro user, we do not pay him/her, and they are not sponsored. In fact, I offered them swag a month ago, and they refused. We do give free/sponsored accounts to our Discord mods, open source maintainers, and folks who write guest blog posts for us. u/Prolacticus is not one of those accounts. reply throwreplyguy 18 hours agorootparentmaybe you could answer the questions I asked your your CEO here? https://news.ycombinator.com/item?id=40208741 I fully believe that you aren't paying him directly to do this, but I don't believe that any human would shill so hard (and always mentioning the price and the same gist of 'it's fantastic' etc). Any chance it's a replyguy or similar test, either by someone else in your org without your knowledge or just by the creator themselves as I guess they need to do some 'live testing' before charging real 'customers'. reply KomoD 18 hours agorootparentThey already answered that when he said \"he is not affiliated with Sourcegraph\" reply sqs 13 hours agorootparentConfirmed. Not affiliated in any way. reply KomoD 18 hours agorootparentprev> They flat-out deny that this's a bot, but it's clear to Me. Doesn't look like a bot at all, possible shill sure but they're a person. reply s1artibartfast 18 hours agorootparentIt seems to me that the concept of shill is slowly eating the concept of enthusiast or fanboy in the public perception. They are similar and hard to discern from one another. I'm not sure if one is more trustworthy than the other. reply bluetidepro 19 hours agoprevThe key to make Reddit still an amazing resource is finding niche subreddits that fit your interests. The very broad subreddits like funny, news, pics, politics (where this is likely from), etc. etc. are all just full of spam, and trash like this. They have been for YEARS now. However, say you dive into a subreddit for a specific video game you like, it's going to be full of relevant content with very little spam. Or if anything, the type of spam is just reposting content which still may even be new for you. Reddit is not dying, just the giant stadium size subreddits are trash. I visit video game subreddits for games I actively play almost daily and they are all incredibly useful and interesting. reply Retr0id 19 hours agoparentI know a couple of people who moderate niche-but-active subreddits, and they're still inundated with spam. The only real difference is that they can stay on top of it, for the most part. So yeah, the niche subreddits are still alive, but I think they're struggling. One of them closed to non-approved submitters, and now they get AI-generated requests for account approval. reply btreecat 18 hours agorootparentThis is exactly why I gave up moderation of a sub that was around 100k members. It just was so much spam and noise and poor tooling to deal with it all. reply lelanthran 19 hours agoparentprev> Reddit is not dying, just the giant stadium size subreddits are trash. From a user's PoV, this is at worst a good thing and at best completely irrelevant. I never go to the large subreddits anyway (political, news, pics, etc), so whether or not they are around, or around and filled with LLM trash is completely irrelevant to me. OTOH, the subreddits I do visit are alive and well and show no signs of being less valuable to me than before. reply rospaya 19 hours agoparentprevWhy would I dedicate my time to a subreddit that might vanish overnight or might get taken over by the admins? Way back, subreddits were independent forums, and now they're one protest away from being kidnapped. reply bluetidepro 19 hours agorootparentI have never seen a subreddit for a game/hobby that I've subscribed to vanish overnight. In all my 13+ YEARS on reddit. EDIT: \"Vanish\" forever. Yes, there have been protests and black outs, but everything I have ever subscribed to did come back. reply MOARDONGZPLZ 18 hours agorootparentA bunch of subreddit admins took their ball and went home because they didn’t agree with site changes. This is practically the same thing. There was a whole website to track it. https://blackout.photon-reddit.com/ reply bluetidepro 18 hours agorootparentRight, but they pretty much all came back. I'm not saying some don't do the blackout for protests, but none I have ever subscribed to have gone away 100% forever. reply MOARDONGZPLZ 18 hours agorootparentThat’s different than your initial statement that none have vanished overnight. Hundreds or thousands vanished overnight. Many returned, but it was very unclear whether they ever would. Thank goodness the Reddit admins stepped in and basically forced lots of them to come back. Even major ones like r/video are still gone. In fact, the biggest losers were the users of the small, niche subreddits that the admins couldn’t strongarm into returning. Your statements are really baffling to me. reply bonestamp2 17 hours agorootparentprevThey all came back because the admins allowed anyone to volunteer to overtake them. So, either the existing mods changed their minds to remain at the wheel of a subject they're passionate about, or they were replaced with new mods. reply bluetidepro 18 hours agorootparentprevThat's fair. That was just poor phrasing on my part. I meant \"forever\" vanish. reply bonestamp2 17 hours agorootparentprevI moderated one subreddit that was loved by users. It wasn't about anything that is illegal or controversial. The controversy came not from the content, but from how we were running the community -- we were breaking a reddit rule that was in place to prevent spam. I understand why they had that rule and I agree that it probably makes sense for most subreddits, but like any blanket rule: it doesn't perfectly fit every scenario. So, we had our own method of preventing spam and it worked. The admins didn't care that we had a thriving community, no spam, and they banned the subreddit. They also blocked anyone from ever creating a replacement with the same name (still to this day). So, it definitely does happen. I'm keeping it vague here to maintain my anonymity. Side note, reddit dropped that rule about 2 years ago so I suppose we could start one up again, but I've lost interest in that topic. reply dpkirchner 17 hours agorootparentprevForums come, forums go, there are no guarantees any site will stay up indefinitely. IMO that fact alone shouldn't stop you from participating. reply nomilk 19 hours agoparentprevI know this is (almost hopelessly) subjective, but can you (or others) recommend a few? (I'm a reddit newb and my feed resembles a mainstream news website). reply ramcle 18 hours agorootparentCheck out DepthHub: https://www.reddit.com/user/Lapper/m/depthhub/ It's a \"multireddit\", an amalgamation of multiple subreddits, a feature that Reddit as a company no longer seems to care about. From the description: \"DepthHub gathers the best in-depth submissions and discussion on Reddit. You can use the DepthHub as an alternative front page with high quality discussion and inquiry. \" I used to visit it pretty much every day, back when third-party apps were allowed. reply nineplay 18 hours agorootparentprev/r/AskHistorians is a national treasure. Don't trust any 'historical' information from any other subreddit. reply psunavy03 17 hours agorootparentThat sub is right on the borderline of \"good moderation\" and \"overpowered mods huffing their own farts.\" reply bun_terminator 16 hours agorootparentprevAnd it's my goto example of censorship of comical proportions. A space that heavily \"moderated\" should never be trusted reply karmakurtisaani 15 hours agorootparentHard disagree. Strict and heavy moderation is the only way to keep any discussion informative. It requires competent moderators, and there will be bad calls by the mods, but overall the alternatives are far worse. The strictest moderation there is can be found in high quality academic publishing. You are allowed to publish only if what you say has high value, and is said in the proper way. Can't get your Flat Earth Quarterly published in Nature, and we're all better for it. reply psunavy03 16 hours agorootparentprevTheir intention is good trying to keep out blatant spam and misinformation. Being confidently incorrect is basically a running joke on the rest of Reddit. But they could be about 75 percent as draconian as they are and still be fine. That said, I'd be careful saying the sub can't be \"trusted.\" It's annoying but when you do get an answer it's generally sourced and credible. As opposed to the unadulterated bullshit I've seen on the rest of the site regarding basically anything I have professional experience and/or formal training in. reply the_snooze 19 hours agorootparentprevIf you're a college sports fan, /r/cfb, /r/collegebasketball, and /r/collegebaseball are excellent. The first two are large subreddits, but their mods absolutely stay on top of things. Not just clearing out spam and off-topic discussion, but also posting \"official\" game threads and post-game summaries so you don't have dozens of \"Auburn defeats Alabama 34-28\" posts clogging up the front page. reply browningstreet 19 hours agorootparentprevAlso r/AskHistorians EDIT: Also, the way I make Reddit useful to me is I change the default sorting for subreddits from Hot to Top > Monthly, and also disable content recommendations. It'll shows less content and Reddit will sometimes say \"No more content right now\", which is great. reply 65 18 hours agorootparentprevI like /r/ExperiencedDevs, it's usually pretty good. reply nunez 17 hours agorootparentIt used to be better before the folks from /r/cscareerquestions overwhelmed it reply SlowRobotAhead 18 hours agorootparentprevWhat? You don't like getting strongly opinionated advice from kids that haven't even gotten their first internship yet? I swear some of the things I've been downvoted for in r/embedded is just out of control nuts. reply bluetidepro 19 hours agorootparentprevI don't use reddit for any real news, I just use it for hobbies/interests. Using reddit for news is a terrible idea for all the content farming and spam trash that this post is talking about. That would be like getting your news from just random people shouting on the side of the street. So the hobbies/games I'm currently playing are subreddits I subscribe to and actively browse. Games like Anno 1800, Cities Skylines, and Manor Lords. All 3 have very active and passionate community members that are constantly posting high quality content around inspiration for builds, tips and tricks, community update news, patch discussions, mods, etc. etc. If you want more silly subreddits not related to hobbies, it depends on what your humor is. Here is a wide range of options: r/AnimalsBeingBros, r/ActLikeYouBelong, r/softwaregore, r/raspberry_pi, r/lockpicking, r/FellowKids, r/dogswithjobs, r/BirdsArentReal, r/BreadStapledToTrees - subreddits that are related around hobbies or niche humor will make you love reddit. Again, tl;dr, reddit is not the place for real life news. If you don't use it for that, you'll find yourself enjoying the website a ton more. reply bonestamp2 17 hours agorootparentprevWhat things are you passionate about or at least interested in? There is likely a subreddit for each one. reply ehaughee 19 hours agorootparentprevThis will definitely be subjective and I highly recommend using the subreddit search to find topics you enjoy, BUT here are a few of mine: r/billiards r/boots r/frugalmalefashion (arguably small nowadays) r/hiphopheads r/mtb r/self hosted r/sffpc reply bonestamp2 17 hours agorootparentFor the reddit and fashion newbs, I'll add r/malefashionadvice too... I mean, even if you never buy any of the expensive stuff on there, it's good just to browse the outfits people put together to get ideas about the types of things you can buy, colors, materials, accessories and how they can go together. reply lelanthran 19 hours agorootparentprevI visit /r/programming, /r/gamedev, /r/projectcar and a few others (woodworking, home building, short scifi stories) reply spywaregorilla 18 hours agorootparentprevDon't go to reddit for the sake of going to reddit. If you don't have a specific content area that you want to engage with, just getting involved in the reddit universe is going to be a bad experience. reply rvba 19 hours agorootparentprevhttps://www.reddit.com/r/TrueReddit/ https://www.reddit.com/r/longreads reply theChaparral 19 hours agoparentprevI really agree. I think the key to your key is you have to actively seek out media that interests you. Don't just be a passive consumer of it. reply asicsp 19 hours agoparentprevI'm part of a few book subreddits and I definitely enjoy the reviews and discussions there. My TBR list is in thousands thanks to them... reply avgDev 18 hours agoparentprevI moderate a niche subreddit, we were focused on information backed by science. The mod team is doctors, chemists, and devs. However, as we are growing we are noticing a lot of new people are spreading myths and since our average user is becoming dumber wrong opinions often end up at the top. This is what made me realize that reddit is actually an awful platform for information, while there is a lot of good stuff there the average user is NOT educated, and the average users outnumber the individuals educated in a particular subject. I have been downvoted to hell many times even though my information was backed by multiple studies and factual. reply floren 15 hours agoparentprevThere's still just so much fucking garbage though. Yesterday I was wondering if I ought to switch to a flipphone so my son doesn't see me playing on my smartphone so much, so I headed over to /r/dumbphones to try and get a feel for what's currently a good option. I figured I'd look through the top posts of the last month to find good discussion. Instead, the top post is some dipshit meme, and all but 1 or 2 of the first 25 posts are \"my EDC as an 18/f/cali\", just pictures of the contents of their pockets! Because there's no way to have \"the EDC thread\" or the \"post pics of your phone\" thread, this low-effort shit fills the subreddit. reply cableshaft 18 hours agoparentprevr/boardgames is pretty good, if you're into board games. reply bigstrat2003 18 hours agorootparent/r/boardgames would be good, if they didn't go on rants about politics every so often. I couldn't take it any more after a while. I'm trying to read about board games to enjoy myself, not to be reminded of life's problems. reply nolok 19 hours agoparentprevI mean, it's pretty much where half of \"smaller forums\" went. The other half being on discord. reply GolfPopper 19 hours agorootparentOr still being quietly run somewhere on BBCode. reply karma_pharmer 18 hours agorootparentSsssshhhh!!!!!! Those are the best ones; stop telling everybody about it or they'll get flooded with losers from that orange site I keep hearing about. reply GolfPopper 6 hours agorootparentYou'll note I'm not saying which ones or where they are. ;-) reply RicoElectrico 19 hours agorootparentprevAnd the third half on Facebook groups. reply ziddoap 19 hours agorootparentAnd the fourth half still on their own domains, on some old vBulletin board or something (thinking of car forums mainly, like NASIOC). reply bingleboy 19 hours agorootparentprevThat's why some people spend their entire lives on non-english speaking forums. reply sixothree 18 hours agorootparentprevAs much as I dislike reddit, Facebook groups are awful to use. The interface is such a huge turnoff. reply exabrial 19 hours agoprevI've noticed that the entire board is full of discussion that encourages further user over engagement with \"them\" (bots) by (among many other things): * Encouraging authoritarian and know it all attitudes, essentially fake experts * Taking the Moralistic high road * Operational FOMO: Covering topics that \"Big XYZ\" doesnt want you to know leading to users to come back over and over for the inside scoop The entire thing is designed to cement user's attention. It's fascinating. reply shmatt 19 hours agoparentIm long on RDDT because it reminds me so much of Facebook when they started pushing more negative content because it got higher interaction. When a sad face reaction was \"worth\" 5x more than a Like to the algorithm The algorithm now suggests posts, popular ones with lots of fighting in the comments, from subs you dont subscribe to. Essentially causing organic brigading which is against Reddit rules reply gruez 19 hours agoparentprev>I've noticed that the entire board What's the subreddit? It's not in the screenshot but I'm guessing r politics? reply kibwen 19 hours agorootparentHere's the thread in question (note that the screenshot in the OP isn't recent, the thread is from last October): https://old.reddit.com/r/LateStageCapitalism/comments/16zw82... reply SlowRobotAhead 18 hours agorootparentThere is almost no difference in r/politics and the other \"formerly default\" (but still default by means of network effects) subs. It's all the same lunatic that has no idea they're on the other side of the horseshoe as \"the bad people\". reply kkukshtel 19 hours agoparentprevThis is just reddit reply dotty- 19 hours agoprevThis has been happening for years. My theory is the actors running the bots are instructing their bots to use old popular threads as a blueprint to get a bunch of upvotes across all of their accounts at once. The idea being that clearly Reddit users liked the original posts and comments in the past, so the users will upvote it again. Then they sell the accounts to bad actors who are interested in purchasing accounts with real looking post histories. reply nolok 19 hours agoparentThey don't sell their account to bad actors much anymore, instead they sell services. Want this product or that news story or this ... To have lots of comments and upvote from tens of account. If you search a little you can easily find those shops, they sell for every social media out there and you pay per \"thousands of likes\" or stuff like that. They used to be based on super low paid human, then it was bot train the account up then humans use it when it's cooked, and I guess we're now entering the bot from top to bottom era. reply thrtythreeforty 18 hours agorootparentIf I were Reddit I'd be running some sort of counter-offensive, throwing a few hundred dollars at those services and flagging accounts which upvote my poison pill as sockpuppets. reply SlowRobotAhead 18 hours agorootparentI am confused why you think this is a problem reddit wants to solve. They're in on it homie. Now there is a stock price to protect. They literally are obligated to keep the bots running because it directly effects the stock price. It's new stupid world. reply dmoy 19 hours agoparentprevYup this is a very old strategy. Years back when I was helping mod a very large (10/15m+) sub, the head mod was running a pipeline in the background to help detect this exact thing. reply leetrout 19 hours agoprevReddit has steadily declined over the past few years and it seems to have sped up since pissing off the mod community last year. reply CSMastermind 19 hours agoparentFor discussing entertainment like specific video games, movies, book series, TV shows, sports teams, etc. there simply isn't a good alternative to Reddit. I hate the site and have limited the time I spend on it but there aren't good alternatives for certain communities. reply akuchling 19 hours agorootparentFor most entertainment topics, the-avocado.org has some lively discussion (based on Disqus). reply naravara 19 hours agorootparentI’m amazed that nobody has eaten Disqus lunch yet by just making “Disqus, but stable.” reply internetter 18 hours agorootparentOpenWeb did for all the big publishers: https://www.openweb.com/ reply rvba 19 hours agorootparentprevIMDB forums used to be a community for film and TV but amazon killed it in its infinite wisdom of lowest common denominator reply ravenstine 19 hours agorootparentI miss those forums! They were simple and fun, and each board being scoped to a specific movie/show kept all the conversations very focused. Moviechat.org seems to be a spiritual successor, and I'm pretty sure that a lot of its initial content is archived IMDB forum posts, but it's not nearly as active. reply jjcon 19 hours agorootparentprevI find that discord has far better communities than Reddit ever did reply layer8 18 hours agorootparentThe issue with Discord, besides UI gripes and excessive chattiness, is that it’s not discoverable. reply ewoijfawoifj 18 hours agorootparentprevI can't find discord comments on Google. reply slothtrop 18 hours agorootparentprevDiscord is like reinventing IRC with more noise. It's not a substitute for forums. reply drivers99 18 hours agorootparentYou can have forums in discord now as well, not just chat rooms. reply anononaut 18 hours agorootparentCan they be accessed and indexed without being invited to the channel? reply SlimyHog 19 hours agoparentprevI deleted my account once they killed 3rd party apps and whenever I visit I've noticed that the quality of comments is WAY worse than I remember. reply Zambyte 19 hours agorootparentFunnily enough I didn't even use any third party apps at the time (just the old web client) but that whole fiasco was enough for me to finally curb my addiction. I also noticed the quality of comments seeming very bad whenever I go to something on Reddit (once every few months at this point). I don't think the quality has actually gotten much worse recently though; I think it was just so normal to me when I was using it. I think it has been a pretty slow decline over the last decade or so, to the point where it is now. reply al_borland 19 hours agorootparentThe web client has become less and less useful as they try and force users into the app. reply SlowRobotAhead 18 hours agorootparentIt's getting there, but the day that old.reddit doesn't work is the day I never go back even for small community stuff. reply drivers99 15 hours agorootparentIt's barely limping along. URLs with underscores get broken (with an extra backslash) when posted from certain apps but only for old.reddit users. There's some kind of inline images that just says \"image\" that you have to click on to see. There are some kind of emojis or something that only show up as digits between colons. People talk about profile pictures that I don't see. Sometimes the zooming keeps zooming back out when you're trying to zoom in, and if you follow a link and go back, it will automatically scroll you somewhere else on the page besides where you left off. reply SkyPuncher 18 hours agorootparentprevIt’s absolutely terrible on the big subs now. Smaller subs seem to be okay, but it seems a lot of the content has gone elsewhere. reply criddell 19 hours agoparentprevPast few years? I've been reading about the decline of Reddit since Condé Nast Publications bought it in 2006. reply gipp 19 hours agorootparentOne of my higher-voted comments on Reddit was in response to some thread bemoaning the decline of the site towards lowest-common-denominator meme content and recycled jokes. My comment was pointing out that people had been saying that for years, with multiple links to past, nearly identical threads. I made that comment in 2012. reply lelanthran 19 hours agoparentprev> Reddit has steadily declined over the past few years and it seems to have sped up since pissing off the mod community last year. Maybe depends on the subs you read, because I have not noticed an appreciable difference before and after the \"going dark\" thing. reply ilikehurdles 19 hours agoparentprevKilling the API access made detecting and tracking spam bots impossible. There was a whole subreddit called thesefuckingaccounts where the latest tactics in spam and karma farming were being tracked. reply ravenstine 19 hours agoparentprevReddit was getting shitty way before the past few years. Honestly, I don't think pissing off the mods has made that big of a difference. Yes, some subs shut down, but otherwise I haven't seen a meaningful cultural change in Reddit as a result of that whole issue. In fact, one of the reasons I believe Reddit is so crappy is specifically that they bow to mods in many ways. Many communities are run by, frankly, psychos who are way too happy with the power they have over their little ponds. I've lost count of how many times my posts have either been removed or my user banned despite having followed the explicit rules of a sub. Communities vary, but I've found this \"you should have read our minds\" attitude to be commonplace. Yes, you can spin off your own sub, but then you're taking a gamble as to whether the original community is going to come after you; they seem to win at least half the time by convincing Reddit that your [relatively pissant] community is toxic in some way. Good luck if your community is blamed for creating \"drama\" even when there's a lack of brigading. reply tivert 18 hours agorootparent> I've lost count of how many times my posts have either been removed or my user banned despite having followed the explicit rules of a sub. Communities vary, but I've found this \"you should have read our minds\" attitude to be commonplace. I'm not a mod or anything, but I think there are actually a lot of legitimate reasons for a mod to have that attitude. It's unreasonable to expect a volunteer to create a comprehensive rules of behavior and enforce it in a lawyerly way and keep a community on track and not burn out. I've seen more than a few online communities have serious problems with certain users that would have been best handled with a \"we're sick of dealing with you, enjoy your ban.\" Then, there's also the fact that if a community is too popular, a mod can only scale by being more brusque. reply ravenstine 18 hours agorootparentYeah, I'm not really saying that mods shouldn't have discretion or flexibility, but a community is not healthy when its mods decide to remove any posts/comments that contain the word \"frank\" because they don't like a guy named Frank. Yes, that is a real world example I've encountered. And if I get banned because I can't read the minds of the mods, then I welcome said ban. I'm not on Reddit to play childish games or to join cults. reply Workaccount2 19 hours agoparentprevReddit has enshitified, and I would also guess that their usage numbers are way up. The goal is to compete with tiktok, instagram, youtube for average everyday people. From our hackernews perspective, the website sucks now. From the average user perspective, reddit is another fun app full of dopamine hits. reply idiotsecant 19 hours agorootparentI know it's unfashionable in HN circles to admit it but there is still tons of high quality niche content (technical and otherwise) on Reddit that can't be found anywhere else. reply isoprophlex 19 hours agoprevI'm not sure what pisses me off more, the confirmation that the internet is indeed full of undead activity, or the sheer laziness of this specific example. My god people, it's the age of LLMs, at least mix up your astroturfing a little! reply swatcoder 19 hours agoparentFor the purposes of just generating activity in a subreddit and building karma history for bot accounts, replaying proven content verbatim is more reliable and cost-effective. LLM paraphrasing is likely to either drift away from \"what worked\" towards unknown territory or introduce tics that don't really cohere quite right. We can confidently assume it's being used as part of other strategies, but it's not actually optimal here. The real issue is that Reddit (and Facebook, Youtube, Amazon, Tinder, etc) have very little incentive to aggressively police against this until and unless examples like this make big news and start to harm their general reputation. In the meantime, it just makes their sites look more alive and popular. It's good for them right up until they it becomes a defining association with their brand. This lazy approach works for the bots and the sites, so there's no reason to overcomplicate or take on bigger risks. reply nolok 19 hours agoparentprevIt's like internet phishing email and the like. It almost bothers you more that they put so little effort into it, and that if they do that it probably because it's not worth it to do more. reply ToucanLoucan 19 hours agoparentprevWhen the pigs are already happily gorging on the slop, why would you suggest a four course dinner instead? reply adamgordonbell 19 hours agoprevI had a post do well on /r/programming and then months later it reappeared and someone was responding with my words. \"Author here, what I meant by X was Xa and not Xb\" etc. It was very confusing, because they were responding with my words to a bot saying something I had previously responded to. Strange times. reply tensor 19 hours agoprevA lot of comments here about AI, but if you actually looked at the source material you'd see that what is shown is a verbatim copy of a thread of user comments using new accounts. This is not an example of an LLM generating AI content, it's a blatant copy of human content with attribution removed. I guess their license allows them to do this, but wow. reply gruez 19 hours agoparent>I guess their license allows them to do this, but wow. Reddit's terms says: >You retain any ownership rights you have in Your Content, but you grant Reddit the following license to use that Content: [...] Users only grant reddit to repost their comment, not anyone else. Are you claiming that reddit themselves are doing the reposting? reply tensor 18 hours agorootparentI don't know who is doing the reposting, but the only party that seems to benefit from that sort of thing would be reddit. Why would a 3rd party do that? reply gruez 18 hours agorootparentAs other people mentioned above, karma farming for bot accounts. Reddit probably benefits as well, just like any other social network doesn't want to clamp down too hard on bot activity. reply charlie0 19 hours agoprevI see the dead internet theory is proving more than just a theory. reply pixl97 18 hours agoparentDead internet prophecy. reply perks_12 19 hours agoprevWhat did people expect? The SEO smelled the \"just add reddit\" trend years ago and started to publish their bs directly on reddit. reply linearrust 19 hours agoprevIt's been like that for a while now. News and political subs are the absolute worst. Those subs and mods coordinate with news companies and political parties. Sports, movies, music and other commercial subs are just advertisment platforms tied to companies. Reddit was a great idea. Then it got successful and greedy. reply ta988 19 hours agoprevRemember that elections are coming in the US, and it is likely that the new Cambridge Analytica-like are ramping up operations. Not sure that's the case here, but I saw an increase of politically hinted posts recently from obvious fake accounts. reply costco 19 hours agoprevReddit has by far the worst antibot protections of all the major social media sites. For starters you can register with an account using a mobile API endpoint with no email or captcha at all and the only reason this isn't widely used is because they have a request signing scheme that deters the lowest effort botters. As long as you're not posting newly registered domains from an IP address labelled as a Tor exit you probably won't be banned. If you search for terms like \"payday loans\" or \"sbobet\" and look at the account history of the posters you will see the most robotic stuff. reply arkh 19 hours agoprevI feel those LLM augmented bots will usher the return of small community run forums. Because those let you require people to be humans, for example by being invite only. reply rchaud 19 hours agoparentSmall community forums (low '000s or even '00s) are bot-resistant because there isn't much value in targeting so few people. Kinda like the old adage of buying a Mac because virus/malware makers got the biggest bang for their buck targeting Windows machines. I'm on a sports team messageboard that still runs on a mid-00s phpBB backend. There are no bots because there is nothing to propagandize about on such a small, topically focused community. reply DexesTTP 19 hours agoparentprevI don't think it's likely. The real migration has been and will continue to be towards Discord servers and similar \"smallish\" live chat-based communities on centralized services. The age of small self-hosted forums is unfortunately behind us, and I don't see them reviving any time soon. reply rchaud 19 hours agorootparentThe closed-source Discord that has bots built into the platform, that's the solution? I wish more people would try Discourse, which is threaded like a real messageboard without all the automation bells and whistles. reply arkh 19 hours agorootparentprevThose Discord servers, even if hosted by centralized company are community run forums. You can set \"your\" server to be invite only so you can filter who gets in. The underlying software is not really important, it's what you can do with it. reply 6510 18 hours agorootparentprevForums work just fine. You get to have your own community with your own rules on your own website with your own advertisement. If it helps you can also make your own tools. For local communities they are also amazingly fast. If HN was a sub reddit I would never visit it. reply janetmissed 18 hours agoparentprevAs other commenters have already said, Discord has more or less replaced the traditional forum. I'd argue that this push towards small Discord communities has been happening for years now, since places like reddit, twitter, or even instagram are unsuitable/hostile to forming connections. The primary focus on those platforms is content consumption, and any sense of community (at least on reddit) completely breaks down after a sub becomes >10k. My theory is that LLM's won't drastically change people's experience with reddit/twitter, because those platforms already make communicating with humans on them as meaningless and impersonal as talking to an LLM. Also younger people find forums archaic and weird, to the extent that most people my age (early 20's) that I've talked to about this prefer imageboards over forums. As much as I'd love for forums to make a comeback, younger people are the ones who determine the next shape culture will take and there is very little chance small forums will grow. It's such a shame too, it's so difficult to find good Discord servers and so much technical knowledge is unindexable and will most likely be lost forever once Discord stops burning money for growth. reply krainboltgreene 18 hours agoparentprevWhat does this have to do with the post? These aren't generated AI comments. reply bithaze 18 hours agorootparentThere have also been (possibly AI-generated) comments that are simply rephrasing prior comments or even comments on the same post and piggybacking onto an already upvoted comment. It's not as common as the straight copy and paste comments but it is obvious by the same limited user history and rephrased comments that don't quite make sense in context. reply wcchandler 19 hours agoprevReddit doesn't provide value to me anymore. I've been toying around with the idea of building out what I once used Reddit for - news from the Internet. Obviously, it's about 20 years post Reddit's inception, so I've been brainstorming how that would look today. I know I want a skimfeed-like \"clean\" site with OpenGraph support, but what else? Do we even need comments anymore? I'm half tempted to feed articles into AI, and get them to generate a few dozen comments. Then let users upvote those comments accordingly. Nobody can generate their own comments. Could that approach be fine tuned to a useful site? Or would it turn into a bigger echo chamber with everyone being racist? [1][2] 1 - https://www.cbsnews.com/news/microsoft-shuts-down-ai-chatbot... 2 - https://www.nbcnews.com/tech/tech-news/advanced-ai-chatbots-... reply NoMoreNicksLeft 16 hours agoparent> Do we even need comments anymore? Since the very beginning, the only thing of value on reddit was the comments. If you do away with comments, then you will only ever see content from people who can be bothered to learn how to use Wordpress or whatever and post it to a blog. For those starting out, that sounds screaming into the void, so they never start. Commenting is a much more casual and approachable way to provide specialized, detailed content to those who are already proven interested, and you're virtually guaranteed that at least one person out there will give you the attention your effort earned. Any social media that doesn't allow this is either dead on arrival, or popularity is heavily manipulated by some industry heavyweight who can make it popular despite its uselessness. reply mjfl 19 hours agoparentprevdon't we have Reddit's source? Why doesn't someone just clone it? reply lazycouchpotato 17 hours agorootparentThere have been multiple attempts to clone it, but the communities there almost always end up toxic or filled with illicit activities. Some (including me) have shifted to Lemmy, a FOSS Fediverse alternative like Mastodon is to X (Twitter). There are many instances of Lemmy to choose from as home. Mine is lemmy.world. I run a few communities there and we have a chill environment there. If you miss the old reddit feel, you can emulate it with old.lemmy.world Some Reddit third-party app devs converted their apps to Lemmy apps after Reddit made those API changes. There's tildes.net which is run by a former Reddit admin, but it's smaller and invite-only. reply overthemoon 19 hours agoprevI still get some use and entertainment out of Reddit by staying to more niche subreddits. They draw people who are a little more willing and able to curate the social environment--willing in that it can be an extension of the hobby or interest, able in that it's small enough to be feasible for people to do it. I don't think you could say the same about the big ones, their size might actually make it impossible for human curation. To that end, my harebrained idea is to put a hard cap on the number of members a subreddit can have, and restrict posting and voting to those members. If people want, they can create 2 and so on, each cluster self-regulating. To prevent squatting, you can only spawn a new one once the last one reaches a critical mass, and it has to be started by a member of the old one. reply 999900000999 19 hours agoprevReddit is awesome. Just. Don't ask for general life advice, don't go to \"popular\", don't talk politics( one of my biggest regrets is how political I was in my youth). But theirs no better source of technical information from people who tend to be willing to help. Go to stack overflow, say you've never programmed and want to know what tools to use. You'll be banned. Go to Reddit, you'll get tons of helpful information. Rarely a subject matter expert jumps in. AI is probably what I'd ask my stupid programming questions now though. Stupid as in how do I download a file in C++... reply nineplay 18 hours agoparentWhen used right, reddit is full of the most helpful people on the internet. The beauty of the internet is that real people love to give advice in a subject that they care about? Are you trying to become a better cook? Do you want the best chocolate chip cookie recopies? Go to the cooking subreddits and start searching or asking. It's often the best place for product reviews if there's a hobbyist group reply pteraspidomorph 16 hours agoparentprev> Go to Reddit, you'll get tons of helpful information. Depends on the subreddit. The subreddits for certain hobbies are even worse than stack overflow. But yes, I agree with you that there are still helpful communities. reply wizzwizz4 18 hours agoparentprev> don't talk politics( one of my biggest regrets is how political I was in my youth). Opinion: talking politics isn't politics: it's mostly just group signalling. If you're genuinely learning things, that's alright; if you're organising something real, likewise. But if you're just trying to win the \"information war\" (i.e., the current internet argument), that's almost never meaningful political engagement. Example: this comment isn't politics. I'm just advertising that I'm a contrarian. (And this paragraph advertises that I'm a meta-contrarian, also known as a hypocrite.) reply b2bsaas00 19 hours agoprevWe tried Reddit Ads. Hundreds of reported click but when inspecting the session recording with Posthog they were almost zero. reply pompino 18 hours agoprevI think a bot posting content is no worse than a human posting comments in their own echo chamber. I see a lot of snootiness from HN, but HN is also heavily in decline due to certain political agendas preventing free discussion. reply plipt 17 hours agoparentSpeaking of preventing free discussion: I don't currently see this very discussion on the front page of HN. Yet there are newer submissions with fewer points shown there reply pixl97 18 hours agoparentprevThis really depends on the community.... Imagine you live in a community that has half the houses painted yellow and half the houses painted blue. Suddenly you start seeing posted that all yellow houses should be painted blue. The HOA puts it up for a vote, and there are 5000 votes pro blue.... when there are only 250 houses in your neighborhood. I mean, if you lived that neighborhood you'd be up in arms about why the HOA didn't do the bare minimum about the situation. This is the same for bot content. Suddenly the views of one person out number everyone else... \"You should be mad! You should be really mad all the time. Look, there are thousands of people that are really mad, and if you're not mad you're the dumb minority that's not paying attention. Here are 1000 people that are all mad around you and doing something about it, you need to do something too. Yea, remember that 'real person' that talked to you on 'forum' and you got along with them, they are so totally mad!\" Until we give up on thinking 'internet people' are real, internet people will have a far higher impact on our lives than they should. reply avensec 16 hours agoprevThere are comments in this thread calling attention to this post's HN placement. I know this is a little off-guideline, but it feels right to ask as a new question instead of piling on to the tone of those threads. I am curious why this post is (currently) #148 on HN with 218 comments and is three hours old. It is surrounded by \"one day ago, zero comments\" posts. Given the context of the original post, it feels right to be curious as to why this is buried. (Note: Went from 148 to 153 while I wrote this comment) reply 93po 16 hours agoparentmy typical response to this is to plug hckrnews.com which makes browsing HN significantly better for me. and it means you don't have to worry about weird ranking algos reply Venn1 17 hours agoprevAccording to the \"15-Year Club\" badge in my profile, I've been on Reddit for, well, 15 years. It's gone from that weird little Digg clone with a tiny comment section (the good convo was on Slashdot #onionbelt) to a meme site and eventually (with the addition of subreddits) a genuine information repository. The Blackout in 2023 hit the site in a bad way. Most of the tech subreddits I followed have sice dispersed to various Lemmy instances and fizzled out. reply 65 18 hours agoprevTo be fair, Reddit is actively trying to prevent bots. How do I know? I scrape Reddit threads directly via old.reddit.com URLs and even the most sophisticated scraping tools like BrightData, Undetected Playwright (and Puppeteer), and others just don't work on Reddit threads anymore as of a few months ago. I now have to use .json at the end of the URL to get the content, but I suspect that'll stop working at some point. reply thisgoesnowhere 15 hours agoprevThis is engagement farming. You write a bot that is able to look for similar content from the past and copy paste the top comments and replies. THis has been happening since the beginning of time. I remember seeing this on college humor. This is a super easy non expensive way to get an account with a ton of karma. reply ct0 19 hours agoprevAny of the big subs have been a toxic wasteland for a number of years. Small subs that have less than say, 10k users are there its at recently. reply DudeOpotomus 18 hours agoprevTheir newly minted status as a Public company will remove any concerns or care for anything other than a (bullsh*t) measure of growth. Reddit like every other advertising fueled social media company, will ignore the reality of who uses their platform and instead lie cheat and obfuscate the facts in order to remain in \"good standing\" with the ad tech cabal... reply PurpleRamen 18 hours agoprevAt which point will people say: it's full of humans? Is it about visibility? Human:bot-ratio? Quality? Perception aka \"Turing-test\"? I'm always curious about people claiming this and that is a bot or AI, how much of those are true and how many have just a failed perception, where not even all real humans can succeed their test. reply cholantesh 16 hours agoprev~~Reddit~~ the internet; just look at Facebook and Youtube comment sections, they're full of bots calling each other dear and talking about how powdered elephant tusk cured their migraines and investing in powdered elephant tusk helped them keep their house. reply b2bsaas00 19 hours agoprevHumans are such a rare resource online. reply passion__desire 18 hours agoparent\"If you can't tell, does it matter?\" This line from Westworld being played out on reddit. How does one determine if one is a real person with access to only text / comments and the constraint of keeping everyone anonymous. reply wnevets 18 hours agoprevRepost spam has been a problem on reddit for a lot longer than LLMs have been accessible to the public. I'm always confused when I see people on HN marvel at how amazing reddit is, most of the top subreddits are filled with regurgitated garbage. reply r0ckarong 17 hours agoprevWhy is it that people just don't care? I expected reddit to go under after the whole IPO debacle and protest but it just sticks around and now props itself up with recycled content. Why won't people leave for somewhere else? reply pteraspidomorph 16 hours agoparentMany of the most interesting people did, which also affects the ratio of useful to recycled content. A lot of people are comfortable with the current state of the platform - good for them that they're happy where they are! reply butterNaN 2 hours agoprevI used to specifically add \"site:reddit.com\" to search results - it has lost its utility quite drastically over the last year or so. So much so that I have down-ranked reddit in my search results. reply extraduder_ire 19 hours agoprevIf this is being done by someone other than reddit itself, it'd be nice to get r9k-style hashes of comments to spot this more easily. Trivially defeated once posters know it's a thing, but it would be better than nothing. reply mchinen 19 hours agoprevSo this means there is only one agent with multiple accounts running the same that has a bug to use the same seed every time (possibly seeded on a hash of the content if we are generous)? edit: or greedy sampling only? reply philip1209 18 hours agoprevI think it's inevitable that some kind of \"Verify personhood\" test will be coming for many UGC platforms - perhaps something like Stripe Identity. reply RedShift1 19 hours agoprevFake engagement by Reddit to prop up usage numbers? reply shagie 18 hours agoparentGood fake engagement would be more convincing and harder to detect. Instead what you see is a post from a fresh account that is a copy/repost of one of the top posts in either that or a sibling subreddit. This is then followed by a half dozen accounts reposting the top comments from the original as their own comments. This is often where they mess up and it's easily detectable when not the OP responds as the OP. If you check back in a month or two or so, the accounts are inevitably banned by Reddit or shilling something somewhere else (with a minimum age/rep requirement) themselves and/or using the accounts to express support for something shilled. The \"resume writer\" was annoying prolific. I find it doubtful that Reddit corporate is using such an approach to try to drive up engagement numbers. reply Beretta_Vexee 19 hours agoparentprevThe phenomenon seems to be limited to a certain number of subreddits that are close to a brand or have products to sell. They recycle content to give the impression that there is some interest in their brand, product, crypto, etc. and to avoid giving the image of a dead brand. Personally, I've observed this phenomenon on r/Polarfitness as soon as the sub becomes a list of complaints and negative feedback about after-sales service, positive content magically appears with very generic content but dozens of comments. reply mh- 19 hours agorootparentr/AskReddit has been my guilty pleasure for like a decade, and it's super prevalent there too. No products being pushed in the threads I've seen called out. reply oaththrowaway 18 hours agorootparentprevIt happens on meme pages all the time reply KeplerBoy 19 hours agoprevDamn, we might just generate the comments with an LLM chrome extension on the fly, because it doesn't matter either way. reply abduhl 19 hours agoprevI have a pet theory that bots and AI generated content are constantly being posted to a couple subreddits (AITAH, AskReddit, etc.) where the general theme of the post is basically cheating and/or open relationships. These posts garner a lot of strong opinions and ultimately end up on the front page. Much like the OP here, the content and discussion always seems so recycled. Good examples from the front page just now include https://old.reddit.com/r/AITAH/comments/1cgmfrt/aitah_for_ma... and https://old.reddit.com/r/AITAH/comments/1cg4c7n/aitah_for_ge... reply brisketbbq 18 hours agoparentwell it doesn't necessarily have to be AI generated content. I rarely read those posts, but when I do, I find myself actually questioning if it's really true. I suspect some people have too much time on their hands and make stories up for reddit karma instead of writing journals and books that nobody will read. At least they're exploring creative writing, though. reply tsunamifury 19 hours agoprevI’m seeing tons and tons of automated behavior on Reddit. Posts that are clearly farmed bots that figured out how to use LLMs to vary the same genre of question over and over again. LLM Bots that seem to respond set to counter at all costs mode. Yes I’m aware of how dumb people can be, but these adapt in a way that feels very LLMish — instantly sacrificing the point just to counter you and try to get another response On top of that I see Google is dumping tons of fresh traffic, but the behavior of these users seems different than Google drop bys. These are tons and tons of users who seemingly appear out of thin air with histories. I dunno — it all seems really weird and particularly set for rage engagement to me. reply lodovic 19 hours agoparentI sometimes wonder if these are really LLMs, or rather just people desperate for karma. But the screenshot of the copied thread was an eye-opener. reply evantbyrne 18 hours agoparentprevReddit is the ideal place for bots, because there is a critical mass of anonymous posters who will bicker about topics they know nothing about–not to mention numerous other shameless cultural practices. It is may already be impossible for regular users to tell themselves apart from LLMs when engaged in typical Reddit discourse. reply tsunamifury 18 hours agorootparentThe problem is that infinite bicker produces low quality long term training data, terrible ad targeting data, and even worse conversions. So unless they exclusively plan to sell rage engagement to film Studios and political campaigns their market is going to be microscopic and terribly performing. reply evantbyrne 18 hours agorootparentBusinesses are going to need to be extra cautious about social media advertising spend in the era of LLMs. Personally, I think social networks are doomed, unless they can figure out how to lock things down. Will be difficult to do on a website known for anonymous posting. reply tsunamifury 18 hours agorootparentYea the meta empire is better positioned to build real identity legislation and benefit from it. I think Reddit could be enjoying a short term boost but once Google drops them it’s a bust. reply Irickole 18 hours agoprevIt’s also the worst with advertising. Running CPC campaigns is useless now as bots will be pushed to your ads blowing through your ad spend. reply freshpretzels 18 hours agoprevTime to find more forums and buy more paper books. reply moi2388 18 hours agoprevThis is why all service will go to pay per use reply EcommerceFlow 18 hours agoprevThis will only get worse as the incentives shift from purely \"propaganda\" to actual financial incentives. The SEO spammers are coming for Reddit. You'll start noticing comments that have been edited months or years after the original, that insert links for a particular product/service. I've already seen this for a variety of IPTV comments I was searching. I'd imagine this is mostly done via mass outreach. On a different note, I'd imagine the pushback had this been \"right wing\" propaganda being caught to be 100x with mentions of criminal activity, even more censorship, etc. reply ta988 19 hours agoprevThis is one more step toward Enshittification https://en.m.wikipedia.org/wiki/Enshittification much better explanation than Dead Internet if you ask me. reply gruez 18 hours agoparentHow is this \"Enshittification\" in the original sense? From the article: >>Here is how platforms die: first, they are good to their users; then they abuse their users to make things better for their business customers; finally, they abuse those business customers to claw back all the value for themselves. Then, they die. I call this enshittification, and it is a seemingly inevitable consequence arising from the combination of the ease of changing how a platform allocates value, combined with the nature of a \"two sided market\", where a platform sits between buyers and sellers, hold each hostage to the other, raking off an ever-larger share of the value that passes between them. In this case what changed? Was reddit on top of spam a few years ago and deliberately let spam happen? Or did spammers realize the value and got more aggressive with their spamming? It's not clear how what's happening right now resembles \"they abuse those business customers to claw back all the value for themselves\". Are you just using it in the literal sense of \"service got shittier\"? reply swatcoder 18 hours agorootparentI do think the term has broadened to just capture the general decay of quality across services and software, which is probably fair since we often can't make evidenced claims about why it's happening in any specific instance. Here, it's probably fair to say that spam strategies continue to innovate and reduce their operational costs while Reddit (and most of their peers) drag their feet on responding to it as long as the spam satisfies the quality norms of the site (as sufficiently delayed replays do). Reddit (et al) presumably puts a fair effort into suppressing obvious noise, but much less effort into generated content that creates engagements or appears plausibly real, and that this *amounts to a decay over time as the implicitly permitted generated content itself becomes cheaper to produce and more widespread. Their self-benefiting inaction satisfies the original usage of \"enshittening\" even as the term has expanded in common use. reply dotnet00 18 hours agoprevAlthough the comment by comment aspect is new to me, I did see a lot of blatant bot posting/repost karma farming that slid under the table back when I was an active user. I remember several times when I happened to be looking up a post, only to come across posts of the exact same content, exact same text, different account, made months apart and/or on different but related subreddits. Sometimes I'd check the account out of curiosity and find that all of that account's posts were like that. I think these would be a lot more obvious if Reddit's own integrated search was better. reply deusum 19 hours agoprevWith AI we can expect full disinformation posts with supporting conversations. reply harborsong 18 hours agoparentImagine today's AI several years ago, the Democrats could have used AI to generate ten times the disinformation about Trump and the Russians instead of having Steele write one dossier. reply AndyMcConachie 18 hours agoprevMuch like the S in IOT is for security, the G in Internet and Web is for Genuine. reply 2OEH8eoCRo0 19 hours agoprevHow full? I'm sure Reddit has quite a few bots but I also think that their size is an immunity of sorts. I quit reddit a few years ago but I've checked it out recently and found it quite tolerable. reply tsunamifury 19 hours agoprevI’m starting to suspect Reddit is becoming human-RAG for Gemini. On the backend Gemini forms questions of what people want from it, and it posts backwards to Reddit to train on rated answers. reply rchaud 19 hours agoparentVery possible, although surely Reddit could have charged more than $60m for that [0]. Looking forward to Google Search recommending stores and restaurants that closed years ago, or videogames that don't exist. [0] https://www.reuters.com/technology/reddit-ai-content-licensi... reply simion314 18 hours agoprevwhy is reddit allowing creating of bot accounts? Money? I would make it so new accounts have very limited permissions, create a way for real users to confirm they are humans like via SMS or how other competent social media do it. reply probably_wrong 17 hours agoparentBot accounts used to be useful in the past, and I'd bet some of them remain. Bots like the one that would ping you in X days (to see if a discussion ever had an update), the one that would tell how many times a user used the n word (useful for witch hunts), the one who would summarize stuff for you before it was cool, the ones that would identify topics from the FAQ and tell you so... Why they are not currently keeping them in check, though? I'd like to say \"engagement\" but I prefer to believe in \"incompetence\". reply simion314 10 hours agorootparentI am not referring at those bots. I am guessing here, no data or proof, but there are a lot of very young accounts that defend Putin, defend soviet war crimes , try to cause chaos, do personal attacks in comments. This accounts have sometimes real people behind but for sure bots/scripts are used to create them and then farm karma/points to be allowed to post. Someone like me with a single account for years must always be sure to fllow the rules, this bots/trolls are always aggressive, spread false shit and do not care if banned, and seems reddit is fine with same troll making many accounts and use them for bad stuff. Because some subreddits require you have some karma before commenting, more karma to be allowed to post I assume this trolls use scripts to post random stuff to get this karma points. There are bots that find popular past submission and post the same thing again to get the karma points. So EU or USA needs to tell reddit that they are responsible for the shit posted by bots and we will see tehm inventing ways to stop 99% of them/ reply gmd63 19 hours agoprevWhen everyone has the power of AI and the scalability offered by the virtual world, just a few liars can ruin the entire internet. It's amazing how the \"AI abundance\" advocates don't understand something so blatantly obvious. reply rchaud 19 hours agoparentThis isn't AI, they are simply reposting a previous, presumably \"real\" conversation verbatim under different usernames. You can tell from the comments, which don't read like typical loquacity of ChatGPT style LLMs. reply euphetar 18 hours agorootparentThe scary part is that perhaps there are in fact LLM generated bot threads, but they are not so easily busted reply marcosdumay 18 hours agoparentprevEverybody understands this. It's completely obvious. I imagine you are complaining about people that disagree with you on how to solve the problem. reply gmd63 11 hours agorootparentI think the problem has many solutions, but none of them result in equitable abundance, or anything close to resembling that. reply 7 more comments... GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Reddit users Blaze and Lemmy.world found bots reposting an entire thread, comment by comment, identically, after 10 months.",
      "This discovery highlights the presence of bots on Reddit, engaging in repetitive behaviors and potentially manipulating discussions.",
      "The incident raises concerns about the authenticity of user interactions and content on the platform, emphasizing the importance of detecting and addressing bot activities."
    ],
    "commentSummary": [
      "Reddit conversations focus on issues like bots reposting content, fake accounts promoting products, and potential discussion manipulation through AI-generated content.",
      "Concerns about information reliability, biased Wikipedia edits, and corporate influence are prevalent topics.",
      "Proposed solutions include online identification systems, passport verification, and using dogs to fight bots to address these challenges."
    ],
    "points": 318,
    "commentCount": 259,
    "retryCount": 0,
    "time": 1714485473
  },
  {
    "id": 40210627,
    "title": "Extension.js: Streamlined Web Extension Creation Tool",
    "originLink": "https://github.com/cezaraugusto/extension.js",
    "originBody": "Hello HN! I&#x27;m the creator and solo developer of Extension.js, a development tool for browser extensions with built-in support for TypeScript, WebAssembly, React, and modern JavaScript. Developers use it to spend less time configuring the compilation config or learning new frameworks and more time actually writing code.Most projects similar to Extension.js rely on some sort of abstraction or configuration to get started, making the initial development process slow given the extra learning curve and setup guidelines. By using Extension.js, adding the package to your npm scripts is all it takes to get started developing cross-browser extensions with no build configuration. Say goodbye to extensive configurations to create your next cross-browser extension!Creating a new extension is super easy. This command will create a new extension named \"my-extension\" in the current working directory. In your terminal:npx extension@latest create my-extensionYou can also create an extension based on any extension hosted on GitHub. Just add the URL of the folder where the manifest is located and run `npx extension@latest dev <github_url>`. For instance, you can try the Chrome Sample \"page-redder\" (https:&#x2F;&#x2F;github.com&#x2F;GoogleChrome&#x2F;chrome-extensions-samples&#x2F;tr...).I first created this project as a way to teach others how to develop browser extensions, until I realized that a good amount of my teachings would involve setting up a new project. With Extension.js, the abstractions and configurations needed to create cross-browser extensions are handled by a simple command-line interface, allowing developers to focus on the actual development of their next extension.Any feedback is appreciated. I&#x27;ve been using it for a while in personal projects but it is now mature enough for others to give it a go. I&#x27;m looking forward to hear what you all have to say! :D",
    "commentLink": "https://news.ycombinator.com/item?id=40210627",
    "commentBody": "I made a CLI tool to create web extensions with no build configuration (github.com/cezaraugusto)312 points by cezaraugustodev 20 hours agohidepastfavorite64 comments Hello HN! I'm the creator and solo developer of Extension.js, a development tool for browser extensions with built-in support for TypeScript, WebAssembly, React, and modern JavaScript. Developers use it to spend less time configuring the compilation config or learning new frameworks and more time actually writing code. Most projects similar to Extension.js rely on some sort of abstraction or configuration to get started, making the initial development process slow given the extra learning curve and setup guidelines. By using Extension.js, adding the package to your npm scripts is all it takes to get started developing cross-browser extensions with no build configuration. Say goodbye to extensive configurations to create your next cross-browser extension! Creating a new extension is super easy. This command will create a new extension named \"my-extension\" in the current working directory. In your terminal: npx extension@latest create my-extension You can also create an extension based on any extension hosted on GitHub. Just add the URL of the folder where the manifest is located and run `npx extension@latest dev `. For instance, you can try the Chrome Sample \"page-redder\" (https://github.com/GoogleChrome/chrome-extensions-samples/tr...). I first created this project as a way to teach others how to develop browser extensions, until I realized that a good amount of my teachings would involve setting up a new project. With Extension.js, the abstractions and configurations needed to create cross-browser extensions are handled by a simple command-line interface, allowing developers to focus on the actual development of their next extension. Any feedback is appreciated. I've been using it for a while in personal projects but it is now mature enough for others to give it a go. I'm looking forward to hear what you all have to say! :D herrherrmann 19 hours agoVery cool stuff! I might check this out for my extension (https://github.com/herrherrmann/omnivore-list-popup). So far, I’ve been creating my own scripts to manage the extension builds, dev mode etc. – but I’ve been eyeing web-ext already to make my life easier. However, my main browser is Firefox, which doesn’t seem fully supported yet by Extension, right? reply cezaraugustodev 19 hours agoparentThanks a lot! You can run your Mozilla Add-On on Chrome or Edge by adding a --polyfill flag, but for now you need to manually add the extension to Firefox. I do plan to support Firefox in the near future, but no browser runner available at the moment. reply simple10 16 hours agoprevThis is exactly what I need right now. Thanks for building and sharing it! Looking forward to Firefox support. I hope you can get it working. Firefox Support Issue: https://github.com/cezaraugusto/extension.js/issues/5 reply Vinnl 16 hours agoparentIn particular, navigating the conflicting requirements for `manifest.json` would be useful, e.g. the difference between event pages and background service workers, or permissions that are inconsistently required/forbidden. reply simple10 16 hours agoparentprevIt would be great if you could add more details to the Firefox support issue in github. Maybe the community could help solve it? reply cezaraugustodev 15 hours agorootparentThe plugin for Firefox is on the way, but any community support is highly appreciated. reply hhimanshu 7 hours agoprevThis is good project. I built my first chrome extension using https://crxjs.dev/vite-plugin/getting-started and there was lot of fiddling to et styles working. This could also be because this is my first browser extension development. https://chromewebstore.google.com/detail/bettermenu-for-door... There is still lot more work to do, so I will checkout your project. Thanks for sharing! reply kosolam 28 minutes agoprevNeed to change the title it’s browser extensions not Web extensions. reply mvkel 19 hours agoprevThis is extremely cool. Even the readme is beautiful! I'm going to give this a try. I've been holding off on adding an extension to my app because of the absolute cluster that is Google Play. reply cezaraugustodev 19 hours agoparentThank you! I'm glad you liked the readme as well :D reply aaronharding 12 hours agoprevOkay I love it, I feel like you should also sprinkle your magic on extensiontab communication. Whenever I make an extension, it's always such a pain to read from the DOM or send a message from the extension to the active tab. reply nullandvoid 3 hours agoparentPlasmo has a messaging library you might want to explore https://docs.plasmo.com/framework/messaging reply cezaraugustodev 9 hours agoparentprevHaha, thanks! It’s not in the immediate plans, but meanwhile, I'm sure there are some good libraries on npm for that :) reply msephton 8 hours agoprevJust added an issue: Safari support should be relatively straightforward using Apple's safari-web-extension-converter cli tool. reply from-nibly 14 hours agoprevIve made a few extensions. One was silly and changed the imgur heart color when they changed it and everyone was upset. Every time i make a chrome extension i get massive imposter syndrome. It is so hard to create a new project for some reason. This would be awesome. reply cezaraugustodev 13 hours agoparentTotally relate. Extension development should be fun, right? Hope Extension.js can help you with your next project! reply outlore 16 hours agoprevthis is cool! how would you contrast this with Plasmo, a similar framework? https://www.plasmo.com/ reply cezaraugustodev 15 hours agoparentGreat question! The biggest difference, in my opinion, is that Plasmo is a framework, which means you have to learn its abstractions and rely on specific samples tailored for these abstractions to create new extensions. There are config files and specific rules to follow that are not necessarily related to browser extensions. On the other hand, Extension.js allows developers to create extensions using the standard extension APIs and abstracts only the configuration files, without the need to learn the tooling specifics. This way, a sample from Chrome or MDN that works with a manifest file as the source of truth requires no refactoring to work with Extension.js, making it easier to get started and prototype new projects. reply selalipop 8 hours agorootparentI’ve used Plasmo without touching their framework (essentially using it for HMR and bundling) and it works pretty well But it’s never a bad thing to have two projects solving a painful problem reply simple10 16 hours agoparentprevPlasmo looks extremely useful. Have you used it to develop any extensions? reply bluelightning2k 30 minutes agorootparentI use Plasmo. Strongly recommend it. So much so I gave them a shout-out in a blog post just this Sunday (https://moddable.app/blog/unofficial-mod-support). I don't really use the framework stuff but HMR that works really well is just chefs kiss. reply spxneo 15 hours agorootparentprevI use it and it does a lot of what I used to do manual deployment so I was wondering the same thing as GP, could this be a self-hosted plasmo of sorts reply gerroo 9 hours agoprevAbsolutely amazing! When I was developing a chrome extension all I could think of was a severe lack of dev-tools. I'll try it when I get the opportunity. reply cezaraugustodev 9 hours agoparentThank you! The ecosystem for developing extensions could be so much better, hope we can help with that reply rantymcrant 4 hours agoprevThis may be very cool but I'm here to rant What is it with \"I made a _______\" posts? Those seem new to me and very braggy. I see them on youtube as well. I feel like if I could check all the posts to HN I'd find a trend of instead of just \"A tool/app/site to do X\" there's a tread of adding \"I made\" in front. Is that a result of social media conditioning, that you must brag that \"I\" made? reply fragmede 3 hours agoparenthttps://news.ycombinator.com/item?id=1381172 is the oldest one I could find via the algolia search at the bottom of the page, from 2010, so it's not that recent a phenomenon. A different reading is less that the emphasis is on I made a thing, and more about being a complete sentence with an explicit subject vs implicit. reply saghm 4 hours agoparentprevI can't speak for youtube given that I don't really actively browse it, but I'm not sure how it's \"braggy\" when the entire purpose of \"Show HN\" is to demo things that were made by the person posting it (https://news.ycombinator.com/showhn.html): > Show HN is for something you've made that other people can play with. At most, it's redundant, but not in a way that hurts anyone. reply ViktorBash 18 hours agoprevLooks good! I'll give this a swing on my own extension Vim for Docs. Firefox not being supported is a bummer, but it's not like there is a build tool for extensions that does support both Firefox and chromium based browsers. reply cezaraugustodev 17 hours agoparentThanks! Firefox support will come in the next update. Stay tuned! :) reply lagniappe 14 hours agoprevWow this is cool, thank you :) I look forward to trying this out on a little hobby extension I'm working on as well. reply cezaraugustodev 13 hours agoparentI'm glad to hear! reply blackhaj7 19 hours agoprevThis looks really helpful - thanks! reply cezaraugustodev 19 hours agoparentThanks for the kind words! reply rmdes 18 hours agoprevwell... you just gave me a reason to rebuild my Bluesky extension from scratch, without a dependency from the original extension I used to get my base opengraph running. Bluesky OGraph Poster reply cezaraugustodev 17 hours agoparentHaha glad to hear that reply _andrei_ 17 hours agoprevvery cool, also check out https://www.plasmo.com/ reply mrozbarry 19 hours agoprevI totally understand why, but no firefox support is a show-stopper for most extension developers. reply thenbe 18 hours agoparentFWIW there's an existing issue for \"firefox support\" which you can subscribe to in order to be notified when this feature lands. https://github.com/cezaraugusto/extension.js/issues/5 reply cezaraugustodev 18 hours agoparentprevSure thing! There will be support for Firefox very soon reply notum 18 hours agoprevApologies for the confusion but what is \"cross-browser\" about this tool if it only works with chromium? reply cezaraugustodev 17 hours agoparentNo worries :) but Chrome and Edge are indeed different browsers. Support for Firefox and Safari is next. reply notum 16 hours agorootparentNot to take away from the simplicity of use, of course, totally giving it a go. I think this is an awesome foot in the door for people who never considered developing extensions. Firefox would be a MASSIVE win! reply purple-leafy 14 hours agoparentprevAgreed. It would be more fair to call it chromium only. I don’t consider that cross browser as any chrome extensions defacto works on any chromium browser reply edwinjm 19 hours agoprevIt’s called a browser extension, why call it web extension? reply thrdbndndn 19 hours agoparentIt has often been called \"WebExtensions\" or \"WebExt\" for a long time [1]. I wasn't even aware that it's just referred as \"browser extensions\" on MDN [2] now (..and the URL still uses \"WebExtensions\" and it's all over the actual article content. So I don't know.) To me, 'WebExt' represents a specific specification within the broader category of browser extensions. However, since all major browsers now support this specification (and this only), it has become the de facto standard. I hope someone more familiar with this topic can provide a more precise explanation [1] https://developer.mozilla.org/en-US/docs/Glossary/WebExtensi... [2] https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/Web... reply cezaraugustodev 18 hours agoparentprevHN has a character limitation for the post title and changing the word made the title fit just fine :) reply PurpleRamen 18 hours agoparentprevBecause this specific browser extensions are named WebExtensions[1]. [1] https://www.w3.org/community/webextensions/ reply derefr 18 hours agoparentprev\"WebExtensions API\" is the genericized term coined by (IIRC) Mozilla, for the (subset of the) originally-proprietary browser extension API surface exposed by Chrome, that non-Chromium browsers (Firefox, Safari) have since added support for in order to be able to support easy porting of originally-Chrome-targeted extensions. Basically, until ~8 years ago, there were only three browsers of note with browser extension APIs (Chrome, Firefox, and Safari); and they were all proprietary and all different, so developers had to code each extension from scratch for each browser. And developers of major extensions mostly did. But then Chromium-based browsers like Brave and Opera and Edge became a thing, and they all inherited de-facto support for what they at the time called \"Chromium-style extensions.\" With this, the Chrome extension API effectively \"won\" the browser-extension-API developer-mindshare war without really meaning to. Developers became less and less interested in porting their extensions, instead opting to just focus on Chromium-based browsers, since not only was Chrome the majority of the market, but Chromium-based browsers comprised a large fraction of the remainder. Rather than Mozilla and Apple \"solving\" this by coming up with some artificial new eleventh-hour browser-extension API standard to foist on Google through the WHATWG (that would have required every dev rewriting all their code), Mozilla and Apple both did the pragmatic thing, and \"embraced and extended\" Chrome's own extensions API, locking in \"whatever Chrome was doing at the time\" as now being a conventional cross-browser API. That API, going forward, was referred to in the Firefox and Safari docs — and eventually the Chrome docs as well — as the \"WebExtensions API\" (mostly so that Mozilla and Apple didn't have to say the words \"Chrome\" or \"Chromium\" anywhere in their docs.) A browser saying that it supports the \"WebExtensions API\", means that it exposes certain browser-extension APIs in JS under the chrome.* namespace, with Chromium-compatible semantics. Yes, Firefox and Safari both present themselves as Chrome to browser extensions, up to and including answering to the name \"chrome\" rather than \"browser\" in JS. Wild, isn't it? Note, however, that these browsers do still also expose their original, incompatible extension APIs under the browser.* namespace. And if you write your JS carefully, you can attempt to make use of these per-browser features in your extension, while gracefully degrading to a WebExtensions baseline. reply jonathanlydall 19 hours agoparentprev100%, I was also initially confused by the term web extension, it’s a browser extension. reply chadrs 17 hours agoprevI’ve been pretty happy with web-ext, I’m curious what abstractions and configurations Extensions.js avoids comparatively. I’m assuming you’ll still need a manifest.json, and it looks like both use npm/package.json for dependencies. https://github.com/mozilla/web-ext reply cezaraugustodev 15 hours agoparentYes, the manifest.json is a required file for all extensions, and the package.json file provides necessary package metadata. web-ext is excellent, but it seems there are no plans for the project to support more browsers than it currently does. On the other hand, Extension.js plans to support all major vendors. Except for Firefox support, which is in progress, I believe Extension.js offers parity with all core functionalities of web-ext, but it goes further by providing built-in support for React and TypeScript. All you need to do is add the correct dependencies to get up and running. Additionally, Extension.js provides comprehensive extension reload support, including changes to the manifest.json file and the service_worker background. This feature sets it apart from similar tools, including web-ext, which do not offer this capability. reply masto 16 hours agoprevI've made a couple of (admittedly trivial) Chrome extensions to tweak things on sites I use. I didn't really spend any time configuring the compilation config (not sure what that is) or frameworks. I'm guessing the reason for needing something like this is for handling complicated dependencies and cross-platform stuff? The main issue I've run into is that I have no idea how to hook into and modify the behavior of fancy modern web sites with all of their React and Angular and Snorfleflox. I was kind of hoping this was for that. Is there some sort of framework that makes that stuff easier, or failing that, a really good tutorial for an experienced but a little out of date web developer to get up to speed? reply grimgrin 16 hours agoparentThe best luck I’ve had with SPA apps and a goal of manipulating the DOM is by using mutation observers. Worth exploring if you haven’t yet https://developer.mozilla.org/en-US/docs/Web/API/MutationObs... You can hack on the behavior via userscripts, my preferred way to alter websites, though I write extensions too (greasemoney is good tho) reply rsoto 16 hours agorootparentIMO MutationObserver's API is a bit difficult to grasp. For simpler cases for getting a callback when an element is created, I use spect[1] or sentinel[2]. 1: https://github.com/dy/spect 2: https://github.com/kubetail-org/sentineljs reply sfink 11 hours agorootparentYou can wimp out and just use MutationObserver as a way to get a callback whenever anything changes, ignoring all of the mutation records. Then in the callback, look up all of the elements you care about. The API is pretty simple then. It may be less efficient, but usually when you're mucking about with existing web pages, you're not all that performance sensitive. (And MO batches up updates reasonably well, so it's not like you're running the callback once per change.) Occasionally it might even be faster, since you're not iterating through the mutation records and testing for stuff you care about. reply grimgrin 10 hours agorootparentyeah that's exactly how I've done it -- observe the highest order container I care about (document.body lazy mode) reply cezaraugustodev 15 hours agoparentprevExtension.js can help you creating a new extension using React in no time: npx extension create my-react-extension --template=react But I guess it doesn't make it any easier to modify the behavior of fancy modern web sites :_( reply insin 14 hours agoparentprev> The main issue I've run into is that I have no idea how to hook into and modify the behavior of fancy modern web sites with all of their React and Angular and Snorfleflox. I was kind of hoping this was for that. Is there some sort of framework that makes that stuff easier, or failing that, a really good tutorial for an experienced but a little out of date web developer to get up to speed? I've written extensions (L I N K S I N B I O) which significantly modify Twitter.com (which uses React Native for Web) and YouTube (which uses web components), which are both SPAs - the main tips I'd give are: 1. Which page am I on? In an MPA extension or userscript, you just check the current URL and go. In an SPA, you could go as far as patching the pushState() method on History (although you can't do this from an extension's content script - you would need to inject a page script) and watching for popstate events to detect URL changes, but I've found using a MutationObserver [1] to observe the contents ofto be a simpler proxy for the current page changing. When thechanges, check the current URL to see if it's one you've already handled, and if not, start making your modifications. This also gives you a natural place to put any teardown logic, such as disconnecting active observers and cancelling any async actions which may be in progress for the previous page, such as waiting for elements to appear. The target app may even have custom events you can hook into. YouTube has these, for example, but I found they were being fired at the same time thewas being changed whenever the user was navigating to a different page, so I stuck with the implementation-independent approach. 2. When are the main elements I care about available? You'll need some utility functions which allow you to wait for specific elements to be available in the current page, either as an indicator the page is ready to modify, or because you need to do something with their contents. This could be as un-smart as writing a function which returns a Promise wrapping document.querySelector() calls at regular intervals, or uses a MutationObserver to wait for a specific element to appear, then resolves with it, but there should be lots of existing open source utilities like these available out there (some have already been linked to in this thread). I ended up writing my own version of these so I could specifically control stopping waiting for an element based on a timeout and/or other conditions, e.g. immediately resolving the Promise with `null` if the current URL has changed at the next available interval. 3. When do the elements I care about change? Use the MutationObserver API [1] to watch for child elements being added/removed, or for specific attributes being changed. It's kind of clunky, so you may want to write your own convenience wrapper - this is also a natural place to facilitate storing active observers for a later teardown. I've found I usually end up with at least a pageObservers collection, which makes it easy to disconnect everything which is currently being observed when the page changes. e.g. I use a MutationObserver on the element which contains Twitter timeline contents to watch for the current window of visible tweets being changed so I can do things like hide quotes of specific tweets or hide Retweets from the Following timeline. 4. Hiding things in an SPA-friendly way Removing elements which UI libraries such as React expect to be under their control when some state changes at a later time can lead to errors, so I've found it best to use CSS where possible to hide things, and even adding your own class names to use as styling hooks. It can also just be more convenient than writing code to manually remove things from the DOM. e.g. Twitter uses React Native for Web's styling system, which takes CSS-like style objects and generates utility-like style rules from them (it's like Tailwind in reverse) - this means there aren't any developer-friendly class names to use as styling hooks, so on some pages I add my own. If I open my own user profile,will have 'Profile' and 'OwnProfile' classes on it, which I can use to hide the \"Articles\" and \"Highlights\" tabs, which are there purely as Premium upsells. [1] https://developer.mozilla.org/en-US/docs/Web/API/MutationObs... reply sfink 11 hours agorootparentI haven't done a lot of userscript dev, but based on my experience so far, all of this advice is spot-on. I found it useful to create a `waitForElement(query)` helper function that takes a CSS selector path and returns a Promise that resolves when the query starts finding a match in the DOM. (Internally, it's just populating a table that is iterated over in the MutationObserver callback.) As for SPA \"navigation\", I had trouble with popstate events. I hadn't considered yourtrick; I'll bet that would have worked for me! Right now, I'm polling window.location.href every half second, which sucks. reply avtar 18 hours agoprevMinor feedback: please consider an option to exclude emojis from the cli output. I can appreciate wanting to add some character here and there, but the output of ``npx extension create my-extension`` seems very noisy. reply cezaraugustodev 18 hours agoparentThat's great feedback, thank you. Will consider the removal. reply isodev 19 hours agoprev [–] Looks interesting but I don’t understand why Safari is excluded on both desktop and mobile. reply cezaraugustodev 19 hours agoparentThanks! I do plan to support all major browsers in the near future, including Safari :) reply bpev 16 hours agoparentprev [–] fwiw, in my experience, Safari is a much bigger annoyance to release extensions on than all the other platforms, and has the more differences is release process. So I'd expect this browser to be supported last. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Extension.js is a development tool for browser extensions that streamlines the process by offering built-in support for TypeScript, WebAssembly, React, and modern JavaScript.",
      "It removes the requirement for complex configurations and setup instructions, enabling developers to concentrate on coding.",
      "The tool can be seamlessly integrated into npm scripts, simplifying the creation of cross-browser extensions without the need for build configuration. Originally created to educate on extension development, it is now open for public use with feedback encouraged."
    ],
    "commentSummary": [
      "Extension.js is a CLI tool simplifying web extension creation, supporting TypeScript, WebAssembly, React, and modern JavaScript, fully compatible with Chrome and Edge, with future Firefox and Safari compatibility on the agenda.",
      "Discussions on platforms like Github and HN focus on Extension.js features, comparisons with frameworks like Plasmo, and strategies for web page and SPA modification using tools like Mutation Observers and CSS.",
      "Community feedback involves improvement suggestions and upcoming browser support plans for Extension.js."
    ],
    "points": 312,
    "commentCount": 64,
    "retryCount": 0,
    "time": 1714482676
  },
  {
    "id": 40213731,
    "title": "The File Filesystem: Manipulating Modern Data with Unix Tools",
    "originLink": "https://mgree.github.io/ffs/",
    "originBody": "ffs: the file fileystem mount semi-structured data (like JSON) as a Unix filesystem exe (macOS) exe (Linux) github The Unix shell is a powerful tool, and the Unix ecosystem provides an incredible array of tools for working with strings. But the shell really only knows how to work with one data structure: the filesystem. Modern systems use all kinds of semi-structured data, like JSON or YAML. These semi-structured formats are essentially trees, and string processing is a bad match—editing JSON with sed is not a very good idea! ffs—short for the file filesystem—lets you mount semi-structured data as a filesystem, letting you work with modern formats using your familiar shell tools. Currently, ffs supports JSON, YAML, and TOML, with more to come. You can read more about it in the ffs manpage. Examples Run ffs [file] to mount file.blah at the mountpoint file. The final, updated version of the file will be outputted on stdout. $ cat object.json { \"name\": \"Michael Greenberg\", \"eyes\": 2, \"fingernails\": 10, \"human\": true } $ ffs -o object_edited.json object.json & [1] 60182 $ tree object object ├── eyes ├── fingernails ├── human └── name 0 directories, 4 files $ echo Mikey Indiana >object/name $ echo 1 >object/nose $ mkdir object/pockets $ cd object/pockets/ $ echo keys >pants $ echo pen >shirt $ cd .. $ cd .. $ umount object $ [1]+ Done ffs -o object_edited.json object.json $ cat object_edited.json {\"eyes\":2,\"fingernails\":10,\"human\":true,\"name\":\"Mikey Indiana\",\"nose\":1,\"pockets\":{\"pants\":\"keys\",\"shirt\":\"pen\"}} Notice a few things: the nose key of the resulting object has a number as its value, not a string; the pockets directory got turned into an object. You can specify an explicit mountpoint by running ffs -m MOUNT file; you can specify an output file with -o OUTPUT. You can edit a file in place by running ffs -i file (as in the gif above)—when the volume is unmounted, the resulting output will be written back to file. Here’s the transcript: ~/ffs/demo $ echo '{}' >demo.json ~/ffs/demo $ ffs -i demo.json & [1] 56827 ~/ffs/demo $ cd demo ~/ffs/demo/demo $ echo 47 >favorite_number ~/ffs/demo/demo $ mkdir likes ~/ffs/demo/demo $ echo true >likes/dogs ~/ffs/demo/demo $ echo false >likes/cats ~/ffs/demo/demo $ touch mistakes ~/ffs/demo/demo $ echo Michael Greenberg >name ~/ffs/demo/demo $ echo https://mgree.github.io >website ~/ffs/demo/demo $ cd .. ~/ffs/demo $ umount demo ~/ffs/demo $ [1]+ Done ffs -i demo.json ~/ffs/demo $ cat demo.json {\"favorite_number\":47,\"likes\":{\"cats\":false,\"dogs\":true},\"mistakes\":null,\"name\":\"Michael Greenberg\",\"website\":\"https://mgree.github.io\"}~/ffs/demo $ ~/ffs/demo $ Getting ffs On Linux you need FUSE; on macOS, you need macFUSE. You can then download a single executable. These are the latest development builds: Linux macOS See the release page for particular releases; the current version is 0.1.2. You can also build ffs from source. Learn more Check out the paper “Files-as-Filesystems for POSIX Shell Data Processing” from PLOS 2021. The pre-recorded demo is above; the pre-recorded talk is below. Related tools Tools like jq and gron are meant to help you work with JSON on the command line. They’re great tools! Why might ffs be the right choice for you? ffs supports multiple formats. ffs lets you edit using familiar shell tools. ffs doesn’t involve learning a new language. Why might ffs not be the right choice for you? You use Windows. (Sorry. 😥) You can’t use FUSE. You only need to search, not edit. Your files are very large. License ffs is licensed under GPLv3. ffs is maintained by mgree This page was generated by GitHub Pages.",
    "commentLink": "https://news.ycombinator.com/item?id=40213731",
    "commentBody": "The File Filesystem (2021) (mgree.github.io)254 points by wegwerff 15 hours agohidepastfavorite72 comments RetroTechie 13 hours agoUseful enough that it should be an OS-level standard feature, imho. Unix-like OSes allow mounting disk images to explore their contents. But there's many more file formats where exploring files-inside-files is useful. Compressed archives, for one. Some file managers support those, but (imho) application-level is not the optimal layer to put this functionality. Could be implemented with a kind of driver-per-filetype. reply duped 13 hours agoparentReally what you'd like to see is a way to write the mount command for each file type (do one thing well) and another command to detect the file type and dispatch accordingly (probably similar to the `file` command), all in user space. The only thing standing in the way of this today is that MacOS doesn't expose a user space file system API. You can do this on Linux, Windows, and BSDs today. (No, file provider extensions don't cut it, Apple devs who read this, please give us a FUSE equivalent, we know it exists). reply stuaxo 2 hours agorootparentI want stuff to work like ZipMagic did in the early 90s/ early 2000s. You could cd into zip files, they would act as directories and files at the same time. I seem to remember Linus saying a file could act like a directory in Linux a long time ago too. Though I don't think Linux has filters for the filesystem like Windows does so implementation might be more tricky. reply Groxx 12 hours agorootparentprevDoes https://osxfuse.github.io/ cover this? Or is there some fundamental issue? (beyond \"it's not built in\") reply skissane 12 hours agorootparentRecent macOS versions do have a general purpose built-in API for user mode filesystems. That API is incompatible with FUSE. The big problem is it is undocumented and you need an entitlement from Apple to use it, and Apple won’t give you that. Apple do have a publicly available API for cloud file systems (Dropbox-style products), but it makes a lot of assumptions which makes it effectively unusable for other use cases. Then there are third party solutions like osxfuse. These have the problem that they rely on kernel extensions and Apple keeps on making those harder and harder, and is aiming to get rid of them; plus, they are all now proprietary licensed, albeit often with a free license for open source use. One approach that does work without any kernel extensions or private APIs is to make your user filesystem an NFS server and then mount that. One competitor to osxfuse does that, but it also is proprietary reply ranger_danger 8 hours agorootparentAccording to the MacFUSE author, their specific approach is not actually undocumented: > Apple has put it in an umbrella called \"unsupported\" (in the kernel interfaces section) ... either Apple will not take this interface away, and if they do, it will be to provide a better interface http://preserve.mactech.com/articles/mactech/Vol.23/23.03/Ma... reply skissane 7 hours agorootparentYes, that’s not what I’m talking about though MacFUSE uses the kernel mode VFS API I’m talking about the undocumented user mode filesystem LiveFS/UserFS/com.apple.filesystems.lifs API which was added in Monterey (macOS 12), and since Ventura (macOS 13) is used to implement the OOTB FAT and exFAT filesystem support. Using that requires private entitlements (e.g. com.apple.private.LiveFS.connection) which Apple (thus far) won’t give to anyone else reply ranger_danger 7 hours agorootparentWhat about the File Provider API? reply skissane 6 hours agorootparentIt is designed for the cloud storage use case (Dropbox, Google Drive, etc) - it creates local copies of files and synchs them with remote ones. Not what you want to do in the general case. reply duped 12 hours agorootparentprevWell that requires a kext so it's a nonstarter, and fuse-t uses NFS which is extremely janky and unreliable on MacOS. The fundamental issue is that macOS doesn't provide an API for this natively. reply skissane 11 hours agorootparent> fuse-t uses NFS which is extremely janky and unreliable on MacOS I was wondering what issues you were talking about, and then I found this - https://github.com/macos-fuse-t/fuse-t/issues/45 - data corruption > The fundamental issue is that macOS doesn't provide an API for this natively. The API is there, Apple just doesn’t want to give anyone outside of Apple the entitlement that lets them use it. I don’t understand why Apple won’t. Well, I understand that would require them to document it, ship public headers, and support it for external developers - but why not? reply duped 7 hours agorootparent> The API is there, Apple just doesn’t want to give anyone outside of Apple the entitlement that lets them use it. If no one can call it it's not an API, it's an implementation detail. And I don't even think its exposed by headers, just alluded to by people who claim APFS is implemented in user space. > I was wondering what issues you were talking about, and then I found this Worse than this, it's possible to DoS a Mac with an NFS server just by refusing to reply to a request. That's unacceptable for a user space file system (although FUSE is only kinda better, in that it can force processes that read from the FS into uninterruptable sleep that prevents them from being killed). > Well, I understand that would require them to document it, ship public headers, and support it for external developers - but why not? Because Apple doesn't give a fuck about developers. Every developer will eventually learn this, but for those that haven't - Apple doesn't want you writing software for their platform, unless you're an Apple employee and on an Apple team paid to do it. It's why their docs suck, it's why to learn anything you need to watch ADC videos instead of read manpages, and it's why all the cool stuff is behind protected entitlements that you can't get or will be limited in using. reply mike_hearn 1 hour agorootparentNo, it's almost certainly not because they don't give a fuck about developers. They definitely do. It's much more likely that they want to: a. Dogfood the API using internal use cases first when they can still make changes to the API without breaking anything. Note that the latest MacOS releases moved some filesystems into userspace using this new API. They probably learned some stuff by doing that. b. Work out how to protect system stability from crappy userland filesystems. As you point out, bugs in FUSE providers can hang apps. c. Work out how such an API interacts with their sandboxing system and how to avoid FUSE-style filesystems being used to subvert the sandbox. This is a common source of exploits in FUSE-style systems and is one of the key learnings from GNU/Hurd: UNIX software is written on the assumption that filing systems aren't malicious and invalidating that assumption creates new bug classes. d. Work out what the most important use cases are and try to ensure those use cases will have a good or at least uniform UX first. Providing a FUSE-like API is presumably also just not a high priority. By far the most common use case in terms of number of users is the Dropbox use case. FUSE is mostly used for toys and experiments beyond that (like filefs). Those matter and I'm sure there are friendly geeks on the Darwin team who'd like to enable those, but Linux also works for exploration. Certainly Apple management would not be happy about an engineer who decided to enable nerd experimentation but undermined the security system whilst doing so. And it's worth remembering that you can have root on macOS. It means disabling SIP and adding a kernel boot arg, but that only takes a few minutes and then you can grant apps any entitlements you like: https://github.com/osy/AMFIExemption That's no good for people who aren't developers, but most FUSE filesystems are designed for developers anyway. reply skissane 7 hours agorootparentprev> Worse than this, it's possible to DoS a Mac with an NFS server just by refusing to reply to a request. I wonder if their SMB/CIFS client implementation has these kinds of issues? It probably gets used more heavily > And I don't even think its exposed by headers Apple (accidentally?) released some of the private headers for this feature in one of their open source releases: https://github.com/apple-oss-distributions/msdosfs/blob/rel/... reply duped 6 hours agorootparentMaybe? It's kind of hard to tell. It's not exactly easy to write any of these servers from scratch to find out. But I wouldn't be surprised - they want app developers to be using the file provider extension API, which is unsuitable for everyone who isn't making a Dropbox clone. That link is very interesting. It doesn't smell like any other Apple API as they're exposing a vtable with good documentation comments. It would be interesting to hack with this with SIP disabled to see how it works. I'm especially curious about how mount/unmount work and how the plugin registers itself with the OS, or what application is the client/host. reply nine_k 9 hours agorootparentprev> why don't they It would make macOS more of a general-purpose OS, would increase the amount of functionality from which third parties would benefit, but Apple themselves would likely not. That would increase the number and variety of tech support requests, ever so slightly but still, and would introduce a few new attack surfaces. Instead, Apple's strategy is to tighten the macOS more and more, and turn it into a specialist OS completely controlled by Apple, with a few companies like Adobe and Ableton licensing access to its internals. reply skissane 9 hours agorootparentApple used to be a lot more developer-friendly company. It is part of what got them where they are now - the fact that so many developers use Macs, which in turn encourages business software vendors to support Macs Stuff like this is of little interest to ordinary users (at least not directly), but appeals to developers By de-emphasising the developer is experience, they are undermining one of the factors that got them to where they are today reply Sophira 5 hours agoparentprevThis already exists - avfs[0] does this as a FUSE filesystem. It's not the most intuitive to use, but it works, and is extensible. [0] https://avf.sourceforge.net/ reply frizlab 13 hours agoparentprevHonest question: How is this useful? I don’t see any use-case where this would come in handy. reply RetroTechie 11 hours agorootparentIt allows you to use any tool available for regular files, on the files-in-files as well. As opposed to extract contents and then work on that (requiring extra steps + disk space). Or be limited to what specialized utilities support. reply TimeBearingDown 12 hours agorootparentprevYou could seed compressed archives of massive text files or similar via BitTorrent while making the contents available to your apps in read-only mode. reply lmm 11 hours agoparentprevThis was a core design feature of reiserfsv4, but Linux ultimately refused to merge it, probably not helped by the whole murdering-his-wife thing. reply skissane 10 hours agorootparent> This was a core design feature of reiserfsv4, but Linux ultimately refused to merge it IIRC, because it contained these strange beasts which functioned as both files and directories - i.e. cat would return data, but then you could cd into them and run ls. Linus (among others) didn’t want to permit those violations of the file-directory dichotomy into the Linux kernel. reply stuaxo 2 hours agorootparentOh that's funny- I remember a much much earlier Linus mentioning how this would he possible in Linux, I didn't know anyone actually did it. I think you really should be able to \"cd\" into any kind of structured data. reply jraph 13 hours agoparentprevIt exists :-) For zip archives, there are fuse-zip and mount-zip which are FUSE filesystem. As an intermediate between OS level and application-level, there are desktop environment level: gvfs for GNOME and KIO for KDE, but they are compatible only in their own ecosystems. reply kybernetikos 12 hours agoparentprevIt's not exactly the same, but nushell provides ways of exploring inside files. reply PMunch 3 hours agoprevOh this is cool! I recently wrapped libfuse in Nim and after porting the 'hello' filesystem example I made one which is more or less exactly this. However my version you pipe data and have to provide a mountpoint, then when it's done it writes the result over stdout. That means you can inline it in a pipe chain but also that you have to make sure to grab the output. At the moment I'm exploring other stuff which could be made into file systems. I've got a statusbar thing for the Nimdow window manager which allows you to write contents to individual files and it creates a bar with blocks on them as the output. It makes it super easy to swap out what is on your bar which is pretty neat. Another tool I've made is a music player. It uses libvlc and when given a folder it reads all the media with ID3 tags and sets up folders like 'by-artist', 'by-album', etc. Each file is named as ' - ' and contains the full path to the actual file. To play a song you cat one of these files into 'control/current' and write the word play to 'control/command'. There's a bit more to it like that like a playlist feature and some more commands, but that's the basic idea. The goal is to have a super-scriptable music player. reply paulgb 12 hours agoprevThis is really neat, but when I saw the headline I got excited that it was something I have been looking for / considering writing, and I figure the comments here would be a good place to ask if something like this exists: Is there a FUSE filesystem that runs in-memory (like tmpfs) while mounted, and then when dismounted it serializes to a single file on disk? The closest I can find are FUSE drivers that mount archive files, but then you don't get things like symlinks. reply speps 12 hours agoparentClosest I found: https://github.com/guardianproject/libsqlfs > The libsqlfs library implements a POSIX style file system on top of an SQLite database. It allows applications to have access to a full read/write file system in a single file, complete with its own file hierarchy and name space. This is useful for applications which needs structured storage, such as embedding documents within documents, or management of configuration data or preferences. Libsqlfs can be used as an shared library, or it can be built as a FUSE (Linux File System in User Space) module to allow a libsqlfs database to be accessed via OS level file system interfaces by normal applications. reply Scaevolus 12 hours agoparentprevNot purely in-memory, but something like https://github.com/jrwwallis/qcow2fuse maybe? It's clunky compared to OSX's DMGs, but if you squint it achieves similar ends. Otherwise you could achieve this with a tmpfs wrapped to serialize to a tarball (preserving symlinks) when unmounted. reply ranger_danger 12 hours agorootparentOh nice, I didn't even know that existed. I've been using qemu-nbd and parted by hand and it gets cumbersome, so this might help a lot. Thanks! reply hnlmorg 3 hours agoparentprevWhy does it have to be in memory? I’m sure you’re already aware of this, but there are all kinds of very real scenarios that could lead to corrupted data if you’re only flushing the buffer upon unmounting. Sounds like you’ve got an interesting problem you’re trying to solve though. reply khc 12 hours agoparentprevdoes it have to be fuse? cant you mount a disk image with loopback reply andrewflnr 12 hours agorootparentWouldn't a disk image have a fixed size? It could be a pain to resize. reply ranger_danger 12 hours agorootparentqcow2 is auto-expanding reply metadat 12 hours agorootparentprevBut will the disk image be fully stored in memory? No.. not with loopback. Either that, or it won't be mutable in memory with commit on unmount. reply generalizations 9 hours agorootparentPut the disk image inside a ramdisk and it's in memory. Write a script for saving to physical disk when dismounting, and you're done. reply ranger_danger 12 hours agoparentprevI can't think of anything _exactly_ like that, but I think you can get close by just copying some type of image file to /tmp and then moving it to disk when you're done after unmounting. reply AgentME 11 hours agorootparent/tmp isn't stored in memory; it's usually a normal on-disk filesystem that's cleared regularly. You want /dev/shm instead, which is a purely in-memory filesystem on normal Linux systems. reply codetrotter 11 hours agorootparent> /tmp isn't stored in memory It is if your system uses tmpfs for /tmp https://en.wikipedia.org/wiki/Tmpfs reply throwway120385 11 hours agorootparentThe point they were trying to make is that it doesn't have to be, and it isn't in several of the Linux systems I've used over the years. Assuming that it is is a bad idea. reply arjvik 8 hours agorootparent/dev/shm always is though reply jasonpeacock 15 hours agoprevYou can also mount your git commits as a filesystem: https://jvns.ca/blog/2023/12/04/mounting-git-commits-as-fold... (previously: https://news.ycombinator.com/item?id=38527866 ) reply amiga386 14 hours agoparentAll you need now is a giant pile of rules for which revisions to select and you have the unholy demon that is Rational ClearCase reply skissane 11 hours agorootparentI always thought Oracle ADE was a cooler demon. Shame the internal talk about productising it never went anywhere. reply TheGlav 14 hours agorootparentprevWhat!? you didn't add a versioned database layer on a server with code stored in clearcase that stored those ClearCase config specs to manage the configuration of your config specs to manage the configuration of your version control system that had your application configuration in it?! How did you even operate? /s reply purple-leafy 2 hours agoprevWhen I saw the title I thought it was a meme. But wow what a clever idea. Not sure id ever need to reach for it personally as I do most data processing in a higher level language, but I can imagine people can find use cases. Nice out of the box thinking reply timrobinson333 1 hour agoprevIt's an interesting idea but I think the usefulness would be greatly enhanced if it could handle json arrays; most needed json structures contain array elements in my experience reply compressedgas 14 hours agoprevAlso the Parts-of-file File System: https://www.usenix.org/conference/2005-usenix-annual-technic... reply alephaleph 12 hours agoprevReminds me of Omar Rizwan's TabFSreply sambeau 15 hours agoprevHa. I did this back in 2003. It's surprisingly fast, and makes it simple to do granular locking. I used it as a per-user database for a web-templating language for a giant web-site building tool. reply Edmond 15 hours agoprevIf you're intrigued by this then Solvent-Configr might be of interest: https://aws.amazon.com/marketplace/pp/prodview-i3ym46leenag4 It uses file system mechanics to model objects, meaning you can design object based solutions that support file system style navigation. Demo: https://youtu.be/XgTgubZQPHw reply freeney 15 hours agoprevThis looks awesome, I need to give it a try asap. I can very well see myself using this to navigate or search inside JSON files reply waldrews 7 hours agoprevCould this be used in Windows by exposing a Samba file share from WSL or Docker? reply chuckadams 13 hours agoprevNeat. Now how about a filesystem that takes a directory of files and exposes it as a single json file? You could call it the Filesystem File, and mount it in the File Filesystem if you wanted... reply isoprophlex 15 hours agoprevFor fuck's sake! Not everything needs to be a file! (This is a joke. I love the idea and execution.) reply vidarh 14 hours agoparentDaniel Stenberg, of cURL fame, co-write an Amiga-editor called FrexxEd where the open buffers were exposed as files in the filesystem. Meaning you could write any shell script to manipulate an open buffer (not that important as it also exposed all editor functionality both via IPC via Arexx and via FPL - a C-like scripting language), and that you could e.g. compile without saving (that was very helpful on a system where a lot of people might only even have a single floppy drive, and where being able to have the compiler in the drive and compile straight from the in-memory version in RAM so you didn't have to keep swapping floppies was highly useful (just remember to save before actually trying to run the program - no memory protection...) reply salgernon 13 hours agorootparentClassic MacOS in the 80s had \"MPW\" macintosh programmers workshop - that treated open text windows as files and selections within the windows as files, so it wasn't uncommon to have a portion of an otherwise documentation file have a \"click here and hit enter\", which would use the selected text as stdin for some semi-ported unix tool. (no memory protection or multitasking, so true pipelines with backpressure didn't work) reply bombcar 9 hours agorootparentBBEdit has something akin - you can select text and run a Unix command on the selection via temp files. Very useful reply fsckboy 8 hours agorootparentprevI want a webbrowser that does that, lets me shell-cd into each tab as a directory reply mypalmike 14 hours agoparentprevI see what you did there. reply secwang 10 hours agoprevremind me of djb's envdir reply agumonkey 12 hours agoprevAll I see is a generic tree walk mechanism, here implemented in folders/files, but in plan9 it's .. plumber ? reply ThinkBeat 14 hours agoprevNo XML, Excel,PDF or CSV support yet. reply IlliOnato 6 hours agoparentI guess support for XML would be tricky, because XML is just way more complex format than the ones already supported. It is still essentially a tree, but with additional structure. Representing elements and their contents is easy enough. But attributes, comments, processing instructions, entities... And remember, an XML document can include a DTD (it does not have to be in a separate file). To present it as a file system in a useful, non-convoluted way? I will be very, very interested if it's possible, but not holding my breath. reply eyelidlessness 5 hours agorootparentOn the one hand, I can’t help but point out you forgot to mention the other big inherent complexity that would make XML-as-FS a uniquely complex beast: namespaces. On the other hand, I can’t help but point out that a related technology comes very close to demonstrating how you might map XML to a file system: XPath. Probably the biggest issue would be syntax, and again largely due to namespaces. reply yjftsjthsd-h 15 hours agoprev [–] I would gently suggest naming it filefs or something; ffs already means https://man.freebsd.org/cgi/man.cgi?ffs(7) That said - good idea/approach; seems like an excellent way to cleanly extend the unix approach to structured file formats:) reply wegwerff 15 hours agoparentalso https://en.wikipedia.org/wiki/Formatted_File_System and https://en.wikipedia.org/wiki/Flash_file_system and kind of https://en.wikipedia.org/wiki/Amiga_Fast_File_System Four file systems named ffs; ffs is popular for file systems reply tambourine_man 14 hours agoparentprevThere's another expansion to that acronym that I can think of. I think the joke is implied. reply galkk 14 hours agoparentprev [–] Op’s ffs do not target FreeBSD and it l seems like referenced system is FreeBSD only. Claiming naming rights is a stretch here reply eichin 14 hours agorootparentThat's ahistorical. FFS is the berkeley Fast File System, from BSD 4.2, in 1983. reply yjftsjthsd-h 14 hours agorootparentprev [–] FFS predates FreeBSD and is in some capacity supported by all 3 major BSDs. I'm fairly confident that Linux actually supports it through the ufs driver ( https://github.com/torvalds/linux/tree/master/fs/ufs ); whether the use of different names in different places makes it better or worse is an exercise for the reader. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "ffs is a file filesystem that lets users mount semi-structured data such as JSON on a Unix filesystem, allowing manipulation with standard shell tools.",
      "It supports JSON, YAML, and TOML formats, enabling in-place file editing, requiring FUSE on Linux and macFUSE on macOS, and licensed under GPLv3.",
      "Developed by mgree, ffs offers a different approach for command-line data processing compared to tools like jq and gron."
    ],
    "commentSummary": [
      "The debate focuses on enabling user-accessible filesystem features on operating systems like macOS, facing challenges due to Apple's API restrictions and reliance on third-party tools such as osxfuse.",
      "Users are frustrated with Apple's limitations for external developers, leading to concerns about reliability and data integrity, prompting suggestions like leveraging NFS.",
      "Discussions also include innovative ideas like mounting Git commits as a filesystem, treating buffers as files, and mapping XML to a filesystem with XPath technology, exploring technical details and potential pros and cons within the tech community."
    ],
    "points": 254,
    "commentCount": 72,
    "retryCount": 0,
    "time": 1714498992
  },
  {
    "id": 40218463,
    "title": "Penpot 2.0: The New Web-Based Open-Source Design Tool for Seamless Collaboration",
    "originLink": "https://penpot.app/",
    "originBody": "Penpot 2.0 release is out now! Find out more Product Developers Community Resources Log in Sign up for free Penpot 2.0 release - See what's new Star Design and code beautiful products. Together. Penpot is the web-based open-source design tool that bridges the gap between designers and developers. Sign up, it's free! Self-host install Goodbye \"lost in translation\" and hand-off drama When designers and developers use different tools, frustration sets in. designers' vision gets lost, collaboration suffers, With Penpot, designers know their interfaces are already expressed as code. Developers can then ship scale designs faster. Penpot is a powerful design tool Interface Design Flexible layouts, design systems and custom fonts Prototyping Interactive flows, interactions and transitions Feedback & share All stakeholders stay involved Code inspect Specs, CSS and HTML/SVG markups See Design features Design & code collaboration for real Penpot expresses designs natively as CSS, SVG and HTML. Developers feel right at home in the interface. The whole team enjoys one seamless workflow. No more handoffs. See Collaboration features Open standards & Open Source You fully own your work and your tool for any present or future projects, no matter your team size. The flexibility of an API & webhooks Whether you use the browser or your private instance, you can integrate Penpot with your existing dev toolchain. They love Penpot Tens of thousands of organizations of all sizes proudly use Penpot, including many popular open-source projects. I wanted to give @penpotapp a try for my product team and self-host it, and I’m honestly amazed at what the team has done to make this platform accessible. Such a game changer for open source design. Viva, open source and Penpot! Angela Oduor @AngieNicoleOD Oh my gosh - I love it. The controls felt very intuitive to me - way more intuitive! They map nicely to the mental models of actual CSS. I LOVE the wrapping options as well. I also really appreciate how developer-friendly this is, so hand-off becomes simple! Brett Haymaker @BrettHaymaker Building a design tool on top of web & dev standards is super clever. @penpotapp Imagine autolayout behaving like css flexbox and no more design & dev back and forth. 🪄🤹 Using all these open standards. Chef💋 Sil Bormüller @svorklab More love Join an unstoppable community Libraries & Templates Create, share or download a wide range of templates or libraries. Use them in your Penpot projects. Check them out We believe in open design and code collaboration. Contributions Everyone is welcome to help each other with code & design ideas, libraries, templates, integrations, tutorials, and more. Check Penpot's Community space Penpot Fest The conference where designers and developers come together to build a collaboration without constraints. Go to Penpot Fest site Join the movement Stay in the loop Receive product and Community updates! We have not been able to validate your subscription. Thanks for subscribing! Check your inbox for your sign up confirmation I agree to receive this newsletter and know that I can easily unsubscribe at any time. Get our newsletter Designers and Developers love Penpot Sign up for free Self-host install Design as code Product Design Code Collaboration Integrations & API Self-host Features Pricing Resources Libraries & templates Tutorials Community Dev diaries Help center Legal Terms & conditions Privacy policy Cookie policy Data processing agreement Company About Blog Wall of love Penpot Fest Kaleidos © 2024Made with LOVE and Open Source Star",
    "commentLink": "https://news.ycombinator.com/item?id=40218463",
    "commentBody": "Figma OSS Alternative (penpot.app)232 points by noashavit 8 hours agohidepastfavorite67 comments thallavajhula 4 hours agoIt is hard to replicate or actually compete with proper proprietary design tools. There's a ton of UX and performance enhancements that are done over the years and IMHO OSS can never get to that. I'm speaking specifically about design tools. There have been a lot of tools that have been around with not a lot of adoption. I like and appreciate the effort and it is definitely a massive effort to build these OSS alternatives to design tools, but it is hard to actually pick, use, and make them your daily drivers. Design tools is one of those categories of software where proprietary is definitely a better choice to choose over OSS. reply onion2k 2 hours agoparentI don't think that matters. If a tool isn't as good as the leading closed source commercial offering there are still good reasons to use it - you might not get enough value to make it worth paying, using open source might be an ethical choice, the open version might still be good enough, and so on. It's not like there aren't commercial design tools other than Figma either. People choose to use and pay for those tools instead of Figma. The idea that there's one 'industry standard' choice and everything else is wrong is obviously nonsense. Having an OSS option as well is only a good thing. reply drschwabe 3 hours agoparentprevInkscape is a daily driver for me and its OSS It has its quirks and even some annoying bugs but where it excells its IMO way better than what any competing/proprietary design tool can do (vector and bitmap exporting, vector+bitmap combined layering, shape/colors/text layout, PDF editing/creating, vector pen tool, etc). I use it to create UI for games & apps and more generally to build sprawling UX scenarios and concept flowcharts. In more recent builds its performance has become quite good which was a problem it had before. Granted, lots of room for improvement still particularly wish it had more natural flowcharting capability. reply jszymborski 3 hours agorootparentInkscape is amazing, and it's had incredible growth. I remember using it 5+ years ago and it was incredibly buggy and the UX was terrible. I now use it extensively and it rocks. reply drbig 2 hours agorootparentConcurring that Inkscape today is awesome, while it definitely was not a decade ago (how the time flies... and decade ago it was already... ten years old or so!). Disclaimer: I'm an engineer not a UX/UI designer, and I use Inkscape mostly for graphic designs and the odd super-simple CAD stuff where I don't think starting qcad is worth it. Still, I'm immensely happy that I can just get stuff done in Inkscape and that everything inside makes sense and is generally discoverable \"solely by logic\". reply purple-leafy 2 hours agorootparentprevNice hearing about Inkscape, I have to give it a try now that I’ve quit Paydobe. Is Inkscape good for svgs? reply Vinnl 2 hours agorootparentSVG is Inkscape's native file format (albeit it adds some of its own extensions by default), so yes. reply drschwabe 2 hours agorootparentprevIndeed, that is primarily where it excels. Your layered source files are SVG and you can export to SVG (and you can import in SVG obviously). The bitmap selection/exporting is also excellent as such you can have these massive vector canvases (with any number of bitmaps and vector shapes/graphics mixed in) and quickly export any slice or selection you make without having to resize the canvas or copy/paste somewhere - and it will remember the export path when you click on the object or layer again later (aside from a bug with symlinks on Linux); ideal for iterative work/exporting revisions to clients or colleagues. reply chefandy 2 hours agorootparentprevYeah it's great for SVGs. I still use illustrator because the type tools are a lot easier to work with for constant use,I already have a CC subscription grandfathered in at a cheap rate, and some things in it I'm just plain-old used to... But I could deal with Inkscape if I decided to dump Adobe. Gimp not so much. I'd definitely be buying affinity's photo editor or something for raster work. reply keyle 4 hours agoparentprevPeople have been tooting the same horn for decades. And it's true, but if some OSS becomes mainstream, like Blender, all the sudden, the UX gets fixed. reply eviks 2 hours agorootparentBad UX is one big reason for not becoming mainstream reply pjmlp 3 hours agorootparentprevBlender was a commercial product before becoming OSS, and some of the original folks are still around. reply KronisLV 2 hours agorootparentI'm not sure how I feel about Blender, the UI in the older versions was notoriously niche if not outright confusing. Here's a video comparing the versions in a simple example task: https://youtu.be/Vz_GxPMActM Whatever caused it to succeed and catch enough attention to be continuously improved, I'm thankful for that. Same as with game engines like Godot and other similar FOSS projects, maybe even LibreOffice not dying like OpenOffice did, though that's a whole tale in of itself. Actually, I'll similarly celebrate improvements in proprietary software, too. Then again, I still think that Inkscape and some of the other software that gets touted as good is actually not very usable, so I'm a bit opinionated. reply jampekka 2 hours agorootparentprevBlender has been open source for over 20 years. UX of the proprietary version was dismal. reply omnimus 2 hours agorootparentprevIts just proves that UX can get better. Blender has had particularly bad UX (when it was commercial soft) and 3D is one of the most challenging software. Its just mostly about focus of the project and agency of people trying to make UX better. reply yurishimo 19 minutes agorootparentYea, the question really is will the OSS tool survive long enough to have the UX fixed. In Blender's case, yes, but that's not been true for many other OSS projects. Just look at how many dead electron projects are floating around the internet. Arguably it's more important to create software that solves a problem first so there is an incentive for people to keep using it. But the less people use it, the longer it will take for the UX to improve organically (see Blender and Inkscape). reply ec109685 3 hours agoparentprevGitLab is an example of a company that started by heavily being influenced by GitHub and building a business around it. Figma is stupid expensive, especially when you onboard developers, so it seems like a GitLab esque play could be disruptive. I wonder if over time a tool that blends the developer, product and design experience more seamlessly will catch on. Having reactive code that is driven by the underlying design in a cohesive way perhaps. reply whywhywhywhy 42 minutes agorootparentBad thing about Figma is it isn't clear at all that you're causing new subscriptions. If you just share with someone you begin incurring more subscriptions and an admin has to go through and prune them every so often, it'll also happily charge you for empty seats that don't even specifically get filled with new shares, it creates new seats instead. reply berkes 3 hours agoparentprevHave you tried penpot? Or are you talking about that time you tried gimp or Inkscape? And what about Blender? reply whywhywhywhy 40 minutes agorootparentBlender is very impressive proof that with a few years of hard work you can go from one of the worst examples of bizarre \"open source ui/ux\" into something very usable. Never would have thought it possible a decade ago. reply Culonavirus 2 minutes agorootparentA few years of hard work made possible by substantial injections of cash by a lot of the big players in the industry. Epic, Nvidia, Amd, Amazon, Intel, Meta etc. I'm sure the $150k/mo of continuous donation support also helps. In this aspect, Blender is a very unique OSS project. reply croes 32 minutes agorootparentprevWasn't it closed source UI/UX from Not a Number Technologies? reply danmur 1 hour agorootparentprevOr Krita, just started playing with that recently and WOW reply mrweasel 2 hours agoprevWhat is the fascination with Figma? Maybe my expectations are just wrong, but as long that it cannot generate reusable HTML templates and CSS from the mock-ups it's just a fancy Microsoft Publisher which doesn't make life easier for anyone but designers. If anything it only serves to move designers further away from the developers doing the implementation. Am I just holding it wrong? reply notpastori 1 hour agoparent> doesn't make life easier for anyone but designers It may sound crazy to a developer, but Figma is a design tool for designers whose features and workflows respond to the needs of, indeed, designers. reply wordofx 1 hour agorootparentDesigners sure do seem to complain about figma a lot tho. reply Lalabadie 20 minutes agorootparentDesigner here. I have lots of things I can point out for Figma to address or change, but the reason I have these off the top of my head is: - out of all tools, I picked Figma as clearly the best for UI design - I've used it enough that I run into multiple edge cases and limitations - it's my job to identify such limitations and document how they might be addressed by changing the product. Addressing the root comment, Figma is a design tool with basic prototyping offered, it's not not a prototyping or web publishing tool. It's why it's not judged as a Frontosge (or rather 25 years later, Webflow) alternative. reply Yaina 11 minutes agorootparentprevDoesn't ever profession complain about the tools they use? reply sgraz 1 hour agorootparentprevDesigner here. They really shouldn't because it is de facto the industry standard and no other software even comes close. Why do you think Adobe was willing to buy it for 20B reply thiht 36 minutes agorootparentprevDo they? The designers I’ve worked with all absolutely loved Figma. reply wordofx 18 minutes agorootparentDesigners I’ve worked with love it. But they complain about it all the time. reply thiht 14 minutes agorootparentSeems about right! Do you even love a tool if you don’t complain about it? reply nayroclade 1 hour agoparentprevNo skilled engineer I've met has had any issue turning a Figma design into a HTML/CSS. That's their job. If someone protested that they couldn't reproduce a Figma design without it spitting out HTML/CSS for them, that would be a serious red flag about their abilities. reply nxicvyvy 1 hour agorootparentI have no problem hacking up some figma design in html / react. The problem is that it isn't reusable, it isn't clean components, styles are copy pasted from figma to the component and unlined with BEM. The problem isn't a skill issue on my end, I could build it cleanly, I just don't know why I would when the other 1200 engineers I work with don't have any incentive to do so. Figma is a shit version of Dreamweaver, a html based WYSIWYG from the 00s. reply joerick 1 hour agorootparentFigma made a mistake including the absolute positioning in their Dev mode. It's never useful, and leads to confused engineers like this. Figma is a design tool. It is used by designers as a way to build the visual mocks of software. It's not building HTML under the hood. As a frontend engineer, I have to interpret the designs given to me and translate the layouts into something that will be responsive, cope with different data, etc. that part is the job of a frontend engineer, and so far there is no tooling that solves that. The Figma dev mode helps shortcut some of that work, by providing easy copy-paste for attributes like background, border, fonts, spacing etc. it's a timesaver. But you should never copy the whole thing. reply nkmnz 1 hour agorootparentprevfigma has a perfectly capable component system, so maybe the fault is on the side of your designer not caring about your component needs. reply joerick 1 hour agorootparentIf a project is really mature, reusable components in design tools can work. But for early stage stuff, they can quickly prove more trouble than they're worth. The designer's job is to think creatively, on behalf of the user, through the entire system, the states, the transitions. Faffing around with reusable components gets in the way of the right kind of thought, IMHO. It's like the design version of big complex class hierarchies. Done too early, they will really slow you down. reply bbx 1 hour agoparentprevI'm both a designer and developer, and even as a design-only tool, Figma is superior to all other web design apps I've used. Things like auto layout, component variants, nested instances, global variables… are just fantastic to use. It's really well thought out and still incredibly performant. The only other tool that was close is Sketch, but the Figma experience is just better in every sense. I only wish I could use it offline. reply pavi2410 2 hours agoparentprevYou are not wrong. Designer-developer handoff isn't smooth. Use of hard-coded pixel values throughout is difficult to get around. They even made the Dev mode a paid feature last I remember. reply zarzavat 1 hour agoparentprev> If anything it only serves to move designers further away from the developers doing the implementation. Given the quality of many developer-designed UIs this can only be a good thing. Developers often prioritize implementation expedience over user experience. A lot of developers think that “clean code” is as important or more important than user experience. The job of a designer is to tell them that they’re wrong. reply j-pb 57 minutes agorootparentDesigner often prioritize design over user experience. Custom mouse cursors, unaccessible images, non-obvious buttons, non-standard interactions, strobing lights, a million parallaxes. A lot of designers think that \"pretty\" is the same as \"usable\". Most devs I know, don't care about \"clean code\" itself, what they care about is _robustness_. If getting something to work requires thousands of lines of html, css, and javascript, then I can guarantee you that something is gonna look broken on some browser in some viewport size. When designing you need to keep any mediums limitations in mind, be it paper or the web. The medium is the message. Browsers are buggy implementations of mediocre standards, if you design oblivious to their limitations things will inevitably be buggy, ugly and weird. Designers can't just live in an ivory tower of auto-layouts that actually work, and have devs magically weave their dreams from garbage. If we just replaced the web with figma (or if Figma had a runtime like Rive, to just run the entire thing with the web as the platform), I'd be more than happy, not being editor-first is the biggest flaw of the web, and figmas auto-layout is a lot less sucky. But until then, (good) designers have to learn the basics of the tech stack too, and figma does not help in that department. reply croes 29 minutes agorootparentprevGiven the recent size and snappiness of modern UIs I think it's a bad thing. Too much design, too little value. reply littlestymaar 1 hour agorootparentprevBoth as right, and wrong at the same time: developers have the knowledge of what's needed to run the service, and they know that if you make things too complicated it will be too costly to maintain and the organization will grind to halt. But the designers have the view of the users and they know that if the product is too unergonomic to use, there won't be any users to pay the bills. Both need to understand the other's POV in order to ship sustainable software that is actually used. reply zarzavat 12 minutes agorootparentDevelopers often need to be challenged to find a solution to a problem that on first glance seems infeasible. The first instinct of developers is not always correct, what appears to be difficult may turn out to be easy. Of course some things do turn out to be legitimately hard but when developers design things they put too much trust in their instincts. Developers sometimes also need to be forced to accept complexity that they don’t personally see the point of. For example animations and transitions may appear pointless to developers as they don’t have any function: no APIs are called. However for users, especially non-technical users, animations can be very useful to show the flow of how various UI modes are connected, and to communicate subliminally as many users don’t read text prompts. If you let developers call the shots then they will choose whatever UI makes the code as simple as possible, because they spend more time looking at code than the actual product, in contrast to users who never see the code at all. reply emayljames 1 hour agorootparentprevAs a dev I second this. Dev's are usually far removed from any knowledge of design, hopefully that changes. reply croes 28 minutes agorootparentAnd designers seem to be far removed from perfomance of smartphones and download speed. reply nicoburns 1 hour agoparentprevIt's much better than publisher or photoshop for creating UI designs because it allows you to create reusable components that adjust properly when you resize them, etc. That's incredibly useful even if the output format is a flat png. reply Folcon 1 hour agoparentprevYou're sort of missing the point? On that axis it's bad, on the axis of designers and people who value visual tools like that it's productivity and ease of use is off the charts, the number of people who I know jump on and find using the tool frankly joyful surprises me at times. It's executed very well for what it's doing, the fact that you can't export the outputs into code is in some sense incidental, because it's not a requirement that anyone I know who uses it cares much about. reply doix 1 hour agoparentprevEh, it's a pretty huge step forward from working with PSD's and trying to convert them to designs. I guess it depends on your designers and how closely you work with them to make sure the Figma designs make sense. But for us (at Kitemaker), we designed a bunch of parameterized components in Figma and then implemented them in code so that they match up. Then when there's a screen with a button, I can click the button in Figma, see the properties and convert it to React. It's pretty quick If you're using flex for your layouts, it matches pretty well with Figma's auto-layout stuff. So you can click on a container and see that it's a flex row with some padding and justify-content center. When I start seeing components in a bunch of nested containers, I know I need to pay attention, because just doing the usual flex stuff will result in things that don't quite line up due to whatever. You can define a bunch of colors in Figma and have them matchup in code. So when I see something is gray10, I know I use var(--gray10) in code. There are probably more things that I take for granted that I can't think of off the top of my head. That being said, it's not a magic bullet. If the designs don't have reusable components, with standard colors and everything is laid out by hand with specific pixel values instead of auto layout, then it's probably the same as just designing from a PSD. Fuck devmode though. I don't get it, as far as I can tell they just took functionality that existed before and split it into two tabs so I'm constantly clicking between them to find what I'm looking for. I get that there's some pricing thing or whatever, but I would honestly just rather pay more for the old interface. tl;dr I like it, I think it's a step forward from the PSD days. Maybe your designer is holding it wrong, maybe you are holding it wrong or maybe it's just not for you. reply schpaencoder 2 hours agoparentprevI feel the same reply lukew3 4 hours agoprevI switched to penpot for a little bit after the Adobe acquisition was announced because I figured Figma as we knew it would cease to exist. However, I found that there were little differences between the two that gave it a learning curve and I noticed that I missed little niceities in Figma. I went back to it after a few weeks and after the acquisition was revoked, I feel better about sticking with Figma. I love the company and the story behind it's creation, and plan on continuing supporting what I think is a better product. I'm happy that penpot exists though to keep Figma in check from excessively pricing their product. reply danmur 1 hour agoparentI shudder to think what excessive pricing might look like to you :) reply adpirz 4 hours agoprevOne of the things I was gobsmacked by the first time I used Figma years ago was its performance, which has only gotten better with time. From what I understand, they've built some custom stuff for WebGL for their renderer. Here it looks like it's powered by React. I'm curious if anyone's used both and can compare the performance of the two. reply throwaway0665 3 hours agoparentFigma is the gold standard when it comes to performance and optimization, and is basically a native app that happens to be inside your browser. The co-founder and previous CTO Evan Wallace also created esbuild which powers most of the modern bundling tools. The only other web app I can think of doing the same thing is Google Docs, which uses it's own canvas based renderer with an svg overlay for accessibility. I feel it's telling that Google thought leaning on their own browser (through HTML/CSS) wasn't even good enough for typesetting. reply robertlagrant 1 hour agorootparentGoogle Docs used to be Writely though; they acquired it. It predates Chrome. reply nasso_dev 1 hour agorootparentthe switch to canvas rendering is recent though https://workspaceupdates.googleblog.com/2021/05/Google-Docs-... reply robertlagrant 1 hour agorootparentOh! I didn't know that. Fair enough - that does rather make the point. reply purple-leafy 2 hours agorootparentprevThis Evan Wallace fella sounds like an accomplished individual reply croes 26 minutes agoprevWith all these \"wonderful\" tools and frameworks how comes that the UX of the web is less and less pleasing? It's like we keep improving the brushes to please the artists but the pictures are crap. Since the rise of web applications I mainly learned one thing: Waiting. reply vedmed 2 hours agoprevLunacy does this for free. And you don't need to log in. And it has a native linux client. https://icons8.com/lunacy reply margorczynski 6 minutes agoparentBut from what I see it is closed and proprietary? reply memsom 1 hour agoparentprevWow - it sounds very good on paper. It supports most of the features I would need to migrate to it also. reply asicsp 4 hours agoprevPrevious discussions: * Penpot 2.0 Released https://news.ycombinator.com/item?id=39978781 (131 points21 days ago27 comments) * Penpot: Open-source design and prototyping platform https://news.ycombinator.com/item?id=32851262 (1145 pointsSept 15, 2022128 comments) reply dudus 4 hours agoparentOn these previous comments it seems like no one bothered to try it. I wonder if we'll get some people with some better feedback this time around because the product does look stunning. reply bostonvaulter2 44 minutes agoprevDoes anyone know what license this is released under? I looked for a few minutes on the site but I didn’t find it. reply MarceColl 41 minutes agoparentMPL-2 reply tiku 2 hours agoprev [–] Penpot has a better export to code. I don't make a lot of graphical websites but I would use this if I had to make a lot of custom graphical pages with lots of code / functions in it. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Penpot 2.0 is a new release of a web-based open-source design tool that promotes collaboration between designers and developers.",
      "Users can self-host Penpot, benefiting from its integrations, open design approach, and supportive community, with testimonials highlighting its user-friendly controls and developer-focused functionalities.",
      "The tool leverages web and development standards cleverly to enhance the design and development process, fostering a seamless workflow, as showcased in the Penpot Fest conference fostering collaboration between designers and developers."
    ],
    "commentSummary": [
      "The dialogue contrasts open source design tools like Inkscape and Penpot with proprietary choices like Figma, emphasizing advantages and challenges.",
      "Inkscape is commended for its ease of use with Scalable Vector Graphics (SVGs), and Blender's transition to open source is acknowledged.",
      "Collaboration between designers and developers is underscored as crucial for user experience (UX) in software development, showcasing differing views on Figma versus tools like Penpot for UI design."
    ],
    "points": 232,
    "commentCount": 67,
    "retryCount": 0,
    "time": 1714526230
  },
  {
    "id": 40213400,
    "title": "Europe's Entrepreneurial Wake-Up Call",
    "originLink": "https://klinger.io/posts/eu-acc",
    "originBody": "🇪🇺 Dear Europe, please wake up – eu/acc Apr 30, 2024 · 13 min read · 24,972 views I lived in SF for five years. Started companies in multiple countries in Europe. I invested in more than a hundred companies globally from Brazil to India. At this point I feel like I have a good comparison of different ecosystems. Europe is special to me as I consider myself a proud European, but damn we need to talk. I am equally extremely bull-ish on Europe and equally extremely bear-ish. On one hand I believe we are on our clear path to fall from #1 to #4 in the world. On the other hand, I don't believe we are as doomed as people on US Twitter make us out to be. Intentionally I don’t want to do Brussels or EU-ranting; I don’t want to do pure stats comparing or making speeches about the importance of robotics or AI, neither do I have the goal of suggesting outlandish changes. We need actionable improvements and fix how we think about Europe. So, let’s go… Here my POV: We started to believe US propaganda about Europe “Europeans lack the mentality and are risk averse” “They don’t want to work as hard” “They favor work life balance” “They are constantly on vacation” “…and that’s the reason they are losing” None of these things are true. Let me show you what i mean… “Europeans don’t work hard enough” Eastern Europeans work harder than Americans. Even Italians work more hours than Americans. And based on my experience in the US, I honestly think that the US numbers are overstated. US folks love talking about how hard they work. And honestly with service workers and blue collars I believe it. But not in tech. In SF you frequently hear big tech people talking how hard they work, while they queue 30mins for a coffee at Blue Bottle and chitchatting there for another 20mins. You will get into a discussion in your WeWork about how much grit being a founder requires, an hour later you end up alone at 6pm on your floor. You will hear from founders how many late nights they need to pull, but with late nights, they mean investor dinners. Do American founders work hard? Yes definitely. But all founders do. That’s their job. But Americans definitely love talking about how hard they work; way more than we do. And let’s say for the argument I am wrong and we will believe all the numbers. The numbers aren’t that far off, even when compared to “after 6pm, please don’t talk to this employee or we sue you ja?! Germany”. “Europeans lack the risk mentality” Personally, I don’t believe it because I know that 1/5 of all US unicorn founders are European. If they’d want to avoid risk so much why do so many go into so much risk to go to the US? But this isn’t even my main pet-peeve. My main headache is: Let’s say it’s true. Let’s say Europeans are more risk averse… Why? And more importantly why do we act as if we couldn’t change that? Mentality isn’t genetic. This isn’t hardwired into our bones or seeded into our water. This is an outcome of a system that favors being more careful. Failing in the EU has the same downside as in the US, but their upside is way bigger and more importantly the acceleration is way higher. If we improve the system the mentality improves. Don’t believe me? Go to India. The mindset of founders there switched from \"i have to leave asap and nothing will ever change here\" to \"we are going to be one of the top three world powers and everyone should come here to start companies\" in literally less than 10 years of strong economic growth and business success stories to follow. Mentality is an outcome of a system. Let’s change the system. Make success more likely and people will believe that they can be successful. \"They have a too comfortable life… you need hardship to succeed\" If it would be true that you need to come from hardship to succeed then US VCs wouldn’t fund every Stanford grad born with a silver spoon in their mouth. Americans love their hero-arcs so much that people manage to spin anything into a “coming from nothing story” – even if they got their first investments from their uncle and worked for free in the “garage” of their parents multi-million-dollar house in Palo Alto. Yes, to start companies you need to grind. You will need to work hard, because if you don't someone else will. But needing the fear of existence over you to succeed is only true if you don't know about survivorship bias. “The Taxes are too high and people are not motivated because of this” Have you seen the Californian taxes? The EU isn’t far off. And btw you can easily pay ridiculously low taxes in Europe if you want to optimize for it. If you optimize for it, half the amount of US-taxes are easily doable in multiple European countries. And that’s without crazy optimizations yet. If this was the only criteria everyone would flock to those tax optimized places in Europe. “Well SF is better” I don’t disagree. SF is a unique place. We currently don’t try to get on the level of SF. We are trying not to fall behind China, India and random second- and third-degree hubs in the US. I highly recommend everyone in tech to move to SF once in their life. Learn and then come back and build their life’s work. So, here’s my POV: The problem in Europe isn’t taxes or mentality. It’s friction. What do you need to start a large company? Founders, ideas, customers, investors, etc etc. Sure. But more importantly… You need early acceleration. You need momentum towards your goal. You need traction. You can think of this as customers, product insights, investor interest, networking success, etc. You need early acceleration to reach escape velocity. If every day is 1% harder for you than your competitor who will win? Your competitor. And in global markets where frequently 1-2 companies become the dominant player in a market this means you will not be a bit smaller. You will fight for scraps. This is what’s happening right now in Europe. The problem is not that regulation 1 or 100 is too much. The problem is that every country has different regulations, creating a mess of complexity if you want to act across a larger consumer market and make it impossible for standard solutions that remove early friction to emerge. So, what do we need to change First, we need to stop believing the US meme about Europe. And second, to do this we need a system where they are not true. To get there we need improvements. I don’t want to write a big speech about robotics, AI, climate, or space-tech. About ambition, tolerance for risk, or people who want to build outlandish ideas. We’ve got all of that already. We need to help them. I don’t want solutions that are “one unified Europe under ABC’d rule” or “complete control by Brussels”. I am looking for first steps and pragmatic solutions. Simple things that have impact over time, and more importantly we can build on top of. Here are my two suggestions – no big speech no big unreachable ideal goal – two simple suggestions as a starting point and if you disagree with those, please really really explain to me why: 1) We need an EU Inc – desperately The US has its state Delaware as de facto standard for legal entities for startups. When people say US Inc, they mean Delaware Inc. This might sound like a small thing, but it has a lot of implications. With one fundament on which you can start establishing other standards on top of it. Eg you can create standard documents like the YC SAFE or even software like AngelList on top of that. “Well, we have similar documents for German GmbHs as well…” Let me stop you right here. I invest globally. To invest in the EU I need to understand 30+ legal systems to make sure I am not tricked over by the small print, get lawyers and figure out if i need a notary. After that i need 10-20 emails each funding round to satisfy whatever random fun fact local countries came up now. In the US I receive an email with a document signing link to a standard SAFE and can sign with one click. I don’t need to check the fine-print. I (and the founder) don’t need to involve lawyers. “But if the deal is good enough it’s worth the effort…” That’s not the reality of early stage investing. If someone invests $30k to help you they don’t want to spend another 10-15k on lawyers trying to figure out how legal details in Slovenian OODs work. Fun-fact there are no Slovenian OODs. Those are in Bulgaria, but I bet you knew that. Or was it SRL? BV? SpA? AB? SA? OÜ? UAB? EhF? Geez how different can they be. I mean… we will find out latest when a bigger investor wants to come in, and freak out about local differences right? “Well then one arrogant investor does not invest… who cares.” A portfolio company of mine had the best EdTech angel onboard. The best. In the world. People joined the round because of him. He jumped out of the round realizing the company is a GmbH and he knew this wouldn’t be done in the 2 weeks before xmas as an American investor. The follow-on investor was good. Would it have been better if they would had played on “internationally best investors approve this” level? Who knows. Europe is a market of 750 million people, the EU of 450 million. And investing here is as complex as investing in small countries globally with sub 10 million people. Because that’s what it is. “But there is the SE… which is Europe-wide” This is my argument not yours. The SE shows that it would be possible, but it’s not meant for startups. It’s not meant to be simple. “Well, you are just asking for this because you are an investor…” I gave a talk about this more than 15 (gasp!) years ago while starting my first company. Investors don’t hate this. It limits the options for local founders, it’s overwhelming for people who don’t do it professionally like them, they can make sure they get low valuations and international investors are not used to stealing their deals. Founders need this. Not investors. Investors make money on that opportunity arbitrage, even if it limits the overall upside. Here is my Question: Why did we stop with “single market” efforts? Why is there no effort to unify legal entity in Europe? Investing in companies at an early stage should not involve surprises and friction. Those kill deals. 2) Teach English starting at the earliest school classes This sounds too simple to be true. But the reality is dire. If you go to the south of France – our hope and prayers in the global AI race – and order a coffee there is a chance that the waitress doesn’t understand the word “coffee”, can’t explain you what’s in the salad – happened to me twice. If you meet Italians there is a high chance that they had only 4-5 years of English at school. I don’t care if you think English should be Europe’s default language or not. Growing up generations in this age without being able to properly speak English limits their job opportunities. It’s a disgrace to those generations and limits them, isolates them. You don’t lose your culture by creating options for your future generations. And more importantly you enable proper EU-wide media and networks. When you launch in the US your market pull can come from any part of the US. In Europe we are a mess of patchy networks and no significant media reaches across it. Teach English. Seriously. Why is this even a discussion. That’s it. That’s it. Those are my two suggestions. No big speeches no big rants. Two simple actionable first goals for politicians to decide if they are against or for it. Why not a big ask? Whenever you bring up a discussion about Europe people fear for their cultural identity. Let’s sidestep this. The goal is not one big unified completely homogenous Europe. The goal is to have one single market for business where you don’t feel like you are expanding into far away foreign lands whenever you do business across your border. A single market where international players compete with local ones to get the best outcomes for everyone involved. I’m sorry to keep ringing the bell of standards instead of doing a big chant around “bravery” “robotics”, “AI” and “innovation”. All of those things come automatically if you remove friction and show examples to people. Regulating vs Standardizing? The main thinking behind it is a simple one. I want to get away from a mindset of “regulating” to a mindset of “standardization”. Standards that can become fundaments for further standards. EU-wide solutions for EU-wide problems. You can productize on top of standards - and we are far behind I mentioned YC SAFE notes and companies like AngelList above. Those one-click abstractions of legal standards are great. But this isn’t the state of the art. We are far behind with the state of the art. I highly recommend you learning about India’s DPI (digital public infrastructure) efforts. Nation-wide eKYC (with 1.4B people), cardless commission-free payments with UPI that is already at 1/4 of VISA’s volume, decentralized marketplaces like ODNC that allow small businesses to work with larger customers, nation-wide credit/loan marketplaces with OCEN. India isn’t only tackling their biggest problems with standardization; they build products on top of it. Products like protocols that entrepreneurs can take and build solutions on-top. “But india is one country…” Yes but a few years ago you’d have dismissed anything coming from them as being a developing country. Now that it’s working, it’s reframed as easy because they “are one country” “But we lack the knowhow…” We don’t. Estonia has consulted with India on those projects. We have the knowhow. We lack the willingness to do European-wide solutions. I got more… but I think this is a start. Intentionally a simple one. Let me know Do you disagree? Should we not have an EU-wide entity that is simple and can be implemented everywhere? Should we not teach our kids English starting as early as possible in school? I think those are simple first steps with large systematic impacts over time. eu/acc - let’s go",
    "commentLink": "https://news.ycombinator.com/item?id=40213400",
    "commentBody": "Dear Europe, please wake up (klinger.io)228 points by sideway 16 hours agohidepastfavorite277 comments danielvaughn 16 hours agoI have no idea whether Europeans work harder than Americans, but I do want to say that you can't extrapolate the overall work ethic of America by looking at the SF tech world. It's a very, very small (and very privileged) microcosm of the country. reply jandrewrogers 15 hours agoparentIn my experience, American and European software developers work similarly \"hard\", that is not explanatory. There are noticeable cultural differences in how they spend their working time. American software developers have a tendency toward more ambitious and therefore risky solutions to problems, which have a higher variance in outcomes. European software development seems to gravitate toward what is seen as the safe conservative solution always. You may find yourself working more hours to deal with the risks that materialize as an American but sometimes that ambition pays off and you make a significant leap forward, and I suspect there is a higher sense of satisfaction with this result when it pans out. Particularly in the west coast tech cities, tolerance for both the risk of ambitious approaches and dealing with the consequences is dialed up anomalously high, that is just the water you swim in. With the higher risk tolerance, both cultural and what the business allows, comes a requirement to be willing to work extra hours when needed for when it blows up in your face. This is sporadic, most days they don't work any harder than Europeans. Many Americans value the freedom to take ambitious risks more than they hate the downsides of that risk-taking. reply duxup 16 hours agoparentprevHeck you can't even generalize about American tech industry and only talk about SF tech world. Granted that generalization is done in America too. It's always a bit of a frustration running into constant comparisons, managers who want to emulate processes, and such when \"Hey, you know what, we're not them... and we're doing well being ourselves.\" Not that you immediately dismiss new ideas because they seem to be from there, but don't just adopt them arbitrarily or operate like them too. I have a sneaky suspicion that \"most\" of the American tech industry is NOT at all like SF / valley tech world. reply relaxing 15 hours agorootparentIt really isn’t! A lot of the SV stuff on here is frankly baffling to the rest of the country. reply holtkam2 13 hours agorootparentAgreed. I worked in tech in Chicago from 2017-2021 before moving to SF to take a new job in SF @ big tech. Feels like a different planet. reply tadfisher 16 hours agoparentprevCouched in the article: > US folks love talking about how hard they work. And honestly with service workers and blue collars I believe it. But not in tech. reply darth_avocado 16 hours agorootparent> In SF you frequently hear big tech people talking how hard they work, while they queue 30mins for a coffee at Blue Bottle and chitchatting there for another 20mins. Might be true for an established rest and vest company or position like sales or marketing, but the article seems to be wanting EU to be easier for startups. Not a single startup has that culture, especially when you’re building it from the ground up. You’re most definitely working 1.5-2x the hours as a regular job when it comes to starting a company and making it successful, even as an employee. reply braiamp 15 hours agorootparentAlso couched in the article: > Americans love their hero-arcs so much that people manage to spin anything into a “coming from nothing story” – even if they got their first investments from their uncle and worked for free in the “garage” of their parents multi-million-dollar house in Palo Alto. reply zkid18 13 hours agorootparentIt's hard to argue against the fact that access to opportunities is not evenly distributed across different states. reply xhkkffbf 12 hours agorootparentprevIt's a bit unfair to talk about the garages in Palo Alto being attached to \"multi-million-dollar\" houses. When the people starting Apple, HP, Google and Facebook took over a garage, the places were solidly middle class. Even now, the price tags distort our perceptions. I've heard some venture capitalists say that most of their investments would go for salaries that would be turned over to the real estate world. reply dukeyukey 10 hours agorootparentI mean, I live in London in the biggest place I've ever lived in (700sqft!) since moving out of my parents home. Having a garage would add another £200/month easily. Having that amount of spare room in a tech hub is a massive advantage! reply jandrese 16 hours agoparentprevI have to admit I raised an eyebrow at Greece being near the top of the list. That's going against stereotype hard. reply occz 14 hours agorootparentStereotypes aren't necessarily true. There's for example a stereotype about Mexicans being lazy, but anyone who's actually taken the time to look at the statistics - and gotten to know any number of Mexicans, for that matter - knows that to be a complete fabrication. reply fragmede 13 hours agorootparentThe funniest thing about that stereotype is how can they simultaneously be lazy, yet also be taking all our jobs? Stereotypes are just stupid and lazy thinking. reply bsder 11 hours agorootparentprevI seem to remember that one issue was that warmer climates had higher infestations of hookworms which manifests in ways that reinforce a \"lazy and stupid\" sterotype. reply jorvi 16 hours agorootparentprevIt is hours worked, not productivity. If a shopkeeper takes a three hour lunch and sits in the sun in front of his shop half the time but stays open from 08:00-20:00 according to the stats he’s working 12h days. reply braiamp 15 hours agorootparentWhich is correct, in any case. If he isn't doing anything else but \"tending the business\" even when there's no business because there are no clients, then he is \"working\". reply NeutralForest 16 hours agorootparentprevWhat is not mentioned in the article is that productivity is much more important than the number of hours worked. By productivity, I mean output per hour worked, which is usually an estimation made from the total output of the country (GDP) and the numbers of hours worked by the working population. reply epolanski 8 hours agorootparentWell, that's a very inadequate productivity metric imho. How can two people with exactly the same output (say two doctors working a shift with similar number of patience) lead one to be 20 times more productive because one bills $400 per hour and the other makes that number in a week (such as in say Turkey). That's a 40x difference in productivity. reply NeutralForest 4 hours agorootparentYou would usually use Purchasing Power Parity (PPP) such that comparison between countries is possible, because as you pointed, comparisons in absolute values between countries are not useful. reply boringg 16 hours agorootparentprevThats because they refactored their economy during the debt crises. reply lookitsnicholas 16 hours agoparentprevam pretty sure that the post also acknowledged that w/ \"I don’t disagree. SF is a unique place. We currently don’t try to get on the level of SF. We are trying not to fall behind China, India and random second- and third-degree hubs in the US.\" reply atmosx 15 hours agoparentprevTo be fair, the author wrote about tech workers in SV specifically, not about the \"overall work with of America\" (which btw is a continent, not a country). The hero arc story is true and has to do with large Protestant population. reply dgfitz 14 hours agorootparent> (which btw is a continent, not a country) North America is a continent. America is absolutely a country. What do you mean? reply relaxing 14 hours agorootparentprevThere is no continent called America. reply em-bee 14 hours agorootparentthey are talking about the americas: https://en.wikipedia.org/wiki/Americas which is sometimes called america. (mostly in non english native countries i suspect) reply pvitz 13 hours agorootparentNo, certainly the USA (https://en.m.wikipedia.org/wiki/United_States). The author is most likely Austrian or German and it is quite common to say \"Amerika\" for the USA there. reply em-bee 12 hours agorootparentit is also equally common there to have an argument about that, just like on HN ;-) i was referring to this btw: America\" (which btw is a continent, not a country) reply raverbashing 15 hours agoparentprevOn this point, I suspect something: (Some) Europeans work more hours, but less efficiently Go to a supermarket in Germany, see how quick a cashier rings your order. (yes self-checkout does exist) And this is not only a North/South (or West) divide. Germans have their way of wasting \"work energy\" in some micro-bureaucracies in one way or another (and still they are more efficient than the average worker) Some other southern countries will waste more time doing some things while in some other areas they will be the fastest/least-bs players around. > But Americans definitely love talking about how hard they work; way more than we do. Can't disagree with this. reply alephnerd 16 hours agoprevA lot of the \"Europe is bleh\" rhetoric is about Western Europe - specifically France, Germany, and the UK (if they make it harder for European and Asian immigrants to come). The Eastern and Central European countries have always felt much more dynamic and open to work hard. There's a reason why the countries on the lefthand side of the graph provided are also the ones with some of the better innovation industries in Europe. There is still much work to be done in the CEE, but I'd be fairly confident that they'll become truly developed first world countries in the next 10-15 years, and some already have such as Czechia. Andreas is exactly right imo - his points about simplifying incorporation (there's a reason why CH does so well) and normalizing English (there's a reason why every developing Asian country from India to Vietnam to China is pushing English fluency, and lots of the CEE countries) will help. German, French, and British government officials are the worst to deal with imo - they will bend over the barrel for local conglomerates but ignore domestic challengers. Datadog could have been a fully French company, but the French ecosystem stifled them. Also, ime - Western Europeans seem to idolize Finance, Law, Management, and Civil Service careers more than innovation or entrepreneurship, unlike their CEE (Germany and Austria excluded) peers. reply Muromec 16 hours agoparentIn all honesty, tech people in EE show up to the office at 11 and take a legit one hour plus lunch break to eat proper food at the restaurant together. To ensure team cohesion of course. I'm not sure if that counts as a hard work or the result is simply better because you hire smart people and can't micromanage from SF due to 10h time zone difference. >German, French, and British government officials are the worst to deal with imo I would dread dealing with my countries government anything if I have time pressure. The result could be anything. In Western Europe I know that things will be done even if slow (ish). reply anal_reactor 12 hours agorootparent> In all honesty, tech people in EE show up to the office at 11 and take a legit one hour plus lunch break to eat proper food at the restaurant together. Ah yes, the \"work hard and the boss will notice\" meme. I have zero incentive to work hard. 1. My salary is mostly tied to the market as a whole and particular company's performance, personal performance is the smallest bit of the equation. 2. Changing a variable from true to false on the personal request of someone very important will give me far more visibility than spending nights doing some work that only one other person is vaguely aware of, even if that work is super important. And visibility means chances for promotion. 3. Most companies are inherently undemocratic and employees have no input on decision making, therefore why would they care. 4. Most companies have proven that they're not afraid of screwing over their employees given the opportunity, so why wouldn't it work the other way around too. 5. In most cases, the reward for completing work early is more work. The punishment for being lazy is having free time. I'm sorry but that's the corporate reality. I'd love to be a part of a team that works hard together to achieve great things, but that's not how the world works. Being able to come to the office three hours late and leave two hours early without anyone complaining loud enough to get me fired is a much bigger job perk than Pizza Fridays. reply alephnerd 16 hours agorootparentprev> tech people in EE show up to the office at 11 and take a legit one hour plus lunch break to eat proper food at the restaurant together Let's be honest, most techies do that from India to Israel to Poland to US. That said, Eastern Europeans are fine with occasionally partaking in crunchtime. Meanwhile, when I dealt with our Western European sales and engineering teams they would all ignore messages even if a Tier 1 critical customer's shit hit the fan. WLB is critical, but there are occasional exceptions that need to be made. Why should I pay the same amount that I would in Eastern Europe, Israel, or India for someone who won't help firefight. reply Muromec 15 hours agorootparentIf you are not providing critical infrastructure and people will not die, it's just you losing money, because your business is structured in a wrong way. You did it to yourself and should not expect people on salary to bear the cost of your wrong decisions. If you do provide critical infrastructure and people will die, it's also not my problem, because there will be a law requiring you to hire an SRE and a regulator to fine you to hell for not doing a good job too. Being a founder is your 24h job and you made a gamble to make big money in a capitalistic game. I didn't, I'm fine with making 5 liters of borscht on weekend and eating it through most of the week. It's not even WLB, it's not what I have signed up in this life. reply alephnerd 15 hours agorootparentYou're entitled to your opinion, just like I am entitled not hire you and hire an Israeli, Czech, Pole, or Indian for the same salary (and I have). Btw, I'm in the cybersecurity space, so a Tier 1 escalation generally means nation state attack or business stopping attack on a customer. > You did it to yourself and should not expect people on salary to bear the cost of your wrong decisions. Plenty of escalations are due to bugs. It's good to operate on a blameless model, but if I followed your model I'd gladly put the blame on engineers like you if the cause was found to be a dependency issue or a misconfiguration issue. Ofc, in the real world peers and I operate on a blameless model. Shit happens, but we need to fix our mistakes asap if they are made. reply Muromec 14 hours agorootparentSure, escalations are result of mistakes people make. This is why businesses exists -- they have processes, quality control and all that stuff that ensures reliable outcome while consisting of individually unreliable things. That's the whole point and that's what you are supposed to get right. There are different strategies, and hiring people from exploitable jurisdictions is one. As all obvious strategies it has downsides and it will also stop working at some point in future which may be irrelevant for you. reply seydor 16 hours agoparentprev> The Eastern and Central European countries have always felt much more dynamic and open to work hard. Yet as soon as they try to take advantage of their position (via e.g. tax breaks) they'll get punished (eg 15% corporate tax rate, what happened to Ireland, Cyprus). Not being a single economy truly prevents competition for capital. So old money stays put where it is , new money is not allowed. reply alephnerd 16 hours agorootparentWell, Cyprus absolutely needed to be cracked down (lots of shady shit going on there), but Ireland's absolutely gotten the short end of the stick, and I won't be surprised if something similar happens to Poland or Romania in a couple years. reply badpun 13 hours agorootparentCan you elaborate please? What happened to Ireland? reply Scubabear68 16 hours agoparentprevI am in the US, but I work with a lot of people out places like Romania, Moldova, Serbia, etc. and I agree those folks as a rule work hard, and also have a very high capacity for technical work. Their salaries are no where near those of Western Europe or the US, and not because of lack of ability but rather more macroeconomic issues in the regions. But a lot of technology solutions utilized by the world quietly get built out of there. reply wumeow 15 hours agoparentprev> every developing Asian country from India to Vietnam to China is pushing English fluency Is that still true of China? Several top universities have removed English tests from their graduation requirements afaik. reply alephnerd 15 hours agorootparentYou still need English fluency as a dev, at least in my sector (Enterprise/Infra/Cyber SaaS). Much of the Chinese tech scene is still active in transnational organizations like the CNCF and make some very cool additions (eg. Karmada) reply pimterry 53 minutes agoprevWorth noting that the \"EU GDP is stagnating terribly\" narrative that motivates this post and quite a few of these comments is not true. If you look at cost-relative (PPP) & per-capita numbers, the EU economy has been growing at a very similar or faster rate than the US for decades. https://statisticstimes.com/economy/united-states-vs-eu-econ... has a good introduction to the top-line numbers. https://www.bruegel.org/analysis/european-unions-remarkable-... has a more detailed analysis. The raw GDP differences come in very large part from exchange rate fluctuations and increasing costs & population in the US, not a meaningful increase in what the average American can buy with their earnings. PPP adjusts for these. In terms of \"how muchcan people buy\" numbers, the EU is closer to the US today than it has ever been. (That said, I fully agree with the post's conclusion regardless: a simple unified way to create an EU business & a universal language base would be a huge boost) reply mountainb 15 hours agoprevThe EU does not have an equivalent of US commerce clause jurisprudence (which descends from Hamilton's original economic design to prevent exactly the kinds of problems that this author is complaining about). The EU does have an equivalent to the supremacy clause, but due to cultural and political forces it cannot have the same effect that it has in the US. Another major factor that makes the US more competitive is our different approach to intellectual property law that favors competition in comparison to the EU equivalents. Another big thing is less the Delaware effect that he attributes US simplicity to and more the existence of uniform model laws that transformed state business law through the 20th century. Then you have the fact that almost all (except parts of trademark) of the relevant IP laws to large scale enterprises are exclusively federal laws. This is not the case in the EU despite all the normalizing treaties. The EU does not and cannot perform the same role that the federal government does. I have a better proposal: incorporate the European states as self-governing US territories under the supervision of the federal government. They could have some carve-outs and immunities using an administrative structure similar to that of Native American law. This would also resolve the NATO controversies by just absorbing all of the individual ex-EU member state country militaries under the DoD. It would also eliminate a lot of the weird Article V ambiguity by just making it all American territory. reply triceratops 13 hours agoparentI found myself nodding at the first 2 paragraphs, then got serious whiplash on paragraph 3. That was wild. reply wrboyce 12 hours agorootparentYeah, what the hell haha. How someone can think “I propose that 27 countries are absorbed into the USA” is reasonable is beyond my comprehension. reply hackable_sand 10 hours agorootparentDefinitely an American proposition. reply squigz 11 hours agorootparentprevI'm glad I'm not the only one. That was unexpected. Is GP joking I hope? reply Muromec 14 hours agoparentprevThe counter proposal is for sure more realistic compared to the expectation of not having 2 hour lunch break and closing laptop at 4 pm. reply rhl 6 hours agoparentprevFirst sentence is blatantly false. Regulation of trade and commerce between member states is the foundation and raison d’être of the European Union, exactly like the interstate commerce clause for the US federal government. reply guru4consulting 13 hours agoparentprevAnd make EU more like USA? let them be influenced by corrupted wall street, loose EPA regulations for pesticides, favor the rich in the name of capitalism? In spite of the flaws and messy bureaucracy, I still like EU for their policies towards environment, food, socialism, etc. And above all, EU is the single beacon of hope to keep a check on mega corps like Apple, Google, Meta, MS, etc. reply buzzert 12 hours agorootparentI take it that you're very pleased with the direction that Europe is going, and disagree with most of what the author of the post says then? reply zeruch 12 hours agorootparent...or he doesn't believe in mutually exclusive binary options. reply 6510 12 hours agorootparentprevMake it more EU like, more standardization. You want to learn how to start one business not learn everything all over again for each country. reply subsubzero 15 hours agoprevSo many things here. Lets talk pay, US tech workers, lets just say Sr SWE and up, and lets look at SF as the author uses this as a focal point. Salary is roughly $300-400k a year(in SF FANGish company), in Europe or England its about half of that, and maybe even less. I know as I have family I married into that points out this fact, the best workers all go over to the US and make large salaries over there at US tech giants. Lets talk about taxes, especially in the northern European countries taxes are extremely high when you get into professional wage bands, ie. above 120-200K euros(50% tax rates in some countries compared to 37% top US tax rate) and capital gains which is a huge issue as some employees get a majority of their income through this - 30% cap gains tax rate and above for a decent amount of western/northern EU countries, compared to 20% top tax rates for US. Lastly lets talk about employees, you hire someone and they don't work. In Europe you cannot just term them and give them a severance package of a few weeks. In France you are not allowed to even layoff employees unless you are close to bankruptcy(I think this was changed a few years back). But in general it is very hard to fire employees who are underperforming in the EU. All of these facts really highlight why alot of top talent and founders from the EU come over to the US to make money and start companies. I am not saying one way is right or wrong but just want to pint out the points that both ICs/managers and founders have all told me(I am US based). reply creer 2 hours agoparent> 37% top US tax rate That's not true either. In California, you will also pay state income tax, most likely at 9.3% marginal rate - but possibly not too different in actual rate because the California thresholds are low. To continue the comparison, you'll need to consider which part of health insurance is or is not included (none in the US.) Etc. In the end, the marginal tax rates are pretty close. Meaning, shockingly high in California. And if you do come here for work, consider also exit tax. If you are successful, you will fall under exit tax if you ever want to leave. reply steeve 10 hours agoparentprev> In France you are not allowed to even layoff employees unless you are close to bankruptcy(I think this was changed a few years back). Of course, this is not true. What is true is when you hire somebody, they are on a trial period of 3-4 months that can be renewed once. After the trial period is done, you need a cause to fire them. reply steeve 46 minutes agorootparentDownvotes? I'm french and run a company but please. reply alephnerd 15 hours agoparentprevThen why does Czechia, Romania, Poland, and (before 2022) Russia punch above their weight in entrepreneurship? Or Switzerland and the UK? reply peoplefromibiza 13 hours agorootparent> Then why does Czechia, Romania, Poland And yet nobody would move there to find a job, not even from Italy, Greece or Portugal. Their salaries are simply too low and the ROI in terms of quality of life it's not remotely comparable. There's over one million Romanians in Italy, making them the largest foreign community in Italy. reply alephnerd 12 hours agorootparentAnd how many of them are working in Italy's tech industry versus working as blue collar workers. reply peoplefromibiza 12 hours agorootparentHow many of them are working in Romanian tech industry? In EU the share of ICT workers is pretty much homogeneous among the different countries. It's their salary that varies a lot (but not as wildly as in the US) It's much easier to get a decent wage for a Romanian in Italy than for a Romanian tech worker in Romania It's the reason why a lot of Italians go to live abroad as well. reply alephnerd 12 hours agorootparent> In EU the share of ICT workers is pretty much homogeneous among the different countries. Italy has a population of ~58m but an ICT service population of ~500k [0]. Romania has a population of 19m but an ICT service population of ~200k [1] And this masks the large Romanian tech diaspora in Germany, the UK, and ofc a portion in Italy. So the question is, why are so few Italians work in tech in comparison to a much poorer country? > It's much easier to get a decent wage for a Romanian in Italy than for a Romanian tech worker in Romania Just using levels.fyi (which imo is skewed) Romanian dev salaries are higher [2] than Italian ones [3] and as a former hiring manager for one of those MNCs Europeans keep trying to apply to, I can attest that salaries for the 50th percentile and above are comparable across Europe, which ofc means CEE based tech employees end up having less of an incentive to move out West (excluding UK and Switzerland) when factoring CoL. There's a reason Big Tech employers like Amazon have a major developer presence in Tier 2 Romanian cities like Cluj or Iasi and not Tier 1 Italian cities like Milan or Rome. [0] - https://www.statista.com/statistics/419569/number-of-employe... [1] - https://www.statista.com/statistics/419587/number-of-employe... [2] - https://www.levels.fyi/t/software-engineer/locations/romania [3] - https://www.levels.fyi/t/software-engineer/locations/italy reply peoplefromibiza 7 hours agorootparent> Italy has a population of ~58m but an ICT service population of ~500k [0]. > Romania has a population of 19m but an ICT service population of ~200k [1] Yeah and in Italy around ~9% of the population was not born in Italy (mostly coming from non EU/ poorer countries with no tech skill whatsoever, not a judgement, just a fact) while in Romania is basically 0% So, as I've said, ICT workers are pretty much 10% everywhere in EU You're putting your biases in your stats. We're also not taking into account many other factors such as the type of jobs we are referring to Many countries have lots of tech workers doing mechanical turk kind of work (not saying it's true for Romania, just a data point that is missing here) Moreover, hiring managers of course prefer to pay less than to pay more in absolute, regardless of the buying power If I had to live with a Romanian salary in Italy, I would be in the lower tier while now I am in the top 10%, but of course tech workers have better salaries on average everywhere in Europe,so they are less incentivized to move especially coming from poorer countries, where their more than average salary would immediately become normal or less than average abroad. To get a better salary in Europe I should move to Netherlands or Ireland and work for some US Company. Not even UK is competitive in my case, all things considered, including the lifestyle I am used to. Last, but not least. Amazon employes ~20 thousand people in Italy and of course has a strong presence in Milan (I worked for them in Milan) while it's only about 3.5k in Romania. reply 62951413 14 hours agoparentprevLet's talk about you growing older. The closer you're to 50 the more difficult it gets to find a new job. You get laid off in a major downsizing round. Your COBRA healthcare plan is $2K+/month which incidentally is comparable to your 1-bedroom apartment rent. It could take you a few months to find the next job. Or longer, people discuss it on this very site every other week. The FAANGs and the capital gains are real but for a minority of us. If you're single and under 30 the Bay Area is a top destination for sure. You won't be that person forever though. reply bradlys 11 hours agorootparentIf you’ve followed the money train, you should practically be fatFIRE by 50 assuming you’re in SF. I can imagine it being difficult if you’re single income but dual income tech workers in SF should be easy FIRE territory for a 50 something. It’s really hard to imagine a scenario where someone is reaching 50+, can’t find a job due to ageism, and has anyone but themselves to blame. I have friends who don’t own property in SF, rented their whole lives, and haven’t accumulated millions in NW. They only have themselves to blame because they kept trying to do their own startups. They had 7 figure comp when they were at established tech companies but would keep leaving to start their own thing. They could easily be close to retirement but they’re gonna be working past 65 at the pace they’re going now. The only thing they regret is that none of their startups they founded have made them rich. reply lugu 16 hours agoprevEuropean here. It normal that EU become the #4 economy in the world. There is nothing wrong with that. What wasn't normal was to see billions of people in poverty. I am happy to see India and China catch up. The best way to be #1 economy is to destroy others. We don't want to do that. Indian entrepreneurs are as ambitious as the growth of their economy. EU wants to focus on ecology and democracy and this impacts it's economy. There is nothing wrong with that. reply lores 16 hours agoparentI've never been to China, but the US strikes me as palpably more dystopian every time I go - and that's from someone who loves the country and its people. As for India... well, hopefully everyone will benefit from the growing wealth. Europe has a very high quality of life. To the extent it's sustainable, I don't see what's wrong with a government and culture aiming to make people happy and comfortable rather than #1. reply kwere 13 hours agoparentprevChina has eaten European manufacturing, India will eat most of Europe Service jobs through remote positions. Europe will be saddled with debts, looking like a disfunctional Argentina squabbling about populist socialist /nationalist talking points. reply kazen44 12 hours agorootparentexcept that globalisation is on the downturns, especially in terms of the political will in europe. Exporting the manufacturing of to china is currently seen by many as a mistake (especially deindustrialization in regards to military hardware). I highly doubt service jobs will be exported, especially considering the many different languages and the fragmentation of those languages. reply kwere 3 minutes agorootparentFront-office jobs will be kept local, but expensive / labour intensive backoffices will be moved to cheaper places. Right now Eastern Europe due to bilingualism is a Hub for this: Poland, Czechia, Romania, Albania. India will become appealing when most European business jargons will be english first. Already happens in Software dev, Marketing, Product design, even Legal / compliance, etc... reply therealdrag0 7 hours agorootparentprevSeeing exporting as a mistake and doing something about it are different things. Will be interesting to see what happens. Generative AI may help with the export or deprecation of service jobs. reply j7ake 16 hours agoprevWhy should Europe care where they are amongst this myopic ranking of “best tech hub”? Western Europe is a great place to live, raise a family, and retire. None of the tech hub countries are even remotely comparable to Europe in this sense. If there are people in Europe who want to work in a high growth industry that desperately, they can move to USA or China. reply seydor 15 hours agoparentEuropeans live the way they do because of unbelievable amounts of wealth and innovation accumulated through centuries which is being spent. None of that is guaranteed in a failing , aging europe. It's not food-safe, nor energy-safe. Not thinking about a sustainable future is fatally myopic reply pasabagi 14 hours agorootparentOr because of unbelievable amounts of rights won through political struggle, which cannot be spent, only lost through getting complacent. Europe was a lot poorer in the 80's. China today has a higher GDP-per-capita then the EU did in the 80's. India has a higher GDP-per-capita than the EU had in the 70's. If you have a decent political culture, you don't need a lot of money to avoid the worst kinds of poverty. reply snowpid 13 hours agorootparentprevI disagree. Basically all Europe were in shambles 80 years ago, Communism was destroyed only 30 years ago. We still 4 wars in the last 30 years in Europe. The accumulated wealth is long gone. reply EasyMark 11 hours agorootparentAnd Putin is threatening another major war in Europe with NATO, it's pretty crazy to assume that Europe has not issues happening or has gotten complacent just because they don't want to work 50 hours a week. reply snowpid 2 hours agorootparentIt's actually a surprise that Europe is a rich part of the world. reply ghusto 14 hours agoparentprevI've been refraining from saying the same for fear of starting arguments, but I'm still glad you said it. I've worked for an American tech company (and had a really good time doing so!) and visited the country. I can honestly say I'm immeasurably happier with my quality of life here in Europe. reply dukeyukey 10 hours agoparentprev> Why should Europe care where they are amongst this myopic ranking of “best tech hub”? Because I'm European, and I'd like more money and a richer lifestyle. > Western Europe is a great place to live, raise a family, and retire. The average new-build home in my country (the UK) is about 850sqft. That's not flats, that's homes. > If there are people in Europe who want to work in a high growth industry that desperately, they can move to USA Do you know how tricky it is to move to the US as a skilled worker, and how much luck is involved? reply Aerroon 14 hours agoparentprevBecause the world doesn't stand still. If you're stagnating then others pass you by. Why stagnate now? Why not the economy of the 60s? 70s? 80s? Today life is significantly better than back then. If Europe stagnates even more then we will still be in the same place in a few decades as we are now. reply badpun 13 hours agorootparentEurope is not stagnating, its economy is just developing slower than in the US. reply wskinner 16 hours agoprevThere is a big difference between Europeans in Europe and Europeans in the US - Europeans in the US readily point this out. The idea that Europeans are somehow genetically less suited to building tech companies is an obvious strawman. The reality is that Europeans in America are, like all immigrants, heavily self-selected. The article also does not mention the huge difference in compensation for technology talent between the US and Europe. As long as that gap exists, top European talent will continue leaking across the Atlantic. reply next_xibalba 16 hours agoparent> the huge difference in compensation for technology talent This isn't a single lever that can be pulled independently. You need highly fluid labor markets that force companies to pay competitive efficiency wages (i.e. fewer/weaker/no unions), competitive and innovative companies, lower regulation and government bureaucratic interference, ambitious and career focused labor force, etc. etc. It's a chicken-and-egg problem that, at its root, stems from culture (IMHO). reply alephnerd 15 hours agoparentprev> the huge difference in compensation for technology talent between the US and Europe Poles and Czechs get paid relative peanuts compared to West Europeans, yet have fairly startup industries compared to France or Germany. Same with further afield in India or China. reply solatic 15 hours agoprev> Here is my Question: Why did we stop with “single market” efforts? Why is there no effort to unify legal entity in Europe? I'm not sure the author understands what he's asking for. While having California residency, you can start a Delaware company, open offices in California, pay taxes to the State of California. If the State of California sues your company for unpaid taxes, which court do you end up in? California. If the State of California sues your company for civil rights violations, which court do you end up in? California. The US doesn't have some magical system where just because you register in another state, you can resolve all legal disputes in that state, therefore you're not beholden to the laws and governments of the state you operate in, or that Delaware is legally bound to enforce the laws of the other states and localities you operate in. Indeed you are beholden to said laws and localities. And indeed, complying with 50 different states and all their localities can be so damn complicated that there are entire products built to help you figure out how much sales tax to charge when crossing state lines, as well as how to pay it correctly; not to mention how to offer health insurance to remote employees, since every state has its own insurers. At the end of the day, sure an \"EU Inc\", as the author puts it, may help make it easier to close deals. But it does not reduce the operational complication of operating across different localities. The rights of different localities to set their own laws and regulations for those who operate within their jurisdictions is unavoidable. You could have a single Brussels sovereign and a single English legal contract language and this would still be true, because it's already true in the US. The EU has a \"single market\", not a \"single marketplace\". The market is the customers, not the companies, not the banks, not the courts. reply alephnerd 15 hours agoparent> may help make it easier to close deals This is the biggest factor why most European countries suck at innovation - dealflow is utter garbage in most of Western Europe because there are almost no VCs and most \"VCs\" are just family offices. As a Western European founder, it's better to shift to the UK, CH, or US in order to simplify fundraising. Look at Datadog, Databricks, Spotify, and others. reply dukeyukey 10 hours agoparentprevTo a point, the UK has taken that role. Lots of EU tech companies set up residence here, since our corporate law is extremely developed and understood. But ofc Brexit has made that trickier. reply juxtapose 13 hours agoprevThe author isn't wrong. Europe is falling behind, and people should not pretend it's a good thing: the current European life style (\"more to life than work\") depends on excessive interests gained from technological advancements that are not yet replicated elsewhere. The life would be much worse if Europe couldn't keep up. reply ramblerman 12 hours agoparentwhoosh reply altdataseller 16 hours agoprev“The problem is not that regulation 1 or 100 is too much. The problem is that every country has different regulations, creating a mess of complexity if you want to act across a larger consumer market” If you’re building the next Uber sure, this might be a problem. But this is also a HUGE advantage if you’re not though. If you’re building the Workday for Estonia, or the LinkedIn for Germany (ie Xing) you have a huge advantage over any other big company that wants to steal your market share. Because there’s a bunch of local regulations, customs and ways of doing things that they simply can’t “port” over. So yes, it’s a barrier if you’re building the next huge consumer startup, but at the same time it creates all these long tail opportunities for a LOT more startups that want to conquer a local market. And that probably helps a LOT more European entrepeneurs reply ygjb 15 hours agoparentIt's amusing that you used Uber as an example as Bolt is a direct competitor to Uber that is founded and operated in Estonia, but other than that, your purported advantage is pretty meager. Assuming you build a product custom tailored to Estonia's unique regulatory requirements that is targeting primarily business users, then you are targeting a maximum market of 324,000 businesses. It's realistic to assume, given Estonia's population of 1.32M people, that most of those businesses are sole proprietorships or small businesses that will not have any IT or service department to support them. Building a successful, competitive product in this fashion requires protectionist policies that favor a local product, and those policies will often run afoul of public tendering rules. At least with Germany, you are dealing with a much larger scale (~84M people, and ~5.3M businesses). It is certainly possible to build and operate a service that would target Estonian, or other small countries, specific regulatory requirements, but the size of the potential market is extremely small, and the path forward to build a competitive service is to abstract away Estonia specific regulations so that you can build country/regional specific versions. All that said, assuming you are successful in building a business that accomplishes an \"X\" product for \"Y\" market model, the entire success of the business is predicated on a market that is created by differentiation in regulation, and your product benefits from lobbying for eliminating those differentiation. Optimizing for small, local markets is definitely a path to success for some businesses but it's not an easy one, and it doesn't seem like a reasonable investment for growth oriented startups that seek to compete in a global marketplace. reply ghusto 14 hours agorootparent> it doesn't seem like a reasonable investment for growth oriented startups that seek to compete in a global marketplace This last thing you said is worth pondering more on. Many places are happy not growing, doing what they love, in a way that suits their workers lifestyles. They can afford to stay small and protected, at the cost of needing to be locally focused, and they love it. reply seydor 16 hours agoparentprevYou re just building 27 different companies that are all reinventing the same wheel in their country, and they are all destined to never grow, until some US company localizes their offering and shuts them all down. Microsoft has done exactly that 100 times reply altdataseller 15 hours agorootparentThat's a VC perspective. Sure they'll never be a massive 1B company, but they can be successful businesses for 2 to 5 people teams reply seydor 15 hours agorootparentNo, they won't be successful, because the US company will offer a better product at a cheaper price. They 'll eventually shut down reply ghusto 14 hours agorootparentprevI've rarely seen it work. Usually they come in, splash a lot of money around to learn the expensive lesson that Europe isn't America, and leave. reply arp242 15 hours agoparentprevA lot of these local businesses have been taken over by large companies, though not all obviously. Turns out having a fucktillion monetary units does a lot to get through friction. reply whiplash451 15 hours agoparentprevEx-Viadeo investors and employees would surely like a word with you. reply bradhe 16 hours agoprevIm an American currently living in Europe (Germany). I’ve founded a few companies in the US. I have a project that’s going well, could easily turn into a startup, but I’m not sure I’d found it here—genuinely struggling with it. The way companies fundraise here is a bit weird to me. Much smaller rounds. Also typically thinking smaller in general. Obviously, everything is very commercially focused. In Germany, the worker protections make operating really quite difficult and it changes the culture of the company, too. Don’t even get me started about on-call culture. I can’t really think of a distinct advantage to starting a company in EU vs US if you have a US passport outside some minor niceties. My current thinking is operating on both continents is likely best, with GTM in US and engineering in EU. But not sure… reply Muromec 16 hours agoparent> Don’t even get me started about on-call culture. No, I don't want to answer to your pager robot at 3 am for things I have no control over and don't want to touch. Get another robot to answer that or hire an SRE. I want to write my CSS and my 1 hour lunch break and live a life. reply pas 6 hours agorootparentI did that in the EU, there's a price attached to it. (we were the SRE team, had a lot of control, good extra pay every time it called, etc.) reply bradhe 14 hours agorootparentprevI dunno man the company pays you 10x your peers for a reason. reply throwaway44773 13 hours agorootparentScarcity of skillset. If there are 10x as many people than now willing to do the job, companies would offer much lower salaries while making the same or worse work demands. reply Muromec 10 hours agorootparentprevI'm pretty sure I'm not getting paid 10x of anything. reply nvy 16 hours agoparentprev>In Germany, the worker protections make operating really quite difficult and it changes the culture of the company, too. Don’t even get me started about on-call culture. Given how exploitative some US companies are, this sounds wonderful to be honest. The only way I can see this as a negative is if you view your employees as fungible commodities rather than valued team members. reply davidjfelix 15 hours agorootparent(I don't agree with this viewpoint) maybe the author views fungibility of employees as a feature because it lessens the risk of a founder sinking an investment over a personal or interpersonal issue. reply jwagenet 16 hours agoprevWake up from what? I couldn’t find the thesis in the first few paragraphs… I keep seeing more and more from business types in the EU salivating over US business conditions: weaker labor laws, weaker regulations, record profits, etc. From the US it seems like the EU is doing fine and enviable from an employee perspective (except wages). reply ant6n 15 hours agoparent> From the US it seems like the EU is doing fine and enviable from an employee perspective (except wages). „Except the wages“ is kind of the problem. The source of that issue is the ability to raise capital, which is kind of addressed in the article, if you’d bothered to read before commenting. reply t0bia_s 14 hours agoprevAs an EU citizen in middle of Europe (Czechia) I see two major problems. - Free market is crippled by EU economical politics. Basically, EU is trying to implement centrally planned economics and fund many useless things by grants. About half of grants (in my country) going to ideology driven nonprofit segment. Many EU citizens are very angry about wasting our money. Also, our government is not able to provide cheap energy. It has historically lowest trust since 90's. - We solve problems by creating new regulations. Instead of amendment of laws we adding bunch on new ones. In my country, its about 50 000 new legislative regulation every year. System is full of unnecessary bureaucracy. It costs many resources thus make it collapse in near future because of lack of resources (financial, personal, even mental). Those aspects affect motivation in business significantly. Many don't believe in reformation of EU. I expect EU exits of few member states in near future. reply omnimus 1 hour agoparentI am curious what are examples of “ideology driven nonprofit segment”? reply alephnerd 14 hours agoparentprevI've had great experiences for past employers managing our Czechia office (heck, you might have even applied to us) and I agree with ya. CEE (Germany+Austria excluded) has the right mix of regulation and ease of business for innovation to succeed, but French and German lobbying seems to be undermining it. Maybe an EEC membership like Denmark's might be helpful down the line. reply throwaway11460 13 hours agoparentprevTomorrow you will be paid to use energy if you're on the spot market. reply badpun 13 hours agoparentprevI don't think those are the main issues. There's tons of money wasted as well as bullshit laws in the US (hell, their tax code is so complex that it famously practically requires software to fill out a tax return form), but it doesn't stop their economy from quickly growing. reply miki123211 1 hour agoprevI think there's one point the author missed, and that's payment method standardization. In the US, you put a credit card form on your website and you're done. That's how people pay online, period. In the EU, this is not the case. You have countries like Germany, where many people use EC, not Visa or Mastercard. You have countries like Poland, where (debit) card adoption and usage is very high, but online card usage is almost nonexistent. Except for the young and tech-savvy, there's a weird phobia here when it comes to anything that can take money from your account without your explicit consent. That complicates subscription payments for one, most major streaming services had to give in and allow bundling with cable and satellite TV plans (Netflix), phone plans (Spotify and Tidal) or payments by SMS (Storytel). There was a Storytel blog post once where they discovered that 90% of Polish people that cancelled at the \"payment\" step of the subscription flow did so because \"credit card\" was the only method available. And that's just two countries, I'm pretty sure the other 26 have their own nuances I'm not aware of. reply marcinzm 16 hours agoprevThis misses the big one: California bans non-competes, bans anti-moonlighting clauses and lets you quit with no notice. If you’re at an EU company and need to give 3+ months notice to quit that will discourage starting your own company on the side. reply ta1243 16 hours agoparent3 months notice tends to apply to people who have been there a hell of a long time. At least in the UK. My notice period is 3 months. I've also got 2 months of long service leave built up so in effect it's 1 month (as I can just take the 2 months notice) On the flip side if they make me redundant I get the best part of 18 months salary after paying taxes, and at least 5 months pay after they say its happening where I can look for another job. But OK, UK shot itself in the head with Brexit. Ireland speaks english natively, has low taxes (especially corporate ones), is easy to incorporate there, so how does notice apply? https://www.workplacerelations.ie/en/what_you_should_know/en... > Employees who have been in continuous employment for at least 13 weeks are obliged to provide their employer with one week’s notice of termination of employment. If a greater amount of notice is specified in the employee’s contract of employment, then this notice must be given. Oh no, a whole week! > Ten to fifteen years: Six weeks Of course your contract may be different, but there's no real legal impediment here. reply b800h 15 hours agorootparent> 3 months notice tends to apply to people who have been there a hell of a long time. At least in the UK. Increasingly not the case. I'm seeing an awful lot of \"One month in the first three months, three months thereafter\". It used to be pretty universally one month. reply iamacyborg 16 hours agoparentprevThe flipside is your company can't just fire you at will, which is rather nice in this day and age. reply y-curious 16 hours agorootparentI'm not trying to be obtuse, but at what point do the worker protections discourage employment? If I have to pay the huge employee fees associated with the EU, I may just go hire someone in Asia. reply elevatedastalt 16 hours agorootparentFrom almost the beginning itself. Whenever you hire, you have to consider how hard it would be to get rid of the employee for whatever reason (underperformance, changing business needs etc.) reply pas 7 hours agorootparentemployees as contractors is very common. this is a solved problem. and firing people is also not a mystery, interestingly PIPs are a US invention (but if labor laws are so lax, why were they needed there? :)) reply iteria 12 hours agorootparentprevPeople always bring this up but in my 15 years of working in tech I've never seen anyone fired on the spot unless they really fuck up. Like cause the company serious financial or legal harm kind of fuck up. The tech layoffs get a lot of attention, but that's a tiny, tiny fraction of the US's tech labor pool and full of some of the most privileged employees of an already salary privileged set of workers. In reality what happens is you get 3 months notice of a firing in the form of PIP. Perhaps if you work at Walmart you can get fired on the spot, but honestly in industries where this is a common occupance, it's also well known that the employees also just don't give any notice at all either. They just stop showing up, maybe won't even give a 1 second of notice. Personally, I'm happy for at will as someone who has had a shitty. Shitty job that ate at my mental health. I just had to say \"today is my last day\" and I fucking left and that was that. Got a final pay check and paperwork for continuing my benefits if I wanted them and this was at a random company in a labor hostile state. In some place like California, they would have been required to pay my last paycheck that moment instead of when the never payment day was. I've seen employees work contacts that mandate notices by punishing you with legally enforced fines and whatnot and I just cannot see the benefit of being forced to give notice. It's just encourages your employer to make your life hell in that period if you're on bad terms and you had a good reason for leaving. Right to work laws can get bent though. That's active underminement of unions for no benefit at all for an employee. reply kldx 16 hours agorootparentprevThey could however do a restructuring, eliminating the exact role one's skillset matches. You get a couple of months of notice period which is no different from a severance package. reply lotsofpulp 14 hours agorootparentprevThe solution to people’s income instability is government subsidy. Levying the costs of this risk on individual businesses both entrenches existing large players and disincentivizes new businesses. reply marcinzm 13 hours agorootparentThe problem is that it doesn't matter who pays the cost. Let's say I live in the US where the social safety net isn't large and companies can fire me at will. Let's say I'm also competent and driven. Logically I focus on money because having a large bank account is the only safety net I can ever get. Since everyone understands the lack of a safety net trying to get large amounts of money is socially acceptable. Now lets' say I got lucky and never had to use that safety net but until one day I decide to start a business which means I will make 0 income for a year. Now I have money to cover my expenses as I try my hand at running a business. But given a strong safety net it'd be illogical to keep that much money around unless you're paranoid. You enjoy life, go on vacations, etc. Granted, the hoarding of money and drive to greater wealth eventually leads to a capitalistic dystopias with massive wealth inequality. But you get lots of startups! reply lycos 16 hours agoparentprevI have never seen a 3+ month notice to quit in the country I live, curious which country this happens in? Sounds extremely ridiculous if true reply i_don_t_know 14 hours agorootparentThe notice period in Germany works both ways. Your employer must meet the notice period, and so do you. You can ask your employer to let you go sooner if you want to leave, and they may ask you to leave sooner if they want you to leave (and pay you as an incentive). But it has to be by mutual agreement. Usually they’d let you go sooner rather than later because they know you’ve already left mentally and they don’t want to pay for that. But they might also not, not necessarily out of spite but because they have a deadline and they think they still need your warm body. reply brodo 16 hours agorootparentprevIt's pretty common in Germany. Three months is standard; longer is possible. I worked as a researcher for a German university and had a six-month notice period. You can imagine how productive most people are during that time. reply dukeyukey 10 hours agorootparentprevIt's reasonably common in the UK for senior staff (although 1 month is standard), but it's often negotiable. It's not law though, it's just the standard work contract. reply rdm_blackhole 16 hours agorootparentprevI am in Sweden, it's 3 months of notice here as well. reply simulosius 16 hours agorootparentprevGermany. I once had a 3 month notice to the end of the quarter. It's not like everyone gets these but they're also not super-exotic. reply burgos_thrw 15 hours agorootparentprevI had it in two last jobs in Germany (and had to wait them and also when we hire and do roadmaps we know that the person will not start before the next or the quarter after the next) as all of my coworkers, except few. These were executive and had 6 months notice periods. Not that I complain, six months of rest and vest life wasn’t bad :-) reply marcinzm 16 hours agorootparentprevMy friend in Germany got that and had to pay a large fee to leave early to move to the US. reply lores 16 hours agorootparentThat's very non-standard. Depending on what 'a large fee' means, it might even be illegal. reply GardenLetter27 15 hours agorootparentprevI've had it in the UK and Sweden. reply alephnerd 16 hours agoparentprev> If you’re at an EU company and need to give 3+ months notice to quit that will discourage starting your own company on the side. India has similar non-competes to Western Europe, but is able to maintain an innovation ecosystem. reply Red_Leaves_Flyy 16 hours agorootparentIndia’s where offshoring from the us is. That maintains demand. India is also still industrializing. Expect India to look more like China - with similar economic pitfalls - in the next few decades. Some companies have already begun pulling from India because of costs and poor performance negating the labor savings. Some companies have figured this out and the non competes create a captive workforce but others are just wasting money trying to emulate. reply alephnerd 16 hours agorootparent> Expect India to look more like China - with similar economic pitfalls - in the next few decades Pretty much this. The best way to operate in India is to use a mixed Chinese and Israeli mindset tbh. > India’s where offshoring from the us is True, but there is a massive change now from the 2000s where it's just BPO. Literally the crown jewels of enterprise and deep tech and increasingly innovated and designed by the India teams directly (eg. the cybersecurity backbone of a major 5G telco in the US, the Apple mobile chips, Google Pay, etc). reply b800h 15 hours agorootparent> The best way to operate in India is to use a mixed Chinese and Israeli mindset tbh. What do you mean by that? reply alephnerd 15 hours agorootparentIndians are argumentative and sales driven like Israelis, but you still need to operate the same way you did in China in the 2000s, with local contacts and recognize that you might get scammed if you don't do your due diligence correctly, but if you make good friends with local partners or parties you will get the red carpet and PLIs. Cadre-driven parties like the BJP, DMK, BJD, BRS/TRS, etc are organizationally similar to the CCP but other parties are more loose and disorganized, so having a local partner act as your firewall helps massively by pointing you where to invest, just like in China, where most western companies invested in Guangdong, Zhejiang, etc but ignored Hubei or Guangxi. There's a reason why Israeli, Chinese, Japanese, and Korean companies tend to be fairly successful with their India ventures, because they're used to this kind of an operating model, and most American companies tend to have a first-gen Indian American or Indian educated in America managing operations with India. reply ninjagoo 15 hours agorootparentprevPost-employment non-competes aren't enforceable in India [1][2][3] [1] https://m.economictimes.com/jobs/fresher/it-freshers-beware-... [2] https://www.business-standard.com/amp/industry/news/non-comp... [3] https://timesofindia.indiatimes.com/city/bengaluru/cant-enfo... reply alephnerd 15 hours agorootparentYou still need an NOC to shift to another employer, and if your boss is vindictive, they will make it hell. reply TooKool4This 16 hours agorootparentprevIndia is very different than Europe. It would be difficult to attribute outcomes between the 2 countries to just this single difference without considering the many other differences. reply alephnerd 16 hours agorootparentAbsolutely true, but I'm just pointing out that non-competes are not a major precursor for Europe's laggardness in innovation. If all of the EU's innovation system is sclerotic compared to Illinois or MA or India where non-competes are vindictively enforced, then there is a major issue. reply throw0101b 16 hours agoparentprev> If you’re at an EU company and need to give 3+ months notice to quit that will discourage starting your own company on the side. Notice to quit given by the employee is often the same time period as notice for termination given by the employer: what's good for the goose is good for the gander. * https://en.wiktionary.org/wiki/what%27s_good_for_the_goose_i... reply pas 6 hours agoparentprevhow? you have 3 months of semi-free time. what will they do if you show up late and, fire you? don't be ridiculous. it's perfect for starting a company, working on your startup on the side. reply Muromec 15 hours agoparentprevIt's usually 3+ months for the company. reply Muromec 16 hours agoprevI'm not sure what I need to wake up from and what this even is about. The Europe is good, the Europe is bad? I totally don't want to live in another US, because if I wanted, I would have went to the one already there across the ocean. I specifically don't want to work with US-funded venture backed companies and their bullshit, it's not sustainable in the long term. reply seydor 16 hours agoprevWe need to form a committee that will discuss the format of the procedure to be used to formulate open proposals about how to wake her up. Urgently reply Muromec 16 hours agoparentAnd draw a diagram. Always draw a diagram before submitting to the committee. reply cherryteastain 14 hours agoprevEuropeans always like to approach this issue from the perspective of Europe being uncompetitive vs the US. I'd say it's not Europe that is underperforming, rather the US has been over-performing since the 2008 GFC. If we look at other major developed countries (say Japan, S Korea, Canada, Austalia, New Zealand) they also lack the same innovation ecosystem the US has. Their economies have also been largely stagnating since the 2008 GFC in terms of metrics like nominal GDP per capita, labor prodictivity (GDP/hours worked), market cap of their national stock exchanges and diposable income. Canadian GDP per capita was $52k in 2011, and in 2021 it was still $52k. Meanwhile, these countries also saw their tech sectors decay. Blackberry was so big in late 2000s. Japan had the world's most advanced tech sector in the 80s and 90s. All of it gone, and the breaking point was 2008. You can see that in the productivity and GDP per capita charts of all developed economies except the US. Why did the US outperform everyone so much? The main dynamic change in 2008 was QE. In my opinion, because the USD is the global reserve currency, it meant that the printed money gave an outsized benefit to the US due to the seigniorage effect, and distorted the dynamics of capital formation greatly in the US' favor. reply dukeyukey 10 hours agoparentWhenever you compare the US economy to Europe, keep in mind: * That the US functionally speaks a single language * Has the single largest piece of arable land on the planet * Overlaid with the largest navigable river system in the world * Has by far the greatest energy resources of any country * And is separated from any competitors by massive oceans and thousands of miles reply jandrewrogers 13 hours agoparentprevThe US has been outperforming since the Second World War but the most notable property is how consistent that performance has been decade over decade. Those consistent small differences in per capita GDP growth rates compound to a big absolute difference over the course of a century. As an interesting correlation, modern institutional venture capital was invented in the US immediately following WW2, and was producing notable outcomes by the 1950s. That has never really been replicated anywhere else. reply jltsiren 12 hours agoparentprevYou should not make international comparisons using US dollars with 2008 as the baseline. 2008 was the year when the US dollar crashed. €1 was worth over $1.5 for about 5 months, which was well above the typical levels. Because of that, all the numbers will be nonsensical. It's usually better to use the local currency and adjust for inflation. If I got the numbers right, the real GDP per capita of Canada grew ~14% from 2008 to 2022. That's less than the 18-19% for the US, but not that much less. reply hollerith 14 hours agoparentprevSeigniorage is \"profit made by a government by issuing currency\" (according to Google). So the US government got all this money. And this led somehow to the US economy outperforming the rest of the developed world? reply cherryteastain 14 hours agorootparentMoney is a representation of wealth. Underpinning that are real resources and labor, economists have realized this since Adam Smith. Debt is money creation. Deficit spending by the US govt is money creation; FED literally creates out of of thin air some money to buy T bills when it does QE. USD is the global reserve currency. Practically all trade deals are in USD, even when say a S Korean firm sells stuff to Indonesia. Only the US can print USD, all other countries must export goods or services to acquire the USD needed for their imports. Say an amount X USD represents all goods and services in the world. When the USG prints money, now X+dX dollars represent the same goods and services. USG spends the dX amount via salaries, purchase orders etc, and this amount reaches US companies and individuals. These individuals then purchase goods and services abroad. Essentially, without producing or selling anything in return, US gets to import dX dollars worth of goods and services. That's what seigniorage means in that context. reply brodo 15 hours agoprevMy pet theory on why tech in Europe is worse than in the US is the lack of career opportunities for software devs. If I, as a developer, want to make more than 100k a year here in Germany, the easiest thing is to work remotely for a US company. There is no corporate ladder for devs. If there is one, it isn't very long. Hungry, young devs move into management or consulting. So, there is no incentive to get better as a developer. I’m, of course, talking generalities here; there will be exceptions. reply andersa 10 hours agoparentI'm currently in Germany working remotely for a US company as you described. They pay around 200k pre tax. There are real growth options from there. I've never seen a single competing offer from a German company, not even at the highest level. A local career here as a developer is a dead end. reply whiplash451 15 hours agoparentprevIs it really that bad with the Datadog, Databricks, and the like plus the local bigtech offices? reply NorwegianDude 16 hours agoprev> Failing in the EU has the same downside as in the US Not really. The safety net is much better in some EU countries. reply fullshark 16 hours agoprev> In SF you frequently hear big tech people talking how hard they work, while they queue 30mins for a coffee at Blue Bottle and chitchatting there for another 20mins. God people still haven't figured out how knowledge work and work ethic there is illustrated when you are giving your brain to your employer instead of your body. Some of these workers are thinking about work problems literally 24 hours a day, and come up with solutions in their dreams, but because they aren't literally chained to their desk writing lines of code every single second they are observed they are lazy slackers. Can't stand this crap and it's just gonna get worse. Unless executives see you in pain, or are forced to sacrifice something you value like attending your kids piano recital they don't beleive you are dedicated enough to the cause like they are. reply xp84 15 hours agoparentI don't believe it's black and white. Sure, some workplaces are too demanding, but in other cases, people are taking advantage. My observations (in the USA) over the past few years suggest that most people who were hired around 2019-2021 when hiring technical staff was super difficult, have an absolutely bonkers level of entitlement. People are making 200k a year, and bristle at the implication that it's not acceptable for them to be completely absent (from their fully remote jobs) and unreachable all day without warning. None of the nearshore workers I've worked with exhibit this attitude -- it's only Americans, and only the engineers. They assume that the company wouldn't dare risk losing them by calling them out on this, and that if they did lose their job it's going to be trivial to get an equal or better one anyway, so why should they do anything that might cause any stress? Why should they have a sense of urgency? \"I'll get on it when I get back from the beach, the waves are really good this morning.\" That's the work ethic. I'm not saying it's everyone, of course, but it's a common attitude. Oh, and all these people have incentive stock options, but don't seem to really believe they matter, so they are deeply disappointed with like a 4% raise, thinking a 10-20% annual raise makes sense. Overall the attitude isn't one of \"i'm going to do everything I can to make us successful so my equity will make me rich\" it's \"I'm going to maximize my cash compensation and minimize my hours spent on work until it's not fun anymore, then on to the next.\" By the way, it is their right to act this way if they want, but I'm pretty sure the bottom 50% of US engineers (in terms of ambition) are going to find themselves replaced by nearshore talent that works harder than they do and doesn't even think hard work is an injustice. reply fullshark 15 hours agorootparentYes there are entitled children who will get a wake up call, a lot of people were openly rooting for a major recession in part because they WANTED that wakeup call to come very badly, not just executives but their co-workers who were driven crazy. I thought that was messed up but I get it, it seems unfair. They aren't doing their fair share, very common human emotion in social groups. But that sentence I highlighted just illustrates the thinking at the executive level (writer of this post is a CTO/Founder) and it drives me mad, and I believe the primary desire for in-office work. Creating a sustainable working environment where you deal with business problems is not the goal, the goal is to squeeze every ounce of labor you can for the money you pay and with no real idea how much work goes into the job, what's actually hard v. not, the only thing they can do is observe and bristle at stupid metrics like \"how long is that coffee break.\" reply Muromec 10 hours agorootparentprev>That's the work ethic. I'm not saying it's everyone, of course, but it's a common attitude So, why are those people not being fired? Because it sounds like they are judging their contribution to their employer and their own bargaining power exactly right if they are not being fired. reply seydor 15 hours agoprevThere are multiple EU countries that offer that \"pro-business legal framework\" which speak english and even offer very low taxes (Ireland Estonia Cyprus Malta Bulgaria etc). The problem is, as soon as they become substantially big , politicians will reign them in, and the \"single market\" suddenly breaks to 26 pieces. There are many ideas about how to fix things. What is missing is political will . Politicians find it easier to leech off (european and US) entrepreneurship , in order to \"give back\" trinkets to their audience. Look at how EU subsidies and grants are given, and how little return europe gets from huge research projects like ERC grants. It's mainly a eu-wide jobs creation program for perpetual academics. Until you change that thinking, all ideas are not usable reply KBme 6 hours agoprevTaxes in California were very different when SV started. It's now running on intertia and fumes. People who compare salaries obviously have no idea about the difference in cost of living in the US especially in California and especially in SV. The productivity graph is obviously totally useless and not a representation of tech workers, but maybe fast food workers and diversity officers. The characterisation of taxes and ease to start a business is utterly false. reply mediumsmart 4 hours agoprevDear Human, the 3 things that make life worth living are doing what you like for a living, having someone to love and something to hope for. You can learn that from me or the hard way. Happiness is so unassuming and easy to overlook, you have to pay attention. reply skybrian 16 hours agoprevEvidence is lacking and the question is so vague that it isn’t worth arguing about. Both “Europe” and “the US” are too large and amorphous to usefully compare in an online discussion. reply rdm_blackhole 15 hours agoprevThe problem with the EU wide Inc, is who gets the tax revenue? Is it the country you live in or the country where most of your customers are based in? What if your customers all live outside the EU? France is never going to accept that you live in France but your business pays it's taxes in Germany or vice versa. Also I don't agree with the author's take that Europe is not risk averse. It is risk averse. I tried to open a bank account in USD at my local bank because I wanted my accountant to have access to all the deposits/invoices for my business. I had to answer a form with 50 questions as to why I needed this bank account. I was told the process would take months potentially. the result is that 6 months later I never received a response and now I am using Revolut as my bank. It's the small things really. About the lack of English, that is absolutely true but not because EU kids don't spend enough time learning English, it's because of the teaching style and the culture. In France all the movies/tv shows are dubbed in French. In Sweden it's not. Guess who speaks better English? In Sweden I hear kids as young as 11 or 12 talk in English with their friends because it's cool. In France, there is no way in hell that this would happen. Finally the way languages are taught in France is absolutely terrible. There is a lot of emphasis on reading and grammar rules but barely any talking. The result is that a high school graduate who has spent almost 8 years leaning English 2 hours per week at school can't hold a normal conversation in English for more than a few minutes. reply samuelstros 13 hours agoparent> The problem with the EU wide Inc, is who gets the tax revenue? Every country proportional to the profit they generate and the tax rate they set? Companies overall EU profit $100M: - France $30M profit taxed at 20% = $6M - Germany $50M profit taxed at 25% = $12.5M - ... Seems like it \"just\" needs an accounting system that works across the EU. reply rdm_blackhole 2 hours agorootparentYou can't have that because each EU country has different incentives. Some countries tax salaries more than capital, other let you reduce your capital gains or offer a flat tax in certain circumstances. I forgot to mention, but if this EU Inc gets then created who gets the capital gain tax? Should it be divided in 27 or should it prorated to where you lived or where your customers live? Don't get me wrong, I would love to see this happen but just like most of the things in the EU, it would become a nightmare to manage and add even more bureaucracy. It's like VAT collection. We have to rely on middle-man companies to do the proper collection because most countries have vastly different rules regarding VAT. As a business owner every minute I spend on paperwork is a minute less I spend on my business. reply jamesblonde 16 hours agoprevOur biggest problem in the EU is a lack of vc capital. Vc oney goes to consumer SaaS. Most data people are European. Most data companies American. Go figure. reply skrebbel 16 hours agoprevI think this is a fantastic suggestion. Having an EU-wide “Inc” will indeed allow standardized investment vehicles such as SAFEs which in turn makes a lot of very-early-stage investment much cheaper = much more attractive. The EU doesn't need to standardize the SAFEs or stuff like that - the market will take care of that once all startuppy businesses are the same kind of legal entity. reply whiplash451 15 hours agoparentIsn’t Malta close to that, btw? reply voiceblue 16 hours agoprevDoes the data presented here distinguish between full-time and part-time employment? Or hourly and salaried employment? I wasn’t able to find any information other than “hours worked per person employed”, which seems a rather vague statistic to be used to support any claim. reply verteu 16 hours agoparentGood question -- I believe the source is here: https://www.bruegel.org/analysis/european-unions-remarkable-... Reading between the lines, I do not think it distinguishes between full-time and part-time employment: \"In Europe, employees tend to work fewer hours than in the US, partly because there are more paid holidays, the typical working week of a full-time employee is shorter and there is a larger share of part-time workers than in the US.\" reply Muromec 15 hours agoparentprevA lot of people totally work 4 days a week here and it's considered full time contract. Standard language in a contract at the company I'm working for is 32 hours per week, so everybody doing full 5 days a week is having a coefficient applied already. reply mcluck 16 hours agoprevIt's a tricky thing: my experience does mirror some of the \"propaganda\" despite coming to Europe with heavily rose-tinted glasses. I'm not going to pretend that my limited data is enough to extrapolate to the whole of the continent but it's still a data point. The work culture is very different. There's a clear attitude of working until the next holiday and the company never gets one minute more than what they pay me for. That's honestly not a _bad_ perspective to have but it's not ideal if you're trying to build a startup reply Muromec 15 hours agoparentI'm pretty sure the attitude to work depends whether you are a startup or not, whom you hire and on what conditions. It makes sense to work 12 hours a day in your 20ies when you have no other things to do and get a piece of what you are building in return. Otherwise, it's just business -- company wants me to work more and pay less, I want the opposite, so I pay my union fees and don't touch work laptop after 6pm ever. reply whatshisface 16 hours agoprevIt will be interesting to see what happens when the US loses the single market due to these state internet regulations, while the EU eventually figures it out. reply GardenLetter27 15 hours agoparentLanguage is still an absolutely massive barrier though. To hire across the EU you need 27 tax offices and lawyers, following laws in every language, privacy policies, etc. in every language. reply smarri 15 hours agoprevThere is more to life than work. Disclaimer: European reply sideway 15 hours agoprevGenuine question - could someone give some insight on why the post was flagged? I found the article interesting and it wasn't my intention to divide the audience. If anything, I believe lots of the comments here contribute positively in forming a more educated and all-round view on the matter. reply alephnerd 14 hours agoparentSome people got butthurt or felt overly defensive. reply next_xibalba 16 hours agoprevWhy did this get flagged? reply AnimalMuppet 15 hours agoparentMaybe because it led to a bunch of USA-is-great chest-beating, and a bunch of Europe-is-great chest-beating, and very little discussion of the actual content of the article. I was 80% of the way through the comments before I saw any mention of the article's point. (Though I did see two comments claiming that they didn't understand it, which seems hard to believe, given that it was both simple and stated about three times.) So: Flagged because it led to a lousy discussion, not because it was a lousy article. But that actually seems to be on HN rather than on the article, at least in my humble opinion... reply thefz 14 hours agoprev> So, what do we need to change > First, we need to stop believing the US meme about Europe. Never believed that for a second. First, twitter is not real life. Second, let the europeans speak about Europe, not those who live thousands of kilometers away. reply ta1243 16 hours agoprev\"If you go to the south of France – our hope and prayers in the global AI race – and order a coffee there is a chance that the waitress doesn’t understand the word “coffee”, can’t explain you what’s in the salad – happened to me twice.\" Oh they'll understand. They will just pretend not to. It's France. reply lores 16 hours agoparentOh no! Someone in a foreign country did not make any more effort than the author did to learn a foreign language! Not once, but twice! That's it, I'm never leaving San Francisco again. And as for your snark, no, many French people do not speak English, and a fair number resent Americans going around like they own the place without making even a cursory attempt at being polite. reply ta1243 16 hours agorootparentBest way for a native English speaker to get someone in France to speak English is to speak French to them. I speak French, German, and a small amount of Greek (enough to order a coffee and read a map). That's no use when I go to Italy or Spain or Poland or Latvia or Sweden of course, so we just speak English. The big difference between europe and america is the market. The US is a homogenous culture with a single language and single desires with 350 million people. You can launch a product in the US based on US culture and assumptions and reach a massive economy Launch it in Belgium and you've got a fragmented market. Not just the language, but also the culture -- expectations in Belgium, Romania and Norway are all very different. reply dl9999 13 hours agorootparentprevMy wife and I are from the U.S. She's from Belarus, but has been in the country for 30 years. We went to France about 10 years ago. I was semi-expecting the stereotype (rude, arrogant), but everybody we met was nice. One guy at the hotel seemed standoff-ish at first, but he was very friendly by the time we left a week later. Pretty much everybody we interacted with was pleasant and helpful. We tried to use the few French words we knew (thank you, please, hello, goodbye type of thing), but for the most part we had to speak English. I think almost everybody we interacted with spoke English, at least a little. This was in Paris mostly, so maybe that's not representative. I was generally impressed with the people. reply rdm_blackhole 15 hours agoparentprevNo they don't. As a French person, I can assure you that the level of English of the average French person is completely abysmal. On the other hand, as a foreigner, I have been to tiny villages in Sweden where even 70 year old grandmas know enough English to communicate. reply narrator 8 hours agoprevDoes Europe have QSBS? I think that leads to the serial entrepreneur and angel thing. reply sturza 16 hours agoprevThe author has a very specific twitter feed. I would not generalize based on that. reply haywirez 15 hours agoprevWhy is this flagged? The real talk ratio in the article is notably high. reply devdao 16 hours agoprevA reasonable article that proposes 1 EU Corps 2 Standard English language schooling Seems wise enough. What will it take? reply KronisLV 16 hours agoparentI'm surprised that most of the comments seem to focus on other comparisons of EU and US, there's very little on those two points. Personally, I think that English as the lingua franca makes sense in many contexts, since that's pretty much the case in IT already. For example, trying to translate various terms in any given language from English usually causes inconvenience and confusion (everyone needs to know the localized version and then translate it back into English to find literature etc.). Therefore, it makes sense to teach everyone English. reply alephnerd 15 hours agorootparentIn CEE (excluding Germany and Austria) sure, but not as much in Western Europe (eg. France or Germany). I've had an easy time managing Eastern European employees in English, but Western European ones sucked at the language, and always had a bit of a complex surrounding English. reply aleph_minus_one 10 hours agorootparentprev> For example, trying to translate various terms in any given language from English usually causes inconvenience and confusion (everyone needs to know the localized version and then translate it back into English to find literature etc.). Therefore, it makes sense to teach everyone English. Similarly, translating a lot of terms from German or Russian to English often causes inconvenience and confusion. So better learn German and Russian. :-) reply KronisLV 3 hours agorootparent> Similarly, translating a lot of terms from German or Russian to English often causes inconvenience and confusion. So better learn German and Russian. :-) If the programming language key words that I needed to know used those languages, as did all of the documentation and forums, conference videos and literature, that's exactly what I'd do. But somehow those aren't the languages that everyone uses, nor is something like Chinese (and its dialects) which has a lot of users, but isn't as geographically widespread. Maybe people have also settled on English because it has a somewhat low barrier to entry as well. I guess it's the same as needing to know at least some latin in the natural sciences, because otherwise something like naming bones when talking to a foreign colleague would get awkward, fast. reply notfed 16 hours agoprevUS here, I've never heard of those propaganda claims before. reply mindcandy 16 hours agoparentUS here, and I've heard all of them from Americans and Europeans. Other one I've heard is that if you start a company and it fails, at least in Silicon Valley they ask \"So, what are you making next?\". But, in Europe they imply that you apparently are not the right kind of person to be starting companies. reply dukeyukey 10 hours agoparentprevPop on Twitter and you'll see plenty of it. reply anonzzzies 16 hours agoparentprevLike the author says; it’s the mentality on Musk’s X generally. reply Paianni 16 hours agoprevTeaching English will just reinforce Anglo-American hegemony. reply juxtapose 13 hours agoparentI kind of agree with you, and (as a hobbyist linguist) I believe a diversity of languages is a beautiful thing, but it creates unnecessary friction for business and about everything. Europe really needs a unified language -- it could be English, French, German, or even Interlingua or Esperanto. Lingua franca really matters. China, for example, didn't have a unified spoken language until about 100 years ago. However, Mandarin is today universally understood and spoken in the country. And the result? You only to know one language, and you can have access to one of the largest markets in the world. Alas, the same could not be said for Europe. (In fact, Europe needs a unified language if people are serious about getting rid of English and the Anglo-American hegemony, because each smaller language really cannot fight English now.) reply flumpcakes 15 hours agoparentprevI think that's the point of this article to be honest. If we lived in a fair and just world, the EU having the 4th largest economy doesn't seem like a bad thing. Going by numbers alone China (1.8bn) and India (1.5bn) are much more populace than the EU (450mln). However, I would would probably side with the author and personally much prefer a group of liberal democracies following the rule of law to always be on top. If the world needs to bow to autocracies then we will have a bad time, Russia is just the prelude. reply seydor 16 hours agoparentprevWith UK out, even the french may be OK with it. It might as well be like latin, it's not even Ireland's language reply next_xibalba 16 hours agoprev> In SF you frequently hear big tech people talking how hard they work, while they queue 30mins for a coffee at Blue Bottle and chitchatting there for another 20mins. Gotta be the Googlers. Elon and Zuck have shown the light to most tech cos and they are emulating to one degree or another. But Google seems unwilling/unable to deal effectively with the WLB'ers. After all, how can they conduct all of their political activities if work is getting in the way? reply bedobi 16 hours agoprevIncorporation is already simple in the EU. Just pick the easiest jurisdiction, access the common market. Yes, local labor laws for employing people in different countries vary, but so does the states. The English language thing, meh. I used to think the same but no longer do. Diversity is a good thing, it's Anglos who could use learning to work in different languages and cultural contexts. Last but not least, just the tech bro-itis is so strong with this article. Like yeah if your identity and life is consumed by being a tech bro and you want the world to optimize for that and your startups, sure, let's make everywhere Delaware and the Bay Area. But that's not what most of the world wants or tries to do. reply ghusto 14 hours agoprevYup, in my experience Europeans value quality of life over making their boss's richer. reply alephnerd 14 hours agoparentRead TFA. reply ghusto 14 hours agorootparentRead it, and that's my response. I get it, we could be more like the U.S.A. in the way we operate by removing / changing some of the obstacles we have for business. I don't want that. reply alephnerd 14 hours agorootparentEnglish fluency and simplified incorporation are not major changes for Western Europe. Hell, Switzerland does this, as do countries like China and India. reply baudaux 14 hours agoprevWhen we see how the world is going, it is preferable to stay asleep reply Dig1t 16 hours agoprevMy company offers relocation from the US to Paris. The Paris office is beautiful, right near the Eiffel Tower. If I take the relocation I get an automatic 50% salary cut, and my tax bill goes way up. Not to mention VAT and other expenses. Seems like Europe’s problem with innovation is maybe related. reply Muromec 15 hours agoparent>If I take the relocation I get an automatic 50% salary cut It's obvious that cashflow will suffer. The question is whether you will like living in Paris on the money that's left. There is a good chance you would and will also discover where the hidden taxes of living in US were. Or not. reply Dig1t 12 hours agorootparentIt’s vastly cheaper to live in the US, I talk to my Paris coworkers quite a lot and they pay more for just about everything except maybe childcare. My health insurance is free in the US, covered by my employer, my tax rate is 35% whereas I would be taxed at 45% in Paris. Gas costs more in Paris, car registration and taxes cost more, just buying a car in the first place costs way more, not to mention the car I own is not even legal there so I’d not even be allowed to do the same types of activities. Forget taking my truck to the lake with the kayaks and forget hauling materials to build my house. It just doesn’t make sense why any smart, capable person would choose to live in Europe unless they absolutely loved the culture. reply Muromec 10 hours agorootparent>Forget taking my truck to the lake with the kayaks and forget hauling materials to build my house. This is totally not how you move to Paris. reply Dig1t 4 hours agorootparentIt's not just Paris, it's most of Europe. Also Paris has suburbs, and it is reasonable to consider owning a car if living in them. Many of my coworkers commute into the middle of the city from the suburbs on the outskirts. reply whiplash451 15 hours agoparentprevCurious about why your tax bill goes way up. Do you have data to back this up? Marginal tax rates are very similar between the US and France. France taxes more than the US is a myth that needs to go away (at least for individuals, might be true for corps) reply Dig1t 12 hours agorootparentMy current tax rate is 35% where I live in the US. I would be taxed at 45% if I lived in Paris. Sales tax is 8% where I live in the US. VAT is 20% in Paris. reply b800h 15 hours agoparentprevIn which direction? reply photochemsyn 16 hours agoprevCuriously China's very successful economic model - in which capital is more under state control than in private hands, but there's still a competetive market as industrial monopolies are discouraged - isn't brought up here - even though certain major European industrial sectors seem to be finding China more attractive these days, e.g. BASF; https://www.reuters.com/markets/deals/basf-agrees-15-year-ga... Apparently the Chinese are working too hard and being too productive, hence Janet Yellen complaining about 'overcapacity' recently: > \"I think the Chinese realise how concerned we are about the implications of their industrial strategy, for the United States, for the potential to flood our markets with exports that make it difficult for American firms to compete\" Yellen said. \"And then other countries have the same concern.\" reply alephnerd 12 hours agoparent> in which capital is more under state control than in private hands That statist description only started post-2016 after the market crash. From 1979-2015 Beijing was very hands off (excluding local level PLI subsidizes, but basically every country offers them - think Amazon HQ 2.0 back in the 2010s or Yozma in Israel back in the 1990s). reply starluz 14 hours agoparentprevToo productive by absolute terms yes- they are producing a shit ton of copied low quality junk including their cars. Not productive in value terms reply flumpcakes 15 hours agoparentprevI think China is the workhouse and that's the source of it's power. Ultimately it's a dictatorship with imperial ambitions. It's blatantly using this power already to weaken democracies through IP theft and \"overcapacity\". It seems like some countries are becoming wary of China and are now moving production to other asian countries. I've seen a few interviews lately of Chinese workers complaining they are no longer employed because the 'west' has moved production abroad and how that's a very bad thing for the world. It seems like people are realising that China has weaponised capitalism. I guess people assumed they would be as benign as Japan in their industrialisation in the 60s-90s. reply juxtapose 12 hours agorootparentIt seems you are very ideology-driven, but no, corporations are not moving production out of China because \"China bad\". It's just because labor costs in China have risen due to its fast development. reply dumpHero2 16 hours agoprev> I don’t want to do pure stats comparing Starts with stats comparing reply davidelettieri 14 hours agoprev> Even Italians work more hours than Americans That's a bit gratuitous reply ffsm8 15 hours agoprevAs a fellow European that started skimming the article halfway through as I was facepalming too hard: did he never look at the raw numbers? If you target the US market the pie is basically 10x times what it would be if you targeted your country in Europe. Realistically speaking, Europe ain't got a chance unless we abolish our countries entirely, creating a single market. And that's not gonna happen. Ever. reply kazen44 11 hours agoparentAlso, abolishing your country into some superstate will not change the fact that people of europe consist of many different cultures with many different believes, practices, expectations etc, and have done so for many many thousands of years. you could try to change that for macroeconomic gain, but i highly doubt that will work if we look at history. reply andersa 11 hours agoparentprevThe alternative is slowly fading into irrelevance. reply whiplash451 15 hours agoprev« But India is one country » I am sorry but this argument cannot be dismissed. The reason why Europe struggles to implement changes is precisely because it is not a single country but a large group of countries represented by complex bodies where politics strive. reply daseiner1 15 hours agoparentThis is the entire thrust of the article.... reply sjm 16 hours agoprevThese e/acc types are insufferable and if anything \"SF\" has been ruined by them. I know I'll get downvoted or flagged given this is HN, but there's more to life than startups and private equity[0]. Let's leave Europe alone, huh? [0]: https://worldhappiness.report/ed/2023/world-happiness-trust-... reply wbl 16 hours agoparentWhen you're rich you can have untouchable bombers and precision artillery destroy your genocidal enemies from hundreds of miles away. When you're poor you end up suffering from bombings and cruise missile attacks. When you're rich you have AC. When poor you die in heat waves. When rich you get to integrate immigrants to the point. When poor neo-Nazi politicians stir up trouble as they languish in poverty and squalor. When rich you get to crush pandemics. When poor you have to pretend they aren't happening. Europe was not poorer in the 2000's. This is just cope about the failure to handle the financial crisis and COVID properly. reply adamnemecek 16 hours agoparentprevYour need business activity for a society to function. Do you want Europe not to have a horse in the US/China race? SAP is not it. reply asdasdsddd 16 hours agoparentprevWhy are you on a startup forum then? reply 29athrowaway 16 hours agoprevEurope needs its own tech megacorps. Their own OS, office suite, cloud provider, source control, social media, mobile devices, etc. The creates the abundance of data required to win at AI. Because Europe doesn't own its own data, they lack the data necessary to win in AI against others that do. Creating a EU startup ecosystem without the megacorps is just feeding the American megacorps more because those startups will get acquired by the highest bidder. reply rdm_blackhole 15 hours agoparentIf you want people to start using EU cop instead of US corps, then the service provided needs to be matching what's offered by Amazon. Google and so on. The problem is that the EU does not put enough money for these systems to be started in the first place. Look at this snippet: The European Commission approved on Tuesday up to 1.2 billion euros ($1.30 billion) of state aid for a European cloud computing project to try to boost the in",
    "originSummary": [
      "The author challenges stereotypes by showcasing the hard work and risk-taking mentality of European entrepreneurs, countering the notion of Europeans as lazy and risk-averse compared to Americans.",
      "Suggestions include establishing a standardized legal entity in the EU, enhancing English education, and striving to build a unified business market to address hurdles like regulatory variations and limited early-stage support for startups.",
      "These proposals aim to foster a more conducive environment for entrepreneurship in Europe and encourage policymakers to rethink strategies for boosting the continent's entrepreneurial landscape."
    ],
    "commentSummary": [
      "Differences in work culture showcase risk-taking favored by American software developers versus the safety emphasis in Europe.",
      "San Francisco stands out as a unique center for risk-taking and long work hours in the US tech sector, impacting productivity and hiring practices.",
      "The conversation delves into challenges faced by European tech companies post-Brexit, emphasizing the importance of English fluency and investment to compete with the dominant US market in AI."
    ],
    "points": 228,
    "commentCount": 277,
    "retryCount": 0,
    "time": 1714497156
  },
  {
    "id": 40213292,
    "title": "Exploring Neural Networks with Differentiable Programming",
    "originLink": "https://www.sscardapane.it/alice-book",
    "originBody": "Book: Alice’s Adventures in a differentiable wonderlandPermalink Neural networks surround us, in the form of large language models, speech transcription systems, molecular discovery algorithms, robotics, and much more. Stripped of anything else, neural networks are compositions of differentiable primitives, and studying them means learning how to program and how to interact with these models, a particular example of what is called differentiable programming. This primer is an introduction to this fascinating field imagined for someone, like Alice, who has just ventured into this strange differentiable wonderland. I overview the basics of optimizing a function via automatic differentiation, and a selection of the most common designs for handling sequences, graphs, texts, and audios. The focus is on a intuitive, self-contained introduction to the most important design techniques, including convolutional, attentional, and recurrent blocks, hoping to bridge the gap between theory and code (PyTorch and JAX) and leaving the reader capable of understanding some of the most advanced models out there, such as large language models (LLMs) and multimodal architectures. Table of contentsPermalink The book is currently in a draft form and available for feedback and beta reading from arXiv: arXiv preprint 2404.17625. Foreword and introduction Mathematical preliminaries Datasets and losses Linear models Fully-connected layers Automatic differentiation Convolutive layers Convolutions beyond images Scaling up models Transformer models Transformers in practice Graph layers Recurrent layers Appendix A: Probability theory Appendix B: Universal approximation in 1D Additional chaptersPermalink I will publish here additional chapters on more advanced material that I could not fit into the first volume. Eventually, I hope these will be part of a second volume. More probably, they will languish here forever. Model re-use (including parameter-efficient fine-tuning and model merging). Density estimation and generative modelling. Conditional computation (mixture-of-experts, early exits). Metric and self-supervised learning. Debugging and understanding the models.",
    "commentLink": "https://news.ycombinator.com/item?id=40213292",
    "commentBody": "Alice's adventures in a differentiable wonderland (sscardapane.it)185 points by tosh 16 hours agohidepastfavorite74 comments xanderlewis 15 hours ago> Stripped of anything else, neural networks are compositions of differentiable primitives I’m a sucker for statements like this. It almost feels philosophical, and makes the whole subject so much more comprehensible in only a single sentence. I think François Chollet says something similar in his book on deep learning: one shouldn’t fall into the trap of anthropomorphising and mysticising models based on the ‘neural’ name; deep learning is simply the application of sequences of operations that are nonlinear (and hence capable of encoding arbitrary complexity) but nonetheless differentiable and so efficiently optimisable. reply jonas21 5 hours agoparentI feel like this statement is both obvious after spending a few minutes working with neural networks and completely useless in helping you build better neural networks. It's kind of like saying, \"Stripped of anything else, works of literature are compositions of words\" reply captainclam 15 hours agoparentprevUgh, exactly, it's so cool. I've been a deep learning practitioner for ~3 years now, and I feel like this notion has really been impressed upon me only recently. I've spent an awful lot of mental energy trying to conceive of how these things work, when really it comes down to \"does increasing this parameter improve the performance on this task? Yes? Move the dial up a bit. No? Down a bit...\" x 1e9. And the cool part is that this yields such rich, interesting, sometimes even useful, structures! I like to think of this cognitive primitive as the analogue to the idea that thermodynamics is just the sum of particles bumping into each other. At the end of the day, that really is just it, but the collective behavior is something else entirely. reply xanderlewis 14 hours agorootparent> At the end of the day, that really is just it, but the collective behavior is something else entirely. Exactly. It’s not to say that neat descriptions like this are the end of the story (or even the beginning of it). If they were, there would be no need for this entire field of study. But they are cool, and can give you a really clear conceptualisation of something that can appear more like a sum of disjoint observations and ad hoc tricks than a discipline based on a few deep principles. reply JackFr 14 hours agorootparentprevNAND gates by themselves are kind of dull, but it's pretty cool what you can do with a billion of them. reply kadushka 9 hours agorootparentprevit comes down to \"does increasing this parameter improve the performance on this task? Yes? Move the dial up a bit. No? Down a bit...\" x 1e9 This is not how gradient based NN optimization works. What you described is called \"random weight perturbation\", a variant of evolutionary algorithms. It does not scale to networks larger than a few thousand parameters for obvious reasons. NNs are optimized by directly computing a gradient which tells us the direction to go to to reduce the loss on the current batch of training data. There's no trying up or down and seeing if it worked - we always know which direction to go. SGD and RWP are two completely different approaches to learning optimal NN weights. reply captainclam 7 hours agorootparentI guess you could say I don't know RWP from Adam! :D My og comment wasn't to accurately explain gradient optimization, I was just expressing a sentiment not especially aimed at experts and not especially requiring details. Though I'm afraid I subjected you to the same \"cringe\" I experience when I read pop sci/tech articles describe deep learning optimization as \"the algorithm\" being \"rewarded\" or \"punished,\" haha. reply kadushka 5 hours agorootparentNo worries, we're all friends here! it's just you happened to accidentally describe the idea behind RWP, which is a gradient-free optimization method, so I thought I should point it out. reply xanderlewis 9 hours agorootparentprevI don’t think the author literally meant tweaking the parameters and seeing what happens; it’s probably an analogy meant to give a sense of how the gradient indicates what direction and to what degree the parameters should be tweaked. Basically, substitute ‘the gradient is positive’ for ‘increasing this parameter decreases performance’ and vice versa and it becomes correct. reply p1esk 8 hours agorootparentThat substitution is the main difference between SGD and RWP. It’s like describing bubble sort when you meant to describe quick sort. Would not fly on an ML 101 exam, or in an ML job interview. reply xanderlewis 7 hours agorootparentIt’s not like that at all. You couldn’t accidentally sound like you’re describing quick sort when describing bubble sort, or vice versa. I can’t think of any substitution of a few words that would do that. The meaning of the gradient is perfectly adequately described by the author. They weren’t describing an algorithm for computing it. reply a_random_canuck 6 hours agorootparentprevI don’t think anyone is trying to pass an exam here, but just give an understandable overview to a general audience. reply naasking 12 hours agoparentprev> one shouldn’t fall into the trap of anthropomorphising and mysticising models based on the ‘neural’ name One also shouldn't fall into the dual trap of assuming that just because one understands how a model works, it cannot have any bearing on the ever-mysterious operation of the brain. reply sideshowb 11 hours agoparentprev> deep learning is simply the application of sequences of operations that are nonlinear but nonetheless differentiable Though other things fit this description which are not deep learning. Like (shameless plug) my recent paper here https://ieeexplore.ieee.org/document/10497907 reply jimbokun 12 hours agoparentprevI always get the impression even the proponents of these algorithms when they didn't seem so promising, are shocked at the capabilities demonstrated by models built with such a relatively simple procedure. reply gessha 14 hours agoparentprevIt is soothing to the mind because it conveys that it’s understandable but it doesn’t take away from the complexity. You still have to read through math and pytorch code and debug nonsensical CUDA errors, comb through the data, etc etc reply whimsicalism 14 hours agorootparentthe complexity is in the values learned from the optimization. even the pytorch code for a simple transformer is not that complex, attention is a simple mechanism, etc. reply gessha 13 hours agorootparentComplexity also comes from the number of papers that work out how different elements of network work and how to intuitively change them. Why do we use conv operators, why do we use attention operators, when do we use one over the other? What augmentations do you use, how big of a dataset do you need, how do you collect the dataset, etc etc etc reply whimsicalism 13 hours agorootparentidk, just using attention and massive web crawls gets you pretty far. a lot of the rest is more product-style decisions about what personality you want your LM to take. I fundamentally don't think this technology is that complex. reply gessha 6 hours agorootparentNo? In his recent tutorial, Karpathy showed just how much complexity there is in the tokenizer. This technology has been years in the making with many small advances pushing the performance ever so slightly. There’s been theoretical and engineering advances that contributed to where we are today. And we need many more to get the technology to an actually usable level instead of the current word spaghetti that we get. Also, the post is generally about neural networks and not just LMs. When making design decisions about an ML system you shouldn’t just choose the attention hammer and hammer away. There’s a lot of design constraints you need to consider which is why I made the original reply. reply zackmorris 14 hours agoparentprevYa so far this is the best introduction to neural networks from first principles that I've seen. Quickly skimming the draft pdf at https://arxiv.org/pdf/2404.17625 I can grok it instantly, because it's written in familiar academic language instead of gobbledygook. Anyone with an undergrad math education in engineering, computer science, etc or a self-taught equivalent understanding of differential equations should be able to read it easily. It does a really good job of connecting esoteric terms like tensors with arrays, gradients with partial derivatives, Jacobians with gradients and backpropagation with gradient descent in forward/reverse mode automatic differentiation. Which helps the reader to grasp the fundamentals instead of being distracted by the implementation details of TensorFlow, CUDA, etc. Some notable excerpts: Introduction (page 4): By viewing neural networks as simply compositions of differentiable primitives we can ask two basic questions (Figure F.1.3): first, what data types can we handle as inputs or outputs? And second, what sort of primitives can we use? Differentiability is a strong requirement that does not allow us to work directly with many standard data types, such as characters or integers, which are fundamentally discrete and hence discontinuous. By contrast, we will see that differentiable models can work easily with more complex data represented as large arrays (what we will call tensors) of numbers, such as images, which can be manipulated algebraically by basic compositions of linear and nonlinear transformations. Chapter 2.2 Gradients and Jacobians (page 23): [just read this section - it connects partial derivatives, gradients, Jacobians and Taylor’s theorem - wow!] Chapter 4.1.5 Some computational considerations (page 59): In general, we will always prefer algorithms that scale linearly both in the feature dimension c and in the batch size n, since super-linear algorithms will become quickly impractical (e.g., a batch of 32 RGB images of size 1024×1024 has c ≈ 1e7). We can avoid a quadratic complexity in the equation of the gradient by computing the multiplications in the correct order, i.e., computing the matrix-vector product Xw first. Hence, pure gradient descent is linear in both c and n, but only if proper care is taken in the implementation: generalizing this idea is the fundamental insight for the development of reverse-mode automatic differentiation, a.k.a. back-propagation (Section 6.3). Chapter 6 Automatic differentiation (page 87): We consider the problem of efficiently computing gradients of generic computational graphs, such as those induced by optimizing a scalar loss function on a fully-connected neural network, a task called automatic differentiation (AD) [BPRS18]. You can think of a computational graph as the set of atomic operations (which we call primitives) obtained by running the program itself. We will consider sequential graphs for brevity, but everything can be easily extended to more sophisticated, acyclic computational graphs. The problem may seem trivial, since the chain rule of Jacobians (Section 2.2, (E.2.22)) tells us that the gradient of function composition is simply the matrix product of the corresponding Jacobian matrices. However, efficiently implementing this is the key challenge, and the resulting algorithm (reverse-mode AD or backpropagation) is a cornerstone of neural networks and differentiable programming in general [GW08, BR24]. Understanding it is also key to understanding the design (and the differences) of most frameworks for implementing and training such programs (such as TensorFlow or PyTorch or JAX). A brief history of the algorithm can be found in [Gri12]. Edit: I changed Chapter 2.2.3 Jacobians (page 27) to Chapter 2.2 Gradients and Jacobians (page 23) for better context. reply jxy 14 hours agoparentprev> > Stripped of anything else, neural networks are compositions of differentiable primitives > I’m a sucker for statements like this. It almost feels philosophical, and makes the whole subject so much more comprehensible in only a single sentence. And I hate inaccurate statements like this. It pretends to be rigorous mathematical, but really just propagates erroneous information, and makes the whole article so much more amateur in only a single sentence. The simple relu is continuous but not differentiable at 0, and its derivative is discontinuous at 0. reply xanderlewis 14 hours agorootparentIt’s not ‘inaccurate’. The mark of true mastery is an ability to make terse statements that convey a huge amount without involving excessive formality or discussion of by-the-by technical details. If ever you’ve spoken to world-renowned experts in pure mathematics or other highly technical and pendantic fields, you’ll find they’ll say all sorts of ‘inaccurate’ things in conversation (or even in written documents). It doesn’t make them worthless; far from it. If you want to have a war of petty pedantry, let’s go: the derivative of ReLU can’t be discontinuous at zero, as you say, because continuity (or indeed discontinuity) of a function at x requires the function to have a value at x (which is the negation of what your first statement correctly claims). reply newrotik 8 hours agorootparentLack of differentiability is actually a very important feature of the underlying optimization problem. You might think that it doesn't matter because ReLU is, e.g., non-differentiable \"only at one point\". Gradient based methods (what you find in pytorch) generally rely on the idea that gradients should taper to 0 in the proximity of a local optimum. This is not the case for non-differentiable functions, and in fact gradients can be made to be arbitrarily large even very close to the optimum. As you may imagine, it is not hard to construct examples where simple gradient methods that do not properly take these facts into account fail to converge. These examples are not exotic. reply kragen 13 hours agorootparentprevmy experience with world-renowned experts in pure mathematics is that they are much more careful than the average bear to explicitly qualify inaccurate things as inaccurate, because their discipline requires them to be very clear about precisely what they are saying discontinuity of a function at x does not, according to the usual definition of 'continuity', require the function to have a value at x; indeed, functions that fail to have a value at x are necessarily discontinuous there, precisely because (as you say) they are not continuous there. https://en.wikipedia.org/wiki/Continuous_function#Definition... there are other definitions of 'discontinuous' in use, but i can't think of one that would give the result you claim reply xanderlewis 12 hours agorootparent> they are much more careful than the average bear to explicitly qualify inaccurate things as inaccurate Sure. But what part of this entirely worded in natural language, and very short statement made you think it was a technical, formal statement? I think you’re just taking an opportunity to flex your knowledge of basic calculus, and deliberately attributing intent to the author that isn’t there in order to look clever. Regarding a function being discontinuous at a point outside its domain: if you take a completely naive view of what ‘discontinuous’ means, then I suppose you can say so. But discontinuity is just the logical negation of continuity. Observe: To say that f: X —> Y (in this context, a real-valued function of real numbers) is continuous means precisely ∀x∈X ∀ε>0 ∃δ>0 |x - p|a cathedral of knowledge built on autistic pedantry this is certainly true, but more often we use its short name, 'math'. it turns out to be far more effective than so-called common sense reply mistermann 11 hours agorootparentprevThis comment makes me want to both upvote and downvote with extreme enthusiasm/fury! The sign of a truly good conversation? reply whimsicalism 14 hours agorootparentprevit's pretty close to accurate, the lack of differentiability at 0 for relu doesn't really come into play in practice reply andoando 15 hours agoparentprevWhat does \"differentiable primitives\" mean here? reply xanderlewis 15 hours agorootparentI think it’s referring to ‘primitive functions’ in the sense that they’re the building blocks of more complicated functions. If f and g are differentiable, f+g, fg, f/g (as long as g is never zero)… and so on are differentiable too. Importantly, f composed with g is also differentiable, and so since the output of the whole network as a function of its input is a composition of these ‘primitives’ it’s differentiable too. The actual primitive functions in this case would be things like the weighted sums of activations in the previous layer to get the activation of a given layer, and the actual ‘activation functions’ (traditionally something like a sigmoid function; these days a ReLU) associated with each layer. ‘Primitives’ is also sometimes used as a synonym for antiderivatives, but I don’t think that’s what it means here. Edit: it just occurred to me from a comment below that you might have meant to ask what the ‘differentiable’ part means. See https://en.wikipedia.org/wiki/Differentiable_function. reply andoando 14 hours agorootparentIs this function composition essentially lambda calculus then? reply xanderlewis 12 hours agorootparentComposition here just means what it does for any two functions: the value of the ‘composition’ of f and g at x is defined to be f applied to g applied to x. In symbols, its: f∘g := f(g(x)) for each x in the domain of f. It may seem obvious, but the fact that this new thing is also a function (that is, its value is well-defined for every input) is actually a very useful thing indeed and leads to… well, most of mathematics. You can certainly do function composition in lambda calculus: in fact, the act of composition itself is a higher order function (takes functions and returns a function) and you can certainly express it formally with lambda terms and such. It’s not really got anything to do with any particular language or model of computation though. reply andoando 11 hours agorootparentI didn't form my question too well. I understand all that. What I am asking is, are these function compositions equivalent to equivalent/similar to functions in lambda calculus? I guess my question, is what are the primitive functions here doing? reply xanderlewis 11 hours agorootparentWell, yes, to the extent that functions are functions are functions (they’re just associations or mappings or whatever you want to call them). Maybe your question boils down to asking something more general like: what’s the difference between functions to a computer scientist (or a programmer) and functions to a mathematician? That is, are ‘functions’ in C (or lambda calculus), say, the same ‘functions’ we talk about in calculus? The answer to that is: in this case, because these are quite simple functions (sums and products and compositions thereof) they’re the same. In general, they’re a bit different. The difference is basically the difference between functional programming and ‘traditional’ programming. If you have state/‘side effects’ of functions, then your function won’t be a function in the sense of mathematics; if the return value of your function depends entirely on the input and doesn’t return different values depending on whatever else is happening in the program, then it will be. Since you’re asking about lambda calculus in particular, the answer is that they’re the same because lambda calculus doesn’t have state. It’s ‘purely functional’ in that sense. >I guess my question, is what are the primitive functions here doing? I’m not really sure what you mean. They’re doing what functions always do. Every computer program is abstractly a (partial) function. Does that help, or have I misunderstood? reply andoando 10 hours agorootparentSo when I think of functions in lambda calculus, I think of the I,S,K functions which when composed can produce functions like \"copy\", \"add\", \"remove\", \"if\", etc which then can do different computations like \"copy every other symbol if the symbol is true\", \"multiply 5 times then add 2\". Since lambda calculus is complete, any computation/program can be composed. When I think of functions in a traditional mathematical sense, I think about transformations of numbers. x->2x, x->2x^2, etc. I completely understand composition of functions here, ex x->2(x->2x)^2, but its unclear how these transformations relate to computation. For a regression problem, I can totally understand how finding the right compositions of functions can lead to a better approximations. So I am wondering, in an LLM architecture, what computations do these functions actually represent? I assume, it has something to do with what path to take through the neural layers. I probably just need to take the time to study it deeper. >If you have state/‘side effects’ of functions, then your function won’t be a function in the sense of mathematics; if the return value of your function depends entirely on the input and doesn’t return different values depending on whatever else is happening in the program, then it will be. Totally understood from the perspective of functions in say, Java. Though fundamentally I don't think there is distinction between functions in computer science and mathematics. The program as a whole is effectively a function. The \"global\" state is from another reference, just local variables of the encompassing function. If a function is modifying variables outside of the \"function block\" (in say Java), the \"input\" to the function isn't just the parameters of the function. Imo, this is more of an artifact of implementation of some languages rather than a fundamental difference. Python for example requires declaring global args in the function block. Go one step further and require putting global args into the parameters list and you're pretty close to satisfying this. reply xanderlewis 10 hours agorootparentI think you’re actually massively overthinking it. The state of a neural network is described entirely by its parameters, which usually consist of a long array (well, a matrix, or a tensor, or whatever…) of floating point numbers. What is being optimised when a network is trained is these parameters and nothing else. When you evaluate a neural network on some input (often called performing ‘inference’), that is when the functions we’re talking about are used. You start with the input vector, and you apply all of those functions in order and you get the output vector of the network. The training process also uses these functions, because to train a network you have to perform evaluation repeatedly in between tweaking those parameters to make it better approximate the desired output for each input. Importantly, the functions do not change. They are constant; it’s the parameters that change. The functions are the architecture — not the thing being learned. Essentially what the parameters represent is how likely each neuron is to be activated (have a high value) if others in the previous layer are. So you can think of the parameters as encoding strengths of connections between each pair of neurons in consecutive layers. Thinking about ‘what path to take through the neural layers’ is way too sophisticated — it’s not doing anything like that. > Though fundamentally I don't think there is distinction between functions in computer science and mathematics. The program as a whole is effectively a function. You’re pretty much right about that, but there are two important problems/nitpicks: (1) We can’t prove (in general) that a given program will halt and evaluate to something (rather than just looping forever) on a given input, so the ‘entire program’ is instead what’s called a partial function. This means that it’s still a function on its domain — but we can’t know what its precise domain is. Given an input, it may or may not produce an output. If it does, though, it’s well defined because it’s a deterministic process. (2) You’re right to qualify that it’s the whole program that is (possibly) a function. If you take a function from some program that depends on some state in that same program, then clearly that function won’t be a proper ‘mathematical’ function. Sure, if you incorporate that extra state as one of your inputs, it might be, but that’s a different function. You have to remember that in mathematics, unlike in programming, a function consists essentially of three pieces of data: a domain, a codomain, and a ‘rule’. If you want to be set-theoretic and formal about it, this rule is just a subset of the cartesian product of its domain and codomain (it’s a set of pairs of the form (x, f(x))). If you change either of these sets, it’s technically a different function and there are good reasons for distinguishing between these. So it’s not right to say that mathematical functions and functions in a computer program are exactly the same. reply andoando 8 hours agorootparentI appreciate your responses, sorry I hope I don't seem like Im arguing for the sake of arguing. >Essentially what the parameters represent is how likely each neuron is to be activated (have a high value) if others in the previous layer are. So you can think of the parameters as encoding strengths of connections between each pair of neurons in consecutive layers. Thinking about ‘what path to take through the neural layers’ is way too sophisticated — it’s not doing anything like that. Im a little confused. The discussion thus far about how neural networks are essentially just compositions of functions, but you are now saying that the function is static, and only the parameters change. But that aside, if these parameters change which neurons are activated, and this activation affects which neurons are activated in the next layer, are these parameters effectively not changing the path taken through the layers? >Sure, if you incorporate that extra state as one of your inputs, it might be, but that’s a different function. So say we have this program \" let c = 2; function 3sum (a,b) { return a+b + c; } let d = 3sum(3,4)\" I believe you are saying, if we had constructed this instead as \"function(a,b,c) { return a+b+c } let d = 3sum(3,4,2) \" then, this is a different function. Certainly, these are different in a sense, but at a fundamental level, when you compile this all down and run it, there is an equivalency in the transformation that is happening. That is, the two functions equivalently take some input state A (composed of a,b,c) and return the same output state B, while applying the same intermediary steps (add a to b, add c to result of (add to b)). Really, in the first case where c is defined outside the scope of the function block, the interpreter is effectively producing the function 3sum(x,y,c) as it has to at some point, one way or another, inject c into a+b+c. Similarly, I am won't argue that the current, formal definitions of functions in mathematics are exactly that of functions as they're generally defined in programming. Rather, what I saying is that there is an equivalent way to think and study functions that equally apply to both fields. That is, a function is simply a transformation from A to B, where A and B can be anything, whether that is bits, numbers, or any other construction in any system. The only primitive distinction to make here is whether A and B are the same thing or different. reply OJFord 12 hours agorootparentprevFunction composition is just f(g(x)), considered as a single function that's the composition of f and g; it has the domain of f and the range of g. In lambda calculus terminology it's an 'application' (with a function argument). reply esafak 14 hours agorootparentprevfunctions, which you can compose to increase their expressiveness, and run gradient descent on to train. The success of deep learning is basically attributable to composable (expressive), differentiable (learnable) functions. The \"deep\" moniker alludes to the compositionality. reply CobrastanJorji 15 hours agorootparentprevContinuous mathematical functions which have derivatives. reply dirkc 14 hours agorootparentprevWhen I did \"AI\" it would have meant the sigmoid function, these days it's something like ReLU. reply m463 4 hours agoparentprevchess is pattern matching. reply phkahler 13 hours agoparentprev>> one shouldn’t fall into the trap of anthropomorphising and mysticising models based on the ‘neural’ name And yet, artificial neural networks ARE an approximation of how biological neurons work. It is worth noting that they came out of neurobiology and not some math department - well at least in the forward direction, I'm not sure who came up with the training algorithms (probably the math folks). Should they be considered mystical? No. I would also posit that biological neurons are more efficient and probably have better learning algorithms than artificial ones today. I'm confused as to why some people seem to shun the biological equivalence of these things. In a recent thread here I learned that physical synaptic weights (in our brains) are at least partly stored in DNA or its methylation. If that isn't fascinating I'm not sure what is. Or is it more along the lines of intelligence can be reduced to a large number of simple things, and biology has given us an interesting physical implementation? reply xanderlewis 12 hours agorootparentAs the commenter below mentions, the biological version of a neuron (i.e. a neuron) is much more complicated than the neural network version. The neural network version is essentially just a weighted sum, with an extra layer of shaping applied afterwards to make it nonlinear. As far as I know, we still don’t understand all of the complexity about how biological neurons work. Even skimming the Wikipedia page for ‘neuron’ will give you some idea. The original idea of approximating something like a neuron using a weighted sum (which is a fairly obvious idea, given the initial discovery that neurons become ‘activated’ and they do so in proportion to how much the neurons they are connected to are) did come from thinking about biological brains, but the mathematical building blocks are incredibly simple and are hundreds of years old, if not thousands. reply naasking 12 hours agorootparent> the biological version of a neuron (i.e. a neuron) is much more complicated than the neural network version This is a difference of degree not of kind, because neural networks are Turning complete. Whatever additional complexity the neuron has can itself be modelled as a neural network. Edit: meaning, that if the greater complexity of a biological neuron is relevant to its information processing component, then that just increases the number of artificial neural network neurons needed to describe it, it does not need any computation of a different kind. reply andoando 9 hours agorootparentAnd assembly is also turing complete, so if two models being both Turing completeness means they are equivalent, there would be no need for coding neural networks at all. Would you consider LLMs a different kind of computation than writing assembly code? Perhaps fundamentally they are not, but its also true that just writing more and more random assembly code isn't going to lead to an LLM. reply naasking 8 hours agorootparentLLMs aren't randomly generated though, they are shaped by training data. This means there would, in principle, be a comparable way to synthesize an equivalent assembly program from that same training data. The difference here is that it's just more obvious how to do this in one case than the other. My point was only that 1) neural networks are sufficient, even if real neurons have additional complexity, and 2) whatever that additional complexity, artificial neural networks can learn to reproduce it. reply andoando 8 hours agorootparentI understand that, what I am saying though is the fact that they can doesn't mean that they will by simply scaling their number. It still entirely depends on how they are trained/arranged, meaning it may take a completely different way of composing/glueing neurons together to stimulate any additional complexity. Its like saying a nand gate is turing complete, I put 1000000000 of them in a series, but its not doing anything, what gives, do I need to add a billion more? Just as a modeling and running a single neuron takes x amount of transistors configured in a very specific way for example, it may take y amount of neurons arranged in some very specific, unknown to model something that has extra properties. And its not clear either whether neurons are fundamentally the correct approach to reach this higher level construction than some other kind of node. reply xanderlewis 11 hours agorootparentprevPowerPoint is Turing complete. Does that mean PowerPoint should be regarded as being biological or at least neuroscience-inspired? reply naasking 11 hours agorootparentNo, but neural networks literally were inspired by biology so I'm not sure what your point is. reply xanderlewis 9 hours agorootparentMy point is that you seem to think neurons in the sense of artificial neural networks and neurons in the human brain are equivalent because: (1) Neural networks are Turing complete, and hence can do anything brains can. [debatable anyway; We don’t know this to be the case since brains might be doing more than computation. Ask a philosopher or a cognitive scientist. Or Roger Penrose.] (2) Neural networks were very loosely inspired by the idea that the human brain is made up of interconnected nodes that ‘activate’ in proportion to how other related nodes do. I don’t think that’s nearly enough to say that they’re equivalent. For (1), we don’t yet know (and we’re not even close), and anyway: if you consider all Turing complete systems to be equivalent to the point of it being a waste of time to talk about their differences then you can say goodbye to quite a lot of work in theoretical computer science. For (2): so what? Lots of things are inspired by other things. It doesn’t make them in any sense equivalent, especially if the analogy is as weak as it is in this case. No neuroscientist thinks that a weighted sum is an adequate (or even remotely accurate) model of a real biological neuron. They operate on completely different principles, as we now know much better than when such things were first dreamed up. reply naasking 9 hours agorootparentThe brain certainly could be doing super-Turing computation, but that would overturn quite a bit of physics seeing as how not even quantum computers are more powerful than Turing machines (they're just faster on some problems). Extraordinary claims and all that. As for equivalency, that depends on how that's defined. Real neurons would not feature any more computational power than Turing machines or artificial neural networks, but I never said it would be a waste of time to talk about their differences. I merely pointed out that the artificial neural network model is still sufficient, even if real neurons have more complexity. > No neuroscientist thinks that a weighted sum is an adequate (or even remotely accurate) model of a real biological neuron Fortunately that's not what I said. If the neuron indeed has more relevant complexity, then it wouldn't be one weighted sum = one biological neuron, but one biological neuron = a network of weighted sums, since such a network can model any function. reply xanderlewis 9 hours agorootparentThe original comment you were in defence of was suggesting that artificial neurons were somehow very close to biological ones, since supposedly that’s where their inspiration came from. If you’re interested in pure computational ‘power’, then if the brain is nothing more than a Turing machine (which, as you agree, it might not be), fine. You can call them ‘equivalent’. It’s just not very meaningful. What’s interesting about neural nets has nothing to do with what they can compute; indeed they can compute anything any other Turing machine can, and nothing more. What’s interesting is how they do it, since they can ‘learn’ and hence allow us to produce solutions to hard problems without any explicit programming or traditional analysis of the problem. > that would overturn quite a bit of physics Our physics is currently woefully incomplete, so… yes. That would be welcome. reply kragen 13 hours agorootparentprevanns originated in hypotheses about how neurobiology might work in the 01940s but diverged completely from neurobiology in the 01960s; they contain nothing we've learned about neurons in the last 50 years, and not much from before that either (they don't, for example, do hebbian learning). current anns use training methods like gradient descent with momentum and activation functions like relu which have no plausible biological realization artificial neural networks are an approximation of biological neural networks in the same way that a submarine is an approximation of a fish reply srean 4 minutes agorootparentprev> And yet, artificial neural networks ARE an approximation of how biological neurons work For a non-vapid/non-vacuous definition of 'approximation' this is not true at all. It is well understood that (i) back-propagation is biologically infeasible in the brain (ii) output 'voltage' is a transformed weighted average of the input 'voltage' -- is not how neurons operate. (ii) is in the 'not even wrong' category. Neurons operate in terms of spikes and frequency and quiescence of spiking. If you are interested any undergrad text in neurobiology will help correct the wrong notions. reply SkyBelow 14 hours agoparentprevBefore the recent AI boom, I was mystified by the possibility of AI and emulating humans (in no small part thanks to works of fiction showing AI powered androids). Then I created and trained some neural networks. Smaller ones, doing much of nothing special. That was enough to break the mysticism. To realize it was just multiplying matrices. Training them was a bit more advanced, but still applied mathematics. Only recently have I begun to appreciate that the simplicity of the operation, applied to a large enough matrices, may still capture enough of the nature of intelligence and sentience. In the end we can be broken down into (relatively) simple chemical reactions, and it is the massive scale of these reactions that create real intelligence and sentience. reply naasking 11 hours agorootparentExactly, the people who are derisive of those who consider ML models to exhibit glimmers of true intelligence because it's only matrix multiplications always amuse me. It's like they don't even realize the contradiction in holding the position that seemingly complex and intelligent outward behaviour should not be used as an indication of actual complexity and intelligence. reply mistermann 11 hours agorootparentprevNext step, in case you get bored: why (in fact, not a minor distinction) does such a simple approach work so well? reply p1esk 14 hours agoprevAnd then you learn about binary or ternary networks where gradients don’t really exist anywhere, and you start to wonder about the importance of this differentiability. reply ubj 13 hours agoparent...And then you start learning about generalizations of the notion of \"gradient\" to scenarios where the classical gradient doesn't exist :) reply whimsicalism 14 hours agoparentprevbinary networks don't really work well unless you do a relaxation first reply gfaure 14 hours agoprevIn the literature, they're usually called convolutional layers (I think you can pretty much search and replace all uses of \"convolutive\" in the text). reply glonq 16 hours agoprevI wonder if the usage of Alice & Wonderland takes inspiration from Douglas Hofstadter's \"Gödel, Escher, Bach: an Eternal Golden Braid\" ? reply abdullahkhalids 14 hours agoparentLewis Carrol's Alice in Wonderland features a number of logical and mathematical puzzles [1] He also wrote What the Tortoise Said to Achilles (1895) in which the paradoxes of Zeno are discussed. So it's more correct to say that GEB and this article are originally inspired by Lewis Carrol's work. [1] I wrote a short article for my university magazine a long time ago. Some interesting references at the end https://abd.tiddlyspot.com/#%5B%5BMathematical%20Adventures%... reply iainmerrick 15 hours agoparentprevIt's a pretty common trope, especially for math-related books, e.g. Alex Bellos' \"Alex's Adventures in Numberland\". reply devnonymous 15 hours agoparentprevNo, I think the inspiration is more direct https://duckduckgo.com/?q=lewis+carroll+alice+in+wonderland+... reply Eduard 15 hours agoprev [–] better remove all the Disney-based Alice in Wonderland character intellectual property from the book. reply astrodust 10 hours agoparent [–] I was just thinking that's \"cease and desist\" bait right there. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "\"Alice’s Adventures in a Differentiable Wonderland\" is a book introducing neural networks and differentiable programming, emphasizing automatic differentiation to optimize functions.",
      "The book covers design techniques for sequences, graphs, texts, and audios, focusing on convolutional, attentional, and recurrent blocks, and uses PyTorch and JAX to explain advanced models like large language models and multimodal architectures.",
      "Additional chapters will delve into topics like model re-use, density estimation, conditional computation, and model debugging, aiming to bridge theory and practical code implementation."
    ],
    "commentSummary": [
      "The discussion covers optimizing neural networks using differentiable primitives and the challenges of gradient-based methods like stochastic gradient descent and random weight perturbation.",
      "Emphasis is placed on accurately describing algorithms, understanding mathematical concepts deeply, incorporating Jacobian matrices, and distinguishing between functional and traditional programming in neural networks.",
      "Debates on the relationship between artificial neural networks and biological neurons, addressing differences in computational power, operations, generalizing gradients, and potential legal issues related to intellectual property."
    ],
    "points": 185,
    "commentCount": 74,
    "retryCount": 0,
    "time": 1714496616
  },
  {
    "id": 40209382,
    "title": "Tesla lays off entire Supercharger team",
    "originLink": "https://electrek.co/2024/04/29/tesla-conducting-more-layoffs-including-entire-supercharger-team/",
    "originBody": "Tesla conducting more layoffs, including entire Supercharger team Jameson Dow Apr 29 2024",
    "commentLink": "https://news.ycombinator.com/item?id=40209382",
    "commentBody": "Tesla conducting more layoffs, including entire Supercharger team (electrek.co)178 points by TheAlchemist 23 hours agohidepastfavorite200 comments mint2 20 hours ago“ continued layoffs have even worse optics, given Tesla’s move to ask shareholders for a $55 billion payout for its CEO just days after firing 14,000 people. That $55 billion could pay for 40 years worth of six-figure salaries for those employees.” Musk is detached from reality. He seems to think firing most of X is a resounding success and Tesla, a car manufacturing company, needs to do the same. Also that cost cutting and performance reviews only apply to others, just like in Twitter and elsewhere free speech means his speech not critics. I really hope he doesn’t wreck spaceX too. reply renegade-otter 18 hours agoparentIt's a way to inject \"office heroics\" via fear, but it also has its limits. Once the burnout sets in, everyone is just part of the death march at that point, seeing the product or the company to its slow demise. reply brutus1213 15 hours agorootparentI think a sad part of the calculus is there are lots of bodies willing to be thrown in the grinder. The only danger is a real competitor with a different business model that lets them treat people better. Case in point is AWS. I've been reading they are a PIP factory for the last couple of years. Doesn't seem like they have a major issue hiring (partly due to lack of a competitor who is doing better). reply ryandrake 12 hours agorootparentThis is one of those things that Software Engineers don't believe until there is an extended Bear market: There is always a line of eager beavers outside your company's door just waiting to take your place if you leave. The last decade (especially the hot job market of 2020-2022) lulled everyone into a feeling of job security and even irreplaceability. reply leereeves 14 hours agorootparentprevI wonder if there's a slight possibility that Musk stopped caring about Tesla's long term success when his payment was cancelled, and he is now willing to temporarily inflate the price and dump the stock. reply rchaud 13 hours agorootparentI imagine he staked quite a bit of Tesla stock as collateral for the many billions in loans still owed for the Twitter purchase. If the stock value declines too much (down 35% this year), his creditors will want a higher interest rate to reflect the higher risk of default. reply animex 19 hours agoparentprev$10,000 bonus PER CAR that Tesla has sold in its LIFETIME. reply huhuhu111 12 hours agorootparentI knew that he could have reduced the price of these cars... they should cost the same as their ICE car equivalent, or less. reply talldatethrow 9 hours agorootparentThat's not how it works. His $55b isn't in cash the company has and could have just charged less for the cars. reply huhuhu111 4 hours agorootparentthey just charge way too much though... it's a bit like Iphones... but both are not appealing to me, specially at a premium price reply m463 11 hours agorootparentprevstock is a separate product than a car. investors buy stocks. customers buy cars. silicon valley's product is stock. reply citizen_friend 19 hours agorootparentprevDid everyone forget how growth valuations work? Also that amount was from a contract made in 2018. reply bunderbunder 17 hours agorootparentI don't think I've ever known how growth valuations work. Sometimes I feel like the person watching the parade and wondering why nobody else is confused by the emperor's choice of attire. reply citizen_friend 7 hours agorootparentTesla now sells as many cars in a year as it did in its whole lifetime up to 2018. So that’s why it was worth paying Elon that much. The current sales position is tremendous. reply svnt 6 hours agorootparentThe current sales position is 1/6 of Volkswagen. reply latency-guy2 5 hours agorootparentTesla outsells Volkswagen 8 - 16x. reply TylerE 19 hours agoparentprevI was gonna say that doesn't math then I realized it's billions not millions. That's over $30,000 for every single car Tesla sold in 2023. reply Modified3019 13 hours agorootparentOh wow I ended up reading it at millions as well. Likely because 55 billion wasn’t within the real of belief. reply TylerE 2 hours agorootparentRight - I can remember when basically the only number that hit was Microsoft’s market cap. reply leereeves 14 hours agorootparentprevIt's not a cash payout. It's a stock grant that was worth a lot less when it was originally authorized. It's a weird situation. It sounds like an unconscionable amount now only because of Musk's success in raising the stock value. Like he's being paid too much because he was too successful. reply pie420 12 hours agorootparentprevwow i didn't know that tesla only existed in 2023, and all past and future years dont exist reply TylerE 9 hours agorootparentBonuses are typically annual. reply matthewdgreen 12 hours agoparentprev> I really hope he doesn’t wreck spaceX too. We don't really need Tesla or Twitter/X. But we really do need SpaceX. He's already moved it to Texas to shield himself from lawsuits, so I wouldn't count on it surviving intact. reply johnthescott 2 hours agorootparent> so I wouldn't count on it surviving intact. why? reply s1artibartfast 19 hours agoparentprevTo be clear, the 55 billion is a request to re-authorize his compensation for 2018-2022 that Delaware courts invalidated. reply toast0 18 hours agorootparentThe shareholders that will be voting to reauthorize are not the same shareholders that voted to authorize it originally. I'm not a direct shareholder, but if the Deleware court gives me an option not to pay $55 Billion that I thought was committed, I'd strongly consider. What are the implications of not approving? On the plus side, the company keeps the compensation. On the minus side, Musk will be upset; and there's a trust issue for future compensation. On the neutral side, those receiving future compensation will endeavour to follow an approval process that is likely to stand up in court. reply tacticalturtle 13 hours agorootparentIs it really a minus if Musk is upset? If he’s upset enough to leave, that seems like a potentially beneficial outcome. There’s got to be some measurable number of people who are turned off from buying a Tesla because of his association, especially now that alternatives are available. reply EduardoBautista 12 hours agorootparentTesla’s current valuation is pretty much thanks to him. His personality meme stocked the company to a valuation that made no sense. reply ckastner 2 hours agorootparent> Tesla’s current valuation is pretty much thanks to him. And nobody has a larger interest in Tesla's valuation them Musk himself, the largest shareholder. He can't walk and any threats to that effect are theatrics. Shareholders would be idiots to re-approve the $55bn. reply janalsncm 8 hours agorootparentprevIf I’m a shareholder, I don’t want an overly inflated stock price. I want a high stock price due to solid fundamentals. Tesla was temporarily extremely overvalued, but has since lost 60% of its market cap. It’s likely still overvalued compared with peers. It’s a car company, not a b2b SaaS company. Put another way, which company is more likely to exist in 10 years: Microsoft or Tesla? reply toast0 10 hours agorootparentprevIt might be the case that shareholders wouldn't like him when he's angry? reply s1artibartfast 18 hours agorootparentprevI think the incentives are the same if the shareholders are the same or not. You covered the implications as I understand it. reply enraged_camel 19 hours agoparentprev>> I really hope he doesn’t wreck spaceX too. I think SpaceX is one disaster away from suffering the same fate, to be honest. Like, if the next Starship doesn't make it as far as the previous attempt (for example, if it blows up on the way up), Elon is going to come in like a wrecking ball. The pressure on the SpaceX team must be immense. reply bunderbunder 18 hours agorootparentI gather that SpaceX, too, is cash flow negative and heavily invested in moonshot bets. Meaning that, like for Elon's other companies, they might be in an incredibly vulnerable position, financially speaking. A disaster could sink the company. But simply failing to have some of these risky bets pay off could be just as damaging. For example, even if everything in the plan works on a technical level, if there isn't enough demand for Starlink's service to support the whole Starlink 2 project then that might turn the entire Starlink 2 project, including the Starship rocket they need to launch these larger satellites, into a big money loser. Not entirely unlike how we're seeing signs that Tesla may not be a sustainable business, not necessarily because of anything fundamentally wrong with their core business, but because they made some over-aggressive assumptions about how many golden eggs their goose would lay. reply petre 14 hours agorootparent> there isn't enough demand for Starlink's service to support the whole Starlink 2 project then that might turn the entire Starlink 2 project, including the Starship rocket they need to launch these larger satellites, into a big money loser I'm wouldn't worry too much. Uncle Sam probably wants those capabilities anyway for the SDA to ramp up the NDSA now that the Russian nuclear threat is renewed. https://en.m.wikipedia.org/wiki/Space_Development_Agency reply lamontcg 14 hours agorootparentprevI think the SpaceX disaster is more likely to be a loss of crew event. reply treme 19 hours agorootparentprevyou seem naive. SpaceX has made it to MI complex status, and US gov will easily bail them out should worst come. reply funac 19 hours agorootparent> SpaceX has made it to MI complex status, and US gov will easily bail them out should worst come. immaterial: \"the worst\" here is elon destroying the engineering culture & with it their ability to keep improving on what they've done so far. not going bankrupt (by way of a bailout or otherwise) is a necessary condition for avoiding the worst (boeing syndrome), but it's not sufficient fedgov can pour money into the military industrial complex, but it can't do a whole lot more, and that only goes so far reply mjhay 19 hours agorootparentBoeing destroyed its engineering culture and it isn't going anywhere. reply bunderbunder 17 hours agorootparentSuppose for the sake of argument I managed to secure some sort of annuity that pays just enough to subsist on, starting now. Knowing that I'm guaranteed enough income to stay minimally solvent does not mean I have no reason to care about losing additional income streams that enable me to have things like vacations and dinners at nice restaurants and digital watches. Similarly, the relative security of the ~1/3 of Boeing's revenue that comes from government contracts is probably small consolation to its shareholders. They do that business more-or-less at cost; essentially 100% of their profits come from other sources. reply htrp 13 hours agorootparent>They do that business more-or-less at cost; Aren't all govt contracts cost plus? reply lesuorac 12 hours agorootparentDevelopmental contracts sure. Buying COTS products; probably not. reply bunderbunder 12 hours agorootparentAlso, the \"plus\" part covers both overhead and profit. So, depending on what your overhead situation looks like, profit can still be minimal or non-positive. reply lesuorac 12 hours agorootparentSure but the \"plus\" part is capped [1] for cost+plus. If you're buying AWS compute through GSA I bet the rate is more than AWS's costs + 10/15%. Or if you purchase say post-it notes from Staples; I bet they're going to be way more than the cost of paper+glue*1.15. [1]: https://www.acquisition.gov/far/15.404-4#FAR_15_404_4__d941e... reply janalsncm 8 hours agorootparentprevIn other words, Space X will exist as long as there are no competitors. That gives them years, not decades. reply jml7c5 7 hours agorootparentAre there any competitors expected to match SpaceX's launch costs or capacity in the next few years? reply mjhay 19 hours agorootparentprevSpaceX is in a much more solid position. You can tell that Musk hasn't interfered in its operations nearly as much as he has with Tesla or X (case in point: renaming it \"X\"). reply thejazzman 19 hours agorootparentprevOnce he rage fires Shotwell.. and given how insane that would be only validates its likelihood at this point reply onlyrealcuzzo 19 hours agoparentprev> Musk is detached from reality. Musk is arguing that paying him $55B to pump the stock price is better than paying those employees for 40 years. If you're a shareholder that only cares about the stock price and not the underlying value of the company - that's a decent argument. I wouldn't buy it. But maybe the shareholders will. reply kazen44 11 hours agorootparentthe fact that this argument is logical in the current economic systems says so much about the sad state of the way we structure our economy... reply EA-3167 19 hours agoparentprevHe's personally very wealthy, seems to have some mental issues, and has admitted to having a ketamine habit (although he also claims it's good for share prices). That's a combination that would make pretty much anyone struggle with attachment to reality. The takeaway for me is that as a fundraiser and hype man, before he ruined his reputation, he was pretty successful, but in all other ways he's a massive self-promoting hack. reply rchaud 12 hours agorootparentHe wasn't really talked about as a hype man before, was he? The world is full of them: Adam Neumann, Travis Kalanick come to mind. The hagification of Musk in the press was on another level, like Steve Jobs, DaVinci and Obama rolled together. That this carefully crafted illusion is falling apart due to his online ramblings and bizarre business decisions is something worthy of study. He and Kanye West share a very similar trajectory in this regard. reply dzhiurgis 9 hours agorootparentprev> ketamine habit I don't think you've ever seen anyone with ketamine habit (keywords: UK k-hole). Pretty stupid thing to say about someone who has medical prescription for ketamine to treat depression while they work 100hrs per week. reply EA-3167 7 hours agorootparentMaybe working 100 hours a week to the point that you need ketamine to cope isn't a very bright idea. Based on the Cybertruck and \"X\", it's easy to see that this wouldn't be his first less-than-stellar move on the old 3D chess board. reply yumraj 12 hours agoparentprev> Musk is detached from reality. Don’t think so, it’s just that he’s focused on another reality - losing the crown of the richest person in the world. And, he’s doing everything to keep that crown, everything else be dammed. reply highwaylights 12 hours agorootparentYou either die a hero or live long enough to see yourself become Russ Hanneman reply r00fus 6 hours agorootparentprevHe's #3 behind Jeff Bezos and the Bernard Arnault. That was before Tesla's very bad month. reply unsupp0rted 13 hours agoparentprev> He seems to think firing most of X is a resounding success Isn’t it? I use X every day and it seems to be fine now and getting better on a good cadence. reply lesuorac 13 hours agorootparentDo you pay for X? Last I heard he's hemorrhaging paying customers (advertisers) who while publicly say it has to do with ; privately say it has to do with worsening ROI (targeting). reply mint2 12 hours agorootparentprevIs that why fidelity repeatedly writes down the value of their portion of the needlessly name changed company that hemorrhaged advertisers due his personal quirky decisions and favored groups? reply babypuncher 12 hours agorootparentprevIs it getting better? The bots have only gotten worse. They even have blue checkmarks[1] and the company does fuck all about it. And that's before we start talking about the massive hypocrisy present in Musk's implementation of \"free speech\". 1. https://i.postimg.cc/Bbq0yX4J/image.png reply mrguyorama 12 hours agorootparentprev\"Getting better\" how? Be specific? reply ra7 19 hours agoprevIn my opinion, this is all a massive gamble by Musk to pivot Tesla to an AI-first tech company. Except that Tesla cannot really do AI well and don't have the resources or talent the likes of Google, Meta, OpenAI, etc. does to do novel research and push AI forward. And he has to make this gamble because Tesla's fundamentals as a car company is going down the drain and its entire valuation hinges on the fact that they are not just a car company. That's why he's constantly announcing new products (robotaxis, humanoid robots) that are nowhere close to materializing, making visits to China to ink HD maps deal with Baidu for FSD and claiming to spend $10B on AI infrastructure this year. He seems to be in forever stock pump mode, so much so that Tesla's best product till date might just be its stock. reply ryandrake 12 hours agoparent> He seems to be in forever stock pump mode, so much so that Tesla's best product till date might just be its stock. A lot of companies seem to be gutting everything to the point where their only product is their stock. reply iancmceachern 10 hours agorootparentThis isn't new. Hp, IBM, GE, on and on reply renegade-otter 18 hours agoparentprevExcept that AI has not shown itself to be useful, at least not considering the staggering costs, anyway. Tens of billions of dollars to... fix people's grammar and generate tons of SEO spam? What PROBLEM are they solving here? reply bunderbunder 16 hours agorootparentI think the parent poster stated it pretty clearly: the problem they're trying to solve is how to keep the stock price floating at a multiple of what the business's actual fundamentals suggest it should be. The problem is, while that worked well for a good 10 or 20 years, it seems that people are now starting to catch on to the scheme. But I'm not sure that means that you can just stop doing it. As someone elsewhere in the thread pointed out, dragging things out as much as you can is probably preferable to a sudden and brutal value correction for just about everyone with actual skin in the game. reply 93po 16 hours agorootparentprevFSD is currently using neural-network style AI, and it's frankly amazing to use and watch and is massively useful. reply stetrain 13 hours agorootparentIn what way is it useful? What value is being provided? In my experience it requires constant supervision and readiness to intervene at any moment. There are plenty of reports and photos of it running wheels into curbs with little time for the driver to react. Given that, while using it you do not regain any time or attention that you would have otherwise spent driving. That doesn't mean it isn't impressive. A car that can drive itself like a 15-year-old on their first outing with a fresh learner's permit that needs constant coaching from a parent or instructor is very impressive, just not useful. I will say that in clear conditions on long highway trips, basic Autopilot does have utility. It does allow you to divert some attention from keeping the car between the lines and matching the speed of the car in front, and use that attention to keep an eye on the large traffic picture, and arrive to your destination slightly less fatigued. Using FSD on city streets seems like the opposite of that to me, an increase in stress and workload that currently provides no practical utility. reply mplewis 13 hours agorootparentprevIs that the thing that keeps crashing people into highway barriers? reply CamperBob2 13 hours agorootparentThat, and inadequate sensor diversity and coverage. reply cbeach 10 hours agorootparentprevAny recent version of FSD (i.e. 12.3.x) is technology close to magic. There was a time when HN would recognise technological acheievement on its own merit, without allowing personal politics to cloud our judgement. But sadly, we're in a perverse era of political tribalism where FSD is bad because https://elonbad.com/ reply nojvek 7 hours agorootparentFSD is cool as a great demo. But the optics and facts are that it’s got people killed. Multiple people over the years. Silly mistakes causing crashes. It will get better but definitely does not live up to the “full self driving” marketing hype. That kills the magic. Meanwhile look at Waymo. They don’t make a lot of noise. They take safety really seriously and keep on improving actual “self driving cars” city by city. Zero people dead. I’ve sat in both. FSD was a great demo, but Waymo truly felt like magic. No driver at all! reply mbrumlow 7 hours agorootparentI don’t think we will ever have any self driving tech that inter mingles with non self driving cars that will result in zero deaths. While sad, mile for mile FSD is better than humans. reply Mawr 6 hours agorootparentFSD only drives in a subset of conditions humans drive in so the comparison is invalid. reply ProjectArcturis 10 hours agoparentprevIf you're a top-tier AI researcher, why TF would you choose Tesla to work for? The shine has gone off Musk as a super-genius. All you'd be getting is an arbitrary, capricious boss and terrible work hours. reply boshalfoshal 6 hours agorootparentTesla AI orgs can pay well above market for AI talent. Thats about the only reason anyone would join. If you are insensitive to work hours but want to get paid, its not the worst option. reply bamboozled 5 hours agorootparentprevAnd even if you delivered something nice you could still get fired for something stupid. No thanks. reply bdjsiqoocwk 58 minutes agoparentprev> That's why he's constantly announcing Security fraud. reply Reubend 13 hours agoparentprevYes, that seems correct from what I've seen. And if self driving can be improved enough, then it will pay off. However, I remain skeptical that he'll be able to improve it enough to compensate for other deficiencies in the product. reply rchaud 12 hours agorootparent> And if self driving can be improved enough, then it will pay off. Hasn't Uber been waiting for the same thing to save it? reply Topfi 23 hours agoprevI've always considered the Supercharger network as their most valuable asset, besides arguably their mindshare, so I cannot see how losing the entire team could be a rational decision in the long term. Also, after work on the Model 2 was canceled and reopened, I can't see Daniel Ho and his teams departure as a long-considered choice, to put it mildly. Feels all like emotionally driven decisions... reply projectileboy 22 hours agoparentAgree 100%. The change in Musk’s public persona combined with his more recent business decisions are alarming. And you may say that his public persona shouldn’t matter, but when he willfully alienates a large portion of his traditional customer base, one wonders what he is even thinking. reply spacemadness 19 hours agorootparentTell that to the share holders who keep rewarding him even on a huge earnings miss. reply nostrademons 19 hours agorootparentTSLA down > 50% from the peak. The stock went up on earnings miss because things were not as bad as shareholders were expecting, but the shareholders are expecting things to be pretty bad. reply yowzadave 18 hours agorootparentBut I think the point people have made (correctly!) is that TSLA's price is detached from any normal way we have for pricing a car company. Their market cap is 160% that of Toyota, despite selling 16% as many cars. How are they ever going to justify their current valuation? Kicking Elon out to get rational CEO behavior could result in a rational market assessment of Tesla's value, which would be bad from the shareholders' perspective! reply lesuorac 12 hours agorootparentToyota issues bonds (ex. [1]) so their valuation should be less than the multiple on cars sold as tesla. [1]: https://cbonds.com/bonds/1504323/ reply gomox 19 hours agorootparentprevThe only thing separating Tesla from a realistic multiple is Musk. For shareholders it's rational to want to keep him around. Otherwise they would have to face a much worse reversion to the mean. reply Terr_ 10 hours agorootparentprevHmmm... Usually the fable of the Emperor's New Clothes implies the people around him went along with the fiction because they feared personal retribution from the Emperor... But what if nobles did it to prevent a drop in the \"stock\" of the empire itself? reply psunavy03 19 hours agorootparentprevI've honestly wondered whether or not he's going to end up as this generation's Howard Hughes. Makes fortune in other industry, parlays that into becoming a manufacturing/aerospace titan, slowly goes insane. He's 2 or 2.5 for 3 depending on how you count. reply LightBug1 12 hours agorootparentStarted thinking that years ago ... and have always made the link, in my mind, between the Starship and the Spruce Goose ... reply psunavy03 11 hours agorootparentTo be fair, Starship has gotten further than the Spruce Goose ever did. reply pfannkuchen 20 hours agorootparentprevThis might ironically be the downside of being less money driven and more principle driven. I think he legitimately thinks “the woke mind virus” is a bigger short term threat to (western) civilization than failing to transition to sustainable energy (Tesla) or failing to become a multi planetary species (SpaceX). If he was primarily financially driven I think he would have kept quiet and just focused on the existing companies, like most people probably would even if they privately held similarly controversial opinions. I’m not saying he is correct by the way, just that it seems like he thinks that and it basically explains his behavior. reply lenerdenator 19 hours agorootparentThe thing is, he’s never been paid to stay quiet and focus on the money. Musk’s value add is as the celebrity CEO; the Jobsian ideal taken to its natural conclusion. He’s supposed to be this forward-looking visionary and having him at the helm of your company is supposed to make it forward-looking by proxy. This is all well and good until the celebrity CEO fries his brain with Special K and builds a bubble of yes-men around him. Then it becomes a massive liability. reply vundercind 19 hours agorootparentprevA lot of it’s explained by drugs, incredible impulsivity, some magical thinking, and remarkably thin skin, plus (I think the rest are in plain evidence—this gets speculative) maybe some discontent over his personal life and especially his kids. reply citizen_friend 19 hours agorootparentprevnext [7 more] [flagged] sanderjd 18 hours agorootparentTo me, this just doesn't seem factual. I became an admirer of his in the 2010s. I don't believe he was spending so much time back then picking petty fights and saying unhinged or just extremely politically polarized things on social media in that time period, which the media was just covering differently than they are now. I think his public behavior has changed notably, not just the reporting on him. reply Avshalom 18 hours agorootparentOn one hand, he has definitely become more unhinged as time has gone on. Some combination of stress, drug abuse and social-media-audience-capture. At the same time tho: remember https://www.tesla.com/blog/most-peculiar-test-drive if the media reaction to that had been \"tesla ceo pulls private driving detail in attempt to discredit journalist\" it would have formed a much more obvious through-line with the Top Gear \"tesla ceo pulls battery telemetry to sue comedy show\" from years prior and \"tesla employees can watch you have sex in your car\" from years later. See Also the ongoing excuse of \"autopilot was not engaged when the crash happened\" or Tesla's insurance charging more if you drive at night. https://electrek.co/2023/09/15/musk-wanted-to-use-tesla-came... Things add up to: Elon Musk does not believe in any sort of right to your privacy. Like in general while his public persona has gotten less reasonable over the years there's a lot of things that could/should be reported as \"patterns of behavior\" that, in the early days got reported as if they happened in a vacuum which let it seem reasonable at the time. reply sanderjd 15 hours agorootparentI think two things are true, both that his behavior has really changed significantly, and that the media has been increasingly less friendly to his eccentric behavior. But I think it's the first of those true things that has impacted peoples' perceptions of him far more than the second. reply citizen_friend 7 hours agorootparentprevIt takes a tremendous amount of attention for a message to get into the public in 2024. For you to know Elon’s name in the first place is a result of careful marketing and PR. So now that media is interested in Elon the question is what changed. Did Elon lapse on marketing? More likely is that he is giving off similar messaging but the media receiving it has decided to focus on other things. reply lawn 17 hours agorootparentprevDid the \"media\" force Musk to write his thoughts on his own platform? No? Then maybe you can't blame the media. reply citizen_friend 7 hours agorootparentYou wouldn’t hear about it if the media didn’t tell you. reply tzs 18 hours agoparentprevWhat does the Supercharger team actually do? To build and run a charger network you need people for at least these things: • To design the stations (including the charging equipment (hardware and software), landscaping, buildings) • To manufacture the charging equipment • To decide at a high level were to put stations, and at a lower level to find specific sites, buy or lease those sites, and go through whatever legal process is needed to be allowed to build there. • To deal with electric utilities to get power to the site. • To do the actual building at the site, including preparing the land, maybe paving, installing the chargers, hooking up to the incoming power, putting up signage, etc • To maintain it. It will need regular cleaning and trash pickup. Someone should be checking regularly for problems that won't be found by whatever remote monitoring and diagnostics they have. When a problem is found, manually or by there remote monitoring, someone has to go fix it. • To provide customer support. If you do all of them in house you need a large team. But a lot of them are reasonably done by hiring another company to do them in which case you might not need a large in house team. I'd guess that they do the first (design), part of the second (assemble the charging equipment from components they have custom built by other companies), the high level location planning. I'd guess that the lower level part of site placement is done by local firms familiar with the area that Tesla hires, that dealing with the electric company and the actual building is done by a local general contractor and whatever subcontractors that general contractor uses. I'd guess that the cleaning and on site checking for problems is handled by a local maintenance company. Fixing problems would either be a local company or someone Tesla sends depending on what it is that needs fixing. Customer support would likely be Tesla. If Tesla considers that their existing Supercharger station designs are good enough to continue using for a long time for new stations, then they might really only need to keep in house the high level decision of were to put them, charger repairs, customer support, and hiring the local companies that do the field work. reply cowmix 16 hours agorootparent500+ people to even do the HIGH level bits of running a SC network isn't a lot. Everyone (even the most strident Tesla haters) agrees that SC is the one thing Tesla does the best, hands down. I own a model Y and tried to use only non-Tesla charging on a long distance trip a few months ago, it was a disaster. Telsa's charging network is a win on EVERY front: 1. Locations 2. Quantity of locations 3. Quality (high charging rates) 4. User experience / design of hardware - software 5. Realtime reporting and navigation 6. Uptime of network The SC network is why a lot people consider Tesla who otherwise it would be a big fat no. reply matthewdgreen 12 hours agorootparentTesla's engineering culture around the Supercharger is what makes it viable. They mass produce a custom-designed unit in groups of four, and then ship them from factory directly to job site. None of the other competitors are doing that yet, which is why Tesla has been both more profitable and more reliable. Maybe that culture will survive the layoffs, but it's a fast growing business with a ton of complicated engineering work to do. reply LUmBULtERA 13 hours agorootparentprevSame, I'm a new used Model Y owner, and the supercharger infrastructure (existing, expected expansion, and maintenance) was part of the reason I bought it. It would be nice if Musk would provide some rationale of what's going on over there so we know what to expect... reply supportengineer 12 hours agorootparentprevI wonder how many encryption certs are in the Supercharger environment and what will happen if they aren't maintained. reply m5l 10 hours agoparentprevCould a plausible explanation be that with the spread of NACS, the supercharger network matters more to the overall industry and so Tesla can get away without footing the costs of managing it? Even if that makes some sense, it seems early to make that judgment call. reply ianburrell 7 hours agorootparentIn that case, they should have spun it out. I think Supercharger would be good if boring business by itself. That would also get rid of the conflict of having car company own biggest charging network. reply wuj 12 hours agoparentprevIf I'm not mistaken, many companies do the product engineering in house and outsource the manufacturing/maintenance to contractors. Tesla's supercharger network is mature enough that it won't see much innovation moving forward, and that might've motivated them to remove the entire team. reply sanderjd 19 hours agoparentprevYeah, of the full possibility space of mystifying decisions, I think this one might be the global maximum... It's such a \"selling shovels to the miners\" business line where they are (were?) positioned really well in. Maybe this isn't actually what's going on, but from an outsider's perspective, it really feels to me like watching a person's nervous breakdown play out, but at the scale of giant publicly traded companies. reply justin66 19 hours agoprevI guess the way to keep your engineering job at Tesla is to perpetually work on something that isn't finished, like self driving. reply Terr_ 10 hours agoparent♫ \"Next year, oh next year, you'll love it, just next year, it's only some months a-wayyyyy.\" ♫ (To the tune of \"Tomorrow\" from Annie.) reply ethagknight 18 hours agoprevTesla is in a bit of a bind in that the model y is difficult to improve (beyond the upcoming highland refresh). Fundamentally, it does its job so well that all it needs are minor tweaks. Supercharging network is essentially complete from a fundamentals perspective, you can nearly go anywhere with a EV with a bit of planning. The market can fill in the gaps. The roadster and semi situations are headscratchers, but I guess Tesla doesn’t want to hassle with a “sports car” with the same performance as its biggest sedan. I don’t think the Semi really works purely from an energy density perspective. Diesel-electric hybrids make far more sense for big rigs for current battery tech. The Tesla semi is sorta stuck. The layoffs make sense in that light. They have implemented the step change in Ev Manufacturing, built the machine to build the machines, are very close with FSD, built the charging network… working to avoid innovators dilemma, perhaps? Treating employees poorly is no good. reply xvector 18 hours agoparentAdvice for future Musk employees: Do a somewhat shitty job, otherwise you'll get fired as soon as you build a stable product. reply ein0p 14 hours agorootparentTo be fair that’s good advice for most people in large corporations. I’ve even seen people deliberately spin up crises out of nothing to then heroically solve them and get an easy promo. reply s1artibartfast 17 hours agorootparentprevsame could be said for home builders and heart surgeons. Do a shitty job or you wont be needed anymore. reply ImPostingOnHN 15 hours agorootparentHome-building companies and hospitals do need home builders and heart surgeons. Are they all doing shitty jobs? reply s1artibartfast 14 hours agorootparentAnd Tesla still has employees, but fewer than before. I was trying to highlight the idea that most workers dont have to rely on having a shitty work product to ensure their job security. This itself is a reaction to the idea that a job offer is a life long commitment akin to marriage. In a healthy labor market, employers would want to retain talent because it is profitable to do so. I don't employers retaining unproductive employees is a desirable state. reply mandeepj 13 hours agorootparent> And Tesla still has employees, but fewer than before They know they can hire more; Anytime they'd post an ad, there'd be millions of applicants. So, the input funnel is not their problem. https://www.businesstoday.in/technology/news/story/much-more... reply s1artibartfast 12 hours agorootparentIndeed. This means that they can employ more people when it is productive to do so, and let them go when they dont need or want them. I think this is a good thing in general. I dont think we should structure our expectations or the labor market around the idea that companies should retain unprofitable workers. reply matthewdgreen 12 hours agorootparentDeveloping a bad reputation is like sunburn. It doesn't turn into cancer instantly, but it slowly accumulates damage over time. Right now a top worker (particularly in a critical field like AI) has a lot of choices, and the company that gets a reputation for randomly firing entire teams is going to be a harder sell. reply mandeepj 10 hours agorootparentCheckout Maslow's Hierarchy of Needs. Those who need a job urgently especially now a days wouldn't look into \"reputation\". They may not even leave later as long as their needs are met. https://canadacollege.edu/dreamers/docs/Maslows-Hierarchy-of... reply s1artibartfast 12 hours agorootparentprevPerhaps, but that is a strategy decision for the company, and potential employee. reply ImPostingOnHN 11 hours agorootparentprev>I was trying to highlight the idea that most workers dont have to rely on having a shitty work product to ensure their job security. I think, then, that we're saying the same thing? That, yes, most workers, like heart surgeons, or engineers at a good tech company, don't have to do a shitty job to ensure job security, whereas Musk's employees do, because that means Musk will retain them while firing many workers who do a good job. I don't think either Musk retaining unproductive employees or firing productive employees are desirable, but that seems to be what he's doing, hence the advice spawning this thread. reply s1artibartfast 10 hours agorootparentI guess I just dont understand where that assumption comes from. How is this or any tech layoff different? Builders and surgeons do suffer layoffs when they dont bring in more revenue than they cost. There are tons of industries where jobs, projects, and labor demands are cyclic that dont resort to cynical employee sabotage. I guess this is part of a greater pet-peeve where every time a layoff comes up the predominant sentiment is either: 1) that the workers are productive revenue generators and the company is stupid and less informed than random outsiders or 2) employment should not be contingent on the employer ROI. In my opinion at least, jobs aren't guaranteed lifelong appointments. They are open ended contracts that either party can terminate any time. Termination from either side isn't a moral transgression in general, but I understand there can be some issues on the margin. Im genuinely perplexed by others reactions and I think my post was an attempt to get at why so many people see it different reply ImPostingOnHN 7 hours agorootparent> I guess I just dont understand where that assumption comes from. It comes from multiple people in this post, so it might be worth just asking them, if you want to find out. I'm sure the posters are willing to answer a good faith question. >I guess this is part of a greater pet-peeve where every time a layoff comes up the predominant sentiment is either: 1) that the workers are productive revenue generators and the company is stupid and less informed than random outsiders or 2) employment should not be contingent on the employer ROI. I have not seen this, but there are assumptions that the employees fired were somehow unprofitable. Perhaps at another company, this might be a safer assumption. In this case, it's more likely the action was irrational, impulsive, and drug- and/or ego-fueled. We'd need some evidence that they were fired because they were worth less than they cost, to make that assumption. reply 93po 16 hours agoparentprevSemi has specific use cases where it's great, it's not necessarily economic for all use cases as of today though reply ethagknight 11 hours agorootparentIts target market, per Tesla, is not those use cases. I think electric yard tractors are already a thing. The “electrify road shipping” would go a lot smoother if Tesla was honest about “electric performance + a diesel base load” but I guess Elon doesn’t want to concede the argument? Honestly surprised no one else has moved in this space?? Maybe it just doesn’t work? reply tristanb 13 hours agoprevI have a decent amount of Tesla shares, that I purchased around 2017. All I want is a shareholder vote to get rid of Elon. His time has passed. reply ProjectArcturis 10 hours agoparentWhy would you want TSLA to be valued like a normal car company? reply r00fus 6 hours agorootparentIt's going to be worth a lot less if Elon does to Tesla what he did to Twitter. reply cbeach 11 hours agoparentprevSo, a very smart CEO works for six years to turn a minor automotive startup into the world’s most valuable car company, enriching you while you sat on shares in the company. And despite this, you think he deserves his compensation (in the form of shares in the company) to be cancelled? Even though it was contractually promised, and agreed by shareholders? Bear in mind that the package is only worth a large amount because Tesla has grown so hugely under Musk’s leadership. I’m interested to know how many other HNers also hold this belief, or think this is a reasonable way to treat entrepreneurs in America? reply JojoFatsani 10 hours agorootparentNot OP but as a very minor shareholder.. I think it’s reasonable not to allow a single employee to be compensated (55b$) more than all the EBITDA the company has ever made. I think it’s reasonable to question the decision making demonstrated by firing the most successful team at the company and put the major competitive advantage at risk. I think it’s reasonable to question the constant monkeying with product and design (Cybertruck, removal of loved features like LIDAR or physical wiper blade controls). I think it’s reasonable to question how the CEO has lost first mover advantage so badly by failing to improve products and introduce new models as the legacy competition and foreign companies quickly have caught up. I think it’s reasonable to want an engaged, full-time CEO who is not distracted by executive responsibilities at several other ventures, half of which are actively failing as well. reply cbeach 34 minutes agorootparentWhen the deal was agreed, it wasn't worth anything close to $55bn. It's only worth that now due to the incredible rise in value of the stock under Musk. A deal is a deal. As a £six-figure shareholder I am voting for Musk to be paid what he is owed (in the June 13th meeting). And voting for Tesla to incorporate in a state where judges don't make arbitrary decisions on executive pay We don't know the full details of the Supercharger team's \"firing\" yet, so let's not speculate. Reuters speculated when they reported about the cancellation of the affordable Model 2, and they got that reporting horribly wrong (damaging the stock price with their error). As for Superchargers being a major competitive advantage, that's no longer the case, as the network is open to cars from other brands. Tesla hasn't lost its first mover advantage. Name another American or European carmaker that sells as many EVs as Tesla. BYD briefly caught up in terms of raw sales figures, but that trend quickly reversed when China's economic woes weighed on the company. As for \"failing to improve products,\" the Model S has been improved in so many meaningful ways, it's practically a new car. The performance (0-60 in 1.99s) is absolutely mind-bending, and Tesla's innovations such as the carbon-wrapped motor are responsible for this. > I think it’s reasonable to want an engaged, full-time CEO who is not distracted by executive responsibilities at several other ventures, half of which are actively failing as well. Which ones are failing? SpaceX is untouchable. Neuralink successfully implanted a brain/computer interface in a paraplegic man. X.com delivers features at a greater rate than Twitter 1.0, at lower operational cost, and -more importantly- it is defending free speech. xAI just secured $6bn in funding, with its value soaring to $18bn. All of which was acheived by a man who is \"distracted.\" And other companies that Musk co-founded (e.g. OpenAI, PayPal), seem to be ticking along nicely also. reply ProjectArcturis 10 hours agorootparentprevYou're giving Musk a lot more credit for the share price than he deserves. If there hadn't been a pandemic, and stimulus checks, and people playing on Robinhood for fun, TSLA wouldn't have gone up nearly so much. Put another way, sure, the stock price went above the targets he set for himself. How much did profits go up? reply Havoc 22 hours agoprevMust be bad layoff decision week. First googles python team now Tesla supercharger team reply hankchinaski 19 hours agoprevThe real question is why people keep working for these obnoxious companies/leaders, I rather watch grass grow than work for Tesla and that egomaniac of Elon smuck reply rawgabbit 13 hours agoprevLay off 20% of the work force to juice the financials and then dump the stock? reply peutetre 21 hours agoprev> Musk said, in his typical bluster, that he wants Tesla to be “absolutely hard core” about headcount reduction, saying that executives whose subordinates “don’t obviously pass the excellent, necessary and trustworthy test” I'm not sure Musk passes that test. reply GolfPopper 19 hours agoparentHe's not talking about executives, he's talking about \"subordinates\". reply mandeepj 10 hours agoprevInteresting read below! Seems plausible, not sure how true the story though. https://x.com/fomahun/status/1785333618157527081?s=46&t=LAqP... reply resolutebat 10 hours agoparentThis is the stupidest theory ever. Supercharger expansion is not slow because of Tesla or any technical reason under their control, but because Supercharger stations require a) massive amounts of electricity and b) local government planning approvals, and the 2nd of those in particular only moves at the speed of government. There are sites in Australia that have been tied up for years by petty council politicking. reply Tiktaalik 14 hours agoprevSeems troubling for the recent vendors Ford and Rivian that just signed on to be users of the Supercharger network if the thing now has high odds of (figuratively) rusting away without support. I wonder if Tesla is in any breaches of contracts that they may have signed with these companies, and how much Ford/Rivian paid for acccess. reply 4b11b4 13 hours agoparentI doubt it's going to rust away, they just don't need a large team anymore. reply babypuncher 12 hours agoprevAn old boss of mine tried to get me to come work for him at Tesla. This was early 2022. I told him this Musk fellow doesn't inspire much confidence in me with his increasingly bizarre antics. Seems like I dodged a bullet. reply techdmn 19 hours agoprevHmm, time for the over under. Which happens first: Musk is replaced as CEO, or he drives Tesla into the ground? And in the latter case, how long do we think it will take? reply davidcbc 18 hours agoparentThat's not how an over-under works reply techdmn 18 hours agorootparentFair. How about: \"How long Musk continues to be CEO of Tesla, whether because he is replaced or because Tesla goes out of business.\" reply xvector 18 hours agoprevMusk's companies do great stuff but I wouldn't be caught dead working under him. An unwise decision in so many ways. reply wnevets 13 hours agoprevWhy would an AI company need employees to build cars and its charging network? /s reply 54643dd 19 hours agoprevnext [2 more] [flagged] mplewis 13 hours agoparentYou made a burner account and all you could come up with was this comment? reply vardump 21 hours agoprevPerhaps we don't know the whole picture. I doubt Tesla is going to abandon Superchargers anytime soon. reply thejazzman 19 hours agoparentWho exactly is going to pickup the work? reply steelframe 19 hours agorootparentElectrify America! (Sorry, I'll show myself out the door.) reply marcusverus 14 hours agorootparentprevGood question. The answer ain't 'nobody', is it? It's almost as though, perhaps, we don't know the whole picture. reply citizen_friend 19 hours agorootparentprevOh so you do know the full picture and organizational structure? reply cs702 19 hours agoprev [–] WTF? This is utterly bananas. I don't get it. The long-term cost of treating longtime, loyal, talented employees like Rebecca Tinucci as... disposable could be very high. It could even threaten the company's survival. But... I'm going to give Musk the benefit of the doubt, because he has proven me -- and lots of people who are way smarter than me -- wrong, again and again, over the past two decades. He has a long track record of making bets that look crazy-stupid in the moment but turn out to be crazy-brilliant in hindsight. The jury is out. reply dragontamer 19 hours agoparent> He has a long track record of making bets that look crazy-stupid in the moment but turn out to be crazy-brilliant in hindsight. Like Cybertruck? Tesla Semi? Full self driving in 2017? Robotic snake to automatically plug into your car and charge it? Dojo? Hyperloop? Solar roofs? Battery Swap? Dogecoin? Tesla Roadster? Twitter? reply Avshalom 19 hours agorootparentOh on the battery swap note I heard recently that may have been a ... scam? Apparently there was an increased credit available for EVs that could be fully charged in under x-time and by claiming that they could battery swap tesla got a bunch of extra money. reply cs702 19 hours agorootparentprevThank you for that. It made me chuckle! Here are some counter-examples: * A new car company making a new kind of vehicle. The first time I heard he wanted to build a new car company that would sell EVs, I dismissed it as crazy. Tesla now sells close to 2M vehicles a year, roughly comparable to BMW. * A new network of EV charging stations. The first time I heard about it I thought the company would never recoup the capital cost. * A new rocket company. The first time I heard about SpaceX's early days I dismissed it as crazy. SpaceX now sends 10x more cargo to orbit than everyone else, public and private, combined. * A new satellite-Internet service. Prior to Starlink, every previous attempt to offer cheap and reliable Internet service via satellite had gone bankrupt. * A new brain-machine interface. The first time I heard about Neuralink I dismissed it as \"way too early.\" The company just showed a disabled man using a computer with his thoughts. * The latest beta version of the self-driving software (FSD Beta >= 12.3.6). I've tested it and I am... impressed. Even though it happened much later than Musk predicted. Here's what it's like: https://www.youtube.com/watch?v=eIjOs1Gum2M * Dojo, which is now online. There's a picture of it on the last quarterly deck: https://digitalassets.tesla.com/tesla-contents/image/upload/... -- though I don't know if it will be able to keep up with Nvidia's offerings, which are always improving. Some things you mention failed, and the jury is still out on Cybertruck, Roadster, Solar Roof, and X (Twitter). But the track record is there. reply sanderjd 18 hours agorootparentIt is an impressive track record. And something that does frustrate me is people who want to entirely dismiss his track record in order to bolster their current criticisms of him. I think that is motivated reasoning. But I think your benefit of the doubt in his judgement is similarly misguided. What I think is that he has been very adept in having a bold vision, using his showmanship to get the funding, talent, and visibility to get it off the ground, and then leveraging that into a feedback loop that bolsters his credibility for the next bold vision. I think it's very admirable that he has executed that playbook so well for so long! (And I think it's good for society that Tesla and SpaceX and Starlink and Neuralink exist, and I certainly appreciate his role in that.) But I think his track record for things that aren't part of that playbook is pretty bad. Buying Twitter was not a bold vision, it was dumb very-online pettiness. And there's now a history of specific business decisions that seem to come directly from him, which I think have just been bad. Not bold visionary risks that didn't work out, just foreseeable bad outcomes from bad, impulsive, ego-driven decisions. So sure, next time he's spinning up something visionary in AI or biotech or energy or who-knows-what, I'll pay attention and suspend my disbelief. But on the boring day to day executive decision making that every company has to do, I think he has earned less credibility than most (maybe all) leaders of businesses of similar scale. reply cs702 18 hours agorootparentThank you. I find your comment insightful... but I don't think it gives him proper credit for a lot of \"boring day-to-day decisions\" he's made at Tesla and SpaceX, particularly in operations and manufacturing, over the past two decades. Tesla's early team gives him all credit for ramping up Fremont's Model 3 production in 2019 to ~2.5x what even his execs had said was physically possible. He proved all of them -- and a lot of smart short-sellers -- wrong. reply sanderjd 18 hours agorootparentMostly happy to agree to disagree on this! But I also think that it is mostly in the last few years (after your example) that his judgement has become especially questionable. There are examples from earlier on that I think can now be seen as a through line to where he's ended up today, but I think it is only in the last few years - basically, as his social media involvement has increasingly become a distraction - that he seems (to me) to have lost the plot with respect to managing his companies day to day. And I'm also not saying that every decision he makes is bad, but to me I think the recent track record is bad enough that these kinds of decisions deserve to be evaluated on their own, rather than given the benefit of the doubt. reply cs702 17 hours agorootparent> but I think it is only in the last few years - basically, as his social media involvement has increasingly become a distraction - that he seems (to me) to have lost the plot with respect to managing his companies day to day. Hmm... That's a reasonable conclusion. You could be right. I'll be a bit more humble and admit that there's a lot I don't know, so for me, the jury is out. Things may implode at Tesla, or maybe the company will grow 10x. I wouldn't be surprised either way! reply sanderjd 17 hours agorootparentRespectfully, I think you're trying to do the humble thing by taking a neutral position, which I think is laudable, but your position in this thread has not actually been neutral. Your position has been (and my interpretation of this latest comment is that it still is) that this decision is more likely to actually be a good one, because it was made by Musk. But that's not a \"humble\" position any more than mine is. The humble position might be something like \"beats me! what do I know?\". I think your position is more like \"deferential\". Sorry if this turned out to just be a semantic point about word choice. I originally thought that maybe it wasn't, that maybe there's something real here about what it means to have a humble view, but now I think maybe you just did mean something more like \"deferential\", in which case this was a pointless comment and I apologize :). reply cs702 16 hours agorootparentNo. As I wrote in the top comment of this thread[a] and just repeated, the jury is out. That phrase has a precise meaning: https://www.merriam-webster.com/dictionary/the%20jury%20is%2... -- [a] https://news.ycombinator.com/item?id=40211380 reply sanderjd 15 hours agorootparentYou also wrote: > But... I'm going to give Musk the benefit of the doubt, because ... I think we're both agreeing that \"the jury is out\", but disagreeing about which side of the question that jury is deciding should be the one with the \"presumption of innocence\" :) reply ImPostingOnHN 14 hours agorootparentYeah, there's an even larger track record of making decisions that look unwise in the moment and everyone told him they were unwise and turns out they were unwise. That Bayesian prior makes it the most likely outcome until the jury returns with sufficiently convincing evidence to the contrary. reply matthewdgreen 12 hours agorootparentprevIf you take his good and bad decisions and order them chronologically, do any patterns emerge? reply zachmu 9 hours agorootparentprevYou can just say: I don't know. I don't know why Tesla is pursuing layoffs, or this particular layoff strategy. And because I don't know, I don't have a strong opinion about it one way or the other. That's all \"benefit of the doubt\" means. \"I don't know one way or the other, but this guy has a pretty good track record, so until I know more I won't assume anything bad.\" reply dragontamer 18 hours agorootparentprev> Like a new car company making a new kind of vehicle. The first time I heard he wanted to build a new car company that would sell EVs, I dismissed it as crazy. Tesla now sells close to 2M vehicles a year, roughly comparable to BMW. Martin Eberhard and JB Straubel came up with that idea. Elon Musk's contribution was suing them so that he can be called a founder. > Like a new network of EV charging stations. The first time I heard about it I thought the company would never recoup the capital cost. You're literally commenting on an article where the ENTIRE supercharging team was just fired, presumably to save money at Tesla. > Like Dojo, which is now online. There's a picture of it on the last quarterly deck: https://digitalassets.tesla.com/tesla-contents/image/upload/... -- though I don't know if it will be able to keep up with Nvidia's offerings, which are always improving. Dojo is a 7nm design while NVidia's is a 3nm design. It won't keep up at all, despite costing Tesla likely a $Billion+ to produce (between $100M mask costs, large software teams working for multiple years, etc. etc. it wouldn't surprise me to see Dojo's total cost be well in excess of a $Billion). reply cs702 13 hours agorootparent> You're literally commenting on an article where the ENTIRE supercharging team was just fired, presumably to save money at Tesla. Oh I'm in shock about that. As I wrote above, \"WTF?\" Whatever it is Musk is trying to do at Tesla, I don't get it. But given his track record, I'll give him the benefit of the doubt. reply JojoFatsani 10 hours agorootparentprevDon’t forget the boring company! Let’s invent the subway but worse reply Fricken 12 hours agorootparentprevAlso, the \"Alien Dreadnaught\", a fully automated Model 3 production line with robots that move so fast you won't even be able to see them! It was when he tried to pass that one off with a straight face that drove the final nail into the coffin containing any delusions I may have entertained about Elon's competence. reply 1970-01-01 16 hours agorootparentprevAre you saying he isn't allowed to have some failures on his very long list of ideas? SpaceX and Tesla are very likely his biggest successes, by all measures of the word. The amount of success these obtained easily tower over the failures by several orders of magnitude. reply browningstreet 16 hours agorootparentExcept when you factor in timelines.. his successes are from before, not lately. From a trend perspective, he's disrupting continuities that don't seem rational to disrupt and shouldn't prevent him from moonshot-ing separately. reply treme 19 hours agorootparentprevTesla and SpaceX alone gives him enough credibilty for life as CEO reply TheCleric 16 hours agorootparentFor the immense returns that he's been getting for over 40 years, that alone gives Bernie Madoff credibility for life in investing. reply Terr_ 10 hours agorootparent\"The 8 years of the Bill Cosby show alone give Bill Cosby enough credibility for life as a wholesome family man.\" reply sanderjd 19 hours agorootparentprevThis is, frankly, a very silly way of thinking. Tesla and SpaceX are very admirable businesses that Musk deserves a lot of credit for, I'm totally with you there. But that someone made good decisions at one point in time does not imply that decisions made later are also good. Businesses change, people change, the world changes. reply lenerdenator 19 hours agorootparentprevSpaceX, maybe. He’s actively sinking Tesla and that’s his cash cow. reply dragontamer 19 hours agorootparentprevWhat decision did Elon make at Tesla was good for Tesla in the last 10 years? I listed off the big stuff I can remember above. I'll go add \"Alien Dreadnaught\" and full automation of the Model 3 as another failure. Turns out that humans are way better than machines for the assembly line still, even today. ------ So far, the best thing for Tesla so far has been Elon Musk losing focus and thinking about Twitter for a few years instead of sending Tesla down another $inkhole to lose another $billion on an insane, underdeveloped idea. Well, aside from Optimus I guess. reply thejazzman 19 hours agorootparentprevThat snake was bad ass I heard Elon designed and built it himself in his garage They didn't commercialize it because no one else was capable of making one and it was too much work for one person to mass produce reply potatochup 19 hours agorootparentDefinitely not true. Source: I worked at Tesla at the time of the Snake robot. reply dragontamer 17 hours agorootparentThe above post looks like carefully constructed satire, mostly there to make fun of people who hero-worship Elon Musk into thinking that Elon Musk personally handled all tasks at Tesla like Tony Stark / Ironman. reply ImPostingOnHN 14 hours agorootparentPoe's law strikes again reply orwin 18 hours agorootparentprevPeople really believe that? He seems he would have troubles changing a tire, but maybe he's a great mechanic? reply thejazzman 19 hours agoparentprevLots of famous scams became insanely huge before collapsing under their facade. Enron, Theranos, etc. You rarely see any evidence that Elon does anything but pay (...sometimes...), threaten and scare people into delivering on his demands Everything is about first principles. You know, the most basic simple starting blocks. They teach it to high school kids. People act like that's magic.... reply rchaud 12 hours agorootparentTheranos fell apart the second they signed a deal with Walgreens and it became obvious they were using machines made by other vendors to do blood tests, because their own thing didn't work. Enron got away with as much as they did because of the far more generous accounting rules that were in play back then. reply ethagknight 19 hours agorootparentprevEnron and theranos were actual scams though reply rurp 13 hours agorootparentEnron developed quite a few actual energy projects in the real world. They were as much of a legit company as a car manufacturer, but the scam part of Enron eventually got so big that it blew everything up. reply Terr_ 10 hours agorootparentprevMany big scams involve substantial \"real\" components, and sometimes the scammers have a balancing-act where too much success in either portion can threaten the other. See also: Lying for Money: How Legendary Frauds Reveal the Workings of the World by Dan Davies. reply lenerdenator 19 hours agorootparentprevEnron had a decent core business (market making) that was run by absolute psychopaths. Theranos was a scam though. reply ethagknight 18 hours agorootparentI mean… sure… it was also propagating a massive, institutional scale accounting fraud that brought down a “Big Five” accounting firm. Comparing these two companies to Tesla is insincere. FSD is really the only product sold by Tesla that’s been a true let down for years vs the marketing hype, but they have not given up on it, and are now delivering on the hype. The rest of their main line products are industry leading. reply lenerdenator 16 hours agorootparentI'm not sure I'd limit it to FSD. The CyberTruck has several very glaring flaws that would not have happened had someone at Tesla talked Elon into accepting just a bit of conventional wisdom from the automotive industry. Things like \"provide a protective layer of paint over the sheetmetal of the vehicle's body to prevent rust.\" The new Tesla Roadster and Semis for commercial customers are either way off their timetable or facing further production problems. Fit and finish on some models remains subpar. I don't think it's enough to sink the company in the near-term, particularly in the US, but it's proof that charisma and vision doesn't solve issues with industrial capacity. reply ethagknight 11 hours agorootparentDisagree on that. Subpar quality, delays, rejecting conventional wisdom are not scams or fraud, though it is risky. He isn’t promising magic that doesn’t exist a la theranos, and he has even personally stated TSLA is overvalued (vs Enron…). except for FSD, which now exists with some imperfection. I don’t own TSLA, I have owned a Y for 3 years and love it. I have a cybertruck on order knowing it may be my dumbest purchase of my life, but also maybe the best. I think Tesla is an amazing tech company that is needlessly brutal to its employees. reply cbeach 11 hours agorootparentprevI’ve owned a Tesla for the last five years. It’s every bit as brilliant as Musk promised, and I can assure you Tesla is not a scam. reply yifanl 19 hours agoparentprevPast performance is not indicative of future returns. reply autonomousErwin 18 hours agorootparentI really wonder how true/untrue this is? For example, if you've founded and exited a company before I'm guessing you're more likely to do it again (this is gut feeling - I don't have data so happy for someone to disprove this with a study) but is that only because people think you're more likely to succeed and therefore give you more resources (capital, employees joining, customers paying etc.) improving your chances thus perpetuating this idea. It's like some kind of twisted Hot Hand fallacy (https://en.wikipedia.org/wiki/Hot_hand) that bends in on itself actually making it not a fallacy if everyone believes it. reply sanderjd 19 hours agoparentprev [–] What are some recent examples of things that turned out to be crazy-brilliant that people have been proven wrong about? reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Tesla is carrying out additional layoffs, with the entire Supercharger team being impacted by the reductions.",
      "The company's decision to include the Supercharger team in the cuts has drawn attention due to the importance of the Supercharger network in Tesla's infrastructure."
    ],
    "commentSummary": [
      "Shareholders are debating Elon Musk's leadership, decision-making, and recent layoffs, including a $55 billion stock grant.",
      "Concerns are raised about the sustainability and profitability of SpaceX and Tesla, Musk's behavior changes, and job security in corporations.",
      "Questions persist about Musk's effectiveness as a leader, the future of his companies, and the impact of his decisions on their valuation and success."
    ],
    "points": 178,
    "commentCount": 200,
    "retryCount": 0,
    "time": 1714473195
  },
  {
    "id": 40219201,
    "title": "DEA to Reclassify Cannabis from Schedule I to III",
    "originLink": "https://norml.org/blog/2024/04/30/dea-accepts-health-agencys-recommendation-to-reclassify-cannabis/",
    "originBody": "DEA Accepts Health Agency’s Recommendation to Reclassify Cannabis by NORML Posted on April 30, 2024April 30, 2024 For the first time, the Drug Enforcement Administration has called for ‘botanical cannabis’ to be reclassified under federal law. The DEA’s decision, which the Associated Press is reporting today, to move cannabis from Schedule I to Schedule III of the US Controlled Substances Act comes eight months after the US Department of Health and Human Services initially advocated for the change, finding, “The vast majority of individuals who use marijuana are doing so in a manner that does not lead to dangerous outcomes to themselves or others.” The Biden Administration initiated federal agencies to review the issue in October 2022 – marking the the first time a President has ever made such a request. By definition, Schedule I substances are criminally prohibited by federal law because they possess a “high potential for abuse“ and have “no currently accepted medical use in the United States.” Cannabis has remained classified as a Schedule I controlled substance since 1970. The DEA’s determination must be reviewed by the White House Office of Management and Budget, according to AP. Commenting on the forthcoming decision, NORML Deputy Director Paul Armentano said, “It is significant for these federal agencies, and the DEA and FDA in particular, to acknowledge publicly for the first time what many patients and advocates have known for decades: that cannabis is a safe and effective therapeutic agent for tens of millions of Americans.” Armentano cautioned, however, that reclassifying cannabis as a Schedule III substance would not immediately address the growing chasm between federal law and the laws of most states that currently regulate cannabis for either medical or adult use. “The goal of any federal cannabis policy reform ought to be to address the existing, untenable divide between federal marijuana policy and the cannabis laws of the majority of US states,” he said. “Rescheduling the cannabis plant to Schedule III fails to adequately address this conflict, as existing state legalization laws — both adult use and medical — will continue to be in conflict with federal regulations, thereby perpetuating the existing divide between state and federal marijuana policies.” Historically, Schedule III substances have received explicit market approval by the FDA; they are only legal to possess when obtained in licensed pharmacies under a physician’s prescription. “Just as it is intellectually dishonest and impractical to categorize cannabis in the same placement as heroin, it is equally disingenuous and unfeasible to treat cannabis in the same manner as anabolic steroids and ketamine,” Armentano said. “The majority of Americans believe that cannabis ought to be legal and that its health risks are less significant than those associated with federally descheduled substances like alcohol and tobacco. In fact, HHS reached a similar conclusion regarding cannabis’ safety profile in its own analysis. “Like those latter substances, NORML has long argued that the cannabis plant should be removed from the Controlled Substances Act altogether, thereby providing state governments — rather than the federal government — the ability to regulate marijuana in the manner they see fit without violating federal law, and allowing the federal government to provide standards and guidelines for regulated cannabis markets.” This is the fifth time that a cannabis rescheduling petition has been decided by the DEA. The agency rejected a similar petition in 2016. The DEA’s rescheduling decision, once formalized, does not take immediate effect. The agency must first accept public comments, during which time interested parties can formally request administrative hearings to further debate the issue. Only following public comments and a possible judicial review will the agency issue its final determination. Changes in marijuana’s federal status will then take effect 30 days following publication of the DEA’s final rule in the Federal Register. The DEA’s decision notwithstanding, Armentano speculated that federal agencies may ultimately request Congress to create new regulatory pathways for cannabis products, particularly for those marketed for adult use. The FDA made a similar request in 2023 with respect to hemp-derived CBD products, which they determined did not fit within any existing regulatory frameworks. Additional information on cannabis rescheduling is available from the following NORML op-ed and Fact Sheet. Share this: Twitter Facebook Like this: Like Loading... Related Posted in PolicyTagged Biden, DEA, deschedule, FDA, HHS, rescheduling, Schedule III",
    "commentLink": "https://news.ycombinator.com/item?id=40219201",
    "commentBody": "DEA Accepts Health Agency's Recommendation to Reclassify Cannabis (norml.org)177 points by jdmark 6 hours agohidepastfavorite2 comments neom 5 hours ago [–] More over here: https://news.ycombinator.com/item?id=40213591 reply dang 1 hour agoparent [–] Comments moved thither. Thanks! reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The DEA will reclassify cannabis from Schedule I to Schedule III based on a recommendation from the Department of Health and Human Services, recognizing its therapeutic benefits.",
      "Despite the reclassification, challenges remain due to discrepancies between state and federal cannabis laws.",
      "The process involves review by the White House Office of Management and Budget, public feedback, administrative hearings, and a final decision before any changes are implemented."
    ],
    "commentSummary": [
      "The DEA has accepted the reclassification of cannabis following guidance from a health organization.",
      "This decision marks a significant shift in the legal status of cannabis.",
      "For further details, please refer to the provided link."
    ],
    "points": 177,
    "commentCount": 2,
    "retryCount": 0,
    "time": 1714534174
  },
  {
    "id": 40218021,
    "title": "Unlocking Creativity with StoryDiffusion",
    "originLink": "https://storydiffusion.github.io/",
    "originBody": "StoryDiffusion: Consistent Self-Attention for Long-Range Image and Video Generation Yupeng Zhou1* Daquan Zhou2† Mingming Cheng1 Jiashi Feng2 Qibin Hou1† 1VCIP, CS, Nankai University 2ByteDance Inc * Interns in ByteDance Inc † Corresponding Authors Paper Github Cite Demo Comics Generation StoryDiffusion can create impressive comics by our consistent self-attention, maintain character consistency for cohesive storytelling. Video Generation Results StoryDiffusion can generate high quality video by our image semantic motion perdictor with our generated consistent images or user-input images as condition. Video Gallery Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using Condition images from SORA Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using Condition images from SORA Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using Condition images from SORA Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using images generated by our consistent self-attention Using Condition images from SORA Using User-Input Condition images Using User-Input Condition images Using User-Input Condition images Cartoon characters generation StoryDiffusion can also create amazing consisitent cartoon characters images. Multiple Characters Generation StoryDiffusion can also maintain the IDs of multiple characters at the same time and generate consistent images. More Comic Generation Example StoryDiffusion can create impressive comics. We will add more comics and put on here. \"Girl and Squirrel\" Methods The structure of the Consisitent Self-Attention. The structure of the Motion Predictor. Style from Bulma. The source code is licensed MIT. The website content is licensed CC BY NC SA 4.0.",
    "commentLink": "https://news.ycombinator.com/item?id=40218021",
    "commentBody": "StoryDiffusion: Long-range image and video generation (storydiffusion.github.io)173 points by doodlesdev 9 hours agohidepastfavorite42 comments smusamashah 1 hour agoThis is unbelievably good. Seems better than Sora even in terms of natural look and motion in videos. The video of two girls talking seems so natural. There are some artifacts but the movement is so natural and clothes and other things around are not continuously changing. I hope it does become open source, which i suspect it won't because it's coming from byte dance. reply cchance 58 minutes agoparentI don't know if thats true, theirs a massive flicker in the guys hair (the one thats mostly black background and black shirt) half way through it completely loses tracking on his hair and it like snap changes. reply schoen 8 hours agoprevI looked very closely at the videos for a while and managed to find some minor continuity errors (like different numbers of buttons on people's button-down shirts at different times, or different sizes or styles of earrings, or arguably different interpretations of which finger is which in an intermittently-obscured hand). I also think that the cycling woman's shorts appear to cover more of her left leg than her right leg, although that's not physically impossible, and the bear seemingly has a differently-sized canine tooth at different times. But I guess it took me multiple minutes to find these problems, watching each video clip many times, rather than having any of them jump out at me. So, it's not like literally full consistent object persistence, but at a casual viewing it was very persuasive. Maybe people who shoot or edit video frequently would notice some of these problems more quickly, because they're more attuned to looking for continuity problems? reply nyokodo 7 hours agoparent> But I guess it took me multiple minutes to find these problems I’m no video editor but I noticed straight away that The characters’ eyes and hair tend to change, sometimes dramatically as they turn their head. Also, the head movement tends to be jerky or abrupt especially in the middle of the turn. reply justinclift 4 hours agorootparentEyes and teeth seem like they still need further work. Still, looks like things are improving. :) reply cchance 57 minutes agoparentprevI mean at the end of the day neither is standard video editing, how many times have we all found inconsistencies in TV shows or random water bottles showing up and disappearing in scenes... I imagine diffusion video creation will be similar eventually funny anecdotes of what we saw that time in LOTR 10 reply godelski 7 hours agoparentprevDid you miss the fish?[0] You should see the error in first viewing What about the woman with glasses? Her face literally \"jumps\"[1] Same with this guy's hands[2] Interesting, we notice that [1] has \"sora\" in the name though I think it is a reference to the main image on sora[3] Not sure if the gallery is weird to anyone else, but it doesn't exactly show new images and the position indicator is wonky. The thing that makes me most suspicious is seeing the numbers on these demos. 1, 2, 4 (terrifying to me), 5, 65, 66, 68, 72, 73, 83, 85, 86 (is this Simone Giertz? Vic Michaelis?). The part that is tough about evaluating generative models is the cherry picking for demonstrations. You have to do it or people tear your work apart but also in doing so you give a false impression of what your work can actually do. IMO it has gotten out of hand and is not benefiting anyone. It makes these papers more akin to advertising than communication of research. We talk about integrity of the research community and why we argue over borderline works but come on, if you can get a better review by more samples, you can get better reviews by paying more, not by doing better work. A pay to play system is far worse for the integrity of ML (or any science) than arguing over borderline works. Edit: I think it is also a bit problematic that this is posted BEFORE the arxiv link or GitHub goes live. I'd appeal to the HN community to not upvote these kinds of works until at least the paper is live. [0] https://storydiffusion.github.io/MagicStory_files/longvideo/... [1] https://storydiffusion.github.io/MagicStory_files/longvideo/... [2] https://storydiffusion.github.io/MagicStory_files/longvideo/... [3] https://openai.com/sora reply vkou 7 hours agoparentprevI'm immediately noticing significant issues with mouths (specifically, when they are open). It's also telling that most of the shots do their best to hide hands - whenever they are visible, they are obviously broken. reply samspenc 8 hours agoprevNormally I don't mind spelling errors - and there are plenty in the examples - but my question is, did the system really produce \"lunch\" when the prompt was \"they have launch at restraunt\" (verbatim from the sample)? I would imagine it got restaurant right, but I would have expected it to produce something like a rocket launch image instead of figuring out the author meant lunch. reply dkarras 8 hours agoparenttransformers / attention is very robust against typos as they take the entire context into account just like we do. launch any free LLM and ask them questions with typos that you would notice and auto-correct and you'll see that the models just don't care and understand them. actually they are so resilient that they understand very garbled text without breaking a sweat. reply noneeeed 44 minutes agorootparentI often use ChatGPT in learning spanish, I find it's great for explaining distinctions between words with similar meanings where a dictionary isn't always a lot of help. I am constantly surprised by how well it copes with my typos, grammatical errors and generally poor spelling. reply BoorishBears 7 hours agorootparentprevThere's honestly something uncanny about how well they do. In the \"early days\" of GPT-4 I tried testing it as a way to get around poor transcription for an in-car voice assistant. It managed: \"I'm how dew yew say... Freud?\" => Turn up the temperature... which was nonsense most people would stare at for a long time before making any sense of. reply neckro23 8 hours agoparentprevAnd if it the model is supposed to be so attentive to context, why did it show a desert instead of \"dessert\"? After all, they just ate \"launch\". reply yorwba 3 hours agorootparentThe model can only attend to context that is part of the input. Most likely they created the image grid by independently feeding the model each prompt together with the reference image. (And the point is to show off that the model output remains consistent despite this independent generation process.) reply godelski 7 hours agoparentprev\"He felt very frightened and run\", \"There is a huge amount of treasure in the house!\" I suspect that some grammar and spelling issues may be the authors themselves. For example \"A Asian Man\": \"a\" instead of \"an\" is a common mistake for many Asian languages due to not having similar forms in their languages. So considering consistent article errors, I expect this to be an issue from the authors. Not sure the \"M\" capitalization. Similar things with \"The man have breakfast\", \"They have launch at restaurant\", \"They play in (the) amusement part.\" Considering the comics have similar types of error (the squirrel one clearer) I'd chalk it up to language barrier instead of the process. Though LeCun is not wearing gloves on the moon, and well... reply ffhhj 5 hours agoparentprevCurious what it would produced with: \"they have launch a rockestaurant\". reply speedgoose 15 minutes agoprevIs there a video of Will Smith eating spaghetti with this model? reply hbbio 8 hours agoprevGitHub link is not public yet? https://github.com/HVision-NKU/StoryDiffusion reply smcnally 6 hours agoparentThat repo’s not listed https://github.com/orgs/HVision-NKU/repositories reply stanislavb 8 hours agoparentprevSeems so. I was about to report about it, too. reply LeoPanthera 8 hours agoprevThe rate of progress of generative AI is honestly quite scary. reply ed_mercer 8 hours agoparentReally? Feels like nothing much is happening lately. reply vouaobrasil 4 hours agorootparentProgress comes in spurts. Due to the negative reactions to AI by some (artists), the system wants it to appear that nothing is happening so that the next wave of AI can be created in relative peace, at which time it will be too late to stop it. We have been conditioned to only react to hype and \"news\", rather than analyze reality and see the danger. reply thejohnconway 7 minutes agorootparentWhich “system”? reply newswasboring 20 minutes agorootparentprevWhat are you talking about? ChatGPT-3 came out less than 4 years ago. Stable diffusion's first version around that too. In less than 4 years we went from nothing to making janky but believable video clips. This is not fast enough for you? reply keikobadthebad 8 hours agoprevIt'll be good if the girl and the giant squirrel are ever seen in the same park at the same time. reply pmontra 4 hours agoprevThe Moon in the sky seen from the surface of the Moon is wrong? Poetic? Funny? Recursive? A demonstration that these models don't understand anything? Add to the list. reply topspin 7 hours agoprevLove how under \"Multiple Characters Generation\" the white guy is \"A Man,\" whereas the someone else is \"An Asian Man.\" Reminds me of Daryl Gates and the \"normal people\" quote, thence patrol cars being called \"black and normals.\" reply fnordpiglet 7 hours agoparentA probabilistic regression models behavior will just demonstrate the training data. Don’t hate the player, hate the game. reply topspin 7 hours agorootparentNo hate for any part of this: it's just amusing. reply gbickford 7 hours agoprevIt's always disappointing when people publish things to GitHub without the intention of collaborating or sharing. reply forgingahead 7 hours agoprevGithub link is broken, and I honestly find it frustrating that the only link to code is the theme source and credits?? Is it really that important to give the static page theme that much real estate instead of actual code release for the project? reply brotherdusk 8 hours agoprevsorry, i can't access the repo and the pdf doesn't have an href attr, is that by design? reply 29athrowaway 7 hours agoprevTime for Microsoft Chat 2.0 it seems. reply peteradio 7 hours agoprevThere is a video of two girls. One girl seems to be sticking out her tongue and then blowing a kiss, but the tongue is appearing again mid-kiss. Very arousing stuff I'll say. Keep up the good work microsft or goggle or whoever made it. reply yard2010 41 minutes agoparentWorse - bytedance reply freefruit 8 hours agoprev [–] So is Amazon flooded with hyper niche e-books yet? reply m463 4 hours agoparentI went to buy an air fryer. There were several specific-air-fryer-model recipe books available. But they were all garbage auto-generated stuff. I complained to amazon, and they said since I hadn't purchased the book they couldn't do anything. So I bought the book, complained, and returned it. The chapters devoted to the details of the specific air fryer model were either very general (almost quotes of product description on amazon), or just plain wrong. What I thought I would get would be like the magic lantern books about specific camera models. Instead it was auto-generated pages of nonsense. reply surfingdino 2 hours agorootparentYour real-life example is a good case against using AI-generated legal or medical advice. reply selalipop 8 hours agoparentprev [–] I’m working on a platform for reading hyper niche e-books: https://tryspellbound.com I don’t think this form of generative AI needs to become a source of spam, carefully designed platforms can let people enjoy their niche content without making them feel isolated reply surfingdino 2 hours agorootparent [–] Too late, it has become a source of spam. reply selalipop 6 minutes agorootparent [–] Not really useful to give up the fight in the infancy of something with as much surface area as generative AI. Is being used to create spam is not the same as needs to be spam, and we mostly just need platforms that leverage generative AI natively to bridge the gap. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "StoryDiffusion is a versatile tool utilizing consistent self-attention to create impressive comics, high-quality videos, and maintain character consistency.",
      "It generates consistent cartoon character images, manages multiple character IDs concurrently, and can incorporate user-input images as conditions.",
      "Inspired by Bulma's style, the tool employs a motion predictor to enhance its output quality and uniqueness."
    ],
    "commentSummary": [
      "StoryDiffusion is a tool for generating images and videos with natural movements, although users have noted continuity errors.",
      "Users discuss the use of generative AI for niche content creation and potential spam, expressing worries about the GitHub link's privacy and the quality of auto-generated e-books on Amazon.",
      "The conversation explores the capabilities and constraints of generative AI technology in-depth."
    ],
    "points": 173,
    "commentCount": 42,
    "retryCount": 0,
    "time": 1714522028
  },
  {
    "id": 40214763,
    "title": "Arti: Rust Project Implementing Tor Anonymity Protocols",
    "originLink": "https://tpo.pages.torproject.net/core/arti/",
    "originBody": "Arti is a project to implement the Tor anonymity protocols in the Rust programming language. Currently, Arti provides a working Tor client. There is initial support for connecting to onion services, but more work is needed for equivalent security to the C tor implementation. Until Arti is more mature, we recommend it for experimental use only. The latest Arti release is 1.2.0. Latest README Source repository API documentation Coverage reports How to contribute Frequently asked questions More about Tor",
    "commentLink": "https://news.ycombinator.com/item?id=40214763",
    "commentBody": "Arti: A Tor Implementation in Rust (torproject.net)164 points by acheong08 15 hours agohidepastfavorite22 comments tromp 13 hours agoThe name is an acronym for \"A Rust Tor Implementation\" [1]. [1] https://gitlab.torproject.org/tpo/core/arti/-/blob/850a3c3b6... reply davidee 11 hours agoparentCool! Also an opportunity missed: Arti Rust Tor Implementation reply Forbo 6 hours agorootparentPlease, no more recursive backronyms. Or maybe I just have a sour taste of them because of some of more lamentable choices of other projects.... reply rvalue 1 hour agoparentprevInteresting. My first thought was this was something to connect with the hindi word aarti. https://en.wikipedia.org/wiki/Arti_(Hinduism) reply buildbuildbuild 10 hours agoprevShoutout to the Zcash Foundation for funding a large portion of Arti’s development. reply flooow 17 minutes agoparentBeen a number of examples of cryptobros funding unrelated projects for the positive PR. Is there a word for it yet? 'FOSSwashing'? reply Nuzzerino 4 minutes agorootparentIt’s almost as bad as the number of HN commenters posting negatively about crypto without bothering to check if the criticism is accurate. https://zcash.readthedocs.io/en/latest/rtd_pages/tor.html reply acheong08 5 hours agoprevRe: the flagged comment about Arti not being a real project It is a real project and it works well. I've been building some stuff on top of it in my free time and it's generally stable. There are a few footguns in their API (namely the DataStream not flushing writes automatically) but they're actively working on everything. reply fullspectrumdev 1 hour agoparentI’d be genuinely interested in seeing what people are building on top of this. Especially to see some concrete code examples, as I find those easier to learn from than the current state of the docs. Especially with regard to footguns mentioned! I’ve had a few ideas, mostly porting older projects I built in Python using the Stem library. I feel like Arti is going to be much cleaner for embedding in applications than having to also bundle the correct Tor binary… manage running it as a subprocess… etc reply medo-bear 4 hours agoprevI dont understand why my other comment was flagged. The Tor Project does not reccomend using Arti just yet. If you think that is outdated see the following article published on 04.03.24, which also states the following There are still some rough edges and missing security features, so we don't (yet) recommend Arti onion services for production use, or for any purpose that requires privacy. https://blog.torproject.org/arti_1_2_0_released/ reply timeon 1 hour agoparentSecond paragraph of linked page already states: \"Until Arti is more mature, we recommend it for experimental use only.\" It is one of five sentences on the page - not some hidden message. Not sure what your point is? The flagged comment stated that it is \"not real project\". `Not finished` and `not real` are two different things. reply medo-bear 45 minutes agorootparentPoint is that it is a matter of responsibility to state something that might affect safety of people. I dont understand why this reaction. > The flagged comment stated that it is \"not real project\". `Not finished` and `not real` are two different things. My comment said none of those things. reply newZWhoDis 8 hours agoprevSo given the US fed’s new insane rules about what a money transmitter is, how can anyone US-adjacent feel safe contributing? Like the recent S wallet people the minute your software is used for anything illegal you risk extradition. reply cassonmars 8 hours agoparentTor isn't a money transmitter, but also, they were indicted more for the fact they actively sought out sanctioned individuals in marketing/dev outreach reply ulrikrasmussen 6 hours agoparentprevI'm not up to date - do you have a reference? reply binary132 7 hours agoprev [8 more] [flagged] Ar-Curunir 7 hours agoparent [–] This is not that: it is from the official Tor implementers reply binary132 7 hours agorootparent [–] it literally says that in the README it is not a Real Project, it’s someone trying an experimental implementation of a tor client reply zamalek 6 hours agorootparent> Until Arti is more mature, we recommend it for experimental use only. Helps to read the entire context. This means that it likely hasn't had a security audit yet, and may de-anonymize you due to a bug. It doesn't mean it's abandonware. reply contact9879 6 hours agorootparentprevthe link posted by tromp is to the readme from 3 years ago. you should read the latest readme before making assumptions about the quality of arti today reply fastball 6 hours agorootparentprev [–] Where does it say that in the README? reply designed 6 hours agorootparent [–] They might have been referencing the link posted by tromp (currently top comment) reply Forbo 6 hours agorootparent [–] I don't think holding the current state of the project to a version of the README from three years ago is even remotely anywhere near a good faith comparison. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Arti is a Rust project that implements Tor anonymity protocols, providing a functional Tor client with early support for onion services.",
      "Development is ongoing to enhance security to match the C Tor implementation, making it currently suitable for experimental purposes only.",
      "The most recent release is version 1.2.0, offering various resources like README, source repository, API documentation, contribution guidelines, FAQs, and Tor-related details."
    ],
    "commentSummary": [
      "The article delves into Arti, a Tor implementation coded in Rust, sharing insights on its development, financing, and suggestions for experimental utilization.",
      "A debate unfolds regarding Arti's present condition and potential security vulnerabilities, drawing attention to important considerations for users.",
      "Arti in Rust offers a unique perspective on Tor implementations, attracting interest due to its development aspects and security implications."
    ],
    "points": 164,
    "commentCount": 22,
    "retryCount": 0,
    "time": 1714503262
  }
]
