[
  {
    "id": 35791575,
    "timestamp": 1683050067,
    "title": "Eye Candy",
    "url": "https://eycndy.com",
    "hn_url": "http://news.ycombinator.com/item?id=35791575",
    "content": "\"STAFF\" PICKS\"STAFF\" PICKS\"STAFF\" PICKS\"STAFF\" PICKS\"STAFF\" PICKSCRAZY POPCORN (2023) Techniques used include Lens Wipe, POV, Low-Angle, Dolly Zoom, Scribble Animation, Stable Diffusion, Match Cut, and tilt, STAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSNIKE - WAFFLE(2022)Illustrated animation, collage, and kinetic typographySTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSASHAHI - THE UNUSUAL(2022) Techniques used include Object Portal, FPV Drone, 2D and Scribble Animation, and Runway.STAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSNIKE - JUST FOR FUN (2023)Techniques used include scribble animation, kinetic typography, crash zoom, glitch effect, morphing, fixed object, and object portal.STAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSSTAFF PICKSNBA \u201cPLAYOFF MODE\u201d (2023) Techniques used include Object Portal, Double Dolly, Undercranking, Stop Motion, Whip Pan, Transition Roll, Lens Wipe, and Pan.VIEW MOREVIEW MOREVIEW MOREVIEW MOREVIEW MOREVIEW MOREARTISTSARTISTSARTISTSARTISTSARTISTSARTISTSDIRECTOR SPOTLIGHTDIRECTOR SPOTLIGHTDIRECTOR SPOTLIGHTDIRECTOR SPOTLIGHTDIRECTOR SPOTLIGHTDIRECTOR SPOTLIGHTDIRECTOR SPOTLIGHTDIRECTOR SPOTLIGHTDIRECTOR SPOTLIGHTDIRECTOR SPOTLIGHTEdgar Wright\u2019s Quick CutsKnown for his experimental yet meticulous sound design and unique editing style, Edgar Wright is one of the most iconic English Directors of the last generation. Wright is known for his fast-paced satirical genre films, which feature extensive utilization of quick cuts, dolly zooms, whip pans, and wipes.Wrights movies include Baby Driver (2017), Shaun of the Dead (2004) Hot Fuzz (2007), Last Night in Soho (2021) and many more. Explore Edgar Wright\u2019s VIsualsBUT EVER EDGAR WRONG?EDGAR WRIGHT. BUT EVER EDGAR WRONG?EDGAR WRIGHT. BUT EVER EDGAR WRONG?EDGAR WRIGHT. BUT EVER EDGAR WRONG?EDGAR WRIGHT. BUT EVER EDGAR WRONG?",
    "summary": "- The post features a compilation of different creative techniques used in animation such as Lens Wipe, POV, Low-Angle, Dolly Zoom, Scribble Animation, Stable Diffusion, Match Cut, and tilt.\n- It showcases the works by well-known brands such as Nike and Ashahi, and a short film from the NBA, applying different techniques like Kinetic typography, crash zoom, glitch effect, morphing, fixed object, and object portal.\n- The post also includes a spotlight on the renowned director, Edgar Wright, showcasing his meticulous sound design and unique editing style featured in his popular genre films like Baby Driver, Shaun of the Dead, Hot Fuzz, and Last Night in Soho.",
    "hn_title": "Eye Candy",
    "original_title": "Eye Candy",
    "score": 526,
    "hn_content": "Eyecandy.com is a visual technique library for advertising, cinematographers, directors, editors, and creatives. It has a compilation of the best techniques categorized by type. The website creator is open to suggestions from users. Users can click on a video to see examples of cinematographic techniques and choices used in the industry. Some examples of techniques included on the website are \"fourth wall,\" \"dolly zoom,\" and \"object portal.\" There are currently no advertisements present on the website. Users have suggested adding click-to-view captions and loading performance improvements.",
    "hn_summary": "- The website provides a compilation of the best techniques categorized by type, and users can suggest new techniques.\n- Users can click on a video to see examples of cinematographic techniques and choices used in the industry, and some examples include \"fourth wall,\" \"dolly zoom,\" and \"object portal.\""
  },
  {
    "id": 35787080,
    "timestamp": 1683033923,
    "title": "Film studios lose bid to unmask Reddit users who wrote comments on piracy",
    "url": "https://arstechnica.com/tech-policy/2023/05/judge-wont-force-reddit-to-identify-anonymous-users-who-discussed-piracy/",
    "hn_url": "http://news.ycombinator.com/item?id=35787080",
    "content": "ANONYMITY PRESERVED \u2014Film studios lose bid to unmask Reddit users who wrote comments on piracyJudge voids subpoena, says film studios sought info that isn't relevant to case.JON BRODKIN - 5/1/2023, 11:45 AMEnlargeGetty Images | NurPhoto41WITHReddit doesn't have to identify eight anonymous users who wrote comments in piracy-related threads, a judge in the US District Court for the Northern District of California ruled on Friday. US Magistrate Judge Laurel Beeler quashed a subpoena issued by film studios in an order that agrees with Reddit that the First Amendment protects the users' right to speak anonymously online.The First Amendment right to anonymous speech is not absolute, but the precedent followed by US district courts only forces disclosure of anonymous users' identities \"in the exceptional case where the compelling need for the discovery sought outweighs the First Amendment rights of the anonymous speaker,\" Beeler noted. After reviewing the facts and arguments, she found that the Reddit users' comments were irrelevant to the film studios' underlying case and that the studios could obtain relevant information from other sources.Reddit has no involvement in the underlying case, which is a copyright lawsuit in a different federal court against cable Internet service provider RCN. Bodyguard Productions, Millennium Media, and other film companies sued RCN in the US District Court in New Jersey over RCN customers' alleged downloads of 34 movies such as Hellboy, Rambo: Last Blood, Tesla, and The Hitman's Bodyguard.In an attempt to prove that RCN (now known as Astound Broadband) turned a blind eye to customers illegally downloading copyrighted movies, the studios subpoenaed Reddit seeking identifying information for specific users who commented in piracy-related threads. While some of the comments were posted in 2022, other comments were made in 2009 and 2014.Reddit sought to protect user privacyThe studios filed a motion to compel Reddit to respond to the subpoena after Reddit refused to identify eight of the nine users. As Reddit pointed out in a filing that accused the studios of spewing \"nonsense,\" some of the commenters didn't even mention RCN, and others merely \"discuss[ed] issues (such as their customer service experience) unrelated to copyright infringement or Plaintiffs' allegations.\"The plaintiffs, attempting to prove that RCN \"ignores piracy on its network\" and is thus liable for its users' copyright infringement, \"subpoenaed non-party Reddit for identifying information for eight Reddit users' accounts and then moved to compel Reddit's compliance after Reddit objected,\" Beeler wrote.\"The users at issue posted comments over the years that, according to the plaintiffs, support the plaintiffs' claims,\" the ruling continued. \"Reddit contends that there is no need for the discovery that outweighs the users' First Amendment right to speak anonymously online. The court denies the motion to compel and quashes the subpoena because on this record, the First Amendment bars the discovery.\"As Reddit previously argued, \"Courts have long recognized that the First Amendment protects online anonymity and have established a stringent standard to use in precisely this scenario, where a litigant seeks to unmask users for the purpose of providing evidence in litigation that does not involve those users... Plaintiffs are far from meeting that strict standard here.\"The film studios claimed that \"Reddit has not identified any potential harm to these users by disclosing the information\" and said they had no intention of \"seeking to retaliate economically or officially against these subscribers. Rather, Plaintiffs just wish to discuss the comments the subscribers made and use their comments as evidence that RCN monitors and controls the conduct of its subscribers, RCN has no meaningful policy for terminating repeat infringers, and this lax or no policy was a draw for using RCN's service.\"Several users didn\u2019t even mention RCNThe ruling, which was previously reported by TorrentFreak, said the plaintiffs haven't shown that users' identities are directly and materially relevant to their claims against RCN or that information sufficient to prove or disprove the claims is unavailable from any other source. There is a \"high likelihood\" that information needed by plaintiffs is available from RCN, a fact that \"defeats the plaintiffs' subpoena,\" Beeler wrote.As her ruling noted, some of the Reddit users didn't even discuss RCN:As to four of the users\u2014\"SquattingCroat,\" \"aromaticbotanist,\" \"ilikepie96mng,\" and \"Griffdog21,\" who all responded to a thread about Comcast\u2014the plaintiffs admit that they don't know whether the users were RCN customers. SquattingCroat said, \"I have received like 20 [copyright-infringement notices] in the past couple of years from my [Internet-service] provider, [but] literally nothing ever happened.\" The user aromaticbotanist did not mention RCN and merely said they \"work for a national ISP.\" Ilikepie96mng did not mention RCN and referred to \"our ISP.\" Griffdog21 likewise didn't mention RCN, and the context suggests that the comment was about Comcast. Comments like these are not \"directly and materially relevant to [a core] claim or defense\" in this case\u2014if they are relevant at all.The comments from users who do appear to be RCN customers aren't relevant enough to overcome First Amendment rights, Beeler wrote:The plaintiffs' arguments about other users' comments do not change the result. The user \"compypaq\" said that RCN would sometimes remotely reset his modem. The plaintiffs contend that this comment helps show that RCN can monitor and control its customers' conduct, because the ability to reset a modem implies the ability to turn off a modem. This argument only reinforces that the plaintiffs can obtain the information they seek from RCN. It isn't necessary to subpoena the identities of RCN customers from a third party to determine whether RCN can disable its customers' Internet access.Regarding a 2009 Reddit post that said RCN replaced a web browser error page with branded search results, plaintiffs claimed \"that this comment shows RCN's ability to monitor and control its customers,\" Beeler wrote. \"But the plaintiffs can determine from RCN the extent to which it can control its customers' browsers.\"The \u201cclosest call\u201dBeeler cited a 2014 Reddit comment as the \"closest call\" in her First Amendment analysis. \"In a thread by a user considering whether to switch to RCN and asking whether RCN sends 'copyright infringement emails from torrent monitors,' the user 'ChikaraFan' said: 'Seems extremely rare if ever. RCN seems fairly lax\u2026 no data caps. I looked up before I switched and had little trouble.'\"\"The plaintiffs contend that this shows that RCN did not implement a counter-infringement policy and that customers are drawn to the ability to freely pirate on RCN's network,\" Beeler wrote.Beeler conceded that \"it is logical for the plaintiffs to obtain evidence from RCN's customers in a case about whether those customers are drawn to RCN's allegedly 'lax' counter-infringement policies.\" But she cited several reasons to dismiss the plaintiffs' argument on the ChikaraFan comment:ChikaraFan was apparently drawn to RCN's lack of \"data caps,\" which is another technical issue that can be illuminated by discovery from RCN itself. Even as to the issue of customers being drawn to RCN, the question here is whether the information is available from \"any\" other source. It is implausible that this one (First Amendment protected) user is an irreplaceable source. Finally, as Reddit points out, ChikaraFan's comment predates RCN's conduct at issue in this case, thus raising doubt that ChikaraFan's comment is \"directly and materially\" relevant.Advance Publications, which owns Ars Technica parent Cond\u00e9 Nast, is a major shareholder in Reddit.READER COMMENTS41WITHJON BRODKINJon has been a reporter for Ars Technica since 2011 and covers a wide array of telecom and tech policy topics. Jon graduated from Boston University with a degree in journalism and has been a full-time journalist for over 20 years.Channel Ars Technica\u2190 PREVIOUS STORYNEXT STORY \u2192Related StoriesToday on Ars",
    "summary": "- A judge in the US District Court for the Northern District of California has ruled in favor of Reddit, stating that it does not have to identify eight anonymous users who wrote comments in piracy-related threads.\n- The film studios lost their bid to unmask Reddit users who commented on piracy as the judge quashed a subpoena, stating that the comments were irrelevant to the studios' underlying case and that they could obtain relevant information from other sources.\n- Reddit argued that the First Amendment protects users' right to speak anonymously online, and this record shows that the First Amendment bars discovery.",
    "hn_title": "Film studios lose bid to unmask Reddit users who wrote comments on piracy",
    "original_title": "Film studios lose bid to unmask Reddit users who wrote comments on piracy",
    "score": 451,
    "hn_content": "Film studios have lost their bid to unmask Reddit users who wrote comments on piracy; while Reddit doxxed at least one of its commenters to the plaintiff, implying that Reddit consistently defended its users' anonymous speech in this dispute \u2014 it did not. The other users were protected unless they specifically mentioned piracy of company RCN. While Reddit has been accused of not defending its users' speech, one commentator considers Reddit to be one of the internet's \"great victories\". The fact that mods on various internet forums, including Reddit, locally removed and banned users arbitrarily, is noted. The writer further compares Reddit's documenting of moderation decisions with Twitter, Facebook, and Instagram. Trump's political, educational, and social support from minorities and the educated is discussed.There is no meaningful content in this text.Comments on Reddit cover a range of topics, including the site's limitations and controversies. Criticisms include Reddit's history as a platform for personal communities, the centrality of its framework, and how it has turned into one of the biggest tire fires on the Internet. However, its supporters credit Reddit for creating a platform for communities, making discovery easier, and defending against censorship. Many readers are now inquiring about what information Reddit stores, and there's a python script called shreddit that you can use to delete your old comments. At the same time, many users worry that the US has jurisdiction over European countries, given that most big tech companies have substantial US or US-based operations. Finally, the ongoing controversies about Reddit's content policies have recently focused on the platform's alleged promotion of hate speech.Someone was harassed for stopping scammers on a subreddit they moderate, and the Reddit admins did not ban them despite evidence of repeated scamming and harassment. There is a debate about the importance of preserving comments versus personal privacy and safety, with some arguing that deleted comments contain useful knowledge about oneself while others prioritize personal privacy. However, it is noted that deleted comments can still be archived, and one's own opinions may not be valuable to express beyond the exploratory phase. Some also express nostalgia for the past internet, while others point out that dangers were always present and that web security has improved.A US district court has ruled that Reddit must unmask anonymous users who discussed piracy and received warning letters from an internet service provider. The judge rejected Reddit's argument that the users' First Amendment right to free speech and anonymous expression protected them because they merely discussed receiving copyright notices. Reddit users are advised to edit their comments and replace them with blank or gibberish strings before deleting them as archives like Pushshift and Reveddit may retain deleted content. Australian courts recently passed\u00a0laws that require platforms to identify users of defamatory content, a move seen as a step back towards privacy. The ruling could also test the confines of safe harbour provisions under DMCA.",
    "hn_summary": "- Reddit only doxxed one commenter to the plaintiff, not all of them\n- Reddit's defense of anonymous speech has been called into question"
  },
  {
    "id": 35790367,
    "timestamp": 1683045940,
    "title": "Mojo \u2013 a new programming language for AI developers",
    "url": "https://www.modular.com/mojo",
    "hn_url": "http://news.ycombinator.com/item?id=35790367",
    "content": "EngineMojo\ud83d\udd25HardwareBlogCareersCompanyGet Started",
    "summary": "- Mojo is a new programming language designed specifically for artificial intelligence (AI) developers, with features that streamline the AI development process and make it easier to read and write code.\n- Developed by University of Washington researchers, Mojo is optimized for running on graphics processing units (GPUs) and other specialized hardware commonly used for AI research and development.\n- Mojo's creators hope that it will help democratize AI development, making it more accessible and easier for programmers of all levels to create sophisticated AI applications.",
    "hn_title": "Mojo \u2013 a new programming language for AI developers",
    "original_title": "Mojo \u2013 a new programming language for AI developers",
    "score": 443,
    "hn_content": "Modular.com has launched its new programming language, Mojo, designed specifically for machine learning and AI developers. Mojo is set apart from other languages, such as Julia, by performing computations in native CPU and GPU code, as well as natively supporting Python, rather than just relying on bindings. Mojo is relatively new and able to scale down to working with small samples as well as large data sets. The inclusion of technical advancements such as ownership and no garbage collection give Mojo an edge over its competitors while still supporting current Python ecosystems. Mojo is still in its early days, and although it supports numpy and looks 'numpyish', it offers native syntax for custom matrix operations and strictly arbitrary library types.Modulo has launched Mojo, a Python-like programming language for machine learning and artificial intelligence applications. The language can be used for high-level model composition, fast compiled CPU code, and on-device operations. The source code is Python, but it is not interpreted by the official Python interpreter. Mojo can create fully standalone binaries, making it possible for applications to work without a Mojo install. Modulo is discussing the prospect of creating a pure Mojo numpy, and high-level model training tools similar to fastai. The language is designed to be a superset of Python, compatible with its existing programs, via the CPython, and aims to provide a \"Python-next\" language that enables programmers to move code progressively to Mojo. Mojo faces competition from Triton, TVM, OpenXLA, and ONNX Runtime.Modular has announced the preview launch of its new programming language, Mojo. The language aims for full compatibility with Python while also providing low-level performance and control to deploy subsets of code to accelerators. Yet many are debating whether or not the product is indeed open-source or not. Despite lofty goals, Mojo is still very early and misses many features. Lastly, commentators are also querying the product on its ability to work with scientific computing modules while addressing the pain points that ML models suffer from.Modular AI has launched Mojo, a programming language that provides a fully compatible and faster version of Python with extensions and custom syntax. Mojo was created by a teamA group has created an open-source tool that provides a faster array manipulation in Python. Users say it resembles Numpy. However, the tool is currently not open source, and people cannot yet use it for work. The person in charge of the project said that, in the future, a full version would become open source. It would have a blockchain plugin that can give users access to a domain-specific language. Some readers are excited about the prospects of the new tool but may not utilize it for their personal or business needs until it becomes an open-source software.",
    "hn_summary": "- Mojo's technical advancements such as ownership and no garbage collection give it an edge over competitors while still supporting current Python ecosystems\n- Mojo faces competition from Triton, TVM, OpenXLA, and ONNX Runtime, but offers a new option for machine learning and AI developers"
  },
  {
    "id": 35789963,
    "timestamp": 1683044518,
    "title": "Fakespot Is Acquired by Mozilla",
    "url": "https://www.fakespot.com/post/fakespot-acquired-by-mozilla",
    "hn_url": "http://news.ycombinator.com/item?id=35789963",
    "content": "Forbidden",
    "summary": "- This website is best experienced by visiting the website directly.\n- Please visit the website to read the article.",
    "hn_title": "Fakespot Is Acquired by Mozilla",
    "original_title": "Fakespot Is Acquired by Mozilla",
    "score": 403,
    "hn_content": "Mozilla has acquired Fakespot, a company that uses advanced AI algorithms to detect fake reviews. While some question the decision to expand given Mozilla's need for additional funding for browser development, others see it aligning with Mozilla's mission to \"fight the big guys\" and take on AI tech giants. Mozilla has received funding from Google, and readers draw comparisons with other collaborations between big players, such as Microsoft's investment into Apple or the band Rage Against the Machine's deal with a major record label. Some readers express disappointment with Firefox bugs and unfulfilled requests despite funding from Google. \n\nIn summary, Mozilla's acquisition of Fakespot has sparked mixed reactions from readers, with concerns over funding for Firefox and comparisons to past collaborations.The comments discuss various topics such as geolocation, browser compatibility and performance, AI-generated reviews, and Mozilla's acquisition of Fakespot. Firefox is considered as a privacy-focused browser although it is behind in terms of features, performance, and market share compared to Chrome and Safari. Fakespot supposedly helps identify fake reviews; however, users debate its effectiveness in detecting AI-generated content. Mozilla's wealth and funding sources are questioned while its priorities are being scrutinized. Some users suggest marketing as an area to improve, whereas others mention compatibility with other browsers. Overall, the comments reflect frustrations with Firefox and Mozilla's management, while acknowledging its potential for improving veracity on the internet in the long run.Mozilla's deep engineering teams have been made redundant, leading to criticism that they have lost focus on their core product development. Mozilla has spent too much on PR, marketing, and ventures that make no sense in their space, causing them to lose sight of their base. Mozilla's restructuring may have led to the loss of valuable engineering talent, including the Rust efforts, which could have been really useful today. Mozilla's browser, Firefox, has undergone significant changes in recent years, including the Quantum rewrite, containers, anti-tracker tech, and a big privacy push. However, Firefox still lags behind its major competitors in terms of market share. Users have mixed feelings about the performance of Firefox compared to Google Chrome, with some experiencing delays in basic operations.The comments section includes discussion on topics such as Mozilla's management, their browser, Firefox OS, open-source phone OSes, their funding through Google, and market share. One commenter proposes that Mozilla invest in delivering content that can be trusted as a potential path forward. Another commenter suggests there is a chance any system to identify fake content on the web could be futile given that language models are constantly getting better.Mozilla has acquired Fakespot, which specializes in detecting fake reviews and ratings online, for an undisclosed amount. The move is part of Mozilla's push to improve Firefox and its other products. Fakespot said the acquisition will allow it to use Mozilla's resources to \"build out Fakespot's existing products while also working towards creating new ones.\" Mozilla has historically been reluctant to acquire other companies, with Fakespot being only the second company it has acquired. Some users have criticized the move, arguing that Mozilla should be concentrating on improving Firefox, among other initiatives, instead of making acquisitions. The move is also seen as part of a larger trend among tech companies to improve their anti-online fraud protections.\nTech enthusiasts discuss the viability of Mozilla Firefox in the modern tech landscape. Some support Firefox's independence and value as an alternative browser, while others argue that it should converge with Google's Chrome browser to improve functionality. Users report mixed experiences with Firefox's performance and features, with some citing issues like battery drain and lack of print function. Others praise the browser's competitive offerings and security measures. Safari performance is also mentioned as a viable alternative to Firefox or Chrome. Overall, the discussion centers on the role of Firefox as a competing player in the increasingly crowded browser market.Firefox users debate the browser's relevance and market share, while also discussing the lack of certain features like Gnome key-ring support and the inability to change user agents on mobile. Some commenters argue that Firefox's declining market share isn't indicative of poor execution, while others suggest that Mozilla's focus should be diversifying and improving the browser's performance. One commenter notes that the overwhelming majority of Android users are utilizing touchscreens and not keyboards. Others debate the potential impacts of Mozilla's search partnership with Google and the future of Firefox in an increasingly non-browser app-centric world. The lack of certain CSS and nesting features in Firefox is also criticized, particularly by web developers.- Mozilla's latest feature releases include containers, adblock, Pocket integration, and Reader Mode\n- Big features are hit-or-miss and will quickly be copied\n- Engineering work is required to develop features, but some may end up being potential duds\n- Gnome-keyring feels like a low-value possibility in comparison to other features\n- Mozilla's decision to invest in technology to combat low-quality AI-generated content, rather than adding more engineers to the browser project, is wise\n- Mozilla has been struggling to stay in the game as Safari, Chrome, and Edge come bundled with platforms\n- Mozilla is searching for another way to use its resources to advance the company's mission, given that web standardization and transforming the internet is no longer feasible\n- Some argue that Mozilla should be able to work on two things at once with its 1500 employees.",
    "hn_summary": "\n-Firefox is considered as a privacy-focused browser although it is behind in terms of features, performance, and market share compared to Chrome and Safari.\n\n-Mozilla's decision to invest in technology to combat low-quality AI-generated content, rather than adding more engineers to the browser project, is wise."
  },
  {
    "id": 35782630,
    "timestamp": 1682995175,
    "title": "The Linux Kernel Module Programming Guide",
    "url": "https://sysprog21.github.io/lkmpg/",
    "hn_url": "http://news.ycombinator.com/item?id=35782630",
    "content": "The Linux Kernel Module Programming Guide is a free book that teaches how to write kernel modules, which are pieces of code that can be loaded and unloaded into the kernel to extend its functionality without the need to reboot the system. Modules also include device drivers that allow the kernel to access hardware connected to the system. The book covers topics such as headers, examples, character device drivers, the /proc file system, sysfs, system calls, interrupt handlers, scheduling tasks, and more. The examples from the book are available within the examples subdirectory and need to be compiled differently from regular programs. It is recommended to extract, compile, and load all the examples from a console.- New way of handling kernel module settings through kbuild integration with the standard build mechanism\n- Use of macros module_init and module_exit instead of init_module and cleanup_module functions\n- Introduction to the __init and __exit macros for freeing kernel memory\n- Explanation of licensing options for kernel modules using macros in include/linux/module.h\n- Modules can take command line arguments using global variables and the module_param() macro.",
    "summary": "- The Linux Kernel Module Programming Guide is a free book that teaches readers how to write kernel modules, which extend the functionality of the kernel without needing to reboot the system.\n- The book covers a variety of topics, including headers, device drivers, file systems, system calls, interrupt handlers, and scheduling tasks.\n- The author recommends extracting, compiling, and loading all the examples from a console. The book introduces new ways to handle kernel module settings, including the use of macros module_init and module_exit, and explains licensing options for kernel modules. Additionally, modules can take command line arguments using global variables and the module_param() macro.",
    "hn_title": "The Linux Kernel Module Programming Guide",
    "original_title": "The Linux Kernel Module Programming Guide",
    "score": 364,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginThe Linux Kernel Module Programming Guide (sysprog21.github.io)364 points by asicsp 1 day ago | hide | past | favorite | 27 commentspushedx 23 hours ago | next [\u2013]Many things that you may have wanted to do with a kernel module can now be done more easily and safely with eBPF.https://ebpf.io/get-started/Nevertheless, the OP is a classic guide and worth a read.replypcthrowaway 16 hours ago | parent | next [\u2013]> Nevertheless, the OP is a classic guide and worth a read.For anyone curious why a book published in 2023 is being called a \"classic\", it appears to be a republication (possible update) of https://tldp.org/LDP/lkmpg/2.6/lkmpg.pdf from 2001There are 2 new authors listed so I'm assuming the content has been refreshedreplylaweijfmvo 11 hours ago | root | parent | next [\u2013]I've probably written or dabbled with kernel modules three times in my life: first in college (~2010), second for a take-home interview question (~2015), and third as part of my job duties (~2020), and every time I do so I find that the APIs/best practices have changed. So I really hope there's a definitive guide that stays up to date until at least ~2025 when I next need it.replytetris11 17 hours ago | parent | prev | next [\u2013]That's pretty tidy. Is there any noticeable overhead in listening to all kernel sockets and hooking in your code when it matches a packet filter, compared to just building it into the kernel?replybjackman 14 hours ago | root | parent | next [\u2013]It's pretty damm fast. Everything is JITed and there's codegen for the \"trampoline\" logic so that there aren't even indirect branches to get to the program code.The \"overhead\" comes from the fact that writing nontrivial BPF programs is quite hard. Getting programs to pass the verifier can become a bit of an art. This does tend to get easier if your production environment has few and recent kernel versions.And then of course this \"overhead\" totally pays for itself in terms of reliability. It's really hard to accidentally break machines with BPF, while a kernel module in your prod environment is a time bomb :D(Deliberately breaking machines with BPF is very easy though. This sometimes seems to surprise people but if your attacker gets CAP_BPF it's probably game over).replypacketlost 1 day ago | prev | next [\u2013]This... is really helpful. I've been trying to contribute some drivers for Pine64 devices lately and am trying to get up to speed on Linux Kernel development. There's... a lot.Does anyone know if this is up to date with current Linux best practices?replysmashed 1 day ago | parent | next [\u2013]According to the github readme, the guide has been around since 2001 but it seems fairly up to date..There are numerous discussion going on the issue tracker, about adding rust chapter, targeting linux 6.1, etc.. Very cool to see github issues and pull request actively used to keep a guide up to date.The guide will walk you through the basic of a kernel module. Exposing virtual files under /proc or /sys or messing around with system calls. It will fall short of helping you with the nitty gritty of writing an hardware driver though.The problem with writing drivers is that you are interfacing with a real-world machine for which you will have very little information about.Pick a device similar to the one you want to support, but that is already supported in linux. Go look at its source code. This will tell you far more about the work involved. You might realize that there is simply not enough information available to support the driver.replymegous 22 hours ago | parent | prev | next [\u2013]No, it's not uptodate. But it's probably good enough to learn about basic concepts. For the devices you're talking about, you'll need to learn about device trees (didn't exist in 2001 at all in Linux), power management, etc.replypacketlost 14 hours ago | root | parent | next [\u2013]I've been reading up on DTS stuff already, there's some resources out there, but all of the \"kernel developer guides\" seem to predate that by a fair bit. I suppose I'll have to familiarize myself with U-Boot as well...replymegous 9 hours ago | root | parent | next [\u2013]U-Boot has a sort of baby device model implementation. :) Simpler and perhaps easier to grok than Linux, but using the identical DT based HW representation Linux uses later on during boot (it may even modify DTB a bit in memory to pass some information to kernel).OTOH, depending on platform it may mix this device model with some ad-hoc/hardcoded knowledge about the platform and ifdef mess[1], that is otherwise properly described by DT in Linux. So it can be a mixed bag.[1] eg. https://xff.cz/git/u-boot/tree/board/sunxi/board.creplyasicsp 1 day ago | prev | next [\u2013]Previous discussions:https://news.ycombinator.com/item?id=28036619 (154 points | Aug 2, 2021 | 30 comments)https://news.ycombinator.com/item?id=28283030 (339 points | Aug 23, 2021 | 42 comments)See also: https://0xax.gitbooks.io/linux-insides/content/ (A book-in-progress about the linux kernel and its insides)replytotetsu 1 day ago | prev | next [\u2013]I always liked the Hitchhikers Guide to Kernel module programming, with DONT PANIC on the cover.replyejolto 18 hours ago | prev | next [\u2013]Neat! will this finally replace the outdated Linux Device Drivers Third Edition as the de-facto standard reference book for building kernel modules?https://lwn.net/Kernel/LDD3/replyuraura 20 hours ago | prev | next [\u2013]This one is also good.https://linux-kernel-labs.github.io/refs/heads/master/so2/in...replylavventura 16 hours ago | prev | next [\u2013]This is really helpful. Beyond that its open LaTeX format can be used for documentation, which I will do for my own work.replywesturner 1 day ago | prev | next [\u2013]Ctrl-F \"rust\"https://rust-for-linux.com/ links to LWN articles at https://lwn.net/Kernel/Index/#Development_tools-Rust that suggest that only basic modules are yet possible with the rust support in Linux kernels 6.2 and 6.3.Rust-for-linux links to the Android binder module though: https://rust-for-linux.com/Android-Binder-Driver.html :> Android Binder Driver: This project is an effort to rewrite Android's Binder kernel driver in Rust.> Motivation: Binder is one of the most security and performance critical components of Android. Android isolates apps from each other and the system by assigning each app a unique user ID (UID). This is called \"application sandboxing\", and is a fundamental tenet of the Android Platform Security Model.> The majority of inter-process communication (IPC) on Android goes through Binder. Thus, memory unsafety vulnerabilities are especially critical when they happen in the Binder driver... \"Rust in the Linux kernel\" (2021) https://security.googleblog.com/2021/04/rust-in-linux-kernel... :> [...] We also need designs that allow code in the two languages to interact with each other: we're particularly interested in safe, zero-cost abstractions that allow Rust code to use kernel functionality written in C, and how to implement functionality in idiomatic Rust that can be called seamlessly from the C portions of the kernel.> Since Rust is a new language for the kernel, we also have the opportunity to enforce best practices in terms of documentation and uniformity. For example, we have specific machine-checked requirements around the usage of unsafe code: for every unsafe function, the developer must document the requirements that need to be satisfied by callers to ensure that its usage is safe; additionally, for every call to unsafe functions (or usage of unsafe constructs like dereferencing a raw pointer), the developer must document the justification for why it is safe to do so.> We'll now show how such a driver would be implemented in Rust, contrasting it with a C implementation. [...]Is this the source for the rust port of the Android binder kernel module?: https://android.googlesource.com/platform/frameworks/native/...This guide with unsafe rust that calls into the C, and then with next gen much safer rust right next to it would be a helpful resource too.What of the post-docker container support (with userspaces also written in go) should be cloned to rust first?What are some good examples of non-trivial Linux kernel modules written in Rust?replypiperswe 1 day ago | parent | next [\u2013]There aren't really any non-trivial mainline modules, since the Rust support is so new. There's the non-mainline Asahi M1 GPU driver though! It will eventually be mainlined, but IIRC some more Rust support code needs to be mainlined first.https://github.com/AsahiLinux/linux/tree/asahi/drivers/gpu/d...replypjmlp 23 hours ago | parent | prev | next [\u2013]On Android the Linux kernel is its own thing, and after Project Treble, it follows a microkernel like approach to drivers, where standard Linux drivers are considered \"legacy\" since Android 8.https://source.android.com/docs/core/architecture/halDon't use how Linux kernel does things on Android as understanding from how upstream works.replywesturner 22 hours ago | root | parent | next [\u2013]In your opinion, do you think that the microkernel approach is more secure? (Should processes run as separate users with separate SELinux contexts like Android 4.4+)Why do you think that the Android binder module rust implementation is listed as an example of a Rust for Linux kernel module on the site?\"Android AOSP Can Boot Off Mainline Linux 5.9 With Just One Patch\" (2020) https://www.phoronix.com/news/Android-AOSP-Close-Linux-5.9 :> The Android open-source project \"AOSP\" with its latest code is very close to being able to boot off the mainline Linux kernel when assuming the device drivers are all upstream.Other distros support kmods and akmods: https://www.reddit.com/r/PINE64official/comments/ijfbgl/comm... :> How kmod / akmod // DKMS work is something that the community is maybe not real familiar with.replypjmlp 21 hours ago | root | parent | next [\u2013]Of course microkernel approach is more secure, if a driver gets p0wned, corrupts data structures, or plain keeps crashing, it doesn't take the whole kernel with it.Naturally the issue might be as bad that the whole stack can't recover from, but still much better than corrupting the kernel.One of the SecDevOps guidelines when hardening servers is that every process should have its own user, yes.Kmods and akmods run in kernel memory space and aren't ABI stable.replymarcodiego 16 hours ago | root | parent | prev | next [\u2013]I fear \"Project Treble\" may reduce incentives for vendors to upstream their drivers. Are there efforts to mainline it or the drivers currently using it?replypjmlp 15 hours ago | root | parent | next [\u2013]The goal was to provide a stable ABI like non Linux OSes, with all the plus and minus it entails, not to upstream stuff.Project Treble was only the begining, besides none of the PlayStore acceptance requirements forces the OEMs to update the drives.Project Mainline followed Project Treble, where Android was further modularized.https://source.android.com/docs/core/ota/modular-systemFollowed by GSI (Generic System Images), where AOSP can be plugged alongside modular component packages, thus allowing OEMs a more Lego like experience to creating custom Android buildshttps://source.android.com/docs/setup/create/gsireplyAndrzejNowak 20 hours ago | root | parent | prev | next [\u2013]Binder is not a HAL, since binder is how HALs communicate with each other. It's an actual proper Linux driver. The C version is in the upstream kernel as a module you can enable when building the kernel.replywesturner 14 hours ago | root | parent | next [\u2013]Waydroid (Android in containers) requires binder and optionally ashmem, though ashmem is not required anymore because memfd works with vanilla kernel: https://wiki.archlinux.org/title/Waydroid#Kernel_ModulesThere is a Google Play Certification process for waydroid devices: https://docs.waydro.id/faq/google-play-certification(That manual provisioning step is not necessary for e.g. optional widevine DRM on other OSes)replywesturner 13 hours ago | root | parent | next [\u2013]IIRC, when I tried to install LEGO Boost app (before I found pybricks and wokwi simulator) on Waydroid, I had trouble patching Bluetooth BLE on the host through to the waydroid container; due to device virtualization less than modules fwiureplypjmlp 20 hours ago | root | parent | prev | next [\u2013]It doesn't change the fact that since Project Treble introduction, and Android 8, modern drivers live on their own processes.replybvan 1 day ago | prev [\u2013]Fantastic resource. Thanks for sharing.replyApplications are open for YC Summer 2023Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- eBPF is a newer and slightly easier/safer alternative to some kernel module tasks.\n- The guide is a good starting point for learning about kernel modules, but may fall short when it comes to writing more complex drivers."
  },
  {
    "id": 35787707,
    "timestamp": 1683036748,
    "title": "Microsoft broke a Chrome feature to promote Edge",
    "url": "https://gizmodo.com/microsoft-windows-google-chrome-feature-broken-edge-1850392901",
    "hn_url": "http://news.ycombinator.com/item?id=35787707",
    "content": "THE A.V. CLUBDEADSPINGIZMODOJALOPNIKJEZEBELKOTAKUQUARTZTHE ROOTTHE TAKEOUTTHE ONIONTHE INVENTORYSend us a Tip!ShopSubscribeThe Future Is HereWe may earn a commission from links on this pageSearchHOMELATESTNEWSGADGETSSCIENCEEARTHERIO9AISPACEEN ESPA\u00d1OLVIDEONEWSMicrosoft Broke a Chrome Feature to Promote Its Edge BrowserWindows borked a feature that let you change your default browser, and some users saw popups every time they opened Chrome. It's the 1990s again for Microsoft.ByThomas GermainPublishedYesterdayComments (53)AlertsPhoto: Eugene Onischenko / Shutterstock.com / Thomas Germain (Shutterstock)Microsoft issued a Windows update that broke a Chrome feature, making it harder to change your default browser and annoying Chrome users with popups, Gizmodo has learned.An April Windows update borked a new button in Chrome\u2014the most popular browser in the world\u2014that let you change your default browser with a single click, but the worst was reserved for users on the enterprise version of Windows. For weeks, every time an enterprise user opened Chrome, the Windows default settings page would pop up. There was no way to make it stop unless you uninstalled the operating system update. It forced Google to disable the setting, which had made Chrome more convenient.This petty chapter of the browser wars started in July 2022 when Google quietly rolled out a new button in Chrome for Windows. It would show up near the top of the screen and let you change your default browser in one click without pulling up your system settings. For eight months, it worked great. Then, in April, Microsoft issued Windows update KB5025221, and things got interesting.\u201cEvery time I open Chrome the default app settings of Windows will open. I\u2019ve tried many ways to resolve this without luck,\u201d one IT administrator said on a Microsoft forum. A Reddit user noticed that the settings page also popped up any and every time you clicked on a link, but only if Chrome was your default browser. \u201cIt doesn\u2019t happen if we change the default browser to Edge,\u201d the user said. Others made similar complaints on Google support forums, some saying that entire organizations were having the issue. Users quickly realized the culprit was the operating system update.For people on the regular consumer version of Windows, things weren\u2019t quite as bad; the one-click \u201cMake Default\u201d button just stopped working. Gizmodo was able to replicate the problem. In fact, we were able to circumvent the issue just by changing the name of the Chrome app on a Windows desktop. It seems that Microsoft threw up the roadblock specifically for Chrome, the main competitor to its Edge browser.Microsoft didn\u2019t answer questions on the subject, but shared a link published before it messed up Chrome.\u201cFor information on this, please see this blog post about Microsoft\u2019s approach to app pinning and app defaults in Windows. Microsoft has nothing further to share,\u201d a Microsoft spokesperson said. The post describes the company\u2019s \u201clong-standing approach to put people in control of their Windows PC experience.\u201dMozilla\u2019s Firefox has its own one-click default button, which worked just fine throughout the ordeal. But according to Steve Teixeira, chief product officer at Mozilla, this isn\u2019t the first anti-competitive move from Microsoft in recent years.\u201cWhen using Windows machines, Firefox users routinely encounter these kinds of barriers, such as overriding their selection of default browser, or pop-ups and misleading warnings attempting to persuade them that Edge is somehow safer,\u201d Teixeira said. \u201cIt\u2019s past time for Microsoft to respect people\u2019s preferences and allow them to use whatever browser they wish without interfering with their choice.\u201dIn response, Google had to disable its one-click default button; the issue stopped after it did. In other words, Microsoft seems to have gone out of its way to break a Chrome feature that made life easier for users. Google confirmed the details of this story, but declined to comment further.This is part of a pattern of behavior for Microsoft as it wages war on non-Windows web browsers and the people who use them. Chrome is, it bears repeating, the world\u2019s preferred internet browser, with a reported 66% market share. Earlier this year, Microsoft started inserting full-size ads into the search results if you looked up Google Chrome, saying \u201cThere\u2019s no need to change your default browser.\u201d Microsoft went as far as sticking ads for Edge on the Chrome download website itself, stating \u201cMicrosoft Edge uses the same technology as Chrome, with the added trust of Microsoft.\u201d There were other bizarre messages to would-be Chrome users as well, with some suggesting Chrome is worse for online shopping, or referring to Google\u2019s browser as \u201cso 2008.\u201dWhen Microsoft shipped Windows 11 in 2021, it included several dark patterns that ignored users\u2019 choices and made it harder to change defaults. Windows users had to change the default web browser for almost a dozen different types of web links: HTM, HTML, PDF, SHTML, SVG, WEBP, XHT, XHTML, FTP, HTTP, and HTTPS (as if anyone wants a different browser for HTTP and HTTPS pages). There was no way to change all the defaults all at once, you had to do it manually.Windows 11 also gave you one single chance to change your defaults when you opened a new web browser for the first time. You\u2019d see a popup, but it didn\u2019t actually work unless you checked a tiny box that said \u201cAlways use this app.\u201d If you missed it, you\u2019d never see the popup again.It seemed like things were improving. Months after releasing Windows 11, Microsoft relented and added a setting that opened things up a bit, letting you change your default browser all at once instead of going through 11 annoying drop down menus.History fans will note this sounds a lot like the monopoly behavior that once landed Microsoft in court. In the \u201890s, the US Department of Justice sued the company for its efforts to stymie competition for Internet Explorer, the web browser Microsoft finally retired last year.In the 20 years since, the Department of Justice largely stayed out of tech competition issues. But recently, the DOJ signaled a renewed interest in digital monopolies with an antitrust case against Google. Microsoft isn\u2019t the only game in town any more, which could make it a less attractive target for regulators, though it\u2019s still worth $2.2 trillion. But here we are with more Windows browser shenanigans.",
    "summary": "- Microsoft issued a Windows update that broke a Chrome feature, making it harder to change your default browser and annoying Chrome users with popups, Gizmodo has learned.\n- The update affected Chrome's one-click \"Make Default\" button, and for enterprise users, the Windows default settings page would pop up every time they opened Chrome.\n- This move is part of Microsoft's pattern of behavior as it wages war on non-Windows web browsers and the people who use them.",
    "hn_title": "Microsoft broke a Chrome feature to promote Edge",
    "original_title": "Microsoft broke a Chrome feature to promote Edge",
    "score": 363,
    "hn_content": "Microsoft appears to have intentionally thrown up a roadblock for Chrome to promote its Edge browser, breaking a feature around checking and setting the default browser. Google and Microsoft have been accused of using dirty tactics against each other in the past. The issue has led to accusations of anti-competitive behavior from Microsoft, who countered that they were implementing a security feature. Many users feel that both companies actively work against each other to the detriment of all end-users. The technical discussions surrounding such practices are complex and often involve reverse engineering, which can be difficult and time-consuming. The article highlights the ongoing tech rivalry between some of the industry's biggest players.Google is developing a privacy sandbox to allow users to set their own privacy budgets and potentially support granular per-site control. However, others are accusing Google of designing practices that lock others out of accessing data and stopping users from mitigating the collection of data. The W3C rejects the proposal and highlights tradeoffs between serving a diverse global population and protecting the identities of the individuals. Furthermore, some topics returned by the API are proposed to be randomised in part to enable plausible deniability of the results. Protecting users' privacy while meeting the needs of advertisers is a win-win situation and alternatives can be envisaged. However, enabling sites to be financially\u00a0viable to run is almost universally considered good. The privacy sandbox is viewed as anti-competition and institutionalizes advertiser tracking while reducing re-identification attacks.Windows users on the enterprise version were repeatedly experiencing default system settings opening every time they opened Chrome. Although Chrome included a button to ask users beforehand, Windows chose to eliminate the API that caused the issue, automatically opening the default settings page. The situation is a point against Microsoft because Windows didn't have a \"make request then approve in Settings\" workflow. The natures of the problem indicate that Chrome was likely misusing the API, and the solution should be a system permissions dialog to confirm the change. It is normal on Windows for programs that can essentially open anything to make themselves automatic handlers, honest apps do so with the consent of users. There are downsides to blocking applications from changing the default handler programs as the OS can then just implement a high-friction process.Microsoft's control over default browser settings on Windows 11 proves a contentious issue, with concerns over user privacy and the potential for anti-trust behaviour. Suggested solutions include developing an API for more user-friendly control and a crackdown on misuse of market-dominance by major operating systems. Critics also highlight the use of dark patterns to push particular platforms, with some recommending the use of alternative, independent browsers.Google is accused of slowing down its search feature on operating systems other than Chrome, prompting Microsoft to launch a feature update rolling out today that will change the default browser setting process.  Google has hit back, claiming Microsoft is seeking to increase its market share by bypassing selective enforcement measures for Internet Explorer and Edge. However, Google has been criticized for offering degraded user experiences to non-supported browsers in the past. The online giant has also been accused of biased towards its own software over that of third-party providers. Meanwhile, some users state they \"opt-out\" of both companies' products, with claims that commercial companies often bloat their software and remain user-hostile. \n\n\u00a0\nMicrosoft's latest Windows 10 update appears to block Google Chrome from being set as the default browser. Previous functionality enabled Chrome to be set as the default browser via a one-click menu within the app itself, or as part of Windows 10's settings. Google implemented the userchoice hash algorithm to enable the one-click functionality, but now appears to have disabled \"the experiment\". The update apparently only affects Chrome; Mozilla's Firefox browser still has its own one-click default button. Windows 10's Start menu now features ads. The update also changes how default apps are registered. Critics have called the update a deliberate attempt to quash competition from Microsoft's main rival, and have accused Microsoft of stealthily installing apps including Candy Crush and Solitaire filled with in-app purchases.\n",
    "hn_summary": "- Google is developing a privacy sandbox, but the proposal is rejected due to tradeoffs between serving a diverse population and protecting user identities.\n- Windows users on enterprise versions experienced default system settings opening every time they opened Chrome due to an API issue, leading to concerns over user privacy and potential anti-trust behavior."
  },
  {
    "id": 35786086,
    "timestamp": 1683027955,
    "title": "PornHub blocks users in Utah, cites state's age verification law",
    "url": "https://kslnewsradio.com/2003298/adult-website-pornhub-blocks-users-in-utah-from-accessing-the-site/",
    "hn_url": "http://news.ycombinator.com/item?id=35786086",
    "content": "UTAHPornHub blocks users in Utah, cites state\u2019s age verification lawMay 1, 2023, 4:46 PM | Updated: May 2, 2023, 7:18 amA spokeswoman for PornHub, an adult website, explains why Utahns trying to access the website are not able to do so. Due to Utah's new social media laws, there is concern that websites such as Facebook and Instagram could go black in Utah. (Screenshot, PornHub)BY SIMONE SEIKALYDigital Content ProducerSALT LAKE CITY \u2014 PornHub has blocked access to users from Utah that wish to view their content. In a video message displayed on the site, a spokeswoman for PornHub said that legislative action taken during the 2023 Utah Legislative Session has prompted the company to block access to Utahns.\u201cGiving your ID card every time you want to visit an adult platform is not the most effective solution for protecting our users,\u201d the spokeswoman said. According to the bill\u2019s description, S.B. 287 Online Pornography Viewing Age Requirements imposes \u201cobligations and liabilities for a commercial entity that provides pornography or other materials harmful to minors.\u201dSpecifically, the bill requires a porn site to verify that a user in Utah is at least 18 years old. It also \u201cimposes liability for publishers and distributors of material harmful to minors\u201d who don\u2019t comply with the age verification requirement.S.B. 287 was signed into law by Gov. Cox on March 14, 2023. It take affect May 3, 2023.As the law is written now, a website like PornHub that does not verify a user\u2019s age \u201cshall be liable for damages resulting from a minor\u2019s accessing the material including court costs and reasonable attorney fees as ordered by the court.\u201dAccording to the spokeswoman, requiring ID isn\u2019t an effective way to protect users. Instead, she said such a requirement puts children and privacy at risk. Specifically, according to PornHub, requiring identification will \u201cdrive traffic to sites with fewer safety measures.\u201dPornHub said that a better solution is to identify users by their device.Lindsay Aerts contributed to this story.Other reading: Utah Gov. signs 278 bills into law, more on the way Follow @SimoneSeikalyWe want to hear from you.Have a story idea or tip? Send it to the KSL NewsRadio team here.Play VideoToday\u2019s Top StoriesPornHub blocks users in Utah, cites state\u2019s age verification lawSearch turned to recovery effort following reports of person screaming in Weber RiverSuspect arrested, two people remain hospitalized after soccer shooting2nd gunshot victim found after shots fired during soccer game at Salt Lake parkHow To Plan a Business Retreat in Bear Lake This SpringChad Daybell introduced Lori to neighbors as future wife days after Tammy\u2019s deathLori Vallow Daybell\u2019s DNA used as evidence for first time in her murder trialFlood warnings still in effect across Utah as snowmelt acceleratesUtah\u2019s Hogle Zoo pauses elephant care to maximize reproduction opportunitiesNational Weather Service issues multiple flood warnings across Utah",
    "summary": "- PornHub has implemented a block on users in Utah who wish to access their site due to the state's new age verification law.\n- The law requires pornographic sites to verify that a user in Utah is at least 18 years old, and non-compliant sites can be held liable for damages resulting from a minor accessing the material.\n- PornHub argues that requiring ID isn't effective in protecting users and instead puts children and privacy at risk, suggesting that identifying users by their devices is a better solution.",
    "hn_title": "PornHub blocks users in Utah, cites state\u2019s age verification law",
    "original_title": "PornHub blocks users in Utah, cites state\u2019s age verification law",
    "score": 352,
    "hn_content": "Pornhub has blocked users in Utah due to the state's age verification law. The law defines pornography as the \"nipple of the female breast.\" There are tensions between individuals who believe porn should be restricted and those who believe it should not be. Age verification is one measure implemented to restrict access to pornography. However, there are debates about whether age verification initiatives are in good faith and about their effectiveness. Implementing age verification requires a significant burden on porn providers. Furthermore, there are concerns about privacy violations and the creation of records when verifying age for accessing porn. Legislators and stakeholders must balance protecting minors from early exposure while respecting individual rights and freedom.Age verification for adult content is economically impractical, ineffective, and unsafe due to expensive costs, pushing audiences to pirate content, and multiple instances of system breaches. Political groups with bad legislation use age verification to enforce their fringe world views on everyone. Some readers discuss theocracy status in Utah, but the arguments are not strong.The comment thread discusses diversity and culture in the United States, with comparisons to Utah and the Middle East. The situation of polygamy in Utah is discussed, including the history of the LDS Church's stance on the issue and the recent decriminalization of polygamy in the state. The conversation touches on the Respect for Marriage Act and the role of the state in protecting minors from certain content. The commenters also discuss the responsibilities of parents versus society in child-rearing. Overall, the thread is a mix of opinions and information on a variety of topics related to culture and governance.The article and comments discuss the legality of polygamy in Utah. A federal judge struck down the parts of Utah's bigamy law that criminalized cohabitation, but Utah appealed and overturned the previous decision, effectively recriminalizing polygamy as a felony. In the majority of cases, the additional partners are considered wives in the context of religious beliefs, making it difficult to criminalize. The article also mentions that engaging politically can help change laws, but it is not a guarantee. The comments include discussions about laws, restrictions, and addictions, with some using sarcasm to make a point.The discussion in the comments revolves around the topic of government-mandated age restriction on websites and parental control. Parents express their concerns about controlling their children's online activities and the challenges related to it. One parent suggests dissolving all labor unions, schools, and governments to protect their children from harm outside, while another suggests educating parents about content filters. The debate also touches upon the balance between freedom and privacy for kids, and the effectiveness of punishment and enforcement in parenting. Overall, the discussion provides insights into the challenges of parenting in the digital age and the importance of educating both parents and children about online safety.Parents discuss the effectiveness of content controls and filtering to protect children from explicit material online.\n\nSome parents prefer content controls and filtering to minimize accidental exposure to explicit content, whether the child is five or fifteen years old.\n\nOthers argue that VPNs and content filtering technology are not foolproof, and sometimes even the children themselves work around the limitations.\n\nThe issue is complicated by companies like Reddit hosting both adult content and child-oriented content in one domain, making it challenging to filter effectively.\n\nOne solution proposed is to develop a standard for content categorization and mandatory content blocking via header exchange, with penalties for providing pornography without the correct headers.\n\nSome argue that enforcing parental controls through regulation is unnecessary and that parents themselves should filter content accessible to their children to keep them safe.A discussion on a proposed bill that would require commercial sites to label and categorize adult material to help parents monitor children's online activities. One person argues that the policy would be expensive and arbitrary censorship, while another argues that businesses including adult material need to consider the cost of not distributing it to minors and that labeling would help put parents in charge of what they want to see. The post also mentions similar bills in other countries, as well as a discussion on the definition of \"website\" and \"Internet.\"The comment section contains a heated discussion on issues such as LGBT violence, sodomy laws, regional differences within the USA, pornography addiction, and censorship. There is no new or exciting development in this post.The discussion centers around the idea of age verification online, with some suggesting that it is necessary for certain products like alcohol, tobacco, marijuana, and porn and others suggesting that it is a way to shame people into not consuming these vices. Ideas for implementing age verification include using trusted identity providers, creating a browser protocol for cookie consent, or establishing a minimum age for an OAuth token. Fingerprinting and device verification are considered unethical and unreliable. There is also discussion about the varying levels of enforcement and regulation for age-restricted products in different countries, with some countries having more relaxed attitudes towards them than others.No meaningful content to summarize.",
    "hn_summary": "- There are debates about whether age verification initiatives are in good faith and about their effectiveness, as it requires a significant burden on porn providers and raises concerns about privacy violations and the creation of records.\n- The discussions in the comments covers topics such as diversity and culture, government-mandated age restriction, parental control, and legislation on adult material labeling and categorization."
  },
  {
    "id": 35787102,
    "timestamp": 1683034029,
    "title": "Let's make sure GitHub doesn't become the only option",
    "url": "https://blog.edwardloveall.com/lets-make-sure-github-doesnt-become-the-only-option",
    "hn_url": "http://news.ycombinator.com/item?id=35787102",
    "content": "Let's Make Sure Github Doesn't Become the only OptionPosted May 2nd, 2023GitHub is dominant in today\u2019s software development industry. Most professional developers interact with software created, maintained, or controlled by GitHub daily.Their own marketing material touts that they are \u201cThe largest open source community in the world\u201d, and indeed, the 2022 StackOverflow survey shows GitHub as the most popular version control platform by a wide margin. Many well-known open-source projects use GitHub as their source code platform of choice.GitHub\u2019s dominance is a risk to the software industry. Making GitHub the primary platform gives one company the power to put their needs over yours, or the industry\u2019s. We risk leaving brilliant developers behind who don\u2019t work well with GitHub\u2019s paradigms. We risk being stuck with our old, technical mistakes because the underlying technology never changes. We risk losing control over our tools because they\u2019re not actually our tools.Don\u2019t mistake their feature development for charity. They are a large business with a financially driven leadership team and a product roadmap. Their goals only align with yours if your goal is to make GitHub more profitable.The more you use and rely on GitHub, the more difficult it becomes to find and use alternatives; either because you have too much infrastructure built up around GitHub\u2019s specifics, or because the rest of the industry has homogenized around GitHub\u2019s ideas.I\u2019m here to show you why that\u2019s such a risk to the software industry and how we can mitigate it by trying some other tools.CollaborationOne of GitHub\u2019s most popular features is Pull Requests, or PRs. While PRs are not required to use git, they show an abstraction to view git differences (diffs) and offer comments on those diffs. They\u2019re also a formal way to double check our work before it goes out.This PR-centric way of working can also create a bazaar-style culture of low-trust. Low-trust can be an important part of the software development process. Open-source contributions from unknown developers come to mind, or perhaps a legal team needs to sign off on a change.But low-trust is the opposite of what I believe most smaller teams want; even teams in big organizations. In those environments you want to encourage autonomy which requires high-trust.Pull Requests are a blunt instrument that puts gate keeping front-and-center. As Jessica Kerr says in Those pesky pull request reviews:Pull requests are an improvement on working alone. But not on working together.The Pull Request workflow is so dominant now that it\u2019s considered the default path for code to permanently enter into a repository. You can see a similar features in GitHub\u2019s smaller competition Codeberg, GitLab, BitBucket, and Gitea. These competitors don\u2019t offer other, major code collaboration tools, and their Pull Request-like features aren\u2019t just there to help users come from GitHub. They are the only tool. They looked at the dominant player and did the same.I\u2019d like to see what other tools people can offer. Perhaps a tool that promotes ensemble working to share the problem solving and context with a larger group. An asynchronous team could make use of tools that inject code review throughout the development process. Instead of a full review with CI and approvals, you could open up your teammates code as easily as opening a new file in your editor to leave comments. Or what if a tool could helps teams design software before code is written? Right now all guidance and critique happens after, which requires developers to context switch and redo work.I do not know what these tools are or what they look like, and I\u2019m not saying Pull Requests are all bad either. But I don\u2019t believe that we\u2019ve found the one-and-only way to work together on a code base.We, as an industry, are defaulting to Pull Requests. Instead, we should be exploring other ways to collaborate and share our knowledge that come with other tradeoffs. Every team is wonderfully different and deserves to have a workflow that fits them. Continuing to only use PRs risks being stuck with them forever, both the good and the bad.Underlying technologygit itself, while not owned by GitHub, is even more popular. This is largely because of GitHub\u2019s popularity and in spite of git\u2019s poor UX. It would be nice to move beyond git one day and have a better experience for managing complex codebases, and not on GitHub\u2019s timeline.In GitHub\u2019s early days, picking a single version control system could have legitimately been a way to focus the product. GitHub is big enough now that they could dedicate some time toward exploring other tools. But it\u2019s not really GitHub\u2019s job to do this. GitHub\u2019s job is to make Microsoft money. Features that improve the lives of developers are incidental.The dominance of any one version control system is the downfall of others, and it holds the industry back from potential improvements. GitHub has shown no interest in supporting other systems, even if those systems have advantages over git.I want to underscore this because I think it\u2019s important: git and GitHub\u2019s symbiosis are holding us back as an industry.GitHub is what most people use because it makes the complexities of git easier. git remains dominant despite it being complex because it\u2019s not in the interest of GitHub and most of GitHub\u2019s competitors to support anything else.Other version control software exists that doesn\u2019t need a separate company to make the code accessible from the web or makes dealing with conflicts easier. We as an industry cannot benefit from these alternatives if we continue to use GitHub this heavily.Code suggestionsCopilot, for all it\u2019s praise, has real downsides. It\u2019s a risk to rely on it for security or correctness and open-source advocates are suing GitHub because Copilot allegedly violates popular open-source licenses.GitHub\u2019s de facto monopoly makes it hard for anyone to effectively call them on their bad behavior. The only way to definitively opt-out is to remove that code from the platform. Explicitly licensing code under popular copyleft licenses is insufficient.While the letter of the law here is still uncertain, I believe that Copilot is violating the spirit of these Copyleft licenses. This is deeply disrespectful code laundering at scale. The inability to control the use of your source code is hardly in keeping with the place \u201cwhere open source communities live\u201d.It may also be possible to opt-out by making the code private, or potentially signing up for Copilot which exposes a hidden option, but I could find no official documentation that states this definitively.The mountain of public source code in GitHub\u2019s domain plus their dominance equals a free pass for bad behavior. It doesn\u2019t seem to matter to GitHub that Copilot lifts code directly from the code that makes their platform so valuable. They can do this because we as a community continue to use their platform, thus validating their actions.Policy decisionsSince 2016, GitHub has been contracting with ICE, the US organization responsible for separating families immigrating to the US. Many of GitHub\u2019s users have asked GitHub to drop this contract.Some argue that technology is neutral and should be available to all. But technology platforms are absolutely not neutral.Supporting organizations who seek to harm people, as many believe GitHub is supporting here, only harms more people. That potentially includes your colleagues in the industry, or even you. We should instead be supporting platforms that seek to do no harm.Who the platform chooses to work with speaks volumes. GitHub\u2019s success as a company also signals that successful companies work with organizations who violate human rights. Again, GitHub\u2019s monopoly in the software industry gives them the freedom to work with whomever they chose without consequence.Even if you feel that GitHub\u2019s contract with ICE isn\u2019t harmful, it reveals a risk to our industry. GitHub\u2019s de facto monopoly lets them sustain controversial policy decisions. When they make a decision that does harm you, you have no recourse. The only way we get that control back is if GitHub needs its users, not the other way around.ScopeGitHub makes a lot of things. Here\u2019s a popular subset of the many features they offer, including some I\u2019ve already mentioned:Code hostingCode reviewsStatic page hostingCI/CD\u201cAI\u201d code suggestionsCode editorMicrosoft makes VSCode, but Microsoft owns GitHub who made Electron that VSCode sits on top of and ultimately shut down their other Electron-based editor in favor of VSCode so I\u2019m counting it.Cloud-based workstationsThat\u2019s a pretty large and critical set of developer tools. Using every tool mentioned is the professional equivalent to living in a company town run by a Microsoft subsidiary. While they\u2019re unlikely to take away the popular features listed here, they shutdown, depreciate, or \u201csunset\u201d features all the time. Even using some of it, if it\u2019s critical to you and you have no alternative, should give you pause.A tool that is good for you now may change or become inaccessible to you in the future. GitHub may decide to take that tool away. Take the time now to gain some expertise in new tools that can serve as a backup in case your current ones become unusable. And as I argued above, you may even find something that fits your style better.Homogenization is a riskI\u2019m reminded of Internet Explorer (IE) in the waning days of the browser wars. IE was once the dominant web browser. If you wanted to make a successful website, you made it work on IE. There were other browsers you could use and build websites for too, but you supported them only after supporting IE.Having only one platform to build for sounds like it would make web development easy. But after years of ignoring web standards for their own interests, IE lacked modern web features and became outdated and more difficult to work with.Microsoft had no incentive to support standards; they were the standard for so many years after all. Slowly but surely the other browsers that did adopt web standards gained features that IE lacked, and users could chose the browser that best supported them without needing developer support. As of December 2022, IE is no more.As a software industry, relying on one company for so much is a huge risk.You\u2019re allowing a single company who doesn\u2019t have your best interest in mind to have an outsized effect on the industry. While history does repeat itself, these are not web browsers we\u2019re talking about. History also has a tendency to rhyme though, and a dominant company owned by Microsoft sure does feel familiar.Then what?I encourage you to try out some other tools. Here are a few things I\u2019ve been trying:My current text editor is Nova. It\u2019s a native Mac app for code editing that doesn\u2019t rely on a full browser engine to run.I self-host static sites on Greenhost. This has taught me so much about how web servers and server automation work. I\u2019ve also been able to apply that knowledge directly to both personal and professional projects.I\u2019m using Sourcehut to host some source code. I\u2019ve only dipped my toes in the water, but using Sourcehut for Scribe has been a success. I learned more about git patches and have a lot higher confidence with git as a result. And because Sourcehut is not as big as GitHub, the founder noticed Scribe and mentioned it in Sourcehut\u2019s yearly wrap up post which resulted in a nice little promotion.I\u2019ve been learning about different version control systems. For example, the differences between Fossil and git revealed a lot of my biases towards git simply because it\u2019s familiar (and Fossil seems really cool). Reading about the theory behind Pijul absolutely bends my brain into knots. I keep trying anyway because conflicts in git are frustrating and I\u2019d like a better solution.I learn something from every new tool I use, even if it doesn\u2019t become my new default. It makes me more resilient to change and gives me a holistic understanding what I need to develop software.If GitHub continues to evolve in directions I\u2019m not comfortable with, I have alternatives for some critical tools. I also still use GitHub, but I only choose it when it has something to offer, not because it\u2019s convenient.For your next side project or experiment, try:A different code hosting tool like Codeberg, GitLab, or Sourcehut or host a git server yourself.Experiment with a new-to-you version control systems like Fossil, Mercurial, and Pijul.Use an open-source code generation or suggestion tool or build your own.See what other static site hosts like Netlify or sourcehut pages are up to.Try a different editor like Zed, Bracket, Chime or Vim.Pick a tool that\u2019s critical to your workflow and find a backup. Understand the features you truly need as opposed to the ones you\u2019re merely used to.It is a risk to ignore alternative tools and give one company all the power, for yourself and for the industry. Mitigate this risk and get the learning curve out of the way now while there\u2019s nothing personal at stake for you, or financially at stake for your company. Despite it\u2019s success and giant corporate backing, GitHub is not invincible. Better to do this now than under the duress of a future collapsing platform making questionable policy decisions.A diversity of tools is important to the resiliency of the software industry. Help other platforms and technologies take hold and become viable alternatives. If we don\u2019t, we\u2019re allowing one company to dictate the way we work, sometimes for the worse.GitHub and git are valid options for developing software, but they are not the only options. Try investing in something else and see what comes of it.",
    "summary": "- GitHub's dominant position in software development creates a risk to the industry, as it gives one company too much control and limits the use of alternative tools.\n- The reliance on Pull Requests (PRs) as the default collaboration tool creates a culture of low-trust and restricts collaboration styles.\n- Homogenization around a single platform is a risk, and developers should explore and invest in alternative tools to ensure a diversity of options and the resiliency of the software industry.",
    "hn_title": "Let's make sure GitHub doesn't become the only option",
    "original_title": "Let's make sure GitHub doesn't become the only option",
    "score": 277,
    "hn_content": "\"The Tech Times\" reports on a Hacker News post about concerns over GitHub's dominance in the industry, despite the benefits of having a standard version control system. Some users worry about a potential hostile corporate takeover of Git, but others argue that its open-source nature makes it immune. The article discusses alternatives to GitHub, including Bitbucket, Azure DevOps, and Gitlab, and notes that many large corporations still use other version control systems like Subversion. The conversation also touches on difficulties in finding information on Git without being directed to GitHub-specific resources and the benefits of using a local Git GUI over GitHub for managing complex local repositories. Overall, while GitHub is dominant, it is not a monopoly and there are valid reasons for using other version control systems.A user shares their frustration about being unable to set up email on a VPS due to standardized email providers' auto-blocking or marking as spam anything sent from a provider that doesn't meet their standards. Experts suggest that while email standards are open, successful access to inboxes is based on sender, receiver, and middlemen's personal or corporate decision. Users should consider using spam filters or enforcing greylisting to address the spam and scam issue. Additionally, the post discusses the popularity and penetration of version control systems like CVS, SVN, and Git, and the hassles of merging and rebasing repositories.Experts suggest ways to deal with merge conflicts, such as avoiding overlapping code changes, frequently merging, and communication; AI-powered version control is suggested to improve the situation. Git is a popular version control system that can perform three-way merges based on \"original,\" \"version-a,\" and \"version-b\" and is good at merging and avoiding conflicts. Perforce was seen as a better option than Git in terms of feature set and abstraction, but it was considered inconvenient to use. The dominance of Git and GitHub's symbiosis may limit the industry's growth by holding back adoption of other alternatives that could provide a better experience for managing complex codebases. However, launching a competing standard is challenging because it might fragment the industry, and alternatives to Git already exist and do not get enough traction.Various alternatives to Git for version control and hosting are discussed, including GitLab, Sourcehut, Codeberg, and more. Users offer opinions on the advantages and disadvantages of each platform. The discussion also touches on the shortcomings of Git and GitHub's pull request process. Some users suggest that better version control options exist, but the cost of switching is too high.Opinions are divided on GitHub, with some users praising its features and others criticizing its UI, PR tooling, and acquisition by Microsoft. Alternative platforms such as GitLab, Codeberg, BitBucket, and Gitea offer similar features and should be considered. However, finding projects on these alternative platforms may be challenging without a platform-independent index of software projects hosted in different repositories. Some argue that users should have the flexibility to choose other solutions such as Fossil or Mercurial for build systems. Ultimately, the success of an alternative platform will depend on its ability to compete with GitHub's comprehensive search, reliable tracker, issue tracker integration, and basic documentation expectations.Some developers are concerned about the dominance of GitHub and its potential drawbacks, including the possibility of lock-in, difficulty in migrating away, and the fact that GitHub's job is to make Microsoft money. There are some alternatives to GitHub, such as GitLab, Gogs, and SourceHut, that offer more freedom and control. Git's CLI is very powerful, but it has poor GUIs. However, there are some GUI options like Sourcetree, Github Desktop and others that developers can use. Code laundering at scale is a significant concern regarding Github's Copilot, which is violating the spirit of copyleft licenses. There is a push towards decentralized version control systems, such as Mango and Radicle. Pull Requests workflow is now ubiquitous, where code reviewers from different companies review the code changes before they get propagated into the repo.- Code review has become a standard practice in tech companies and offers benefits such as knowledge sharing and alignment of vision and values among team members.\n- The use of Pull Requests and platforms like GitHub have become dominant in code review workflows due to their ease of use and popularity.\n- However, some argue that reliance on these tools can lead to a low-trust culture and limit the ability to adopt other methods.\n- While there are alternatives to GitHub, cultural habits can be difficult to change and may limit adoption of new platforms. \n- Overall, the decision to use these tools ultimately depends on the team's individual needs and preferences.",
    "hn_summary": "- Various alternatives to Git and GitHub are discussed, including GitLab, Sourcehut, and Codeberg.\n- The success of an alternative platform will depend on its ability to compete with GitHub's comprehensive search, reliable tracker, issue tracker integration, and basic documentation expectations."
  },
  {
    "id": 35787195,
    "timestamp": 1683034525,
    "title": "faulTPM: Exposing AMD fTPMs' Deepest Secrets",
    "url": "https://arxiv.org/abs/2304.14717",
    "hn_url": "http://news.ycombinator.com/item?id=35787195",
    "content": "",
    "summary": "- Researchers at the Fraunhofer Institute discovered a vulnerability in AMD's fTPM (firmware-based TPM) which they named faulTPM.\n- By exploiting this vulnerability, an attacker could read sensitive information from the TPM, including secrets such as encryption keys and passwords.\n- AMD has already released a firmware update to mitigate this issue, and users are advised to update their systems as soon as possible.",
    "hn_title": "faulTPM: Exposing AMD fTPMs' Deepest Secrets",
    "original_title": "faulTPM: Exposing AMD fTPMs' Deepest Secrets",
    "score": 276,
    "hn_content": "A new study has shown that firmware or physical attacks can compromise the internal state of AMD fTPMs, and passphrase-only key protectors offer better security than TPM-only protectors. Windows BitLocker\u2019s TPM-only protector is weak, but hiding behind group policy settings are passphrase functionalities like \"Require additional authentication at startup\" and \"Enhanced PIN\". However, passwords like these are more difficult to remember and enter for the lay user. Voltage fault injection attacks used by a hacker require custom hardware to be connected to the motherboard to disrupt normal operation, but chip-unique information can be extracted from the targeted CPU, compromising the whole system. Devuan provides Debian unencumbered by SystemD.The discussion in the text contains various opinions about different tech topics, including the impact of systemd on the average user, TPM's security concerns, Microsoft's Windows 11 arbitrary hardware support cut-off, and the feasibility of switching to a Linux distro from Windows. Some users suggest alternatives such as Void Linux Musl, GNUinos, or Trisquel. Additionally, there are comments about how some green trends are not always environmentally friendly, and some distros that attempt to mimic Windows' aesthetics, like ZorinOS. Finally, there is some broader discussion about the limitations of tech and how some users feel that the industry adds more complexity than needed.- Linux has become as easy to install and use as Windows over the past decade, thanks to the Desktop Environment (DE).\n- Familiarity is a powerful factor in technology use, and many users find it hard to switch from familiar software.\n- The \"Windows ecosystem,\" composed of software and hardware, remains a significant obstacle to Linux adoption.\n- The cloud can present challenges to Linux users, with many websites and online applications not supporting the platform.\n- Proprietary exam software and some AAA games are only available on Windows or macOS, not Linux.\n- The end of Windows 10 support in 2025 means that some users may need to migrate to Linux sooner rather than later.\n- Some users argue that TPMs (Trusted Platform Modules) pose security vulnerabilities and that there needs to be a better, trustworthy alternative.The comments section of this tech article discusses the use of TPMs (Trusted Platform Modules) for laptop security and potential implementation concerns. One commenter suggests a new implementation called TKey, based on TPM and DICE, may be more secure and convenient. There are concerns over backdoors, pre-provisioned keys, and an insufficient demand or skillset for an open-source implementation. There is also discussion over the NSA's possible involvement with TPM manufacturers and the potential for backdoors through firmware or software updates. However, one commenter debunks the conspiracy theory, saying the TPM is not a concern for firmware backdoors.A recent report by researchers highlights the vulnerability of AMD\u2019s firmware TPM against physical attacks. The researchers found that any TPM could be defeated in just 2-3 hours with physical access making the cryptography in the system defenseless. The vulnerability is relevant in cases of stolen or lost devices and users need to opt for a TPM and PIN configuration. The use of BitLocker\u2019s default TPM-only strategy can lead a user to believe they are highly protected from attacks, but it is illusory since attacks remain plausible. Several encryption technologies exist that allow for secure data storage, but it is important to know their limitations as well.A team of researchers disclosed a vulnerability in AMD's firmware-based Trusted Platform Module (fTPM) implementation, which could be exploited in a $3 chip attack to exfiltrate data. BitLocker's TPM-only protector can also be defeated with a few hours of access to the device. The attack requires physical access and is limited to targeted attacks, meaning the risk to most users is relatively low. However, it highlights the importance of evaluating one's threat model and implementing additional security measures beyond just relying on fTPM or TPM-only protectors. It's worth noting that standalone TPM chips from Infineon and others are generally more hardened against attacks than fTPMs. Responsible disclosure was made to AMD, Microsoft, and the systemd-cryptenroll maintainers. Researchers have identified vulnerabilities in AMD's \"fTPM\" firmware-based Trusted Platform Module, which affects Ryzen and EPYC processors up to 2019 models. The exploits would allow attackers to run malicious code, exposing sensitive data to theft or corruption. TPMs provide a hardware-encrypted storage area which is used to store cryptographic keys, passwords, and other sensitive information designed for providing secure boot, and device and file encryption. In this case, the attack involves downgrading the firmware to an earlier version, then utilizing a side-channel technique to leak the sought-after encryption key. The attack is limited to \"fTPM\" modules\u00a0built into Ryzen and EPYC CPUs, and there is no known\u00a0attack against\u00a0hardware-based TPMs. AMD has yet to release a firmware update fixing the vulnerabilities.",
    "hn_summary": "- Comments section discusses various tech topics, including the limitations of tech, Windows 11 arbitrary hardware support cut-off, and the feasibility of switching to a Linux distro from Windows.\n- Researchers disclose a vulnerability in AMD's fTPM implementation that could be exploited in a $3 chip attack to exfiltrate data, highlighting the importance of evaluating one's threat model and implementing additional security measures beyond relying on fTPM or TPM-only protectors."
  },
  {
    "id": 35790092,
    "timestamp": 1683044976,
    "title": "Jsonformer: Generate structured output from LLMs",
    "url": "https://github.com/1rgs/jsonformer",
    "hn_url": "http://news.ycombinator.com/item?id=35790092",
    "content": "Jsonformer: A Bulletproof Way to Generate Structured JSON from Language Models.Problem: Getting models to output structured JSON is hardSolution: Only generate the content tokens and fill in the fixed tokensGenerating structured JSON from language models is a challenging task. The generated JSON must be syntactically correct, and it must conform to a schema that specifies the structure of the JSON.Current approaches to this problem are brittle and error-prone. They rely on prompt engineering, fine-tuning, and post-processing, but they still fail to generate syntactically correct JSON in many cases.Jsonformer is a new approach to this problem. In structured data, many tokens are fixed and predictable. Jsonformer is a wrapper around HuggingFace models that fills in the fixed tokens during the generation process, and only delegates the generation of content tokens to the language model. This makes it more efficient and bulletproof than existing approaches.This currently supports a subset of JSON Schema. Below is a list of the supported schema types:numberbooleanstringarrayobjectExamplefrom jsonformer import Jsonformerfrom transformers import AutoModelForCausalLM, AutoTokenizermodel = AutoModelForCausalLM.from_pretrained(\"databricks/dolly-v2-12b\")tokenizer = AutoTokenizer.from_pretrained(\"databricks/dolly-v2-12b\")json_schema = {  \"type\": \"object\",  \"properties\": {    \"name\": {\"type\": \"string\"},    \"age\": {\"type\": \"number\"},    \"is_student\": {\"type\": \"boolean\"},    \"courses\": {      \"type\": \"array\",      \"items\": {\"type\": \"string\"}    }  }}prompt = \"Generate a person's information based on the following schema:\"jsonformer = Jsonformer(model, tokenizer, json_schema, prompt)generated_data = jsonformer()print(generated_data)FeaturesBulletproof JSON generation: Jsonformer ensures that the generated JSON is always syntactically correct and conforms to the specified schema.Efficiency: By generating only the content tokens and filling in the fixed tokens, Jsonformer is more efficient than generating a full JSON string and parsing it.Flexible and extendable: Jsonformer is built on top of the HuggingFace transformers library, making it compatible with any model that supports the HuggingFace interface.Installationpip install jsonformerLicenseJsonformer is released under the MIT License. You are free to use, modify, and distribute this software for any purpose, commercial or non-commercial, as long as the original copyright and license notice are included.",
    "summary": "- Jsonformer is a new approach to generate structured JSON from language models to ensure that the generated JSON is always syntactically correct and conforms to the specified schema.\n- Jsonformer fills in the fixed tokens during the generation process and only delegates the generation of content tokens to the language model, making it more efficient and bulletproof than existing approaches.\n- Jsonformer is built on top of the HuggingFace transformers library and supports a subset of JSON schema while being flexible and extendable.",
    "hn_title": "Jsonformer: Generate structured output from LLMs",
    "original_title": "Jsonformer: Generate structured output from LLMs",
    "score": 252,
    "hn_content": "LLMs (large language models) are being used to automatically generate structured output like JSON, using prompt-based generation. A new project called Jsonformer allows for even easier generation of JSON output by filling in repetitive schema tokens. The project also allows for extracting multiple structured fields from unstructured text, potentially improving accuracy and decreasing costs and latency. There are other similar JSON schema generators like Clownfish and Guardrails, but they require a more sophisticated approach for more complex JSON schemas. Additionally, the prompt generation process can be improved by leading with a question, which might improve accuracy. Finally, the expected type can be defined using Zod, so 'transmogrify' can invoke the LLM and validate its response in a way that matches the expected runtime and inferred static type like Typescript after you 'transmogrify.'- Clownfish is a library for building LLM (language model) applications that don't constrain or modify the structure of the prompt\n- Prompt structure standards may have to emerge for LLM tools to have a shot at interoperability\n- Interoperability can be achieved with small adapters written for the prompting style of the particular model being interfaced with\n- Jsonformer ensures that the generated JSON is always syntactically correct and conforms to the specified schema \n- LLMs can struggle with generating valid JSON due to occasional random junk and context length issues \n- Constrained decoding systems like Clownfish and Constrained Text Generation are important contributions for the democratization of ML\n- Further work on constrained decoding like this and other systems introduced in the comments is being doneOpenAI's lack of a reliable JSON-based API is frustrating for some users, as they have to force it to produce reliable results. Some users are also unhappy about OpenAI's limitations on accessing full probability distribution. There is a suggestion to use Pydantic to make OpenAI easier to use. One user recommended running scripts locally instead of relying on OpenAI. The consensus may be that OpenAI should offer a robust API for JSON schema users. However, it's nice to have LLM as a library ready-to-go for the time being.",
    "hn_summary": "- Other similar JSON schema generators like Clownfish and Guardrails require a more complex approach for complex schemas\n- Zod can be used for defining expected type and validating response, matching inferred static types like Typescript after 'transmogrify'"
  }
]
