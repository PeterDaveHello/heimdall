[
  {
    "id": 40104774,
    "title": "Low-Bandwidth World Map for Leaflet: 10,000 Populous Cities",
    "originLink": "https://github.com/tinyworldmap/tiny-world-map",
    "originBody": "tinyworldmap tinyworldmap is a world map for offline-first and low-bandwidth web apps. Demo Nightly tinyworldmap is designed to be used with Leaflet. All zoom levels are supported, and the most complete version is only 300 kB gzipped. Its client-side rendering has been extensively profiled and tested on low-end decade-old phones, with no discernible lag. By default, the map displays the 10,000 most populous cities added to OpenStreetMap. At the time of writing, this encompasses all cities and towns with a population of at least 48,000: Usage There are two ways to use the map: As a base map, replacing OpenStreetMap tiles As an offline fallback for OpenStreetMap tiles As a base map To use tinyworldmap as a Leaflet base map, add the following to your head tag:This script embeds all data necessary to display the map. Then, instead of adding a tile layer to the Leaflet map, use: new L.GridLayer.TinyWorld().addTo(map) The TinyWorld constructor accepts several options: backgroundColor, textFillColor, borderStrokeColor, borderFillColor, borderWidth, textStrokeColor (which helps separate the text from the rest), textStrokeWidth, cityFont (e.g. \"12px Arial\"), countryFont, and dotColor. If dotColor is specified, each city is marked with a dot. This enhances usability when using the stripped-down version of tinyworldmap that excludes country borders: Apart from the stable base map, the version currently in development (which is heavier and has not been tested on all old phones) is also available:As a fallback map In offline-first web applications, caching image-based maps at all zoom levels is impossible due to the vast number of tiles, with a combined size often in the order of terabytes. This repository provides a service worker to enable offline functionality for web apps with maps. When this service worker is installed, the fallback map is preloaded. All visited pages are cached, but the base map is excluded. While the server can be reached, cached data is not used. When the user is offline, the website is served from cache, and the service worker intercepts requests to the OSM tile server, generating replacement tiles locally using tinyworldmap. Before registering the service worker, first modify all sections in the service worker marked IMPORTANT. Once registered, be sure to attribute OpenStreetMap and tinyworldmap in your tile layer as follows: L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', { maxZoom: 19, attribution: '© OpenStreetMap, tinyworldmap' }).addTo(map); To see an example of a production application using tinyworldmap as a fallback, visit Hitchmap. Simply load the website in a browser supporting service workers, wait for a while, turn off your internet, and reload. The web app should be functioning as normal, using the fallback map. Note that it might take a while for the service worker to install. Tinier world maps The complete map is 300K gzipped/694K uncompressed. For certain use cases, this might still be too large. No borders tiny-world-noborders-10000.js(on) contains all the data present in the complete version except for country borders and shorelines. This reduces the gzipped version by 100k and the uncompressed version by 200k. In addition to its smaller size, the version without borders has the advantage that all data included is precise. The country borders in the complete version are not exact at high zoom levels, which can look strange when overlaying shapes that match country borders and shorelines. In such cases, the version without borders often looks better. This is the default styling: No cities There are two versions available without city labels: tiny-world-nocities.js(on) (which retains country labels) and tiny-world-borders.js(on) (which omits country labels). The city labels comprise 410K uncompressed and 172K compressed. Fewer cities Finally, for each file including city labels, there also exist versions featuring 2,000 cities and 4,000 cities. Simply substitute 10000 with 2000 or 4000 in the filename. Cities included Population 10,000 > 48,000 4,000 > 137,000 2,000 > 287,000 Hire tinyworldmap If you require a customized map (e.g. in more detail or in another language) or if you need assistance implementing offline functionality on your website, please contact us at business@tinyworldmap.com. Attribution Like OpenStreetMap data, tinyworldmap data is licensed under the ODBL, which necessitates attribution. If you've followed the steps outlined above, your Leaflet footer should include attribution to both OpenStreetMap and tinyworldmap. If not, add the following: © OpenStreetMap, tinyworldmap",
    "commentLink": "https://news.ycombinator.com/item?id=40104774",
    "commentBody": "Tiny World Map (github.com/tinyworldmap)437 points by bopjesvla 22 hours agohidepastfavorite82 comments LeifCarrotson 14 hours agoI think I love the idea - solve the problem of \"you zoomed out too far, now wait for the server to load tiles for the continent you just asked to be rendered\" - but I'm not sure what the use cases are where I need to know where West Bloomfield Township is in relationship to Waterford Charter Township (both suburbs of Detroit) but not what state they're in or even that the Great Lakes exist. I would like to see a lot more data put into coastlines and a lot less into subdividing major metropolitan areas. reply wongarsu 10 hours agoparentThe idea is good, but it should really include the 100 biggest islands, 50 biggest lakes, 200 longest rivers, or something along those lines. reply devman0 9 hours agoparentprevSome random spots I checked out of curiosity, Alexandria, VA, USA is on the wrong side of the river and the country of Bahrain is very sad. reply rozab 20 hours agoprevThis is cool, but the shorelines are very low detail. A few towns in the UK are off in the sea, meanwhile Greenland and Northern Canada are hogging all the vertices. It looks as though the Mercator projection is already being accounted for in the detail level, but it would be good to deprioritize unpopulated areas. reply dansky 17 hours agoparentNice project! It may be useful to select the included places also by QRank of Wikidata [1] so notable islands will appear, despite low populations. An SQLite DB of QRank [2] was also posted here in HN a while ago. [1] https://qrank.wmcloud.org/ [2] https://github.com/hikeratlas/qrank reply Aachen 13 hours agorootparent(Saving people a click for link#1: qrank sorts Wikidata entries by their pageviews across Wikipedia, Wikiquotes, Wikibooks, etc.) I'm not sure that an online popularity contest should be the input for a base map. I understand the reasoning that they're more likely to be viewed by someone, but it's also a bubble: is Wikipedia / are Wikimedia projects as popular in Asia as this base map will be? Is that used for the same purpose as this base map? Should something be shown on a map when there's a lot of drama about it rather than because a lot of people live there? I see the advantages also, like if literally nobody lives there but it's an interesting or large landmass then there's cause for it to be included. I just don't think this is the right (objective, fairest) importance measure to use reply tuukkah 1 hour agorootparentqrank is not a mere popularity contest and definitely not a more arbitrary measure of importance than the count of population within city boundaries (boundaries can be arbitrary; population vs commuters vs tourists; regional capitals etc.) > I just don't think this is the right (objective, fairest) importance measure to use What's \"right\" can depend on the purpose of the map. reply bopjesvla 2 hours agoparentprevI've published a nightly version [1] that removes fjords and adds more detail elsewhere. It also generally has a higher resolution. The reason I originally didn't do the latter is because old phones, especially those running Firefox for Android, can crash while drawing large amounts of polygons. I have since optimized the drawing procedure, but beware! [1] https://tinyworldmap.com/beta.html reply Aachen 13 hours agoparentprevThe ratio/prioritisation of detail in cities to shorelines seems oddly skewed towards including more cities over having accurate borders or shorelines It's showing an entire province in the Netherlands as disconnected from the rest of the country, like it's an island (it's not), but knows to name five cities inside of that province, several of which basically on top of each other. (The inclusion of the afsluitdijk, on the other hand, is unnecessary detail imo but I get that it's hard to programmatically select those tweaks about what's considered land which it needs to draw and just some sea infrastructure) I should open a ticket on the issue tracker but am not logged in on mobile so the best I can do atm is an HN comment. If someone else has a moment and feels the same way, feel free to cite this comment towards shifting the ratio a little! Or introducing a minimum separation distance between cities, or getting a smaller overall file, whatever the ideal solution may be but the current ratio is a tad unnecessary reply nolok 19 hours agoparentprevThis notably lead to making it not very usable at all in islands or achipelago area. Even the philippines, with a lots of islands sure but several ones of them being rather large, is not usable. French polynesia doesn't even exists on the map. reply dorfsmay 18 hours agorootparentNeither is Saint Pierre et Miquelon. There is the island of la Réunion but no name, and the name for Ibiza but no island... I hope those can be fixed, I love the concept. reply zimpenfish 18 hours agoparentprev> A few towns in the UK are off in the sea And some, notably Manchester, are entirely absent. reply ta1243 16 hours agorootparentDeveloper is clearly from Liverpool :D It's odd - they've got places like Stockport, Salford, Oldham etc, just not Manchester. Manchester has the highest population of the boroughs in Greater Manchester reply noizejoy 16 hours agorootparentprev> And some, notably Manchester, are entirely absent. But Wrexham is shown - so the priorities seem correct. ;-) [0] https://en.wikipedia.org/wiki/Wrexham_A.F.C.#2020%E2%80%93pr... reply bopjesvla 2 hours agorootparentprevThis has been fixed. reply DonaldFisk 8 hours agorootparentprevManchester's there, ESE of Salford, if you zoom in enough. reply zimpenfish 1 hour agorootparentWasn't there yesterday! [edit: also still kinda broken though because Southport, Blackpool, Burnley, Grimsby etc. all appear before Manchester which makes no sense.] reply perrygeo 17 hours agoparentprevThe simplification was sloppy all around. Entire nations are missing in the Caribbean. These are basic quality control checks. reply pastage 38 minutes agorootparentThe step from simple simplification to automatic generalizations is not trivial, the map agency in Sweden just recently began publishing map updates for different scales using their own automatic generalization rules. I'm guessing they will save a lot of man hours by doing that, but they have taken their sweet time doing it. The zoom needs to be locked this map should not be used/critiqued beyond a certain level and that needs to be more apparent. You can see the same the map that Ache posted bellow, as long as you keep zoomed out it is mostly good enough. My point is that this is not a sloppy job, but you are right that neither managed to solve the hardest problem. reply FinnKuhn 16 hours agoparentprevThere also seem to be some bugs in this, just look at Hamburg, Germany... reply non-chalad 8 hours agorootparentAnd Berlin is missing it's famous landmark TheBerg. reply s0rce 16 hours agoparentprevSame with the Alaska Panhandle, lots of uninhabited complex shoreline. reply bopjesvla 1 hour agoprevThanks for the feedback, everyone. To give some context for our choices: until recently, country shapes were not the main focus of this project. For a long time, the version in the README without country borders was the only version, because we didn't think adding the entire world was feasible. Turns out, it was. I've published a nightly version [1] that removes fjords and adds more detail elsewhere, including the much-requested islands. It also generally has a higher resolution. The reason we originally didn't do the latter is because old phones, especially those running Firefox for Android, can crash while drawing large amounts of polygons. I have since optimized the drawing procedure, but beware! [1] https://tinyworldmap.com/beta.html reply _ache_ 20 hours agoprevI made the same (offline first, very small, vector based) but with a focus on i18n. So it's available in all languages of the United Nation (except Spanish because I just forgot, shame on me, could be made in a couple of hours). The name of the countries (and cities) are the official one declared at the UN. So, yeah, the official short version of UK is \"United Kingdom of Great Britain and Northern Ireland\". https://map.ache.one/en reply idoubtit 19 hours agoparentThat's nice, but quite buggy. \"Cape town\" appears in South Sudan, though the country is not named. Erythrea is also missing its name. And there are 2 Somalia blocks, with different colors. My own experience is that it's rather easy to draw a light map and deal with i18n. There are several open data sources and libraries. The hard problem is purely administrative. If you have data tied to most countries, there's certainly a mismatch with your source for a map, and you have to build a custom map yourself. There is no consensus on what a country is. A few examples of divergences: Western Sahara is officially a country, but practically it's always been occupied by Morocco. Somalia is a mess, with Somaliland and Puntland being de facto independant coutries though noone acknoledge them officially. Between these two categories, Greenland, Nue and a few others are not fully independant. reply wongarsu 10 hours agorootparent> 2 Somalia blocks, with different colors The western one should be Somaliland, as you mention. The map seems to take the duck-typing approach to countries, rather than taking the official stance of any one country. There's Somaliland, Taiwan, Kosovo, Cyprus, Israel and Palestine, etc. No Northern Cyprus though. reply _ache_ 8 hours agorootparentI tried to use only UN approved names. « Somaliland » isn't on unterm.un.org, it's why there is two Somalia. I'm pretty sure that Eritrea isn't on the map because of a display bug. Definitively, if you are making a map, your have to make geopolitical chooses. And yes, I have edited NE data to highlight the geopolitical choices that I think are the simplest to defend. reply pastage 3 hours agoparentprevCouldn't find any description on how you made that, it is a beautiful map. There are things about Tiny World Maps as well, but they do not have a good description on how it's made either. From my own experience on a country scale it was a manual process with dirty hacks then getting the testing to get it right was the worst (mainly the right generalization, and what people expect on their local map). Do you think it is worht the effort for you to significantly improve this map? reply _ache_ 1 hour agorootparentI will improve the map and explain how it was made and why, because I think it worth it. But I'm not going to improve it significantly. Thank you. ^^ reply clementmas 3 hours agoparentprevWell done. I'd need it to be vector based too. reply keraf 12 hours agoparentprevNot sure if the star is supposed to indicate the biggest city or the capital, but if it's the latter, Tanzania has it wrong. The star is on Dar Es Salaam but the label over it says Dodoma, which is the name of the actual capital but it's more in the center of the country. reply _ache_ 8 hours agorootparentThank you for pointing this out. The capital positions are the only data that is not UN sourced nor from natural earth. I will fix that. reply barlog 19 hours agoparentprevFabulous. I read your rail ads story with interest. Great perspective. 素晴らしい視点でした from ja-JP reply gascoigne 19 hours agorootparentOh thank you for pointing this out!! I loved watching the ads and reading _ache_'s commentary. Wonderful work. https://ache.one/articles/rail-and-advertising for the interested. reply _ache_ 19 hours agorootparentprevThank you very much. How lovely. reply konstantinua00 16 hours agoparentprev\"i18n\" is very not internationalized abbreviation... reply lysp 8 hours agoprevI'm not sure the 10,000 most populated cities is the best filter. This will prioritise cities in large countries with smaller countries likely to have most if not all cities unavailable. Should be a secondary filter that has the top X cities in each individual country, this should capture all major cities in smaller countries. reply dredmorbius 5 hours agoparentThere are other measures of urban significance. Capitals (national, regional), global cities, cities by local prominence, etc., might all be useful modifications to the basic criterion. I suspect geographers and cartographers might be able to inform this discussion more usefully. reply poilcn 2 hours agoprevLove it! Wonder what is the logic behind having some lines ending with \";\" in some cases and not having them in others. Is it just editor artefacts? i.e. the author had no intentions to put them, but the editor in some cases inserted them automatically. reply otikik 1 hour agoprevI see this and the first thing I want to know is creating a Voronoi partition in order to see which city with >48k habitants is closest to any point in the map. What is wrong with me. reply NeoTar 12 hours agoprevI was interested to learn that the 10.000 largest settlements in the world gets you get down to 48.000 population. I’m still trying to work out if that is a surprising figure or not. reply dredmorbius 5 hours agoparentI'd long known that the largest 100 or so US cities by population gets down to the roughly 200k population level. Extending that to 200 cities is still above 100k (per Wikipedia, #333, Daly City, CA, is pop. 100,007: ). The relationship, as with so much else in scaling circumstances, tends to be linear on a log-log scale. In China, you'd reach position 106 before finding a city of less than one million in population (the US has only nine such cities). India, checking just now, has 46 cities with > 1 million population, the 100th ranked (Malegaon) is 471k, and at #300 population remains > 100k (Aurangabad). Keep in mind that \"city\" is a highly arbitrary definition, and some of the world's largest cities would be the equivalent of metropolitan areas or even states or provinces elsewhere. The largest city by area actually has a remarkably small population: Sermersooq, Greenland, with a population of 24,148 and land area of 575,300 km^2 (220,000 mi^2), which is not only larger than the US state of Rhode Island (by a factor of nearly 144 times), but all but two US states: only Texas and Alaska are larger, and the latter only modestly so (by 12%). Urban geography is a complicated topic, and typically you'll find that comparisons are made on the basis of multiple scales and definitions such as metropolitan statistical areas (MSAs) and built-up land area, as well as population, which tend to smooth out arbitrary distinctions of political boundaries and give stronger weight to total demographic or economic influence. reply diamnom 18 hours agoprevThis should really include capitals even if they are smaller than 40k and star them in some way reply jimmyrocks 17 hours agoprevThis is really cool! I’m super impressed at how quickly it loads on my phone. Really great idea to compress the spatial data into Paths. I would suggest using Natural Earth data instead of OSM so you could drop the ODbL license. It’d also be really cool if you included the tool that converts the spatial data into Paths. reply xipho 18 hours agoprevVery cool. I've long wanted to make an 8-bit throwback style \"species page\", think an EOL or wiki-page, or our own TaxonPages effort (example at https://orthoptera.speciesfile.org/otus/850075/overview). I'd like to see how much (symbolic) information you could pack into simplified figures etc, this would fit right in to answer the question \"where in the world can I find the species, roughly\". reply penteston 7 hours agoprevThis map has issues. Where caspian sea? I dint found it. reply ytdytvhxgydvhh 19 hours agoprevInteresting that some relatively recent changes of preferred names like Czech Republic->Czechia and Macedonia->North Macedonia are on there but not Turkey->Türkiye and East Timor->Timor-Leste. reply danparsonson 20 hours agoprevThis is really nice although I'm finding the progressive loading a bit unreliable - sometimes tiles don't display if I zoom and pan quickly at the same time. I'm using FF 125.0 on Android. reply keepamovin 20 hours agoprevThis is SOO Good! Thank you for making this. Just as an idea: I think your demo should include an optional \"Locate Me\" button that requests geolocation perms and prints the lat long point on the map. reply jokoon 13 hours agoprevseems a bit weird to use a service worker to do an offline version... the tutorial linked is long and worthless if you want people to quickly install and use it, you need to either make a shorter more concise tutorial. imagine somebody loses internet access, he can't really open this thing to just access a map, I don't understand. why not just provide a html file with the tiles encoded as base64 or something similar? just provide a zip file... I am not a web developer, this seems like a good thing, but deployment is 1/10... minimalist things are supposed to be very easy to deploy. EDIT: just saving the page, and it works. I don't understand what the service workers are for. web dev has mysterious ways. reply likeclockwork 12 hours agoparentThat's what service workers are for. This service worker explicitly caches all the resources the app needs to run then intercepts requests for those resources so all the JS that depends on the resources still runs while you're offline. If you had visited the site in the past, even if you were offline you would be able to go to that URL and the service worker would serve everything needed from cache. reply _ache_ 20 hours agoprevIt's very good ! - Get the islands back ! - Limit the zoom level to not pass through the land - Make the Capital city maybe in light bold or slightly bigger to differentiate them - Fix long name - Some cities disappear when you zoom. reply shadowpho 18 hours agoprevWow the large file isall the data present in the complete version except for country borders and shorelines. This reduces [the size] by 200k So about 29% is border/shore data, 71% is city names and locations Imo a lot of cities could be dropped, especially when they're on top of each other (not visible until you've zoomed in so far to see a grey landmass and that city name) to make the shorelines more accurate I'm also not sure how often a general location on a world map is needed. Wouldn't one more often want a low-KB map of the surrounding highways and transit lines one can use to reach the POI whose website you're currently looking at, for example? A version for every few km² on the planet could be built and you could have quite a lot of useful detail at a tenth of the size. Global low poly also has its purposes, like tracking the space station I guess, but it seems much rarer reply BodyCulture 15 hours agoprevLots of errors, why does this exist? What is the use case for a map without precision? reply echoangle 15 hours agoparentThat’s stated in the description. As a fallback and when you only need general location. reply thinkingemote 16 hours agoprevLove the service worker idea. What other things could service workers do with maps? reply yosito 20 hours agoprevThis is cute, and I can imagine there are some use cases for it. But I was disappointed to find out that it doesn't even have the 150km2 island that I live on. Maybe a bit too small for most cases. reply sgtnoodle 19 hours agoparentIt's funny that it doesn't have the great lakes. I guess it doesn't have any internal bodies of water. reply lloydatkinson 12 hours agoprevI think there's a flaw in this idea. > By default, the map displays the 10,000 most populous cities added to OpenStreetMap. At the time of writing, this encompasses all cities and towns with a population of at least 48,000: Statistically speaking, if you're closer to or even in those cities, you are more likely to have access to better network quality and speed. It's when you're in the more remote areas (or not near a population centre of 48,000 people...) that this project would be more useful. If this map is only 300KB zipped and as it mentions offline-first, then surely a 1MB version would get you even better fidelity and more remote locations? reply sodimel 21 hours agoprevReally cool project! reply thriftwy 21 hours agoprevI woule adjust city density based on surroundings. I remember getting lost in Maps.me while in northern Russia: zooming out will not display any tiny villages of the area whereas zooming in will not place any of those on the screen. So you got a blank slate. Meanwhile, displaying every suburb of a metropolis possessing a town status may be superfluous. reply RetroTechie 20 hours agoparentYou can always zoom to a level such that there's nothing there. And if all that is there is a few small villages, then \"nothing there\" isn't far of the mark anyway. If you include smaller cities to 'fill in blank spaces', then either: a) You'd have to drop a bigger city/suburb elsewhere. Not display a 1M town to be able to display a 10k town in thinly populated area elsewhere? Hmmm... b) Or the app get bigger. Which defeats the purpose of having a tiny world map. Want more detail? Just use some other app. reply globular-toast 21 hours agoparentprevInteresting comment. I guess it should be optimised for density uniformity somehow. reply marcosdumay 19 hours agorootparentThat's the way to do it. You get the map area, divide it by a constant and get the number of stuff your map should display. Then it's a matter of getting the largest-n stuff from the database. reply ImHereToVote 20 hours agoprev [–] Great product. Would be awesome if you could generate a smaller version depending on which part of the world you are biased towards. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Tinyworldmap is an offline-first and low-bandwidth world map compatible with Leaflet, showcasing the 10,000 most populous cities from OpenStreetMap at all zoom levels.",
      "Designed for low-end phones, it offers customization options, smaller versions without borders or city labels, and can serve as a base map or offline backup.",
      "Users can seek personalized maps or help in integrating offline features, making proper attribution to OpenStreetMap and tinyworldmap mandatory when utilizing the map."
    ],
    "commentSummary": [
      "The Tiny World Map project on Github focuses on enhancing map loading speed by emphasizing detailed coastlines and populated areas for users.",
      "Users propose enhancing island, lake, and river details, improving city and shoreline accuracy, and discussions around geopolitical intricacies and map optimization for various devices.",
      "The project actively engages with user feedback and suggestions to refine the world map for enhanced detail and accuracy."
    ],
    "points": 437,
    "commentCount": 82,
    "retryCount": 0,
    "time": 1713698473
  },
  {
    "id": 40105773,
    "title": "Career Transition: Lorry Driver to Ruby on Rails Developer at 38",
    "originLink": "https://www.writesoftwarewell.com/lorry-driver-to-rails-developer-at-38/",
    "originBody": "From a Lorry Driver to Ruby on Rails Developer at 38 I recently had the pleasure to interview Pedro David Garcia Lopez, a Ruby and Rails developer based in UK, who used to be a Lorry driver. What's interesting is that he decided to become a developer at the age of 38. This post shares his story and I hope you find it as inspiring as I did! Interview 11 min read Apr 19, 2024 Most traditional interviews are focused on celebrities or popular personalities. However, I am more interested in interviews with hidden gems, unknown figures doing solid work, folks overcoming challenges just to be on the same playground as everyone else. Hence, I wanted to start featuring some of them on this blog, providing a platform for sharing their compelling stories and valuable lessons. While they may not be on the covers of major publications or appearing on popular podcasts, their stories, backgrounds and experiences are nonetheless fascinating and worthy of a read. This post shares the story of Pedro David Garcia Lopez, who switched careers from being a Lorry driver to a Ruby on Rails developer at the age of 38, an age that many folks in the software industry consider to be too old (which is nonsense!). I came across Pedro on LinkedIn and found his story really inspiring. The main thing I want you to get from this post is: It's never too late to pursue your dreams, especially to start learning to program. It can unlock huge opportunities if done right. With that, let's hear Pedro's story. I hope you find it as inspiring as I did. Pedro David Garcia Lopez Q. Can you tell us a little about yourself? I am a 42-year-old Spaniard who moved to the UK in 2015, but I am now returning to my country to be closer to family, which I consider one of the most important things in life. I came to the UK in 2015 as a lorry driver, which was a tough decision. As a lorry driver, I spent more time in the UK than at home. Typically, I would spend around 4-6 days at home each month, and the rest of the time, I was on the road, travelling between the UK and other parts of Europe. I decided to move to the UK to embrace new opportunities and allow my daughter to do the same. Additionally, I wanted to learn English properly, which I'm still working on. As a professional driver, I have driven almost every type of vehicle on the road, and I have travelled to all the EU countries on the continent at least once. In fact, I cover enough KM in my lorry to circle the world several times over. As a developer, I fell in love with Ruby and Ruby on Rails the first time I learned about them. I plan to stick with them until it is still possible, as I don’t think anything similar is out there regarding developer happiness and productivity (opinion from my small watchtower!); I worked with PHP for a small period as well as JS (many flavours), but nothing comes close to Rails and Ruby. I consider myself a full-stack developer as I have good skills in CSS, good attention to detail in the front end, and some notion of UI/UX, but there is always room to improve in those areas. I also love working in the backend. Basically, I'm a Master of none 😜. Q. How did you get into programming? Well, this is an excellent question and quite long to answer. My first interaction with a computer was when I was around 12 years old as part of a typing course that summer when we moved from more advanced setups to a computer, sometimes working on MS-DOS or Windows 3.1. Since that day, I have been fascinated by those wizard machines. Coming from a modest family, the chances of having a computer were low. Still, the death of my father at the age of 14 and the need to start working to support my family at the same time as studying put them at the level of finding a unicorn. Still, my love for computers never disappeared, and I never missed an opportunity to play with them at school or the library. That was until, at the age of 18, I went to full-time work, and with three months of saving, I bought my first computer, a Pentium II; having a computer in my hands now, I started to feel the need to know how to program it. Photo Credits: Midnight Geek (YouTube) So I bought a book to learn C++, which was a big mistake, as it was too technical and a deep book. I got really confused, and I could never do anything interesting at all. Then life took over. I never really went into programming, but years passed, and I became a lorry driver by need and came here to the UK. But, I still had a passion for computers and being good at them. With my English skills improving and the easily accessible information out there, at some point, my little child's dream called to the door again. I took a few YouTube courses here and there, HTML, CSS, JS, the typical course of \"Become a programmer in 7 days\" kind of things, then I discovered freeCodeCamp, that was a bit more structured and serious, but still I found that I was missing something. My long hours as a lorry driver and doing my duties as a dad and a husband didn’t allow me real serious time and pace to become a developer. So, after all those years of hard work and caring for my family, I decided to pursue my childhood dream of becoming a developer. I quit my stable job and decided to try one year to become a developer or return to my life and scrap this idea forever. In September 2019, I started my adventure, but what path should I follow? There are too many: Python, JavaScript (which was trending), C#, PHP, frontend, backend, DevOps, etc. There are way too many to pick just one if it is not right. So, I decided to learn Python and buy some Udemy courses (there were too many!) to learn the basics. It wasn't as bad as my C++ experience but didn't quite click. I could follow but not create, so quickly I realized that that would not work for me. I was losing a bit of faith, but after doing some research, I came across the concept of Coding Bootcamps. After some back and forth to make that decision (all options were expensive 💰), I decided to join Flatiron School. If you couldn't secure a job after completing their course, you didn't have to pay them anything. It made me feel that I had little to lose in that sense. So there I learned about Ruby and its basics. I also learned software development in a structured way, from Ruby and Sinatra, to Ruby on Rails and React. All supported by teachers, colleges, and good assignments and exercises to make you not only follow, but also create new things. The sense of pride and accomplishment I felt after completing my first projects was unforgettable, so by the end of May 2020, I graduated from the course with a sense that I could actually do it. I felt like I knew things now; I do not just know things; but I know how to figure things out and how to learn new things on my own. By the way, do you know what happened in 2020? Yes, it was COVID. I had to start finding a new job in those circumstances. The lockdown was still around, so there was no interview or chance to connect with people; a 38-year-old man with no experience and fresh for a Bootcamp doesn’t seem like the ideal hiring candidate companies were looking for... Even with post-graduate support from Flatiron, things were tough. Not a single interview or call for months; I was feeling quite anxious about my CV, wondering if it was just going to end up in the bin, but I felt that I could do it, and my passion was higher than ever. I didn’t want to go back to driving. Finally, the first opportunity arose in Manchester, two hours away from my home by Train (no Work-From-Home policy) and a salary that was 1/3rd of my salary as a lorry driver, most of which went to pay for the Train… working with PHP and jQuery, but you know what, I didn’t care about any of that as it was my dream. I accepted that offer; I had to start somewhere, and if life has taught me something, it is that with hard work, everything is possible. Q. How and when did you come across Ruby and Rails? What do you most like about them both? I first learned about Ruby and Rails through the Bootcamp, but working at Superbyte, I gained more experience with them. At Superbyte, we used a non-standard stack (Mongoid and some React), but I learned a lot from the team and gained a lot of experience. My passion for it grew stronger after gaining professional experience with Ruby on Rails. Everything becomes much easier to handle once you get familiar with its conventions. I find the community and the constantly evolving ecosystem to be the most appealing aspects of it. I am excited to move on from React and embrace the fresh air of the Hotwire ecosystem, which allows me to handle everything the Rails way. Q. 5 programming books that meant most to you, and why? I didn’t have the time or passion to read technical books until later in my small career, when I noticed all the gaps I had in many areas, so I haven’t read many, to give a good list of the ones meant the most to me. Too many still to read. But my list with no specific order will be: Layered Design for Ruby on Rails Applications, by Vladimir Dementyev Rebuilding Rails by Noah Gibbs Ruby Under a Microscope by Pat Shaughnessy Practical Object-Oriented Design in Ruby by Sandi Metz I should revisit some of them as my perspective and way of seeing things are still in progress and constantly evolving. I am still on a learning adventure for all these principles that other people from a more traditional background have learned while I’m still discovering them. Q. Who are your programming heroes? I greatly admire individuals who possess the skill to program and a passion for it. Those who go further by sharing their knowledge and experiences with the world truly stand out as heroes. Their willingness to educate others and contribute to the programming community's collective growth is commendable and inspiring. Special mention to Quincy Larson, freeCodeCamp and all the content creators like you who put a lot of time and effort into sharing. On the personal Avi Flombaum, one of my Teachers at Flatiron School. He shares amazing content on his blog, and every person I have worked with has taken the time not just to help me but also to help me grow as a developer and as a person. Q. What does your typical day look like as a developer? What do you like the most about your current work? In my short career, I have worked in all setups, from fully WFH to hybrid, to working five days in the office. Now that I plan to return to Spain, my new job will be fully remote. I’m transitioning to a new Role in gocertify in mid-April, so I am unsure what my day will look like. In my role at Superbyte, I transitioned from Junior Developer to a more semi-senior role, where I was involved in writing code, conceptual designs, and some R&D. Most of the time, I write code but also enjoy pair programming sometimes with others and review PRs. I love to teach as I think it is the best way to learn any concept, so I am always keen to help my peers suggest new approaches or learn from them. Q. What resources and practices do you recommend for learning and keeping up to date? Learn how to learn. Everyone is different and has different ways to learn and retain what has been learned. I advise learning how to learn and find what works best for you. I learn by doing or watching a tutorial and trying to replicate or go beyond the tutorial in the areas I want to learn. Like books, I read them first, no coding, and then I read them again more like a guide than a following. One important thing is to not feel like you must learn everything. Not everyone needs to know everything. Take something you like and focus on that thing. It will take you further than trying to learn too many things and ending up just spending a lot of time fake-learning. Q. What advice do you have for new programmers? The silliest question is the one that is not asked. Work hard, be bold and ask questions. The silliest question is the one that is not asked. Don’t feel like you are not good enough or you know too little. Everyone eventually has been in the same situation at some point, so keep it going. Learn Ruby and Rails. You will find it not just easy, but also enjoyable, once you get to the turning point. Another good thing is to find a mentor or someone who is keen to help you grow. There is a good possible resource for that: https://firstrubyfriend.org/ For me, it is all about passion; it was a hobby, but now it is my job. \"If you find a job you love, you’ll never work again...\"— Winston Churchill Q. Tools of the trade - What are some of your favourite software programs in your day-to-day work? Code editor: VS Code Database GUI: MongoDB Compass Terminal: iTerm with ‘oh my zsh’ Browser: Chrome Notes and Project Management: Apple Notes, VScode markdown, Github projects/issues Communication: Microsoft Teams. Q. What’s the best way for people to connect with you? I’m not really active in socials, but I always keep an eye on LinkedIn. LinkedIn Twitter/X: I just found out that my old personal website, which I had written with Django, is down as the free host I hosted it on is no longer available, so it is a good opportunity to rebuild it in Ruby on Rails and start my blog www.lorrydriveloper.com which, I hope, will be up and running soon. That's a wrap. I hope you found this interview helpful and useful. If you enjoyed this one, I think you might enjoy the following ones: Interview with Daniela Baron, Staff Engineer at FundThrough I recently had the pleasure to interview Daniela Baron, a Ruby and Rails developer and staff engineer at FundThrough, a fintech company based in Toronto. It contains a lot of interesting and thoughtful answers as well as a ton of high-quality recommendations for books and podcasts. Enjoy! Write Software, WellAkshay Khot Interview with Miles Woodroffe, former Global CTO of Cookpad Miles Woodroffe is a veteran Ruby & Rails developer who served as a Global CTO at Cookpad for many years and represents the company as a founding board member at the Rails Foundation. I recently had the pleasure to interview Miles, and he graciously provided very thoughtful and interesting answers. Write Software, WellAkshay Khot And you have to watch this video! As always, if you have any questions or feedback, didn't understand something, or found a mistake, please leave a comment below or send me an email. I reply to all emails I get from developers, and I look forward to hearing from you. If you'd like to receive future articles directly in your email, please subscribe to my blog. Your email is respected, never shared, rented, sold or spammed. If you're already a subscriber, thank you. Tags Interview Share with friends Link copied Posted by Akshay Khot I'm a software developer living in beautiful Victoria, BC. This blog is my attempt to share my learnings and to spread the joy of programming in Ruby with the world. Join our newsletter Subscribe to get the new posts via email. Your email address is never sold or shared. Enter your email Subscribe Processing your application... Success! Please check your inbox and click the link to confirm your subscription. Sorry, something went wrong. Please try again. You might also like Interview with Daniela Baron, Staff Engineer at FundThrough Interview 11 min read Interview with Miles Woodroffe, former Global CTO of Cookpad Interview 8 min read Featured Announcing: Rails Companion - Build a WebApp in Ruby Without Rails Rails Companion 8 min read Annual Blog Review: 2023 Annual Review 31 min read Announcing: Crash Course on Turbo (Hotwire) Framework 3 min read Akshay's Blog is now Write Software, Well 4 min read",
    "commentLink": "https://news.ycombinator.com/item?id=40105773",
    "commentBody": "From a lorry driver to Ruby on rails developer at 38 (writesoftwarewell.com)265 points by ksec 20 hours agohidepastfavorite172 comments kgf1980 17 hours agoI went the opposite way (in the UK) and moved from development (mainly C#) to lorry driving (everything from 12T rigids to 44T artics) however in my free time I’m enjoying developing (some RoR, some Golang) more than when I was paid to do it. Although I’m working more hours (average 50-52 hours a week compared to 38-40), I’m also much better compensated doing HGV driving than I ever was as a developer (although that may reflect more on my skills/level as a developer than anything else) reply datascienced 14 hours agoparentThis is what rest of the world looks like USA people! Developers are generally paid enough to get by but not crazy salaries. There are exceptions but required you to get through tough interviews. No $200k TC interns out here. It means picking up a trade or just doing a scrum master job or traffic duties become viable alternatives. Developers are caught in stagflation. Buying a property in Sydney metro area (within 90m commute) for example would be challenging for most devs. Prices have tripled and over the frame of 15y while dev salaries or contract rates have not increased. reply piltdownman 35 minutes agorootparentTruck (Lorry) Driving in the UK paying what it does is an economic aberration caused by Brexit and Covid 19 - e.g. 16,000 fewer EU nationals working as HGV drivers in the year ending March 2021. In the end they had a shortage of nearly 100,000 drivers and had to massively incentivise new entrants to the industry. It's a complete outlier as far as blue collar vs white collar jobs in the UK/EU for the most part. https://www.bbc.com/news/57810729 That said, overall the EU is paying somewhere around €80-120k for Senior Developers in the HCOL areas and as low as €45k in places like Spain. Overall, individual Contributor salaries outstripping even minor middle management is rare below architect or principal outside of FAANG. This leads to the situation the commenter above identifies - that fairly vacuous softer-skill based IT Roles like Scrum Master or ART or Release Manager out-earn the median Engineer and are seen as a viable alternative for motivated people. reply devjab 4 hours agorootparentprevWhile what you say is sort of true, developers are paid better than what you made it sound like for me. The difference is perhaps that professions like truck drivers and a lot of tradeskills are compensated very well because there is a general lack of people in those professions. We also have very strong unions (and legislation because of it) in those areas, so it’s not easy to “displace” (is this the right English word?) truck drivers with cheap foreign labour in a lot of EU countries. Unlike professions like plumbers, however, IT personal is becoming increasingly easy to come by. And since they never really formed unions, the so called golden days are over for a lot of IT professionals. Maybe excluding hardcore IT operations, networking and at least for now developers. I wouldn’t be able to earn what I do as a truck driver though. Maybe half with more hours? Interestingly enough I didn’t get there by being rewarded for any work. I got there by switching jobs. reply Tade0 3 hours agorootparentprevIn outsourcing destination regions like South America, the European eastern block(my location), India and SEA, software engineers still make multiples of the average wage for the region. It's the geopolitical west that's largely stuck in this situation, but IIRC that has been the case for a while now - when I was considering emigration around eight years ago I noticed that the salary differences are not as huge as I thought and in some places (like Germany) it's just a job like any other. reply oooyay 6 hours agorootparentprev> This is what rest of the world looks like USA people! This statement really depends on whatever part of the USA you're in and what kind of work you do. > No $200k TC interns out here. I haven't seen that yet, but I think an SF-based intern (if they were paid for the whole year) would make roughly $120k. There are plenty of people living in the Bay who haven't lived there 10 years who comparatively take home very little. All that to say, I don't think we need to dice up and turn the developer market against itself. We've all been affected by wage stagnation, the rising cost of metros, and the threat that we must live in them or else. Labor movements are good for all laborers, etc etc etc reply datascienced 6 hours agorootparentI hope from the comments people seek higher wages for their worth - if everyone did this it would create a force pushing up dev salaries. The tech profits can more than handle this and smaller shops would have to stop doing inefficient stuff. I think cheaper devs allows laziness in thinking. Just throw a bigger team at it, see if it sticks. reply datascienced 6 hours agorootparentprevEdit: stagflation is the wrong word I think as that means high unemployment. I wouldn’t say that is the case, just suppressed wages. reply BoorishBears 13 hours agorootparentprevBut I was promised free healthcare and more vacation time makes it all even! (I've always loved that narrative for its optimism. In reality if you have a modicum of self-restraint you can save more money on a US salary than most people are making on a European salary, and tech tends to have excellent healthcare.) reply niemandhier 13 hours agorootparentIt does, I did the math when I was offered a 100k+ position in the US. After computing what I would have to pay for: - Piano lessons for the kids - child care - sports clubs - golfing - private tutors - rent / mortgage I concluded that my quality of life would decrease. Europe is crazy cheep for families. The UK is particular, brexit did not do them any good. reply pedrosorio 11 hours agorootparent> It does, I did the math when I was offered a 100k+ position in the US. 100k+ has been close to the floor for entry level for a while now. Did you do the math on how much you'd earn over 10 years? reply yoyohello13 10 hours agorootparent100k is the floor? Where do you live? I swear most devs on HN have had their brains addled by inflated salaries. reply titanomachy 10 hours agorootparentIt would be unusual for a new college grad at any well-known tech company in Seattle to make less than $150k right now. Large companies like Amazon, Microsoft, and Google dominate the market here. If you were starting a software company in Seattle, $100k would probably be enough to interest only the most inexperienced and unqualified candidates. New York City and San Francisco Bay Area are similar or higher. I don't have much experience with the rest of the US. reply fooker 10 hours agorootparentNot just Seattle, I am seeing tech salaries in Denver, SLC, Austin, etc starting from 120-30k nowadays (and growing VERY fast if you stick around for a few years because the smaller cities have trouble keeping experienced engineers from taking a 700k offer from some FAANG company.) reply Manuel_D 9 hours agorootparentWho's getting the 700K FAANG offers? I say this as someone who just took an offer with ~390K TC for an Amazon SDE III or Meta E5 equivalent at FAANG. 10 YoE. Aside from equity value increasing, I don't think 700K without factoring in rising stock prices is common, outside of niche in demand roles. reply titanomachy 4 hours agorootparent700k is deep into staff+ territory. One needs to complete something unusually noteworthy to cross that line, years of experience alone is not sufficient. reply fooker 9 hours agorootparentprevMeta E5 (~4 yoe) is 520k, and E6 is 760k (~7-8 yoe) according to levels.fyi Seems close to what I have seen offered there. reply guessmyname 8 hours agorootparent> Meta E5 (~4 yoe) is 520k, and E6 is 760k (~7-8 yoe) according to levels.fyi It depends. https://www.levels.fyi/companies/facebook/salaries/software-... Taking a close look at the data provided in this page, beyond merely considering seniority level and years of experience, reveals a noteworthy trend at Facebook. Many individuals are being hired at level E5 (Senior) with 6-8 years of \"relevant\" experience, and some even with 10 or more. Some candidates with fewer years of experience, such as the 4 years you mentioned in your comment, are joining Facebook with PhD or Master degrees, which significantly bolsters their overall qualifications. We’re not talking about just any programmer with 4 years of experience in web design straight out of a Bootcamp. These individuals are typically Ivy League graduate students with PhDs or Masters, and approximately 4 years of experience at Tier-1, or at the very least, Tier-2 companies (Fortune 500’s). To illustrate, consider a recent data point submitted to Level/FYI on March 26th, 2024. This individual has been working at Facebook for 4 years and has accumulated a total of 10 years of work experience. Currently specializing in ML/AI, their total compensation amounts to $410,000 (comprising $230,000 in cash per year, along with $180,000 in RSUs per year). reply fooker 8 hours agorootparentPoint taken, you cherry-picked a particular low number from the chart though, you could easily do it the other way and find a E5 making 600k at Meta. Apple pays a bit below the silicon valley average, I am not quite I understand sure why---they sure have the money. I had a conversation with an Apple recruiter a couple of years ago who assured me this was not the case, and then eventually their offer was ~25% below my contemporary TC. Also Canada tech salaries are quite a bit below US west coast levels. reply lannisterstark 6 hours agorootparentprev>I swear most devs on HN have had their brains addled by inflated salaries. Are you sure it's not just a coping mechanism (I can't find the right word, sorry), for those who didn't get those salaries to say this line? Even in PHX my company offers 95k as starting base for junior devs. reply pedrosorio 8 hours agorootparentprev\"had their brains addled\"... no need to be mean https://tomazweiss.github.io/blog/so_2023_compensation/ reply Manuel_D 9 hours agorootparentprevEntry level for my job in the Bay Area was 110K salary an about a other 70K in RSUs. This was 2015. Granted this was probably above average, as it was a medium sized but highly regarded company. reply sethammons 9 hours agorootparentprevIn socal, the dev interns I was managing a couple years ago were paid $50/hr. That is a bit over $100k/yr reply A4ET8a8uTh0 9 hours agorootparentprevEh, I would have agreed maybe a decade ago, but the past years have seriously eroded USD buying power[1]. For example, for that 100k in 2014 to be equivalent in 2024, you would need 133k or that your adjusted for inflation dollars are 76K ( and that is BLS ). 100k is the floor, because 100k used to actually mean real money. I no longer think it is. I earn more than that and I believe we are struggling. I don't know how other people manage. [1]https://data.bls.gov/cgi-bin/cpicalc.pl?cost1=100%2C000.00&y... reply vundercind 8 hours agorootparentprevFloor’s around $70k-80k for a new grad in my 3rd-tier (but still a couple million population) non-coastal US city. A couple major tech firms you’ve surely heard of are based here, plus some other really big ones you definitely know of if you work in the industries they serve. Not just offices—headquarters. The benefits will be decent, but nothing special, at a big place and dogshit anywhere smaller, so it’s not made up there. You’ll probably have 10 vacation days, maybe like 14 if they pool vacation and sick leave. reply rustcleaner 9 hours agorootparentprev$100 is floor?! Here I am at $36 in Socal! I'm in the wrong line of work... reply bobthepanda 5 hours agorootparentprevare piano lessons, private tutors, and sports clubs regularly affordable in Europe? those hardly sound like government provided services reply tyfon 4 hours agorootparentMost of it is government provided here in Norway. My daughtes do (private) piano lessons and theatre and it's organized and paid by the muni. Sports clubs might have a small fee for equipment, but it's also heavily sponsored by the government, the national lottery etc. For the things not free you can often have them paid for if you are in the low income brackets, and some places just give credit for those types of activity to all children. The reasoning is that children of low income families shouldn't be excluded. reply fooker 4 hours agorootparentA lot of US public schools provide this, but the quality can be questionable in/around large metros. reply mokkol 1 hour agorootparentprevHere in Spain, I pay €35/month for weekly piano lessons for my daughter. She loves it and we are really happy with her teacher as well. All from the public music school. reply fooker 11 hours agorootparentprevWould you mind sharing your math? I had concluded the opposite if you compound over 5-ish years. With two tech incomes, you'll make approximately 4-5 million in the US counting equity, versus about 1 mil everywhere else except maybe Zurich. US expenses over 5 years would be about 800k-1mil excluding a home which you are likely going to sell for far more than you pay for. reply saithound 4 hours agorootparentLet me share my math. Let's just take one perk I get to enjoy right now: I can afford to live in a high density city block with a long-term average yearly homicide rate below 4 per 100000 inhabitants. In the U.S. I could replicate this only by purchasing a city block sized campus for myself and then investing in very very good screening of tenants and a private security force. Based on average salaries of police and municipal infrastructure workers, combined with real estate prices in major U.S. metros, even with a bit of optimization, I couldn't get the cost to go below $2,150,023,240 for the first year (including real estate purchases) and about $1b yearly afterwards. I could maybe go lower by building my own city block somewhere outside a major metro, but I think infrastructure costs would eat that up. And that's just one perk I got to enjoy: others, such as living within walking distance to my workplace, would be even harder to replicate. Yet others, like the ability to visit a borthel without having to worry about losing my job or going to jail, are nigh impossible. Sure, there's additional efficiency where one action can help achieve multiple such perks, so let's assume I could replicate the lifestyle I enjoyed for a measlt $1b pa. That's about 8000x the annual income I had when I retired. And US salaries are not even 10x higher than Australian ones, so as far as I can tell, the math is not even close to working out. (Of course, not everybody cares about these specific perks, and for some the U.S. may be a better fit. They're welcome to emigrate: the ones who don't appear to care enough to vote and keep these policies in place every 3 years, so I doubt anybody's getting the short end of the stick. The point is that it's stupid to compare salary numbers, because a lot of the things people want are trivial conveniences here and still unaffordable for even the richest people in other places, and vice versa.) reply titanomachy 3 hours agorootparent> achieving a homicide rate below 4/100k would require building a secure compound and hiring live security This is a little silly. There are many US cities that meet that standard. Seattle's rate is 6/100k which sounds reasonably safe to me. I've never known anyone (and none of my friends knows anyone) who has died by intentional homicide. It's simply not something that we worry about. > living within walking distance to work is hard to replicate Why would this be the case? Major cities have both large tech offices and dense housing. My office has many apartments, townhomes, and single-family homes within walking distance. The neighborhood it's located in is quite livable. > visiting a brothel without losing my job is impossible This one is probably true. If regular brothel access is a priority, then the US is probably not a good choice. Nevada might be an exception. reply varjag 1 hour agorootparentThe brothels bit is oddly specific, but it's worth mentioning consuming prostitution in many European countries (including some of those with top wages) is illegal. reply saithound 3 hours agorootparentprev> I've never known anyone (and none of my friends knows anyone) who has died by intentional homicide. It's simply not something that we worry about. I do know people who were hit by a car while crossing residential streets. I don't know any people who were hit by a car while crossing a highway. This doesn't mean highways are safer to cross on foot than residential streets. Similarly, the people who are not murder victims in US cities must change their natural behavior in thousands of costly and humiliating ways so as to not become victims, and all that effort still doesn't keep the murder rate lower than the 30-60s that US downtowns have. Do you mind your own business while a teenager walks out of the grocery store without paying? Congratulations, you won't show up in those homicide stats. But it's not merely the stats that were the problem: it's the amount of social disfunction that it indicates and you won't buy your way out of that by any realistic higher salary. Similarly, I don't personally know anybody who died of lung cancer, but would also not be keen to wear a respirator so that I can safely eat in a restaurant where people smoke. > There are many US cities that meet that standard. Oh, I'm sure there are many such _cities_. But that's not the rate of my city, it's the rate of the high density business district I live in. The city itself has a still lower homicide rate, but it's not relevant. I can't find data about the homicide rate of high-density living downtown areas of Seattle, but I doubt it's lower than that of the city itself. > living within walking distance to work is hard to replicate Because then you have to make your city block purchase in the immediate vicinity of your employer's office, which will further increase costs since you won't be able to choose among the cheapest high density city blocks. reply titanomachy 3 hours agorootparentI don’t have access to statistics for specific neighborhoods either, but I’m willing to believe Australia is safer in that respect. Singapore’s rates are so low that they make Australia and the US both look unacceptably dangerous. Perception is relative. I’m not aware of any humiliating ways that I change my behavior to avoid being murdered, although perhaps if you observed me for a few days you would notice some. I have never looked into buying an entire city block so can’t comment on that. I’ve been content with a single home so far. reply saithound 3 hours agorootparentTo be clear, I am not looking into buying an entire city block: I am glad I can afford to live the lifestyle I want without having to. This wouldn't be available in the US, which is why the math didn't work out and I didn't move there given the opportunity. And I get salty when people like GP insist that this implies faulty math skills. I'm glad others who have different preferences can live elsewhere and do their own thing, though, especially if I am separated from them by land and water. Re murder rates: I can't find data for Seattle, but based on data I could find (San José below, LA) I'd expect the rate to be about 10x higher for downtown high-density areas than for the whole city. Which is pretty bad. reply fooker 4 hours agorootparentprev>I can afford to live in a high density city block with a long-term average yearly homicide rate below 4 per 100000 inhabitants. It's great you gave a clear threshold instead of making it vague. Here are some US cities that would satisfy this criteria according to wikipedia (https://en.wikipedia.org/wiki/List_of_United_States_cities_b...) : San Diego, San Jose (yeah I'm surprised too..), NYC (also unexpected!), Portland, Seattle. reply saithound 3 hours agorootparentLOL. That's not the rate of my city, it's the rate of the high density business district I live in. The city itself has a much lower homicide rate, because there are large suburbs where people onpy sleep and nothing ever happens. The homicide rate of Downtown San Jose (the closest equivalent area) is a whopping 41/100k. So not a good look there. reply yoyohello13 10 hours agorootparentprevWtf? So if you and your partner get a top 1% tech job in the US you can out earn an average job in Europe. No shit! reply fooker 10 hours agorootparentThe math is more like: top 10% of tech jobs in the US would make ~3-4x of top 10% of Europe. And there are so many tech jobs in the US that this top 10% is much larger in number than anywhere else. There's a reason people emigrate to the US from everywhere despite pretty harsh work environment and social security nets. For example, a Google IC5/6 in Paris would make between 150k-200k vs ~500-700k in the bay area. reply rsynnott 26 minutes agorootparent> For example, a Google IC5/6 in Paris would make between 150k-200k vs ~500-700k in the bay area. Having worked for Big Tech(TM) in Ireland, I'm a _little_ sceptical of those numbers. There's a big gap, but, at least in the mid levels, it is not _that_ big. Levels.fyi seems to have paywalled most of their data, so I can't find what Google pay in Paris, but the lowest they show for total compensation for an L6 is $390k, highest $720k. Both of those are serious outliers; median is $550k. While I'm always a bit suspicious of levels.fyi data, I think you're seriously exaggerating how big the gap is, at least in big tech (it can be a lot bigger in small startups). reply jorvi 9 hours agorootparentprevThat’s 150-200k on the earning side. In most European countries this has a bunch of social security pay-in, pension pay-in, employer-side employee tax etc. already paid for via the employer. The “real” wage is often close to double, so 300k-400k vs 500k-700k, which doesn’t sound nearly as grim once you factor in the much better quality of life. reply fooker 9 hours agorootparentYes, you can make the math work for you by factoring in subjective criteria like quality of life. > on the earning side I'm not sure if you are aware but some of the things you mention are also provided by good employers in the US, but they are not obligated to. reply isodev 6 hours agorootparentprevVery much this. Folks tend to compare absolute numbers at the top of their payslip while forgetting all the rest. You don’t get good roads and healthcare out of nothing. reply esoterica 5 hours agorootparentprevA pension is not worth 150k-200k a year in compensation. Also taxes are higher in most of Europe, even taking payroll taxes into account (I assume that's what you mean by social security pay in). reply skullone 10 hours agorootparentprevAnd the bay area apartment would cost $8k/MO for a 3br/2 bath to raise a single kid in. reply fooker 10 hours agorootparentYes, it does. You are likely not going to be renting an apartment with that kind of money, you are just making your landlord rich. Instead, you put a 200k deposit, pay the same 8k per month as mortgage (approx 1/3rd of your salary is the rule of thumb), and sell the house or apartment after a while. That way, you are not losing any money. Check https://www.nerdwallet.com/mortgages/mortgage-calculator for confirming these numbers. reply cudgy 9 hours agorootparent… unless the price of properties goes … down reply fooker 9 hours agorootparentIf it goes to zero, it is almost equivalent to have payed rent for 30 years! ;) If it becomes half, you still have a home to live in rent free. More likely it doubles every 10-15 years. reply readyman 10 hours agorootparentprevYour math is based on you and your partner making 400k-500k/yr lol. reply fooker 10 hours agorootparentYes, that's what we make right now on average. If you work in tech for a few years that's kind of average. We are having a new PhD grad join next month with a 400k TC offer. If you have trouble believing me, check out levels.fyi for (Facebook:E5, Google:L5-6, Nvidia:IC5, Apple ICT5). reply readyman 10 hours agorootparent>Yes, that's what we make right now on average. >If you work in tech for a few years that's kind of average. You should probably learn what \"average\" means if you're getting paid that much to develop software. reply fooker 10 hours agorootparentThe first average is between two people over a few years. The second average is for similar tech jobs. But good job resorting to ad hominem. reply ok_dad 10 hours agorootparentI’ll buy that 400-500k a year is average for Facebook, Apple, Google, etc. It’s absolutely NOT average for companies who aren’t the massive giants that those are. I’ve been in actual tech startups, not Uber for Clowns, and the best salary I’ve seen was an (admittedly very good) $170k for a senior dev position. That’s close to average when I talk to my friends and associates in tech in the valley and beyond. reply fooker 10 hours agorootparentThe etc in your first sentence is doing a bit of heavy lifting here. There are so many companies in that category now that if you have any specialized software skill (compilers, ML, database engines, OS, systems in general) you can absolutely make that much if you wanted to. If you don't believe me, and have such skills, spend 20-30 days interviewing! Sure if you are a typical full stack developer you are not going to make that much money unless you get into Google or something. Also, base salaries are typically not that high, but the total compensation with equity can reach that pretty easily. reply ok_dad 8 hours agorootparentI guess in the energy tech industry no one pays that because I’ve been looking, and I have pretty specialized skills. reply fooker 8 hours agorootparentMakes sense, it's interesting to see this discrepancy between fields. Could you elaborate what specialized skills though? reply ok_dad 8 hours agorootparentI write software systems to control devices in buildings in the context of energy savings, like hvac and charging cars, and also control attached distributed energy resources, like batteries or solar. reply varjag 45 minutes agorootparentSee when people say \"tech\" colloquially it means website and app developers, not us embedded dev hobos. fooker 8 hours agorootparentprevA friend started working in this space last year. It seems like the usual story here is smaller companies giving you lottery tickets in the form of pre-IPO options. And large established companies paying a bit below market rates. reply esoterica 5 hours agorootparentprevFacebook, Apple and Google are very big companies which hire a lot of very well paid engineers. We're not talking about being an NFL quarterback or something where only a small handful of people will reach that level. Being a big tech engineer is probably the easiest and most achievable path to $500k/year on the planet. reply machomaster 10 hours agorootparentprevIf you say something ridiculous and get gently called on it, it does not mean ad hominem. reply justin66 10 hours agorootparentprevI would have put it differently, but your use of “average” made me wonder what you were thinking as well. I’m still not quite sure. You’re not a hypothetical person whose salary and job prospects are unknown to… you. If you’ve received job offers locally and overseas that would be interesting, but what you’re talking about sounds like speculation. reply fooker 10 hours agorootparent>If you’ve received job offers locally and overseas that would be interesting, but what you’re talking about sounds like speculation. Yes, I had considered moving to Europe after completing my Phd. The offers were about 1/3rd of US, with a significantly lower potential for growing beyond a few tens of percentages over 5-10 years. reply georgeburdell 5 hours agorootparentprevOk so you’re in a hot sub-field. Your experience is not typical even at the companies you’ve named. And it’s definitely not typical “after a few years”, unless it’s a new PhD in hot field * top tier company * multiple good reviews. And you’re probably extrapolating the anomalously good stock performance that frankly you have no control over. Your average Leetcode drone that makes it into those companies is making $300k after 5 years. reply fooker 4 hours agorootparent>Ok so you’re in a hot sub-field. Compilers. Not hot, but a bit niche so it sometimes pays well. Not any more than ML or distributed systems specialists. >Your experience is not typical even at the companies you’ve named You can check levels.fyi for averages, don't have to rely on my word. >Your average Leetcode drone that makes it into those companies is making $300k after 5 years. You are right. So, now the question is: given you are not an 'average leetcode drone' do you work in the US or Europe. I hope this clarifies why competent European computer scientists and engineers move to the US in large numbers. reply BoorishBears 9 hours agorootparentprevI'm 30, I can effortlessly save 100k a year after spending money on everything you listed. If you're happier in the EU that's fine, but the math definitely doesn't check out for people focused on finances: even when you take soft benefits into account reply nasmorn 1 hour agorootparentI made 245k USD before taxes in the EU last year self employed. Most people I know cannot believe how much money I made. To make that money you don’t just need to be an average leet Code drone but negotiate great contracts on your projects and take on and manage a lot of risk. What I am saying is: the math definitely doesn’t check out because apparently someone in my position would be doing 3x in the US reply admissionsguy 13 hours agorootparentprevFew people realise that the EU countries and the US are no longer in the same wealth category. There is a 50% difference in GDP per capita between Germany and the USA, for example. It's not a matter of offering benefits in kind instead of money, but rather a fundamental difference in resources available. reply leipert 10 hours agorootparentThe GDP per capita in the US is (85k USD) and in Germany (54k USD) nominal. That’s about 57% higher. At PPP (purchase power parity) 85k US vs 67k Germany, which “only” is a 27% difference. Denmark rates at 68k / 77k. So much closer. Norway is tricky to compare and Netherlands, Ireland and Switzerland are tax havens. - Nominal: https://en.m.wikipedia.org/wiki/List_of_countries_by_GDP_(no... - PPP: https://en.m.wikipedia.org/wiki/List_of_countries_by_GDP_(PP... reply admissionsguy 1 hour agorootparentThe population of Denmark is equal to that of Wisconsin. If we look at Denmark simply because it's among the richest EU countries, it might be more appropriate to compare it with the richest US states. Taking the top 5 state (California), we get $100k vs $68k (nominal), again ca 50%. https://en.wikipedia.org/wiki/List_of_U.S._states_and_territ... reply varjag 1 hour agorootparentprevThese estimates are really approximate and depend on the exchange rate. The lowest rate of NOK/USD on my memory was 5.6 and the highest nearly 12. Developer salaries in Norway are decent as Europe goes but if you want to make money hand over fist there's no other place like America. Yes even with all the old world perks imaginable. reply mchaver 1 hour agorootparentprevWell, I also like that my neighbors and community also have access to no-pay-at-point-of-use healthcare, low cost education options and guaranteed time off. Makes for a relatively relaxed and content population! If you don't invest in (or put up lots of barriers to) the health and education of the entire community, then you are going to have an unhealthy and uneducated community. That's not to say we don't have many problems, but in my personal experience it's a lot less than the US in those regards. reply lannisterstark 6 hours agorootparentprev>I've always loved that narrative for its optimism Despite all the European love, most of Europe (and rather, most of the world) is pretty poor compared to US. reply datascienced 7 hours agorootparentprevOutsiders have the disadvantage of needing a visa but the advantage of a $2k excess (the cost of the return flight) for unlimited chronic condition management. Obviously ER is different as you can’t go home quickly. Once you return home you might get to keep the job while in the hone country and rake it in. reply cloudripper 14 hours agoparentprevI appreciate stories like this as a reminder that it is never too late to make a change in your life that is right for you. Some folks stick to their comforts and avoid such a big life change out of fear - but sometimes the temporary discomfort can lead to greater fulfillment in the long-run. Whether your coming from or going to lorry driving - or any other job role, keep telling your story and maybe your path will be an inspiration for someone going through their own jaded, burn-out experience. reply pavel_lishin 17 hours agoparentprevI am consistently enjoying myself more when doing coding side projects, than anything at work. I think that's just ... sort of normal when your profession and your hobby are the same thing - when you don't have any boss except yourself. reply kgf1980 17 hours agorootparentI think for me it’s not having a time pressure - if it takes me 2 weeks spending 2 hours a day to implement something there’s no issue when it’s just projects for myself (I’ve basically written a PWA for tracking my pay, hours, rest time etc which I use every day, and implement a new feature I decide would be useful when it comes up, so kind of the ultimate dog-fooding) reply ipaddr 14 hours agorootparentI' m the opposite. I put myself under 2 week sprints at home. Imagine someone is working on the same idea and put pressure on myself to get done and release. At work I hold things an extra day or more so I have something easy to say at the standup. Stands ups at work force this slow pace because it sounds better and is easier for others to follow. reply jmkni 13 hours agorootparentprevI've come to realise that actually coding is the part of software development I enjoy the least, and in many staff software engineer positions, that is basically entirely what you are doing Other people are doing the fun/interesting stuff, project managers, product owners, scrum masters, etc etc are doing all of the fun interesting figuring out/thinking, and then it's just your job to code it. When you work on side projects, you get to wear all of those other hats and it's way more rewarding reply pavel_lishin 12 hours agorootparentWild! Coding, for me, is the fun part - implementing the solution, once I've come up with one. I've never looked at a product owner or a scrum master and thought to myself, \"man, those guys get to have all the fun.\" I've more often thought, \"wow, they have to answer to three people, two of whom are assholes, who have four opinions on how things should be done between them.\" reply cudgy 9 hours agorootparentprevOpposite for me. Much rather code an abomination than hash out the abomination in meetings all day with scrum “masters”, product “owners”, and software “engineers”. reply doctor_eval 12 hours agorootparentprevNot really related to your points but I feel that separating design and implementation is a mistake; the people designing and implementing should be, if not the same people, then certainly in the same room, and in constant contact. So it could be that, if you’re in a world where you aren’t getting to do any of the fun figuring-out stuff, perhaps that’s a problem with the workplace structure rather than with programming generally. I enjoy a bit of everything, and am apparently lucky to have been able to do it for a long time. reply treflop 9 hours agorootparentprevFor me, I enjoy programming but just as a tool. I enjoy it like I do my table saw. But I use my table saw because I want to build certain stuff. Maybe a cabinet or something. You would never catch me using my table saw or programming “just for fun.” And if I’m not enjoying what I’m building, it’s not like the tool will somehow make it enjoyable. reply pipes 16 hours agorootparentprevI've heard with lorry driving there are issues with vibrations causing physical harm eventually? Maybe that is nonsense? If you don't mind me asking how much were you earning as a developer and how much do you earn driving lorries? reply kgf1980 14 hours agorootparentI’ve not had any issues with vibrations but I’ve not been driving perhaps long enough? That said, the newer generation of trucks are so smooth I don’t think that’s as much of an issue as it may have been in previous generations. Wage wise, working as a developer in the UK (working for small consultancies, not startups etc) my wage topped out at around 38k - last year driving I earnt 46k and this year with promotion (from rigid to articulated vehicles) and annual payrise, plus assuming I work a similar amount of hours I’m estimating 52-55k (all before tax) reply throwaway5959 14 hours agorootparentI’ll never understand why developers there make less than the US. It’s not like they aren’t providing similar scale/leverage to a business. reply kshacker 11 hours agorootparentI hear it is much harder to fire in Europe. One of my colleagues (based is US) is trying to fire an obvious underperformer; and I hear only tidbits; but it is quite difficult. Imagine your risk of being fired decreased 90%, would you be willing to take a slightly smaller salary? Of course when you (the employee) do not trust the company / government, you are also willing to be more mercenary and jump at smallest opportunities, so companies in US probably have to pay a bit more to keep the talent. reply throwaway5959 11 hours agorootparentNo I wouldn’t because I’m good at what I do (at least reasonably so) and I have an emergency fund. There is no safety net in the US for those between 18-65 for the most part. reply imtringued 3 hours agorootparentprevWhy would anyone give a shit about it being harder to get fired when it comes to salary? In what kind of distorted world do you live in? I will never understand how you guys come up with these stories. Like, why exactly do you need to fire the guy through the hardest way possible, when you could just fire them the normal way? Like, you're complaining that your own culture is holding you back, because you can't live out your power trip fantasy by telling the guy to put his stuff in a box while a security guard is forcing him out of the building in the most obnoxious way. That type of firing in Germany is reserved for people who have committed crimes on the job. reply maccard 10 hours agorootparentprevIt varies country by country. The UK is basically at-will for the first two years, and it becomes more difficult after that. reply pipes 44 minutes agorootparentFrom knowing people who've fired people before, in the UK people seem to overestimate how hard it is to fire someone. reply mschuster91 10 hours agorootparentprevBecause we don't need to set away money for medical care, retirement, the education of our kids and a host of other expenses, the government takes care of that, and our housing costs are far lower than in the US. Oh and we have public transport that actually works and walkable cities, so at least in urban areas where you find the techies, we don't need a big-ass gas guzzling SUV to get to work or to go and grab some basic groceries. We go to work on the subway/streetcar, and we walk by foot or use a bike to go and shop groceries. Americans always boast about how much they earn compared to us (Western) Europeans, but IME when you make them break down their monthly budget, it usually turns out that after deducting fixed costs, we are roughly the same in purchasing power, and we're happier on top of that as we don't have to fear a random hospital visit might leave us with a 10k$ bill. reply pipes 35 minutes agorootparentHouse prices in the UK are awful. The health system is dire. The education system (in Scotland at least) is awful too (I know several teachers here who will tell you the same, and the international ratings speak for themselves. Tax is high, salaries for tech are way lower than US too. State pensions are chump change. reply returningfory2 6 hours agorootparentprevI feel this comment's characterizations of both the US and Europe are both basically wrong (or at least, they would require significant qualifications to be reasonable). I grew up in a suburb of a relatively dense Western European city with ~250k people. The city has buses, but everyone I know gets to work by car. Horrible traffic - 15 mile highway commutes take 45 minutes in the morning. When I was growing up I went to school by car. Nowadays when my father needs groceries he drives for 5 minutes (rather than walk for 15). Since moving to the US I haven't driven at all - though I live in New York, so it's obviously a special case. For healthcare, \"a random hospital visit might leave us with a 10k$ bill\" doesn't exist for tech workers - as anyone who's actually worked in tech in the US would know. It's true that the US healthcare has severe access problems for a large portion of the population. But those problems are non-existent for tech workers with employer insurance and bounded out-of-pocket costs. reply badpun 13 hours agorootparentprevBy some estimates, the US is home to 50% of world's globally reaching corporations. Software written at those companies has giant business implications (thanks to those companies' scale), and thus the devs can be better compensated for their work. reply 369548684892826 12 hours agorootparentIf this was the reason then UK developers working for US companies would be paid better reply jdietrich 12 hours agorootparentprevModern trucks (at least European-style cab-over trucks) have extremely soft ride quality. The truck itself has airbag suspension, plus an additional suspension system built into the seat. You do get jostled about a bit, but the movement is very slow and floaty. I'm not aware of any reports of vibration-related harm. reply pcthrowaway 14 hours agorootparentprevWorse than the physical harm caused from working at a desk? I've never driven a Lorry, but I did drive for a living, and also drive long distances regularly. But I find my car seat much more comfortable than my desk chair, and my posture much better in the car than one I can maintain while sitting at a desk and typing. Of course, if you're doing very long drives you may not get as many opportunities to stand up and stretch your legs, but I'd imagine lorry drivers would have this opportunity once every hour or so. reply jspash 12 hours agorootparentI've just returned from a 10 day trip across Europe. 5 days to destination. 5 days there. 5 days back. I've been back for 2 weeks now and I think I've only just \"recovered\" from the drive. The cognitive load of the German autobahn. Trying to understand the road markings in different countries. Rain one day. Snow the next. Glaring sunshine the next. Now, sitting in my home office in a comfy chair with no vibrations, no continuous noise and no apparent imminent potential for death is most definitely my preferred way to spend 8 hours a day. Next year is going to be a stay-cation! reply rsynnott 21 minutes agorootparentI mean... have you considered a _train_? :) reply vl 8 hours agorootparentprevIf so, why not to get different chair (perhaps used car chair) and set it up the same way as it setup in the car? reply pcthrowaway 6 hours agorootparentThe way I sit while driving is very different from typing Typing I'm not able to recline and comfortably type. It's possibly a different chair, desk, keyboard, and monitor setup could help with this but I'm self-employed right now and not able to shell that out for what would amount to experiments which I don't expect to be particularly fruitful. I have worked in a number of offices and with a variety of setups when employers were footing the bill, and have yet to find one that was significantly more comfortable than my current setup. When driving I'm in much more of a relaxed reclining position and just steering. Long distances I can add cruise control to the mix. Making minor adjustments to the steering wheel is completely different from the wrist/fingertip stress of typing, and good posture when working at a desk requires being more upright, which in my experience ends up putting more stress on my back and neck also. reply Swizec 17 hours agorootparentprevTo share an opposite anecdata: After many years of coding side projects and work projects, I no longer get a kick out of side projects. They just don’t scratch the itch anymore. They just pale in interestingness/size/complexity compared to what I get to do at work and if I wanted a big enough side project to scratch the itch, then it would require a team to get done and wouldn’t be a side project. reply klondike_klive 17 hours agoparentprevInteresting! Do you enjoy the lorry driving? I've thought about it but one of my concerns is having to manoeuvre around tiny village high streets (lived in a village where houses were regularly hit!) Is there much of that? Are you under a lot of pressure to deliver in super tight time frames? And how long did it take you to get your HGV licence? Cheers. reply kgf1980 14 hours agorootparentIt takes surprisingly little time to get used to the size - that said I’m more confident I the rigid vehicles than the artics in terms of tighter manoeuvring. Most of my work is trunking however so distribution centre to distribution centre, generally at most 5miles from a motorway, for customer deliveries I do have to take some smaller country roads, which are nerve-racking at first but now I’ll take much more confidently. I enjoy being left alone with podcasts for the first 4-6hours of my shift and music for the rest, I tend to talk to the office 3 times a shift - once when I get my keys, once to find out what (if anything) is getting loaded for a second run and finally to hand my keys in - all in all 10mins interaction with “management” over a 10hr shift suits me fine. Time wise, taking my Thursday shift - I’m booked at Heathrow airport to deliver at 7pm, if I’m 30-45mins late there’s no issues, but I generally leave to get there at 1840 so even if roads are bad I’m still “on-time” - after that I have a collection (anytime after 1900) which has to be at the customer (2hrs drive) by 0200 and I’m generally there by 2200 - I am lucky in the company I work for leave plenty of time for everything including breaks, I know other places run you around and try to get 10hrs work done in 8. In terms of time for license, I had 4 days training for my rigid (anything over 7.5T with a trailer upto 750kg) with test on the last day which I passed first time, I then drove them for 6 months for my current employer and then again had 4 days training and test on the 5th for artics (anything over 7.5T with a trailer over 750kg) which I passed first time (thanks in part to driving rigids for 6months and being generally confident with the size etc of the vehicle) reply walthamstow 16 hours agoparentprevAre you away from home much? Do you have a spouse and/or kids? reply kgf1980 14 hours agorootparentI don’t do nights out or away, so I’m home every night (morning as I work 3pm until I’m done, generally 1-2am, sometimes 5am) No spouse or kids which probably helps and is why I don’t mind picking up overtime and extra shifts reply levidos 2 hours agoparentprevWhat's the max someone can earn as a HGV driver in the UK? reply kgf1980 16 minutes agorootparentI’d guesstimate if you were in a high-demand/niche role with a high hourly rate, plus you can max out your hours each week, probably around £65k? reply hnthrowaway0328 10 hours agoparentprevI thought about making the same move but quickly dropped the idea when I see this: The average salary for a truck driver is $24.98 per hour in Montréal, QC. That's less than a third of my cash compensation. I do wish getting a non programming laid back day job so that I can program happily in my free time. I kinda gave up the idea to find a programming job that I love to do -- it's just technically too tough to get into one of those low level programming jobs. reply cudgy 9 hours agorootparentAre you average? reply hnthrowaway0328 9 hours agorootparentAverage on what? I'm sure my truck driving skill is less than the average truck drivers. reply gcbirzan 16 hours agoparentprevIronically, in an industry that highly regulates working times... reply kgf1980 14 hours agorootparentYes, work is covered under both the Working Time Directive (which I’ve opted out of the night work limit and the 48hr working week) and the EU Drivers Hours rules - work are hot on infringements for exceeding working hours but more so on breaches of driving hours or insufficient rest hours. reply trey-jones 11 hours agoparentprevYeah, from my point of view we're going to need more 38 year-olds starting new careers as developers to replace those of us that started at 28 and are ready to move on. I'm about 13 years in, but have been burned out for at least 5 years and I'm finally ready to admit it. Get me out of here. reply madaxe_again 15 hours agoparentprev>> although that may reflect more on my skills/level as a developer than anything else Nah, that reflects on the U.K. - developers are generally miserably underpaid, and there’s a massive shortage of freight drivers since Brexit for no apparent reason whatsoever. reply dukeyukey 14 hours agorootparentWorth pointing out that among non-US countries, the UK has among the highest developer pay. This isn't the UK under-paying, it's the US being a massive outlier. reply User23 14 hours agorootparentTruck drivers in the USA can easily make well into the six figures as owner operators. It’s not gonna compete with FAANG (except maybe on oilfields?), but it’s a very good living. And of course if you’re good at running yourself as a business you have the skills to run other drivers too if you choose to invest in a fleet. Heck, for a while Amazon was paying people to quit and start trucking. reply bmoxb 15 hours agorootparentprev> there’s a massive shortage of freight drivers since Brexit for no apparent reason whatsoever. The main reason is that most drivers were Eastern European and since freedom of movement ended it has become significantly harder for them to come and work as freely as they could before. Covid is also a factor afaik. Though I otherwise agree with you that developers (or rather white collar careers in general with the exception of certain finance roles) are not particularly well paid in many instances in the UK. reply IntelMiner 15 hours agorootparentI believe the users comment was deeply sarcastic and they are in underlying agreement with your assertion reply bmoxb 15 hours agorootparentI think you're right - I'm embarassed to have not picked up on that. reply kgf1980 14 hours agorootparentprevSurpringly the shortage of drivers is not actually a thing anymore (during Covid perhaps) but the large number of people who got their HGV license when the government changed the rules during Covid has actually caused pay rates to drastically fall due to their being more drivers looking for work than work available. reply rsynnott 17 minutes agorootparentI think that's maybe not _that_ surprising, because freight in _general_ in the UK is in decline. The UK Dept of Transport does not expect freight tonnage to rise to 2019 levels in the foreseeable future. This is partially due to the decline of the land bridge (since Brexit, far more freight to Ireland goes by sea instead of through the UK), but also due to a decline in UK trade in general post-Brexit. reply jokethrowaway 12 hours agorootparentprevOP salary at 38k is pretty low. From my experience that's in line with people doing \"body rentals\" for agencies under threat of being deported or because they couldn't find another job. I think he could have doubled that with a bit of work on resume / negotiation skills. Sure, still lower than US but life in the UK is way cheaper, so it works out unless your earning potential is mid-high 3 digits. reply skort 14 hours agoprevIt's great to see people being able to pivot their careers later in life. That said, > folks overcoming challenges just to be on the same playground as everyone else This has the same energy as \"Kids raise money to buy classmate a wheelchair\" news articles, where sure it makes you feel good to see people doing good in the world, but completely ignores that the system we live in keeps certain people down on purpose. reply jmkni 13 hours agoparentI strongly object to 38 being later in life reply downrightmike 12 hours agorootparentOver half the average lifespan for the USA average and male, slightly under if female. reply jstummbillig 11 hours agorootparentUnless you want to jump from \"early\" to \"late\", that puts 38 decidedly in the middle. reply skullone 10 hours agorootparentSure, if you intend on working until your late 70s. I'm not sure which side of the coin with AI and shit wether or not coding vs hauling is a longer term career reply anamexis 8 hours agorootparentMost people don't start working from birth, either. reply 77pt77 14 hours agoparentprev> the system we live in keeps certain people down on purpose. That's the main objective of the education system. To teach you that. If you are supposed to be \"kept down\" succeeding or god forbid excelling will be met with either resistance or extreme punishment. Sometimes covertly but many time overtly behind closed doors and with small groups of people. reply akira2501 14 hours agoparentprev> keeps certain people down on purpose. That's what makes it so pernicious. No one is being targeted and being kept down \"on purpose.\" It's a failure to correctly orient priorities and to see that the balance of tax money is spent on improving individual citizens lives and outcomes. > It's great to see people being able to pivot their careers later in life. It'd be even better if we just paid them what they were worth so they didn't have to put a bunch of effort into moving sideways across the labor market like this. reply Havoc 9 hours agoprevWouldn’t mind a crack at programming but coming from finance world the salary math isn’t quite as easy as lorry driver. I’d need to land something pretty senior which isn’t credible reply datascienced 2 hours agoparentThe man in the article took a 66% paycut. reply tossandthrow 1 hour agorootparentI have no idea about the salary level for lorry drivers, but a small curiosity: It is funny to read these treads, and then reading in another HN post that a guy was able to buy his first home driving laundry truck - and how his contemporary peers seemed to be jealous that they were not able to do such. It indeed seems like being a lorry driver is the easiest way to get started on the suburban life. reply rekoros 16 hours agoprevSometimes I wonder what kind of a world we'd be living in if places like Flatiron School and the various bootcamps taught Elixir instead of Ruby. Also, \"lorry\" is such a great word, too bad there's no use for it in the US. reply chefandy 6 hours agoparentExisting Elixir shops probably aren't looking for fresh bootcamp grad level coders, and those grads' skillsets don't hold any weight until there's enough to start affecting new project decisions, which probably wouldn't have happened. Even Ruby is a stretch as a one-trick skillset for new developers without CS degrees, and it was quite popular well before bootcamps were: that's why they taught it. I mean, I love me some Elixir, but the result is that most of the schools would have closed within months and the graduates would probably not have gained much from them. reply sosodev 14 hours agoparentprevMy guess is that world would be indistinguishable from ours. There is nothing wrong with Ruby. reply rekoros 11 hours agorootparentElixir wouldn't exist without Ruby, so I have nothing but gratitude. My question angles more toward learning functional programming first, and I doubt it'll ever happen at bootcamps (though - my understanding is that's exactly what happens at Berkeley/MIT with Lisp/Scheme in CS101 (I'd argue with decent results)) - so it's very much a hypothetical. reply ativzzz 7 hours agorootparent> I'd argue with decent results Is it decent results because of functional programming? Or decent results because those colleges select for the people who generally have the most intellectual aptitude and you could have them write Cobol on tape for CS101 and they'd still be great reply rekoros 7 hours agorootparentI don’t know, but I doubt that they’re so smart that they’re the only ones who “deserve”, somehow, to be blessed with functional CS101. I heard that it’s a special form of torture, since those CS programs must be hard, but I don’t really buy it. reply adamtaylor_13 12 hours agoparentprevI’m genuinely curious what you mean. Elixir is a different paradigm but I’ve yet to understand how Elixir is inherently “better” than Ruby. reply rekoros 11 hours agorootparentOh, I don't think there's a universal \"better\" when it comes to such things, and I'm not implying that one is universally better than the other. I discovered the Elixir runtime (BEAM) a few years before Elixir was created (we were using the Erlang language then), and for my specific use cases, when I understood the principles of concurrency, error handling, and introspection in BEAM, it caused quite an epiphany. It was also scary, because I had to unlearn pretty much everything I knew :) From a purely esthetic perspective, I find that pattern matching and tail recursion-enabled programming patterns are more concise, easier to comprehend, and are less error-prone than those offered by the more mainstream languages that don't have those features. In my experience - and I'm not a particularly great programmer, so it was welcome - I found that I produced code with signifcantly fewer dumb errors when I no longer had access to imperative programming paradigms and was forced to come up with more \"functional\" solutions. I don't believe that functional programming is inherently more complex than what we learn in school/college/work with conventional languages. My question really stems from the idea of learning functional first - and I do wonder what that would look like. reply sosodev 11 hours agorootparentThat's a fine perspective but the way you worded your comment was evocative of the typical \"X is objectively better than Y\" tech comment. Are you aware that Ruby includes a lot of functional programming features (including pattern matching)? reply rekoros 11 hours agorootparentI think it’s great that functional programming is making its way into traditional imperative languages - even JavaScript (I recently came across https://gcanti.github.io/fp-ts/ as a pretty extreme example) Elixir/Erlang has function-level pattern matching, which I really like. I’ve yet to see it anywhere else, though my understanding is it came from Prolog. reply koinedad 14 hours agoprevAre Ruby on Rails positions still pretty popular? reply zdragnar 10 hours agoparentTrying to hire for it has been deeply unpleasant. Very few people actually have the experience they claim to have, and asking them basic programming questions that any senior developer should be able to talk about has roughly 80% of the candidates going straight to chatgpt and pretending the answer is theirs. I'm not talking leetcode stuff either, more like \"what is polymorphism\" or \"what is refactoring\". Maybe the whole industry has gone that way... but the smaller talent pool makes it a lot more obvious. Were it up to me, we would be using something else where I work, and not just because of the smaller talent pool (although that's probably the biggest reason). Many of the \"delightful\" and time saving things about rails either turn out to have relatively insignificant impacts for complex applications, or turn into sharp edges that slow us down. reply datascienced 2 hours agorootparentAs a C#er who was interested in switching to rails: rails jobs pay less. And the kind of companies using it seem to be ones falling apart at the seams and interviewing was frustrating compared to C# jobs. I am not saying Rails is bad but more there is a common causation. Perhaps Rails being a go to for quick MVPs. reply neonsunset 1 hour agorootparentI'm curious, what led to the interest in the switch? Was it pre Core 3.1 or recent? reply aantix 8 hours agorootparentprevIf I had to guess from postings on Twitter and Linkedin, I think hiring is taking everyone by surprise. I remember a Linkedin comment talking about how the company received 1,000+ applicants for a single dev job. Some blame the layoffs. I don't think so. Before GPT, it was a struggle for devs to appear articulate in the domains that they reference on their resume. Possessing exceptional writing abilities was a definitive competitive advantage. It's no longer. Now everyone can sound like an expert and craft a pretty good, customized, concise cover letter. The whole process needs to move to video-based cover letters. It's as simple as that. reply datascienced 2 hours agorootparentWe are 1-2 years from chatgpt being able to fool interviewers. I mean speed, latency, audio generation and processing. Just connect your camera to the AI you and get your smart double to take the interview. “Are you a bot” is going to be a question and they are hoping the AI safety people will make it answer correctly. reply krainboltgreene 3 hours agorootparentprev> Now everyone can sound like an expert and craft a pretty good, customized, concise cover letter. Zero content coming from LLM's sounds like this and yes I've read quite a bit of output from a variety of them (including whatever version/release the reply is going to ask). reply itake 4 hours agorootparentprevEx-ruby on rails dev here, the RoR jobs don't typically pay as well as other jobs and the problem space tends to be more boring (creating CRUDL api were fun the first 100x). reply 1123581321 10 hours agorootparentprevFor experienced developers, it helps a lot to know the names of companies that use Rails. Every time you see an unfamiliar company, learn a bit about how they used Rails, through the interview, if nothing else is available. We're to the point where we can ask nearly anyone fairly specific questions about their contributions depending on the history we see on the resume. (I am not saying to avoid talking to people if you don't recognize the company.) reply dalemhurley 10 hours agoparentprevToo often I hear hiring managers complain that they cannot find good candidates for XYZ specific language. This is the most annoying thing in programming. A good developer can get up to speed with a language in a few weeks. I have and I have had teams go from zero to building full platforms in a new stack. Programming is mainly breaking down problems, creating solutions and then implementing them. The coding is just the end result. reply datascienced 2 hours agorootparentYou want some experienced people with runtime platform knowledge in the team. For example async and thread semantics, common failure cases, best ways to do typing etc. reply europeanNyan 1 hour agorootparentIf you are at the point where you are looking for additional Rails (or whatever) developers, you already hopefully have people with runtime platform knowledge in the team. reply Lio 13 hours agoparentprevYes, it's popular enough that you can find work pretty easily. There's less openings than for JS, Java or C# but then there are less Ruby developers. That's the same as it ever was. reply iimblack 13 hours agoparentprevIn my job search for remote USA roles it seems a little less popular than Django just bolstered by the GitHub and Shopify postings. Node, dotnet, go, and Java all seem more popular. reply highwayman47 14 hours agoprevme being almost 38 thinking it's not that old reply dalemhurley 10 hours agoparent38 years old is quite young, and you have learnt quite a bit about life. For some reason, there is people in their 20's with 2 years of experience who think someone close to 40 cannot gain the some knowledge as them within 2 years. I would say someone in their 40's and 50's is going to be more pragmatic and disciplined with greater attention to detail as they have more life experience teaching them to be more patience. reply jarsin 12 hours agoparentprevAs you get older you begin to realize that age obsession is like gossip. It's for the low IQ folks. You're really not old until you reach 80's where stuff like cognitive decline and frailty are more likely to start showing up. I use to think 40's was old when i was younger, but if you think about it you have another 40 some odd years until your old. Thats way longer than most companies, marriages, careers etc last. reply askonomm 3 hours agorootparent80 is old? Where I'm from (Northern Europe) 80 is dead, not old. So given that you can't be old when you are already dead, old here is anywhere 60+, with 70+ being the last few years you have left (average life expetency is 76). reply tiptup300 7 hours agorootparentprevmuch like iq obsession, right? reply game_the0ry 18 hours agoprev> I decided to join Flatiron School. If you couldn't secure a job after completing their course, you didn't have to pay them anything. This is key. I went to a boot camp as well, one of the ones that required an admissions interview, which was legit difficult for a newbie. The boot camp model is actually very good if implemented well. Of course, there is corruption and grifting, and a lot of innocent people regrettebly lost money. So if you are considering a boot camp, do one that is difficult to get into and has an income share agreement.[1] [1] Income share agreements can be sketchy too. Sometimes, if you get a job that is not related to tech (retail job, for example), they will ask you to pay back. reply macintux 17 hours agoparentThe recent discussion around BloomTech/Lambda School makes me very wary about income share agreements. https://news.ycombinator.com/item?id=40067939 reply citizenpaul 17 hours agoparentprev> Income share agreements can be sketchy too My exp with things like this is they tend to overwhelmingly be highly exploitive and target vulnerable people. The biggest clue is that almost none of these types of places will publicly provide whatever the arrangement is. You usually have to jump through hours of hoops to even find out the details because they don't want the information getting out due to what I just wrote. On the other side its a really quick filter. Can you send me the details now? Not until you come to our onsite 4hr (brainwashing)meeting, Nope! moving on. reply ornornor 15 hours agorootparent> On the other side its a really quick filter. Can you send me the details now? Not until you come to our onsite 4hr (brainwashing)meeting, Nope! moving on. Wait until the graduates discover what interviewing is like in tech… reply boguscoder 16 hours agoprev [–] You say Lorry and post a picture with left sided wheel, hmmm But seriously, great story, way too many people dont have courage/confidence/financial backup for such a large career shift reply kwhitefoot 15 hours agoparent [–] It's still a lorry. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Pedro David Garcia Lopez transitioned from a lorry driver to a Ruby on Rails developer at 38, highlighting it's never too late to follow dreams.",
      "Emphasizing the significance of passion, mentorship, and mastering Ruby and Rails, he underlines the necessity of continuous learning in programming.",
      "The blog includes an interview with Miles Woodroffe, former Global CTO of Cookpad, conducted by Akshay Khot, promoting feedback and subscription for upcoming Ruby software development articles."
    ],
    "commentSummary": [
      "The discussion delves into various topics such as career transitions, pay gaps between developers and blue-collar workers, HGV driver shortages in the UK, Senior Developers' salaries in the EU, and the influence of unions on compensation.",
      "It also explores the differences in the cost of living across countries, tech salaries in the US and Europe, along with the pros and cons of different professions. Furthermore, it touches on the comfort and physical impacts of driving versus desk work and the ongoing driver shortage in the UK.",
      "Additionally, insights are shared on programming languages, functional programming, Ruby on Rails development, hiring norms, and age bias in the tech sector."
    ],
    "points": 265,
    "commentCount": 172,
    "retryCount": 0,
    "time": 1713707299
  },
  {
    "id": 40105121,
    "title": "Seeking Meaningful Innovation: Moving Beyond the Frustrations of the Programming Industry",
    "originLink": "https://www.deathbyabstraction.com/I-love-programming-but-I-hate-the-programming-industry",
    "originBody": "I love programming but I hate the programming industry On being a faulty cog in a machine when the machine itself is faulty 27 Mar 2024 I never really fit into any software engineering job I’ve had. The technical side of things got boring after I had gained a basic grasp of the inner logic of the codebase and no longer felt challenged, and then I wanted to do more, and more importantly - do it differently. I wondered about design decisions and their broader purpose: why are we doing this and why are we doing it in this specific way? Might there be a better way? What metrics are we using to determine success and why? Although these questions weren’t always posed aloud I got told I ‘think too much’ and ‘care too much’ when I could be using this time to churn out more lines of code. I didn’t belong, and I was too young and insecure to articulate that this wasn’t just a simple mismatch between my talent and my position. It was that I fundamentally disagreed with the way these places operate and wanted to do work to change them rather than perpetuate them. If there ever was a part of me that thought ‘there has to be better things out there’, looking at job postings for a couple of weeks in 2023 was enough to kill that illusion. 90% of the time when I read descriptions it is excruciatingly obvious to me that whatever code the chosen candidates will end up writing at this job will be completely removed from any important problem not only humanity, but even any individual human has ever had. Startup culture is shamelessly at the forefront of this industry’s ‘produce more code and ask less questions’ policy. All most startups do is move investor’s money around while trying to acquire paid users by convincing them they need a product that is more often than not marginally useful at best. They usually fail at that, leaving behind thousands of lines of unmaintainable spaghetti code engineers were bullied into writing in weeks instead of months using arbitrary trendy technologies. No one will ever look at that shit again except maybe as an example of bad coding practices, engineers’ time has been wasted and venture capital largely ends up in the hands of the people that already possess significant capital - they may use that to fund another startup, and this wretched cycle continues. Job ads that try to paint this as some kind of exciting meaningful endeavour that will enrich people’s lives and stimulate my engineering growth are an insult to my intelligence. I don’t want to be a part of this - not just because it is arguably immoral but because it is fundamentally and infuriatingly boring and pointless. While established tech companies differ from startups organisationally and financially, they don’t really contrast them culturally. Sure, the code you write at a FAANG might actually make its way to users, but what you as an individual happen to think about any aspect of writing code will be more irrelevant than ever. You are a cog in a machine not only in the sense that the product you are building is likely automating the worst aspects of capitalism in increasingly sinister ways, but also in a practical sense, you’re a number: the size of your backend stack, or your tech interview score, or your performance review score. It’s not so much this reality itself that’s so atrocious to me, but more the fact that as engineers we’re expected to find this empty and humiliating grind even more aspirational than many other workers are, and are even more discouraged from questioning any aspect of it. Essentially, the concept of critical thinking has been made anathema to engineering: as a programmer you are to focus solely on the how, rarely on the what, and certainly never on the why. For the rare code monkey that finds themselves able and willing to critique the system they’re producing for the message is clear: leave that shit at the door. A code monkey is prohibited from even identifying the lack of autonomy and creativity inherent to the position - they can only strive to build more, never to build differently, or build different and better things. So while this do-more-ask-less mentality of the tech world might produce more code it also consistently leads to worse software. Even in the cases where capital and other forces outside of our immediate control theoretically allow for us to build software in a way that is sustainable, or has a positive impact on the world at large, or is at the very least useful practically we still often don’t, because of simple inertia: it’s easier and usually more viable to do what’s on trend and reproduce the status quo once more. Worse yet, this same inertia then seeps into the entire tech stack this societally useless product is built upon. The technologies all the way down to the languages, libraries, frameworks, and even code patterns become infected with the same brand of novelty and gimmicks before actual innovation that plagues the industry as a whole. After all, if you’re not solving unconventional problems, why would you need unconventional engineering? In truth, the most interesting engineering problems are usually the ones which arise naturally in our society, as opposed to those where technological advancement is an end in and of itself, or even those which attempt to artificially create a market demand where there isn’t one. Societal necessity is the best possible driving force of innovation - remember that historically the most groundbreaking achievements in early computing have happened in the service of the greater good. This is what I really want to do: I want every how - from the programming language and paradigm, architecture, down to every line of code and piece of syntax - to be informed by the why of the system that is being built. And I want that why to be a reflection of a genuine existing need, not some bullshit business metric which pretty much exists for its own sake. So far I haven’t had the chance to actually meet someone who would share these values in any significant sense and would want to do this kind of engineering work. Despite the isolation I often experience in my interactions with this industry, I am confident in the value of my work and the importance of the things I have to say. So if you are that person please reach out - it would be interesting to know if a place for someone like me already exists somewhere. And if not I think it would benefit us to create it. (Edit: since people were asking me for clarification about the last part, yes I am open to consulting work that is in my areas of interest and reasonably in line with my values. Initially I didn’t want to add this since I fear it might be a shitty way to end an article that is - at the risk of venturing into cheesy territory - ultimately about something so much bigger than myself or my work.)",
    "commentLink": "https://news.ycombinator.com/item?id=40105121",
    "commentBody": "I love programming but I hate the programming industry (deathbyabstraction.com)258 points by conquestofdread 21 hours agohidepastfavorite187 comments halfmatthalfcat 21 hours agoIt’s not the “programming industry” that OP hates, it’s the “corporate world”. I’ve worked with (and have been) developers who have mismatched expectations on what “the real world” wants out of them. The corporate world doesn’t give a shit about finesse, abstractions, witty or beautiful code. They care about finding developers who will pump out features to the business requirements. Some human beings in that cog (managers, directors, peers, etc) may allude to enabling developers to actually practice the “art” of programming but the bottom line is if you aren’t moving the needle economically for the company, you’re a liability. Find comfort in programming outside of the corporate world and practicing the art but don’t expect the “industry” gives a damn about the how or why of programming, mearly the characters we punch onto the screen into cash. Once you come to terms with this, life gets a lot easier, less frustrating and you can actually find fun in the work (albeit, not necessarily “art”). reply 1vuio0pswjnm7 1 minute agoparent\"... if you aren't moving the needle economically for the company, you're a liability.\" Being a liability could result in moving the needle, just not the direction the company would prefer. reply gofreddygo 4 hours agoparentprev> Find comfort in programming outside of the corporate world This is indeed the bitter truth I've learned this last decade in the industry. You're paid to deliver. Whether its efficient, it solved the problem, made any money, ticked some boxes isn't yours to bother or control. Plan tour stuff, do your stuff, be nice to others and sign out at 5. Don't underdo by writing bad code, or not caring of the downstream consequences of your decisions etc. People do get fired for this. More important, don't overdo. Don't try to predict how the product evolves and catch those scenarios, don't fight for your obviously better design, don't try to deliver faster, don't try to fix that bug you found while working on something else you are tasked to deliver. Chasing a promotion is one of the worst kind of stress I brought on to myself. Know the kind of project you're in (high intensity, high growth, mature, next on the chopping block) and act accordingly. Further, take credit and be seen. Do a demo once every quarter, review people's code, show up for design meetings and ask a question, reply to emails/IM's (that show up before 5pm) quickly, deliver on what you said you will. Be seen as a useful resource but push back (with your actions) on the slightest sign of pressure to deliver. Finally, always be prepared to land your next job interview in 2 weeks. Its your workplace. Not your family, nor a body shop. reply fuzzy2 20 hours agoparentprevI think “industry” strongly implies “corporate world”. However > The corporate world doesn’t give a shit about finesse, abstractions, witty or beautiful code. Guess I’m the corporate world then! Listen here, dear colleagues: Before attempting any finesse, abstraction, wit or beauty, maybe first try to make it work to spec. Because otherwise it is entirely worthless. If you are reasonably good at making it work, you can then make it right and maybe even fast. reply vegetablepotpie 20 hours agorootparent> first try to make it work to spec In my professional experience, the only spec you get is a wishlist, never quantified, always vague. Half the work is figuring out what the customer wants. The only metric that anyone cares about is speed. You need to go fast, but to where? There is no consensus. reply rrr_oh_man 20 hours agorootparentIf quick and dirty gets you 10 shots, while slow and beautiful gets you 1, I’d choose quick & dirty any day. reply Dan42 20 hours agorootparentAn order of magnitude is a bit much. I'd say quick and dirty gets you 3 shots, while slow and beautiful gets you 1. And if you succeed, it means the result is dirty/ugly code that must be maintained forever. reply Jensson 9 hours agorootparentDoing it many times tend to be much cleaner than trying to get it right the first time. So fast -> clean, slow -> ugly code, as long as you use the speed to redo and clean things up. reply andrewflnr 13 hours agorootparentprev10 shots facing the wrong direction still gives 10 guaranteed misses. At least make sure which cardinal direction the target is in. reply rnewme 20 hours agorootparentprevThat's not how you build big important, expensive things, though. It all depends on the context. reply doomslice 20 hours agorootparentDo you know that the big expensive thing is what your customers actually need? Do you actually know what your customers need? That’s basically the only important context. If you can’t deliver that, it doesn’t matter how well thought through, extensible, or scalable it is. reply jampekka 17 hours agorootparentDo the customers know what they actually need? reply doomslice 13 hours agorootparentWell if you don’t have a pretty good idea of the problem you’re solving for the customer, you’re much better off trying as many things as you can, quickly and cheaply, to figure out. reply ericjmorey 20 hours agorootparentprevIt seems that the biggest, most important, and most expensive things are built like that. reply philipov 19 hours agorootparentLike bridges and skyscrapers? reply fuzzy2 17 hours agorootparentprevI don't see how that's a problem. It's not for everyone, yes, but I like it a lot. Talking directly to the customer allows me to create exactly what the customer needs, without any convoluted process. If that's not for you, you need at least a requirement engineer between you and the customer. That's also okay. From my experience, getting things done quick is almost never relevant. Getting things done “cheap” is. reply makerdiety 18 hours agorootparentprevIf a large portion of software development is the attempt to discover what is a minimally viable product, then software development is not pure software development. It would be startup business development. That makes real programming to be something like obscure operating system development. So it's a conflict of names, a matter of proper identification. reply Terr_ 18 hours agorootparentprev> Half the work is figuring out what the customer wants. And a substantial portion of the rest is telling them why they might be better off asking for something a little different. reply tacitusarc 19 hours agorootparentprevSpecs are fickle, vague things. Well written code can accommodate the whims of users and execs alike. I also tend to find that folks who write quick and dirty code “to spec” leave it riddled with bugs and unhandled corner cases. reply withinboredom 19 hours agorootparentprevI live by three steps when writing software: 1. Get it working. 2. Get it working well. 3. Get it working fast. Your last sentence reminded me of that. reply apantel 19 hours agorootparentThis is the way to do it. First you want as complete coverage as possible with a unit test showing that the implementation is sound. Then you can try things and refactor for performance, checking as you go that you didn’t break anything. reply bdw5204 20 hours agorootparentprevIn my experience, most of the corporate world seems to care more about their aesthetic notions of the Platonic ideal of what code should look like than whether or not it works or whether or not it is efficient. Certainly that's my experience from interviews. Maybe the people who care about business value should be the engineering managers not the people who equate their personal aesthetic preferences with the only right way to write code? reply fuzzy2 20 hours agorootparentI’ve had the opportunity to work with lots of mechanical engineering corps to date, and I can confidently tell you: Even if they had some platonic ideal, they would never be able to follow through. The mediocrity of their software development practices is… profound. On all levels of the hierarchy. Sure they care about the ideal of sustainable software development, but they just can’t do it. On the other hand, my employer advertises clean code as a service, and this attracts the kind of developers you describe. reply peddling-brink 20 hours agorootparentprevBecause code is read more often than written? And clean code is easier to read? reply bdw5204 9 hours agorootparentCode is run more than it is read especially if you count users. And so-called \"clean\" code is a performance disaster[0]. It's also, if that link is an accurate representation of what \"clean\" code is, a readability disaster. The more readable code, in my opinion anyway, is the version that is also an order of magnitude faster. [0]: https://www.computerenhance.com/p/clean-code-horrible-perfor... reply whstl 20 hours agorootparentprev> clean code is easier to read What's \"clean code\"? Capital-C Clean Code? Hell no. This is code that looks clean only on the surface, but in practice it only works on toy projects. Anything big enough is impenetrable for debugging and a performance catastrophe. Lowercase \"clean code\" from people who heard the above but never even read the book? What's that anyway? Nine out of ten times, this is just developers putting aesthetic preferences in front of correctness, simplicity and performance. reply amboo7 1 hour agorootparentWrong. Performance and correctness/cleanness go together. Perhaps you have never tried generating correct code that is ways faster than what you can write by hand. reply heresie-dabord 19 hours agorootparentprevThere ought to be a good spec (i.e. requirements). But it's hard to motivate people to excel without giving them opportunity to grow their talent. This cartoon remains the best visual representation of an industry that seems incapable of doing requirements, testing, documentation, and security. https://i.kym-cdn.com/photos/images/original/000/475/749/fd8... reply zelphirkalt 17 hours agorootparentprev> If you are reasonably good at making it work, you can then make it right and maybe even fast. Whuahaaaha ... If only that was so easy. Once you get it working, it will in most cases be torn from your hands and you will not get to touch it again any time soon. So what one does to find even a little bit of joy is to try to get some sense into that code right away, because you don't usually get a second chance. If I knew, that at a later point in time I will only have to ask and sure enough I will get the opportunity to make things well-made, then I would be much more willing to not spend any additional time into making things well in the first run. Making things well requires knowledge and craftsmanship, while making things merely as shoddy as possible but according to spec will requite a bunch of interns making a pile of unmaintainable crap. Code only written with the next goal in mind, not looking out for the casualties along the way. reply fuzzy2 17 hours agorootparentI may not have communicated this well enough. I wasn't referring to a multi-step process where I hand over the solution in between. I was referring to getting good at making in work, right and fast in one step (at least as far as the customer is concerned). Many try do it all at once and then end up with… nothing. reply megadog3 20 hours agorootparentprevCounterpoint: The MVP is usually what ends up in production. If your code is a heap of garbage but chocolate-coated on the outside, you're gonna impress management and they'll want to push it live asap. Then the issues start exploding. reply fuzzy2 17 hours agorootparentUm, yeah, that's… IMHO exactly where an MVP is supposed to end up. The “VP” says that. reply cranberryturkey 20 hours agorootparentprevyes, a shitty foundation leads to shitty feature implementation. I've seen this everywhere from startups to Fortune 500 companies. Nobody cares about code quality, except maybe the one self-annointed gatekeeper who thinks he's making a difference and shitting on everyone's PRs delaying features. Get rid of that guy he serves no purpose reply fireflash38 19 hours agorootparentPeople don't care about quality in general unless it affects the bottom line. Not just code quality, but product too. Bugs? Who cares unless it costs us money. Security holes? only a problem if they're exploited... And it costs us money. reply vbezhenar 20 hours agorootparentprevThat guy keeps everything from collapsing. reply jampekka 17 hours agorootparentYeah, if the indentation style, variable name capitalization rules, structure of commits, 100% unit test coverage the guy knows is the absolute truth and top priority, a collapse of everything is imminent. reply tkdev2 19 hours agorootparentprevSpoken like a true MBA. Hope I never have to work with you. reply tomByrer 19 hours agorootparentprev> you can then make it right and maybe even fast IF there is budget for that very often. Otherwise they'll expect you to move on. reply halfmatthalfcat 20 hours agorootparentprevI just wanted to make it more explicit since this issue isn't specific to software developers, every career grapples with the \"right way\" versus the \"economically prudent way\" in our (US) capitalistic society. That in and of itself isn't bad, take capitalism however you want, but the point is managing expectations to the reality that exists in front of us, not the one you wish it could be. reply OJFord 20 hours agoparentprevOr simpler than that, surprise, work is less fun than hobby. Even if you work for yourself doing what you love, even say it's making furniture or whatever, there's always going to be things like customers want the 'wrong' things, or won't pay extra for the nicer exotic material, etc. doing purely what you love as a hobby with no work aspect is always going to be better. reply _nalply 20 hours agorootparentBecause in a hobby you are your own master and in a job someone else is your superior and orders you to do things. If you are lucky many of these things are what you would like to do anyway. reply chongli 20 hours agorootparentYeah. It's extremely rare to be able to do exactly and only what you want to do and be able to make money from it. Even the big YouTube celebrities face pressure to make the videos their audience wants to watch. When they go off the rails the views take a nosedive. reply marginalia_nu 20 hours agoparentprevI feel this sort of mentality is exactly how you turn into Boeing. Wings staying attached to the plane in air isn't pumping up the KPIs, fire everyone who wastes time on such irrelevant concerns! reply abnercoimbre 20 hours agoparentprevHope it's okay to self-plug here (seems highly relevant): what you say is a big reason why I organize the Handmade conferences for a living and why they're free of sponsors [0]. An implicit goal is to grow popular enough to the point that enough programmers collectively agree they should have a say in the \"corporate world,\" such as demanding that we slow down \"pumping out\" new features and make greater investments in software quality. [0] https://handmadecities.com/about reply stavros 20 hours agorootparentThis looks interesting, but why is 75% of your landing page your bios? When clicking the link, I definitely didn't have in mind \"I wonder who founded this and what their background is\". I now know a lot about who organizes this and what their reasons are, but I don't know anything about what it is. reply mariusor 20 hours agorootparentThat's the about page. The landing page has more info: > We are the largest indie conferences for low-level programmers. This is your portal to meet with folks into graphics, game engines, kernels, compilers, and more! reply stavros 19 hours agorootparentAh, derp, I didn't look at the link, thank you. reply abnercoimbre 19 hours agorootparentThe one time I link to the About page instead of the landing... sorry! (I only did it because it mentions the bit about being sponsor-free.) reply stavros 19 hours agorootparentNah, it's my fault, I spaced out and didn't read the URL. reply DonHopkins 20 hours agorootparentprevTo be fair, that's the about page, not the landing page. And their goals and reasons for organizing it are commendable. Abner, I'd be interested to hear more about what it was like working with Jonathan Blow. (Maybe your project's about page isn't the place to go into it, but possibly here, your personal blog, or private email.) I'd love to see his reaction to watching the Game Helpin' Squad's tutorial, \"Time Travel Understander\"! https://www.youtube.com/watch?v=1fABGyVzVwI I pointed Will Wright at their SimCity parody tutorial on \"Pretend Gas Station\", and he loved it! https://www.youtube.com/watch?v=WPMeWas4kXM My favorite, which you have to pause to read all the hilarious popup text and chat that goes by quickly, is the Game Helpin' Squad's \"World Quester 2\" tutorial: https://www.youtube.com/watch?v=0Gy9hJauXns reply abnercoimbre 11 hours agorootparentShoot me a message (should be in my HN bio) reply graemep 21 hours agoparentprev> if you aren’t moving the needle economically for the company, you’re a liability. I would add, moving the needle in the short term. A business taking a long term view would care more about quality (reliability, security maintainability). reply chii 21 hours agorootparentOstensibly that's true, but in the long term we're all dead anyway. So the company's shareholders might only want the term to be just long enough to cash out. reply graemep 13 hours agorootparentMost of us will be dead in decades. What I mean by long term here is more than two or three years. > So the company's shareholders might only want the term to be just long enough to cash out. Which means they need to sell to people who think the business has enough of a future for them to cash out. That stretches the terms a bit, but not long enough from the point of view of employees, customers, or what is good of the economy as a while. Depends on the composition of shareholders too. One thing I recall from my time in investment management was the problem of clients who were reluctant to sell because it would create a capital gains tax liability. At the other extreme are fund managers whose most pressing concern is where they will appear in this year's performance league tables. reply bumby 20 hours agorootparentprevWouldn’t you think this would mean government-made code would be of higher quality (in theory, and ignoring when govt code is made by private contractors)? It seems to be the opposite reply geraldwhen 20 hours agorootparentNot all developers are equal. Government work pays a third or less what private industry pays. You’re never going to get extreme competence from a government software employee. reply bumby 18 hours agorootparentNever? You don’t think NSA or Israeli 8200 has preeminent software developers? I think your assumption hinges on people being motivated solely by money. That may be largely generalizable, but I suspect there are relatively large exceptions to that rule. reply jampekka 16 hours agorootparentprevNot all competent people are driven by pay. I'd say the most competent usually are not. There are a lot easier and safer ways to get paid well than competence. reply graemep 19 hours agorootparentprevGovernments are often sort termist too. For politicians next year's election is often what matters. They also have layers of management, in some countries they are frequently moved around so the long term (from any given manager's point of view) is someone else's problem. From what I know academics in computing fields tend to write high quality software. Not all not Donald Knuth level, but they seem to mostly care about quality. reply bumby 18 hours agorootparentI get the politician argument, but politicians aren’t writing software or software requirements, so I don’t think that’s it reply ChrisMarshallNY 20 hours agoparentprevFrom what they wrote, \"small startups\" are part of that \"corporate world.\" From my experience, the cultural differences between large corporations, and smaller startups, is night and day. Often, neither one is functional; but they are dysfunctional, in different ways. For myself, I was never happy until I was able to helm my own ship. A lot of folks think that this means \"hobby programmer,\" but I don't actually fit that template. reply fireflash38 17 hours agorootparentI vote we bring back artisan. Someone who takes pride in their work, to a form of artistry, and just like in a lot of good art: not overly complicated reply ChrisMarshallNY 17 hours agorootparentNot all artisanal is simple. Here's a carved rosewood dragon, from Bali: https://imgur.com/a/nwyGSqT reply swatcoder 19 hours agoparentprev> It’s not the “programming industry” that OP hates, it’s the “corporate world”. To add to this, the \"industry\" is very big and fundamentally quite diverse in character. But right now we're on the tail end of a big surge in growth, and those surges tend to introruce a lot of uniformity in their wake. Processes and practices of the orgs are taken as some part of the secret to their success and are adopted by competitors and newcomers, and after a while everybody-ish doing work adjacent to the booming sectors within the industry are approaching it similarly and procedurally. The focus is on outmaneuvering competing businesses for a slice of the growiing pie, and matters of concern of the craft itself or long-term engineering vision are generally deprioritized. This is not a permanent condition or a universal one. All along, there were still people and orgs and departments doing things differently, but they did become harder to spot amidst all the boom chasers. And as the boom tapers or bursts, with competition having less at stake, even the homogenized orgs and departments start having the headroom to take a second look at their processes, procedures, and priorities and again start to diversify. It's reasonable to get discouraged if you've only ever seen the kind of orgs you can't stomach anymore, but a little patience can find you with opportunities you're more comfortable with. Some dedicated pavement pounding and deep digging for the orgs that never hopped on the bandwagon can make it happen to. Different kinds of orgs are out there now, and more will come to look different again in some coming years. reply PUSH_AX 20 hours agoparentprevCorporate? I think ultimately we’re talking about any business here. And a business doesn’t exist to facilitate engineers to go back and forth on a PR for a week, or to fantasise about abstractions all day. The entire problem is the vast majority of engineers have an inability to recognise the business function of their output. They live in their own worlds with tunnel vision on minutia. I can’t pin point when this happened but engineering is a complete circus in most companies. The horrifying thing is there is buy in at senior management, like the engineers have convinced everyone that it should take weeks to deliver some trivial feature, because God forbid they don’t deliver it by using every dogmatic and koolaid driven process they’ve picked up from others over the years. You work for a business that’s trying to make money, not a software engineering sandbox charity. Of course there needs to be some balance, but boy is it skewed one way for most right now. reply pyrale 20 hours agorootparent> The entire problem is the vast majority of engineers have an inability to recognise the business function of their output. Who would have thought this would happens when actual business talks to a business analyst, who talks with a product owner, who talks with the engineer (when a PO proxy didn't manage to squeeze in between them). reply PUSH_AX 20 hours agorootparentI’m sorry but I think it’s cultural, I’ve worked in enough early stage startups where the first engineers are working directly with CXOs, and they’re still firmly living in lala engineering land. reply pyrale 20 hours agoparentprev> the bottom line is if you aren’t moving the needle economically for the company, you’re a liability. That's fine. The issue comes when you fail to explain how stuff like keeping recent versions of your software or taking some time to fix (at least some of) the bugs moves the needle to people that would never fly a plane that doesn't receive maintenance. The issue, in economic terms, is that a significant share of our industry's sponsors are the kind of clients that make a market for lemons. reply yodsanklai 20 hours agoparentprev> Find comfort in programming outside of the corporate world and practicing the art It's hard to practice the art on the side when you already work hard in corporation. However, I think it's possible to have a bit of fun programming in the corporate world. Besides, the incentives between managements and programmers do overlap. It's not like all managers are stupid. If the codebase is too messy, or lead to too many productions incidents, it makes sense to clean it up and refactor, or use different tools or languages. reply atmosx 19 hours agoparentprevThat is true. But the way you present the reality of the industry makes it sound like anyone could do anything. That is, obviously, not the case. For example, research lab code usually sucks big time, while other industries might higher standards. Some teams try to make up for lack of personnel by implementing extreme level of automation, in that case you need high quality code, with well thought abstractions and there are only so many engineers who will deliver that. So it’s not just “coffee -> code” machine. But the idea that a suit cares about the implementation details, programming languages and such is obviously not true and this community sometimes make it seem as if these things matter. They do to us, engineers, no one else cares much like my wife couldn’t care less about LBJ being better than MJ at basketball (he is not, obviously). reply forinti 20 hours agoparentprevBest job I ever had with regards to coding was for a small family business. I had to meet the requirements, of course, but otherwise I had total liberty. OTOH, nowadays I also have to deal with young (and not so young) coders that insist on very baroque designs that don't really help to achieve business goals and actually hinder progress. reply leke 19 hours agoparentprevThis. I've been very happily working in a small company and we recently got a new CTO. In a couple of days we will find out which 6 of us are being terminated. Corporate fat trimmings and all that. reply from-nibly 13 hours agoparentprevId argue that there is art in figuring out how to continuously churn out features. Its really hard to write your code in such a way it can handle being jerked around, all while not wasting time on what might happen. reply ericyd 19 hours agoparentprevI was coming to say something very similar. The hard truth is that the society-changing projects this person wants to work on are exceptionally rare, and most work boils down to selling products to consumers. Not that I'm saying this is ideal, but if it were easy to create deep and inspiring work that paid well, everyone would be doing it. reply groestl 20 hours agoparentprevProgramming without moving the the needle on _something_ is, ultimately, ugly. Granted, not all needles are worth money. But for the subset of needles that do, you can bang out all the beautiful code you want, and you will get respect for it, in a functional org, even corporate. Abstractions for abstraction sake are frowned upon for good reason. reply _trampeltier 21 hours agoparentprevA part of the problem is, no user ever look at codebases. Unlike you da a PCB, make an electrical machine, build a bridge, people see the result. In software people see the UI. Also because copying is free, in PCB for ex. every jumper wire cost you, in software they are for free. So why fixing things truely. reply jackcviers3 20 hours agorootparentCopying isn't free though. Every front-end application built on Electron or running in a container that duplicates half of the OS stack burns more memory on my computer, forcing earlier upgrades of either the entire machine or RAM with each year that passes. It's free to produce, but the cost of running more copied software always increases. reply analog31 20 hours agorootparentI think there are a number of per-unit costs of software, because your edge cases get tested more frequently. The risk goes up for users finding bugs and incompatible working environments. They demand more unusual features. If successful, your growing user base attracts the attention of competitors. If coupled with hardware, the rising complexity of software makes the hardware more costly to develop and sustain. It may delay the introduction of newer or more valuable hardware features and products. reply _trampeltier 20 hours agorootparentprevSo yes, it's free for the dev. The user payes the memory and electricity. reply sokoloff 20 hours agorootparentprevBut that at least allows the consumer to decide the tradeoff. If this Electron app or container costs me more than it’s worth to me, I don’t run it. reply pyrale 20 hours agorootparent> But that at least allows the consumer to decide the tradeoff. ...If they connect the dots. reply jackcviers3 9 hours agorootparentWhen consumer software still came on physical media, nearly everything advertised the amount of ram and minimum system and cpu requirements necessary to run the software. That just isn't the case nowadays, so you don't know there will be trouble until it occurs at runtime. I can limit the memory available to ALL the tools I use every day (I only do it for docker and jvm stuff), set priority levels, etc., but it feels very weird for a brand new laptop to hit swap after a few days of uptime. reply andrewfromx 20 hours agoparentprevdepends on your manager! I just recently told an engineer \"well this is more art vs science, so paint the picture anyway you want\" and left it to them to write the code the right way. reply ricardo81 21 hours agoparentprev>corporate world That was my take, and an unwillingness to compromise on their principles. Sometimes the compromise may be less money but a more fulfilling role. reply andy99 20 hours agorootparent> Sometimes the compromise may be less money but a more fulfilling role Once one reaches a point in their career where they have options this is almost universally true. It's in fact the reason why some jobs pay more, because they need to for people to do them instead of something more fulfilling. I've had jobs where I thought with a few changes this would be awesome, but eventually realized it's those few differences that mean someone is going to pay me well to do it. Depending on many things, this may be worth it to you or not. reply ricardo81 20 hours agorootparentFair point. Maybe it applies to more experienced people who can afford to pick and choose. The article didn't mention their financial circumstance, I got the vibe it was someone younger. It read a little disjointed and it's hard to tell whether they sought jobs they believed in or whether they were satisfying an imperative financial need. reply ckdarby 20 hours agoparentprevYour \"beautiful\" code won't be around if the company isn't around. If you want to do that then build a open source project and a company around it. reply racional 19 hours agoparentprevThe corporate world doesn’t give a shit about finesse, abstractions, witty or beautiful code. Right, but that wasn't what the OP was talking about. In fact the issues they were concerned about were pretty much orthogonal to that. You're trying to make their complaint sound lame and pollyannaish, but really it wasn't. reply pydry 20 hours agoparentprevIt's not just the corporate world, it's capitalism in general. I could point out a million people who have made rhyming criticisms of this type before programming even existed. Until those criticisms are met with widespread solid agreement instead of outright hostility or even a resigned \"well, it's better than all the alternatives\" then nothing will change. Ive lost count of the number of times Ive seen programmers complain bitterly about e.g. alienation, forever oblivious to the fact that they are rehashing Marx. This post is no exception. When push comes to shove though, 0 of these people would actually dare to call themselves a Marxist. reply jampekka 19 hours agorootparentYou're not supposed to connect the dots. That could lead to effective reform. reply p0nce 20 hours agorootparentprevReading Harry Braverman suitably explains a lot of what is going in programming. reply jajko 21 hours agoparentprevAnd this is general approach, nothing malevolent against IT geeks like some less experienced try to project themselves. They want plumbers also just to keep things running and implement requirements, not have academic discussions about fine art of optimized water flow. Companies are there to make money for the owners and thats it, not on some altruistic missions. I think OP could be better served in academia as long as he keeps greed for money at bay, which some manage better than others over time. reply krautsourced 20 hours agorootparentThe last bit is very true - companies are making money for the owners _and_ to pay the programmer's often relatively high salary. It's a general rule in life that the more 'fun' or 'fulfilling' your job is, the more likely it is to pay peanuts. reply z3phyr 20 hours agorootparentprevNope. Academia has a very sad bottom line as well. What OP needs is enough financial stability and political will that they can do whatever they want. This can be slowly achieved by grinding at a corporation, taking political control and grinding or by violence / threat of violence. reply jampekka 16 hours agorootparentAcademia can be pretty great if you can live with economic uncertainty, non-unreasonable pay and aren't interested in careerism or that your work has any real impact outside handful of other academics. There's of course a lot of bullshit, but you can sort of choose the tradeoff between bullshit and career development/stability. If you're OK with a high chance of never getting a permanent job, in many places you can do practically whatever you want. And if you e.g. know how to code, you can usually go to the industry churn as a backup when your grant streak runs out. But yes, in the bigger picture, the latter are the sustainable course of action. There's only so many, or rather frew, grants. reply _a_a_a_ 21 hours agoparentprevYeah, maybe they don't care about abstraction and beautiful code, but they suddenly start caring when technical debt caused by absence of these things starts to hit, but they are too often unable to see that the two are related. In my personal project I spend a huge amount of time tidying things up, abstracting, cleaning, commenting and that has really started to pay off as the project grew. If I'd let it deteriorate into a random bowl of software stew, I have come to a dead end by now, eternally firefighting instead of progressing. > if you aren’t moving the needle economically for the company, you’re a liability yup reply rileymat2 20 hours agorootparentYes, many people present a choice between “code quality” and speed, but this choice is false because tickets are not independent. Choices made with the current one affect the speed of the next. Sure you may make a tradeoff between speed and quality in a particular task, but that does not hold over a week or month of work. reply mrkeen 20 hours agorootparentprev> If I'd let it deteriorate into a random bowl of software stew, I have come to a dead end by now, eternally firefighting instead of progressing. It's real. It's what I'm doing at work now. Every few months we start a new big project. Sometimes they're business-driven (end users can now have many X instead of one X), sometimes they're compliance-driven (we now need to block users who associate with users in blocked countries), sometimes they're tech-debt-driven (migrate from self-managed VMs into a dedicated provider). We keep finding missing parts we overlooked. Sometimes it's from us having rushed it, other times it's from consultants getting fired while they're working on it, and others struggling to continue the vision in the right direction. Sometimes it's bad tooling - our new managed Kafka host has a mirror-maker tool that doesn't quite mirror properly, or intellij/gradle will flag that a class is missing, but not why (i.e. which dependency is missing!). reply badpun 20 hours agoparentprevI don't think it's \"corporate world\", but just capitalism. Non-corporate companies often have thinner margins than corporations and thus skimp on \"extras\" such as quality, craftsmanship etc. even more. reply sokoloff 20 hours agorootparentWhat is a non-corporate company? reply badpun 20 hours agorootparentCompany that's not a corporation. As per dictionary: - company: a commercial business. - corporation: a large company or group of companies authorized to act as a single entity and recognized as such in law. reply malermeister 20 hours agorootparentprevState-owned companies or worker-owned coops come to mind. reply andyjohnson0 20 hours agoprevI've been a developer for 30+ years and unfortunately there's not a lot in the OP that I can disagree with. I wish I could. Young people get told that building tech and software is a creative endeavour where they can apply their innate passion. Certain kinds of minds get attracted to work that is based on symbols and abstraction and repetitive activities. Years pass and the shareholders get fat. The truth is that software development is almost entirely an economic activity, and an extractive one at that. The working environment is certainly better than mining gold or bauxite, but almost all of us are hacking code out of the code-face merely to enrich other people: the people with the corner offices, and the people above them with the yachts. Those people don't care about what we do, or our pretentiona about it being an art or a craft, or what we think is important. And in fact they mostly think we're losers for wasting our time doing it [1]. Some of these people have pretty much told me this to my face. Other posters here are correct that the underlying error is looking for meaning in (corporate) work. But people need meaning, and we have to expend so much of our only lives working, that there can be few alternatives. I don't have any answers to that. [1] https://ribbonfarm.wpenginepowered.com/wp-content/uploads/20... reply neilv 15 hours agoparent> And in fact they mostly think we're losers for wasting our time doing it True, this happens enough places to be a thing. Of the people who think the software \"little people\" are losers, I think there's at least two versions: * They think the work is skilled, and that the worker has valuable expertise, and is worth listening to. Even though they still think the person is a loser for being a salaried commodity rather than a \"smartest guy in the room\" or \"leader\", like them, who's a real player with the big rewards. * They think software work is low-skilled grunt, the workers are a temporary evil, are uppity about compensation and loyalty (this is 'improving' recently) and don't know their place, and their input has no value. And of course software workers are losers in the world of business, because they don't operate and profit personally like real players do. The latter is a worse situation to be in. :) reply claytongulick 20 hours agoparentprev> almost all of us are hacking code out of the code-face merely to enrich other people Colloquially known as \"work\". The thing we all do in order to have nice things and a society. > to enrich other people: the people with the corner offices, and the people above them with the yachts Good! That would mean the thing I produced had value. I hope everything I create has value. One day I hope that I've practiced enough, learned enough and gained enough experience and savings that I can employ others responsibly. If I have good ideas and do it right, there's a chance that I could have that yacht. It's what we call economic incentive, or \"motivation\". reply andyjohnson0 19 hours agorootparent> If I have good ideas and do it right, there's a chance that I could have that yacht. It's what we call economic incentive, or \"motivation\". I dunno man, but you're clearly a believer. I hope it sustains you over the long-term. reply claytongulick 15 hours agorootparentA believer? In what? An economic system that, for all its flaws, has proven to be the most successful for the most people in all of human history? I guess so. But happy to hear about proven alternatives. > I hope it sustains you over the long-term Well, I'm about 50, started from very little, worked hard my whole life, and have managed to find a degree of success. Seems to have worked out so far. I hope it continues. Certainly better than the alternative - blaming everyone else, the successful, and \"the system\" and not doing as much as I could to take responsibility and better myself. reply Lariscus 20 hours agorootparentprevWagie, wagie! Get in cagie! Boss needs help now don't be lazy Zero breaks will make you crazy I'll tell the guards to get their tazie Need to get those new iPhones Got to pay those student loans Work your fingers to the bones Bosses need vacation homes Don't trust unions, vote in pairs Buy all of boss' consumer wares We'll stay seated in our chairs And make our bosses millionaires Love your work, love the pain Feel the life drain from your brain Think of all you have to gain As your dreams go down the drain Come on wagie, join the crew! Don't you want your wages too? And if the boss man makes you blue You deserve it, you're a screw! Weekend comes 'round after ages You can come collect your wages Throw your parties, have your rages Then get back into your cages reply alphazard 20 hours agoprevI would describe \"where the industry is heading\" and has been heading as becoming infiltrated by imposters. There is tremendous value to be created by writing software, and the high salaries in tech reflect that. That wealth attracts all sorts of imposters. We see this most straightforwardly as the cat and mouse game that is hiring qualified engineers. Top of funnel to bottom of funnel ratio has never been higher. Less obviously, there are now entire \"Imposter Roles\" like Product Manager, scrum master, etc. Once they're in, they bring more because there is safety in numbers. Smart people, capable of innovating, now have to hand-hold a cast of incompetent characters through the experience of creativity, innovation, research, discovery, engineering, etc. Often because these incompetent characters have the final say on what the smart folks are allowed to spend their time on. Maybe you've been in a meeting where the engineers spend the first 10 minutes talking and know how to fix the customer's problem, then the product managers come in round-robin to get hand-held to the same conclusion? That's what this looks like. reply notacoward 14 hours agoparentThe imposter invasion has an even more insidious effect: the creation of software that sounds great (because making it sound great was its authors' forte) but actually sucks to work with (because making good software was not their forte). It has performance issues, security holes, no observability, doesn't scale well, has insane configuration or dependency issues, etc. FAANG companies in particular are full of this crap, written for the \"brag post\" so the author could get their promotion, then effectively abandoned as they went elsewhere before all the cheesy shortcuts became apparent. Slick talking has replaced sound design as the most valuable skill a software engineer can have, and it shows everywhere. reply ponector 21 hours agoprevAfter 10+ years of work in enterprise software development I don't care about the results or where the circus is heading. Only thing I care now is a paycheck with ridiculously high salary. reply lpapez 20 hours agoparent> Only thing I care now is a paycheck with ridiculously high salary. ... and also about minimizing the amount of stress experienced. Mostly through simply doing the bare possible minimum, but sometimes also doing a bit more to prevent stress down the line. Caring-just-enough-to-not-care-a-lot-later-driven development I call it. reply ponector 20 hours agorootparentYes, that is true. Do bare minimum but brag a lot. Maximum visibility! Like you moved mountains. reply coldcode 21 hours agoprevI spent 40 years as a programmer, but I always looked for ways to use creativity and imagination and never be a rote coder. Despite having success in my last job leading a small team building a strategically important piece of code (if it didn't work all the time, there would be 100,000 angry people every day, not to mention a whole cast of angry executives), I finally got tired of working so hard and decided to retire. You must find a new way or place to be a programmer if your job is not motivating (like starting your own company or trying something new) or finding another line of work. Reinventing yourself isn't easy and is much harder today, but you can do it if you want it enough. reply time0ut 20 hours agoprevProgramming, even when in service of my corporate overlords, is invigorating. Coaxing the machines do my bidding never gets old. I could do it all day and not get tired. During those rare times where much programming is needed, I often lose track of time only to realize I've been at it for 15 hours straight. Its been this way for the nearly 20 years I've been doing it. Sadly, programming is only a minor part of the job. The further I get, the more that is true. I might only actually program an hour or two a week. The rest is spent in ridiculous meetings, hand holding people who fail to read, trying to coax others to coax the machines to do what is needed, \"planning\", and similar noise. The only rewarding part is mentoring younger programmers. I continue to do it because its a safe path to retirement and I am nearly there. My plans for retirement: program stuff I want to program for the pure joy of it. reply lolinder 21 hours agoprev> 90% of the time when I read descriptions it is excruciatingly obvious to me that whatever code the chosen candidates will end up writing at this job will be completely removed from any important problem not only humanity, but even any individual human has ever had. Startup culture is shamelessly at the forefront of this industry’s ‘produce more code and ask less questions’ policy. I would suggest that part of the problem is that many developers wish they could work on meaningful projects with good people at the pay rate that they are currently getting at $FAANG or with the amount of equity they'd be getting at $STARTUP. In practice, employees treat meaning, independence, agency, and work-life balance as currency and are willing to take a pay cut in order to secure a meaningful job. Better jobs are out there (I found one), but if you're currently working for an adtech company or an AI startup you will almost certainly need to be willing to look at a much lower salary than you might be accustomed to. reply slfnflctd 20 hours agoparentI'm one of those people who will happily take a pretty big pay cut for my sanity 9 times out of 10. I grew up in a low income household and have lived on very little at several points in my adult life, it comes naturally to me and I almost prefer it in some ways. My mental health is more likely to be threatened by over-stress or a lack of meaning than by having to stretch a shoestring budget. The only time staying in a job I don't have many positive feelings about (or worse, only negative feelings) makes sense to me is if I have very specific plans for the extra money I'm making and very good odds of seeing the plan through. Such a way of life isn't for everyone, but I strongly advise those who maybe lean less materialist than the norm and/or aren't afraid of more frugal living to consider it. Especially if you've been asking yourself more than once a week lately how much more of 'this great job you have' you can tolerate without a breakdown. reply wincy 20 hours agoparentprevI'm a software engineer at a large construction company and find my work deeply meaningful. We make sure people building actual stuff stay safe with our tools, and work more efficiently. It's so cool to see mind blowing, tangible projects get built. You're right, FAANG comp is definitely way higher, but I really enjoy where I work and it's the first place in a long time I haven't felt an urge to start looking for something else a couple years in. reply Culonavirus 18 hours agorootparent> I'm a software engineer at a large construction company and find my work deeply meaningful. We make sure people building actual stuff stay safe with our tools, and work more efficiently. And if the management is seeing your work and appreciates it, that's pretty much a dream job. Good for you. reply duggan 20 hours agoparentprevAgreed, there are plenty of small companies out there. Early startups, pre or early product-market-fit, etc. Mostly can't afford to pay large salaries. Need people who are interested and self-motivated. Willing to be flexible in various ways – a lot more is negotiable with small companies. They aren't going to get in front of your face easily – you'll need to seek them out. reply msephton 21 hours agoprevSolution: go independent, work on your own ideas, and sell them to consumers. That might be your own start-up, but for me it was to become an indie game developer. One of my games, YOYOZO, was featured in Ars Technica's \"Best Video Games of 2023\" so I feel my decision was the right one. reply colund 20 hours agoparentOut of curiosity, how did you support yourself financially while creating the game? Did you also do freelancing or did you use savings etc? reply msephton 20 hours agorootparentI funded myself with the proceeds of earlier games. The game in question took only 23 days to make. I'd say I make one game every couple of months. The initial short ramp up to the first game sales was funded by COVID-19, some freelance, some savings, some ebaying. But on the whole my game sales fund the next game. reply thn-gap 21 hours agoparentprevHow did you do this transition? How did you feel about your decision before your game was featured? I've been thinking about this path, but I feel too hesitant to jump. reply msephton 20 hours agorootparentBasically, lockdown project. I made the decision in early 2020, shortly the first C-19 lockdown happened in the United Kingdom. I had extra time every day given that my usual routines, childcare, etc were disrupted. And I had a Playdate developer preview unit. I switched from web and app development to purely games. I'd previously made games but only occasionally, as a hobby. Though I do live and breathe classic video games. During lockdown I created many prototypes and a couple of them showed enough promise to become full games. That was the point I went all-in and I haven't looked back. It took time for the device to launch, but again largely coinciding with C-19 restrictions. Through itch and Playdate's Catalog store I make enough money for my modest way of life, so I'm happy. Life gets in the way occasionally, but I keep pushing forward. The accolade was a complete surprise and very encouraging. I wrote a bit about my past year https://blog.gingerbeardman.com/2024/03/07/a-year-in-the-lif... reply the_real_cher 21 hours agoparentprevwhat game Dev stack do you use? reply msephton 20 hours agorootparentI develop mainly for Playdate, so use the Playdate SDK and write Lua code. So everything is created from blank files. A far cry from Godot, Unreal, Unity, Game Maker. You might find this interesting: https://news.ycombinator.com/item?id=38372936 reply the_real_cher 20 hours agorootparentinteresting thanks! Thats cool! I haven't even heard of The playdate before. reply hawk_ 21 hours agoprevI like having sex but don't like being a prostitute. Whatever you do if you don't do on your own terms, you can be miserable. reply dsauerbrun 12 hours agoparentpretty much the same analogy I always use to describe how I feel about the industry. reply game_the0ry 21 hours agoprevI have similar feelings with leetcode. I love software engineering, but leetcode makes me hate software engineering. I just want to build cool stuff. I don't want to implement LRU cache and another leetcode medium-hard in under 40 mins from memory. reply mihaitodor 19 hours agoparentJust say no to it. I decided to go public and add on my LinkedIn and now on GitHub too a disclaimer (see here https://github.com/mihaitodor) that I refuse to do Leetcode-style interviews or anything like that and I'm happier since. Sure, there are companies which will refuse to talk to me because of this, but that's fine. I never passed one of those interviews anyway and always had to take jobs where I didn't have to live code during the interview. reply margorczynski 18 hours agoparentprevYeah the problem these kind of interviews don't even test how well you think about a problem and how capable you are of designing the solution. The expectation is that you basically perfectly memorize the optimal solution (which was probably found by some Ph.D. working on algos). And in the end you're end up implementing some endpoints for a 1k MAU CRUD. reply f0e4c2f7 21 hours agoprevStartup time! Has its own tradeoffs but you get to go compete with the system that is maddening. Imagine them trying to run a race against people who are actually trying? That's why startups are able to win against huge companies with seemingly unlimited resources. They use those resources to fight internally over who controls the resources. Startups have their own perils of course. But you get to do work. Real actual work. reply whiplash451 21 hours agoparentAlso happens in a lot of seemingly-boring midsize companies (not just startups) reply msteffen 19 hours agoprevSeeing a lot of agreement here, so I thought I’d post to say that I don’t agree with much of this. I don’t think the problem is “industry”, and I think open source is often similar. I wrote a short series of blog posts a while ago (in need of revision, but good enough for now…) about decisionmaking in software: https://prog.blog/essays/decisions/ The upshot is that decisions in software are creative products—there isn’t usually a “right answer”, only benefits and drawbacks. And one decision’s consequences become the next decision’s parameters. The reason businesses don’t like it when you start re-litigating old decisions is that the alternatives to what was chosen are typically not strict improvements, and implementing them would require re-making a bunch of other downstream decisions. It’s fine to feel that your new company’s codebase is ugly, but recognize that it got that way because creative professionals needed to make a decision in their codebase with their own backgrounds and limited information about who would be using their software and how. I think that maybe the only alternative is to set up shop as a solo dev. reply msteffen 19 hours agoparent(By extension, I think software developers will be better understood—and we’ll better understand ourselves—once we start seeing our industry as a creative industry and ourselves as creatives. This post feels to me a little bit like a screenwriter complaining that most TV is bad and most screenwriters are forced to crank out episodes and most shows are not solving humanity’s fundamental problems) reply amazingman 3 hours agoprevThis post has an odor of dogmatism. The author seems both legitimately brilliant and a huge pain in the ass to work with. At some point along the path toward \"senior engineer\" and beyond, failure to persuade others of one's value hierarchy says as much about the individual as the group. reply ryukoposting 20 hours agoprevHuh, I guess this is just totally misaligned with my lived experiences working for startups. It's the only environment I've ever worked in where engineers are allowed to do engineering. I don't just write code, I get to be the architect of a broader system. If you don't want to work for a company that makes meaningless bullshit, then... don't. There are plenty of companies making things that are actually useful to society. Go work there instead. reply fuzzy2 20 hours agoparentSounds like you might be better suited for working at a company that doesn’t do products but rather projects for others. Plenty of architecting to go around. Any if you get to work on enough new projects, you actually get the chance to make projects succeed faster by iterating on initial architecture and project setup. It’s still all meaningless bullshit of course, but it’s others’ bullshit. reply ryukoposting 19 hours agorootparentI've found much the opposite. I love working for product companies, because the vision is clear. There's an actual goal in mind, not just \"keep the customer satisfied.\" I helped my last company build the world's first fully wireless neonatal ICU. I help my current company keep people in austere environments connected with each other. If that isn't meaningful stuff, I don't know what is. Is this a geography problem? I feel like I hear complaints about meaninglessness of work from my peers on the west coast far more often than I hear them from my neck of the woods. reply breckenedge 20 hours agoprevMy take on this is that engineering used to be more involved in the product side of the house, but that went away with the rise of PMs and designers. Remote work has made it a bit harder to collaborate, and companies are more willing to hire developers across timezones to save a buck. Figma made it really easy to create high fidelity mockups, which took away UX decision-making from engineering. Many developers are happy to oblige, not wanting to be a part of any discussions. So, what to do about this? That is probably a whole nother series of blog articles. reply neilv 19 hours agoprevAs a software engineer, your craft is about the breadth of software engineering, and embracing professional pride and dedication in doing that well. Well implies towards the goals of the organization. Programming is only one piece, and not the most important. And the nature of the programming you do changes because of the software engineering concerns. (Examples: on a given project, a goal might be that the code be maintainable long-term, or maintainable by others, or not disrupt an interface with another team, or delivered in a certain short timeframe, or work the first time and every time.) Where it gets much more complicated is that a lot of companies are highly inefficient or dysfunctional internally, and don't really permit doing software engineering well. So, you might find yourself not only not allowed to do programming like you love, but also not able to practice or even recognize the craft of software engineering. If you love programming, find a job that will let you do some of what you love, or save your love for your own time. If it's your own time, have especial fun with it, and don't turn it into a job without pay (unless you can also turn it into a paying job, like a startup). reply jstanley 21 hours agoprevThis is part of the programming industry, but it's not the whole thing. I'm reminded of the story of a bunch of blind people all describing different parts of an elephant. You move your hand around a bit and it sort of all feels the same, but that doesn't mean you've touched the whole elephant! Elephants are big. This part in particular stood out: > thousands of lines of unmaintainable spaghetti code engineers were bullied into writing in weeks instead of months using arbitrary trendy technologies. This is not my experience at all. I have 2 part-time jobs writing Perl code, and at both of those jobs the people I encounter are thoughtful and intelligent and want to do a good job (including managers). Nobody is bullied into anything. Nobody wants thousands of lines of new code. We have enough thousands of lines of old code that nobody understands :). Your experience of the programming industry very much depends on what part of it you work in, and specifically who you work with. But I think if you want to \"quit the rat race\", Perl is a good choice, because everyone who wants to rush around chasing fashion trends left Perl behind a long time ago. Also, I'm told Perl developers are getting harder to find so salaries are going up. reply krautsourced 21 hours agoprevThis feels like the author simply went for the entirely wrong jobs. It sounds like what he wants is to make decisions, and those you can only make in small teams, small companies, and in lead positions. Going for any sort of FAANG or corporate job is the opposite of this - and that is not specific to programming jobs in any way. Nobody is 'free to just improve the world' in a large group. reply karmakaze 17 hours agoprevI have experienced these sentiments at various jobs and times. I've also varied my types of jobs to be exploring new areas and higher challenges. Other times, I've found interesting/challenging ways to get work done which may (or may not) pay off in the future--things like code analyzers/generators, etc. On the other extreme, I was terminated early from a contract position for \"doing math at work after hours\"--I was bored and doing Project Euler with a random new language. I totally understood my work was done and was highly paid, so any excuse to cut costs made sense. There's many kinds of 'programming' and the OP only seems to have done standard applications. Maybe get a job at Jane Street and they might be challenged. I myself don't think I'd qualify but I don't complain about the banality of mundane tasks--I find interesting and challenging ways to make software tools that help devs and/or help customers. Somehow I've almost always managed to find a balance of keeping employers happy while carving out time to do experimental work. It's probably a combination of communication, alignment, and trust. Start small, show value in the kinds of things you're talking about, and demonstration is key--talk/complaining won't move the needle. And don't delay key deliverables to do something excessively unusual. reply turtleyacht 21 hours agoprevSome consolation if it can be done: Rewrite the flagship app from the ground-up in a new framework. It's a little easier if most functionality is behind APIs. The requirements are already concrete: make it look and function the same. Express the common business flows with a novel algebra (types). Make logic errors be type errors [1]. These pull requests may never get merged; the feature branch may age for years; at least you gave it an honest go. [1] When people say, \"but most business logic bugs aren't type errors,\" I just want to show them how to make bugs into type errors. -- Matt Parson, from Thinking in Types (2018) by Sandy Maguire. reply jampekka 19 hours agoprevA tip for those who still have the chance to change careers and want to do programming instead of whatever it is that done in vast majority of industry: switch to academia. You won't be paid that much, your employment situation will usually be unstable and you'll have to do some boring bureaucracy like beg for funding and play politics, and will likely have/get to teach. But you'll get to do more or less whateber you want, or at the very least get to decide how to do it. Most projects are greenfield and they work well enough when they work for your purposes. The programming is about the problems, not making yet another CRUD. What you do probably doesn't have much effect on anything beyound your small bubble of collagues, but at least it's usually not actively harmful to society in the way a lot of industry is. You can mostly say and think whatever you want without corporate gagging. I made the switch almost 20 years ago and I'm very glad I did. reply raxxorraxor 2 hours agoparentOr as an alternative, switch to companies that don't sell software only. Of course that is easier if you have a rudimentary technical background, but the industry seems much less \"corporate and bullshit\" and you learn much from adjacent general engineering, which keeps work interesting. The usual software house is a good way to get sensible development experience about tooling and development organization. Perhaps sometimes also about how not to do it, but it often can help. reply rjbwork 19 hours agoparentprevYou neglected to tell us what exactly it is you're talking about... reply jampekka 17 hours agorootparentMeant to talk about switching from industry to academia. A rather embarassing omission indeed, sorry! reply ElSucioDan 19 hours agoparentprevSwitch into what exactly? reply jampekka 17 hours agorootparentTo academia. Was quite a crucial thing to miss in my comment, thanks for pointing out! reply petetnt 20 hours agoprevIt's easy to draw lines to other industries from this too, mainly to music one. The mainstream does not produce or provide to those that would rather do something more interesting or niche, unless the niche becomes popular enough that the mainstream wants to usurp it, thus killing the original interesting ideas in the first place (see: corporations and their pseudo-\"open\" source projects for example). At the same time there's a race of who can sell out the fastest, turning their ideas into corporations and playing the mainstreams game or (most likely) fail trying. Luckily there's always those that choose otherwise and I'll always have more respect the anime avatar person with a nickname that chooses to spend their time on something like improving Atari Jaguar emulators than the \"indie hacker\" who sold their email marketing scheme to Google for 10 million bucks. reply jwpapi 20 hours agoprevI’m coding for my own projects and care about code quality a lot and maybe too much, however in my opinion as a collective our biggest weaknesses is that we are political about everything. If we have a job or a goal this should be our main decision driver. That sometimes means to push back for quality but sometimes just getting the job done. Our goals should be aligned with the companies goal and still we need to accept hierarchies. Stubborn coders can kill a company but coders that can suck their ego will be paid a lot more over time. Not saying you have to, whatever feels right in your life’s philosophy but if you take a job the job is determined by company interest and not your interest. You are free to leave if you don’t like. I honestly think this is best for the society as it makes us productive. reply pylua 20 hours agoprevThis sort of breakdown seems to be happening across multiple industries. I mean, look at Boeing. reply oarla 20 hours agoprevThis tug of war between individual satisfaction and monetization exists in all industries and not just SW engineering. There are very few areas where there is an overlap between solving problems benefits all of humanity while being able to monetize it for a sustainable business(finding a cure for cancer for ex). It's not the fault of any industry or economy etc, it's just a mismatch of expectations vs reality. reply pseudogrammaton 20 hours agoprevSide topic, corporate vs. non-profit sector: Downside: 75% lower rate than standard industry rate (5% lower rate of pay than \"80%-Compa\"). Upside: 38-hr work-week instead of the corporate-standard 50-hr week - effective hourly rate is 5% higher. Plus: Set my own pace, nobody's getting rich at someone else's expense. Rarely, if ever, are there mass layoffs. reply bruh2 19 hours agoparentHow did you find a _technical_ job at a non-profit? What type of role do you perform? reply vitiral 20 hours agoprevThe same kind of introspection lead me to create civboot.org[2] I'm currently creating a Lua-based development environment from scratch in (nearly) pure Lua[3]. There are others out there. You're not alone. PS: Why Lua? Because it's small and readable and makes a great extension language. [2]: github.com/vitiral/civboot [3]: github.com/vitiral/civboot/civlua reply taco-hands 20 hours agoprevAn interesting article and discussion points. Like all theatres of tech, there are great companies and terrible companies to work for. The terrible (big) ones usually pay very well, but they want their pound of flesh and you are there to generate revenue. One thing I do know after 30 years in tech - recruitment is completely, utterly and fundamentally broken!! reply molave 18 hours agoprevThe issue is that at its purest, programming does not sustain itself financially, or it does but not in the short term. The programming industry is designed to be financially profitable (let alone sustainable) even if it's a conceptual dead end when it comes to groundbreaking stuff. reply __lbracket__ 19 hours agoprevEven if you 'quit' corporate, it will be the VCs (if startup) or clients (if consulting). People who care about the craft will suffocate in envs which care about what the craft can do. One way may be to mentally separate the two kinds of programming. At work, code for the org. After work, code for craft. reply hcks 21 hours agoprevThe only example given being Alan Turing cracking Enigma is that right? Also yes being a worker sucks. reply defaultcompany 19 hours agoparentYeah I feel like this article would benefit from some concrete examples of what it is the author is actually envisioning. Products that truly benefit humanity in the strict sense are few and far between. reply galfarragem 20 hours agoprevI love $X but I hate $X industry. This is story of most people lives. reply taco-hands 20 hours agoparentIt depends on how much you need to love or are shaped by a job. 'Live to work' or 'work to live'. reply yeetcode 21 hours agoprevReminds me a whole lot of the opening sections of developer hegemony. reply BroomOfSYS 20 hours agoprev> This is what I really want to do ... This is an incredibly selfish and childish demand. Except of doing the really hard work of finding and CREATING meaning in your everyday life by understanding the problems of other people you want to re-enact with the benefit of hindsight the people that did this successfully in the past. Most people in your corporate job actually are making the same mistake as you, maybe it is time you wise up and call them out on it. Before you can do this at least admit to yourself that you don’t know what to do next either. reply donatj 20 hours agoprevWe were for a time a small company, and we broke off to become an even smaller company. I had a pretty big (perhaps oversized) say in the way things worked, UI, UX, architecture, and had the power to affect and stop decisions I thought would be bad for the users, etc. Working with our designer was a collaborative process. We got bought out by a much bigger company a number of years ago. The pay is better, but the amount of say I have has slipped away basically to almost nothing. We just get told what to build and how it should work and look by people with no actual connection to the product. People who frankly have barely used it and just got assigned to design a new feature, and have very little idea how it fits into the bigger picture. I feel like now I'm only here for my ability to code and not my mind more generally and it's frankly kind of soul crushing. I've considered leaving, but I'm getting old and a well paying job is a trap, doubly so when you now have kids. reply cmaggiulli 12 hours agoprevThat was an absolutely ridiculous article reply yaky 20 hours agoprevI have had the same thoughts. In my opinion, from the developer's perspective, there are two issues in the industry: 1. Conveyorization of development process. Developers write code, that's it. Most what I have done for the past 6 years was do ticket-based work, constantly moving from project to project. Ironically, at the start of my carreer, I was responsible for an entire internal application (including designing new features, being on-call, and talking to end-users), so I grokked the entire setup and purpose. 2. Self-perpetuating push for constant change for the sake of change. Producer (e.g: tech corporation) releases an update to their product to improve some internal metric or make more money -> Consumer updates their product (or jumps on the hype for next big thing) -> Producer metrics go up -> Repeat. This keeps both Producer's and Consumer's developers employed while providing very marginal benefits. While this is a bit of a strawman, think of how many versions (and names!) Of .NET, or React, Angular, Vue or any other framework there has been over the last 10 years and whether each version improved much. Combine the two, and, as a developer, you don't know how what you're doing matters, nor why you're doing it at all. reply jacknews 20 hours agoprevThe thing that's killed it for me is scrum, even though I'm also a 'scrum master'. Or maybe because of that. reply JTyQZSnP3cQGa8B 17 hours agoparentScrum seems to be the symptom of bad management though. I have a good manager nowadays and we don't use scrum, but it's because the guy is a good manager. reply Culonavirus 18 hours agoparentprevI always read that as \"scum master\" because that's how the management often thinks about us :D reply phkahler 20 hours agoprevI used to think like that but no more. We're currently working on a new product. One that most the team would like to own and use when/if it gets to market. I'm very much contributing in my area of expertise, and yet... I've had to make some compromises to make target dates. Those dates are not all arbitrary - we need to be at certain events to stir up connections, interest, and get feedback on what we're doing. Half the code is written by another person with vastly different ideas and style, yet we've formed a decent boundary that's stable and we stay on our side. None of it is perfect, but I'm excited about the product. I'd say \"hey come work with us\" to this guy but I honestly don't think he'd be happy. That frustration is coming from inside. reply __jambo 20 hours agoprevin 1950 in the book \"the human use of human beings\", the famous mathematician Norbert Weiner pointed out your exact sentiment. Complaining that instead of solving problems, or doing anything new or interesting, people were using these \"computing machines\" to increase the efficiency of the parts of the capitalist machine that caused the problems in the first place. Nobody listened, and nothing has changed. reply nmoadev 21 hours agoprevThere are people like you. All is not lost. You may find the world of “Civic Tech” better aligned with your values. Look into organizations like Code for America, Center for Humane Technology, the U.S Digital Service, 18F, The Berkman Klein Center, and the Public Interest Technology Initiative at UMass. reply onehair 17 hours agoprevHear hear! reply robblbobbl 19 hours agoprevAgreed. reply bborud 20 hours agoprevI've had a bunch of different roles through the years. From programmer at the bottom of the totem pole to being CEO or CTO in my own company and having my own department in a large corporation. The perspective in these different roles tend to be very different and I have learned a lot in each of these roles. Being at the bottom of the totem pole is the easiest job of the bunch. Your focus is gloriously narrow and straight forward: deliver value within some set of constraints and try to enjoy yourself. Being a leader in charge of people who deliver value is a lot more complex. Especially if you have experience being one of those who you are tasked to lead. You remember what it was like being them, but now you have a wider range of concerns to balance. Yes, there's delivering value, but you also have to take care of your employees, investors and customers. And these concerns will come into conflict with each other. I've spent a lot of time evaluating companies, products, codebases, practices, leaders, developers etc during technical due diligence projects. This has also been a great learning experience to me: the chance to get an intimate glimpse of other people's shops without having to work there. I can recommend doing this kind of work because it is easier to see clearly what is going on when you are not part of it. A lot of problems tend to stem from imbalances. For instance, sometimes I come across companies with problematic leaders who \"rule\" their fiefdoms rather than involve the people working for them in decisions. I also sometimes see the opposite: a breakdown in discipline where developers lack direction and everyone does their own thing - either because there is nobody to lead them or because developers can't take direction. It isn't uncommon for investors to require companies to replace managers that perform poorly before investing in companies. It is less common to require the removal of problematic developers. Quite possibly because tech DD processes often aren't thorough enough to discover what goes on in the bowels of the beast. I've actually written tech DD reports where I've made both types of recommendations: both recommending getting rid of bad leadership (which is usually an easy recommendation to make), and I've had cases where I have concluded that sometimes entire software teams need to be restructured. In the latter case it is devilishly hard to actually come up with recommendations for how you fix broken teams. In the corporate world (of large companies) these things are harder because you will encounter more ineffective middle managers (and layers thereof) and quite often, that more senior management have their positions not on merit, but due to political games. To make positive change in large corporations is harder. But it can be done. However it will fail 100% of the time if one resigns oneself to \"I'm just a minion - I have no power\". From personal experience though: it is hard to make change from the bottom without somehow disappearing into management. Corporate cultures tend to assume that only certain types of \"officer class employees\" can make decisions. (Which is how I wound up as a programmer in a large corporation with a VP title. Yes, it was confusing and weird) reply amboo7 1 hour agoparentNicely put. I also spent decades in the SW industry, tried about a dozen things, but chose to stay out of management. For me, business and engineering are two completely different areas, often conflicting, and my training is extensively in math and engineering. Trying to do both ends up with mediocrity almost certainly. reply Barrin92 20 hours agoprev\"remember that historically the most groundbreaking achievements in early computing have happened in the service of the greater good. This is what I really want to do: I want every how - from the programming language and paradigm, architecture, down to every line of code and piece of syntax - to be informed by the why of the system that is being built. And I want that why to be a reflection of a genuine existing need, not some bullshit business metric which pretty much exists for its own sake.\" That's a pretty achievable goal, work in the defense industry and the public sector. Programmers are in high demand, the economic incentives align with building things correctly and don't consist of shipping AI powered coffee machines in the next four weeks and the technical work is usually complex and interesting. reply agentultra 20 hours agoprevWelcome to post-capitalism. We’re no longer in the realm of free markets for goods and services. We now make up new markets and deal in abstract commodities such as attention and relationships. The need we are building things for is capital: profits over people. It’s not all bad though. “The industry,” is a big place. There are companies out there that might share a good number of your values. Unless you’re in a certain privileged position in this world you may have to compromise on a few principles here and there on your journey. reply agentultra 18 hours agoparentThough I should add, never give up on your principles. We may have to make compromises with ourselves because we live in a society in which it costs money to live. Your job isn't your identity though and there are some lines which aren't worth crossing. It's also hard to sustain a career in this environment alone for long periods of time. Consider your relationships as your most important asset. And consider organizing. Differences can be made. Programming computers won't get you there. It will take some changes to the social environment around you. reply light_hue_1 21 hours agoprev [–] > 90% of the time when I read descriptions it is excruciatingly obvious to me that whatever code the chosen candidates will end up writing at this job will be completely removed from any important problem not only humanity, but even any individual human has ever had > ... > So far I haven’t had the chance to actually meet someone who would share these values in any significant sense and would want to do this kind of engineering work There are countless such places! There are NGOs that desperately need good engineers to build software that's essential to helping people. There are labs that do research on various disorders, or on hard engineering problems that need desperately software engineers. You're totally looking in the wrong places. reply vaylian 20 hours agoparent [–] > You're totally looking in the wrong places. Are there some places you can recommend? reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The writer laments the programming industry's emphasis on coding over critical thinking and meaningful work in software engineering roles.",
      "Criticizes the prioritization of trends over genuine innovation in engineering, highlighting the need for a more purposeful approach.",
      "Expresses a desire to collaborate with like-minded individuals to address societal needs and values, aiming for a more impactful programming perspective."
    ],
    "commentSummary": [
      "The discussion on deathbyabstraction.com delves into the challenges programmers face in the corporate world, balancing feature delivery speed with code quality and craftsmanship.",
      "It explores coding practices, work-life balance, and personal fulfillment in the software industry, emphasizing the importance of meaningful work and aligning personal values with company objectives.",
      "The conversation also covers the impact of industry growth on software practices, advocating for work that meets societal needs and offers genuine value, showcasing the trade-offs in pursuing a rewarding programming career."
    ],
    "points": 258,
    "commentCount": 187,
    "retryCount": 0,
    "time": 1713702020
  },
  {
    "id": 40106336,
    "title": "Fritz!Box Modems Hijacked Causing DNS Issues",
    "originLink": "https://crapts.org/2024/04/21/all-fritz-box-modems-have-been-hijacked/",
    "originBody": "Some Fritz!Box modems might have been hijacked By Marco on Sun Apr 21 20243 min read TL;DR: Fritz!Box devices using custom DNS resolution services like Pihole or Adguard might have been compromised by DNS hijacking and using those Fritz!Box devices might be unsafe, especially for Windows users. Update: I updated the article to downscale the severity of the situation. After posting the article on HN, I came to the conclusion based on comments from other HN commenters that the Fritz!Box will not externally resolve *.fritz.box domain names. This it not the case if you use your own DNS resolution service like Pihole or Adguard however, in which case your DNS resolution could still be hijacked. Fritz!Box modems are popular modems by the German company AVM. They are tailored to the some-what more experienced users who want to have more control over their network settings and they can often be used to replace the modem from your cable/DSL/fiber ISP. The company has been around for a long time and Fritz!Box devices are generally considered to be reliable and well worth the price. However, since the beginning of 2024 all of the Fritz!Box devices have been hijacked. In short, the DHCP server on these modems hands out leases with the DNS suffix fritz.box, which means that domains in DNS requests are appended with the suffix. Unfortunately, this setting cannot be modified. Normally this doesn't have to be a problem, but since the beginning of this year the fritz.box DNS suffix is an actual registered domain and the owner of this domain is not AVM or anyone affiliated to them. This doesn't have to be a problem if you use your Fritz!Box for resolving DNS, which is standard behavior. The Fritz!Box is smart enough to know not to resolve *.fritz.box domains externally. But this isn't the case if you are using Pihole, Adguard or any other DNS resolver. If you resolve DNS outside your Fritz!Box, DNS requests now get forwarded to an unknown entity, which is a case of DNS hijacking. Not every OS deals with DNS suffices in the same way, but at least Windows applies the suffix for all DNS requests which means every DNS request done by a Windows user will now effectively be hijacked. nslookup for google.com returns the IP address of fritz.box in Windows The consequences of this are significant: these Fritz!Box users' internet behavior is now sent directly to an unknown party and are now prone to phishing attacks. As far as I know the latter hasn't happened yet, but it's bound to happen at some point if this is not resolved as soon as possible. Besides the security issues, this also has a negative effect on performance when the registered IP address isn't responding to the DNS requests. I myself have experienced Chrome and Slack to be very slow in resolving network requests after starting up my Windows laptop. AVM's response so far has been lacking except for a tweet that fritz.box domain is in the process of being sold. To me that is alarming in three ways: \"In the process of being sold\" means it is not sold yet and there is no guarantee AVM will actually take ownership of the domain. Even if the domain is acquired by AVM, this still means that every DNS request will now go over the internet directly to AVM. I never asked for this. A performance penalty will remain. Your internet will sometimes appear to be really slow when the registered IP address for the DNS suffix domain is not actually responding with a DNS resolution. The only proper way to resolve this matter in my opinion is to disable the DNS suffix by default. So far there is no indication that AVM is planning to enable this option in the near future. If you want to do something today without waiting for AVM, the following remedies are available: Easiest solution: don't use your own DNS resolution service and keep DNS resolution on the Fritz!Box If you want to keep using Adguard, add the following upstream DNS rule: [/fritz.box/]192.168.0.1 in Settings > DNS settings. Use a custom DHCP server and don't set the DNS suffix to fritz.box It is my understanding that using your own DNS resolution without specific measures for now is unsafe and dangerous to use. The lack of a proper response from AVM is even more alarming and I'm not sure they understand the gravity of the situation. I sincerely hope the matter gets resolved soon enough. PS. I didn't discover this by myself. The article above is a summary of what other people have discovered, and some even warned for this years ago. Restore WSL2 network connectivity when using a VPN If you are using WSL for the company you are working for, it might be that the VPN solution may affect network connectivity in WSL, resulting in no internet connectivity. wsl-vpnkit is a solution for this problem Tue May 17 2022",
    "commentLink": "https://news.ycombinator.com/item?id=40106336",
    "commentBody": "Some Fritz!Box modems might have been hijacked (crapts.org)232 points by mmcnl 18 hours agohidepastfavorite124 comments compumike 18 hours agoThis is a good reason to use domain names with a trailing dot, right? Such as https://news.ycombinator.com./ to specify a FQDN, instead of https://news.ycombinator.com/ which is not fully qualified. The trailing dot keeps the DNS resolver from trying system domain suffixes. reply compumike 17 hours agoparentI'll note that many websites do NOT support this: https://duckduckgo.com./ - blank page https://www.google.com./ - 301 redirect to non-trailing-dot https://www.amazon.com./ - works But even \"works\" means that the page makes lots of requests to other subdomains etc which do not have the trailing dot, so are still vulnerable for DNS hijack if you have search domains set on your system. So while using domains with a trailing dot is a strongly good idea for calling APIs, etc. it is not a practical solution for the end user with a web browser. reply farhaven 18 hours agoparentprevIn this case, that won't help, because `.box` is already a TLD and `fritz.box` has been registered by someone. Compare these two, the first is from my laptop connected to a Fritz!Box, the 2nd. one is from a server that's not connected to any sort of Fritz!Box: Expected result, resolved by the box itself: $ host fritz.box. fritz.box has address 192.168.178.1 fritz.box has IPv6 address fd00::e72:74ff:fece:6656 fritz.box has IPv6 address 2a02:908:616:a8c0:e72:74ff:fece:6656 Result if for some reason, DNS resolution fails on the box (e.g. you're not connected to your own network, someone disabled the resolver on the box, someone configured a non-box DNS on your machine): $ host fritz.box. fritz.box has address 45.76.93.104 fritz.box has IPv6 address 2001:19f0:6c00:1b0e:5400:4ff:fecd:7828 reply FL410 18 hours agorootparentYour query results make sense, since the Fritz!Box is authoritative for the (local) .box tld. Try again with google.com and google.com. If you're using Windows, it should append .fritz.box to the former, which is the issue here. reply peanut-walrus 17 hours agoprevHm, curious behavior on my Windows box: nslookup is indeed always applying all the search suffixes whenever I do a lookup, but if I just use the normal resolution process (for example running `ping www.google.com` etc), then the value of `HKLM\\Software\\Policies\\Microsoft\\Windows NT\\DNSClient\\AppendToMultiLabelName` is respected, which defaults to 0 since Vista. So this shouldn't really be an issue for most people, but highlights once again that you should never ever use a domain in your infrastructure that you do not own or at the very least use one of the suffixes from https://www.rfc-editor.org/rfc/rfc6762#appendix-G reply hacst 17 hours agoparentThat matches my observation on Windows 11. Looking at wireshark while doing the resolution I see the following: Normal queries never use the the suffix. nslookup does, which the resolver answers with NXDOMAIN Fritz box allows you to capture traffic towards the ISP too and there I never see such a suffix query in either case. So I assume the fritz resolver directly responds to those. That does not really match the behavior described in the OP but I would be very surprised if the behavior described there wouldn't have lead to a big outcry much earlier. reply mmcnl 17 hours agoparentprevCan we be absolutely sure the \"normal resolution mode\" is always used? I'm happy to accept that impact might be not as severe as stated, but to me it's very scary that a simple nslookup for google.com returns the IP address of fritz.box. reply freitasm 14 hours agorootparentI replaced a Fritz.Box many years ago and a Windows-based laptop I have here still tries a lookup to frit.box every few seconds. It's Monday morning here and I just started the laptop. It's still doing lookups on fritz.box. Does anyone know where and why Windows is requesting this? reply PaulKeeble 18 hours agoprevI am just not interested in a router that isn't running open source firmware ever again. Not only do they have all the features you might need but the updates keep coming alongside all the nice security patches. I wish more WiFi devices for access points got their code into the kernel quicker so the support was more extensive. reply orbital-decay 17 hours agoparentThis particular hijack has little to do with being open/closed source (Fritz!Box was open source for many years though). They have been around forever, I don't think custom TLDs such as .box were a thing when they chose fritz.box as the default name. reply lolinder 17 hours agorootparentBut they were a thing for the past 12+ years when they manufactured most of the routers that are currently in service. reply dTal 17 hours agorootparentprevIt has everything to do with being open/closed source. If it were open, you could trivially fix this behavior. Instead, and I quote: \"the DHCP server on these modems hands out leases with the DNS suffix fritz.box, which means that domains in DNS requests are appended with the suffix. Unfortunately, this setting cannot be modified... ...The only proper way to resolve this matter in my opinion is to disable the DNS suffix by default. So far there is no indication that AVM is planning to enable this option in the near future.\" reply orbital-decay 16 hours agorootparentWell yeah, quick mitigation is easier with open source. But the cause is still entirely on the gTLD mechanism itself. The ability to register gTLDs such as .zip is ridiculous and opens up this sort of phishing and hijacking in absolutely unforeseen places. reply tetris11 18 hours agoparentprevFritzbox was one of the first open source modem/router combo boxes though. They closed the source a few years back, but in terms of openness there really is nothing else in the modem/router combo space that is actually open source. reply swores 18 hours agorootparentMost people who want a router with open source firmware get one that's compatible with OpenWrt and use that, is there a reason you don't consider that to be using open source firmware? reply tetris11 18 hours agorootparentRouter. I'm asking about a modem, or a modem/router combo that every company makes, but doesn't exist in the open hardware world. I love my wrt54gl as much as the next guy, but I hate having two devices to connect to the internet instead of just one. reply moviuro 17 hours agorootparentSearch forums local to your country and write documentation on how to use Linux or BSD as a modem. For OpenBSD on Orange France FTTH: https://lafibre.info/remplacer-livebox/remplacer-sa-livebox-... or https://try.popho.be/securing-home2.html reply tetris11 17 hours agorootparentThat link forever hangs for me :-( The last time I searched for open hardware, even the implementations running Linux on a desktop PC with a caux adapter were not DOCSIS 3.X compatible. The companies that multiplex the signal down the cables keep updating their standards, both a blessing (for speed) and a curse for maintained code reply tapper 17 hours agorootparentprevwrt54gl in 2024 hahahahahahahahahahahahaha reply tetris11 17 hours agorootparentHelpful. It's still a champion of customizability and supports most major network modes, meaning you don't need to chuck your old wifi devices away. I still have most of my hardware from a decade ago running, and the WRT54GL serves them all quite well as a repeater. reply liendolucas 18 hours agorootparentprevNot even the Omnia from Turris? I still one to buy one of these but they are not cheap. reply npteljes 15 hours agoparentprevI miss guest WiFi from FOSS solutions. I can't even find a guide quickly for VyOS, and this is the one for OpenWRT: https://openwrt.org/docs/guide-user/network/wifi/guestwifi/g.... I fear that if I go down in this rabbithole, it's going to be like my homeserver, but on steroids. The $40 Tenda I use have it out of the box though, and if they stop updating it some years later, I just might buy another $40 something. reply choeger 18 hours agoprevWait a second. Does that mean every DNS request on a Fritz Box network is send to fritz.box first? I query google.com and get google.com.fritz.box every fucking time? Shit. reply greyface- 18 hours agoparentIf your upstream recursive resolver does QNAME minimization, then the only query that will leak beyond them is for \"com.fritz.box\", and because that's a NXDOMAIN, no further query for \"google.com.fritz.box\" is made. If your upstream recursive resolver doesn't do QNAME minimization, then yes. Edit: I stand corrected, see downthread reply jiveturkey 18 hours agorootparentthat’s no saving grace. the fritz resolver would return a result for com.fritz.box so that it can see the full (or next successive) part of the query. qname minimization is useful to defend against on path interception, or data collecting resolvers, not against actively hostile resolvers reply greyface- 18 hours agorootparentCompletely agree that it creates an unacceptable risk if the fritz.box owner is malicious. I'm just pointing out that currently, com.fritz.box doesn't appear to resolve. Edit: actually, I'm wrong, \"NS? com.fritz.box\" returns a NOERROR + fritz.box SOA instead of a NXDOMAIN, which causes QNAME minimization to make the full query, which returns an A. QNAME minimization indeed doesn't actually help. reply avidiax 18 hours agorootparentIt resolves for me: com.fritz.box. 3514 IN AAAA 2001:19f0:6c00:1b0e:5400:4ff:fecd:7828 com.fritz.box. 3600 IN A 45.76.93.104 reply mmcnl 18 hours agoparentprevYes, on Windows at least. As far as I know, Linux and macOS only use the DNS suffix for domains without a dot in the domain. reply namaria 18 hours agoparentprevYeah just sounds like a series of horrible decisions. Hardcode appending a suffix to every DNS request and then not securing the tld? What the shit? reply throwanem 18 hours agorootparentI'd guess it was a decision made a long time before gTLDs came into vogue, maybe a very long time before. If there's a list of falsehoods programmers believe(d) about DNS, \"that TLD will never ever resolve, not ever\" should be somewhere near the top. reply jeroenhd 17 hours agorootparent> that TLD will never ever resolve, not ever There are domains that will never be sold, but none of them are very sexy. RFC2606+RFC6761 list .example, .invalid, .localhost, and .test, but none of those are practical and some come with certain behavioural expectations. There's .home.arpa as well (RFC8375), which may be the most technically correct TLD to use for these domains, but also is one of the least marketable ones. Then there are the IDN test TLDs (إختبار, آزمایشی, 测试, 測試, испытание, परीक्षा, δοκιμή, 테스트, טעסט, テスト, பரிட்சை, let's hope my browser+HN did the RTL mixing right) that also probably won't resolve, but most users probably won't be able to enter any of those websites. AVM could've offered mDNS (if they don't already) and just use .local. reply jiveturkey 18 hours agoparentprevno, not every request. only those that don’t exceed `ndots` number of dots, typically 1 for unix like OSes. so google.com will not have fritz.box appended reply tetha 18 hours agorootparentJust checked, systemd-resolved doesn't even support that behavior anymore[1], so any multi-label FQDN will get resolved without appending the search domain. So that's still a mess, but no mess of \"rip apart the entire home network right now\". 1: https://www.freedesktop.org/software/systemd/man/latest/syst... reply mmcnl 18 hours agorootparentprevThis is not true for Windows unfortunately. Even a lookup for google.com will have fritz.box appended. I added a screenshot to the article for clarity. reply TillE 18 hours agorootparentI don't get that on Windows 11, with a FRITZ!Box that's mostly using the default settings. Server: fritz.box Address: fd00::[etc] Non-authoritative answer: Name: google.com Addresses: 2a00:1450:4001:80b::200e 172.217.19.78 reply cellardweller 17 hours agorootparentCan confirm, fritz.box only gets suffixed for names on the local network, which my Fritzbox 7490 is the authoritative name server for. reply mmcnl 18 hours agorootparentprevThat's interesting. reply andersa 18 hours agoprevHmm. My parents have one of these. Any advice on how to fix it? \"Stop using it\" obviously isn't an option. - Does configuring a custom DNS server (like Cloudflare one) on your local computers solve it? - On the reddit linked at the bottom of the article, someone mentions you can easily use this tool https://www.mengelke.de/Projekte/FritzBox-JSTool to edit the configuration file and change the domain. If that's true, why is the article claiming it's impossible to change? reply fsckboy 18 hours agoparent>\"Stop using it\" obviously isn't an option. we're only talking about the cost of a commodity modem, so buy a new modem, disconnect old is a potential solution reply alt227 18 hours agorootparentA lot of ISPs will not give out their configuration options and handshake credentials to force you to use their provided equipment only. reply h4ckerle 4 hours agorootparentThis is not true in germany where FritzBoxes are most prevalent. reply rakamotog 18 hours agorootparentprevNot exactly, for some ISP's, internet only works with Fitzbox. For other modems, you need to go through months worth of to and fro with ISP to even get them working reply almostnormal 18 hours agorootparentprevFritzBoxes are used as voip server/bpx, printer server, nas, and home automation. And probably more. (German) telcos provide specific FritzBox configuation instructions (select correct sub-branch of provider and contract kind), adding the quest to get real connection data to the attempt to migrate to anything standardized. Switching to something else is not as easy as buying a new modem for most normal people. reply farhaven 18 hours agoparentprev> Does configuring a custom DNS server (like Cloudflare one) on your local computers solve it? No. If anything, that'd make it worse. The issue reported in TFA is that Fritz!Boxes by default resolve the domain `fritz.box` to themselves for their admin interface, even if that domain has been registered on the public internet by someone else. If you configure cloudflare, you'll prevent that, which will _always_ get you the potentially attacker controlled DNS results. reply avidiax 18 hours agorootparentThere is a 2nd issue. If you have a local machine called \"myshare\" and you mistype \"myhsare\", it may resolve to the attacker's machine. reply mmcnl 18 hours agoparentprevAs far as I know, this changes the hostname of the modem, but it doesn't change the DNS suffix in the DHCP server. (PS. I am the author. The article is my understanding of the situation but if I'm wrong on some parts please correct me.) reply avidiax 18 hours agoparentprevBlock 45.76.93.104 and 2001:19f0:6c00:1b0e:5400:4ff:fecd:7828 at the firewall if possible. Setup a local DHCP server, and don't set the fritz.box search domain. Ensure that DNS-over-HTTP (DoH) is enabled where it can be. Set upstream DNS servers that block malware, such as 1.1.1.2 or NextDNS Delete \"fritz.box\" from the domain search list in DNS settings. Educate your parents to be cautious about directly typing domain names or searching from the OmniBox. https://nextdns.io/ https://blog.cloudflare.com/introducing-1-1-1-1-for-families... reply hcurtiss 18 hours agorootparentCaution about directly typing domain names is exactly the opposite of what we've told people for twenty years. reply avidiax 18 hours agorootparent\"Direct dial\" was never a good idea. There is a class of internet users that doesn't use a search engine, and instead types things like \"usedcarsdetroit.com\" in the URL bar until they find something they want. And there is the class that starts with a single word search like \"cars\", which can't go straight to Google. It instead has to see if \"cars.fritz.box\" exists, because perhaps there's a server called \"cars\" on your network. And god forbid that your parent types \"bankofmerica.com\" instead of using a bookmark or their smart phone app. reply Scoundreller 16 hours agorootparentAlso the class that types “Google” into the browser’s search field (back when it was separate from the URL bar). reply Dalewyn 17 hours agorootparentprev>Educate your parents to be cautious about directly typing domain names First it was not clicking links. Now it's not typing addresses? Jesus Bloody Christ my dude, maybe it really was a mistake to make sand think. reply tapper 18 hours agoparentprevflash it with OpenWrt reply adrium 17 hours agoprevToo bad, I tried to buy that domain some years ago as soon as I got my first fritzbox. Back then, I did not find a registrar and did not invest much time in finding one. I am running my own DNS server and configured the fritz.box zone. Very unprofessional of the vendor to assign a public domain. Good reminder to always use https://www.iana.org/domains/reserved and maybe https://www.theregister.com/2018/02/12/icann_corp_home_mail_... They should just release a firmware update that replaces the domain suffix and ultimately to make it configurable. reply nebulous1 17 hours agoparentI have to admit that I got stung when google released .dev as HSTS only, although that was only for local testing. I'm surprised that this company didn't realise that this was problematic before this happened. Also, if the response in the article is actually their only one so far, that's a \"I'll never touch this company again\" response. If they deal with it properly then it's just a bug. reply lexicality 17 hours agoparentprevit wasn't a public TLD until this year when it was registered to be a web3 thing reply lolinder 17 hours agorootparentIt doesn't matter, it's never been a good idea to use a domain that isn't your own or a special-use domain. At some point this might have been a theoretical worry, but it was 13 years ago that ICANN started creating new TLDs by the dozen. There's very little excuse for not correcting this mistake for new hardware at some point in the past 13 years. reply brewmarche 18 hours agoprevTime to make the suffix configurable and default it to something standard like home.arpa (or .internal once it’s official) or a sub-domain thereof, AVM. To me the root problem still seems to be that we use FQDNs virtually nowhere even though that is the intention. Linux and macOS not applying the suffix for multiple labels is just an implementation detail. Maybe we should standardise the behaviour and maybe it’s better to turn it around: consider everything an FQDN and provide an escape mechanism (e.g. an xx-- prefix or an escape TLD)? reply big_paps 18 hours agoprevDoes not seem to be the case anymore: https://www.heise.de/news/Fritz-box-Domain-aus-dem-Verkehr-g... reply jeroenhd 16 hours agoparentAs far as I can see, Heise assumes that just because there's a link to the URS, the domain is no longer under someone else's control. I can't find any confirmation that the URS has actually been invoked. If I were someone trying to spy on specific users, or collecting data maliciously, I would host this HTML on my own server to confuse journalists. Currently, every subdomain (up to any level, as far as I can tell) resolves to an IPv4 and an IPv6 address. I doubt ICANN would do this for seized domains. reply mmcnl 17 hours agoparentprevThe domain is still not owned by AVM so it's still hijacked. reply growt 18 hours agoprevHere in germany you often get a Fritz Box from your internet provider (preconfigured with access data). So for 99% of users, switching to another router is not an option because thats simply the device that came with their internet access. But apart from this issue those are really nice and capable devices. reply dminuoso 17 hours agoparentYou can use your own router in Germany, this is enforced by the regulation agency BNetzA. Your ISP must provide you with sufficient information to set it up. reply jeroenhd 16 hours agorootparentI think it's fair to say the vast majority of users won't be able to pull that off. I doubt even half of them know what a router is, let alone that there are differences between models. For those who know they can use their own modems, sufficient information must be available, but only a sliver of the people with AVM modems will have that kind of knowledge. reply namibj 16 hours agorootparentThere is the class that fails at reading and adhering to IKEA instructions, yeah. But this is something that ask the non-obvious things will get explained to you if you walk into a MediaMarkt to where modern routers are and queue in line for the area's sales person to get to you and tell you what to buy, and how to get your hands on the relevant access credentials/how to get the new one to connect to the ISP. You're forgetting that most installs of non-ISP-provided moderns for residential Internet are set up by the tech person of the household who quite possibly never heard of what a NAS is and why they may want one. Often the only paper manual thing in the box is literally the quick start guide that a motivated person who has what could be called \"common sense\" on treatment of/interaction with computing equipment. You know, the person who knows to check the plugs because they don't consider themselves above it but do know that it's one of if not the first thing they are asked if they can support. reply ahartmetz 15 hours agoparentprevSince 2016, ISPs in Germany are required by law to give you the access data to use third-party modems / routers. Apart from that, I like Fritzboxes, too - I don't use a PC as a router anymore since I first got one. https://de.wikipedia.org/wiki/Routerzwang#Rechtslage_in_Deut... reply growt 14 hours agorootparentSure, but legally allowed and capable and motivated to do so are very different things. Most people I know don’t even change the preset wifi password of their router. reply DogRunner 17 hours agoprevhttps://www.mengelke.de/Projekte/FritzBox-JSTool allow changing the domain of the fritz box routers. It should be enough to fix that issue reply sph 18 hours agoprevI have a Pi-Hole w/ unbound upstream, and the pi-hole is set to conditionally forward requests to *.fritz.box to 192.168.178.1, but should not forward it outside (i.e. to unbound). Quote: \"You can also specify a local domain name (like fritz.box) to ensure queries to devices ending in your local domain name will not leave your network, however, this is optional.\" This is in the Conditional Forwarding section to the Pi-Hole, so I assume it's OK. reply corney91 16 hours agoparentYeah, similarly I use Adguard Home and have this in my upstream config, so I'm hoping I'm safe from this: [/fritz.box/]192.168.178.1 reply Springtime 18 hours agoprevI was wondering when that .box TLD would become a liability for them. reply Terr_ 18 hours agoparent*shakes cane from porch* If I had my 'druthers, there would be zero new TLDs except for country-codes which indicate the a top-level legal jurisdiction over who gets to decide the rest of what happens under 'em. 'Course, that could still backfire this way if someone establishes the Republic of Boxsylvania and won't accept \"bx\". (Also not great if we enter into an era of unprecedented national mergers, splits, and renames.) reply sph 18 hours agoparentprevWhat is worse is that you cannot change your DNS domain from fritz.box. I looked in the settings many times and was unable to find how to do that. reply raverbashing 18 hours agoparentprevYeah. Now imagine the liability behind the .zip tld reply diarrhea 17 hours agorootparentI own a domain along the lines of 'invoice.zip', I thought it’d be fun. But so far, it’s just been useless and expensive. Should I keep it? What are uses cases for such a 'misguided' domain? I thought about putting a blog on it but fear it’d get flagged as malicious left and right. It’d look odd to say the least. If I don’t renew, scammers might get their hands on the domain. reply raverbashing 17 hours agorootparent> What are uses cases for such a 'misguided' domain? Anyone who has invoice.zip on an email should see that as a clickable link if the url detection is right Then for example you put a file on / of your domain that downloads a malicious .zip file See where this is going? reply diarrhea 16 hours agorootparentI meant: legitimate use cases. And I don’t buy into .zip being made part of automatic URL detection in tools, for all the illegitimate reasons it’ll be used for. Vendors of email clients, messengers and chat applications tend to stick to a core of well-known TLDs. reply zirror 17 hours agoprevI can't reproduce the \"worst case\" i.e. that if I ping \"google.com\" it gets first sent to \"google.com.fritz.box\". I'm on windows 10 and have a FRITZ!Box 7590. If I ping \"google.com\" It just queries google.com If I ping a domain I have never visited it just does a query for that domain. It only appends .fritz.box if I, e.g. only ping \"google\". So maybe they fixed it? I also changed quite a lot of settings throughout the years. reply qilo 17 hours agoparentThere's a registry key HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows NT\\DNSClient\\AppendToMultiLabelName [default value - 0 (Do not Append Suffix)] which resolver built into Windows (DNS Client) respects. nslookup contains its own DNS resolver and does not rely on the resolver built into the operating system. The DNS (multi-label) query packets sent by the nslookup tool will append the domains listed in the suffix search order (or primary DNS suffix if the list is empty) irrespective of that registry key. In summary, don't use nslookup to try to get insight into what actually happens when apps/services try to resolve names. ping is probably a better bet, at least it uses Windows resolver which honours the above registry key. reply r9295 17 hours agoparentprevCache perhaps? reply zirror 17 hours agorootparentNo, I think windows by default only applies suffixes to Domains with 0 dots maybe? reply qilo 17 hours agorootparentYes, by default DNS suffixes are appended to short unqualified names only. reply tomputer 13 hours agoprevIt seems the domain fritz.box has been suspended. March 5 was the first time this message got captured on archive.org[1]: The Domain Name you have entered is not available. It has been taken down as a result of dispute resolution proceedings pursuant to the Uniform Rapid Suspension System (URS). The fritz.box name servers also point to URS[2] name servers: Name Server: ursns1.viagenie.ca Name Server: ursns2.viagenie.ca [1] https://web.archive.org/web/20240305162200/https://fritz.box... [2] https://www.icann.org/urs-en reply 66fm472tjy7 17 hours agoprevI cannot confirm this behavior. With a router running FRITZ!OS:7.57 configured to use Google's DNS (in the router only) I get the following on Windows 10 > nslookup google.com Server: fritz.box Address: fd00::[redacted] Non-authoritative answer: Name: google.com Addresses: 2a00:1450:4001:828::200e 142.250.181.238 Update: the connection does have the DNS suffix, so according to the superuser answer linked in OP (which is the first result when looking up what a DNS suffix is), it should get appended to lookups on windows, but it looks like it isn't in my case. > ipconfig [...] Connection-specific DNS Suffix . : fritz.box reply mmcnl 17 hours agoparentI noticed a lot of comments explaining the same thing, but also some confirming my observations. So far it appears the issue is mostly present if you have configured a separate DNS server in the DHCP settings, e.g. DNS is resolved somewhere outside the Fritz!Box. I will investigate further and update the article. reply mahkoh 18 hours agoprevAdding the following to your local systemd.network configuration file should resolve the issue: [DHCPv4] UseDNS=false [DHCPv6] UseDNS=false But you will have to type the IP of the fritz box when you want to access the admin interface. reply Arcuru 17 hours agoprevIs there a way to get a monthly/weekly/whatever announcement of just the new gTLDs coming out? I have never been able to find a method other than manually checking on ICANN. reply Trufa 18 hours agoprevI mean, what I found interesting that nobody in the company heard that they were registering .box domains. I am no expert in this subject https://newgtlds.icann.org/en/program-status/sunrise-claims-... But it seems that they had Trademark Claims Period: 13 September 2023 to 17 January 2024 To be fair, .box domains didn't have that much noise attached to them and 4 months is a relatively short period, but if this possible vulnerability had known then it's a little more negligent. Best case scenario for them seem to be that they pay an undisclosed amount to a \"random\" that got lucky and bought that domain. I find it interesting how a decision that may have looked totally innoxious something like 15 years before, was not future proof enough, I for one back then would not have imagined that ICANN would start registering every single TLD under the sun. reply mmcnl 18 hours agoparentI can't find any specifics, but to my understanding it had been known for years that .box was a candidate TLD. reply Trufa 17 hours agorootparentI would assume so, I find it crazy that they didn't file for this. reply __michaelg 18 hours agoprevThis is stupid clickbait title, and the article isn't even very precise. Yes, that whole fritz.box situation is known and bad. But the problem discussed here doesn't nearly apply to every situation. Specifically, the box's builtin resolver (which is still used by default by a lot of things) knows not to forward fritz.box requests to the outside. That is, `dig google.com.fritz.box` and everything else say NXDOMAIN when you're using the builtin DNS. reply mmcnl 17 hours agoparentI am the author and happy to make any corrections. In Windows performing a lookup for google.com returns the address of the fritz.box domain name. PS C:\\Users\\Marco> nslookup google.com Server: UnKnown Address: 192.168.0.200 Non-authoritative answer: Name: google.com.fritz.box Addresses: 2001:19f0:6c00:1b0e:5400:4ff:fecd:7828 45.76.93.104 How is this not bad? reply tetha 17 hours agoparentprevAh, it was looking like that to me, thanks for confirming. Like, if I force dig to use some public DNS, I get the newly registered IPs but if I use my fritzbox as the DNS server, it gives me itself / NXDomains, except for hostnames configured on the local fritzbox. That on top of the fact that my linuxes won't use the search domain unless explicitly asked for with a single-label DNS makes this a lot less scary. reply brewmarche 18 hours agoparentprevOut of curiosity, what happens with a custom DNS server but still using DHCP? Will the suffix still be used? reply jmbwell 16 hours agoparentprevYeah but so many things bypass internal resolvers lately. VPNs, “private relay,” individual apps. DNS over HTTP. Local control over DNS is steadily being chipped away. The result is some apps will go out to public or vendor-controlled DNS in ways typical admin tools like ping and dig might not reveal reply jorams 18 hours agoprevSkipping over the bad idea that this fritz.box-domain is for a bit, this seems like a pretty major failure on the part of ICANN to prevent name collisions. IIRC they had a whole bunch of plans and policies to prevent name collisions 10 years ago, but somehow a popular brand of modems failed to come up? reply scrps 17 hours agoprevHaving never played with one; if the firmware supports bridge mode that will treat the box as basically just a hop. Of course you'd have to have your own network gear behind it. Other option, run your own DNS + DHCP stack, a pihole is pretty turn-key if you have a straight forward network. reply jcalvinowens 17 hours agoprevMy home router is an old PC running Linux with some extra 10G ixgbe cards. If you know how to configure it, I'm convinced there isn't a better way: the only real downside is the power use, and it's not that bad. reply namibj 15 hours agoparentGiven the way mine (not FritzBox) chokes due to NAT being a little stupid when burdened with enough outbound IPv4 dialing, I'd like a PCIe DOCSIS 3.1 (and enough EuroDOCSIS 3.0 to get through bootstrapping, as the ISP doesn't yet support pure 3.1 moderns) modem... I may settle for a 2.5GBASE-T \"classic\" modern, though, despite the lost control over the TX queue. It's sadly not possible to just presume a TX speed and forgo backpressure from DOCSIS to the packet scheduler that has the knobs to never turn Internet usage off again just to stop other more sensitive Internet usage from lagging. reply ffsm8 17 hours agoparentprevWhere did you find a modem card? I tried to do that a few months ago too, as I'm already running a homelab server 24/7, but couldn't find any cards supporting vdsl nor cable Or do you mean just as a wan connection/router? In that case... Sure, you can do that. I just don't see the value in that, personally. reply jcalvinowens 15 hours agorootparentI don't care about the L2 interface. I imagine I could twist my ISPs arm and spend a bunch of money to end up with the fiber line directly connected to a card in my Linux box... but why? The ISP's upstream equipment is just as vulnerable as a modem, and there's a lot more of it. That's not the point for me. When I had DSL (and later DOCSIS), I just bought my own modems that weren't routers, and used ethernet to connect the Linux router (a raspberry pi 3 originally, yes the DSL was so slow it wasn't a bottleneck!). It was economical because Time Warner charged me something like $5/month to use their modem. There's a lot of reasons I like having a Linux router, a short list: * I have 10G internet from Sonic, in 2020 building a small Linux machine with ixgbe cards was cheaper than any commercially available 10G router with as many ports as I needed (4+). I get line rate through it, no problem. * It runs an open source NAT implementation that is actually correct (although this is less of a problem with commercial routers now than it was back in the day...). Sadly, I don't have IPv6, but the same argument would apply there. * I can run whatever DHCP server implementation I want. * No web GUIs: I SSH to the thing and write config files. * If it blows up, it's just Linux, and all the config files are in git: any machine will do, I don't have to worry about some commercial product disappearing and forcing me to waste an afternoon reinventing the wheel. * I can build and run recent vanilla kernels with all the hardening options enabled. A Linux router spends 99% of its time in the kernel. * The machine is actually fast enough to scan 10G traffic at line rate in software when I want to do that (it's doing all the routing in software, after all). It's really easy, I'd estimate I spend 1-2 hours a year maintaining it. reply jiripospisil 17 hours agoparentprevMost of Germany (and Czechia, maybe even Europe?) is still rocking xDSL lines, so at the very least you still need a modem. reply AmazingTurtle 18 hours agoprevMy Fritz Box does not reply in that way. How come you indicate that _all_ Fritz Box Modems have been hacked and how do I know if I am affected? Apparently I'm not. reply mmcnl 18 hours agoparentIt's how the mechanism of DNS suffices works. Especially on Windows, because Windows rewrites all DNS requests with the suffix (even simple requests like google.com). To me it's surprising that somehow not everyone is affected. I only learned that in the comments here. reply baobabKoodaa 18 hours agoprevCan anyone explain the design decisions behind this product? Or can the design process be summarized as \"let's light these matches and see what happens\"? reply croes 18 hours agoparent.box domains can only registered since 2024. Guess they didn't expect a .box-tld reply diarrhea 17 hours agorootparentIs there a place where one can sign up for announcements on new TLDs? I don’t want to sign up for every registrant under the sun. reply croes 17 hours agorootparentICANN newsletter may be a good starting point. reply michael9423 13 hours agoprevIsn't a simple solution to simply blacklist fritz.box when using adguard or nextdns? reply orliesaurus 18 hours agoprevI have one of these but it's 10k miles away from me.... Gonna have to remind me this summer to look into it reply POM37 18 hours agoprevAVM the Company behind the fritzbox is aware of this issue and are currently already in talks with the domain provider. https://x.com/AVM_DE/status/1779155999204552897 reply mmcnl 18 hours agoparentThis is mentioned in the article, and the article also states why only purchasing the domain is not an adequate solution. reply tetris11 18 hours agoprevAnother reason to point your Fritzbox to a Pihole/Unbounded combo device. FWIW is it not easy for Fritz to remotely change the default DNS of their devices, similar to what Virgin/Sky/Vodafone modems have been doing for the past decade? Fritz used to be open source, but they're not since also around a decade, so I would think it would be easy to for them to have a backdoor to all their modems like every other company does. reply moeffju 18 hours agoprevI flagged this post because it's just spreading FUD (in the traditional meaning) at this point. The fritz.box domain had been registered in January, but someone (likely AVM) quickly contested the registration and it was disconnected in March. It is currently in the settlement and resale phase, so very likely AVM, the makers of Fritz! Box, will just buy the domain and ensure it responds NXDOMAIN to any query or something. While I still believe that using a non-reserved domain like 'fritz.box' as their internal domain and suffix is just dumb, they are aware of the issue and working on a resolution that appears sensible. reply mmcnl 17 hours agoparent(I am the author) The fact is that currently DNS requests are forwarded to an unknown entity. The matter is not resolved yet and there is no guarantuee it will be resolved. Imo there's no FUD here. I will happily correct any factual errors ofcourse. reply FL410 18 hours agoprevDoes this not just break all DNS-resolved internet traffic for these devices at this point? Seems like the resolvers for fritz.box. are resolving *.fritz.box. to 45.76.93.104. I would assume the affected (Windows?) clients aren't working at all when they get this kind of response for something like google.com.fritz.box. reply mmcnl 18 hours agoparentI guess if the resolution fails Windows will fallback to a resolution without the DNS suffix, but I'm not entirely sure how it works, and what other operating systems do. reply FL410 11 hours agorootparentBut the resolution doesn't fail, it just returns an incorrect A record. Have you tried it on a Windows PC? reply thehias 18 hours agoprevThis is FUD, the domain was taken down by URS in March. https://www.heise.de/news/Fritz-box-Domain-aus-dem-Verkehr-g... reply sph 18 hours agoparentNonsense. The domain is registered. https://who.is/whois/fritz.box Also, this should be worth an email to abuse@namesilo.com, no? reply senectus1 7 hours agoprevhuh, glad i swapped my fritzbox out about 6 months ago for a fanless opnsense. reply tapper 18 hours agoprevOpenWrt For the win! reply yjftsjthsd-h 18 hours agoprevAnother reminder that if it's not a reserved (top level) domain it's not safe:\\ reply sema4hacker 18 hours agoprev [–] Shouldn't the title say \"can be\" not \"have been\". Apparently this has been known for years. reply mmcnl 18 hours agoparent [–] Imo if DNS requests resolve to an unknown entity and you cannot change that behavior, your DNS resolution has effectively been hijacked, even if no harm is being done yet. (PS. I am the author.) reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Certain Fritz!Box modems are hijacked, creating DNS problems for users with custom DNS services like Pihole or Adguard, potentially causing security vulnerabilities, notably for Windows users.",
      "The unknown owner of the fritz.box domain raises worries about data privacy and phishing risks, with AVM's response to the problem being scarce, offering no clear timeline for a fix.",
      "To address the issue, users are recommended to deactivate the DNS suffix or implement other protective actions to reduce the associated risks."
    ],
    "commentSummary": [
      "Fritz!Box modems are under scrutiny for potential security risks related to hijacking domain names using the \".box\" top-level domain (TLD), focusing on DNS resolutions, suffixes, and user domain control.",
      "Suggestions advise utilizing open-source firmware, custom DNS servers, and being careful with domain configurations to mitigate these risks.",
      "The discourse explores DNS vulnerabilities, German ISP guidelines, and the trend towards vendor-managed DNS, sharing anecdotes about Linux routers and tailored network arrangements, emphasizing the significance of robust security practices in router setups."
    ],
    "points": 232,
    "commentCount": 124,
    "retryCount": 0,
    "time": 1713712125
  },
  {
    "id": 40107007,
    "title": "Penzai: Visualize and Manipulate Neural Nets with JAX Toolkit",
    "originLink": "https://github.com/google-deepmind/penzai",
    "originBody": "Penzai 盆 (\"pen\", tray) 栽 (\"zai\", planting) - an ancient Chinese art of forming trees and landscapes in miniature, also called penjing and an ancestor of the Japanese art of bonsai. Penzai is a JAX library for writing models as legible, functional pytree data structures, along with tools for visualizing, modifying, and analyzing them. Penzai focuses on making it easy to do stuff with models after they have been trained, making it a great choice for research involving reverse-engineering or ablating model components, inspecting and probing internal activations, performing model surgery, debugging architectures, and more. (But if you just want to build and train a model, you can do that too!) With Penzai, your neural networks could look like this: Penzai is structured as a collection of modular tools, designed together but each useable independently: penzai.nn (pz.nn): A declarative combinator-based neural network library and an alternative to other neural network libraries like Flax, Haiku, Keras, or Equinox, which exposes the full structure of your model's forward pass in the model pytree. This means you can see everything your model does by pretty printing it, and inject new runtime logic with jax.tree_util. Like Equinox, there's no magic: models are just callable pytrees under the hood. penzai.treescope (pz.ts): A superpowered interactive Python pretty-printer, which works as a drop-in replacement for the ordinary IPython/Colab renderer. It's designed to help understand Penzai models and other deeply-nested JAX pytrees, with built-in support for visualizing arbitrary-dimensional NDArrays. penzai.core.selectors (pz.select): A pytree swiss-army-knife, generalizing JAX's .at[...].set(...) syntax to arbitrary type-driven pytree traversals, and making it easy to do complex rewrites or on-the-fly patching of Penzai models and other data structures. penzai.core.named_axes (pz.nx): A lightweight named axis system which lifts ordinary JAX functions to vectorize over named axes, and allows you to seamlessly switch between named and positional programming styles without having to learn a new array API. penzai.data_effects (pz.de): An opt-in system for side arguments, random numbers, and state variables that is built on pytree traversal and puts you in control, without getting in the way of writing or using your model. Documentation on Penzai can be found at https://penzai.readthedocs.io. Getting Started If you haven't already installed JAX, you should do that first, since the installation process depends on your platform. You can find instructions in the JAX documentation. Afterward, you can install Penzai using pip install penzai and import it using import penzai from penzai import pz (penzai.pz is an alias namespace, which makes it easier to reference common Penzai objects.) When working in an Colab or IPython notebook, we recommend also configuring Penzai as the default pretty printer, and enabling some utilities for interactive use: pz.ts.register_as_default() pz.ts.register_autovisualize_magic() pz.enable_interactive_context() # Optional: enables automatic array visualization pz.ts.active_autovisualizer.set_interactive(pz.ts.ArrayAutovisualizer()) Here's how you could initialize and visualize a simple neural network: from penzai.example_models import simple_mlp mlp = pz.nn.initialize_parameters( simple_mlp.MLP.from_config([8, 32, 32, 8]), jax.random.key(42), ) # Models and arrays are visualized automatically when you output them from a # Colab/IPython notebook cell: mlp Here's how you could capture and extract the activations after the elementwise nonlinearities: mlp_with_captured_activations = pz.de.CollectingSideOutputs.handling( pz.select(mlp) .at_instances_of(pz.nn.Elementwise) .insert_after(pz.de.TellIntermediate()) ) output, intermediates = mlp_with_captured_activations( pz.nx.ones({\"features\": 8}) ) To learn more about how to build and manipulate neural networks with Penzai, we recommend starting with the \"How to Think in Penzai\" tutorial, or one of the other tutorials in the Penzai documentation. This is not an officially supported Google product.",
    "commentLink": "https://news.ycombinator.com/item?id=40107007",
    "commentBody": "Penzai: JAX research toolkit for building, editing, and visualizing neural nets (github.com/google-deepmind)221 points by mccoyb 17 hours agohidepastfavorite44 comments yklcs 7 hours agoI like JAX, and find most of the core functionality as an \"accelerated NumPy\" great. Ecosystem fragmentation and difficulties in interop make adopting JAX hard though. There's too much fragmentation within the JAX NN library space, which penzai isn't helping with. I wish everyone using JAX could agree on a single set of libraries for NN, optimization, and data loading. PyTorch code can't be called, meaning a lot of reimplementation in JAX is needed when extending and iterating on prior works, which is the case for most of research. Custom CUDA kernels are a bit fiddly too, I haven't been able to bring Gaussian Splatting to JAX yet. reply abhgh 6 hours agoparentAnother issue I've personally faced is debugging - although I am saying this from my experience from more than a yr ago, and maybe things are better now. I have used it mostly for optimization and the error messages aren't helpful. reply pizza 13 hours agoprevI remember pytorch has some pytree capability, no? So is it safe to say that the any-pytree-compatible modules here are already compatible w/ pytorch? reply ddjohnson 11 hours agoparentAuthor here! I didn't know PyTorch had its own pytree system. It looks like it's separate from JAX's pytree registry, though, so Penzai's tooling probably won't work with PyTorch out of the box. reply sillysaurusx 11 hours agoparentprevI implemented Jax’s pytrees in pure python. You can use it with whatever you want. https://github.com/shawwn/pytreez The readme is a todo, but the tests are complete. They’re the same that Jax itself uses, but zero dependencies. https://github.com/shawwn/pytreez/blob/master/tests/test_pyt... The concept is simple. The hard part is cross pollination. Suppose you wanted to literally use Jax pytrees with PyTorch. Now you’ll have to import Jax, or my library, and register your modules with it. But anything else that ever uses pytrees need to use the same pytree library, because the registry (the thing that keeps track of pytree compatible classes) is in the library you choose. They don’t share registries. A better way of phrasing it is that if you use a jax-style pytree interface, it should work with any other pytree library. But to my knowledge, the only pytree library besides Jax itself is mine here, and only I use it. So when you ask if pytree-compatible modules are compatible with PyTorch, it’s equivalent to asking whether PyTorch projects use jax, and the answer tends to be no. EDIT: perhaps I’m outdated. OP says that PyTorch has pytree functionality now. https://news.ycombinator.com/item?id=40109662 I guess yet again I was ahead of the times by a couple years; happy to see other ecosystems catch up. Hopefully seeing a simple implementation will clarify the tradeoffs. The best approach for a universal pytree library would be to assume that any class with tree_flatten and tree_unflatten methods are pytreeable, and not require those classes to be explicitly registered. That way you don’t have to worry whether you’re using Jax or PyTorch pytrees. But I gave up trying to make library-agnostic ML modules; in practice it’s better just to choose Jax or PyTorch and be done with it, since making PyTorch modules run in Jax automatically (and vice versa) is a fool’s errand (I was the fool, and it was an errand) for many reasons, not the least of which is that Jax builds an explicit computation graph via jax.jit, a feature PyTorch has only recently (and reluctantly) embraced. But of course, that means if you pick the wrong ecosystem, you’ll miss out on the best tools — hello React vs Vue, or Unreal Engine vs Unity, or dozens of other examples. reply albertzeyer 3 hours agorootparentThere are a couple more such libraries. One was inside tensorflow (nest) and then extracted into the standalone dm-tree: https://github.com/deepmind/tree Or also: https://github.com/metaopt/optree I think ideally you would try to use mostly standard types (dict, list, tuple, etc) which are supported by all those libraries in mostly the same way, so it's easy to switch. You have to be careful in some of the small differences though. E.g. what basic types are supported (e.g. dataclass, namedtuple, other derived instances from dict, tuple, etc), or how None is handled. reply catgary 15 hours agoprevI’ve only been reading through the docs for a few moments, but I’m pleasantly surprised to find they the authors are using effect handlers to handle effectful computations in ML models. I was in the process of translating a model from torch to Jax using Equinox, this makes me think penzai could be a better choice. reply patrickkidger 12 hours agoparentI was just reading this too! I think it's a really interesting choice in the design space. So to elucidate this a little bit, the trade-off is that this is now incompatible with e.g. `jax.grad` or `lax.scan`: you can't compose things in the order `discharge_effect(jax.grad(your_model_here))`, or put an effectful `lax.scan` inside your forward pass, etc. The effect-discharging process only knows how to handle traversing pytree structures. (And they do mention this at the end of their docs.) This kind of thing was actually something I explicitly considered later on in Equinox, but in part decided against as I couldn't see a way to make that work either. The goal of Equinox was always absolute compatibility with arbitrary JAX code. Now, none of that should be taken as a bash at Penzai! They've made a different set of trade-offs, and if the above incompatibility doesn't affect your goals then indeed their effect system is incredibly elegant, so certainly give it a try. (Seriously, it's been pretty cool to see the release of Penzai, which explicitly acknowledges how much it's inspired by Equinox.) reply ddjohnson 11 hours agorootparentAuthor of Penzai here! In idiomatic Penzai usage, you should always discharge all effects before running your model. While it's true you can't do `discharge_effect(jax.grad(your_model_here))`, you can still do `jax.grad(discharge_effect(your_model_here))`, which is probably what you meant to do anyway in most cases. Once you've wrapped your model in a handler layer, it has a pure interface again, which makes it fully compatible with all arbitrary JAX transformations. The intended use of effects is as an internal helper to simplify plumbing of values into and out of layers, not as something that affects the top-level interface of using the model! (As an example of this, the GemmaTransformer example model uses the SideInput effect internally to do attention masking. But it exposes a pure functional interface by using a handler internally, so you can call it anywhere you could call an Equinox model, and you shouldn't have to think about the effect system at all as a user of the model.) It's not clear to me what the semantics of ordinary JAX transformations like `lax.scan` should be if the model has side effects. But if you don't have any effects in your model, or if you've explicitly handled them already, then it's perfectly fine to use `lax.scan`. This is similar to how it works in ordinary JAX; if you try to do a `lax.scan` over a function that mutates Python state, you'll probably hit an error or get something unexpected. But if you mutate Python state internally inside `lax.scan`, it works fine. I'll also note that adding support for higher-order layer combinators (like \"layer scan\") is something that's on the roadmap! The goal would be to support some of the fancier features of libraries like Flax when you need them, while still admitting a simple purely-functional mental model when you don't. reply ddjohnson 11 hours agoparentprevThanks! This is one of the more experimental design choices I made in designing Penzai, but so far I've found it to be quite useful. The effect system does come with a few sharp edges at the moment if you want to use JAX transformations inside the forward pass of your model (see my reply to Patrick), but I'm hoping to make it more flexible as time goes on. (Figuring out how effect systems should compose with function transformations is a bit nontrivial!) Please let me know if you run into any issues using Penzai for your model! (Also, most of Penzai's visualization and patching utilities should work with Equinox too, so you shouldn't necessarily need to fully commit to either one.) reply catgary 9 hours agorootparentThis something I’ve thought about in the past, since I messed around with trying to add monads to JAX - I think you made the right call with effect handlers. You might want to take a look at what Koka does, that was the best implementation of effect handlers the last time I checked. reply ubj 14 hours agoprevDoes anyone know if and how well Penzai can work with Diffrax [1]? I currently use Diffrax + Equinox for scientific machine learning. Penzai looks like an interesting alternative to Equinox. [1]: https://docs.kidger.site/diffrax/ reply thatguysaguy 14 hours agoparentNot sure on the specific combination, but since everything in Jax is functionally pure it's generally really easy to compose libraries. E.g. I've written code which embedded a flax model inside a haiku model without much effort. reply patrickkidger 13 hours agoparentprevIIUC then penzai is (deliberately) sacrificing support for higher-order operations like `lax.{while_loop, scan, cond}` or `diffrax.diffeqsolve`, in return for some of the other new features it is trying out (treescope, effects). So it's slightly more framework-y than Equinox and will not be completely compatible with arbitrary JAX code. However I have already had a collaborator demonstrate that as long as you don't use any higher-order operations, then treescope will actually work out-of-the-box with Equinox modules! So I think the answer to your question is \"sort of\": * As long as you only try to inspect things that are happening outside of your `diffrax.diffeqsolve` then you should be good to go. And moreover can probably do this simply by using e.g. Penzai's treescope directly alongside your existing Equinox code, without needing to move things over wholesale. * But anything inside probably isn't supported + if I understand their setup correctly can never be supported. (Not bashing Penzai there, which I think genuinely looks excellent -- I think it's just fundamentally tricky at a technical level.) reply ddjohnson 11 hours agorootparentAuthor of Penzai here. I think the answer is a bit more nuanced (and closer to \"yes\") than this: - If you want to use the treescope pretty-printer or the pz.select tree manipulation utility, those should work out-of-the-box with both Equinox and Diffrax. Penzai's utilities are designed to be as modular as possible (we explicitly try not to be \"frameworky\") so they support arbitrary JAX pytrees; if you run into any problems with this please file an issue! - If you want to call a Penzai model inside `diffrax.diffeqsolve`, that should also be fully supported out of the box. Penzai models expose a pure functional interface when called, so you should be able to call a Penzai model anywhere that you'd call an Equinox model. From the perspective of the model user, you should be able to think of the effect system as an implementation detail. Again, if you run into problems here, please file an issue. - If you want to write your own Penzai layer that uses `diffrax.diffeqsolve` internally, that should also work. You can put arbitrary logic inside a Penzai layer as long as it's pure. - The specific thing that is not currently fully supported is: (1) defining a higher-order Penzai combinator layer that uses `diffrax.diffeqsolve` internally, (2) and having that layer run one of its sublayers inside the `diffrax.diffeqsolve` function, (3) while simultaneously having that internal sublayer use an effect (like random numbers, state, or parameter sharing), (4) where the handler for that effect is placed outside of the combinator layer. This is because the temporary effect implementation node that gets inserted while a handler is running isn't a JAX array type, so you'll get a JAX error when you try to pass it through a function transformation. This last case is something I'd like to support as well, but I still need to figure out what the semantics of it should be. (E.g. what does it even mean to solve a differential equation that has a local state variable in it?) I think having side effects inside a transformed function is fundamentally hard to get right! reply ein0p 16 hours agoprev [–] Looks great, but outside Google I do not personally know anyone who uses Jax, and I work in this space. reply MasterScrat 15 hours agoparentWe've built our startup from scratch on JAX, selling text-to-image model finetuning, and it's given us a consistent edge not only in terms of pure performance but also in terms of \"dollars per unit of work\" reply Havoc 2 hours agorootparentIs that gain from TPU usage or something else? reply _ntka 15 hours agoparentprevIsn't JAX the most widely used framework in the GenAI space? Most companies there use it -- Cohere, Anthropic, CharacterAI, xAI, Midjourney etc. reply smhx 9 hours agorootparentmost of the GenAI players use both PyTorch and JAX, depending on the hardware they are running on. Character, Anthro, Midjourney, etc. are dual shops (they use both). xAI only uses JAX afaik. reply mistrial9 12 hours agorootparentprevjust guessing that tech leadership at all of those traces back to Google somehow reply KeplerBoy 15 hours agoparentprevI use it for GPU accelerated signal processing. It really delivers on the promise of \"Numpy but for GPU\" better than all competing libraries out there. reply error9348 15 hours agoparentprevJax trends on papers with code: https://paperswithcode.com/trends reply nostrademons 15 hours agorootparentWas gonna ask \"What's that MindSpore thing that seems to be taking the research world by storm?\" but I Googled and it's apparently Huawei's open-source AI framework. 1% to 7% market share in 2 years is nothing to sneeze at - that's growth rates similar to Chrome or Facebook in their heyday. It's telling that Huawei-backed MindSpore can go from 1% to 7% in 2 years, while Google-backed Jax is stuck at 2-3%. Contrary to popular narrative in the Western world, Chinese dominance is alive and well. reply niihau_island 7 hours agorootparentWhen I looked into a random sampling of these uses, my impression was that it was a common kind of project in China to take a common paper (or another repo) and implement it in Mindspore. That accounted for the vast majority of the implementations. reply logicchains 15 hours agorootparentprev>It's telling that Huawei-backed MindSpore can go from 1% to 7% in 2 years, while Google-backed Jax is stuck at 2-3%. Contrary to popular narrative in the Western world, Chinese dominance is alive and well. MindSpore has an advantage there because of its integrated support for Huawei's Ascend 910B, the only Chinese GPU that comes close to matching the A100. Given the US banned export of A100 and H100s to China, this creates artificial demand for the Ascend 910B chips and the MindSpore framework that utilises them. reply bigcat12345678 14 hours agorootparentNo, mindspore rises because of the chip embargo No one is going to use stuff that one day is cut off supply. This is one signal why Huawei was listed by Nvidia as competitor in 4 out of 5 categories of areas, in nvidia's earnings reply ein0p 13 hours agorootparentIts meteoric rise started well before the chip embargo. I've looked into it, it liberally borrows ideas from other frameworks, both PyTorch and Jax, and adds some of its own. You lose some of the conceptual purity, but it makes up for it in practical usability, assuming it works as it says on the tin, which it may or may not. PyTorch also has support for Ascend as far as I can tell https://github.com/Ascend/pytorch, so that support does not necessarily explain MindSpore's relative success. Why MindSpore is rising so rapidly is not entirely clear to me. Could be something as simple as preferring a domestic alternative that is adequate to the task and has better documentation in Chinese. Could be cost of compute. Could be both. Nowadays, however, I do agree that the various embargoes would help it (as well as Huawei) a great deal. As a side note I wish Huawei could export its silicon to the West. I bet that'd result in dramatically cheaper compute. reply creato 13 hours agorootparentThis data might just be unreliable. It had a weird spike in Dec 2021 that looks unusual compared to all the other frameworks. reply VHRanger 12 hours agorootparentChina publishes a looooootttttt of papers. A lot of it is careerist crap. To be fair, a lot of US papers are also crap, but Chinese crap research is on another level. There's a reason a lot of top US researchers are Chinese - there's brain drain going on. reply ein0p 15 hours agorootparentprevNote that most of Jax’s minuscule share is Google. reply j7ake 16 hours agoparentprevI’m in academia and I use jax because it’s closest to translate maths to code. reply hyperbovine 11 hours agorootparentSame, Jax is extremely popular with the applied math/modeling crowd. reply polygamous_bat 16 hours agoparentprevA small addendum: the only people I know who uses Jax are people who work at Google, or people who had a big GCP grant and needed to use TPUs as a result. reply mccoyb 15 hours agoparentprevThat's cool -- but wouldn't it be more constructive to discuss \"the ideas\" in this package anyways? For instance, it would be interesting to discern if the design of PyTorch (and their modules) preclude or admit the same sort of visualization tooling? If you have expertise in PyTorch, perhaps you could help answer this sort of question? JAX's Pytrees are like \"immutable structs, with array leaves\" -- does PyTorch have a similar concept? reply fpgamlirfanboy 15 hours agorootparent> does PyTorch have a similar concept of course https://github.com/pytorch/pytorch/blob/main/torch/utils/_py... reply ein0p 15 hours agorootparentprevIdk if you need that immutability actually. You could probably reconstruct enough to do this kind of viz from the autograd graph, or capture the graph and intermediates in the forward pass using hooks. My hunch is it should be doable. reply logicchains 15 hours agoparentprevNot at Google but currently using Jax to leverage TPUs, because AWS's GPU pricing is eye-gougingly expensive. For the lower-end A10 GPUs, the price-per-gpu for a 4 GPU machine is 1.5x the price for a 1 GPU machine, and the price-per-gpu for a 8 GPU machine is 2x the price of a 1 GPU machine! If you want a A100 or H100, the only option is renting an 8 GPU instance. With properly TPU-optimised code you get something like 30-50% cost saving on GCP TPUs compared to AWS (and I say that as someone who otherwise doesn't like Google as a company and would prefer to avoid GCP if there wasn't such a significant cost advantage). reply sudosysgen 15 hours agoparentprevI use it all the time, and there's also a few classes at my uni that use Jax. It's really great for experimentation and research, you can do a lot of things in Jax you just can't in, say, PyTorch. reply p1esk 8 hours agorootparentLike what? reply sudosysgen 7 hours agorootparentAnytime you want to make something GPU accelerated that doesn't fit as standard operations on tensors. For example, I often write RL environments in Jax, which is something you can't do in PyTorch. There's also things you can do in PyTorch but that would be far more difficult, for example an efficient implementation of MCTS. I also used Jax a lot for differential equations, not even sure how I would do that with PyTorch. Basically, Torch is a lot more like a specialization of Numpy for neural networks, while Jax feels a lot more like if you could just write CUDA as Python, and also get the Jacobians (jacs! jax!) and jvp for free (of everything, you can even differentiate hyperparameters through your optimizer which is crazy). At the end, when you're doing fundamental research and coming up with something new, I think Jax is just better. If all I had to do was implementation, then I would be a happy PyTorch user. reply yshvrdhn 16 hours agoparentprevit would be great if we can have intelligent tools for building neural networks in pytorch. reply Edmond 15 hours agorootparentwould a comprehensive object construction platform with schema support and the ability to hookup to a compiler (ie turn object data to code for instance) be a useful tool in this domain? ex: https://www.youtube.com/watch?v=fPnD6I9w84c I am the developer, happy to answer questions. reply eli_gottlieb 14 hours agoparentprev [–] If JAX had affine_grid() and grid_sample(), I'd be using it instead of PyTorch for my current project. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Penzai is a JAX library inspired by the ancient Chinese art of miniature trees, designed for creating and managing functional pytree data structures in neural networks.",
      "It offers tools for visualization, modification, and analysis of models, catering to tasks like debugging and reverse-engineering.",
      "Users should install JAX followed by Penzai, configuring it for interactive use in Colab or IPython notebooks to initialize neural networks, capture activations, and access tutorials for model building."
    ],
    "commentSummary": [
      "Penzai on Github aims to streamline neural network development with JAX, addressing fragmentation and interoperability challenges in the ecosystem.",
      "The toolkit introduces a universal pytree library for ML modules, comparing trade-offs between Jax and PyTorch while emphasizing compatibility with Equinox and Diffrax.",
      "Discussions include Huawei's MindSpore expansion, factors driving its success, academic use of Jax for math-to-code translation, and comparisons between PyTorch and Jax's capabilities and user preferences, proposing enhancements for both frameworks."
    ],
    "points": 221,
    "commentCount": 44,
    "retryCount": 0,
    "time": 1713716929
  },
  {
    "id": 40104641,
    "title": "Convert YouTube Videos into Step-by-Step Guides",
    "originLink": "https://stepify.tech/",
    "originBody": "Hey HN,I&#x27;ve been working on this side project for the past month. It generates a step-by-step tutorial guide for YouTube videos that you can follow along without watching long videos. Best suited for tutorial videos but can work for other videos aswell. No BS. Just straight to the point.The guides are generated from pure transcript so you don&#x27;t have to worry about it being AI. It&#x27;s my first project as a total beginner. Something I had to do inorder to get out of tutorial hell.Please let me know if you have any suggestions or if you face any problems or bugs. I would try to fix them to the best of my abilities and as soon as possible.I would appreciate your feedback on this. Let me know what you think!",
    "commentLink": "https://news.ycombinator.com/item?id=40104641",
    "commentBody": "I made a website that converts YT videos into step-by-step guides (stepify.tech)214 points by aka_sh 23 hours agohidepastfavorite62 comments Hey HN, I've been working on this side project for the past month. It generates a step-by-step tutorial guide for YouTube videos that you can follow along without watching long videos. Best suited for tutorial videos but can work for other videos aswell. No BS. Just straight to the point. The guides are generated from pure transcript so you don't have to worry about it being AI. It's my first project as a total beginner. Something I had to do inorder to get out of tutorial hell. Please let me know if you have any suggestions or if you face any problems or bugs. I would try to fix them to the best of my abilities and as soon as possible. I would appreciate your feedback on this. Let me know what you think! metadat 18 hours agoThis is a brilliant and useful application of LLM technology, I'm impressed. One question- On the backend, is it downloading each video CC (closed-caption) transcript and feeding that into a tuned prompt? What happens for videos where this is missing? Asking because I've noticed CC is occasionally unavailable for some YouTube videos. If you cared to have a fallback, a potentially interesting experiment / solution for such cases is to download the video, extract the audio to a WAV file, then through the audio through Whisper [1] to generate the transcript. Using CPUa, it will still be incredibly intensive and slow, generally not much faster than real-time (e.g. a 5 minute clip will take on the order of ~5 minutes to complete transcription). However, with Whisper running on a fancy GPU it is insanely faster, between 100-200x faster, meaning even for long videos, generating the transcripts will complete in only a few seconds. Great job @aka_sh! [1] https://github.com/openai/whisper p.s. Is there any chance you'd open source your code? Or do you plan to turn this into a business? The code itself is exactly a huge moat, and it'd be cool to see how you did this. Cheers. p.p.s. stepify.tech app is currently crashing out to a heroku error page when I try to submit a YT link. reply aka_sh 14 hours agoparentThank you! I'm getting the transcript through an API and feeding it to the GPT. For now, the fallback function for no captions is just to make something out of the description of the video. I really appreciate the suggestion, i'll experiment around using Whisper. Regarding open source or business. I don't really know about that yet. Maybe, i'll lean towards the business side to cover the costs and see where this goes. And sorry for the downtime! API credits ran out. It should be fixed by now reply metadat 12 hours agorootparentEek, so many typos in my comment - but the most egregious was where I meant to convey the code itself is not a huge moat. Even still, no worries if you don't want to give it away, I totally understand. Keep up the good execution. reply ravenstine 11 hours agorootparentprevIt's epic how well that works. Even with Whisper locally, most of what I throw at it becomes readable. reply j45 11 hours agoparentprevComparing yt transcript to open whisper transcripts could be interesting if it could pick up on something extra. There is limited need to reinvent the wheel to process audio when other things can be solved. reply alvah 9 hours agorootparentThe suggestion was to use Whisper as a fallback where no YT transcript exists. reply jghn 17 hours agoprevAs someone who can’t stand the modern trend away from text and towards video, I can’t praise this idea enough. The number of circumstances where a video is better than text with some clarifying pictures is quite small reply SoftTalker 14 hours agoparent100% agree. Video can be helpful for supplementary illustration, to show exactly how to orient parts in an assembly, etc. but at the cost of (often) sitting through a lot of rambling monologue that is not. I haven't tried this yet but it would be helpful if each step included a link to the spot in the video where that step is shown, so that in case you need it it's easy to find. reply mavamaarten 16 hours agoparentprevYeah. The only way to find some written instructions these days is searching for reddit specifically. Which I'm not a big fan of, either. I've had multiple instances where I had a simple issue with zero decent Google results, and a YouTube result with literally the exact question I had in the title. I had to sift through 12 minutes of \"like and subscribe\", a dude clicking around in various screens mumbling some stuff... I would have been very happy with a simple blog post reply aka_sh 14 hours agoparentprevTotally agree with you on that. I hope this lives up to your expectations. Thank you! reply mbesto 18 hours agoprevSuper interesting. I recently went down the DIY rabbit hole for solar, electricity, etc. I tested out https://stepify.tech/video/O8eVxRVwlnw and looks decent: 1. It took about ~45 seconds for the page to load once I put the URL in. You should have a loader on a page showing that the website is \"doing something\" while the AI transcribes. 2. It would be great to sync the chapters in the YT video with the guide details. 3. Even more advanced would be the specific items like \"Drill holes, insert expansion bolts, and secure the inverter to the wall using nuts and washers.\" showed a timestamp and thumbnail with a link to the video part. 4. It would be great to have a checklist functionality (maybe this is the \"pro version\"). I often do something, get halfway and then need to scrub the YT video to find the specific place where he talks about the action item. EDIT: 5. IMO iFixit has the best \"guide\" formatting: https://www.ifixit.com/Guide/How+to+Recover+Data+From+a+MacB... if you could somehow generate this by the video, that would be insanely useful. reply aka_sh 18 hours agoparentGreat suggestions! I really appreciate your feedback. I'll work on implementing these as soon as possible. reply sonnyw603 13 hours agoparentprevCheckout this app called Razzl. Pretty much does what you’ve described. reply makuchaku 17 hours agoprevGreat work. A few ideas 1) Speed : the site is often showing heroku errors. Seems like you are running the entire processing in the request-response cycle. If not already done, please try to use a queueing system to perform async processing - and then let the user know when their video is ready to view as steps (probably via email or browser notifications). This will stop your site from crashing frequently and you'll be able to scale to many users very quickly. 2) Please add link-backs to the specific time in the video from where the step is shown. Cheers! reply makuchaku 17 hours agoparentAlso, +1 to chapters as someone mentioned in the comments. reply aka_sh 14 hours agoparentprevNoted! I'll will look into that. Thank you. reply j45 11 hours agoparentprevNot sure if putting the site behind cloudflare or something could help. Heroku just wants a bigger bill. reply nickjj 13 hours agoprevHi, Is there a way to request items that were submit get removed? Can you provide a way to contact you such as an email address? There wasn't one posted on your site. It's just a suggestion, I mean right now anyone can submit anyone's videos without their consent or ownership verification. How do you plan to handle that? I'm sure there will be folks out there who wouldn't feel comfortable that a site will be scraping their video content attempting to generate a large network of pages on 1 domain with loads of SEO terms. It provides a conflict of interest with the original creators. This conflict of interest is around SEO competition, reducing views from original creators and then there's the other can of worms of any future plans to monetize your site through subscriptions, paid features or ads where you'd be profiting from the content of others without their consent. I posted one of my videos just to see what would happen and then it created a permanently hosted page on your domain with an AI generated recap of the video. I didn't realize that was going to happen. There was no warning, label of how it works, TOS that I agreed to or options available to make it private and there's no option to delete it. I put in the URL, hit submit and that was it. It's nothing personal and I hope you don't see this as a deterrent. I'm all for building cool things and generally openly share almost everything for free (I've been blogging and making videos for ~9 years and don't have a single ad on anything I ever posted) but the idea of having inaccurate AI generated content does rub me the wrong way. > The guides are generated from pure transcript so you don't have to worry about it being AI. You mentioned it's generated from pure transcripts but most of the phrases used aren't what was mentioned in the video. It looks like a paraphrased version of it but it's also missing all of the details that would allow someone to follow along. Directly under the video on the page it says \"This response is AI generated\". One one hand you say it's not AI generated but then on the other hand it is. reply meiraleal 10 hours agoparentWell, this place is called hackernews, after all. Information should be free so if Youtube makes it public, public it should be. reply anonymouse008 18 hours agoprevWhoever did this is a prankster and hilarious: https://stepify.tech/video/co7KgV2edvI I hope that didn’t wreck your compute costs reply aka_sh 15 hours agoparentThis one really made me laugh. Good thing the website takes in only transcript to produce the response. This video had none, otherwise it would've been a problem hah. reply mrbluecoat 12 hours agoparentprevYeah, definitely some interesting examples: https://stepify.tech/video/ikc6PUSwdK4 reply gmerc 3 hours agoprevIt’s tricky when you don’t do editorial on your homepage tho: https://stepify.tech/video/623AC6a6org is the first featured video… In any case, it’s doomed- google will cut off the access or integrate the feature on their side. They thank you for the proof of concept though. reply patal 3 hours agoparentIt's funny though reply plufz 17 hours agoprevI made something a little similar, but just as a little cli script that I run locally for myself. You can input a url for a YouTube video, podcast link or local audio/video file. It transcribes it with whisper and outputs the full transcript in one text file and I use another model to summarize it into a bullet list in a separate file. I so appreciate these open source/access models allowing us to build these kinds of tools without having to pay and send our data to openai. reply whereismyacc 10 hours agoparentDoesn't youtube automatically transcribe every video with whisper? reply fransjorden 48 minutes agoprevIt looks like someone is flooding the service with questionable content (maybe to get you deranked from Google?) reply toddmorey 19 hours agoprevLove how the AI turned “drop a comment below” into a project step: “Seek feedback from stakeholders or viewers by encouraging questions and comments for further engagement.” This is from a bathroom remodel video. reply aka_sh 18 hours agoparentSorry for that, I'm looking into it. The problem is for videos that have no transcript. Maybe it's because i'm feeding it the description of the video for now. I'll find some workaround for this. Thanks! reply pushfoo 14 hours agorootparent> The problem is for videos that have no transcript. Whisper or other models can help with that too, but remember to preprocess to cut silence. The dataset tends to include ads in the captions, which results in hallucinated in from silence. You could also add a transcript-evaluation step which checks whether this actually looks like a step-by-step video, but I'd consider skipping it for cost and efficiency. Trying to be helpful by evaluating whether the video is instructions or not is added complexity where bugs and strange behavior can creep in. reply notahacker 13 hours agorootparentprevFeels like you might have to explicitly ask it not to put \"drop a comment below\" or \"like and subscribe\" into the instructions (or strip it from transcripts), since most YouTubers who take YouTube seriously are going to ask... reply toddmorey 17 hours agorootparentprevIt’s not a problem! Just funny sometimes what AI does reply ejang0 18 hours agoprevThis seems like something people on HN have asked for before. I clicked on one Recent video about how to create a simple Flask app in 5 minutes and the instructions seemed good on a cursory view. I tried entering a new video but I got a Heroku application error. Maybe it's a limits thing. When I look at the Recent videos, a lot of them are not for instructions/tutorials. Perhaps people do not understand the purpose of this project. Maybe they are just testing it out with non-tutorial content. Maybe you could add representative videos towards the top so that people would get a better sense of the use of this project? I don't know why this isn't more popular here. It's a good idea. (Maybe it has already been implemented elsewhere?) Reading is much faster than watching a video for many instruction-based tasks. Good luck! reply aka_sh 18 hours agoparentYeah, you just said what was on my mind since I launched it. The code I wrote is for tutorial videos. Non-tutorial video responses are just gibberish. The representative videos on the top is a great idea. I'll look into it. Can you tell me more about the video you entered? Did it have a transcript? How many hours long was it? reply userbinator 13 hours agoprevThe guides are generated from pure transcript so you don't have to worry about it being AI. That just means you have to worry about voice recognition errors instead. reply notahacker 13 hours agoparentTrue, but voice recognition errors typically involve an oddly-out of place word or two which you can usually spot and mentally correct. That's less likely to make you take the wrong series of steps than a completely coherent and topic-relevant \"hallucinated\" sentence that just happens to not be part of the guide at all. Edit: although in this instance the LLM pretty heavily editorialises the transcript anyway... reply Terretta 17 hours agoprevFor the \"Paid\" or \"Pro\" version, let me have a browser extension that replaces ALL OF YOUTUBE with your text based breakdowns. // I'm not really kidding! Because boy do I hate 15 minute videos with the one CLI command you need buried like a needle in a haystack. Seeing the nonsense distilled into a handful of straightforward steps is so refreshing. Awesome work! reply layer8 14 hours agoparentYou’d have to be lucky to get the correct and complete CLI command from the transcript though, unless this is also doing OCR, which I don’t think it is. reply aka_sh 14 hours agoparentprevThank you! I'll try implementing something like that and get back to you. reply whereismyacc 10 hours agoprevYou should probably rework the recent video thing? Or not. I mean it's engagement, I guess, but I'm pretty sure people are intentionally putting silly videos on the page. reply pedalpete 11 hours agoprevI could have used this on the weekend. I was working on my car, and though I had watched a few videos about removing the door, and electrical connections, etc etc. I missed on some of the details, or had to make a mental note of \"this, then this, not the other way around\". What I think might be a great addition is if you had a screenshot for each point? Though I'm not sure how you'd figure out which image would best capture the action. reply toddmorey 16 hours agoprevThis is fantastic for recipe videos: https://stepify.tech/video/wUFbhygzbqQ reply aka_sh 15 hours agoparentRecipe ones are the best lol reply iamflimflam1 16 hours agoprevTried it on one of my latest videos. Interesting results. My video is not quite a tutorial video, so I can understand why the results are not perfect. But it has invented quite a lot of content... https://stepify.tech/video/1-Rm0mgg2RI Here's the video for reference: https://www.youtube.com/watch?v=1-Rm0mgg2RI reply aka_sh 14 hours agoparentThank you for trying this out! reply toddmorey 19 hours agoprevThis is a great & useful resource! So many guides on YouTube are unfortunately padded with so much silliness and fluff. Would be great to link out to time codes if possible. reply aka_sh 18 hours agoparentThank you! Great suggestion. I'll try adding timecodes ASAP. reply thih9 12 hours agoprev> Internal Server Error > The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application. Hugs all around - I'd take it as a positive feedback. Congrats on the launch! reply cushychicken 16 hours agoprevInteresting; this is similar to an idea suggested by a Scott Galloway/Section weekly email. 1) record an SOP using Loom while you narrate, 2) grab a transcript of your narration, 3) feed transcript into ChatGPT to write list of instructions. Was billed as a way to easily hand off processes to contractors or subordinates. This seems like a cool riff on that. Neat. reply typpo 17 hours agoprevGreat idea and congrats on shipping the project! I'm curious if you noticed certain models worked better for summarizing and converting to steps. For example, in my projects I've found that Gemini outperforms \"better\" models like GPT for similar use cases, which I guess makes sense given Google's interest in summarization. reply ghoulishly 14 hours agoprevHeh, it did more or less what I was hoping it would for the song ‘How To Be A Heartbreaker’: https://stepify.tech/video/vKNcuTWzTVw reply iamflimflam1 16 hours agoprevI think, to be fairer to the people actually creating the content, you should make a much more obvious link back the original video. reply aka_sh 14 hours agoparentI will. Could you suggest a place where it would be more obvious? reply iamflimflam1 5 hours agorootparentI would suggest to put it at the top of the instructions. What would be really useful - as someone else suggested would be to link directly to relevant parts of the video. reply cvhashim04 16 hours agoprevWow you might have done something, saved How are you managing costs and offering this for free? reply aka_sh 15 hours agoparentI am not. I'm from a 3rd world country and trust me when I say I this i've burned through half of my paycheck in a few hours which is like barely 3 digits. reply inatreecrown2 8 hours agoprevthis is super helpful, thanks for making it! bookmarked. reply robblbobbl 16 hours agoprevHilarious thank you reply brycelarkin 14 hours agoprevLove the Filthy Frank survival guide! reply fortran77 7 hours agoprevInteresting idea, but not quite useful. I tried two: How to replace a fiberglass window screen and how to replace the \"cycle clutch gearh on an IBM Selectric Typewriter\" https://stepify.tech/video/KafAn1h4x14 Neither were good enough to use. reply Simon_ORourke 15 hours agoprev [–] I've been looking for something like this for absolutely ages. If I want to figure out how to fix my cellphone, reset a warning sensor on my auto dashboard or more recently install a NAS box, there's always this long winded YouTube video packed full of ads. Thanks for helping cut through this nonsense. reply aka_sh 15 hours agoparent [–] Appreciate the kind words. This really means alot reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "A new tool generates step-by-step tutorial guides for YouTube videos, primarily focused on tutorial content but adaptable to other types, without using AI, solely relying on transcripts.",
      "The creator welcomes feedback, suggestions, and bug reports, marking their first project as an aspiring creator seeking to move beyond tutorial constraints.",
      "The tool aims to assist viewers in following along with videos efficiently, catering to the creator's needs as they venture out of tutorial reliance."
    ],
    "commentSummary": [
      "A user named aka_sh developed stepify.tech, a platform converting YouTube videos into step-by-step guides, seeking input to potentially commercialize the project.",
      "Discussions involve the use of Whisper for transcription efficiency, user preference for written guidelines, AI-generated content accuracy concerns, and enhancing user experience.",
      "Conversations also include leveraging SOP recordings with ChatGPT to produce instructions, receiving positive feedback and suggestions for enhancements."
    ],
    "points": 214,
    "commentCount": 62,
    "retryCount": 0,
    "time": 1713696745
  },
  {
    "id": 40106639,
    "title": "Ex-White House Official: Microsoft's Government Control Threatens National Security",
    "originLink": "https://www.theregister.com/2024/04/21/microsoft_national_security_risk/",
    "originBody": "Public Sector 70 Microsoft is a national security threat, says ex-White House cyber policy director 70 With little competition at the goverment level, Windows giant has no incentive to make its systems safer Brandon Vigliarolo Sun 21 Apr 2024 // 15:25 UTC Interview Microsoft has a shocking level of control over IT within the US federal government – so much so that former senior White House cyber policy director AJ Grotto thinks it's fair to call Redmond's recent security failures a national security issue. Grotto this week spoke with The Register in an interview you can watch below, in which he told us that exacting even slight concessions from Microsoft has been a major fight for the Feds. \"If you go back to the SolarWinds episode from a few years ago … [Microsoft] was essentially up-selling logging capability to federal agencies\" instead of making it the default, Grotto said. \"As a result, it was really hard for agencies to identify their exposure to the SolarWinds breach.\" Grotto told us Microsoft had to be \"dragged kicking and screaming\" to provide logging capabilities to the government by default, and given the fact the mega-corp banked around $20 billion in revenue from security services last year, the concession was minimal at best. That illustrates, Grotto said, that \"they [Microsoft] just have a ton of leverage, and they're not afraid to use it.\" Add to that concerns over an Exchange Online intrusion by Chinese snoops, and another Microsoft security breach by Russian cyber operatives, both of which allowed spies to gain access to US government emails, and Grotto says it's fair to classify Microsoft and its products as a national security concern. But what can be done to solve the problem when 85 percent of US government productivity software, by Grotto's reckoning, and even more operating system share, belongs to Redmond? \"The government needs to focus on encouraging and catalyzing competition,\" Grotto said. He believes it also needs to publicly scrutinize Microsoft and make sure everyone knows when it messes up. \"At the end of the day, Microsoft, any company, is going to respond most directly to market incentives,\" Grotto told us. \"Unless this scrutiny generates changed behavior among its customers who might want to look elsewhere, then the incentives for Microsoft to change are not going to be as strong as they should be.\" ® Sponsored: The road to innovation using AI and machine learning Share More about Cybersecurity Federal government of the United States Microsoft More like these × More about Cybersecurity Federal government of the United States Microsoft Narrower topics Active Directory Azure Bing BSoD Cybersecurity and Infrastructure Security Agency Cybersecurity Information Sharing Act Excel Exchange Server Federal Aviation Administration GPS HoloLens Immigration and Nationality Act of 1965 Internet Explorer IRS LinkedIn Microsoft 365 Microsoft Build Microsoft Edge Microsoft Ignite Microsoft Office Microsoft Surface Microsoft Teams NASA National Highway Traffic Safety Administration National Institute of Standards and Technology National Labor Relations Board NCSAM .NET Office 365 OS/2 Outlook Patch Tuesday Pluton RSA Conference SharePoint Skype SQL Server Telecommunications Act of 1996 United States Department of Defense United States Department of Justice US Securities and Exchange Commission Visual Studio Visual Studio Code Windows Windows 10 Windows 11 Windows 7 Windows 8 Windows Server Windows Server 2003 Windows Server 2008 Windows Server 2012 Windows Server 2013 Windows Server 2016 Windows Subsystem for Linux Windows XP Xbox Xbox 360 Broader topics Bill Gates Government Security United States of America More about Share 70 COMMENTS More about Cybersecurity Federal government of the United States Microsoft More like these × More about Cybersecurity Federal government of the United States Microsoft Narrower topics Active Directory Azure Bing BSoD Cybersecurity and Infrastructure Security Agency Cybersecurity Information Sharing Act Excel Exchange Server Federal Aviation Administration GPS HoloLens Immigration and Nationality Act of 1965 Internet Explorer IRS LinkedIn Microsoft 365 Microsoft Build Microsoft Edge Microsoft Ignite Microsoft Office Microsoft Surface Microsoft Teams NASA National Highway Traffic Safety Administration National Institute of Standards and Technology National Labor Relations Board NCSAM .NET Office 365 OS/2 Outlook Patch Tuesday Pluton RSA Conference SharePoint Skype SQL Server Telecommunications Act of 1996 United States Department of Defense United States Department of Justice US Securities and Exchange Commission Visual Studio Visual Studio Code Windows Windows 10 Windows 11 Windows 7 Windows 8 Windows Server Windows Server 2003 Windows Server 2008 Windows Server 2012 Windows Server 2013 Windows Server 2016 Windows Subsystem for Linux Windows XP Xbox Xbox 360 Broader topics Bill Gates Government Security United States of America TIP US OFF Send us news",
    "commentLink": "https://news.ycombinator.com/item?id=40106639",
    "commentBody": "Microsoft is a national security threat: ex-White House cyber policy director (theregister.com)207 points by rntn 18 hours agohidepastfavorite202 comments vlovich123 17 hours agoI'm not a fan of Microsoft, but this is some amazing blame shifting. The root cause of the problem is the government single-sourcing a vendor and being incapable of negotiating with said vendor. The US government is 10% of Microsoft's annual revenue just on security services (if I read the article correctly) but is failing to negotiate. The right answer here is if the situation is that bad, make a very public long-term commitment to shift to something else & up-level your IT department to be able to execute multi-year projects competently. Instead of meeting Microsoft on the business playing field, it's trying to use scary \"national security threat\" verbiage to try to bully them in the court of public opinion. Regarding security, at the end of the day, the US government is a huge target for adversaries. You can't outsource your security practices & if MS software is really that much worse they should be fixing their purchasing requirements. The reality though is that whatever software the US government would switch to would become the focus of adversarial research. reply qaq 17 hours agoparentWell you can't not outsource your security because gov payscale limits do not match market reality. You have to realise that a ton of people who should be directly employed by NSA etc. are actually working for their contracts for this reason. reply sandworm101 16 hours agorootparentThe US government isn't in need of a thousand high-skilled hackers. They are in need of a million normal employees with some basic security awareness. Anyone with a modicum of skill can find thousands of areas to improve. The issue is that almost nobody is in a position to get anything changed. Even basic software choices are a multi-year epic. reply qaq 11 hours agorootparentWell I obviously have no clue what the numbers are on the offensive side doubt they are smaller than a thousand. But there are def thousands of cyber security professionals working for government through myriad of contractors purely because of caps. reply whatshisface 16 hours agorootparentprevThe NSA isn't actually supposed to be a massive Statsi-like bureaucracy, it's meant to crack codes used in wartime so that our troops know what the enemy will do next. reply sandworm101 14 hours agorootparentAnd provide the standards to be used within US systems ... Which is basically a definition for bureaucracy. reply eikenberry 15 hours agorootparentprevYou're thinking of the CIA. The NSA's job is to spy on citizens. reply hollerith 15 hours agorootparent>The NSA's job is to spy on [US] citizens They're not supposed to (according to for example the Foreign Intelligence Surveillance Act of 1978). If a US citizen needs to be spied on by the US government, the FBI is supposed to do that. reply rokkitmensch 15 hours agorootparentWhat the spook box says and what's inside are two completely different things, by design. reply onlyrealcuzzo 16 hours agorootparentprevUm, NASA? The government is able to employ tons of smart people that could be making way more money elsewhere. They might not get the absolute best security people in the world, but they could get good enough - as good as they're getting from MS for a fraction of the price. Additionally, government salaries aren't terrible when you factor in the pension. Most people want the money now. But if you want financial security in the future - that's a reason a lot of people chose to work for the Fed. reply acdha 11 hours agorootparent> Additionally, government salaries aren't terrible when you factor in the pension. Most people want the money now. But if you want financial security in the future - that's a reason a lot of people chose to work for the Fed. This varies by agency and field. The older pension system was replaced with a newer model a while back so a prospective federal employee is looking at the combination of effectively a 401k, a pension of 1% top salary per year of service, and social security. That’s not bad but your salary is capped at under $200k so you're not getting anyone with IT skills turning down FAANG positions unless it’s for a cause they support (NASA, the VA, etc. can do that a lot more effectively than Agriculture, etc.). In other professions, of course, that can be pretty different – if you’re an academic who isn’t able to/interested in switching careers to ad-tech, that might be a great job compared to getting in a cage fight for a handful of tenure-track positions. This matters a lot for security because the defense needs to be everywhere. NASA will never run out of people who want to work on robots because rovers are cool; the IRS needs people who can modernize internal business systems and that’s not only not cool but will get mockery from the more clueless people they know. reply whatshisface 16 hours agorootparentprevAlmost all the work done at NASA is done by contractors that work in better conditions than allowed for by the federal payscale. reply krainboltgreene 8 hours agorootparentI mean this is categorically not true, but definitely makes for a pithy comeback. reply staplers 16 hours agorootparentprevbecause gov payscale limits do not match market reality The same people and corporations who leach off govt contracts and subsidies speak often about how govt spending is wasteful. State/federal govts receive 10-20% of every single citizens salary on top of being able to literally create money. They aren't hurting for money. This is entirely caused by corruption and incompetence. reply nobodyandproud 16 hours agorootparentprevPartly this is due to the concentration of wealth, inaccessible to taxing. Naturally government pay would lag behind even the more mediocre H1Bs. reply acdha 16 hours agorootparent> Partly this is due to the concentration of wealth, inaccessible to taxing. This has nothing to do with it. Contractors cost notably more, so if the goal was economizing it’d be an obvious step to cut out the middlemen by hiring staff directly. The problem is that there’s an entire political ideology holding that government is inherently wasteful and its adherents will oppose any attempt to track market salaries because that allows them both to say they’re saving money at the time and later to cite the struggling/failed project as proof that they were right. reply nobodyandproud 16 hours agorootparent> This has nothing to do with it. Contractors cost notably more, so if the goal was economizing it’d be an obvious step to cut out the middlemen by hiring staff directly. It certainly has something to do with it. The market rates for engineers was distorted because FAANG had a lot of money to throw around, so therefore hiring staff at government pay rates is quite difficult and is subject to the General Schedule (https://federalnewsnetwork.com/pay-benefits/2023/12/biden-fi...). Contractors work from bills and projects, where the money is carved out; I agree it’s terribly inefficient. The other issue is how difficult it is to get into government vs getting in as a contractor. I tried the former many times without success; the latter? Easier than FAANG or finance. reply acdha 16 hours agorootparentYes, the GS scale is a problem. My point was that it’s not a problem because we’re trying to save money – if that were the case, someone would notice that raising the cap to allow a $300k civil service job is cheaper than allowing the same job to be performed by a $500k contractor who takes home less and is replaced more frequently. Politics enters the picture because the pay cap is derived from the salaries for politicians rather than what expertise is valued at on the open market: https://www.opm.gov/policy-data-oversight/pay-leave/pay-admi... reply nobodyandproud 15 hours agorootparentYes, but “saving money” is your point and strawman; I never said anything about saving money, nor did I imply it. GS in general cannot grow when the market pay was distorted by both lack of tax funds; and when those driving market pay has a disproportionate amount of wealth to corner the labor market, in order to prevent the hiring of engineers by other industries. reply acdha 12 hours agorootparentI think you misunderstood: I agree that lack of tax funds is a problem in other areas but in this specific case it isn’t because the same or greater amount of money is already being spent. reply ProjectArcturis 16 hours agorootparentprevYup. When a VC-backed company goes bankrupt, no one bats an eye. When Solyndra's loans go bad, even though it was a tiny fraction of the government's green energy portfolio, you get headlines and congressional hearings. reply 486sx33 16 hours agorootparentHow many middle class workers were robbed through income tax to pay for the $524million dollars lost on solindra? Government money totally ruins any private business, to the tune of a huge party where everyone takes as much as possible with no accountability reply acdha 12 hours agorootparentHow many orders of magnitude more money is “robbed” by Comcast/Verizon/Charter, the medical industry, manufacturers who hiked prices up during the pandemic, etc.? Large organizations of all persuasion need oversight but that doesn’t mean we should give up on the concept any more than Enron meant we should give up on the stock market or private energy companies. reply acdha 16 hours agorootparentprevAnd when a big contractor has an 8+ figure write-off, they have a PR team working to prevent accountability and none of the people who were talking about private-sector innovation and efficiency will be asked whether they had a more realistic position now. reply hnthrowaway0328 16 hours agorootparentprevI think it's more about greasy palms than political ideologies. No proof though. reply ripjaygn 16 hours agorootparentprev> The problem is that there’s an entire political ideology holding that government is inherently wasteful and its adherents will oppose any attempt to track market salaries because that allows them both to say they’re saving money at the time and later to cite the struggling/failed project as proof that they were right Why is it a surprise that employees who are essentially unfirable don't perform well? Aside from a very small percentage where the hiring culture is exceptional, it's almost universal. This is a problem with governments across at all levels in almost all countries. How many times do we have to match this movie before realizing that just increasing the salaries won't make a difference, and instead will be wasteful. reply acdha 16 hours agorootparent> Why is it a surprise that employees who are essentially unfirable don't perform well? This is a great example of that political dogma: notice that you’ve accepted as an article of faith the trope that government employees can’t be fired or disciplined or that this is not true of contractors, despite neither of those being true? If your goal is successful projects, what you’re looking for is accountability and managerial discretion. The managers you think can’t direct civil servants directly aren’t magically more capable of selecting and overseeing contracts, either, and without technical staff they won’t have someone they can turn to for advice who doesn’t have a financial conflict of interest. reply ripjaygn 15 hours agorootparent> This is a great example of that political dogma: notice that you’ve accepted as an article of faith the trope that government employees can’t be fired or disciplined or that this is not true of contractors, despite neither of those being true Nice strawman. It is harder to fire govt employees than to fire private employees. Disagree? Just look up at-will employment law that doesn't apply to government entities. Looks like you're the one following political dogma and accepting articles of faith and tropes. Otherwise why would ignore that a very consequential law is different for private vs govt employees? > The managers you think can’t direct civil servants directly aren’t magically more capable of selecting and overseeing contracts, either. Where did I say they cannot? Please stop with the strawmen. They just don't have enough incentive because it's very hard to fire them, unlike managers in the private sector. reply acdha 15 hours agorootparent> Nice strawman. It is harder to fire govt employees than to fire private employees. Disagree? Let’s see, so it’s not a straw man when you say government employees are “essentially unfirable” but it is when someone corrects you? reply ripjaygn 15 hours agorootparentLets ignore the personal back and forth, and get back to the argument. It is harder to fire govt employees than to fire private employees. Disagree? At-will employment law doesn't apply to government entities. A very consequential law is different for private vs govt employees. > The managers you think can’t direct civil servants directly aren’t magically more capable of selecting and overseeing contracts, either. Never said in my comment they cannot direct civil servants. They just don't have enough incentive because it's very hard to fire them, unlike managers in the private sector. reply ahahahahah 13 hours agorootparentThat's like the farthest I've seen goalposts move within a span of two comments. You went from \"essentially unfirable\" to simply \"harder to fire\" and continues to act like you're so right. Like it's almost pointless to discuss something with someone who pretends those are even close to the same. reply ripjaygn 8 hours agorootparentThat's three comments where folks are attacking me instead of addressing the topic because they know they lost the argument. Sad to see that happen. And also look up the meaning of the word essentially. reply paulmd 10 hours agorootparentprev> Lets ignore the personal back and forth, and get back to the argument. I mean, were you not attempting to make an argument when you said that government employees were “essentially unfirable”? Your argument just sucked/was factually incorrect and you want to steer away from the “interpersonal” aspect of someone pointing that out. It’s gauche to point this out on HN but you aren’t engaging in good faith here - wnd when someone else engages you in actual good-faith you fall back to juvenile debate-club attempts to frame them as the wrongdoer. That’s highly rude and a bad attitude and approach to bring to this community. Act better and take some accountability for your own misbehavior. reply ripjaygn 8 hours agorootparentI had two options, either continue the personal back and forth by debating that you folks don't understand the meaning of the word 'essentially', or take the high ground and debate the topic. Sad that both you and the other poster lost the argument so hard that you have to resort to ad hominems and make it about me instead of the topic. Thats very telling. And also look up the meaning of the word essentially. reply xnyan 15 hours agorootparentprev> Why is it a surprise that employees who are essentially unfirable. A government needs employees right? One way to attract and retain employees is to offer competitive wages, another is to offer a relatively low workload and high job stability. Government worker salaries are easy targets and the people who set them are elected officials, so its not a surprise most governments today lean on job security over wages. reply ripjaygn 16 hours agorootparentprev> Naturally government pay would lag behind even the more mediocre H1Bs. Those \"mediocre H1Bs\" work their ass off compared to non-H1Bs because they get laid off/fired and deported on short notice with barely enough or sometimes no time to sell their belongings if they don't perform [1]. Meanwhile it's next to impossible to fire a govt employee for bad performance. Maybe the solution is to fill the govt with mediocre H1B employees, not pay govt employees even more without accountability if they don't perform. [1] https://www.timesnownews.com/technology-science/techie-on-h1... reply nobodyandproud 14 hours agorootparent> Those \"mediocre H1Bs\" work their ass off compared to non-H1Bs because they get laid off/fired and deported on short notice with barely enough or sometimes no time to sell their belongings if they don't perform [1] H1Bs wouldn’t be so easy to fire if the skillset were rare or difficult to fill. Instead, companies are gaming the H1B lottery to create much lower-paid indentured servants while a sliver of the business rakes in 40% to 60% of the spread. And the Federal government employees are paid at the same level or less. I don’t find the H1B abuse defensible, but certainly a useful discussion point on relative salaries. reply ripjaygn 8 hours agorootparent> H1Bs wouldn’t be so easy to fire if the skillset were rare or difficult to fill. By the same token a good chunk of government employees would be paid higher if their skillset were rare or difficult to fill, and they worked hard. The good ones that work hard switch to the private sector, even if the pay isn't much higher, so that they can get stuff done and not be surrounded by folks just existing while collecting a paycheck. reply latency-guy2 16 hours agorootparentprevThe single most well funded organization the world has ever seen struggles to pay the market rate, which the government also regulates? reply ocbyc 16 hours agorootparentprevThis is a straw man. Even if the top richest people paid an additional 16 billion in taxes that would run the gov for like a day. Our problem is with spending. reply nobodyandproud 13 hours agorootparentI’m not sure where that 16 billion figure came from, but what about the top 100 businesses? The ones that have been gaming the tax system for 3 decades? reply fragmede 14 hours agorootparentprevI agree. We don't spend enough money on everything, most notably housing. reply nobodyandproud 13 hours agorootparentThe top earners only need so many houses and places to live, even including corporate housing. The median population doesn’t have the money to spend. reply ocbyc 5 hours agorootparentIsn't that a problem caused by inflation which is driven (right now) by gov spending. reply ocbyc 5 hours agorootparentprevHow can we possibly spend more? reply Veelox 16 hours agorootparentprevThe US government spent $6.1 TRILLION dollars in 2023. I don't think raising taxes is the solution to the government offering a more competitive wage. reply fragmede 14 hours agorootparentIs your entire argument that it's a really big number? Are we afraid of big numbers? How much do you think it should spend? It's the federal government, they do a lot of stuff. Stuff costs money. We can complain about how they spend the money, or that the money is being wasted or stolen, but pointing out that it's a big number isn't a very convincing argument. reply xnyan 15 hours agorootparentprevThat number is meaningless without also considering US GDP (even if you write trillion in caps). The US averages about 14% government spending as a fraction of GDP, placing it at ~90/140. For the size of the US economy, spending should be significantly higher. reply opo 7 hours agorootparentYou are ignoring state government expenditures. >...The US government's Bureau of Economic Analysis as of Q3 2023 estimates $10,007.7 billion in annual total government expenditure and $27,610.1 billion annual total GDP which is 36.2%.[1] https://en.wikipedia.org/wiki/Government_spending_in_the_Uni... >For the size of the US economy, spending should be significantly higher. The percentage shot up during the Covid spending and is still slightly above the historical average. reply paulmd 10 hours agorootparentprevIs this actual spending, or are you rolling pass-through savings programs into this? Cause the caveat there is people always seem to want to count the outflow but not the associated inflow… reply wepple 17 hours agoparentprevI’d imagine that these proclamations are part of the negotiation. I wouldn’t want to be a Microsoft account executive on the US govt contract right now; they’re about to have a massive load of additional requirements. And if they don’t play ball, possibly antitrust to weaken their stranglehold on being the only real enterprise player. I’m not saying any of this is the right approach, but it’s a tool in the governments toolbox. reply mistrial9 16 hours agorootparentany commercial channel filled with this much money will attract hordes of smiling useful idiots filling every possible niche. Now you have another problem, managing useful idiots over time. source: knows some idiots reply tiffanyh 17 hours agoparentprev> The US government is 10% of Microsoft's annual revenue just on security services How are you able to conclude that? reply kbenson 17 hours agorootparentI assume it's the $20 billion in security services statement compared against their ~$200 billion yearly revenue. I'm not sure those security services are all for the U.S. govt though. reply InSteady 16 hours agorootparentMy assumption is that the revenue figure is not exclusively the US government spending. Otherwise what percentage of their yearly revenue is security services to all the other countries as well as businesses in the world? The US government is of course a large customer, but a considerable part of the world runs on windows and other Microsoft products. reply croes 5 hours agoparentprevYour post is some sort of victim blaming, how would multiple vendors or a better price improve security? Could be the opposite. Every provider is an attack vector of the government's network. The problem is MS fucked up big time by not only losing a key but also that this key is a master key due to an error. Not to mention they downplayed the problem afterwards and tried to charge customers for the logs needed to identify the attack. reply giantg2 17 hours agoparentprev\"& up-level your IT department to be able to execute multi-year projects competently.\" Cheaper just to pay up. reply hn_version_0023 16 hours agorootparentIME, paying up is HOW you level up. reply giantg2 9 hours agorootparentThe pay isn't great, but there are other structural issues when dealing with the federal government. reply mschuster91 17 hours agoparentprev> The right answer here is if the situation is that bad, make a very public long-term commitment to shift to something else & up-level your IT department to be able to execute multi-year projects competently. The problem is that there isn't much in terms of alternatives, especially not if you prefer to have one software / vendor / tech stack. - In groupware, there used to be Lotus Notes, but that went down the drain years ago. Thunderbird can do everything Outlook can (i.e. provide an email client, calendar and address book), but there is no official(ly supported) Thunderbird server software suite so there's always a potential for subtle bugs between whatever one chooses for directory, email and calendar backends. - for AD there's obviously Samba but it, again, lacks a management UI that supports all of its features, so yet another potential for issues. - the Office suite alternatives are even more of a nightmare, both in terms of usability, stability as well as compatibility with the millions of legacy files originating from Office. Or hell, even compatibility with old versions of the same app isn't a given in LibreOffice. (And I'm not sure stuff like MS Access even has a FOSS counterpart) - And then, there's all the other stuff that integrates with AD for authentication/authorization. In a lot of cases, it's \"either use MS AD or you're on your own when you hit issues\". - finally, Windows itself. Essentially, the US Government would have to sink billions of dollars into ReactOS development to make it compatible enough with mainstream Windows versions to run all the legacy software that people use - and no, WINE alone is not enough, not for anything that deals with hardware directly. And I wouldn't assume it's possible to even hire enough developers that are skilled to develop for WINE/ReactOS and fulfill the project requirements of never having been exposed to Windows source code. Microsoft has achieved an insane amount of vendor lock-in, even Apple with all its financial and technological might or Valve (who invested a huge amount of money and work into getting WINE feature-rich enough to run a ton of AAA games on their Steam Deck) have been able to even come close. They can provide as shitty a service/software as they want, their audience literally has no other choice. (Me personally, I'll keep my Windows 7 and 10 VMs alive for as long as I can, but no way in hell I'm ever moving to the ad-ridden, bling-bling flashy pseudo-hipster-UI disaster that is Windows 11) reply bithead 10 hours agorootparent>Thunderbird can do everything Outlook can (i.e. provide an email client, calendar and address book), but there is no official(ly supported) Thunderbird server software suite so there's always a potential for subtle bugs between whatever one chooses for directory, email and calendar backends. Thunderbird is a lot more reliable than outlook - I use both daily. But yeah there's no 'thunderbird software suite'. I don't think that's really an issue though. Outlook breaks regularly, and our desktop support group had to deploy an 'outlook reset' app because the vendor is unresponsive. Being that unresponsive lessens the attractiveness of a 'software suite'. >Or hell, even compatibility with old versions of the same app isn't a given in LibreOffice. If I find MS word can't open a file, Libreoffice always does. I've never had a problem opening a libreoffice writer or MS Word file. I'm no 'power user' though. The reason businesses and organizations stick to microsoft is because it's what they're used to, not because the apps themselves are better. As for microsoft as a vendor - they are as obtuse a vendor as I've ever dealt with. Nearly always 100% unresponsive - even with projects involving hundreds of thousands of yearly dollars in licensing fees. I think being unresponsive is some kind of corporate culture thing with them. They're like the McDonalds of IT vendors. You get what's on the menu and that's it. If it doesn't work, well too bad because they know the perceived cost of switching is believed to be too high. reply mschuster91 41 minutes agorootparent> But yeah there's no 'thunderbird software suite'. I don't think that's really an issue though. For me, it is. Outlook natively integrates with Teams, Onedrive and the rest of the Office suite. Everything is available at once, with one click, in a reasonably similar UX/UI pattern (okay, outside of the horror that is Teams with direct chats, meeting chats and Teams team chats). Let's just take a Teams meeting invite... in Outlook it directly opens the Teams meeting, in Thunderbird first the web browser pops up, which then opens Teams, and leaves a stray tab behind. It may be just ten seconds, but it's so much more annoying. reply mike_hearn 15 hours agorootparentprevWine can run apps that access hardware without issues. The main problem is the catch-22: there's not much point in developing competitors to Microsoft's stack if businesses aren't going to ever consider them, and government departments won't consider alternatives if they can't get everything from a single vendor in a 100% risk free manner thanks to the \"nobody ever got fired for buying Microsoft\" and \"one throat to choke\" mentality you get there. Governments do this to themselves. The USG doesn't even have to pick Microsoft. They could potentially sign contracts with Apple for workstation hardware and services, that would encourage and feed the alternative ecosystem based around Apple, or they could fund Linux, etc. They don't though. It's just soooo much easier to sign one giant contract, because that minimizes work for them and it's not really important to get value for money if you're in the public sector. Signing a great deal won't get you a big bonus or anything like that, but taking risks can get you blocked from promotions. So, why risk anything? reply mschuster91 15 hours agorootparent> Wine can run apps that access hardware without issues. Depends on the hardware. Stuff like mice, keyboards or game controllers yes, as long as they're supported by the host OS stack (don't get me started on bluez and the clusterfuck that's Linux audio in general). But anything dealing with user-mode USB drivers (looking at you Samsung ODIN or a truckload of webcams) or more exotic hardware is out of luck. > Governments do this to themselves. The USG doesn't even have to pick Microsoft. They could potentially sign contracts with Apple for workstation hardware and services, that would encourage and feed the alternative ecosystem based around Apple, or they could fund Linux, etc. They don't though. Apple shot themselves into their own foot here by completely discontinuing their Intel x86 lineup. You can run Windows stuff on the M series SoCs but performance is atrocious (unless it's ARM Windows, but good luck finding software compatible with that oddity, no thanks to Qualcomm here who couldn't be arsed to put out actually usable chips for years). As for Linux, there is already a huge amount of government funding into Linux because of servers and their support contracts. That's how RH, SuSE and the other commercial Linux distributions are surviving. The problem is the desktop software stuff, here the chicken-egg problem comes into force - and made worse by the fact that unlike Microsoft who can just decree whatever they want and the rest of the world has to accept it, FOSS projects are mostly driven-by-consensus, and if you're a commercial or government entity needing a feature you have to either fork off with all the cost that entails or herding cats and playing petty politics with people from all around the world (who might just block your idea out of principle after finding out you're working on behalf of the government/Monsanto/whoever is problematic these days, on top). reply mike_hearn 2 hours agorootparentI think that's maybe more due to lack of demand/effort than any fundamental technical limitation. You can run USB drivers in user mode on both Linux and Windows. If someone paid enough for such support to be added, it'd appear. A lot of the software getting hacked isn't even truly Windows-specific stuff to begin with though. VPN appliances, firewalls, they're probably all running out of date Linux distros. Active Directory servers could have some open source competitor too, aren't they mostly Kerberos? And for the rest, ChromeOS could knock it off too with a mix of web apps and RDP. reply mschuster91 29 minutes agorootparent> You can run USB drivers in user mode on both Linux and Windows. Yeah, but you'd need to rewrite the whole Windows app for a native Linux or macOS port because WINE to my knowledge can't access devices even if there were a Linux/macOS driver. > Active Directory servers could have some open source competitor too, aren't they mostly Kerberos? AD is so much more than just LDAP+Kerberos. You have a fully integrated file store, native and direct integration into Exchange (on-prem and cloud), group policies for users and machines, DNS, DHCP, NTP... one vendor, one tech stack, one management way. Set it up and you're done, and even a novice can set up a minimal working small-business environment in a day. With Linux, you have to integrate/configure Samba (LDAP, GPO, file storage), Heimdall/MIT Kerberos, postfix/exim (Mail), no idea what one could even use for calendar sync, BIND (DNS), ISC DHCP server, Jitsi (Video calls), Mattermost (Teams chats). Each of these software pieces have their own configuration syntax, nothing integrates automatically on its own, guides are sometimes horribly outdated, there's subtle differences in behavior between distributions, some of these tools have web UIs for management, others are CLI, and all of them look and behave differently. reply acdha 16 hours agorootparentprevI used to think the way I’d try to tackle a challenge like that would be essentially embracing the ChromeOS model by going web-first for everything so you’d avoid accumulating new accidental dependencies on proprietary software, and trying to shift legacy apps to WINE, terminal servers, etc. Obviously you’d need thousands of exceptions but the important part would be removing the inertia which means that new code starts out being non-portable. Unfortunately, these days the browser engine market is pretty lopsided so that strategy would need to be paired with something like a requirement to test in Gecko and WebKit because I trust Google’s long-term management even less than Microsoft. reply jonathanlydall 16 hours agorootparentprevIf you want to use Windows outside of an air gapped environment, it’s reckless to use anything less than Windows 10, and even for that you have only about a year left unless you pay for extended support. Also, as someone who actually uses Windows 11 Professional all day, every working day, I honestly haven’t encountered these adverts everyone is always referring to (maybe it’s because I’m not in the US). As for the UI, initial release didn’t allow ungrouping of Windows on taskbar and context menus hid most things behind an extra click. This was crap, but a major update a while back has resolved these. I’ve tried Linux, I occasionally need to use it or macOS for development of our cross platform Electron based product, and I would still choose Windows as it really has consistently “just worked” for me since around Windows 2000. But if macOS or Linux works well for you, I’m happy you’re happy and perhaps you in turn could be happy for people who are happy with Windows (and ideally without thinking they must be deluded or something). reply theturtletalks 17 hours agoparentprevThe Pentagon can’t even pass an audit for the past 6 years, but yeah Microsoft is the national security threat. reply skhunted 17 hours agorootparentWhat does one have to do with the other? It’s possible to have more than one threat. reply prepend 17 hours agorootparentSecurity is frequently only as strong as the weakest link. If you’re an adversary, would you spend more time on an org’a poor security practices (pentagon failing audits) or a more difficult software vendor? reply acdha 16 hours agorootparentThe audits in question are financial. There’s no doubt some overlap with security – e.g. failing to replace out of date software due to financial constraints exposes them to risk – but it’s not a simple relationship. reply Brybry 17 hours agorootparentprevThat's not just a 6 years thing. The Pentagon has never passed an audit (the first Defense Department audit in its history was in 2017). reply vkou 17 hours agorootparentprevWhat do you think 'can't pass an audit' means in the context of the DoD? reply theturtletalks 15 hours agorootparentAt best, incompetence. At worst, corruption. reply vkou 9 hours agorootparentIf so, you don't seem to understand why the DoD is failing to pass one, but are very well versed in the outrage you're supposed to feel when it does. reply theturtletalks 8 hours agorootparentCare to enlighten me? reply szundi 16 hours agoparentprevNegotiate? They even can regulate. reply a_simple_man 16 hours agoparentprevwe have a company that has a monopoly that is honestly unimaginable (how does someone monopolize computation of all things...) and we know that all monopolies require government enforcement to prevent others from competing... then we know that there's no such thing as a conflict between Microsoft and the us government the us govt is to serve Microsoft and that's that. any conversation like this about the merits of Microsoft as a market participant are laughable and disingenuous theres no programmer alive that knows the history of Microsoft that would speak about them as you have just done, as an honest company trying to make a product actually sick to see how HN has been corrupted reply extrememacaroni 16 hours agorootparentit's ok, they said they're \"not a fan of microsoft\", clearly that means they're not corrupted. reply consumer451 16 hours agoprevTo be more accurate, the leadership of Microsoft's lack of prioritizing security, aka basic quality of product, is a national security threat. A similar claim could obviously be made of Boeing. Just imagine what is happening in their military contracts which we are not allowed to hear about. Looking at the projects which we are allowed to know about, airliners and Boeing's Starliner, clearly Boeing management needs to be put out to pasture. The core issue is cutting corners, for profit. This is not an issue which is easy to handle in our system. It seems that the best we can do is name and shame. Let's do that at least. reply ripjaygn 16 hours agoprevThe US govt can also do a lot better. The very agency they formed to counter cyber threats and alert against(CISA) itself got hacked because they failed to patch or remediate, and led to a serious leak of sensitive chemical industry information among others. Because they failed to follow their own security advisory. And they won't even put out a report detailing the hack like MS did. > According to an early report on the breach, an anonymous source said that the compromised systems were the Infrastructure Protection (IP) Gateway, which houses critical information about the interdependency of U.S. infrastructure, and the Chemical Security Assessment Tool (CSAT), which houses private sector chemical security plans. > CSAT is an online portal that contains highly sensitive information that determines which facilities are considered high-risk under the Chemical Facility Anti-Terrorism Standards (CFATS). > CISA declined to confirm or deny which of their systems were taken offline. https://securityintelligence.com/news/cisa-hackers-key-syste... > In late February, CISA had already issued a warning that cyber threat actors are exploiting previously identified vulnerabilities in Ivanti Connect Secure and Ivanti Policy Secure gateways. Ivanti Connect Secure is a widely deployed SSL VPN, while Ivanti Policy Secure (IPS) is a network access control (NAC) solution. > Now, CISA itself has fallen victim to a cyberattack involving Ivanti products. reply helpfulclippy 17 hours agoprevCSRB's report on the Exchange Online breach that dropped a couple weeks ago was pretty damning. Microsoft had a situation where a threat actor had access to the entirety of Exchange Online, and possibly their entire cloud. CSRB describes the entire incident as completely avoidable, and resulting from Microsoft's inadequate security culture, and it calls Microsoft out for making public statements about the breach and its response that it knew to be inaccurate. The ONLY way that breach got detected was because the State department bought the premium package with extra logging that let them see when mailboxes get opened. It turned out, Microsoft had a signing key that could create access tokens for anything in their cloud, and it was stolen by Storm-0558. (More precisely, the key was only supposed to be useful for a portion of their services, but a bug allowed Storm-0558 to bypass that scope limitation.) And they used that to go read the e-mails of the State department and a bunch of other organizations, and private individuals. There was nothing customers could do to prevent the attack, and apparently no other indication in their logs that it was taking place, besides this category of entry that was gatekept behind a premium subscription package. Microsoft generated the key in 2016 and discontinued it years prior to the incident, but it was never revoked. Microsoft didn't even bother with key rotations anymore after 2021 because one time they fucked it up and it caused an outage, so they decided to just not do that anymore. Also, Microsoft apparently didn't have any means of detecting the obvious use of a zombie key. Also, Microsoft still doesn't really know how they got the key. They made a blog post about their theory, representing it as something they were highly confident in based on the evidence. After 6 months of pressure from the government, Microsoft finally updated the post to admit that they had no evidence of critical parts of what they claimed, and several key points in their narrative were factually incorrect. Then earlier this year, Microsoft got hacked AGAIN because they had an unused-but-active test account with a guessable password and no MFA, and it was authorized for access to e-mail boxes of (at a minimum) numerous members of Microsoft senior leadership. Microsoft has got serious problems. edit: I keep futzing with my phrasing. Those wanting a much better account should just read the report, since it has a great deal more nuance and information. https://www.cisa.gov/sites/default/files/2024-04/CSRB_Review... reply smgit 16 hours agoparentIts Microsoft. So here are some examples for the children on how they solve their problems - https://www.theverge.com/2022/3/25/22995144/microsoft-foreig... https://en.wikipedia.org/wiki/Microsoft_licensing_corruption... https://www.wsj.com/articles/BL-CJB-17439 reply quantified 16 hours agoparentprev> Microsoft didn't even bother with key rotations anymore after 2021 because one time they fucked it up and it caused an outage, so they decided to just not do that anymore. Key rotation is almost like restoring from backups. It's an absolutely necessary capability and practice. reply krooj 16 hours agorootparentYou'd be surprised at how little cloud vendors give a shit about security internally. Story time: I recently went ahead and implemented key rotation for one of our authz services, since it had none, and was reprimanded for \"not implementing it like Google\". Fun fact: Google's jwks.json endpoint claims to be \"certs\" from the path (https://www.googleapis.com/oauth2/v3/certs). They are not certs - there is no X.509 wrapper, no stated expiration, no trust hierarchy. Clients are effectively blind when performing token validation with this endpoint, and it's really shitty. Other nonsense I've seen: leaking internally signed tokens for external use (front-channel), JWTs being validated without a kid claim in the header - so there's some sketchy coupling going on, skipping audience validation, etc... Not much surprises me anymore when it comes to this kinda stuff - internally, I suspect most cloud providers operate like \"feature factories\" and security is treated as a CYA/least-concern thing. Try pushing for proper authz infrastructure inside your company and see what kinda support you'll get. reply ajmurmann 16 hours agorootparentAre there any large companies that don't operate like feature factories? It seems to be such a common issue and the natural result of the incentive structure. reply mistrial9 15 hours agorootparentalthough this is a valid insight, it reduces the detail of the conversation into \"yes or no\" on a topic that is not a \"yes or no\" topic.. it is behavior and messaging among a dozen critical functions of business. Almost every business is different in their mix.. perhaps faced with similar rhetoric, law says \"show me an example then we can discuss\" instead of \"classify all examples then apply to a situation\" reply mike_hearn 15 hours agorootparentprevNot necessarily. Scheduled key rotation has a lot of conceptual problems: 1. As MS found, revoking old keys is very risky because doing so creates outages. But if you don't do it then changing keys is useless. This isn't a problem specific to Microsoft. Lots of companies have learned this lesson the hard way. 2. It assumes that attackers don't just use stolen keys immediately (e.g. to issue more keys, change passwords, create new accounts etc). In practice they usually do. 3. It assumes that if you change the keys the attackers can't just immediately re-steal the new keys. So it's only really a useful practice in one very specific scenario: you do something that boots undetected attackers out of your network without realising that's what it did, and the attackers need ongoing access that only that key can provide, and they can't use that key to elevate permissions in a more permanent way like by creating a new account on the system or stealing a user password. Pretty specific scenario. Unfortunately, key rotation also comes with big downsides. Any software that works with keys has to be built to tolerate a change silently, because now it's a regular occurrence instead of a rare one (where maybe a bit of disruption can be absorbed). That creates complexity and therefore bugs. And because it's a repetitive piece of fiddly and complex work that can break your entire service if you get it wrong it inevitably gets automated, and that in turn means that you end up with a large collection of highly privileged subsystems that have the power to silently change keys in ways admins won't notice because they are expecting it: exactly the sort of thing attackers will immediately focus on. Overall it's not an obviously winning move. Opportunity cost matters too. Whilst you're setting up all the infrastructure to do this, ironing out the bugs, cleaning up after the outages etc, your competitors might be investing in other kinds of security best practices that are more effective. It's especially useless here because MS don't know how the key was stolen to begin with, so there's no reason to think that if they changed it that would have had any effect. Most likely it could have just been immediately restolen and all the effort would have been theatre. reply ripjaygn 16 hours agoparentprevMaybe the CSRB should look at their own agency, CISA, and get things fixed, since CISA has more power over CISA than it has over Microsoft. https://securityintelligence.com/news/cisa-hackers-key-syste... reply codedokode 16 hours agoparentprevWhy does government use cloud for general public? Why don't they use government cloud with high security? reply K0HAX 15 hours agorootparentDo you really believe that the \"government cloud\" isn't just a duplicate of the public cloud? What incentive do cloud providers have to add extra security to the government stuff, while not also adding that extra security to the public stuff? \"Oh, yeah, we have more security over in the thing you can't use, but you can trust us with your data anyway.\" reply michael_vo 17 hours agoprevI've been told by current military folks that they are forced to use outdated windows (the ones without security updates) on official military computers on base. So this is where they access emails, surf the web, and all of that. They had to use IE instead of the evergreen edge browser. It's well known among the people who serve that it's a joke. reply xtracto 9 hours agoparentReminds me of Gary McKinnon, who \"hacked\" US military computers by using default passwords.... what difference does.it make to use newer OSes if ITops sucks? reply wrycoder 16 hours agoparentprevNot just on base. I had a conversation with a three star general. He remarked that while our warships had separate software and hardware for systems and fire control, the rest of of the ship’s IT ran on Windows. Supposedly, there was no connection between the two, but LOL. reply TecoAndJix 13 hours agorootparentWhy LOL? These are separate systems/networks. Even warships need boring admin things like email, internet, identity management, etc. Plus the systems that go on these ships are heavily customized not just straight out of the box. Source: was IT on a destroyer reply xil3 17 hours agoprevMaybe it's time to move to open source solutions (*nix), with custom security/audit measures. Might be very expensive initially, but then they'd have complete control. reply nickff 17 hours agoparentYou’re implicitly assuming they’d be better off with more control; I’m not sure that’s true. reply breatheoften 16 hours agorootparentIt would definitely be possible for government to be good at things ... in the olden days of tech development, very good people were employed and empowered at government positions with technology roles. I'm thinking back to later 90s when I filled out my financial student aid application. That was an _extremly_ complicated web product for the time, built entirely by the government, and it completely worked and was easy to use. Commercial products like turbotax on the web didn't get parity of complexity and robustness for a good decade more than that. The 'outsource everything' 'not allowed to compete with private industry' mentalities are what has the made the government unable to function in a quality manner ... Its virtually impossible for the government to just hire some people to a team to build some shit -- instead they are _required_ to create bids for contractors to bid on and then incredibly formal contract management processes that are just incredibly disfunctional by design ... It doesn't have to be this way -- its a political result going back to the 'small government' movement which was ultimately about proving that government has to be bad at everything by imposing rules to ensure that result in as many places as possible ... reply wolverine876 15 hours agorootparentAgreed. The US government is actually the most technologically accomplished organization in human history. Examples: Everything NASA has done and does, nuclear weapons, nuclear-powered aircraft carriers, the Internet, the NSA's capabilities, etc. reply imglorp 16 hours agorootparentprevMore control yes but also: more transparency, more vendor choices across the lifecyle. Also more control over telemetry: the current MS stack uploads far more than necessary to only keep things running; government users should not be surveilled, their data should not be sold, etc. reply neilv 16 hours agoprevI'd guess that, before the US ever does anything about its Microsoft Achilles heel, other countries will realize that they face even more threats from depending on Microsoft. (This applies to a number of reckless tech companies upon which countries and other companies create dependencies. But MS is one of the most concerning to me.) reply wolverine876 15 hours agoprevThe federal government is merely experiencing what everyone else does: The IT industry has very low standards: Look at the vast amount of fraud, theft, slander, cons, mis/disinformation, etc. on the Internet, not to mention consumers and small businesses getting run over by legal corporate behavior such as not providing customer service, locking accounts, holding money, holding data, surveillance and selling data, etc. It's been said before, but IT needs professional standards that provide actual, real-life security, privacy, etc., just like professional standards for building developers provide actual, safe buildings - imagine a fraud equivalent to cryptocurrency in building architecture and engineering; imagine an SBF. SBF was celebrated and still is by some. Lawyers have professional standards, doctors, accountants, scientists, engineers in most fields, ... the list goes on in every field of human endeavor but IT. And with standards comes liability. Microsoft shouldn't be able to just say, 'sorry about those hackers'. reply listless 18 hours agoprevSo are liquids over 3.4 ounces reply croes 17 hours agoparentLiquids are less dangerous reply advael 16 hours agoprevThe government relying on private contractors is a threat to national security Proprietary software is a threat to national security \"Switching vendors\" does nothing to solve the core problems here reply wumeow 17 hours agoprevMicrosoft’s security failures are a threat to national security. Microsoft itself is not. reply Avamander 17 hours agoparentAnything used will become a target. How the hell is MS a bigger threat than the rest? If anything a lot of the industry is a way bigger threat and spends less on security. reply wumeow 17 hours agorootparentI don’t understand your comment. Microsofts failures are a threat precisely because it is so used, especially by the US govt. And they may spend a lot on security, but their recent failures have been pretty amateurish. A recent breach they had was due to an old, non-2fa service account with a weak password and privileged access. See also the CISA report about last years breach. reply ripjaygn 16 hours agorootparent> but their recent failures have been pretty amateurish > See also the CISA report about last years breach The same CISA who just recently got hacked in an even more amateurish way? https://news.ycombinator.com/item?id=40107675 https://securityintelligence.com/news/cisa-hackers-key-syste... reply wumeow 16 hours agorootparentKnowing and doing are separate skills. reply Avamander 17 hours agorootparentprevAnd if it were ten open-source projects then they'd have to defend themselves against nation-state attackers. They're not ready for it. The researchers that demonstrated an attack on Linux got vilified instead of the maintainers that had misplaced their trust. *Researchers* not a truly sophisticated and a well-funded threat actor. Do you see the issue? Do you really think the alternatives are more diligent with their defense, 2FA, have spent as much time and effort on security? I truly don't like Microsoft but this seems like shitting on them but I really don't see the point. Anything they use is going to be a \"national security threat.\" I'd gladly see other vendors stepping up, but it's enormously difficult and we're not really there yet. reply wumeow 16 hours agorootparent> And if it were ten open-source projects […] The alternative wouldn’t be to use a smattering of open-source stuff, it would be to go with a different cloud provider like AWS or Google. > Do you really think the alternatives are more diligent […] That’s what the CISA report suggested. I’m not shitting on MS, I just don’t want foreign adversaries to be able to pick apart our IT systems like vultures. reply MSM 15 hours agorootparentBut AWS alternatives ARE just a smattering of open source stuff. Getting everything into AWS doesn't solve anything by itself, either. Then they'd still need to get everything off of windows, office, exchange, AD, etc. etc. Which is a ridiculous amount of work and they'd be fighting bugs and issues for years and years at their scale. reply seeknotfind 17 hours agoparentprevAs much as I like ragging on the softies--and lol my good sir--it's the existence of power that is a threat. The current captain, or their whims, or our belief in them, they are a sense only and no guarantee. reply littlestymaar 17 hours agoparentprevDepends on your nation maybe, but if you are anything but American, it is definitely a threat to your national security. reply washadjeffmad 17 hours agoprevThe era of global botnets, worms, and ransomware can be credited to Microsoft, as well. Lax concern and slow turnaround for CVEs, poor update performance that led to much of the world turning off automatic updates, and updates being blocked on non-activated installs, if they weren't just easily broken gave root (literally) to fleets of vulnerable internet connected Windows systems being leveraged against the world at large for roughly a decade until Windows 10 brought (and forced) endpoint security practices into the 21th century. It's reassuring that their official stance hasn't changed; \"This is how big we are, and it'd be a real tragedy if we couldn't afford to stop something like what we caused before from happening again...\", instead of being sued into responsibility by the world at large. (Uh oh, not 5 minutes in and it looks like Microsoft PR is already here to downvote the trouble away.) reply xyst 17 hours agoparentNot sure why this is downvoted. “NotPetya” and StuxNet were sophisticated worms/viruses which leveraged flaws in Microsoft products to ultimately bring down infra (ie, Iran nuclear program) or bring down countries (ie, Ukraine suffered attacks to energy sector) reply washadjeffmad 9 hours agorootparentReddit refugees. The downvote has become the new \"disagree/disapprove\" button, post-exodus. reply ImPostingOnHN 16 hours agorootparentprevPart of the reason it is downvoted is the snide insult at the end about downvotes. It took conscious decision and effort to edit a snide insult into the post where there was none before. As one of the people being derogatorily called \"Microsoft PR\", this is unnecessarily antagonistic of GP towards me on HN, especially when I did nothing to GP. Commenting on your downvotes is off-topic, against the rules, and when done as a snide insult like above: rude. GP might experience better results if they edited their post to remove the snide, insulting comments about downvoters. reply amai 13 hours agoprevIt is not only a security threat for the US. It is a world wide security threat, because it is used by so many governments. Somehow all antitrust agencies in the world seems to have forgotten that Microsoft has a monopoly in office IT. reply eimrine 17 hours agoprev> Microsoft has a shocking level of control over IT within the US federal government Apple has same within US schools oll over the country and nobody even cares. Your government will change but your children will be with you for a while. reply wrycoder 16 hours agoparentHigh schools, at least, run on a giant pile of Chromebooks, not Mac hardware. reply btbuildem 16 hours agoprevWhile this brings to mind that scene [1] from Steve Carrel's \"Space Force\" show, you can't blame the scorpion for stinging you if you give him a ride on your back. The dependency on (pretty much) a single vendor across the entire military organization is such a monumental single point of failure, I can't imagine what level of obtuse bureaucracy led them there. It seems self-inflicted at best; if it wasn't MS it would've been some other corp. IMO the military (especially given their incredible size and access to resources) should have 100% rolled their own IT solutions from first principles, and built upon that. 1: https://www.youtube.com/watch?v=2zpCOYkdvTQ reply hnburnsy 16 hours agoprevMaybe the NSA should help protect all Federal government systems. According to Wikipedia... >The NSA is also tasked with the protection of U.S. communications networks and information systems. reply Terr_ 16 hours agoparentHow I imagine conversations going in the NSA: \"Hey guys, we should fix this vulnerability ASAP.\" \"No can do, it has to wait and be stealth-patched indirectly, otherwise we'll lose the advantage of using it ourselves.\" reply FredPret 16 hours agoprevIt’s amazing how much leverage MSFT is extracting from Excel. It’s the tiny brick supporting their entire skyscraper. reply layer8 16 hours agoparentNo, Active Directory, Exchange, Word, and probably half a dozen other products also play an important role, and the integrations between them. reply FredPret 15 hours agorootparentI’ll give you AD, but overall far fewer companies would bother with any of it if 90% of corporate thinking didn’t happen in Excel reply cranberryturkey 18 hours agoprevall tax payer funded software should be open source reply dlachausse 18 hours agoparentI see this sentiment all the time, but it could never apply to the defense sector. Do you really want our nations enemies to have access to the source code of fighter jets, cruise missiles, the nuclear weapons program, or missile defense systems? reply derf_ 16 hours agorootparentFrom my time working in defense contracting, quite a lot of the software was open source, built on open source components (just like everything else) or even hosted on official military GitHub repos. Code written by the (federal) government itself cannot even be copyrighted (in the US). Obviously you are not going to find the classified stuff on GitHub, but even there it was very common for the government to take all of the source code from one contractor and hand it to another one to work on. You also design your systems so that as much as possible can be unclassified, because unclassified development is much, much easier. reply bschmidt1 17 hours agorootparentprevOpen-source doesn't mean \"not secure\" - the nuclear codes would be in the .env obv >.> Seriously though - the software itself would be separated from secrets architecturally. And because it's open and anyone in the world can contribute it could be superior code than what some private government tech contractor could come up with. For the equipment use case like jets and missiles, a separate directive component (driver) would likely be necessary anyway, not just for security/privacy but because different nations have different equipment. We use F-16s, M-16s, Autel drones, etc. This driver/directive component would be the manufacturer's IP - like an nvidia GPU driver. Think of it like we'd all be running/contributing the same OS but because we have different hardware and security needs there are still some private components. The idea/goal here is that our defense companies would overall benefit from it. Not just because the software is improved, but you can justify funding, build curricula around it - might benefit the defense industry to modernize their tech practices. reply abstractbeliefs 17 hours agorootparentThe problem is that not all the secrets are so easily extracted - sometimes the design/software is the secret. If you put all the design up for nuclear weapons but just kept the nuclear codes secret it's great that no one can fire ours, but people could implement the design on their own with different codes. To use a more realistic example, consider air defence missile systems use to shoot down incoming missiles and drones. The secrets here aren't keys, it's software-driven behaviours including the approach to identify radar tracks as hostile or noise, identify when to commit a missile and how to target it, the code implicitly contains the vulnerabilities where the radar tracking is less effective and more evadable and how the system tries to mitigate this, etc. When you take away all the secret behaviours, you quickly end up with not much more than just the drivers connecting the hardware to the logic, which isn't a lot of code that's driving the funding. How you set a missile tubes tilt and direction is trivial stuff and is mostly reused from old platforms that were funded decades ago. Additionally, there is some talk about how this is kind of like security through obscurity. When it comes to things like weapons and other high-tech capabilities, security isn't only security against being owned, it's security against your opponent closing the technological gap. Unfair wars, where you have a significant tech lead on your opponent, means your population bleeds less. reply bschmidt1 16 hours agorootparent> sometimes the design/software is the secret Decreasingly the case, and we might be at the point I can say \"poorly architected\" if that's the case. A random 19 year old developer in the military with access to the secrets would be a big security hole too. That's what we should be comparing with regards to open-source vs not open-source - in either case access to weaponry would of course be heavily gated. Some of the other arguments you make here are no different than conventional arguments against open-source: > the real code would still be private Precisely the point, get the crowd to optimize the low-risk parts, build communities around those libraries and frameworks and recruit from it > opponents might catch up To remain an industry leader it's actually better to get everyone playing your game rather than trying to compete and stay ahead in a wild west scenario. You want to capture it really, so you can control it and be the leader in it. Open-source is one great way to do that (browser vendors come to mind). reply abstractbeliefs 15 hours agorootparentYou can say \"poorly architected\" all you want, but it's true. Military capability is frequently determined by software-implemented behaviours, not data you can plug into a generic public framework. >19 year old developer with access would be a big security hole It's true, they are. That's why militaries and defence companies go to great lengths to vet their staff and why even within vetted staff, sensitive material is compartmentalised to minimise the risk from any given individual. Even despite that, military secrets are still leaked on an all too regular basis. reply bschmidt1 15 hours agorootparent> That's why militaries and defence companies go to great lengths to vet their staff What a joke, no they don't. They establish security internally by gating access, not trusting everyone because they've been \"pre-vetted\". reply abstractbeliefs 15 hours agorootparentGating access is compartmentalisation. If you're being brought onto, say, missile development, you absolutely will have to submit to both vetting (knowing who you are prior to access) and compartmentalisation (permitting access only to your relevant secrets throughout). I'm not saying that just because you have some kind of clearance you will get access to everything, but it's part of the preconditions to your own relevant access. reply bschmidt1 14 hours agorootparentYes, those security clearances are the real gates, not anything in your JavaScript codebase, and that's the point - there's already clearance in place within the military, there should be nothing in a codebase that can bypass a security clearance requirement anyway. A very secure codebase is designed in a way that all the sensitive parts are separated from the parts general users (and developers) have access to - it shouldn't be all imbued together such that sensitive parts about missiles are exposed to login APIs etc. as it seems like you were saying. It may even be lower risk than not to open-source as the public is more likely to find and fix actual security quirks that a private contractor might miss (or could even be paid as a spy to purposely leave vulnerable). There's also the community/recruitment aspect. AI/LLM companies are cleverly open-sourcing major parts of their work while keeping the only important part that makes them valuable private - it's a win:win as they keep their secrets yet provide for and stimulate a developer community. reply prepend 17 hours agorootparentprevCertainly. It’s not like giving them the source code would increase risk significantly, if the software is designed well. I think it would actually strengthen as more researchers would study and submit contribs. I think Linux is as or more secure than windows and it’s open source. There’s tons of sensitive systems that are open source. It’s a design fallacy that security through obscurity is good. reply gray_-_wolf 17 hours agorootparent> It’s not like giving them the source code would increase risk significantly I like free software a lot, and do not know much about weapon development, but would not the software reveal a lot about capabilities of the weapon platform? The argument to keep the software private might not be motivated just by attempt to hide security holes, but also by desire to hide what the weapon can do, what are the operational limits, etc. reply tester756 16 hours agorootparentprev>It’s a design fallacy that security through obscurity is good. Yet, still obscurity increases security. Reverse engineering is not trivial and raises the bar. reply prepend 16 hours agorootparent> Yet, still obscurity increases security. I disagree and think obscurity decreases security. It just gives the false belief of security. reply fsflover 12 hours agorootparentprevAny relevant links? I can share this: https://blog.invisiblethings.org/2008/09/02/three-approaches... reply SoftTalker 17 hours agorootparentprev> Do you really want our nations enemies to have access to the source code of fighter jets, cruise missiles, the nuclear weapons program, or missile defense systems They likely already do. Between exploiting remote vulnerabilites (a nation-state intrusion will never even be noticed -- they aren't going to encrypt all the files and ask for ransom) and old-fashioned spycraft, it would be really amazing if all the contractors involved on those projects had perfect security. reply nurple 17 hours agorootparentprevThis is actually not a bad idea for an international peace treaty. If you make weapons, they must be open source. If the real power in these tools is the secrecy behind their design and implementation, seems like a great way to suck the power out of them. reply dh2022 17 hours agorootparentThis strategy would fall apart when you encounter an adversary willing to sacrifice its own people. Nations that care about their own people need to keep a technological advantage on the battlefield. reply nurple 17 hours agorootparentI mean, all treaties are at risk of failure from bad actors, even implicit ones like mutually-assured-destruction, and in the later case it has been shown to be incredibly effective. But I don't feel like grinding the threat of powerful weapons against each other to be a particularly wise long term solution to security. I think it's a pretty obvious ipso facto that the more, and more advanced weapons, that are placed into the global battlefield, the less actual security (in life and liberty) we can expect. The problem isn't that there are adversaries that are willing to sacrifice their people, almost every war is one of attrition after all, it's that leaders that would be adversaries like this are inevitable in a governmental structure that is delegated a monopoly on violence. reply dh2022 16 hours agorootparentAdversaries willing to sacrifice their own people are absolutely a problem for societies that care about their own people. reply cess11 17 hours agorootparentprevStates don't care. reply dh2022 17 hours agorootparentBelieve it or not, USA government cares at least a little. USA did not institute the draft even when fighting on two fronts (Afghanistan and Iraq). USA made up for the lack in manpower with technology: Reaper drones, cluster munitions, night vision, precise artillery, overwhelming air power. reply nurple 16 hours agorootparentDon't you find it a bit frightening that this tech is daily giving a smaller and smaller subset of people in the world the unilateral ability to project their will onto the world? At least if they tried to draft in an unjust war, the people could withhold their physical support. This was pretty effective during the Vietnam area, but it's a bargaining chip we've lost. As we saw with 702, we really have very little leverage left in what our gov does anymore, the threat of being voted out even carries little power, exactly because they're systematically removing humans from every loop they can for the purpose of working unilaterally even when--perhaps especially when--it's against the will of the people. The spooks themselves have literally said exactly as much in their fight against privacy. To me, the latest 702 is more terrifying than any adversary. When we, who the government should be beholden to, cannot even know the text of the laws which apply to us, it really puts a fine point on how the those who run our government view themselves in relation to its citizenry. \"The liberties of people never were, nor ever will be, secure, when the transactions of their rulers may be concealed from them.\" -Patrick Henry reply dh2022 16 hours agorootparentWell if the history in the past 3 years is relevant I would say that the power of elites to project their will onto the rest of the world is small. In both sides: Russia is still grinding through a war that may be their second Afghanistan; and on the western side it took US Congress half a year to approve some funds so someone else (Ukraine) would to fight China’s gas station. reply nurple 13 hours agorootparentFrom my PoV, much of the Ukraine war was the result of the powers in the US exercising their control over the world, and it sure didn't take long to dispatch two carrier battlegroups to the aid of Israel. reply cess11 15 hours agorootparentprevI find the threat of policing and misery used for recruitment a tad bit worse than drafting. Not that it matters, the state still doesn't care. It can't, it's not that kind of being. reply mrwyz 17 hours agorootparentprev\"never apply\". https://dodcio.defense.gov/Open-Source-Software-FAQ/ reply dlachausse 17 hours agorootparent“All” reply xyst 17 hours agorootparentprevClosed source is a recipe for disaster. Many attacks on important infrastructure have been because of closed source/proprietary software. - Stuxnet (developed to attack PLCs which control nuclear centrifuges) - Petya (targeted Microsoft developed systems and software and brought governments and states to their knees. Notably Ukraine) reply newsclues 14 hours agorootparentprevOpen source doesn’t mean freely available online for everyone reply bbarnett 17 hours agorootparentprevOpen Source != GPL. Nor on Github. I don't know what the parent fully meant, but I do know that some agencies have full access to some Microsoft source code. From where I sit, I find it absurd that everything we use isn't open source. Again, not free, but the code given to purchasers. You don't need closed source to protect IP, and the proof is in all of these API lawsuits, and copyright law. I don't want my missiles to not have code I cannot edit, and stepping back from the top secret sphere, tangential I am appalled at how crappy car firmwares are closed source. In the old days, a country's national transport agencies could look at evey linkage, every rod, every part of a car design. Now 90% of the design is hidden. And with electric cars, it's even more firmware. And the idea that OTA updates are a thing for cars. The madness. The absolute madness. How much do you want to bet that charging firmwares are remotely updatable? Now imagine that 9am on Monday, every electric car explodes? Even today, that would mean an immense number of houses on fire. How could the fire department handle it? And how could it be handled as the fires spread? And what if lots of other infra goes up? And that's today. What about when 90% of transportationn is electric? Even if not a single house or building burned, or person was hurt, how would you replace all those buses, trucks, delivery vehicles, and cars? As COVID showed us, you cannot ramp up and down overnight. And what if it happened to all our allies? Would they still sell part to us? What of all the tractors are electric, and we miss corn and wheat planting season? My point in this tangent is... no one is even looking at the important bits. And to reiterate, how much do you want to bet charging firmwares are remotely updated? Really, they should be air gapped from the entire rest of the car. Letting potential hackers have access in this way, is just plain lazy and reckless. reply prepend 17 hours agorootparent> I do know that some agencies have full access to some Microsoft source code. Access does not mean open source. Open source = OSI and what I think GP meant. And I hold the sentiment that government funded development should be open source. reply bbarnett 17 hours agorootparentOpen source goes back almost a century, and does mean access to the source code. GPL was created, and other licenses, to allow more than personal use. reply prepend 16 hours agorootparentGPL is one kind of open source, not all. That’s why I specified OSI. For government work, I care about OSI, not if people can just see and not legally change, contribute, and redistribute. I think government should fund global goods and want to be precise in my language. So when I say “open source” I specifically mean OSI-licensed stuff. reply bbarnett 15 hours agorootparentI specifically said \"and other licenses\", so why would you respond, as if I acted as if GPL was the only license? No matter. One entity doesn't get to unilaterally redefine a century old term. You claim you want precision, well then specify OSI, a subset of open source. (And yes, the licenses it approves are indeed a subset.) reply bongodongobob 17 hours agorootparentprevThat's all fine and good but I don't want missiles with code you can edit. I didn't vote for you, nor do I trust you. reply yjftsjthsd-h 17 hours agorootparentNobody said random users should be able to edit. FOSS means the code is available, not that they're going to take patches. (See sqlite for an extreme case - code is public domain, but they more or less don't take contributions) reply giantrobot 16 hours agorootparentCode available means everyone else has a leg up developing their own weapon system or finding flaws in yours. You don't really want adversaries looking through the source code of your targeting and guidance systems. reply bongodongobob 16 hours agorootparentprevParent literally said \"I don't want my missiles to not have code I cannot edit\" reply yjftsjthsd-h 15 hours agorootparentSince the line was > I don't want my missiles to not have code I cannot edit, and stepping back from the top secret sphere, tangential I am appalled at how crappy car firmwares are closed source. I read that as that whoever's missiles they are should have full visibility and control of their code; I am assuming that \"my missiles\" means the government, not that the poster personally owns missiles. reply advael 16 hours agorootparentprevUnironically yes. Auditable software is inherently more secure, especially over the kind of timescale relevant to governments reply cess11 17 hours agorootparentprevWhy not? reply convolvatron 17 hours agorootparentprevok. most. and an aside note do you really want the national defense to be one thumb drive away from total collapse? reply a_simple_man 17 hours agorootparentprevhow are those systems going to be secure without being audited by the market? the reality is that this military industrial complex is just a way to print money and funnel it into the hands of a few criminals. all of the major news publications openly told you that the USA has been attacked over 100 times in the middle east AND WE LEFT. The public is going to find out very soon that this massive, expensive military can't actually defend against or defeat other militaries. That when you spend $1000 on a hammer everything looks really flashy and impressive AT FIRST with your fancy jets and missile systems, but after enough time, and after enough of the money has been funneled out, you realize it's a paper army. the USA is so weak that Iran is pushing them out of the middle east and there's nothing the theives that run the military can do about it. but don't worry. they already manufactured a Palestine sympathy story ahead of time to explain why they have to pull out and run away like the cowards they are. and your son's and neighbors sons will pay the price with their lives reply SteveNuts 17 hours agorootparentEvery time I’ve been involved with selling software in any way adjacent to national security they’ve required source code review. reply a_simple_man 17 hours agorootparentHow are you equating a \"code review\" to open source, the difference is the difference between asking a couple dudes for advice and asking the entire world for advice. I'm sure the argument sounded really good in your head, but let's be adults here when it comes to the United States military reply Veserv 17 hours agorootparentBecause auditable does not mean the same thing as audited. It is silly that people keep pushing that dead argument after Heartbleed pounded a stake through its heart. Audits are time consuming, challenging, and boring. Experience shows even critical, high profile projects hardly get any review at all by the \"world\", let alone actual audits by competent domain experts. Quality verification depends on auditing and auditing depends on competent, trusted review and testing. Global transparency is not a substitute for auditing except when discussing absolute rock-bottom standards. Reviewable is significantly better than unreviewed and unreviewable, but that is the lowest possible bar. Unfortunately, software does, as a general rule, have rock-bottom auditing standards, so FOSS does provide meaningful assurance increases in many use cases. But, that is a artifact of the abysmal quality standards rather than any sort of inherent auditing advantage that FOSS provides. That is not to say that global transparency is not valuable for other reasons, but it provides no meaningful quality verification or auditing advantage in serious applications versus local transparency (to the trusted reviewer). If you want to see how this works in practice, look at literally every other industry. reply a_simple_man 17 hours agorootparentthe market will determine what should and should not be audited, according to supply and demand. thinking that a couple employees that were not paid for with profit but with printed and taxed government dollars is not and never will be a substitute for the free market, which is a synonym for humanity. not respecting that fact will always result in loss and inefficiency. and no amount of paragraphs can undo that. reply Avamander 16 hours agorootparentThe market has been horrid in determining that. There are a few dozen massive companies funding a significant amount of the menial and boring work done on FOSS. Possibly because they have more to lose from their competitors building moats and wide-scale incidents. Thankfully governments are now also funding FOSS work but this really doesn't align with what you're envisioning, I think. reply drooopy 17 hours agoparentprevDunno if all government software should be open source but government should definitely avoid vendor lock ins. reply morkalork 17 hours agorootparentThere's a couple places in the book Skunk Works where the author laments the government's procurement strategy for planes that always ensured different manufacturers got at least some contracts so they wouldn't go out of business and leave the government reliant on just one supplier. He derided it as a form of socialism! Alas, it was a reasonable approach. reply fsflover 17 hours agoparentprevhttps://publiccode.eu reply kypro 17 hours agoparentprevI don't know how it works in the US, but this is very much the default when building public software in the UK, https://www.gov.uk/service-manual/service-standard/point-12-... > Public services are built with public money. So unless there’s a good reason not to do so, the code they’re based should be made available for people to reuse and build on. > Open source code can be reused by developers working in government, avoiding duplication of work and reducing costs for government as a whole. And publishing source code under an open licence means that you’re less likely to get locked in to working with a single supplier. Obviously there are exceptions made, but you have to explain why the exception is necessary. An auth library would be an example of where you might not want the code pubic. reply outside1234 17 hours agoprevI mean there are lots of logging options that are not Microsoft. This sounds like more of a agency fail if anything reply mikewarot 17 hours agoprevI call bullshit. Someone, somewhere long ago deep inside of the bowels of the NSA decided to deprioritize actual security, and the use of the capability security model. They knowingly did this, because actually secure computing (which they already had at the time[1,2,3]) represented a threat to the NSA, or so they thought at the time. The trade-offs seemed acceptable, because there were systemic approaches at the time that could keep things secure via other means, such as air-gapping, TEMPEST screening, etc. Much like the consumer decision on the other side of that secrecy barrier, when it was decided the MULTICS was too complex, and you really didn't need all of that complexity (to allow mutli-level security), the easing of hardware requirements, and systems design time all seemed worth it. Here we are 50 years later, and both decisions have proven to be disastrous. We've swiss-cheesed our infrastructure in a manner that can only be hinted at metaphorically. The closest analogies I know are: Imagine the power grid and modern society, with absolutely zero circuit breakers or fuses. Imagine running an economy without being able to divide wealth into uniform small amounts, dollars, cents, etc. In both cases, everything becomes all or nothing. This is what we have with computers, all or nothing. You have to trust software you run, or you simply can't run it. It's the same with the \"License Agreement\", nobody actually reads them, and nobody tries to enforce them, yet there they are. It's possible to have secure computing, we had it in the 1980s, but we didn't realize it. It was crude, but effective, because we had systems with no persistent internal storage, and we could write protect the storage we had. Thus it was possible to manage data, and the side effects allowed, in a simple, powerful way by simply not putting data at risk, making copies, and using those instead. Until we reverse the bad decisions of the 1970s, we're going to keep up the deranged behavior, blaming everything and everyone, and ignoring the one way out of this. You shouldn't ever have to trust a program you execute to behave in the manner you expect. Your computer should enforce the limits you expect, and the program should have zero ways around those limits. [1] https://csrc.nist.rip/publications/history/ande72.pdf [2] https://en.wikipedia.org/wiki/Capability-based_security [3] https://web.archive.org/web/20120919111301/http://www.albany... reply Veserv 16 hours agoparentYour assessment of the current state of affairs is spot on. However, there are a few additions. A. It is not metaphorically swiss-cheesed, the swiss-cheese model [1] of software security is officially endorsed. Just stack enough trash and maybe it will be okay is now accepted policy. B. It was not driven by the NSA. It was actually driven by commercial software vendors like Microsoft and Cisco who could not meet minimum security standards, so demanded the standards be lowered to allow them to make sales. Any time the NSA gets the drivers seat in setting government security procurement standards they almost always push for actual security since the NSA is the government; they are protecting themselves. It is reasonable to distrust them for commercial and external systems, but you can trust their standards for their own and government systems are not meaningfully compromised. [1] https://en.wikipedia.org/wiki/Swiss_cheese_model reply mike_hearn 15 hours agoparentprevYou should probably try building a pure capability based operating system and making it usable, before blithely saying the entire industry got security wrong. Capabilities aren't magic. UNIX has had many forms of capability for a long time, NeXT/macOS/iOS uses them extensively as well, and there are still vulnerabilities regardless. Also, capabilities are irrelevant to the types of hack being discussed on this thread where the vectors are forgotten admin accounts, non-patched software, etc. reply mikewarot 14 hours agorootparentCapabilities are magic, if you don't have them. People confuse permission flags, such as those found in smartphones, etc.. or locking down permissions a-prior as in app-armor, with capabilities. The ability, at run time, to pick a file, and give only that file, folder, or set of resources to a piece of software is essential to secure computing. As far as I know, NeXT/macOS/iOS et all don't have that ability. reply mike_hearn 2 hours agorootparentTry this experiment: 1. Write a macOS app that has a button which uses the file open window to load a document. 2. Enable the app sandbox by adding the relevant entitlement. 3. Prove to yourself it works by adding some code that directly fopen()s a file in your home directory and watching it fail. 4. Open that file by clicking the button and selecting it in the open dialog. Observe that you can now read it. Or just go read Apple's documentation that explains their capabilities architecture in detail. Look for docs on sandbox extensions and Mach ports. reply outside1234 17 hours agoprevWait til someone tells them that Google can basically unplug the internet reply janice1999 17 hours agoparentEven more reason to tackle monopolies and break up 'too big to fail' companies. reply Avamander 17 hours agorootparentLarger ships carry more people and can thus sink with more, let's cut the ships in half? Point being, there's a lot of infrastructure that kinda doesn't make sense split up. If you want resiliency, build a second system in parallel not make management of an existing one times more expensive. reply salawat 17 hours agorootparentYes? There is a little bit of wisdom out there: Don't put all your eggs in one basket. Heterogenous architecture (where you intentionallly mix and match differing parts for increased fault tolerance) has been a thing for decades. reply Avamander 17 hours agorootparentYou do realise you'll have half a ship, not two ships then? Defence in depth is expensive, infrastructure at scale is expensive, it would be difficult and more expensive to have a bunch of small operators reach the same level considering the initial cost and overhead. I'm sure though that such equally viable alternatives could be built, but not by splitting existing ones. reply ocdtrekkie 17 hours agorootparentprevThere's really no reason for all sensitive data and email to be stored on the servers of one company which has tens of thousands of employees who might be insider threats not to just one customer, but all of them. reply wepple 17 hours agorootparentDouble-edged sword, because few organizations also have the resources to do security at the scale and depth as a MS/goog/Amz reply oldpersonintx 17 hours agoprevA reasonable fix is easy: stop using Windows reply hulitu 18 hours agoprev> Microsoft is a national security threat: ex-White House cyber policy director They needed some decades to find out. /s reply RGamma 17 hours agoparentA couple more decades 'til they notice that software runs on hardware. reply jjtheblunt 17 hours agoprevThe White House is a national security threat, according to polls of disgruntled americans, if Reuters and AP are accurate. reply faeriechangling 16 hours agoprev [–] Even if you pretended Microsoft didn't exist, I don't really see how any similar alternative actually presents a secure alternative. There's a mess of vulnerabilities and complexity at every layer of any modern computing stack you can think of. If you ACTUALLY want security, you're going to be dealing with computers which are 100x slower than what we're used to with a tiny fraction of the features. For the most part I'm not convinced people actually want secure computer systems, they want computer systems which are productive and they'll just cope with the regular security breaches. reply hackernewds 16 hours agoparent [–] Don't hear this much about Apple. And most of tech companies run on Apple devices. reply faeriechangling 14 hours agorootparent [–] I've been hearing about iOS exploits for eons, and exploits against Safari and iMessage specifically happen all the time. See: All the stuff the NSO group has done. Apple has also been getting hit by unpatchable hardware level vulnerabilities because quite simply their hardware is designed to be fast, not designed to be secure. I'm also not saying this based on people reporting vulnerabilities, I'm pointing out the software we're using is fundamentally impossible to secure on merit of its complexity and the tradeoffs people make that neglect security. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "AJ Grotto, former White House cyber policy director, warns that Microsoft's monopoly over IT systems in the US government is a national security risk due to recent security breaches.",
      "Grotto highlights the lack of competition at the government level as a factor contributing to Microsoft's limited motivation to enhance system security.",
      "Emphasizing the necessity for more competition and public oversight, Grotto advocates for enhanced scrutiny of Microsoft to promote stronger security protocols."
    ],
    "commentSummary": [
      "The article discusses the national security concerns linked to government reliance on Microsoft, including security breaches and negotiation challenges.",
      "It highlights issues with government cybersecurity practices, attracting skilled personnel, spending inefficiencies, and limitations in pay scales.",
      "Suggestions are provided for enhancing security, assessing tech solutions, and shifting towards open-source software in government projects to improve transparency and mitigate security risks in critical infrastructure and military systems."
    ],
    "points": 207,
    "commentCount": 202,
    "retryCount": 0,
    "time": 1713714250
  },
  {
    "id": 40106157,
    "title": "Developing a Personal Text Editor with Enhanced Debugging and LSP Features",
    "originLink": "https://bold-edit.com/wrote-my-own.html",
    "originBody": "I used to like vscode. I've been using it since it could run and debug C#. Last year, I noticed I frequently hit bugs where I couldn't type until I switched out and back into the editor with alt-tab. That's not so bad but it got annoying when I couldn't build or debug until I restarted the program One day, possibly the thing that bothered me the most was when I was writing a GDB pretty printer. I'd tweak the script; then to see the results I would press F5 to run the already built binary and wait over a second EVERY SINGLE TIME (about 1480ms). It was driving me nuts. I ended up leaving a terminal open and would save, alt tab, press up, enter. All that would still be almost a second faster than if I were to restart the debugger in vscode. I then realized it won't matter how fast my compiler is (I've implemented one for my own language) it will always feel slow if I use vscode (the compiler builds a debuggable binary in 15 milliseconds). Finally, what broke the camel's back was when I was debugging 3 different complex functions. Each had about 15-20 variables I was interested in. I had the watch panel take up the entire right side and there wasn't enough room. I had to manually remove and add variables every time I rotated to a third function. I wouldn't always put the vars back in the same order. It was obnoxious. Whichever function I was looking at I wanted to see the same set of variables on the top right in the same order every time. Between the bugs, it being slow to launch, and now debugging becoming a problem I decided then and there to write a text editor. I thought, how hard could it be? The answer is always harder than you expect but I knew that and I wanted to find out The first thing I did was implement GDB support. Here's a video of the watch variables at the top right changing based on the function its in If you look closely you'll see there's no flickering. All variables and their values show up at the same time. You can see variables are shown significantly quicker. From the video you can't see when I press a button to launch the debugger. From launch to breakpoint (which includes the build step) it took <200ms. Two of my biggest annoyances I solved. Next, I wanted to make sure editing and rendering is fast no matter how large the file is. Some tools generate hundreds of MBs of JSON. Here's a video of me opening two files (both 1gb) scrolling around, typing, and pressing undo/redo. I was pretty happy that I could run 60fps without dropping frames with a debug build (vscode drops frames). However for a 4K monitor, I need an optimized build. Even with typing and undo/redo I consistently stayed over 144fps so people with fast monitors can have a smooth experience. I like being able to partially type a filename and jump to it, or find/jump to a type. I like to rename variables. LSP's (language server protocol) support these so I implemented it. It's not a complete implementation, one thing easy to see is there is no semantic tokens support which would improve highlighting. The video shows signature help but doesn't show jump to, rename, hover, etc. Friends didn't like debugging in their current IDE so they asked if I could implement DAP support. So I implemented that as well. The video shows an example using python. A few weeks before I began writing, I met the people who work on the undo debugger. Their goal is to let people replay executions, so you can figure out and debug complicated problems that no one knows how to reproduce. But that's not why I liked it. I did this. In that video, I ran the 'last' command on the global variable g1. The debugger brought me to the last time it was modified. It's magic. I use it constantly, even when I know where it's modified. It saves me from writing a conditional on a breakpoint and I don't have to guess if I don't know which spot the variable was last modified. It's not a free debugger but I wanted to implement the feature for myself and it was very easy since it had the same protocol as gdb and the implementation was just a few lines on top of my already existing gdb implementation. This editor is still early in development and plenty of features are missing. There's no global search, there is a find but no replace and people who like vim motions will need to wait. If you try it for 5 minutes feel free to let me know all the things that you noticed were missing. There's a tutorial file in the download to give you something to do in the first few minutes of using this.",
    "commentLink": "https://news.ycombinator.com/item?id=40106157",
    "commentBody": "I can't stand using VSCode so I wrote my own (bold-edit.com)198 points by redman25 19 hours agohidepastfavorite164 comments armchairhacker 16 hours agoThe author could try forking and patching VSCode to fix the annoyances manually. Years ago I had an issue with VSCode: it was missing a small feature that was very important to me, with the GitHub issue stuck in limbo. I ended up going into the source and implementing the feature myself. It took a few hours after bugfixing, I think the fix was ~100 LOC. Then I used the locally-built version. I recall building took a while, and the source and artifacts took a lot of space, but no other problems. I also created a PR referencing the issue and it got merged rather quickly. Someone else ended up finishing the work since there were some problems (I think relating to coding conventions, and possible edge cases I didn’t need or handle). Maybe I was lucky for the feature to not require much edits, and probably for the PR to get taken over and then merged fast. But it seems like the author's issues are also small, and it would be easier and more ergonomic to patch VSCode than to create an entirely new debugger. reply omni 15 hours agoparentI had a near-identical experience. I looked into switching in 2019 and ran into this 2016 bug which was a showstopper for me. Fixed it myself, grand total 4 line diff. https://github.com/microsoft/vscode/issues/10643 reply segmondy 11 hours agoparentprevThis is the way. Anytime I have had issues with an open source project, creating a PR even if it's not great will often have it taken over, improved and merged. reply jjeaff 11 hours agorootparentI'm sure someone named some \"law\" after themselves for this. But it is true that the fastest way to get an answer to a question online is not to ask a question; post the wrong answer. reply p4ul 7 hours agorootparentYou are correct! This is Cunningham's Law [1]! And it seems exceedingly plausible after observing behavior on many online forums! [1] https://meta.wikimedia.org/wiki/Cunningham%27s_Law reply sam0x17 12 hours agoparentprevSometimes it's easier to start from scratch than figure out how some storied monolith works reply nailer 11 hours agoparentprevJust a thought that sometimes people developing C# since the early 2000s don’t come from an open source culture, so fixing bugs in someone else’s programs doesn’t appear in their default list of resolutions. reply doctorwho42 4 hours agorootparentBest time to learn was 10 years ago, the second best time to learn (and add it to their default list) is today! reply macromaniac 18 hours agoprev>I'd tweak the script; then to see the results I would press F5 to run the already built binary and wait over a second EVERY SINGLE TIME (about 1480ms). I put in a bug report for this years ago but it got ignored :( https://github.com/microsoft/vscode/issues/137066 Vscode has gotten slower over time. It's true you can't get nanosecond performance out of JS, but anything under 17ms should be trivial. I believe the vscode developers are skilled, it's just they don't care (imo) enough about performance for whatever reason, and that's a shame. reply kcplate 17 hours agoparentEverybody who worked writing code in the 70s-90s is smirking at “wait over a second”. Back in the day, I used to go get my coffee, shoot the shit in the break room for a few minute, and come back to find my debug runs just starting. reply cjensen 17 hours agorootparentTurbo Pascal was so fast in the 80s that if I saw a syntax error further down the page it was faster to hit \"compile\" and let the compiler move the cursor to the error than it was for me to move the cursor myself. It was a very special compiler and they don't make them like that anymore. reply vbezhenar 17 hours agorootparentThe trick is to have language \"optimized for compilation\" and do not do fancy optimizations. Java is similar (but overall infrastructure around compiler makes it slow). Golang also quite fast. reply cjensen 8 hours agorootparentThe tricks in the 80s were different than today's tricks. (1) Single-pass compiler. No separate pass to convert to object or executable. (2) Written in assembler (!). Helps that Pascal has fewer dark corners. (3) No use of disk. A single file read or write would take 10-20s on a floppy. Instead, it's memory to memory. reply thechao 12 hours agorootparentprevI think LLVM missed the boat, on this, by being an early mover. A lot of the optimizations are resource-only analyses; the few that re not are \"just\" various levels of interpretation. That kind of implies we need a framework to define resource utilization and evaluation at the instruction/machine-code level with a standard API. Having an optimizer for an abstract IR is less useful. The point being that compilers would then target emitting reasonable machine code at speed, and The Real LLVM would do analysis/transform on the machine code. reply fuzztester 15 hours agorootparentprevAnd V 3.01 was under 40 KB (not a typo), and included a basic WordStar editor clone for program editing! reply outside1234 17 hours agorootparentprevIt’s crazy that this is still the gold standard reply pjmlp 16 hours agorootparentWe got outsteped by C and C++ industry adoption, followed by doing everything in interpreted languages. Finally 30 years later, the pendulum is turning around. reply rurban 13 hours agorootparentprevThey still do. Lua is likewise extremely fast, and comes without bullshit mostly, reply doix 17 hours agorootparentprevAnd in the 00's things were pretty instantaneous, at least from a UI perspective. I actually developed some \"bad\" habits where I'd just hold the step hotkey down to advance my program when debugging. And everything just worked and was synchronous. All the registers updated with each step, as well as my watched variables and everything else I can think of. I'm pretty sure this was visual studio 6. That was peak Microsoft debugging experience for me, everything after that was worse, admittedly I did drop it and moved to Linux, so maybe it is good now. Although I very strongly doubt it. reply skydhash 6 hours agorootparentThis is the reason I like VIM. While I’m mostly using it locally, this deterministic way of handling input means that I can edit over a slow ssh connection faster than the result being displayed. The VIM language is like playing music, you’re only conscious of mistakes. There was a data entry program (I forget its name) that I liked too. I could enter a complete survey form without watching the screen, just by tab-ing. I memorized the sequences and shortcuts for dropdown. Made a dull job less frustrating. reply hacym 15 hours agorootparentprevAmazing how technology has improved and matured in 50 years… reply blegr 17 hours agorootparentprevWasn't that mostly compiling though? VSCode's CMake tools take multiple seconds just starting an already-built executable. reply cjbgkagh 17 hours agoparentprevWow, marked as-designed. I guess that's one way to fix the issue. In my experience latency needs to bedevops-y things (Terraform, OpenTofu, JSON, python, yaml, txt, dockerfiles, etc.) > I so, so wish there was a better way to do this without fucking electron. I do all of those things in vim and it works fine. No GUI and I'm sure it's missing some fancy new features, but it's fast and reliable (and it's not electron). reply candiddevmike 18 hours agorootparentI traded vim for VSCode back when VSCode was fast. These days, there is so much shit running in VSCode by default that it has become an unruly mess. I couldn't tell you what happens when I save or open a file like I could with Vim--what checks are being ran or what telemetry is being exfiltrated. At this point it's just laziness and inertia keeping me on VSCode, getting my neovim setup back (along with the muscle memory) keeps getting pushed off. reply theossuary 18 hours agorootparentI haven't been able to find an IDE use because their vim integration is only ever for the editor. But I hate having to constantly manage my vim config; I settled on using LazyVim and have been pretty happy. It's heavy as far as vim is concerned, but once you get used to it, it's nice being able to update and not have everything break hah reply candiddevmike 18 hours agorootparentI had a ridiculously fine tuned neovim setup in my dotfiles that I created over the years, including a nice neovim terminal setup that I can navigate/change using only keyboard (never been a big tmux fan). I've managed to replicate some of it decently with VSCode (vim extension, and I can do CTRL+j to open a terminal and CTRL+k to move back to the editor), but it's just slow and has a tendency of crashing at the worst time. reply prmph 12 hours agoparentprevExactly. Talk about something as simple as code folding. VsCode does the best job of it I know, and yet the other day it simply stopped working properly for pure JS code, not sure if that's because Microsoft prefers we use Typescript instead of JS. Nothing I did fixed it, and something as simple as that messes us with your workflow. And then I remember that VSCode has introduced a recent bug where after you collapse a piece of code, the file jumps to a weird location. And other paper cuts too numerous to mention, which seems to appear and go randomly So I tried Sublime text again, only to find that \"Collaspe All\" does not work properly by design, whatever the reason for that. And it still insists on making many things un-ergonomic. So I try Webstorm again, and after a few tweaks, it seems to do pretty much what I want. But, it is dog slow, and the display of collapsed comments is a bit weird. I start thinking of writing my own code editor... My point is pretty much this: The various advanced code editors spend so much effort on advanced features, but they forget that the basic must work flawlessly for most devs to have a good experience. I wish they focused on the basics again to make common sue cases frictionless. reply paulryanrogers 10 hours agorootparentMy guess is we have have a different 10% that we consider common use cases. Much the same way folks complain about Microsoft Office being bloated. reply scoopdewoop 18 hours agoparentprevWhy do you think your issue has anything to do with electron? That sounds like a meme. It is your drives, no? Does the browser make your system drives work a bunch? Much more likely, it is VSCode running ripgrep (rg in htop/activity monitor) in the background to find symbols in your codebase. That would be exactly the same regardless of GUI toolkit. edit: misread \"system drives me bananas\" as pertaining to \"system drives\" nvm reply cyanydeez 18 hours agorootparentIts not electron, but abusing the webview rendering for realtime software' reply INTPenis 18 hours agoparentprevMakes me glad I stuck with vim. I do pretty much the same thing as you, what made you use vscode in the first place? What are the coolest features in your context? reply CuriouslyC 17 hours agorootparentVS Code has a strong plugin ecosystem, and is built around plugins. You can find plugins for everything, so whatever linting, code formatting, back end integration, custom renderers, menus, etc you want you can build and plug in if they aren't available already. Beyond that access to a project tree view / definition list toggle on the side, debug code at cursor, context menu options to refactor/find usage/etc, and easy pixel perfect control of pane layout when working with multiple documents simultaneously. I never got that deep into vim/emacs but I wasn't impressed with their versions of the features I listed compared to what is available in a good IDE like intellij/vscode. I do wish the performance was a bit better but I have a beastly workstation so it's not a big deal. reply pinusc 15 hours agorootparentI'd say everything you described is true of vim as well, especially nowadays with LSP and tree-sitter and async capabilities in plugins. The plugin ecosystem is thriving. Neovim's lua api makes it even easier to develop plugins. It does take a fair bit of configuration if you want to start from scratch, but there's also distributions (such as LazyVim [1]) which make it trivial to start from an editor basically as fully featured as VScode. Of course, there's still the learning curve for a modal editor, but that's the whole point of using vim. I assume there are vi-style plugins for VScode, but then you're missing out on performance. 1: https://www.lazyvim.org/ reply Lio 14 hours agorootparentprevAs well as its own plugins Vim/NeoVim can use VSCode's LSPs, DAPs and extensions either directly or via plugins like CoC[1] and Mason[2]. I would be surprised if emacs couldn't do the same. 1. https://github.com/neoclide/coc.nvim 2. https://github.com/williamboman/mason.nvim reply INTPenis 3 hours agorootparentprevSeems like a lot of training wheels to me. I mean linting, formatting can be done by piping buffer into external programs. Not sure what back end integration means but you can accomplish a lot with just bash+vim+tmux (or zellij which I recently switched to). The disadvantage is of course that it's not integrated, but the advantage is that my editor never crawls to a halt. reply skydhash 5 hours agorootparentprevVimL can be cumbersome, but I believe Lua in Neovim can be nicer to work with. But if you’re pressed by time or the task is not that important, I’d say VSCode is good enough. But everything is mostly a CLI away and VIM is especially good interacting with CLI tools. And Emacs is an operating system for texts. I’d go with Jetbrains IDEs for their language stacks though, because they’re really good at what they do. reply Scarbutt 17 hours agorootparentprevIMO, the big is one good/smart programming language support, either out of the box or with a few clicks. If you know vim well, the vim plugin has serious limitations though. On windows/linux the reliance on home/end/pgup/pgdn/arrow-keys/del/mouse etc... is atrocious if you are used to vim so the vim plugin is still a life saver. The remote dev extensions also pretty good. reply levodelellis 15 hours agoparentprevExcept for the occasional python I don't need to touch any of that. I'm the author, try looking the editor up in 3 or 6months. It may have most of the papercuts solved. I went after the big things that I had no time to implement the little reply wffurr 18 hours agoparentprevPaper cuts like what? Deficiencies in the syntax plugins? reply wg0 14 hours agoparentprevIt's the terrraform part of the LSP that's buggy and there's an issue open for that on Terraform extension's GitHub repo. reply dangus 17 hours agoparentprevI have like 10 separate VSCode workspaces (windows) open at all times along with 2 browsers and dozens of tabs and I never feel like my system is bogged down. In that sense I wonder if your computer just needs an upgrade? I’m not advocating for e-waste but also if you’re a developer then you’re the most justified person to invest in a beefy system. E.g., if you have any kind of Intel Mac, you absolutely should upgrade. I don’t let my computers get older than 3-5 years because compromises to my workflow aren’t worth the cost savings (I just make sure I keep them in good shape and sell them to someone who is going to continue using them). I want to choose the best software for my workflow, which is not necessarily the software that is most resource efficient (that would be like choosing MS Paint instead of Photoshop). reply magicalhippo 16 hours agoprevOn the flipside, I recently had to make some changes to a ~1.5GB XML file, like in the middle of the file. I had a sudden flashback to the Atom editor, which developers considered a 1MB XML file as \"large\", and hence it totally chocked on a 100MB one I tried once, crashing out after eating 8+GB of RAM. To my mild surprise, it opened in a few seconds, and while all the fancy checking stuff got disabled, basic syntax highlighting still worked so element tags were colorized. Finding and changing the offending element was not much different from normal. I checked memory usage, expecting it to be astronomical, but it was quite within reason (~3 GB IIRC). I admit I did not expect it to go that well. reply rrishi 14 hours agoparentYou didn't mention which editor you were able to edit the large XML in. Just confirming, it was VSCode? Because that'd be amazing! reply magicalhippo 13 hours agorootparentYes, VSCode as of half a year ago. reply vrnvu 17 hours agoprevThis reminds me of the famous Visual Studio rant by Casey Muratori https://www.youtube.com/watch?v=GC-0tCy4P1U And the hundreds (if not thousands :D) of rants by Jon Blow saying how contemporary software performance sucks reply levodelellis 15 hours agoparentHave you seen \"Jonathan Blow plays Visual Studio\"? I ran across it after I started and understood his pain reply scubbo 8 hours agorootparentThat guy is hilarious, thank you for sharing! reply gostsamo 18 hours agoprevVSCode is still on the top of accessibility, so when you can claim that you work perfectly with a screen reader, you will convince me to switch. reply zilti 13 hours agoparentEmacs reply bigcoke 17 hours agoparentprevpeople often overlook accessibility and other essential features of a modern editor, you telling me that your rudimentary rust editor is faster than vscode? and? people don't use it because it's fast (it's not). reply vbezhenar 15 hours agorootparentHow is accessibility an essential feature? I'm not disabled, so I don't care if editor is accessible or not. I care about my use-cases. And I use vscode precisely because it's crazy fast. reply viraptor 14 hours agorootparentYou're not disabled yet. But you may want to care about this before your eyesight, motor accuracy, etc. start failing. It's not some big \"disabled/not\" switch - setting the font 1pt higher is accessibility, changing the colours is accessibility, being able to tab through fields consistently is accessibility, etc. reply soerxpso 14 hours agorootparentThe idea that I might eventually become disabled still doesn't make it an essential feature. Disabled users are not a significant portion of the userbase of most software. Accessibility is an essential feature for a text editor in the same way that Linux support is an essential feature for Fortnite. reply viraptor 14 hours agorootparent> Disabled users are not a significant portion of the userbase of most software. Have I got news for you. https://www.disabled-world.com/disability/statistics/ > Currently, around 10% of the world's population, or roughly 650 million people, live with a disability. > In countries with life expectancies over 70 years of age, people spend on average about 8 years, or 11.5 percent of their life span, living with disabilities. Sure, not all of the disabilities will apply to using an editor. But disabilities overall are very common. A significant proportion of users of anything are disabled in some way - it just may not be obviously visible. reply duped 8 hours agorootparentprevThis is why we have laws protecting disabled people from being ignored by markets. And even in the absence of the law (which may impact your software, talk to your lawyer about the ADA) there's such a thing called morality. reply devbent 8 hours agorootparentprev100% of people lose visual acuity. Flat out you will eventually need glasses and your ability to see differentiate two different colors with a low contrast difference will fall apart. reply polyterative 2 hours agoparentprevand yet, wacom pens are not supported. I need it to help with RSI reply macrael 18 hours agoprevSublime text is great! It’s been worth it to write small plugins to fix my biggest complaints but since they got LSP runni by first class it has been a great place to be. reply thih9 11 hours agoprevCongrats on the launch! The non-open license is a blocker for me; an editor is perhaps the most important tool for me as a programmer, I'm unwilling to risk not being able to use it how I want. This looks like the same reason that made the author write their own editor. I won't do that, I will stick to vim and emacs. reply tiffanyh 17 hours agoprev> FOR PERSONAL USE ONLY Since the license says for personal use, I assume that means I can’t use this in a corporate setting? https://bold-edit.com/download reply mysteria 17 hours agoparentIf you interpret this very strictly it could even imply that this editor couldn't be used to say write open source code that's distributed to the public. Basically all you could do with it is write code at home for your own use. reply tiffanyh 16 hours agorootparentThat’s why I ask actually. Whats the generally accepted legal interpretation for “personal use”. reply CaptainFever 6 hours agorootparentI wonder, does it even matter? Who would know what editor you used to write a piece of code? reply adithyassekhar 4 hours agorootparentUnless the author has the significant resources to audit any companies he's suspicious of, no one will know. reply beeboobaa3 16 hours agoparentprevAll my work in a corporate setting is personal use. It's me personally using the software to earn money. Point is, \"personal use\" is such a nonsense term. reply bugthe0ry 6 hours agoparentprevI assume that means \"don't rely on this in any serious setting\" and/or \"don't try to sell it for profit\". reply tasuki 15 hours agoprevIt really is too bad vs code is the only available option. If only there were more editors for people to choose! reply yoyohello13 15 hours agoparentYeah imagine if there was an editor that was super fast and lightweight that was designed with extendability as a first class citizen. reply causal 18 hours agoprevBTW if VSCode is slow for you, check what extensions you have installed. reply awfulneutral 17 hours agoparentYeah, for me it's more than fast enough except for the Microsoft pylance and C# extensions, both of which I really need to feel productive, and both of which (especially pylance) make VS Code much slower and buggier. It has been getting bad enough that I've been looking around for other editors, but as far as I can tell VS Code really wins on having all the language features, plus copilot and git integration in a single place. reply neonsunset 14 hours agorootparentC# extension generally has acceptable performance (as long as you use Roslyn LSP and not the Omnisharp one, although it also was fast at the cost of higher memory usage and less stability). What could be slowing it down is other extensions, especially if they have heavy Roslyn analyzers. For large project it doesn't scale as well, which is where Rider comes into play, I still daily drive VSC as the editor since it's just way snappier and more fluid than Rider. reply rstat1 15 hours agoparentprevEven without extensions its always gonna be slower than a proper native app. reply Pannoniae 18 hours agoprevTo be fair, it's not hard to outperform something written in Electron with native code with a factor of ten :) Anyway, this is really impressive, so good job! reply newaccount74 18 hours agoparentOpening a 1GB JSON file and scrolling, editing, and keeping syntax highlighting correct is something that even native text editors struggle with. reply Pannoniae 18 hours agorootparentNotepad++ is a champ at doing that, as long as it has line breaks. (It chokes with massive single-line files like any other editor) reply zo1 16 hours agorootparentLove Notepad++ to bits, but it chokes on just 20MB of nicely-formatted XML if you have syntax highlighting on. Disable that (if you can figure out how), and you're golden. reply arghwhat 18 hours agorootparentprevNative code does not replace efficient algorithms. V8 can also JIT JS to something that runs fast, although the extra layers of abstraction between web code and platform interfaces do not help, and V8 can only do so much. reply Alifatisk 18 hours agorootparentprevSublime have opened way larger files with no issues for me reply eyelidlessness 18 hours agorootparentI’ll second this. And to emphasize, so it’s not just a useless “+1 comment”: I never cared for Sublime as an editor, despite some effort to appreciate it when it was at its popularity peak. But it instantly became, and remained, my go to editor for working with huge files. reply al_borland 16 hours agorootparentprevWith a native editor, like Sublime, it may take a while to become functional, but it will eventually do what I want. With VS Code, loading in a big file usually crashes it. Thankfully I don’t have to deal with this as much as I used to. reply datavirtue 18 hours agorootparentprevI had to buy UltraEdit which is capable of handling 10GB files (the size in my case). Nothing else that I tried would work. Of course, this was ten years ago. I havent had to work with very large text files since then. It was able to perform search and replace at an acceptable and responsive pace, nearly instant. reply Osiris 18 hours agoparentprevOne of the benefits of Electron is being able to build the same app for multiple operating systems. When writing GUI app using native OS calls, how does one make sure the code is compatible with all three major operating systems? reply generalk 18 hours agorootparentFolks did this plenty prior to Electron, either by using cross-platform GUI toolkits (GTK and Qt both run on Windows, Java's been doing this forever with Swing and JavaFX, etc), or by writing GUIs for multiple toolkits/OSes that work with the same/similar core application logic. Electron makes it easier to build cross-platform apps, and certainly cheaper, but it's not like it's the only way to do it. reply levodelellis 15 hours agorootparentprevI'm the author. I had experience with SDL and wrote a test to confirm it still performs well (I never tried it on linux). It did, SDL has been ported to just about every OS. I have some OS specific code for windows but not much. The only OS specific things were executing a binary + stdio + closing it and slight differences in socket code (mostly used for DAP). C++ now has filesystem support so I didn't need any OS specific code for that reply Marsymars 6 hours agorootparentprevThis is an important consideration for the developer/publisher, but less so for the user. I use all three major operating systems on a daily basis, and typically preferentially prefer single-OS apps, as I can typically expect them to be more performant and to better follow a platform's UI conventions. reply titusjohnson 18 hours agorootparentprevTypically by reading docs and writing compliant code. reply dymk 18 hours agorootparentWere it only that easy reply pineaux 11 hours agorootparentTell me how its fundamentally not this easy? Its just not really \"easy\" to write correct compliant code. reply nextaccountic 18 hours agoprevIs it open source? What programming language and what GUI toolkit does it use? I really want GUI programs that don't lose a frame no matter what. reply levodelellis 15 hours agoparentI'm the author, I haven't seen it drop a frame when running in a release build. I had experience with SDL and wrote a test to see if it performs as well as I remembered. It did, so I implemented this without using a GUI toolkit. I didn't really want to fight (and optimize) a toolkit to implement syntax highlighting, autocomplete, etc It's written in C++ because I knew I'd spend time optimizing it. I've been writing C++ for 20years so I didn't hurt my foot or do anything that caused me harm reply NikkiA 6 hours agorootparentwell, you put SDL in it, which has so many i18n and accessibility gotchas that you've pretty much blown both your feet off already. I'd be surprised if it's keyboard handling is robust enough to work with non US layout keyboards for a start. reply pipes 15 hours agoprevThe only thing that annoys me about VS code is that Microsoft decided to call it visual studio, which means if I search for help for a problem with actual visual studio I end up with vscode suggestions. Id like to know why ms thought this was a good idea. reply Onawa 15 hours agoparentMicrosoft has been flopping with their naming recently... Case in point, Copilot. GitHub Copilot, Microsoft Copilot, Office 365 Copilot... all different products for different uses. Still can't figure out why they didn't follow through with Cortana being the OS copilot name and retired it. It was such a perfect fit. My only guess is that they are worried about anthropomorphizing the AI. reply sibit 11 hours agorootparent> Still can't figure out why they didn't follow through with Cortana being the OS copilot name and retired it. I can't figure out why they didn't use it as an opportunity to bring back Clippy. reply yoyohello13 15 hours agoprevThis is pretty cool, but why not use neovim or emacs or something? reply EasyMark 6 hours agoprevCurrently and for the past year or so neovide+nvim+lazy has been the thing that got me off vscode. reply w10-1 5 hours agoprevAs an alternative to VSCode, consider Theia[1]. Open-source, runs all the VSCode extensions, etc. [1] https://theia-ide.org reply TiredOfLife 5 hours agoparentThat's the one that took the Monaco editor (the part of VS code originally made by Microsoft) and then advertised it as the true alternative to VS Code. reply ksec 18 hours agoprevVSCode is slow? I mean, for 7 years? Somewhere around early 2017 things started to get out of hand and VSCode was super hyped. To the point 99% on HN was saying it was very fast. Initially ( Pre 2017 ) it was compared to Atom which means the bar was low. And then somehow people start claiming it was as fast as Sublime or they see no difference. As someone mentioned down below, both Lapce and Zed is designed with speed in mind. Or just use VIM. VSCode may be flexible, but it is only fast by the measure of an electron App. reply __jonas 18 hours agoparentIt's fast enough for me to not notice any slowness. I switched to it from JetBrains IDEA because it was literally causing seconds of delays when scrolling / entering code during heavy indexing in large projects. I never noticed anything of the sort in vscode, even if extensions are doing a lot of background work I don't notice any significant impact in the UI, I can always scroll and type without interruption. I tried out zed, I don't really find it noticeably faster, although I'm sure it is! I guess there are people who are more sensitive to this sort of thing but for me it's really completely fine. reply ehnto 18 hours agoparentprevProbably a combination of new developers and wide spread use of SSDs have made it's public image of speed. But really it is pretty quick, on modern hardware it is more or less instant at most tasks. I use Jetbrains IDEs and am migrating to neovim, even Jetbrains is basically instant searching across large codebases once on good hardware. reply jinushaun 17 hours agoparentprevIf I were to guess, like everything else, it’s fast until you install extensions. reply mdaniel 13 hours agoprevWhile trying to cough up more details about this, I discovered https://bolinlang.com/faq#:~:text=One%20issue%20we%20have%20... so it seems the skunkworks site design is a thing. I especially enjoyed the \"cloud company stol my shit\" vibe reply PhilipRoman 18 hours agoprevReally cool work. By the way does it support variable DPI? Maybe it's just a limitation of how my sandbox is set up, but font size and everything else seemed a bit small. reply levodelellis 15 hours agoparentRight now I have only the icon and font size as hardcoded. I plan on implementing a config file so users can set their own font, size and etc. I have no idea when I'll release another build. I'll be spending the next week catching up on sleep reply m0n0x41d 5 hours agoprevShould use nvim, btw reply skilled 18 hours agoprevNo offense, but who made this? How did the submitter find this? The Download page has a name but a Google search doesn’t return much. Not that anyone would run a binary just like that, but I do find it interesting. reply redman25 18 hours agoparentHey, I'm OP. I did not write this blog post. It was an interesting one from r/programmers that I felt worth cross-posting to HN. Not sure if there's a clear way to indicate that in the title... Here's the original reddit post: https://www.reddit.com/r/programming/comments/1c8yhll/i_cant... reply skilled 18 hours agorootparentok, thanks reply mlhpdx 18 hours agoparentprevI hope developers are among the most careful about putting new things on their systems. I hope. reply vundercind 16 hours agorootparentNah, we can’t work without admin on our system because we need to install 100 programs we’ve never really vetted, a couple of which have been out of support for a decade. How else are we going to efficiently add 20,000 lines of code we haven’t read as dependencies to our project… this week? We’d love to do things safer but it’s not in the sprint plan, which plan assumes speed only possible if you use third party tools and code you haven’t properly vetted for basically everything. Never mind that then you slow to a halt when infosec sees a CVE rate of ten a week against all those packages you had to have, often against ones you’re not even using but are a dep-of—a-dep for some optional functionality you don’t invoke, and now your team spends 80 person-hours a week addressing those and messaging about doing those and having code reviews of one-line dep version bumps and running regression tests and moving them through the deployment pipeline (we’re Responsible and Safe, as you can plainly see, so of course we have at least three multi-step stages to get to deployment, wouldn’t want to be unsafe!), all because we want to “move fast” but also “be safe” (but not at the same time, so the left hand doesn’t know what the right hand’s doing until everything’s already all fucked up) (Sigh) reply yjftsjthsd-h 18 hours agorootparentprev> I hope. I have... simply the worst of news. reply solardev 18 hours agorootparentprevI usually read most of the description's first sentence before downloading a npm package. Does that count? reply m0n0x41d 5 hours agoprevShould you nvim, btw reply syngrog66 15 hours agoprevvim exists reply dandigangi 16 hours agoprevCould have just used Visual Studio if you/re deep in C# lol reply viraptor 14 hours agoparentHave you tried doing much with VS/C# in practice? I get some new, weird bug every time I use it, the UI preview tabs take ages to show up, the compilation delay is easily crossing 2s, etc. It's really not great if you're already bothered by the speed of vscode. reply neonsunset 14 hours agoparentprevVisual Studio editing experience is just not nice compared to VS Code. A lot of developers have moved on to Rider or VS Code + Rider combo nowadays. reply swah 18 hours agoprevAnd Zed? reply teo_zero 17 hours agoparentDoesn't Zed only run on MacOS? reply dkersten 16 hours agorootparentYes, although there is a Linux version underway. It seems to be about ~80% complete, maybe check it in a few months. No idea of a windows version is in progress or planned though. reply briandear 15 hours agoprevOr just use Vim. Not sure I understand the obsession with VSCode. reply vehemenz 9 hours agoparentWhen you use the word \"just,\" you seem to be implying that Vim is a suitable development environment out the box, when in reality it takes hours of configuration over weeks of time, conservatively. Even then it's not going to supplant VSCode or JetBrains for most people due to its limitations. reply lionkor 4 hours agorootparentthere are out of the box neovim experiences, like kickstart.vim. I've kept it largely the same, tweaking only small settings like colorscheme, some line wrapping stuff, like I would in any editor. You really dont have to take hours to install and tweak and debug 100 plugins anymore, if you dont want to reply yoyohello13 4 hours agorootparentprevIt’s likely more “out of the box” than developing your own text editor from scratch. reply levodelellis 15 hours agoparentprevHave you had a good debugging experience with (neo)vim? I'm the author reply miniupuchaty 4 hours agorootparentIt's not ideal for me yet. I've had some problems with DAP. The DAP servers I've checked were a bit unstable and slow. For now I'm using gdb with nvim-gdb https://github.com/sakhnik/nvim-gdb Very reliable and as fast as gdb is. But with all the problems just using gdb has. reply YorickPeterse 14 hours agorootparentprevThere are DAP extensions for both Vim (e.g. https://github.com/puremourning/vimspector) and NeoVim (https://github.com/mfussenegger/nvim-dap). I can't speak as to the experience in detail (I think I briefly played with nvim-dap a year or two ago), but I suspect that for most it will be good enough. reply zilti 13 hours agorootparentprevAnd same for Emacs, great LSP and DAP integration. reply levodelellis 13 hours agorootparentI heard someone say gdb works great with emacs but I never had a good experience with C++ in neovim. I asked friends and they all say they use a second editor to debug which is part of why I bothered to do this reply zilti 3 hours agorootparentOh, yes, I used to use gdb just a small handful of times a few years ago, but Emacs' gdb mode is very powerful. But I assume there is a gdb DAP as well by now? reply Solvency 17 hours agoprev [5 more] [flagged] dang 15 hours agoparentWe've banned this account for posting tons of unsubstantive and/or flamebait comments and ignoring our requests to stop. Not cool. https://news.ycombinator.com/item?id=40056291 (4 days ago) https://news.ycombinator.com/item?id=39021400 (Jan 2024) https://news.ycombinator.com/item?id=37512571 (Sept 2023) https://news.ycombinator.com/newsguidelines.html reply TillE 17 hours agoparentprevI'm sure you can come up with a scenario where input does slow down (eg, in huge complex files), but speaking as someone with experience speedrunning action games which require frame-perfect (60Hz) tricks, I can't detect any noticeable lag between hitting a key and a glyph appearing on the screen in VS Code. If something's slowing it down, it's probably an autcomplete feature which can be configured to trigger less frequently. reply pjmlp 16 hours agoparentprevThe only thing that keeps me using it are tools that decided only to support VSCode. reply leptons 16 hours agoparentprev [–] I'm not a \"kid\", I've been coding for 40+ years, and I don't find VS Code to be slow. YMMV. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The author, after facing bugs and performance issues in vscode while debugging, created their text editor focusing on better GDB support, fast rendering, and DAP support.",
      "The new editor offers partial file name search, type jumping, and variable renaming through LSP implementation, but it is still in the early development phase with some features absent.",
      "Feedback on the new editor is encouraged as it continues to evolve and improve."
    ],
    "commentSummary": [
      "Users are discussing frustrations with code editors such as VSCode, emphasizing the importance of flawless functionality and performance.",
      "Various editors like Vim, Neovim, and Bold Edit are compared in terms of capabilities, limitations, accessibility features, and debugging tools.",
      "Topics include the creation of new software, security and reliability concerns, and the utilization of third-party tools in development, reflecting a comprehensive conversation on coding practices and tools."
    ],
    "points": 198,
    "commentCount": 164,
    "retryCount": 0,
    "time": 1713710868
  },
  {
    "id": 40104823,
    "title": "Navigating Modern Assembler: Top Resources for LLVM, JIT, and x86 Basics",
    "originLink": "https://news.ycombinator.com/item?id=40104823",
    "originBody": "I’d like to learn more about Assembler in order to be able to work with LLVM and JIT as well as to write high performance low-level code. I’m familiar with the basics of x86 but I haven’t touched Assembler in a while, so I’m wondering which resources and in particular books you’d recommend?",
    "commentLink": "https://news.ycombinator.com/item?id=40104823",
    "commentBody": "Which books/resources to understand modern Assembler?195 points by throwaway63467 13 hours agohidepastfavorite57 comments I’d like to learn more about Assembler in order to be able to work with LLVM and JIT as well as to write high performance low-level code. I’m familiar with the basics of x86 but I haven’t touched Assembler in a while, so I’m wondering which resources and in particular books you’d recommend? jstrieb 10 hours agoNot specific to LLVM or JIT, but if you want a visceral intuition for the basics of ARM assembly, I made a free, online game at work (for mobile and desktop) that may help you: https://ofrak.com/tetris/ I didn't do much ARM before working on the game, but since playing a lot, I'm very quick at reading disassembly, even for instructions not present in the game. It might help you to do the same – the timed game aspect forces you to learn to read the instructions quickly. The game is like Tetris, but the blocks are ARM assembly instructions. As instructions fall, you can change the operand registers. Locking instructions into the .text section executes them in a CPU emulator running client-side in the browser, so you can immediately see the effects of every action. Your score is stored in memory at the address pointed to by one of the registers, so even though you earn points for each instruction executed without segfaulting, the true goal is to execute instructions that directly change the memory containing the score value. When I released it a bit less than a year ago, I posted it to Hacker News as a https://news.ycombinator.com/item?id=37083309 reply resonious 3 hours agoparent> at work What kind of job? reply dabber 8 hours agoparentprevThis is awesome! Thanks for sharing it again, I guess I missed the original Share HN. reply WalterBright 9 hours agoprevAll you really need is an instruction set reference, such as: https://www.felixcloutier.com/x86/index.html and have a compiler that supports an inline assembler, like the D compiler, with Intel assembler syntax and use it like: private uint asmBitswap32(uint x) @trusted pure { asm pure nothrow @nogc { naked; } version (D_InlineAsm_X86_64) { version (Win64) asm pure nothrow @nogc { mov EAX, ECX; } else asm pure nothrow @nogc { mov EAX, EDI; } } asm pure nothrow @nogc { // Author: Tiago Gasiba. mov EDX, EAX; shr EAX, 1; and EDX, 0x5555_5555; and EAX, 0x5555_5555; shl EDX, 1; or EAX, EDX; mov EDX, EAX; shr EAX, 2; and EDX, 0x3333_3333; and EAX, 0x3333_3333; shl EDX, 2; or EAX, EDX; mov EDX, EAX; shr EAX, 4; and EDX, 0x0f0f_0f0f; and EAX, 0x0f0f_0f0f; shl EDX, 4; or EAX, EDX; bswap EAX; ret; } } The compiler will handle all the program setup and teardown, and you can just concentrate on the assembler part. You can also compile programs with the -vasm switch and the compiler will emit the asm corresponding to the code: int square(int x) { return x * x; } compiling: dmd -c test.d -vasm prints: _D4test6squareFiZi: 0000: 0F AF C0 imul EAX,EAX 0003: C3 ret By trying simple expressions like `x * x` and looking at what the compiler generates, and looking at the instructions in the referenced link, you'll get the hang of it pretty quick. reply JonChesterfield 2 hours agoparentReading that makes the GCC inline asm format look really ugly. Some envy. Too used to inline asm looking like __asm__ volatile(\"syscall\" : \"=a\"(ret) : \"a\"(n), \"D\"(a0), \"S\"(a1), \"d\"(a2), \"r\"(r10), \"r\"(r8), \"r\"(r9) : \"rcx\", \"r11\", \"memory\"); reply bitwize 1 hour agorootparentGCC inline assembly looks incredibly cursed. Back in the day, the Borland tool suite (Turbo/Borland C++, Turbo Pascal) had inline assembly that looked more like the D compiler example above. GCC does, however, know what to do with a .s file, so you can write your assembly routines outside your C(++) source and just compile them in like a C module, which is what I did last time I was hardcore slinging x86 opcodes. reply sargstuff 12 hours agoprev'Computer Architeture: A Quantitative Apporach\" and/or more specific design types (mips, arm, etc) can be found under the Morgan Kaufmann Series in Computer Architeture and Design. \"Getting Started with LLVM Core Libraries: Get to Grips With Llvm Essentials and Use the Core Libraries to Build Advanced Tools \" \"The Architecture of Open Source Applications (Volume 1) : LLVM\" https://aosabook.org/en/v1/llvm.html \"Tourist Guide to LLVM source code\" : https://blog.regehr.org/archives/1453 llvm home page : https://llvm.org/ llvm tutorial : https://llvm.org/docs/tutorial/ llvm reference : https://llvm.org/docs/LangRef.html learn by examples : C source code to 'llvm' bitcode : https://stackoverflow.com/questions/9148890/how-to-make-clan... reply RheingoldRiver 5 hours agoparentYou have a typo that will make an amazon search fail on copy paste, corrected version is \"Computer Architecture: A Quantitative Approach\" kinda amazing to me that amazon cannot fix this but it returns 0 results (at least for me) reply chc4 10 hours agoprevIMO You should just stick some programs in Ghidra/Godbolt and see what they emit, especially for small individual snippets whenever you think \"I want to do X, what's the best way of doing it\". There really isn't much difference between \"baby's first assembly\" program, where you just have movs and like five other common instructions, and the kind of assembly an optimizing compiler emits: it's a matter of recognizing that some operations can be merged into a more specialized one or the addressing mode of another, or you can use a setcc with a results flag from something you already computed, or what have you. The good code that LLVM and JITs emit for the most part aren't due to much better instruction selection but due to much better optimization passes, which learning more about assembly doesn't help with: it's about transforming code in general at a high level, which you would do at the compiler IR step before touching assembly at all. reply rerdavies 3 hours agoparent> much better optimization passes, which learning more about assembly doesn't help with I think you have to include an understanding of the underlying processor architecture as part of \"learning more about assembly\". If you're writing assembler without instruction scheduling in mind, you would be better off not writing assembler at all, and letting the LLVM optimizers do instruction scheduling for you. reply hnthrowaway0328 1 hour agorootparentHow can one learn instruction scheduling for Intel. Are the algo of branch prediction and out of order execution revealed in the manual? Thanks. reply anonymoushn 54 minutes agorootparentSome of the information you want is published by Intel. Some of is better found on https://uops.info/ or in Peter Cordes's answers on StackOverflow or in the comments section of Agner Fog's web site. Some of it you must determine experimentally. Empirically modern compilers do not fully exploit much of this knowledge, though e.g. LLVM-MCA proves that they contain a good bit of it. reply astrange 6 hours agoparentprev> or you can use a setcc with a results flag from something you already computed Funny enough, on large CPUs this can be slower than recomputing something, because they don't like long dependency chains and sometimes even have penalties for reading a register that hasn't been written for hundreds of instructions. reply pizlonator 11 hours agoprevHow I learned: Step #1: read the arch manual for some CPU. Read most if not all of it. It’s a lot of reading but it’s worth it. My first was PowerPC and my second was x86. By the time I got to arm, I only needed to use the manual as a reference. These days I would start with x86 because the manuals are well written and easily available. And the HW is easily available. Step #2: compile small programs for that arch using GCC, clang, whatever and then dump disassembly and try to understand the correspondence between your code and the instructions. reply treyd 10 hours agoparentThe Godbolt compiler explorer can be very helpful for step 2 there. It's neat to see how different compilers codegen the same source. reply rerdavies 3 hours agoparentprev> I would start with x86 because the manuals are well written and easily available .. and because the ARM system manuals are just unimaginably awful. ;-P reply pm215 2 hours agorootparentMaybe I'm biased because I've spent a lot more time with them, but I rather prefer the Arm manuals, because I found they more reliably have the exact detail and solid pseudocode for how everything behaves. Plus for ages Intel split it up annoyingly into multiple different PDF documents (though it looks like you can get a combined manual now). reply t-3 12 hours agoprevI like this book, it's just as good as The Art of Assembly Language, but much cheaper: https://rayseyfarth.com/asm/index.html If you are interested in ARM or RISC-V assembly, the concepts are pretty similar but the instructions are different. For any architecture, you're going to have to read the architecture manuals to get a good working knowledge of the instructions and how to use them. An easy way to get started is to write a program in C, then replace the functions with assembly code one by one until your C code is just main() and a header. ARMv7: https://developer.arm.com/documentation/100076/0200/a32-t32-... ARMv8: https://developer.arm.com/documentation/ddi0602/2024-03/Base... alternative: https://www.scs.stanford.edu/~zyedidia/arm64/ RISC-V: https://riscv.org/technical/specifications/ x86: https://www.intel.com/content/www/us/en/developer/articles/t... web format: http://x86.dapsen.com/ If you like to learn by example (most of these are not great, but good enough to get started): https://rosettacode.org/wiki/Assembly https://github.com/TheAlgorithms/AArch64_Assembly reply mtreis86 11 hours agoprevPlay through the game Turing Complete, by the end you'll have built your own ISA and solved some puzzles with it. Keep playing for to get on the high scores list and you'll turn those assembly routines into ASICs. reply asalahli 2 hours agoprevI started with this excellent NASM tutorial[0] then went straight to Intel manuals.[1] 0. https://cs.lmu.edu/~ray/notes/nasmtutorial/ 1. https://www.intel.com/content/www/us/en/developer/articles/t... reply maldev 1 hour agoprevI would highly recommend AMD's developer manual. It's a lot more written for actual reading rather than a pure tech manual with super thick language like Intel's is. I would also recommend NASM's guide for syntax and such. https://www.nasm.us/xdoc/2.13.03rc1/html/nasmdoc0.html reply ksherlock 8 hours agoprevSomeday -- not today, not tomorrow, but someday -- you'll probably want to read Agner Fog's optimization manuals. https://www.agner.org/optimize/#manuals reply zoenolan 13 hours agoprevhttps://www.nand2tetris.org/ As a good refresher on assembly and compilers reply emmanueloga_ 9 hours agoparentI really like this book, is more than a refresher imo, it really goes from NAND gates all the way up to building a CPU using a Verilog-like language, its assembler language, then a higher-level language, etc. The only thing that is not as nice is the tooling, it's GUI based and uses Java. One of the projects on my backburner is to attempt to write a better toolset for it. Or maybe I should just wait for someone else to do it haha (to be clear, there's nothing wrong with the existing tooling, I'd just rather something not based on Java that I could run on a normal IDE, say, VS Code). reply deosjr 4 hours agorootparentThat's exactly why I built my own tooling when going through the book. I built everything in Golang and am working on some visualisations in Javascript. Repo: https://github.com/deosjr/nand2tetris Website: https://deosjr.github.io/ (lispmachine part is wip) reply CoastalCoder 11 hours agoprevI don't have a good book to suggest, but one tip you may find helpful: A typical function has two kinds of assembly code: (1) The ABI-required logic for functions and function calls, and (2) Everything else, which can be more or less whatever you want. As long as you don't stomp on the details required by the ABI. reply anonymoushn 4 hours agoprevThe highload.fun wiki[0] links some resources. The intel optimization manual[1] is also useful. These resources are mostly aimed at solving problems for which compilers are not very useful, so there are probably other resources that are a better fit. [0]: https://github.com/Highload-fun/platform/wiki [1]: https://www.intel.com/content/www/us/en/content-details/6714... reply mtklein 11 hours agoprevI'd suggest working incrementally from areas of your existing strength. Tweak whatever code base you are most familiar with, starting with a tiny change, and see how the assembly changes. I use objdump -d and git diff --no-index for this all the time. reply bombcar 8 hours agoprevThe first thing you’ll learn is that a macro assembler is surprisingly high level; much of what you think of as C-style high level can be done by macros. reply rerdavies 4 hours agoprevGo to the source: the Intel Software Developer Manuals. https://www.intel.com/content/www/us/en/developer/articles/t... You will want the first two volumes. For LLVM and JIT work you don't need the last two volumes. Not kind, or gentle, but certainly definitive and authoritative. reply oldmanludd 12 hours agoprevOpenSecurityTraining2 has some Assembly courses https://p.ost2.fyi/courses reply anta40 7 hours agoparentAh, so it's the updated version of this: https://opensecuritytraining.info/IntroX86.html Let's see... reply joncmu 8 hours agoprevIf you want to learn one of the oldest assembly languages you can still find a modern computer to run it on check out IBM Z assembly. There is a great list of resources here: https://idcp.marist.edu/assembler-resources The one resource they don't list is the ISA manual which is called the Principles of Operation which the latest version can be found here: https://publibfp.dhe.ibm.com/epubs/pdf/a227832d.pdf It is actually pretty amazing at how easy it is to learn other architectures once you understand how one or two work. reply seankurtz 4 hours agoparentThe benefit to learning s390x assembler over others is that there are actually still experts around that program entirely in the macro assembler, and environments that still expect or require it (technically, its a solved problem to link against the assembler code from Metal C, but all the docs and APIs are specified entirely in assembler for much of the low level OS internals, and you really do need to know it to work with it in any significant professional capacity). Its tough to learn on x86 or ARM, because there has been a lot of standardization towards C, and that is sorta the expected low level API/ABI even at the kernel level in 2024. Calling conventions have been standardized, and really very little actual programming is done manually in assembly these days. So its sort of artificial trying to learn assembly on those ISAs these days. Certainly there are not many APIs specified in assembly. Perhaps one exception would be compiler/linker backends, but that is a whole other can of worms you've gotta learn if you go that route. IBM Z is different in that respect. It makes it probably a more difficult and unwieldy platform overall if you just wanna make a quick app and ship (why I'm not advocating you all go out and buy mainframes lol), but for learning how to program assembler \"in the real world\", its the last bastion of a much older school of programming and a great learning environment that will challenge some of the assumptions you maybe have picked up that actually come from Unix or C and not the ISAs themselves. Its also, in my humble opinion, a pretty nice macro assembler to actually work with. Its had a lot of development over the years (perhaps as a result of it remaining a significant force in the systems programming world for mainframes long after similar programming interfaces were quietly retired on newer platforms), and so I quite like the actual assembler itself, now known as IBM HLASM. I tend to recommend newcomers pick up a free pdf book from here by the esteemed John Ehrman (RIP) https://idcp.marist.edu/assembler-resources along with the POPs specified above. And make an account on zXplore or similar and play around after doing the (very short) introductory portion. reply fuzztester 7 hours agoparentprev>If you want to learn one of the oldest assembly languages you can still find a modern computer to run it on check out IBM Z assembly. 6502 assembly on the Commodore 64 was good fun. Pretty simple ISA. reply billsix 8 hours agoprevI've liked Jonathan Bartlett's books, his newest is \"Learn to Program with Assembly\" reply rramadass 5 hours agoparentSeconded; his books are a very good introduction to assembly programming. reply alexdowad 12 hours agoprevAside from what has already been suggested, you could consider reading selected chapters of Intel's programmer manual. I personally read through the whole thing once (well, skimmed some parts). From my experience, Intel's x86 manual is better and easier to read than AMD's. It's a free download. reply JonChesterfield 10 hours agoprevThere are two aspects to assembler. One is the target machine - learning what instructions, memory, performance characteristics you're dealing with. The other is the assembler - what syntax it gives you, how it handles macros, whether it optimises, whether it does any semantic analysis. GNU AS is different to NASM is different to flat assembler. I didn't get much out of reading compiler disassembly relative to handwritten assembly. I'd recommend trying to find some of the latter, might need to be maths libs or video codecs or similar. I'd be interested in recommendations here, the asm I learned from was proprietary. reply vmchale 10 hours agoprevI wrote a blog post on writing a JIT that can handle FFI calls: http://blog.vmchale.com/article/jit If you want the full monty, I think you'll have to read the LLVM documentation on JIT linking: https://llvm.org/docs/JITLink.html I haven't found any academic papers or tutorials on JIT linking, unfortunately. reply KingOfCoders 4 hours agoprevOT: Not a modern one, but \"Z80 Assembly Language Subroutines\" has been my favorite computer book for 40+ years. reply vbezhenar 9 hours agoprevIf you're interested in ARM 32 bit, I can recommend book \"Raspberry Pi Assembly Language Programming: ARM Processor Coding\" It very thoroughly describes Cortex M0 assembly language and it also touches the concept of multiprocessor programming. And you just need two Raspi Picos (one to serve as programmer) which are very available. reply rramadass 5 hours agoprevNot specific to LLVM/JIT but for assembly checkout the books by Larry Pyeatt(ARM) and Daniel Kusswurm(x86). reply Koshkin 11 hours agoprevA great way to learn assembler is to closely examine code generated by a compiler, e.g. on godbolt.org. reply sparkie 9 hours agoparentManually with: gcc -c -O0 -no-pie main.c Probably also be worth throwing in -nostdlib while learning to keep it bare-bones, otherwise will need to link the c runtime. Assemble the emitted .S file: as -o main.o main.S Link with c runtime ld -o main -lc main.o crt1.o crti.o crtn.o --entry main If using -nostdlib, add your own start.S with a simple entry which calls main with no command line arguments. BITS 64 %define SYS_exit 60 global _start _start: xor edi, edi xor esi, esi call main xor eax, eax mov al, SYS_exit xor edi, edi syscall Assemble with: nasm -felf64 -o start.o start.S And link both: ld -o main main.o start.o --strip-debug Check the result: objdump -x -S main To keep even more minimal, add your own link.ld file instead of using the default: OUTPUT_FORMAT(\"elf64-x86-64\") OUTPUT(main) ENTRY(_start) INPUT(main.o) INPUT(start.o) SECTIONS { PROVIDE (__executable_start = SEGMENT_START(\"text-segment\", 0x400000)); . = SEGMENT_START(\"text-segment\", 0x400000) + SIZEOF_HEADERS; .text : { *(.text) } .eh_frame : { *(.eh_frame) ; } .data : { *(.data) ; } .bss : { *(.bss) ; } } Link with: ld -T link.ld reply rramadass 6 hours agorootparentNice! PSA: Read Hongjiu Lu's classic paper ELF: From The Programmer's Perspective as a preliminary to get an idea of how the above steps fit together. reply fuzztester 9 hours agoparentprevIMO that is not a good starting point for beginners to assembly. They can go for it later, after learning assembly basics. reply kylecazar 9 hours agoprevFond memories of ordering the then-free print volumes of the IA-32 reference manuals from Intel... and actually receiving them. reply rerdavies 3 hours agoparentFond memories of dropping in to the local Intel sales office to pick up the then-free Intel Reference manuals whenever a new processor came out! No appointment necessary. reply pyinstallwoes 4 hours agoprevBuild a Forth reply fuzztester 10 hours agoprevFor those who want to do x86 assembly first, google Paul Carter assembly language. It could be one option. reply 201984 7 hours agoprevuops.info is a very useful website when you're starting to optimize your code. It shows you the throughput and latency of most x86 instructions as tested on a large range of microarchitectures. reply Vosporos 3 hours agoprevThe mario kart Wii retro-players have you covered with ARMv8: https://mariokartwii.com/armv8/ reply badrabbit 8 hours agoprevAzeria labs has a nice arm assembly tutorial, the lady behind it also has nice books on it that I highly recommend. reply andrewstuart 9 hours agoprev> modern assembler For long out of date assembler this YouTube channel: https://www.youtube.com/@ChibiAkumas For modern assembler this YouTube channel: https://www.youtube.com/@WhatsACreel reply jmspring 5 hours agoprev [–] Under no circumstances should knowledge of Assembler be needed to work with LLMs. Many people that work in DS/ML can barely make it with Python. reply neandrake 4 hours agoparent [–] I think you misread the original post. They’re referring to LLVM the compiler toolchain, not LLMs. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The individual aims to learn Assembler for working with LLVM and JIT, writing high-performance low-level code, and enhancing their understanding of x86 basics.",
      "They are looking for recommendations on resources and books to refresh their knowledge of Assembler."
    ],
    "commentSummary": [
      "Learning modern Assembler for LLVM and JIT involves resources like online games for ARM assembly, x86 instruction set references, and compilers with inline assembler support.",
      "Emphasis is on hands-on practice, understanding code generation, optimization, and Intel processor architectures.",
      "Resources cover ARM, RISC-V, x86 architectures, tools, projects, books, manuals, IBM Z assembler, and ELF files for in-depth learning."
    ],
    "points": 195,
    "commentCount": 57,
    "retryCount": 0,
    "time": 1713699020
  },
  {
    "id": 40104475,
    "title": "Penguin chicks' dramatic cliff jump captured by drone",
    "originLink": "https://petapixel.com/2024/04/17/baby-penguins-jump-off-50-foot-cliff-in-first-of-its-kind-drone-footage/",
    "originBody": "Baby Penguins Jump Off 50-Foot Cliff in First-of-Its-Kind Drone Footage APR 17, 2024 PESALA BANDARA Emperor penguin chicks jumping off the ice shelf edge for their first swim at Atka Bay on the Ekström Ice Shelf in Antarctica. Drone footage has captured the astonishing moment hundreds of emperor penguin chicks jump off a 50-foot cliff in Antarctica for the first time. Wildlife photographer and filmmaker Bertie Gregory captured the “unprecedented” footage for National Geographic’s upcoming documentary Secrets of the Penguins, which will debut in April 2025. The National Geographic filmmakers were shooting in Atka Bay on the Ekstrom Ice Shelf, Antarctica in January this year, when they spotted approximately 700 emperor penguin chicks gathering at the edge of a cliff. Antarctica is home to 66 known Emperor penguin colonies, which usually breed and raise their chicks in the winter. Some of these emperor colonies have been raising chicks high up on permanent ice shelves. Every January, when the chicks are around five months old, they undergo a process known as fledging. During this process, the chicks lose their baby feathers and leave their colony for the first time — jumping from an enormous cliff into the ocean to take their first swim. A Heart-Stopping Jump Filmed For The First Time While these huge jumps have been witnessed by scientists before, Gregory filmed this rare and heart-stopping behavior for the first time for television. In the extraordinary footage filmed for Secrets of the Penguins, a colony of chicks is seen making their way along the edge of the huge ice cliff, moving together toward the edge before stopping. Eventually, one brave chick takes the first leap from the summit and smashes into the icy ocean waters below. Once this penguin swims off to fill its stomach with fish, prompting the others to follow suit. From there, hundreds of chicks are seen jumping off the cliff into the ocean. According to scientists, this is the first-ever video footage of emperor penguin chicks leaping from such a high cliff. Scientists who monitor penguins from satellites in space say this phenomenon is extremely rare. In a press release, the National Geographic revealed Gregory used a newly released camera drone, equipped with a telephoto lens, which allowed him to capture the animals’ behavior from the air like never before — without disrupting or impacting the penguins. “Filming the fledging of emperor penguins presented a unique set of challenges as the passage only takes place when the sea ice reaches its most unstable time of the year,” National Geographic says in a statement. “Bertie and his team took every measure to ensure the safety of the crew and wildlife by assembling a world-class safety team.” Image credits: All photos by National Geographic/Bertie Gregory . Culture, News babypenguin, dronefootage, emperorpenguins, nationalgeographic RELATED ARTICLES Satellite Images Discover a New Emperor Penguin Colony in Antarctica The Cuteness of Antarctic Penguins Emperor Penguins Find Camera, Pose for Selfies Rare Photos From Early Antarctic Expeditions Digitized for First Time DISCUSSION Load Comments",
    "commentLink": "https://news.ycombinator.com/item?id=40104475",
    "commentBody": "Drone footage of fledging penguins jumping off cliff (petapixel.com)192 points by tomcam 23 hours agohidepastfavorite83 comments mannykannot 20 hours agoThese juveniles are lucky to not be in a place where the ice melts before they have their water-resistant feathers. This possibility is becoming an existential threat to some penguin colonies. https://www.latimes.com/environment/story/2023-08-24/record-... reply smusamashah 20 hours agoprevGiven this video is taken by a drone, and drones are very noisy, are the splashing sounds and sounds of penguins chirping added later? reply Terretta 19 hours agoparentTwo dimensions to this question: first, drone noise; second, audio track. On the noise: > \"Given this video is taken by a drone, and drones are very noisy...\" Here's from National Geographic's press release on this video: “Through the harnessing of new technology and pushing the boundaries of polar filming, Bertie utilized a newly released camera drone equipped with a telephoto lens allowing him to capture animal behavior from the air like never before without disrupting or impacting the penguins.” https://www.businesswire.com/news/home/20240411040454/en/Nat... So they were aware of the noise and other disturbance to the penguins, and were far enough away its unlikely these sounds are recorded from the drone itself. On the audio track: Mics and recorders could have been placed in advance. Given the level of preparation described, this is a possibility. Audio of a given action or situation could have been captured separately elsewhere and dubbed. This seems most likely, and if natural sounds were captured on location from the same flocks, wouldn't generally carry a disclaimer. In either of these cases, the drone doesn't need a mic, or can carry one just for sound sync purposes, but the sound is done in foley with or without a field recording. To use drone audio without it audible to the viewer, shotgun mics with a sound pattern that picks up far point noise (imagine a teleaudio mic to go with the telephoto lens) could be used. Drone noise is distinct, and can be removed, firms and software specialize in this: https://www.sound2design.com/online-sound-restoration-and-dr... One way is to point the shotguns at silence, record drone noise alone, then invert it, something like \"speech transparency\" mode in noise cancelling headphones. Today's audio processing is relatively magical when it doesn't have to fit in an earbud. I haven't researched this case, but it sounded like foley. reply davidguetta 17 hours agorootparentThats a lot of word to say you dont know beyond the sentence you quote Its likely fake like most NatGeo vids (not that it takes away any of the visual awesomeness) reply Terretta 17 hours agorootparent> Thats a lot of word to say you dont know beyond the sentence you quote. Its likely fake... And a lot of words to agree that “it's unlikely these sounds are recorded from the drone”? The additional words are to share the most common industry ways it can be done if it's not foley. OTOH, if you're \"the\" david guetta, my words certainly wasted your time. :-) reply ml-anon 13 hours agoparentprevThe audio track in nature documentaries is unfortunately almost entirely foley. reply Waterluvian 19 hours agoparentprevSounds in almost all nature documentary videos are added later from separate sources. reply odyssey7 9 hours agorootparentThat makes sense. I'd never thought about it. You've saved me the disappointment of visiting Antarctica to realize that David Attenborough's voice doesn't just chime in whenever you look at something. reply cozzyd 6 hours agorootparentBeen to Antarctica twice. Attenborough's voice definitely chimes in. reply stavros 9 hours agorootparentprevSurprisingly, the voice is the only part of the audio that's real. reply gnomesteel 20 hours agoparentprevYes reply gary_0 22 hours agoprevThis should probably just link directly to the video: https://www.youtube.com/watch?v=4PwDFddpo4c (if you're impatient, skip to 1:50). reply dang 15 hours agoparentIt's borderline I suppose, but the article text does contain enough background information to maybe keep it reply Rinzler89 22 hours agoparentprevThere's times and place when I don't have time, patience or can't due to circumstance watch a video so just seeing a couple of pictures is enough. reply NullPrefix 19 hours agoparentprevHere's a timestamped link if you are too impatient to skip it yourself https://www.youtube.com/watch?v=4PwDFddpo4c&t=110 reply fsckboy 14 hours agorootparenti think you can skip to even deeper https://youtu.be/4PwDFddpo4c?t=137 reply seydor 12 hours agoprevCould be a parody video clip for \"I believe I can fly\" reply anotherevan 10 hours agoparent♬ I believe I can fly. ♬ Oh, shit! No I can't. reply up2isomorphism 4 hours agoprevIt is interesting to ask how such events are organized. It did not look like they are led by an adult. What triggered such gatherings? reply NovemberWhiskey 21 hours agoprevFor those who might be worried to click: the penguin chicks are fledging and going off to swim for the first time; they are not jumping to their doom. reply dang 15 hours agoparentThanks, we've put that word in the title above, in place of the 'baby' bit which is baity anyhow. reply CoastalCoder 19 hours agoparentprevThanks, that exactly was why I didn't want to click. reply asystole 18 hours agoparentprevWow. Phrasing! reply BurningFrog 19 hours agoprevJumping in is the easy part. How do they get back up on land? reply RichardCA 15 hours agoparentThey are capable of fast swimming, enough to gain momentum so they can pop back up onto land or an ice floe. https://youtu.be/_OHDYS8qTzQ?t=935s reply christophilus 14 hours agorootparentYeah, but that cliff was around 40ft, according to the narrator. They aren’t swimming fast enough to hop back up that. reply dredmorbius 11 hours agorootparentClearly, they beach elsewhere. Penguins migrate 100s to 1,000s of km, and can swim great distances. They need not beach near their entry point, and are in the water to feed. That said, where these penguin fledglings beach would be interesting to see.reply maxlin 9 hours agoprevSomething tells me it's just bird genes trying to fly from high. Swimming is a different type of traversal so might even kind of work as a reward mechanic reply jncfhnb 19 hours agoprevVery odd footage imo. * most of the birds are falling in because they’re pushed, not because they’re jumping * most of the birds are belly flopping hard rather than diving in with any sort of graceful entry * most birds don’t appear to ever jump. I refuse to believe the camera wouldn’t have shown the whole population in the water if they had reply bewaretheirs 10 hours agoparentYears ago I heard a possibly apocryphal story -- that's at least halfway consistent with what's seen in this video -- about how a mass of penguins decide if they're in a safe place to go for a swim: They gather near the edge of the ice and jostle each other until one bird falls in. Then they watch to see if it gets eaten by a predator. If not, the rest of them dive in and go for a swim... reply Larrikin 10 hours agoparentprevI don't think there is any reason to think a belly flop would have the same effect on a penguin as it would on a human. reply marcosdumay 18 hours agoparentprev> most of the birds are falling in because they’re pushed, not because they’re jumping It's the same as every other bird? It surprised me that it isn't their parents pushing them. reply Tempest1981 10 hours agorootparentThe pushing starts when the ones a few rows back want a closer look... might not be deliberate or premeditated. reply jncfhnb 16 hours agorootparentprevLike out of the nest? That doesn’t really track with the mass movement towards the cliff edge as a precursor. reply MichaelZuo 19 hours agoparentprevMaybe it's some sort of weird social test like baby cowbirds. reply jajko 21 hours agoprevIts interesting how unskilled nature can be and still get away with it (here I guess to the thick fur/skin/fat below). If humans would jump from such height so badly, many injuries and possibly few deaths would be happening. I've done my fair of jumps in Swiss swimming pools / beaches where 10m jumping board is standard equipment, and even slightly incorrect landing can be quite brutal on the body. Falling ie on the back badly orientated could easily move vertebrae with corresponding consequences. reply the__alchemist 21 hours agoparentIt's mainly due to the square/cube law. Small things, including animals, can fall from great heights with little damage. reply Someone 11 hours agorootparentOr, as Haldane wrote in “On being the right size” (https://en.wikipedia.org/wiki/On_Being_the_Right_Size: “You can drop a mouse down a thousand-yard mine shaft; and, on arriving at the bottom, it gets a slight shock and walks away, provided that the ground is fairly soft. A rat is killed, a man is broken, a horse splashes. For the resistance presented to movement by the air is proportional to the surface of the moving object. Divide an animal’s length, breadth, and height each by ten; its weight is reduced to a thousandth, but its surface only to a hundredth. So the resistance to falling in the case of the small animal is relatively ten times greater than the driving force” reply Retric 11 hours agorootparentThat’s half the equation and explains why speeds are lower. There’s another square cube relationship around the volume of an object vs the impact area. reply culebron21 5 hours agorootparentAnd tensile strength of muscles and bones, which is proportional to cross-section area, hence also is tenfold stronger relative to mass. reply marcosdumay 18 hours agorootparentprevAdd feathers to that, and those heights become really great. reply sorokod 14 hours agoparentprevEvolution is big on expending the minimum amount of resources to achieve the can-get-away-with-it level. reply yosito 20 hours agoparentprevI'd imagine that jumping so far into such cold water, even if your form is perfect, would also be quite shocking to your system and probably dangerous in and of itself. I say this as someone who went swimming with penguins in Antarctica this January. No way I would enter that cold water so deeply and quickly. reply wakeupcall 21 hours agoparentprevIndeed. Not to mention, aside from a few \"jumps\", most of the falls in the video seem unwanted/slips due to pushing. Uncoordinated, and hitting the water pretty much randomly. reply notatoad 11 hours agoprevskip to 3:00 if you just want to see them jump... reply redder23 4 hours agoprevPretty cool, but what is \"the secret\". First, the heading wording feels like intentional clickbait to make at least a portion of people think they might be jumping to their death, they don't! They build something up like there is something coming, some actual reason WHY they do it from that high. But they totally failed on delivering any reveal, at least in the video, did not read the entire article. They made up to be some giant mystery, and I was expecting there is some kind of great reveal thing that has some kind of benefit, something evolutionary or whatever something, - nothing - absolutely nothing. Basically because they did not want to walk down a long way I guess, if there even was a way to an easier jump. reply neglesaks 18 hours agoprevOverheard in the flock: \"nee nah, I bet you dare not to jump!\" reply UberFly 12 hours agoprevInteresting how they know not to jump off onto an ice sheet below. reply brutus1213 21 hours agoprevIt kind of bothers me that animals probably do this stuff because they are so freakin hungry. Nature is beautiful but harsh. reply tchbnl 21 hours agoparentFear not, no penguins were harmed in the making of this film. reply jncfhnb 19 hours agoparentprevSeems very difficult to explain this as food motivated reply NullPrefix 19 hours agorootparentThere's edible fish in the water. What other food is there on the ice? reply jncfhnb 16 hours agorootparentPenguins enter the water all the time to hunt fish. Not off cliffs. reply VoodooJuJu 19 hours agoprevFor something so interesting, the title is extremely inappropriate clickbait. reply Anotheroneagain 20 hours agoprevI wonder if this is how birds learned to fly. reply Jerrrry 19 hours agoparentThis is a (now 'deprecated') evolutionary artifact from that process, yes. reply trebligdivad 20 hours agoprev'We can do this, we're birds, just flap...' reply CyberDildonics 15 hours agoprevSounds like they dropped rocks into a swimming pool for their sound effects. reply delichon 20 hours agoprevnext [9 more] [flagged] jhdias 20 hours agoparentPerplexity.ai: calculate the terminal velocity of an average sized penguin falling head first - Sources omnicalculator.com favicon wikihow.com favicon View 2 more Answer The terminal velocity of an average-sized penguin falling head-first can be calculated as follows: Assuming an average penguin weight of 5 kg and a cross-sectional area of 0.1 m^2, with a drag coefficient of 0.8 for a streamlined, head-first orientation: Terminal velocity, v_t = √((2 × m × g) / (ρ × A × C_d)) Where: m = mass of penguin = 5 kg g = acceleration due to gravity = 9.8 m/s^2 ρ = density of air = 1.225 kg/m^3 A = cross-sectional area = 0.1 m^2 C_d = drag coefficient = 0.8 Plugging in the values: v_t = √((2 × 5 kg × 9.8 m/s^2) / (1.225 kg/m^3 × 0.1 m^2 × 0.8)) v_t = √(98 / 0.98) v_t = √100 v_t = 10 m/s Therefore, the terminal velocity of an average-sized penguin falling head-first is approximately 10 m/s or 36 km/h.1345 Wolframalpha: https://www.wolframalpha.com/input?i2d=true&i=Subscript%5Bv%... reply episteme 18 hours agorootparentClaude assumes a much more streamlined penguin: To calculate the terminal velocity of an average-sized penguin falling head first, we need to consider the balance between the force of gravity and the air resistance acting on the penguin. The terminal velocity is reached when these two forces are equal. Given: - The average mass of an adult penguin is around 5 kg. - The average height of an adult penguin is about 70 cm. - The penguin is falling head first, so we will assume a streamlined shape with a low drag coefficient (Cd) of around 0.05. - The density of air at sea level is approximately 1.225 kg/m³. - The acceleration due to gravity (g) is 9.81 m/s². Step 1: Determine the cross-sectional area (A) of the penguin. Assuming the penguin has a circular cross-section when falling head first, we can estimate the area using the average height. Diameter (d) ≈ 70 cm ÷ 5 = 0.14 m A = π × (d/2)² ≈ 0.0154 m² Step 2: Use the terminal velocity formula. v_terminal = √((2 × m × g) ÷ (ρ × Cd × A)) Where: - v_terminal = terminal velocity (m/s) - m = mass of the penguin (kg) - g = acceleration due to gravity (m/s²) - ρ = density of air (kg/m³) - Cd = drag coefficient - A = cross-sectional area (m²) Plugging in the values: v_terminal = √((2 × 5 kg × 9.81 m/s²) ÷ (1.225 kg/m³ × 0.05 × 0.0154 m²)) v_terminal ≈ 55.8 m/s or 201 km/h Therefore, the estimated terminal velocity of an average-sized penguin falling head first is approximately 56 m/s or 201 km/h. Keep in mind that this is a simplified calculation based on several assumptions about the penguin's shape and the environmental conditions. reply marcosdumay 18 hours agorootparentprevThose penguins are almost certainly smaller and less dense than those numbers. It seems to be solving for an adult in some medium-sized species (what makes a lot of sense). reply neglesaks 18 hours agorootparentprevHow about an unladen African Swallow, though? reply mannykannot 20 hours agoparentprevThat is a pretty good answer, though I have to fault ChatGPT a little bit for not taking the coconuts into consideration. reply CoastalCoder 19 hours agorootparentIf you're in Africa, you probably need a VPN to get the answer you're looking for. reply cypherpunks01 19 hours agorootparentprevAre you suggesting coconuts migrate? reply SV_BubbleTime 19 hours agoparentprevIt’s a language model, not a fact model. This is far more a question for wolframalpha also I suspect it wouldn’t do well. Stop using LLMs for objective things, you are only going to be disappointed. reply mikhailfranco 20 hours agoprevnext [9 more] First drone footage of x is becoming a little rarefied, not to say boring and predictable for some values of x. So I expect this to be the peak of consumers buying little mavics to film their trips to Mont Blanc or the Amalfi Coast. Honestly, their friends are not interested. It was sad and ridiculous while it lasted, and now I hope it's over. reply patall 19 hours agoparentI think you may be speaking from an affluent bubble. None of my friends ever approached me with their drone footage. And my grandma would absolutely be stoked if I did show her something like this from myself. Yes, drone video have become a bit too much of a thing in any kind of documentary (and it can be a tad boring for at least 5-10 years now). But that is just how it is, colored video (or HD etc) is also not novel anymore, yet we keep doing it. reply jncfhnb 20 hours agoparentprevSeems like a stupid take to me. The fact that it is drone footage is not why it’s interesting. It’s merely indicating that it’s drone footage because that implies a novel ability to film something interesting from a good angle. reply ryukoposting 20 hours agoparentprevWhy should they care what their friends think? Can we not take pictures and videos of things for our own enjoyment of that act? FWIW I don't own a drone nor have I ever considered buying one. I do have a horde of 35mm film cameras though. reply mikhailfranco 19 hours agorootparentIf it was really enjoyable, you will remember it. The human memory is designed to fix emotional experiences. No need for celluloid or pixels. If you were with a loved one, your future conversations about that time will keep the memory alive. There is a certain value and excitement in showing personal photos or videos to grand-children. But their children will not even know your name. The vanity and self-importance of youthful experiences will wane with age, reflection, wisdom, and a certain acceptance of our transient existence. Yes, I left many meaningless 35mm negatives, in a long forgotten attic, of a distant house, which I used to inhabit. Nobody will miss them. Not even me. If they are, perchance, discovered by a future owner of the house, they will be excited, for about 10 minutes, then throw them away. reply ryukoposting 18 hours agorootparent> If it was really enjoyable, you will remember it. The human memory is designed to fix emotional experiences. No need for celluloid or pixels. If you were with a loved one, your future conversations about that time will keep the memory alive. Words to live by. My point is this: the act of capturing photo and/or video is itself the draw for some people. It's an art form - beauty isn't just captured in a photograph, it's created through composition. A great photo is never just a photo of a great thing. Why should the transience of my art deter me, if I myself am also transient? reply mikhailfranco 18 hours agorootparentI think the value of photography is in teaching how to really see and appreciate the world, not in any artifact you may have created (at least not very often, unless you are a genius). It is similar to the way learning a musical skill (instrument, composition, production) teaches you to really hear music, which is probably more valuable than any particular sounds you created (again, geniuses excepted). There is a similar formula for other artistic and professional practices. No graphic designer just reads a web page. No cabinetmaker walks into a room and sees it the way you do. No architect or town planner ever just walks down an anonymous street in a strange city... reply krallja 19 hours agoparentprevFirst written account of x is becoming a little rarefied, not to say boring and predictable for some values of x. So I expect this to be the peak of consumers buying little bics to write about their trips to Mont Blanc or the Amalfi Coast. Honestly, their friends are not interested. It was sad and ridiculous while it lasted, and now I hope it's over. reply mikhailfranco 18 hours agorootparentAssumed to be obvious before it was observed (how else?). Seen and filmed many many times for adults leaping into the water. Already documented: 'witnessed by scientists'. Published by a site called petapixel with breathless words like 'astonishing', 'unprecedented', 'enormous cliff', 'huge jumps', 'rare and heart-stopping', 'extraordinary footage', 'huge ice cliff', 'brave chick' ... in an effort to create buzz for their sponsor National Geographic. The only mildly interesting phrase is: 'Scientists who monitor penguins from satellites'. Sounds like a fun job and I'm sure AI can help. I didn't know that (although I once helped the BAS effort to monitor elephant seals diving deep in the S.Atlantic, using radio transponders glued to their backs, with burst-transmit-on-surfacing via satellite, so I should not have been surprised, had I thought for a second). But then they spoil it by adding 'satellites...in space'. If the chicks were drawing lots to see who had to jump first, then I might be interested. reply somid3 22 hours ago [flagged]prev [8 more] How is this related to tech and hacking or anything with innovation? reply lolinder 21 hours agoparentFrom the guidelines: > On-Topic: Anything that good hackers would find interesting. That includes more than hacking and startups. If you had to reduce it to a sentence, the answer might be: anything that gratifies one's intellectual curiosity. https://news.ycombinator.com/newsguidelines.html reply robador 20 hours agoparentprevI'd add to the other responses that this footage was the result of technical progress and wouldn't have been possible to achieve otherwise. reply Heronymus_Anon 21 hours agoparentprevIt's a great inspiration for linux wallpapers and memes. ; ) reply sbarre 20 hours agoparentprevThe innovative use of drones to capture a never-before-seen moment in nature? Nature/science meets technology/science. I found this fascinating. reply solardev 18 hours agoparentprevYou never had to YOLO code into production? Pretty much the same thing. reply cypherpunks01 20 hours agoparentprevBecause eventually it becomes your turn to jump first. reply _a_a_a_ 20 hours agoparentprev [–] It's a metaphor. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Wildlife photographer Bertie Gregory captured drone footage of hundreds of emperor penguin chicks jumping off a 50-foot cliff in Antarctica for their first swim, showcasing a behavior called fledging at around five months old.",
      "The stunning footage, filmed for an upcoming National Geographic documentary, marks the first time such a high cliff jump has been recorded without disrupting the penguins.",
      "This unique event highlights a significant moment in the penguins' lives and will be a featured segment in the upcoming documentary."
    ],
    "commentSummary": [
      "A drone recorded penguins leaping off a cliff, sparking a debate on the authenticity of the sound and the use of foley sounds in nature documentaries.",
      "The discussion covers the penguins' survival mechanism in high falls, attributed to the square/cube law, prompting debates on the significance of filming natural events.",
      "It also highlights the merging of nature, science, and technology in artistic creation, emphasizing the convergence of these fields for inspiration."
    ],
    "points": 192,
    "commentCount": 83,
    "retryCount": 0,
    "time": 1713694257
  },
  {
    "id": 40104492,
    "title": "Lunatik: Scripting Linux Kernel with Lua",
    "originLink": "https://github.com/luainkernel/lunatik",
    "originBody": "Lunatik Lunatik is a framework for scripting the Linux kernel with Lua. It is composed by the Lua interpreter modified to run in the kernel; a device driver (written in Lua =)) and a command line tool to load and run scripts and manage runtime environments from the user space; a C API to load and run scripts and manage runtime environments from the kernel; and Lua APIs for binding kernel facilities to Lua scripts. Here is an example of a character device driver written in Lua using Lunatik to generate random ASCII printable characters: -- /lib/modules/lua/passwd.lua -- -- implements /dev/passwd for generate passwords -- usage: $ sudo lunatik run passwd -- $ head -c/dev/passwd local device = require(\"device\") local linux = require(\"linux\") local function nop() end -- do nothing local s = linux.stat local driver = {name = \"passwd\", open = nop, release = nop, mode = s.IRUGO} function driver:read() -- read(2) callback-- generate random ASCII printable charactersreturn string.char(linux.random(32, 126)) end -- creates a new character device device.new(driver) Usage make sudo make install sudo lunatik # execute Lunatik REPL Lunatik 3.4 Copyright (C) 2023-2024 ring-0 Ltda. > return 42 -- execute this line in the kernel 42 lunatik usage: lunatik [load|unload|reload|status|list] [run|spawn|stop ] load: load Lunatik kernel modules unload: unload Lunatik kernel modules reload: reload Lunatik kernel modules status: show which Lunatik kernel modules are currently loaded list: show which runtime environments are currently running run: create a new runtime environment to run the script /lib/modules/lua/.lua spawn: create a new runtime environment and spawn a thread to run the script /lib/modules/lua/.lua stop: stop the runtime environment created to run the script default: start a REPL (Read–Eval–Print Loop) Lua Version Lunatik 3.4 is based on Lua 5.4 adapted to run in the kernel. Floating-point numbers Lunatik does not support floating-point arithmetic, thus it does not support __div nor __pow metamethods and the type number has only the subtype integer. Lua API Lunatik does not support both io and os libraries, and the given identifiers from the following libraries: debug.debug, math.acos, math.asin, math.atan, math.ceil, math.cos, math.deg, math.exp, math.floor, math.fmod, math.huge. math.log, math.modf, math.pi, math.rad, math.random, math.randomseed, math.sin, math.sqrt, math.tan, math.type, package.cpath. Lunatik modifies the following identifiers: _VERSION: is defined as \"Lua 5.4-kernel\". collectgarbage(\"count\"): returns the total memory in use by Lua in bytes, instead of Kbytes. package.path: is defined as \"/lib/modules/lua/?.lua;/lib/modules/lua/?/init.lua\". require: only supports built-in or already linked C modules, that is, Lunatik cannot load kernel modules dynamically. C API Lunatik does not support luaL_Stream, luaL_execresult, luaL_fileresult, luaopen_io and luaopen_os. Lunatik modifies luaL_openlibs to remove luaopen_io and luaopen_os. Lunatik C API #includelunatik_runtime int lunatik_runtime(lunatik_object_t **pruntime, const char *script, bool sleep); lunatik_runtime() creates a new runtime environment then loads and runs the script /lib/modules/lua/.lua as the entry point for this environment. It must only be called from process context. The runtime environment is a Lunatik object that holds a Lua state. Lunatik objects are special Lua userdata which also hold a lock type and a reference counter. If sleep is true, lunatik_runtime() will use a mutex for locking the runtime environment and the GFP_KERNEL flag for allocating new memory later on on lunatik_run() calls. Otherwise, it will use a spinlock and GFP_ATOMIC. lunatik_runtime() opens the Lua standard libraries present on Lunatik. If successful, lunatik_runtime() sets the address pointed by pruntime and Lua's extra space with a pointer for the new created runtime environment, sets the reference counter to 1 and then returns 0. Otherwise, it returns -ENOMEM, if insufficient memory is available; or -EINVAL, if it fails to load or run the script. Example -- /lib/modules/lua/mydevice.lua function myread(len, off)return \"42\" end static lunatik_object_t *runtime; static int __init mydevice_init(void) {return lunatik_runtime(&runtime, \"mydevice\", true); } lunatik_stop int lunatik_stop(lunatik_object_t *runtime); lunatik_stop() closes the Lua state created for this runtime environment and decrements the reference counter. Once the reference counter is decremented to zero, the lock type and the memory allocated for the runtime environment are released. If the runtime environment has been released, it returns 1; otherwise, it returns 0. lunatik_run void lunatik_run(lunatik_object_t *runtime,(*handler)(...),&ret, ...); lunatik_run() locks the runtime environment and calls the handler passing the associated Lua state as the first argument followed by the variadic arguments. If the Lua state has been closed, ret is set with -ENXIO; otherwise, ret is set with the result of handler(L, ...) call. Then, it restores the Lua stack and unlocks the runtime environment. It is defined as a macro. Example static int l_read(lua_State *L, char *buf, size_t len, loff_t *off) {size_t llen;const char *lbuf;lua_getglobal(L, \"myread\");lua_pushinteger(L, len);lua_pushinteger(L, *off);if (lua_pcall(L, 2, 2, 0) != LUA_OK) { /* calls myread(len, off) */ pr_err(\"%s\", lua_tostring(L, -1)); return -ECANCELED;}lbuf = lua_tolstring(L, -2, &llen);llen = min(len, llen);if (copy_to_user(buf, lbuf, llen) != 0) return -EFAULT;*off = (loff_t)luaL_optinteger(L, -1, *off + llen);return (ssize_t)llen; } static ssize_t mydevice_read(struct file *f, char *buf, size_t len, loff_t *off) {ssize_t ret;lunatik_object_t *runtime = (lunatik_object_t *)f->private_data;lunatik_run(runtime, l_read, ret, buf, len, off);return ret; } lunatik_getobject void lunatik_getobject(lunatik_object_t *object); lunatik_getobject() increments the reference counter of this object (e.g., runtime environment). lunatik_put int lunatik_putobject(lunatik_object_t *object); lunatik_putobject() decrements the reference counter of this object (e.g., runtime environment). If the object has been released, it returns 1; otherwise, it returns 0. lunatik_toruntime lunatik_object_t *lunatik_toruntime(lua_State *L); lunatik_toruntime() returns the runtime environment referenced by the L's extra space. Lunatik Lua APIs lunatik The lunatik library provides support to load and run scripts and manage runtime environments from Lua. lunatik.runtime(script [, sleep]) lunatik.runtime() creates a new runtime environment then loads and runs the script /lib/modules/lua/.lua as the entry point for this environment. It returns a Lunatik object representing the runtime environment. If sleep is true or omitted, it will use a mutex and GFP_KERNEL; otherwise, it will use a spinlock and GFP_ATOMIC. lunatik.runtime() opens the Lua standard libraries present on Lunatik. lunatik.stop(runtime), runtime:stop() lunatik.stop() stops the runtime environment and clear its reference from the runtime object. device The device library provides support for writting character device drivers in Lua. device.new(driver) device.new() returns a new device object and installs its driver in the system. The driver must be defined as a table containing the following field: name: string defining the device name; it is used for creating the device file (e.g., /dev/). The driver table might optionally contain the following fields: read: callback function to handle the read operation on the device file. It receives the driver table as the first argument followed by two integers, the length to be read and the file offset. It should return a string and, optionally, the updated offset. If the length of the returned string is greater than the requested length, the string will be corrected to that length. If the updated offset is not returned, the offset will be updated with offset + length. write: callback function to handle the write operation on the device file. It receives the driver table as the first argument followed by the string to be written and an integer as the file offset. It might return optionally the written length followed by the updated offset. If the returned length is greater than the requested length, the returned length will be corrected. If the updated offset is not returned, the offset will be updated with offset + length. open: callback function to handle the open operation on the device file. It receives the driver table and it is expected to return nothing. release: callback function to handle the release operation on the device file. It receives the driver table and it is expected to return nothing. mode: an integer specifying the device file mode. If an operation callback is not defined, the device returns -ENXIO to VFS on its access. device.stop(dev), dev:stop() device.stop() removes a device driver specified by the dev object from the system. linux The linux library provides support for some Linux kernel facilities. linux.random([m [, n]]) linux.random() mimics the behavior of math.random, but binding 's get_random_u32() and get_random_u64() APIs. When called without arguments, produces an integer with all bits (pseudo)random. When called with two integers m and n, linux.random() returns a pseudo-random integer with uniform distribution in the range [m, n]. The call math.random(n), for a positive n, is equivalent to math.random(1, n). linux.stat linux.stat is a table that exportsinteger flags to Lua. \"IRWXUGO\": permission to read, write and execute for user, group and other. \"IRUGO\": permission only to read for user, group and other. \"IWUGO\": permission only to write for user, group and other. \"IXUGO\": permission only to execute for user, group and other. linux.schedule([timeout [, state]]) linux.schedule() sets the current task state and makes the it sleep until timeout milliseconds have elapsed. If timeout is omitted, it uses MAX_SCHEDULE_TIMEOUT. If state is omitted, it uses task.INTERRUPTIBLE. linux.task linux.task is a table that exports task state flags to Lua. \"RUNNING\": task is executing on a CPU or waiting to be executed. \"INTERRUPTIBLE\": task is waiting for a signal or a resource (sleeping). \"UNINTERRUPTIBLE\": behaves like \"INTERRUPTIBLE\" with the exception that signal will not wake up the task. \"KILLABLE\": behaves like \"UNINTERRUPTIBLE\" with the exception that fatal signals will wake up the task. \"IDLE\": behaves like \"UNINTERRUPTIBLE\" with the exception that it avoids the loadavg accounting. linux.errno linux.errno is a table that exportsflags to Lua. \"PERM\": Operation not permitted. \"NOENT\": No such file or directory. \"SRCH\": No such process. \"INTR\": Interrupted system call. \"IO\": I/O error. \"NXIO\":No such device or address. \"2BIG\":, Argument list too long. \"NOEXEC\": Exec format error. \"BADF\": Bad file number. \"CHILD\": No child processes. \"AGAIN\": Try again. \"NOMEM\": Out of memory. \"ACCES\": Permission denied. \"FAULT\": Bad address. \"NOTBLK\": Block device required. \"BUSY\": Device or resource busy. \"EXIST\": File exists. \"XDEV\": Cross-device link. \"NODEV\": No such device. \"NOTDIR\": Not a directory. \"ISDIR\": Is a directory. \"INVAL\": Invalid argument. \"NFILE\": File table overflow. \"MFILE\": Too many open files. \"NOTTY\": Not a typewriter. \"TXTBSY\": Text file busy. \"FBIG\": File too large. \"NOSPC\": No space left on device. \"SPIPE\": Illegal seek. \"ROFS\": Read-only file system. \"MLINK\": Too many links. \"PIPE\": Broken pipe. \"DOM\": Math argument out of domain of func. \"RANGE\": Math result not representable. notifier The notifier library provides support for the kernel notifier chains. notifier.keyboard(callback) notifier.keyboard() returns a new keyboard notifier object and installs it in the system. The callback function is called whenever a console keyboard event happens (e.g., a key has been pressed or released). This callback receives the following arguments: event: the available events are defined by the notifier.kbd table. down: true, if the key is pressed; false, if it is released. shift: true, if the shift key is held; false, otherwise. key: keycode or keysym depending on event. The callback function might return the values defined by the notifier.notify table. notifier.kbd notifier.kbd is a table that exports KBD flags to Lua. \"KEYCODE\": keyboard keycode, called before any other. \"UNBOUND_KEYCODE\": keyboard keycode which is not bound to any other. \"UNICODE\": keyboard unicode. \"KEYSYM\": keyboard keysym. \"POST_KEYSYM\": called after keyboard keysym interpretation. notifier.netdevice(callback) notifier.netdevice() returns a new netdevice notifier object and installs it in the system. The callback function is called whenever a console netdevice event happens (e.g., a network interface has been connected or disconnected). This callback receives the following arguments: event: the available events are defined by the notifier.netdev table. name: the device name. The callback function might return the values defined by the notifier.notify table. notifier.netdev notifier.netdev is a table that exports NETDEV flags to Lua. notifier.notify notifier.notify is a table that exports NOTIFY flags to Lua. \"DONE\": don't care. \"OK\": suits me. \"BAD\": bad/veto action. \"STOP\": clean way to return from the notifier and stop further calls. notifier.delete(notfr), notfr:delete() notifier.delete() removes a notifier specified by the notfr object from the system. socket The socket library provides support for the kernel networking handling. This library was inspired by Chengzhi Tan's GSoC project. socket.new(family, type, protocol) socket.new() creates a new socket object. This function receives the following arguments: family: the available address families are defined by the socket.af table. sock: the available types are present on the socket.sock table. protocol: the available protocols are defined by the socket.ipproto table. socket.af socket.af is a table that exports address families (AF) to Lua. \"UNSPEC\": Unspecified. \"UNIX\": Unix domain sockets. \"LOCAL\": POSIX name for AF_UNIX. \"INET\": Internet IP Protocol. \"AX25\": Amateur Radio AX.25. \"IPX\": Novell IPX. \"APPLETALK\": AppleTalk DDP. \"NETROM\": Amateur Radio NET/ROM. \"BRIDGE\": Multiprotocol bridge. \"ATMPVC\": ATM PVCs. \"X25\": Reserved for X.25 project. \"INET6\": IP version 6. \"ROSE\": Amateur Radio X.25 PLP. \"DEC\": Reserved for DECnet project. \"NETBEUI\": Reserved for 802.2LLC project. \"SECURITY\": Security callback pseudo AF. \"KEY\": PF_KEY key management API. \"NETLINK\": Netlink. \"ROUTE\": Alias to emulate 4.4BSD. \"PACKET\": Packet family. \"ASH\": Ash. \"ECONET\": Acorn Econet. \"ATMSVC\": ATM SVCs. \"RDS\": RDS sockets. \"SNA\": Linux SNA Project (nutters!). \"IRDA\": IRDA sockets. \"PPPOX\": PPPoX sockets. \"WANPIPE\": Wanpipe API Sockets. \"LLC\": Linux LLC. \"IB\": Native InfiniBand address. \"MPLS\": MPLS. \"CAN\": Controller Area Network. \"TIPC\": TIPC sockets. \"BLUETOOTH\": Bluetooth sockets. \"IUCV\": IUCV sockets. \"RXRPC\": RxRPC sockets. \"ISDN\": mISDN sockets. \"PHONET\": Phonet sockets. \"IEEE802154\": IEEE802154 sockets. \"CAIF\": CAIF sockets. \"ALG\": Algorithm sockets. \"NFC\": NFC sockets. \"VSOCK\": vSockets. \"KCM\": Kernel Connection Multiplexor. \"QIPCRTR\": Qualcomm IPC Router. \"SMC\": reserve number for PF_SMC protocol family that reuses AF_INET address family. \"XDP\": XDP sockets. \"MCTP\": Management component transport protocol. \"MAX\": Maximum. socket.sock socket.sock is a table that exports socket types (SOCK): \"STREAM\": stream (connection) socket. \"DGRAM\": datagram (conn.less) socket. \"RAW\": raw socket. \"RDM\": reliably-delivered message. \"SEQPACKET\": sequential packet socket. \"DCCP\": Datagram Congestion Control Protocol socket. \"PACKET\": linux specific way of getting packets at the dev level. and flags (SOCK): \"CLOEXEC\": n/a. \"NONBLOCK\": n/a. socket.ipproto socket.ipproto is a table that exports IP protocols (IPPROTO) to Lua. \"IP\": Dummy protocol for TCP. \"ICMP\": Internet Control Message Protocol. \"IGMP\": Internet Group Management Protocol. \"IPIP\": IPIP tunnels (older KA9Q tunnels use 94). \"TCP\": Transmission Control Protocol. \"EGP\": Exterior Gateway Protocol. \"PUP\": PUP protocol. \"UDP\": User Datagram Protocol. \"IDP\": XNS IDP protocol. \"TP\": SO Transport Protocol Class 4. \"DCCP\": Datagram Congestion Control Protocol. \"IPV6\": IPv6-in-IPv4 tunnelling. \"RSVP\": RSVP Protocol. \"GRE\": Cisco GRE tunnels (rfc 1701,1702). \"ESP\": Encapsulation Security Payload protocol. \"AH\": Authentication Header protocol. \"MTP\": Multicast Transport Protocol. \"BEETPH\": IP option pseudo header for BEET. \"ENCAP\": Encapsulation Header. \"PIM\": Protocol Independent Multicast. \"COMP\": Compression Header Protocol. \"SCTP\": Stream Control Transport Protocol. \"UDPLITE\": UDP-Lite (RFC 3828). \"MPLS\": MPLS in IP (RFC 4023). \"ETHERNET\": Ethernet-within-IPv6 Encapsulation. \"RAW\": Raw IP packets. \"MPTCP\": Multipath TCP connection. socket:close(sock), sock:close() socket.close() removes sock object from the system. socket.send(sock, message, [addr [, port]]), sock:send(message, [addr [, port]]) socket.send() sends a string message through the socket sock. If the sock address family is af.INET, then it expects the following arguments: addr: integer describing the destination IPv4 address. port: integer describing the destination IPv4 port. Otherwise: addr: packed string describing the destination address. socket.receive(sock, length, [flags [, from]]), sock:receive(length, [flags [, from]]) socket.receive() receives a string with up to length bytes through the socket sock. The available message flags are defined by the socket.msg table. If from is true, it returns the received message followed by the peer's address. Otherwise, it returns only the received message. socket.msg socket.msg is a table that exports message flags to Lua. \"OOB\": n/a. \"PEEK\": n/a. \"DONTROUTE\": n/a. \"TRYHARD\": Synonym for \"DONTROUTE\" for DECnet. \"CTRUNC\": n/a. \"PROBE\": Do not send. Only probe path f.e. for MTU. \"TRUNC\": n/a. \"DONTWAIT\": Nonblocking io. \"EOR\": End of record. \"WAITALL\": Wait for a full request. \"FIN\": n/a. \"SYN\": n/a. \"CONFIRM\": Confirm path validity. \"RST\": n/a. \"ERRQUEUE\": Fetch message from error queue. \"NOSIGNAL\": Do not generate SIGPIPE. \"MORE\": Sender will send more. \"WAITFORONE\": recvmmsg(): block until 1+ packets avail. \"SENDPAGE_NOPOLICY\": sendpage() internal: do no apply policy. \"SENDPAGE_NOTLAST\": sendpage() internal: not the last page. \"BATCH\": sendmmsg(): more messages coming. \"EOF\": n/a. \"NO_SHARED_FRAGS\": sendpage() internal: page frags are not shared. \"SENDPAGE_DECRYPTED\": sendpage() internal: page may carry plain text and require encryption. \"ZEROCOPY\": Use user data in kernel path. \"FASTOPEN\": Send data in TCP SYN. \"CMSG_CLOEXEC\": Set close_on_exec for file descriptor received through SCM_RIGHTS. socket.bind(sock, addr [, port]), sock:bind(addr [, port]) socket.bind() binds the socket sock to a given address. If the sock address family is af.INET, then it expects the following arguments: addr: integer describing host IPv4 address. port: integer describing host IPv4 port. Otherwise: addr: packed string describing host address. socket.listen(sock [, backlog]), sock:listen([backlog]) socket.listen() moves the socket sock to listening state. backlog: pending connections queue size. If omitted, it uses SOMAXCONN as default. socket.accept(sock [, flags]), sock:accept([flags]) socket.accept() accepts a connection on socket sock. It returns a new socket object. The available flags are present on the socket.sock table. socket.connect(sock, addr [, port] [, flags]), sock:connect(addr [, port] [, flags]) socket.connect() connects the socket sock to the address addr. If the sock address family is af.INET, then it expects the following arguments: addr: integer describing the destination IPv4 address. port: integer describing the destination IPv4 port. Otherwise: addr: packed string describing the destination address. The available flags are present on the socket.sock table. For datagram sockets, addr is the address to which datagrams are sent by default, and the only address from which datagrams are received. For stream sockets, attempts to connect to addr. socket.getsockname(sock), sock:getsockname() socket.getsockname() get the address which the socket sock is bound. If the sock address family is af.INET, then it returns the following: addr: integer describing the bounded IPv4 address. port: integer describing the bounded IPv4 port. Otherwise: addr: packed string describing the bounded address. socket.getpeername(sock), sock:getpeername() socket.getpeername() get the address which the socket sock is connected. If the sock address family is af.INET, then it returns the following: addr: integer describing the peer's IPv4 address. port: integer describing the peer's IPv4 port. Otherwise: addr: packed string describing the peer's address. socket.inet The socket.inet library provides support for high-level IPv4 sockets. inet.tcp() inet.tcp() creates a new socket using af.INET address family, sock.STREAM type and ipproto.TCP protocol. It overrides socket methods to use addresses as numbers-and-dots notation (e.g., \"127.0.0.1\"), instead of integers. inet.udp() inet.udp() creates a new socket using af.INET address family, sock.DGRAM type and ipproto.UDP protocol. It overrides socket methods to use addresses as numbers-and-dots notation (e.g., \"127.0.0.1\"), instead of integers. udp:receivefrom(length [, flags]) udp:receivefrom() is just an alias to sock:receive(length, flags, true). rcu The rcu library provides support for the kernel Read-copy update (RCU) synchronization mechanism. This library was inspired by Caio Messias' GSoC project. rcu.table([size]) rcu.table() creates a new rcu.table object which binds the kernel generic hash table. This function receives as argument the number of buckets rounded up to the next power of 2. The default size is 1024. Key must be a string and value must be a Lunatik object or nil. thread The thread library provides support for the kernel thread primitives. thread.run(runtime, name) thread.run() creates a new thread object and wakes it up. This function receives the following arguments: runtime: the runtime environment for running a task in the created kernel thread. The task must be specified by returning a function on the script loaded in the runtime environment. name: string representing the name for the thread (e.g., as shown on ps). thread.shouldstop() thread.shouldstop() returns true if thread.stop() was called; otherwise, it returns false. thread.current() thread.current() returns a thread object representing the current task. thread.stop(thrd), thrd:stop() thread.stop() sets thread.shouldstop() on the thread thrd to return true, wakes thrd, and waits for it to exit. thread.task(thread), thrd:task() thread.task() returns a table containing the task information of this thread (e.g., \"cpu\", \"command\", \"pid\" and \"tgid\"). fib The fib library provides support for the kernel Forwarding Information Base. fib.newrule(table, priority) fib.newrule() binds the kernel fib_nl_newrule API; it creates a new FIB rule that matches the specified routing table with the specified priorioty. This function is similar to the user-space command ip rule add provided by iproute2. fib.delrule(table, priority) fib.delrule() binds the kernel fib_nl_delrule API; it removes a FIB rule that matches the specified routing table with the specified priorioty. This function is similar to the user-space command ip rule del provided by iproute2. data The data library provides support for binding the system memory to Lua. data.new(size) data.new() creates a new data object which allocates size bytes. data.getnumber(d, offset), d:getnumber(offset) data.getnumber() extracts a lua_Integer from the memory referenced by a data object and a byte offset, starting from zero. data.setnumber(d, offset, number), d:setnumber(offset, number) data.setnumber() insert a lua_Integer number into the memory referenced by a data object and a byte offset, starting from zero. data.getbyte(d, offset), d:getbyte(offset) data.getbyte() extracts a byte from the memory referenced by a data object and a byte offset, starting from zero. data.setbyte(d, offset, byte), d:setbyte(offset, byte) data.setbyte() insert a byte into the memory referenced by a data object and a byte offset, starting from zero. data.getstring(d, offset, length), d:getstring(offset, length) data.getstring() extracts a string with length bytes from the memory referenced by a data object and a byte offset, starting from zero. data.setstring(d, offset, s), d:setstring(offset, s) data.setstring() insert the string s into the memory referenced by a data object and a byte offset, starting from zero. probe The probe library provides support for kernel probes. probe.new(symbol|address, handlers) probe.new() returns a new probe object for monitoring a kernel symbol (string) or address (light userdata) and installs its handlers in the system. The handler must be defined as a table containing the following field: pre: function to be called before the probed instruction. It receives the symbol or address, followed by a closure that may be called to show the CPU registers and stack in the system log. post: function to be called after the probed instruction. It receives the symbol or address, followed by a closure that may be called to show the CPU registers and stack in the system log. probe.stop(p), p:stop() probe.stop() removes the probe handlers from the system. probe.enable(p, bool), p:enable(bool) probe.enable() enables or disables the probe handlers, accordingly to bool. syscall The syscall library provides support for system call addresses and numbers. syscall.address(number) syscall.address() returns the system call address (light userdata) referenced by the given number. syscall.number(name) syscall.number() returns the system call number referenced by the given name. syscall.table The syscall.table library provides support for translating system call names to addresses (light userdata). Examples spyglass spyglass is a kernel script that implements a keylogger inspired by the spy kernel module. This kernel script logs the keysym of the pressed keys in a device (/dev/spyglass). If the keysym is a printable character, spyglass logs the keysym itself; otherwise, it logs a mnemonic of the ASCII code, (e.g.,stands for 127). Usage sudo make examples_install # installs examples sudo lunatik run examples/spyglass # runs spyglass sudo tail -f /dev/spyglass # prints the key log sudo sh -c \"echo 'enable=false' > /dev/spyglass\" # disable the key logging sudo sh -c \"echo 'enable=true' > /dev/spyglass\" # enable the key logging sudo sh -c \"echo 'net=127.0.0.1:1337' > /dev/spyglass\" # enable network support nc -lu 127.0.0.1 1337 & # listen to UDP 127.0.0.1:1337 sudo tail -f /dev/spyglass # sends the key log through the network keylocker keylocker is a kernel script that implements Konami Code for locking and unlocking the console keyboard. When the user types ↑ ↑ ↓ ↓ ← → ← → LCTRL LALT, the keyboard will be locked; that is, the system will stop processing any key pressed until the user types the same key sequence again. Usage sudo make examples_install # installs examples sudo lunatik run examples/keylocker # runs keylocker # locks keyboard # unlocks keyboard tap tap is a kernel script that implements a sniffer using AF_PACKET socket. It prints destination and source MAC addresses followed by Ethernet type and the frame size. Usage sudo make examples_install # installs examples sudo lunatik run examples/tap # runs tap cat /dev/tap shared shared is a kernel script that implements an in-memory key-value store using rcu, data, socket and thread. Usage sudo make examples_install # installs examples sudo lunatik spawn examples/shared # spawns shared nc 127.0.0.1 90 # connects to shared foo=bar # assigns \"bar\" to foo foo # retrieves foo bar ^C# finishes the connection echod echod is an echo server implemented as kernel scripts. Usage sudo make examples_install # installs examples sudo lunatik spawn examples/echod/daemon # runs echod nc 127.0.0.1 1337 hello kernel! hello kernel! systrack systrack is a kernel script that implements a device driver to monitor system calls. It prints the amount of times each system call was called since the driver has been installed. Usage sudo make examples_install # installs examples sudo lunatik run examples/systrack # runs systracker cat /dev/systrack writev: 0 close: 1927 write: 1085 openat: 2036 read: 4131 readv: 0 References Scripting the Linux Routing Table with Lua Lua no Núcleo (Portuguese) Linux Network Scripting with Lua Scriptables Operating Systems with Lua",
    "commentLink": "https://news.ycombinator.com/item?id=40104492",
    "commentBody": "Lunatik: Lunatik is a framework for scripting the Linux kernel with Lua (github.com/luainkernel)174 points by todsacerdoti 23 hours agohidepastfavorite30 comments lneto 21 hours agoHappy to see this on HN =). Lunatik’s main author here. AMA. Please feel welcome to join us on Matrix [1] as well. [1] https://matrix.to/#/#lunatik:matrix.org reply bgm1975 16 hours agoparentWhat are some of the main use cases for this project? reply lneto 16 hours agorootparentthe most explored use case is for scripting networking, please see: [1] https://legacy.netdevconf.info/0x14/session.html?talk-linux-... [2] https://netdevconf.info/0x17/sessions/talk/scripting-the-lin... [3] https://www.netbsd.org/~lneto/dls14.pdf [4] https://www.slideshare.net/eurobsdcon/lneto-npf-scripting [5] https://2018.eurobsdcon.org/static/slides/Fast,%20Flexible%2... However, it was conceived for extensibility and flexibility in general, in the spirit of [6]. It has been used also for scripting CPU frequency scaling, debugging, application sandboxing among others [7,8]. [6] https://web.stanford.edu/~ouster/cgi-bin/papers/scripting.pd... [7] https://drive.google.com/file/d/1TJ50IEbRXlBz-TxheGdkO-b4vLS... [8] https://youtu.be/-ufBgy044HI?si=IT4FOqeldA-jsg2r (Portuguese only) ZFS also has its own kernel Lua version (I'd love to unify them, BTW). Moreover, we have some simplified examples on our repository [9]. [9] https://github.com/luainkernel/lunatik?tab=readme-ov-file#ex... reply vaylian 20 hours agoparentprevDoes this use or relate to eBPF in any way? reply lneto 20 hours agorootparentIt doesn't use eBPF but we can interoperate.. we have developed XDPLua for this as a GSoC project [1] and then published this work on Netdev 0x14 [2]. [1] https://victornogueirario.github.io/xdplua/ [2] https://netdevconf.info/0x14/session.html?talk-linux-network... I'm currently working on updating XDPLua for using kfuncs on top of the newest version of Lunatik.. I've a PoC already and should create a PR in a few weeks. reply ck45 21 hours agoprevReminds me of Lua in the NetBSD kernel https://archive.fosdem.org/2013/schedule/event/lua_in_the_ne... Edit: It made it to HN front page today. reply lneto 21 hours agoparentit's totally related.. we started with Lunatik in Linux actually then ported it to NetBSD.. [1] https://www.netbsd.org/~lneto/dls14.pdf reply lneto 21 hours agorootparenta bit of history.. https://mail-index.netbsd.org/tech-kern/2010/10/05/msg008900... reply olejorgenb 20 hours agoparentprevhttps://news.ycombinator.com/item?id=40086027 reply gnufx 22 hours agoprevThere was something like this using Scheme, maybe 20 years ago, but I don't remember any details and don't think I ever tried it. Edit: see http://www.abstractnonsense.com/schemix/ reply febeling 20 hours agoparentInterestingly, this project (Lunatik) started over 30 years ago in 1993. https://github.com/luainkernel/lunatik/graphs/contributors reply lneto 20 hours agorootparentthis is because the repository is a Lua fork.. actually, Lunatik started in 2008 [1, 2]. [1] https://sourceforge.net/projects/lunatik/files/ [2] https://www.maxwell.vrac.puc-rio.br/colecao.php?strSecao=res... (Portuguese only) reply febeling 17 hours agorootparentOk, makes sense. Thanks for clarifying reply robblbobbl 19 hours agoprevThank you for your efforts. This is a really good project. Kudos reply amelius 22 hours agoprevDoes this finally allow to write firewall rules in a sane and flexible language? reply lneto 22 hours agoparentPlease take a look at: [1] https://netdevconf.info/0x14/session.html?talk-linux-network... [2] https://netdevconf.info/0x17/sessions/talk/scripting-the-lin... I'm currently updating XDPLua and we might have a GSoC project on updating NFLua this year =).. [3] http://www.lua.inf.puc-rio.br/gsoc/ideas2024.html#lunatik-ne... reply fcvbh 19 hours agoparentprevnext [4 more] [flagged] thefaux 18 hours agorootparentSaying lua is bad is another way of saying \"I don't understand lua.\" It could be better in many ways (especially syntactically), but it has no serious competition in the embeddable scripting language category. reply saagarjha 19 hours agorootparentprevLua is a good language reply lneto 19 hours agorootparenthttps://dl.acm.org/doi/10.1145/1238844.1238846 =) reply bhaney 14 hours agoprev> Lunatik does not support floating-point arithmetic Assuming there is one, what's the technical reason for this? reply cwillu 13 hours agoparent> Kernel code is normally prohibited from using floating-point (FP) registers or instructions, including the C float and double data types. This rule reduces system call overhead, because the kernel does not need to save and restore the userspace floating-point register state. > However, occasionally drivers or library functions may need to include FP code. This is supported by isolating the functions containing FP code to a separate translation unit (a separate source file), and saving/restoring the FP register state around calls to those functions. This creates “critical sections” of floating-point usage. https://www.kernel.org/doc/html/next/core-api/floating-point... reply helpfulContrib 16 hours agoprevThis is so beautiful I could almost weep. With this, we can proceed - easily! - to attain something I have long wanted: to replace all Linux userspace with Lua-only tooling. Yes, Lua all the things in userspace. I know, \"why would I do that?\", well, because there is a thing I've wanted for 40 years of computing, and that is a very, very powerful computer that only requires me to use one (oh, okay, two or three..) languages. I grew up in computers that booted directly to a single language (BASIC), and would let you do everything you need in that and only that. Imagine replacing all userspace tooling with a lua implementation. Yes, insane! But imagine the development flow once you get some good stuff ported/ffi'ed! Having the kernel interfaces available now, is just .. candy. I would love to have this for a Linux distro, even experimental, even just as a toy, to boot directly into a LOAD81[1] interface that has a whole lotta new Lunatik in it .. I could imagine pushing LOAD81 very hard into a new OS paradigm with this. Wow! [1] = antirez' LOAD81, which I have long thought of as a fun way to build a new userspace front-end: https://github.com/antirez/LOAD81.git reply lneto 15 hours agoparentOne of the main inspirations for Lunatik is the MS Singularity OS [1], which gets rid of kernel/user space division and implements application/process protection by software using programing language resources. The other one is the MIT Exokernel [2], which provides a tiny kernel with almost no abstractions responsible only for safely multiplexing the hardware. Now, imagine a tiny kernel written in C, exposing Lua APIs, responsible mainly for multiplexing HW; and user processes implemented as separate Lua states running on the same address space, protected by language constructs. [1] https://pdos.csail.mit.edu/6.828/2008/readings/hunt07singula... [2] https://www.classes.cs.uchicago.edu/archive/2019/winter/3310... https://imgflip.com/i/8njfrr reply lneto 12 hours agoparentprevI've just glanced at LOAD81 now.. pretty good job! thanks for sharing.. I noted your keyboard event handling (using SDL).. we have something very related to this in Lunatik (at the kernel level, of course) [1]. We've a kinda fun script that uses keyboard event handling to implement a \"key locker\" using Konami code [2]. [1] https://github.com/luainkernel/lunatik?tab=readme-ov-file#no... [2] https://github.com/luainkernel/lunatik?tab=readme-ov-file#ke... reply tengbretson 9 hours agoparentprevAnd while we're at it, let's run the lua interpreter in ring 0 and really get the party going. reply CodeCompost 14 hours agoparentprevWhy lua though? reply lneto 13 hours agorootparentPlease refer to Section 3 from [1], this was extensively discussed there. [1] https://www.netbsd.org/~lneto/dls14.pdf However, giving you a short answer, we use Lua mainly because it's easy both to extend and to embed. It's implemented as an almost \"freestanding\" C library. Moreover, it has a considerable small footprint (~250 KB) in comparison to other scripting languages (e.g., Python has a few MB). Moreover, Lua has automatic memory management, fully isolated execution states, protected calls, among other features. reply adastra22 13 hours agorootparentprevSounds like he needs to be introduced to Forth. reply Solvency 17 hours agoprev [–] Weird miss to not call it Lunatix. reply lneto 17 hours agoparent [–] Perhaps when we have a fully scriptable operating system, we might call it Lunatix =). reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Lunatik is a framework that allows scripting the Linux kernel using Lua, offering a customized Lua interpreter, a device driver, a C API for environment management, and Lua APIs for interfacing with kernel features.",
      "It does not support all Lua libraries or identifiers, and it has modified standard Lua functions. It provides functions for runtime environment creation, driver handling, networking, error code management, task state control, and various system function libraries.",
      "The framework also showcases kernel script examples for monitoring system calls, developing keyloggers, network sniffers, and key-value stores."
    ],
    "commentSummary": [
      "Lunatik is a framework that enables scripting the Linux kernel using Lua, offering scripting capabilities for networking, CPU frequency scaling, debugging, and application sandboxing.",
      "It does not rely on eBPF but can work alongside it, having started in 2008, drawing inspiration from MS Singularity OS and MIT Exokernel.",
      "Lua was selected for Lunatik due to its simplicity in extension and embedding, small size, and functionalities like automatic memory management and isolated execution states."
    ],
    "points": 174,
    "commentCount": 30,
    "retryCount": 0,
    "time": 1713694482
  },
  {
    "id": 40111274,
    "title": "Unveiling Super Nintendo Cartridge Technology",
    "originLink": "https://fabiensanglard.net/snes_carts/index.html",
    "originBody": "FABIEN SANGLARD'S WEBSITE ABOUT CONTACT RSS $$$ April 21, 2024 INSIDE THE SUPER NINTENDO CARTRIDGES One of the remarkable characteristics of the Super Nintendo was the ability for game cartridges (cart) to pack more than instructions and assets into ROM chips. If we open and look at the PCBs, we can find inside things like the CIC copy protection chip, SRAM, and even \"enhancement processors\". CIC The copy-protection mechanism of the SNES is something I already dig into in my 10NES article. It works by having two chips talking in lockstep. One chip is in the console, the other in the cart. If the console CIC sees something it does not like, it resets every processor. Not every SNES cart has a CIC. Unsanctioned games such as \"Super 3D Noah's Ark\" don't have one. To play the game, one needs to first insert the game in the console and then plug an official cartridge on top. The CIC bus lines are forwarded from Noah's towards the official game's CIC! ROM: INSTRUCTIONS & ASSETS I was unable to find a list of all SNES games with their ROM size. So I made my own (the ROM usage is a (bad) estimate based on the zipped ROM size which removes most of the zero padding[1]). That is 3,378 titles (across USA/Japan/Europe) presented in the chart below. Games ROM size used to be expressed in bits instead of bytes. Zelda III, for example, was not advertised as 706,107 bytes but the size of its ROM in bits, (1,048,576 * 8) 8Mb. The largest game ever released was Star Ocean (48Mb) while a masterpiece such as Super Mario World used a single (524,288 * 8) 4Mb ROM (but roughly fit in 346,330 bytes). If you don't want to click on the .csv, here are the most noteworthy games (feel free to scream me an email if your favorite game is not in the list). Game ZoneMbEstimated ROM usage (bytes) Star Ocean Japan 48 5,305,704 Tales of Phantasia Japan 48 4,597,214 Street Fighter Alpha 2 USA 32 3,656,898 Street Fighter Zero 2 USA 32 3,664,837 Chrono Trigger USA 32 3,082,289 Super Street Fighter II USA 32 2,831,690 Donkey Kong Country USA 32 2,580,703 Super Metroid USA 16 1,571,143 Secret of Mana USA 16 1,346,021 Street Fighter II USA 16 1,322,550 Super Mario World 2 - Yoshi's Island USA 16 1,287,021 Mega Max X2 USA 8 1,005,245 Aladdin USA 8 828,576 Teenage Mutant Ninja Turtles IV USA 8 808,998 Contra III - The Alien Wars USA 8 753,444 Legend of Zelda, The - A Link to the Past USA 8 706,107 Star Fox USA 8 622,583 Super Mario Kart USA 4 354,207 Super Mario World USA 4 346,330 F-Zero USA 4 290,893 SRAM Some titles offered the ability to save progress. This was done by having a SRAM chip powered by a battery. The SRAM went into low-power mode when the console was turned off to reduce the drain. Source (snescentral.com). Zelda III PCB In this Zelda III PCB above, we find the CIC (D413A) mentioned previously in U4. In U1, 0x80000 = 524,288 bytes of ROM. In U2, a LH5268AF-10TLL, 64 Kbits (8 KiB) of SRAM. In U3 the MAD-1 chip is a Memory Address Decoder which arbitrates access to the ROM/RAM[2][3]. ENHANCEMENT PROCESSORS The most famous enhancement processor is the Super FX (a.k.a \"MARIO\", a.k.a \"GSU-1\") which was used for Starfox in 1993. But EC chips were used prior to this date. A complete list of Enhanced SNES games is available on wikipedia and snescentral.com. In total, 13 ECs powered 72 games. ENHANCEMENT PROCESSORS: SA-1 The \"Super Accelerator 1\" is the MVP of the Enhancement Chips. Included in 34 carts[4], it is a 65C816 CPU (the same as the one in the SNES) but running 4x faster at 10.74 MHz. It also features 2KiB of SRAM and an integrated CIC[5]. Source (snescentral.com). Super Mario RPG PCB Above, a Mario RPG PCB. Notice the absence of CIC chip (since the SA-1 has one), a ROM chip in U1 containing the game instructions and assets, a SRAM chip in U2 (with an integrated decoder which void the needs for a MAD-1), and the SA-1 in U3. Notice there is no oscillator since the SA-1 uses the System Master clock line from the cart port and halves it internally. The result is a 21.4772700 MHz / 2 = 10.74 MHz frequency. How does it work? We can find the full description in the SNES Developer Documentation Volume II[6]. Upon startup, the SA-1 is in \"stop\" state. The SNES CPU creates a Reset Vector and resumes the SA-1. The initial SA-1 Instruction Pointer is retrieved from that dedicated Reset Vector. The SA-1 has three modes of operations named Accelerator, Parallel Processing, and Mixed Processing. In the most powerful configuration, it makes the overall system five times more capable. The SA-1 CPU and the Super NES CPU operate simultaneously, which results in five times greater performance of the Super Accelerator System (SAS) over the current Super NES. - Super Nintendo Developer Manual Book II[7] Thanks to the improved processing, the SNES is able to animate and detect collisions on all 128 sprites available in the PPU. The horsepower also allowed to transform sprites on the fly (rotate/scale them) and write them back into the PPU VRAM. The dramatic improvements were demonstrated in a Nintendo SA-1 demo cart[8]. SA-1 enthusiasts further demonstrated the performance difference. The video below compares execution of sort algorithms using a LoRom (the cheapest cart to manufacture), a HiRom (a cart with faster ROM resulting in fewer wait-state inserted when the CPU accesses the bus), and a SA-1. The SA-1 has also been used by the retro-gaming community to improve the game-play of past games suffering slowdown. Amazing projects such as Eliminating slowdown in Super Mario World, Gradius III slowdown removal (took three months of work[9]) and Contra III slowdown removal[10] are works of beauty. Even Super Mario World[11] got the treatment (I can't remember slowdowns but I was only twelve back then). Super R-Type (SNES) - Original x SA-1 Comparison. Contra III (SNES) - Original x SA-1 Comparison. Gradius III - SNES Original x SA-1 Comparison[12]. Gradius III (SNES) - Original x SA-1 Comparison. The process of converting a title to SA-1 seems fairly involved, requiring in particular to remap RAM/ROM accesses. This is puzzling since the documentation of the SA-1 states that \"The SNES and the SA-1 uses the same memory mapping\"[13]. If you know why, please shot me an email. Efforts to automatize the remapping and sa1-ize more SNES games were underway as recently as 2019 via the SA-1 Collection Project[14]. ENHANCEMENT PROCESSORS: CX4 The CX4 is Capcom's baby powering both Mega Man X2 and Mega Man X3. It is capable of 3-D wire-frame rendering and numerous math operations along with scaling and rotating sprites into the VRAM[15]. You can find examples in MMX2 intro or in MMX2 boss fights. Most associate it with wire-frame effects but it most definitely is not used for just that. It provides sprite functions, wire-frame effects, Propulsion, Vector. triangle, trigonometric functions and result tables and coordinate transform functions. In MMX2 and MMX3, it handles all sprites, so it's literally used throughout the entire game. This basically allows for more sprites on-screen than the SNES would otherwise allow without flicker. I think this is how some of the large bosses like the intro bosses are done. - Source[16] Source (snescentral.com). Mega Man X2 PCB Above, the Mega Man X2 PCB. Notice the copy protection CIC in U4, 8M (8 Mbis = 1MiB) ROM containing game instructions and assets in U1, more ROM in U2, and the CX4 in U3. Notice the 20Mhz oscillator in X1 since the CX4 does not use the console Master Clock. ENHANCEMENT PROCESSORS: CS-DD1 The DD1 is a sprite decompression chip, able to feed picture processing unit VRAM directly (and a little bit more[17]). It was used in two games, Star Ocean and Street Fighter Alpha 2. The DD1 was rumored to be responsible for Street Fighter Alpha 2 blank before a round started. The reason was detailed by Modern Vintage Gamer[18]. It turned out the problem was transferring sound samples to the DSP RAM. Source (snescentral.com). Street Fighter Alpha 2 PCB The simplest PCB we will look at today, Street Fighter Alpha 2 ships with a lot of ROM in U1 (4 MiB) and the DD1 to decompress assets on the fly. Notice how there is no CIC so it is integrated into the DD1. ENHANCEMENT PROCESSORS: DSP-1 The series of DSP chips supports nineteen titles. The DSP-1 accounts for sixteen of them, in particular classics like Super Mario Kart and Pilotwings[19] The name is poorly chosen since DSP stands for Digital Signal Processor but they do not operate on a continuous signal like most DSPs. The chip is extensively documented in the Super Nintendo Developer Manual Book II[20]. In these pages, we learn that it works in blocking mode (the CPU does nothing while the DSP operates). The Super NES CPU waits while DSP1 processes data, before sending the next data. - Developer Manual[21] The DSP offers instructions such as fast 16-bit multiplication, inverse, sin/cos projection, vector size, rotation and so on which were obviously paramount to program the HDMA and update the 3D view in Mode 7[22]. Source (snescentral.com). Super Mario Kart PCB Above, a packed Mario Kart PCB which leverages every component we learned about so far. There is an external CIC in U5, a ROM in U1, SRAM to save games in U3, and finally a MAD-1 address decoder for ROM/RAM addressing in U4. Of course to allow savegame to survive console power off, we find a battery in the upper left. Like the CX4, the DSP does not use the Master Clock from the cart line. Instead it requires an oscillator (found here in X1). The resulting frequency is 8 MHz. DSP-1 powered game Pilot Wings was \"improved\" when enthusiasts found out the game used texture at much higher resolution than Mode 7 could display. bsnes was modified to give Mode 7 an HD resolution for the result below. There were three versions of the DSP-1 named DSP-1, DSP-1a, and DSP-1b. While introducing bug fixing and improving the process, the chip behavior was slightly altered which resulted in planes in Pilot Wings demo crashing into the ground (as unveiled by Foone[23]). ENHANCEMENT PROCESSORS: DSP-2 Used in a single game (Dungeon Master) to convert the Atari ST routines. It seems that it was mostly to help scaling sprites as seen here. ENHANCEMENT PROCESSORS: DSP-3 Used in a single game (SD Gundam GX). ENHANCEMENT PROCESSORS: DSP-4 Used in two games (Top Gear 3000 and The Planet's Champ TG 3000). ENHANCEMENT PROCESSORS: OBC-1 The OBC-1 was used in a single game Metal Combat: Falcon's by Revenge Intelligent Systems. It was rumored to be used to manipulate sprites. However this is debated on nesdev.org. It's essentially a very, very simplistic save RAM mapper. It helps build OAM (sprite) tables in RAM (without the need for bit manipulation), that are then DMA'ed into OAM memory. Honestly, it seems like a serious waste of an engineering effort. It should be a weekend project for an experienced programmer to remove the need for the chip entirely. [...] I think the biggest justification for it was the anti-piracy benefits. - Near[24] Source (snescentral.com). Metal Combat: Falcon's Revenge PCB In Metal Combat's PCB we find the OBC1 in U4. There is a CIC in U6, an address decoder MAD-1 in U5, the game assets ROM are in U1 and U2, the 8KiB SRAM to save games is in U3, and finally the battery to power the SRAM is in the upper left. ENHANCEMENT PROCESSORS: S-RTC S-RTC is a chip to keep track of real-clock time used in a single title, Daikaijuu Monogatari II. It is unclear why Hudson Soft developers needed to keep track of real-time. Perhaps to display it to players? Source (snescentral.com). Daikaijuu Monogatari II PCB CIC in U6, S-RTC in U5, MAD-1 in U4, Lots of ROM in U1 and U2, 8 KiB SRAM for savegames in U3, and the battery to power it in the upper left. ENHANCEMENT PROCESSORS: SPC7110 A data decompression chip by Epson, used in three games: Tengai Makyou Zero, Momotaro Dentetsu Happy, and Super Power League 4 which also has real-time clock capability. Source (snescentral.com). Tengai Makyou Zero PCB A novelty above is the R1513 in U5 which protects the SRAM from voltage spikes when the power is turned on and off. The SRAM is actually in U3 (8KiB), the CIC (F411B) is in U7, two huge ROM are in U1 and U2. Finally, the SPC7110 is in u4. ENHANCEMENT PROCESSOR: ST-010 The ST series of chips from SETA Corporation were reportedly aimed at improving game AI. The ST-010 was used in a single game (Exhaust Heat 2 - F1 Driver he no Kiseki)[25] Source (snescentral.com). \"Exhaust Heat 2\" PCB The CIC (D411A) is in U4. We find the ROM in U1, the ST010 is in U2, notice the X1 22Mhz oscillator to clock it. Finally, a novelty is the 74LS139 in U4 which is like a MAD-1 address decoder. ENHANCEMENT PROCESSOR: ST-011 Also used in a single game, Hayazashi Nidan: Morita Shougi[26] ENHANCEMENT PROCESSOR: ST-018 Used only in Hayazashi Nidan Morita Shougi 2. It seems to be an ARM CPU with internal ROM containing its instructions[27]. ENHANCEMENT PROCESSORS: SUPER GFX-GSU1 The GSU-1 was used in five games (Star Fox, Stunt Race FX, Vortex, Dirt Racer, and Dirt Trax FX. Of all the Enhancement chips, it is the most documented with wikis, tutorials[28] and the Super Nintendo Developer Manual Book II[29]. Clocked at 10.74 MHz (master clock 21.47 MHz, halved internally), it is able to run without starving the SNES CPU thanks to an internal 512 byte instruction cache[30]. After it is done working on its task, it can interrupt the console's CPU (C-CPU). While the SNES PPU1/PPU2 are tilemap/sprite oriented, the Super-GFX excels at rendering pixels and rasterizing polygons. It usually renders into a framebuffer located on the cart. The content of the framebuffer is transferred to the VRAM during VSYNC[31]. Source (snescentral.com). Star Fox PCB In the PCB above, we see the GSU-1 (the M.A.R.I.O, Mathematical, Argonaut, Rotation, Input/Output) chip in U3, a CIC in U5, 74LS139 (the equivalent of a MAD-1) in U4, the game code and assets in the U1 ROM. The odity is that we find SRAM in U2 ....but no battery to power it when the console is turned off. That is because the (256/8 = 32 KiB) SRAM is \"partially dedicated for SuperFX framebuffer storage\"[32]. Like the SA-1, the SNES community is investing time in the GSU-1 via projects such as the Project Super FX[33] to improve past titles as much as possible. ENHANCEMENT PROCESSORS: SUPER GFX-GSU2 The GSU-2 is a GSU-1 running at full speed, a.k.a 21.47 MHz. It was used in three games Super Mario World 2: Yoshi's Island, DOOM, and Winter Gold. The power gain from not having its clock halved is demonstrated by (once again) enthusiasts who swapped the GSU-1 for a GSU-2 on a Star Fox cart. The author of DOOM for SNES, Randy Linden, did not have access to any documentation about the GSU chip or even DOOM source code. He reverse engineered all of it[34]. Randy did a superb job since this is the only console port able to use the PC levels (other consoles had to simplify the geometry). Source (snescentral.com). Super Mario World 2: Yoshi's Island PCB Super Mario World 2 uses the GSU-2 mostly for sprite scaling and stretching (sprites are manipulated and written back into the PPU VRAM[35]). See for example, Yohshi's Island rolling boulder sequence. This PCB has a battery so the SRAM is used for both hosting the framebuffer and save game state. Oddly, we find an X1 oscillator which should not have been necessary since the GSU-2 could have used the Master Clock. Could it be a voltage issues[36] Of course the SNES community has tinkered with GSU-2 titles. DOOM, the most polygons heavy title, was overclocked to 32Mhz which increased the framerate from 10-11 to 14-15 fps[37]. ENHANCEMENT PROCESSORS VS EMULATOR COMMUNITY If EC greatly improved the player experience and reduced the cost for publishers, they would become a thorn in the side of emulator authors in later years. Some games, relying on peculiar ECs, were only properly emulated in 2012[38]! In the early days, games such as SF2 Alpha were \"emulated\" by requiring pre-decompressed sprites \"graphic packs\" since the internals of the DD1 were unknown. Great effort went into reverse engineering. Some of the chips had hard-coded functions requiring de-capping. Some (like the ARM based ones) had internal ROM storing their instructions. These require emulators to be provided a BIOS file[39]). Even as of 2020, the emulation of some of the most obscure chips has still not been completed[40]. REFERENCES ^ [ 1] Estimating based on zip size was a bad idea. A better way would be to unzip, and count zero byte padding at the end of the file. I will update asap. ^ [ 2] The SNES Cartridge, Briefly Explained ^ [ 3] MAD-1 pins ^ [ 4] List of games using the SA-1 chip ^ [ 5] SA-1 (wikipedia) ^ [ 6] Super Nintendo Developer Manual Book II: SA-1 ^ [ 7] Super Nintendo Developer Manual Book II: SA-1 1.1.2 ^ [ 8] The SA-1 Demo cartridge has been dumped ^ [ 9] The SA-1 Collection Project ^ [10] Contra III Slowdown Removal ^ [11] Eliminating slowdown in Super Mario World ^ [12] 28 years later, hacker fixes rampant slowdown on SNES‘ Gradius III ^ [13] Super Nintendo Developer Manual Book II: SA-1 1.1.4 ^ [14] The SA-1 Collection Project ^ [15] Capcom Cx4 - Hitachi HG51B169 ^ [16] How does Capcom's CX4 chip compare to the Super FX chip? ^ [17] CS-DD1 ^ [18] A closer look at Street Fighter Alpha 2 on the Super Nintendo ^ [19] Games that use DSP1 / 1A / 1B ^ [20] Super Nintendo Developer Manual Book II: DPS-1 ^ [21] DSP1 DR Register ^ [22] DSP-1 command summary ^ [23] Today's weird discovery ^ [24] metal combat chip (OBC-1) question ^ [25] ST010 ^ [26] ST011 ^ [27] It appears I was able to dump the ST-0018 program ROM ^ [28] Super NES Programming/Super FX tutorial ^ [29] Super Nintendo Developer Manual Book II: Super-FX ^ [30] SNES GSU-1 Theory of Operation ^ [31] Super FX FAQ ^ [32] Star Fox SHVC-1C0N5S-01 information page ^ [33] It's time to push SNES to the limits ^ [34] Game Engine Black Book: DOOM ^ [35] Could the Super FX 1 Chip Scale sprites? ^ [36] SuperFX GSU-1/GSU-2 pinout ^ [37] Doom SNES 32MHz overclock ^ [38] It appears I was able to dump the ST-0018 program ROM ^ [39] Why does the 'Mesen-S' SNES emulator require a separate DSP ROM ^ [40] Mesen-S - SNES Emulator, SPC-7110 emulation *",
    "commentLink": "https://news.ycombinator.com/item?id=40111274",
    "commentBody": "Inside the Super Nintendo cartridges (fabiensanglard.net)168 points by zdw 6 hours agohidepastfavorite33 comments hooby 5 minutes agoI wonder what you could do with modern tech, exploiting that ability of having \"enhancement chips\" in the cartridge. The SuperFX is mentioned to have it's own framebuffer and copy the whole thing over to VRAM. Does that mean, it would technically be possible to put some ridiculously overpowered SoC into an cartridge, and use that to render modern graphics (at SNES resolutions), copying the resulting frames back into the SNES VRAM? What are the limitations there? reply MenhirMike 4 hours agoprevI do really like how cartridges on the old systems were essentially equivalent to a PCI Expansion Card in a PC. It was directly connected to the Bus and could do essentially anything. Sadly, that practice ended after the GameBoy Advance, and everything since the Nintendo DS has been purely data storage. This leads to crazy modern enhancements like a Raytracing chip[1], or the MSU1 enhancement chip that is AFAIK not available as an actual physical chip, but only in software emulators. But it would be theoretically possible to manufacture, so you could have an actual physical SNES Cartridge of Road Blaster[2]. On the article itself, I noticed that his list has \"Street Fighter Zero 2\" as a USA ROM - that should be incorrect, since Street Fighter Zero is what Street Fighter Alpha was called in Japan. So Zero 2 should just be the Japanese version of Alpha 2. (Also, thanks for linking to the MVG video that debunks the myth that the delay before each round is caused by decompression) [1] https://www.youtube.com/watch?v=2jee4tlakqo [2] https://www.youtube.com/watch?v=BvIXUOr4yxU reply evan_conway 3 hours agoparentI'm also glad the article mentioned Street Fighter Alpha 2 and linked a video about the delay fix. The patched version is super fun. reply MenhirMike 3 hours agorootparentSomebody also just recently discovered that Shin Akuma is playable on the SNES version: https://www.youtube.com/watch?v=VF2AiG2MN2I Between this and the SA-1 fixes for Gradius III and Super R-Type, we live in a golden age of improving SNES games :) reply hollow-moe 3 hours agoparentprevNow I am curious to know how some games could have an IR transmsmitter inside the cartridge like Pokemon Soulsilver, did they plan this specific usecase or a whole channel for limited cartridge expansion components ? reply MenhirMike 3 hours agorootparentThat's actually a pretty good question. The NTR-031 IR cartridges were used for a few games, and there was also one for Motion Sensors and a TV Antenna. From what I can see, it looks like even though they can't extend the functionality directly, they do still interface with the system in some way. Perhaps they are more like a device connected to a serial port would be? So far less capable than the full extension cart, but still possible to communicate with through a standardized protocol? (The DS Cartridge slot has 8 data pins rather than the full address/data bus, but seems to have a protocol: http://problemkaputt.de/gbatek.htm#dscartridgeprotocol) So, I need to correct myself, they nerfed it first with the DS, before then switching to being pure flash chips with the 3DS when they switched to XtraROM (which has potential lifespan issues: https://gbatemp.net/threads/nintendo-switch-3ds-cartridge-li...) - and that seems to not allow much custom functionality: https://www.3dbrew.org/wiki/Gamecards#Protocol (Though if someone with more knowledge can correct me, please do so. I thought that DS/3DS/Switch are pure flash chips, but was wrong at least about the DS) reply dwattttt 3 hours agorootparentprevThe interface to the gaming system might be strictly data, but you've got power supplied to the cartridge; you can put whatever hardware you can fit inside that cartridge still reply solarized 3 hours agoprevI hope developers still love to blog details with article mode like this, rather than vlogging it on YouTube. A lot of detail packed into a few kilobytes only. \"Super Mario World\" is still the masterpiece game ever. It has amazing characters, sprites, and stages packed into only 360 KB. reply Dwedit 1 hour agoparentThe file sizes given by the site are wrong. Super Mario World is 512KB, or 508KB if you discard the padding at the end. Only compressing it to ZIP format gives you a file size around 360KB. reply fabiensanglard 43 minutes agorootparentYea, after writing this I regretted using zip to estimate usage. Probably would get better number by extracting each zip and look how much zero padding is at the end of the file. WDYT? reply Dwedit 34 minutes agorootparentI think applying RLE to the file might give a better estimate, because files have blank space throughout, not just at the end. Just tried it on Super Mario World and the estimated size was 479,154 (468K) bytes. If you don't have an RLE tool handy, you can force Pucrunch to act as an RLE-only compressor by using the -r 0 switch which disables the LZ compression feature. reply justsomehnguy 24 minutes agorootparentprevJust query each archive for the total uncompressed data. While the 'real' code+data is less than the size of the banks, the banks are always ^2. reply Dwedit 22 minutes agorootparentThe goal here isn't to tell the real file sizes, the goal here is to estimate the \"effective\" file size without any padding. Padding can be at places other than the end of the file. reply wk_end 3 hours agoprevWhere do the byte counts for the various games come from? The games came on ROM chips that were, as ROM chip are wont to, sized to powers-of-two. For instance, Super Mario World was shipped on a 512kb ROM - where does 346,330 bytes come from? Are these compressed sizes? reply fabiensanglard 42 minutes agoparentThe numbers are estimates based on zipped size. But it is a bad idea. I should write a program to extract each zip, and count zero bytes padding at the end of the file. Too late for today, I will write that tomorrow and update the article. reply TapamN 2 hours agoparentprevIt looks like they're compressed sizes. If I gzip SMW.SMC, I get a 347 KB file. It's very misleading. There are other issues in there. The writer makes it sound like MVG was the one who discovered that the pause in SFA2 was from loading audio data, when it was already known LONG before his video. https://forums.nesdev.org/viewtopic.php?p=70474#p70474 He also seems very confused about the RTC. It's obviously so that the clock keeps going even when the console is off and the cartridge is unplugged, like in the GBC/GBA Pokemon games, but he says something about how it might be because of the NTSC clock drifting? ??? What? reply anthk 3 hours agoparentprevData padding. reply icodestuff 50 minutes agoprev> Even Super Mario World[10] got the treatment (I can't remember slowdowns but I was only twelve can then). Yoshi’s Island 4 has a slowdown in some circumstances (have Yoshi, get Starman and hit P-Switch), as does another level I can’t recall, exactly… it has a bunch of Monty Moles that explode all at once. I think it’s on Chocolate Island. I think there might be a third with two Sumo Bros. and an Amazing Flying Hammer Bro. onscreen. reply modeless 3 hours agoprevI'm wondering why the console CPU wasn't running at 4x the clock rate to begin with, if the cartridges could easily and cheaply include one so much better. I guess that's just how fast CPUs were improving back then. A CPU from just a few years prior was that obsolete. Crazy! reply wk_end 2 hours agoparentUnlike modern chips with cache hierarchies and the like, the 65816 is designed to run in lock step with the memory it’s accessing. A faster CPU would have necessitated faster RAM in the system and faster ROMs on the carts too. Games were expensive enough as it was, then. reply Dwedit 1 hour agorootparentN64 would be the first Nintendo home console to use a cache. Then Nintendo DS was the first Nintendo handheld to use a cache. reply VS1999 3 hours agoparentprevNintendo likes to sell its consoles at a profit, so they might have just decided that even an extra $10 per console wasn't worth it. reply qalmakka 1 hour agoprev> One of the exceptional characteristics of the Super Nintendo was the ability for game cartridges (cart) to pack more than instructions and assets into ROM chips Wasn't this true even on other Nintendo consoles? Gameboy and Gameboy Color cartridges did similar if not even more outlandish things, like the GameBoy Camera reply hnlmorg 34 minutes agoparentIt was basically true for all 16 and 8bit era consoles reply AdamH12113 3 hours agoprevIt’s impressive that developers could afford to make custom ICs for only one or two games. I wouldn’t have thought the revenue would be enough to justify that. reply rvense 1 hour agoparentGames on cartridge were quite expensive, I think. reply plugin-baby 4 hours agoprev> The author of DOOM for SNES, Randy Linden, did not have access to any documentation about the GSU chip or even DOOM source code. He reverse engineered all of it Technically this is impressive, but why was it necessary? reply MenhirMike 4 hours agoparentSome Details on the Doom Wiki (https://doomwiki.org/wiki/Super_NES): Randy Linden, the port's sole programmer, initiated the port of Doom for the Super NES on his own initially, as he was fascinated by the game. Since Doom's source code was not yet released at the time, Linden referred to the Unofficial Doom Specs as a means of understanding the game's lump layout in detail. The resources were extracted from the IWAD, with some (notably sprites such as the player's sprites and the original status bar face sprites) unused due to technical limitations. According to an interview, due to lack of development systems for the Super FX, Linden wrote a set of tools consisting of an assembler, linker, debugger, dubbed the ACCESS, on his own Amiga before beginning development of the port proper. For the hardware kit, he utilized a hacked Star Fox cartridge and a pair of modified Super NES controllers plugged into the console and connected to the Amiga's parallel port. A serial protocol was used to further link the two devices. After developing a full prototype, he later showcased it to his employer, Sculptured Software, which helped him finish the development. In the interview, Linden expressed a wish that he could have added the missing levels; however, the game, already the largest possible size for a Super FX 2 game at 16 megabits (approximately 2 megabytes), only has roughly 16 bytes of free space. Linden also added support for the Super Scope light gun device, the Super NES mouse, and the XBAND modem for multiplayer. Fellow programmer John Coffey, himself a fan of the Doom series, made modifications to the levels, but some of those modifications were rejected by id Software. reply devbent 2 hours agorootparentI was lucky enough to work with Randy for quite a few years at Microsoft. Incredible developer. He also made the Bleem! PlayStation emulator. Funny enough none of his coworkers ever bothered to look him up online until after we all stopped working together at which point we all learned we'd been working with programming royalty. reply Dwedit 1 hour agorootparentprevAlso it was recently figured out that using the SNES's mosaic feature in an unconventional way could have nearly doubled the game's framerate. reply silisili 2 hours agoprev [–] I love any and all research on these systems. It completely blows my mind that something as complex and fun as Mario Kart was only 350KB in size. You can't even get a 'hello world' binary that small for most languages today. Yeah, it's custom and tuned, but that's a lot of fun packed with at the time 'good graphics' in the size of a single low quality jpeg of today. reply WilTimSon 1 hour agoparent [–] Well, we have to account for the fact that modern system simply don't require that much optimization and compression. Working with stricter limits meant that dev teams had to get creative and minimize file size, while nowadays a single game update can be around 20 GB. reply HeckFeck 47 minutes agorootparent [–] > nowadays a single game update can be around 20 GB Irrespective of the abundance of storage we now enjoy, and even though I could rationally understand the reasons, this will always make me raise an eyebrow or sigh. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Fabien Sanglard's website provides in-depth insights into Super Nintendo cartridges, highlighting components like the CIC chip, SRAM, and enhancement processors.",
      "The site elaborates on how enhancement processors such as the SA-1 chip have influenced SNES games, showcasing the utilization of various chips for enhancing graphics and gameplay.",
      "It also covers the unique characteristics of different chips like the DSP chip and OBC-1 chip, and mentions projects like Project Super FX, while addressing emulation difficulties and the community's initiatives for improving retro gaming on the Super Nintendo console."
    ],
    "commentSummary": [
      "The article delves into Super Nintendo cartridges, detailing their evolution, hidden features, and use of IR cartridges in games like Pokemon Soulsilver.",
      "It discusses gaming cartridges' capability when connected to a serial port, file sizes of classics like Super Mario World, custom hardware, and limitations of older console CPUs.",
      "Additionally, it showcases developers' technical achievements with color cartridges for older consoles and the optimization and compression techniques of vintage video game systems compared to contemporary games."
    ],
    "points": 168,
    "commentCount": 33,
    "retryCount": 0,
    "time": 1713757908
  },
  {
    "id": 40107456,
    "title": "Simon Tatham's Puzzle Collection: Cross-Platform Gaming Fun",
    "originLink": "https://www.chiark.greenend.org.uk/~sgtatham/puzzles/",
    "originBody": "Simon Tatham's Portable Puzzle Collection Introduction This page contains a collection of small computer programs which implement one-player puzzle games. All of them run natively on Unix (GTK) and on Windows. They can also be played on the web, as Java or Javascript applets. 2023-09-20: I'm sorry to say that I'm no longer going to be able to build the MacOS version of these puzzles. My Mac was very old and had been struggling for a while; it's now stopped working, and I don't intend to buy a new one. If someone else would like to volunteer to maintain the Mac front end code and provide a downloadable application, I'll help them get started, and link to their site once it's up and running. Sorry, Mac users. In the meantime, there's always the web version... I wrote this collection because I thought there should be more small desktop toys available: little games you can pop up in a window and play for two or three minutes while you take a break from whatever else you were doing. And I was also annoyed that every time I found a good game on (say) Unix, it wasn't available the next time I was sitting at a Windows machine, or vice versa; so I arranged that everything in my personal puzzle collection will happily run on both those platforms and more. When I find (or perhaps invent) further puzzle games that I like, they'll be added to this collection and will immediately be available on both platforms. And if anyone feels like writing any other front ends for platforms I don't support (which people already have) then all the games in this framework will immediately become available on another platform as well. The games The actual games in this collection were mostly not my invention; they are re-implementations of existing game concepts within my portable puzzle framework. I do not claim credit, in general, for inventing the rules of any of these puzzles. (I don't even claim authorship of all the code; some of the puzzles below have been submitted by other authors.) Below each image are two links to versions of the puzzle you can potentially play on the web. The 'js' link (and also the puzzle image itself) links to a version based on JavaScript and WebAssembly. The 'java' link is now probably obsolete: it links to a Java applet, which most browsers don't support any more. Also below each image is a link to the Windows binary for the game, and a link to the manual. For all other platforms, the games are provided in a single bundle, so scroll down to the Download section to get them all. Black Box [ javajsmanual ] [ blackbox.exe ] Find the hidden balls in the box by bouncing laser beams off them. Bridges [ javajsmanual ] [ bridges.exe ] Connect all the islands with a network of bridges. Cube [ javajsmanual ] [ cube.exe ] Pick up all the blue squares by rolling the cube over them. Dominosa [ javajsmanual ] [ dominosa.exe ] Tile the rectangle with a full set of dominoes. Fifteen [ javajsmanual ] [ fifteen.exe ] Slide the tiles around to arrange them into order. Filling [ javajsmanual ] [ filling.exe ] Mark every square with the area of its containing region. Flip [ javajsmanual ] [ flip.exe ] Flip groups of squares to light them all up at once. Flood [ javajsmanual ] [ flood.exe ] Turn the grid the same colour in as few flood fills as possible. Galaxies [ javajsmanual ] [ galaxies.exe ] Divide the grid into rotationally symmetric regions each centred on a dot. Guess [ javajsmanual ] [ guess.exe ] Guess the hidden combination of colours. Inertia [ javajsmanual ] [ inertia.exe ] Collect all the gems without running into any of the mines. Keen [ javajsmanual ] [ keen.exe ] Complete the latin square in accordance with the arithmetic clues. Light Up [ javajsmanual ] [ lightup.exe ] Place bulbs to light up all the squares. Loopy [ javajsmanual ] [ loopy.exe ] Draw a single closed loop, given clues about number of adjacent edges. Magnets [ javajsmanual ] [ magnets.exe ] Place magnets to satisfy the clues and avoid like poles touching. Map [ javajsmanual ] [ map.exe ] Colour the map so that adjacent regions are never the same colour. Mines [ javajsmanual ] [ mines.exe ] Find all the mines without treading on any of them. Mosaic [ javajsmanual ] [ mosaic.exe ] Fill in the grid given clues about number of nearby black squares. Net [ javajsmanual ] [ netgame.exe ] Rotate each tile to reassemble the network. Netslide [ javajsmanual ] [ netslide.exe ] Slide a row at a time to reassemble the network. Palisade [ javajsmanual ] [ palisade.exe ] Divide the grid into equal-sized areas in accordance with the clues. Pattern [ javajsmanual ] [ pattern.exe ] Fill in the pattern in the grid, given only the lengths of runs of black squares. Pearl [ javajsmanual ] [ pearl.exe ] Draw a single closed loop, given clues about corner and straight squares. Pegs [ javajsmanual ] [ pegs.exe ] Jump pegs over each other to remove all but one. Range [ javajsmanual ] [ range.exe ] Place black squares to limit the visible distance from each numbered cell. Rectangles [ javajsmanual ] [ rect.exe ] Divide the grid into rectangles with areas equal to the numbers. Same Game [ javajsmanual ] [ samegame.exe ] Clear the grid by removing touching groups of the same colour squares. Signpost [ javajsmanual ] [ signpost.exe ] Connect the squares into a path following the arrows. Singles [ javajsmanual ] [ singles.exe ] Black out the right set of duplicate numbers. Sixteen [ javajsmanual ] [ sixteen.exe ] Slide a row at a time to arrange the tiles into order. Slant [ javajsmanual ] [ slant.exe ] Draw a maze of slanting lines that matches the clues. Solo [ javajsmanual ] [ solo.exe ] Fill in the grid so that each row, column and square block contains one of every digit. Tents [ javajsmanual ] [ tents.exe ] Place a tent next to each tree. Towers [ javajsmanual ] [ towers.exe ] Complete the latin square of towers in accordance with the clues. Tracks [ javajsmanual ] [ tracks.exe ] Fill in the railway track according to the clues. Twiddle [ javajsmanual ] [ twiddle.exe ] Rotate the tiles around themselves to arrange them into order. Undead [ javajsmanual ] [ undead.exe ] Place ghosts, vampires and zombies so that the right numbers of them can be seen in mirrors. Unequal [ javajsmanual ] [ unequal.exe ] Complete the latin square in accordance with the > signs. Unruly [ javajsmanual ] [ unruly.exe ] Fill in the black and white grid to avoid runs of three. Untangle [ javajsmanual ] [ untangle.exe ] Reposition the points so that the lines do not cross. Licence This game collection is copyright 2004-2021 Simon Tatham (portions copyright Richard Boulton, James Harvey, Mike Pinna, Jonas Kölker, Dariusz Olszewski, Michael Schierl, Lambros Lambrou, Bernd Schmidt, Steffen Bauer, Lennard Sprong, Rogier Goossens, Michael Quevillon, Asher Gordon and Didi Kohen). It is all distributed under the MIT licence. This means that you can do pretty much anything you like with the game binaries or the code, except pretending you wrote them yourself, or suing me if anything goes wrong. Download Here are Windows executables of the puzzle games in the collection. (On Windows only, the Net executable is called \"netgame.exe\" in order to avoid clashing with Windows's own \"net.exe\". The name of the game is still \"Net\" :-) blackbox.exebridges.execube.exedominosa.exefifteen.exe filling.exeflip.exeflood.exegalaxies.exeguess.exe inertia.exekeen.exelightup.exeloopy.exemagnets.exe map.exemines.exemosaic.exenetgame.exenetslide.exe palisade.exepattern.exepearl.exepegs.exerange.exe rect.exesamegame.exesignpost.exesingles.exesixteen.exe slant.exesolo.exetents.exetowers.exetracks.exe twiddle.exeundead.exeunequal.exeunruly.exeuntangle.exe Here is a Windows help file. If you install this in the same directory as the executable files, then each game should display a \"Help\" menu giving help about the game collection in general and that game in particular. You can also browse the same documentation online in HTML format. puzzles.chm Here is a .zip file containing all of the above Windows binaries and the help file. puzzles.zip Here is a Windows MSI installer. puzzles-version-installer.msi (This MSI installer is unfortunately not inter-compatible with the old Windows executable installer package I used to provide here, so if you still have the old one installed, you'll have to uninstall it before installing the MSI version. Sorry about that.) Here is a source archive of the collection, which should allow you to compile the games on any Unix system supporting GTK. (At least, I hope so; I've only tested it on Linux so far, and I wouldn't rule out portability issues on other types of Unix.) puzzles-version.tar.gz Some people have ported this puzzle collection to various mobile devices. Here are some links to their port pages: Port to the Palm, by James Harvey. Port to Google Android, by Chris Boyle. Port to Symbian S60, by Tiago Donizio. Port to iPhone and iPad, by Greg Hewgill. Port to Windows Store, by Lennard Sprong. Port to Rockbox, by Franklin Wei. (Note that these are third-party ports, not maintained by me. If you have trouble with one of these, you should probably follow the link to the appropriate maintainer's page and contact them about the problem in the first instance.) Here's the last version of the MacOS puzzles, in the form of a disk image, containing a single monolithic application called \"Puzzles\". You should be able to download and open the disk image, then drag the Puzzles application to wherever you feel like keeping it; it should be entirely self-contained. However, this is not being updated, because my Mac build machine doesn't work any more. Puzzles.dmg, as of 2023-09-20 Development All of these puzzles are written in C, with a porting interface so that the same back-end puzzle code can talk to wildly different graphical front ends. The source archive above includes native GUI front ends for Windows and Mac OS X, an X front end using the GTK+ library, and a mixed C/Java front end for compiling the puzzles into Java applets using NestedVM. There is extensive developer documentation describing the cross-platform interfaces. If you want to write a new puzzle or a new front end (to make all these games run on another platform), this is probably the place to start. If you want to see the latest state of development, you can check the development sources out from my git repository: git clone https://git.tartarus.org/simon/puzzles.git Alternatively, you can browse the repository on the web, here. Feedback Please report bugs to anakin@pobox.com. If your bug report involves a particular puzzle being faulty (if you think it has no solution, or more than one solution), please send a saved game file if possible, using the ‘Game > Save’ menu option, or equivalent. Saved game files are much more useful (and smaller) than graphical screenshots: they contain all the information I need to reproduce the game generation and find out what went wrong. If you can't do that (e.g. if you're playing on the web, which has no save-game feature), please at least copy and paste both the random seed and the game description (from the ‘Random Seed’ and ‘Specific’ menu options, or the ‘Enter game ID’ and ‘Enter random seed’ buttons in the Javascript games). Also, you might find it helpful to read this article before reporting a bug. Patches are welcome. (comments to anakin@pobox.com) (thanks to chiark for hosting this page) (last modified on Sat Mar 30 01:40:21 2024)",
    "commentLink": "https://news.ycombinator.com/item?id=40107456",
    "commentBody": "Simon Tatham's Portable Puzzle Collection (greenend.org.uk)168 points by r2b2 16 hours agohidepastfavorite44 comments rustcleaner 13 hours agoI install this on everything. It is really really good, and IMO the way more games should be made: make a fast simple windowmanager friendly interface presenting puzzles and games in a very pure and unencumbered form. Another example: I love SimCity 2000 for Win95, but not SimCity 3000 or SimCity 4. Why? Wright did 2000 right, the post-EA SimCities were all full screen flashy playskool interface monstrosities. 3000 brought some cool features in, but I wish they had kept to a 2000-like interface. My ideal games look something like Siemens PLM NX or something, and less like a one-armed bandit in Vegas. reply casenmgreen 3 hours agoparentSC2K had a beautiful interface, I concur, but it was broken as a sim, because of how transport was simulated. Paths were drawn, kind of like ray-traced, from each tile, and at a junction, a random route was taken. There was no directiveness. So for example if you made a little group of roads as a 3x3 set of tiles, practically no routes would exit before timing out by travelling too far, because they would keep taking random exits, and so stay within the 3x3 set of road tiles. As such, you could not build a natural, normal transport system - for example, a central ring road or subway, with routes radiating outwards off of the ring. The only way to build a viable city was to understand how the transport sim worked, and then build a transport layout to fit how it worked. reply II2II 9 hours agoparentprevAlong similar lines, I really enjoyed shapez. Please forgive the blasphemy here, but I never could get into Factorio even though many of the mechanics are similar. (The former allowed me to focus on game play. The latter was a little too grim for my liking.) reply MForster 4 hours agorootparentIs it because of the enemies? FWIW, you can turn them off. I always play with them disabled. Just not what I'm interested in. You might enjoy that, too. I also enjoyed shapez, but it's no comparison to the depth of Factorio, especially with mods. reply enasterosophes 11 hours agoprevI really like loopy. It has a very stat mech or discrete math feel. I think it could be used to introduce deeper concepts in mathematics to novices, such as proofs, and the question of whether mathematics is constructed or discovered. A lot of the time solving loopy involves noticing re-usable patterns. But how do you know a possible pattern is re-usable? Well, you can prove it, such as with notions from graph theory. The construction vs discovery aspect could be approached in a couple of ways. On the one hand, the loop that you are \"discovering\" is really only induced by the underlying solutions which the computer has already \"constructed.\" On the other hand, the computer only created the hidden solution using mathematics which was discovered. And on the other other hand, the mathematics which we \"discover\" is arguably induced by the ZFC etc axioms which we have constructed because of their ability to model consistent reasoning. Other sets of axioms, lacking the flexibility or consistency which we expect from our mathematical models, were discarded, yet would induce different mathematical systems capable of discovery. And the nesting of construction and discovery into each other could continue even deeper ... reply Arainach 11 hours agoparentFor more variations, research papers, implementations, etc. search for its canonical name `Slitherlink`. reply hirsin 7 hours agorootparentThere's an excellent Android version of Slitherlink with multiple variants, well worth the couple bucks to unlock unlimited games beyond the initial couple hundred. reply opminion 14 hours agoprevThe Android version worked very well when I installed it year ago. It was a great choice for someone who does not want to have addictive games installed in the phone, while at the same time enjoy the occasional brain teaser. reply viernullvier 13 hours agoparentI have to vehemently disagree with you here - the Android version is the main reason why I needed to set a \"no phone in the bedroom\" rule for myself. reply fanf2 12 hours agorootparentSimon likes to joke that the time wasted on his puzzle collection has surely cancelled out all the productivity benefits from PuTTY. reply slig 12 hours agoprevShameless plug: if you enjoy logic puzzles, check out my new puzzle website: https://www.zebrapuzzles.com which was recently posted on Show HN [1]. It's playable without JavaScript. [1]: https://news.ycombinator.com/item?id=39765519 reply tromp 1 hour agoprevPrevious discussions 2 years ago [1] and 7 years ago [2] [1] https://news.ycombinator.com/item?id=32170592 [2] https://news.ycombinator.com/item?id=14232692 reply RheingoldRiver 13 hours agoprevBridges (aka \"Hashi\") is one of my all-time favorite logic puzzles. I recently discovered Galaxies, and I enjoy this one a lot too; I also like Slitherlink (called \"Loopy\" here) a lot. However this site is missing two that I like quite a bit more, which are Paint by Numbers & Battleships, both of which I originally started doing in Games Magazine and later found on Conceptis Puzzles [0] (they call PbN \"Pic-A-Pix\") where I bought $25 worth of credits maybe 20 years ago that have still kept me going to this day, every couple years I'll buy a week's puzzle bundle and then slowly go through them. The other one I used to play a lot is Mamono Sweeper [1] One summer in undergrad when I was supposed to be doing graph theory research, instead I got really, really, really good at basic arithmetic by playing this game for 5+ hours a day. This is how I learned that I had no interest in math grad school and I now work as a developer in a video game-adjacent space. Recently I made an online Pentominoes puzzle [2] and I've played it a lot also. If anyone knows a good source of free Paint by Numbers puzzles I would love to hear about it! [0] https://www.conceptispuzzles.com/ [1] https://hojamaka.com/games/mamono_sweeper [2] https://pentominoes.river.me reply tangus 6 hours agoparentSGT's Puzzle Collection does have a limited version of \"Paint by Numbers\". It's limited tho: only abstract patterns in black and white. It's called \"Pattern\". reply thaumasiotes 5 hours agoparentprevhttps://nonograms-katana.com seems to have quite a few? I found it by searching for the much more common name \"picross\". reply Y444 4 hours agorootparentPicross is somehow ended up being a trademark of Nintendo iirc reply thaumasiotes 4 hours agorootparentTrademarking a generic term (that is descriptive of your product) has no legal relevance, even if the term is not generic at the time you trademark it. reply votiv 12 hours agoparentprevI am quite addicted to Suguru puzzles. I hope Simon gets to implement them some time. reply leni536 13 hours agoprevIt has the best version of minesweeper, where every board is solvable. reply ooterness 11 hours agoparentThere was a Minesweeper variant called Kaboom, where you're playing against a computer that's trying to make you lose. The computer has to comply with all revealed information, but if you ever make a guess, no matter how improbable, it's have over. https://pwmarcz.pl/blog/kaboom/ Previous discussion on HackerNews: https://news.ycombinator.com/item?id=21883875 reply omoikane 9 hours agorootparentThere is also Yusuke Endoh's version, where the only thing you do is guess. Computer will automatically mark all the spots where it has enough information to make an inference. https://mame.github.io/minesweeper-spoiled-by-ai/ reply sph 2 hours agorootparentprevI also like Mosaic, a variant of Minesweeper: https://www.puzzle-minesweeper.com/mosaic-5x5-easy/ reply rahimnathwani 5 hours agorootparentprevThis reminds me of absurdle: https://qntm.org/files/absurdle/absurdle.html reply ygra 5 hours agorootparentOr the more evil version: https://dontwordle.com/ reply kevindamm 5 hours agoparentprevIt also has a glaring wart in its API because of Minesweeper needing to allow the first click before deciding the layout of the puzzle. I've sometimes thought of adding a puzzle to this collection but I would actually rather refactor everything to remove that wart. It would involve turning Minesweeper into a game with a foyer, but probably worth doing? Also, I thought the modern Windows version of minesweeper did the same first-click-is-free logic? reply viernullvier 13 hours agoparentprevYou can also swap primary and secondary clicks (at least in the Android version), which makes it the fastest on touchscreens as well. reply dsvf 11 hours agorootparentEven better, the latest release from a few weeks ago lets you manually set the delay for long press. I've set it for 100ms and can now blaze through mines even faster. But that guaranteed solvable makes it so much better than nondeterministic minesweeper as well. reply mmastrac 14 hours agoprevThese are pretty basic to advanced brain puzzles, but there's a few gems in there. Magnets is a lot of fun. Net, Signposts and Tracks are clever puzzles. There was one other one in there I used to enjoy but I can't recall which one it was (maybe Pattern?). They're all about on-par with the level of exciting-ness of Minesweeper and Sudoku. Take that as you wish. reply ink_13 7 hours agoprevI have played a lot of Pearl, and almost as much Unruly and and Keen. I find a custom-sized Pearl board so that it fills as much of my phone screen as possible without getting teeny is just the right length to fill a minute or two. I wanted to play even bigger boards on my tablet, but it seems the puzzle generation algorithm is exponential and asking for a too-big board will crash the app. reply navane 1 hour agoparentPearl is my favorite too. I didn't understand the rules described, so I started with figuring out the rules by checking move viability. It still has the strangest ruleset in my opinion: \"Black dots go in corners that are attached too straights, white dots go on straights that are next to at least one corner.\" reply neilv 11 hours agoprevSGT's puzzles has gotten me through so many waiting rooms, from the Nokia E61, onwards. Today, with reliable Internet on my phone, I could instead scroll Fediverse or something, but I figure blazing through puzzles using rules I've learned is more meditative. reply rtpg 4 hours agoprevIn a similar vein PUZ-PRE is a pencil puzzle JS library supporting loads of Nikoli puzzle types. Loads of puzzle makers make stuff with it. Puzz.link also includes a database of links to puzzles people are playing. For people looking to feel old fashioned, printing out some random puzzles on puzz.link and doing them on pen and paper is sometimes satisfying [0]: http://pzv.jp/ PUZ-PRE [1]: https://puzz.link/ puzz.link reply wespad 12 hours agoprevEvery general purpose Linux desktop I setup gets Simon Tatham's puzzles and all of Kenta Cho's and Jason Rohrer's games. reply Y_Y 12 hours agoparentKenta Cho - https://www.asahi-net.or.jp/~cs8k-cyu/ Jason Rohrer - https://hcsoftware.sourceforge.net/jason-rohrer/ Do distros package these? They should! reply wespad 12 hours agorootparentIndeed they do. At least the Debian-based distros, like Ubuntu and Mint. reply V__ 10 hours agoprevHere is a nice version of those puzzles, but more responsive: http://medmunds.github.io/puzzles/ reply eru 10 hours agoparenthttps://www.puzzle-bridges.com/ also has a lot. reply sph 2 hours agorootparentLove those from Puzzle Team. Any recommendation for an iOS app with this many curated puzzles, possibly without annoying ads or in-app purchases? reply eru 1 hour agorootparentSome of the Puzzle Team's puzzle work ok-ish in a web-browser on mobile. (You can pay them a dollar a month to remove the ads.) reply omoikane 10 hours agoparentprevLooks like this version is lagging behind slightly (doesn't have \"Mosaic\" yet), and the \"custom\" game types are not available. reply th4tg41 10 hours agoprevAt least on Android some games are flawed. Never played them on another system. For example Flood can be solved in less turns than the 'calculated' minimum. reply devilbunny 8 hours agoparentThat’s not a calculated minimum. It’s a generous maximum; less-than-optimal play can still win. reply 3836293648 13 hours agoprevI install these on everything and play them to procrastinate all the time. The only issue is that they break entirely with 200% DPI reply viernullvier 13 hours agoprev [–] This was one of the first games I installed on my very first Android phone, the Motorola Milestone. 15 years later, I'm still playing it nearly every day. I'm a bit disappointed though that the original desktop version doesn't really play nicely on touchscreens. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Simon Tatham's Portable Puzzle Collection offers one-player puzzle games playable on Unix, Windows, and the web through Java or Javascript applets.",
      "The collection provides re-implementations of known game concepts and is downloadable as Windows executables, with access to the source code for compilation on Unix with GTK support.",
      "Users can send feedback and bug reports to the developer, and third-party versions for different mobile devices are also available."
    ],
    "commentSummary": [
      "Users engage in discussions about puzzle interfaces, mechanics, favorite games, and experiences, touching upon mathematical aspects related to ZFC axioms and sharing tips for quick puzzle-solving.",
      "Some users have developed their online puzzles and seek suggestions for comparable games, while conversations encompass a range of puzzle games across platforms and proposed enhancements for current ones."
    ],
    "points": 168,
    "commentCount": 44,
    "retryCount": 0,
    "time": 1713720332
  }
]
