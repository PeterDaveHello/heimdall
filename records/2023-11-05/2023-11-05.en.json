[
  {
    "id": 38141366,
    "title": "Computational Solution for Othello Uncovered: Game Can Always Lead to a Draw with Perfect Play, Says Scientist Hiroki Takizawa",
    "originLink": "https://arxiv.org/abs/2310.19387",
    "originBody": "Skip to main content We gratefully acknowledge support from the Simons Foundation, member institutions, and all contributors. Donate > cs > arXiv:2310.19387 HelpAdvanced Search All fields Title Author Abstract Comments Journal reference ACM classification MSC classification Report number arXiv identifier DOI ORCID arXiv author ID Help pages Full text Search Computer Science > Artificial Intelligence [Submitted on 30 Oct 2023] Othello is Solved Hiroki Takizawa The game of Othello is one of the world's most complex and popular games that has yet to be computationally solved. Othello has roughly ten octodecillion (10 to the 58th power) possible game records and ten octillion (10 to the 28th power) possible game position. The challenge of solving Othello, determining the outcome of a game with no mistake made by either player, has long been a grand challenge in computer science. This paper announces a significant milestone: Othello is now solved, computationally proved that perfect play by both players lead to a draw. Strong Othello software has long been built using heuristically designed search techniques. Solving a game provides the solution which enables software to play the game perfectly. Subjects: Artificial Intelligence (cs.AI) Cite as: arXiv:2310.19387 [cs.AI](or arXiv:2310.19387v1 [cs.AI] for this version) https://doi.org/10.48550/arXiv.2310.19387 Focus to learn more Submission history From: Hiroki Takizawa [view email] [v1] Mon, 30 Oct 2023 09:48:50 UTC (1,936 KB) Access Paper: Download PDF Other Formats Current browse context: cs.AInewrecent2310 Change to browse by: cs References & Citations NASA ADS Google Scholar Semantic Scholar Export BibTeX Citation Bookmark Bibliographic Tools Bibliographic and Citation Tools Bibliographic Explorer Toggle Bibliographic Explorer (What is the Explorer?) Litmaps Toggle Litmaps (What is Litmaps?) scite.ai Toggle scite Smart Citations (What are Smart Citations?) Code, Data, Media Demos Related Papers About arXivLabs Which authors of this paper are endorsers?Disable MathJax (What is MathJax?) About Help Contact Subscribe Copyright Privacy Policy Web Accessibility Assistance arXiv Operational Status Get status notifications via email or slack",
    "commentLink": "https://news.ycombinator.com/item?id=38141366",
    "commentBody": "Othello Is Solved?Hacker NewspastloginOthello Is Solved? (arxiv.org) 558 points by Tepix 19 hours ago| hidepastfavorite247 comments sdwr 19 hours ago> Next, we selected 2,587 positions out of the aforementioned 2,958,551 positions and formulated hypotheses regarding their outcomes. We chose them such that if all these hypotheses were proven correct, it would prove that the initial position results in a draw.But no elaboration? Sounds to me like the game is not solved, instead the author looked pretty hard for a winning line, and didn&#x27;t find one. reply CSMastermind 16 hours agoparentI also got confused at this part. I&#x27;ve now read the paper twice and I&#x27;m not sure I understand their method. Overall the way the paper is written is not straightforward.It&#x27;s possible the author is correct, I&#x27;d need to really sit down and try to work out their reasoning but at first pass I&#x27;m skeptical. reply missblit 18 hours agoparentprevI only skimmed it, but it looks like they described this to me.The next sentence:> Although there are numerous ways to select subsets that would prove the initial position results in a draw, we used algorithm 1 to obtain a small subset.Algorithm 1:> We developed an algorithm that requires predictive scores for all positions with 50 empty squares and returns a subset such that if the all positions belonging to that subset are solved, and the all solutions match the predictions, the initial position is consequently solved. It was described as Algorithm 1.(The algorithm is also printed out) reply sdwr 17 hours agorootparentAlgorithm 1 doesn&#x27;t say shit! It says \"pick the best move\", or \"pick all the moves\".From start of game to 50 squares left is enumerable.From 36 moves left to end-of-game is apparently solvable.The middle is the combinatorial explosion, and he avoids explaining how he navigates it. reply notdonspaulding 16 hours agorootparent> From start of game to 50 squares left is enumerable.A nitpick, but I don&#x27;t think you meant to say \"enumerable\" here\"enumerable\" means \"able to be enumerated, or counted\"https:&#x2F;&#x2F;webstersdictionary1828.com&#x2F;Dictionary&#x2F;Enumerate\"innumerable\" means \"unable to be numbered, or counted\"https:&#x2F;&#x2F;webstersdictionary1828.com&#x2F;Dictionary&#x2F;innumerable reply sdwr 15 hours agorootparentEnumerable as in \"computationally enumerable\", or \"able to be enumerated in a reasonable amount of time x cpu x memory\"The beginning and end of the game have less possibilities to consider. The midgame has the most possible moves = hardest to calculate.If you read carefully, the midgame is the bit the author avoids explaining how to solve ;) reply devit 16 hours agoparentprevThey computed results for a bunch of 36-empty-squares positions on their clusters and uploaded them to https:&#x2F;&#x2F;figshare.com&#x2F;articles&#x2F;dataset&#x2F;Analyses_of_the_Game_o...The script at https:&#x2F;&#x2F;github.com&#x2F;eukaryo&#x2F;reversi-scripts&#x2F;blob&#x2F;main&#x2F;reversi... plays perfectly (assuming the whole thing is correct) a bunch of data computed by other scripts in the repository using the 36-empty-squares solutions, for which a regular machine is presumably suitable.It seems that what it does is essentially look up aTo me \"solved\" would suggest \"strongly solved\". But perhaps equating \"solved\" with \"weakly solved\" is default in this area?It&#x27;s the default for all reasonable games - statespace is huge (i.e. tic-tac-toe is childsplay) and simple strategies don&#x27;t exist (that&#x27;d make bad human game). You can&#x27;t even iterate all positions - even less prove them all for one outcome. reply light_hue_1 15 hours agorootparentprev> But perhaps equating \"solved\" with \"weakly solved\" is default in this area?It is the default and all that matters.This is one of the dangers of reading papers as a non-expert. You can dismiss or be wowed by something that is totally irrelevant.They wrote the paper very much like the Checkers paper from Science 2007. reply anigbrowl 17 hours agorootparentprevThey wrote about this in the introduction and in the context of algorithm 2. reply jmmcd 18 hours agorootparentprev\"weakly solve\" is not curious. Read from the start, they define this. reply sdwr 18 hours agorootparentprevThis looks like a George W \"Mission Accomplished\" moment.- the game is obviously known to be a draw- but we don&#x27;t have computational power to enumerate that- so test a bunch of game states- and confirm that none of them are wins- ???- it&#x27;s solved! Trust me! reply sebzim4500 18 hours agorootparentThe concept of \"weakly solved\" is not original to this effort. IIRC checkers was weakly solved for years but is now strongly solved. reply tialaramex 17 hours agorootparentAnd you can go further Heads Up (ie two player) Limit (ie you decide to raise or not, the size of the raise is fixed) Texas Hold &#x27;Em (the style of Poker most played today) is essentially weakly solved.The process used generates a statistical approximation and tells you how close it is to correct, in theory a perfect solution would beat this by that amount, in practice of course Poker is a game of chance, and so over any realistic game it wouldn&#x27;t matter because the deviation from correctness they&#x27;ve computed is tiny. Could they make an even smaller deviation with more compute used? Sure, but why bother.https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Cepheus_(poker_bot)Cepheus is instructive also because some humans have played against this and believed they were outplaying it, which indicates there are real human poker players who misunderstand their own variance so much (and&#x2F;or discount real variance from others so much) that they&#x27;re completely unable to successfully rate their abilities.If you lose 12Bb over 100 hands you are not, in fact, \"winning except that it sometimes gets lucky\". You&#x27;re just losing, of course it sometimes gets lucky, that&#x27;s how luck works, it&#x27;s a game of chance. reply Raidion 7 hours agorootparentPoker being one of my favorite hobbies (probably 300k hands played lifetime), it&#x27;s wild how much variance matters. Like a 4BB&#x2F;100 winrate (aka you win 4 big blinds every 100 hands) is very much an \"I can be a professional\" winrate.You have a ~10% chance over 100k hands to beDouble AASo you mean AAAA? reply CyberDildonics 12 hours agorootparentI actually remember those things taking two AA batteries, so I may have flubbed my way into something that is still technically true. reply Tepix 19 hours agoprevFor those interested in the game (it&#x27;s popular among computer science and AI scholars), the Othello world championship is currently underway in Rome, Italy with games live streamed on liveothello.com and Youtube @WorldOthello reply bediger4000 19 hours agoparentDoes this paper render the championship moot? Is any software based on the paper entered?Is Othello like checkers, where there were mostly draws in high level games? reply cvoss 18 hours agorootparentThis paper \"weakly solves\" Othello. That means that we know for the initial board state both 1) the final win&#x2F;lose&#x2F;draw outcome (it&#x27;s a draw), and 2) the sequence of moves that should be taken by perfect players to get there (Figure 1, right).In particular, the paper does not \"strongly solve\" Othello. If you have an arbitrary board state, 1) and 2) are are not necessarily known for it. That means it&#x27;s still possible to win a game by intentionally deviating from the perfect sequence and betting on the fact that your opponent doesn&#x27;t know how to recover. reply charcircuit 17 hours agorootparent>That means it&#x27;s still possible to win a game by intentionally deviating from the perfect sequenceSomeone with perfect strategy would have an answer for any deviation. Playing imperfectly would likely get you into a losing position. There is no way to go from a game being drawn if played perfectly to being winning if the then loser were to be using perfect strategy. reply lcuff 17 hours agorootparentI agree. As a nuance, (and I&#x27;m not an Othello player, but a chess player) in many positions in chess, there are many moves that, while not the best, are just slightly worse. Finding the &#x27;refutation&#x27; for a weaker move is the measure of the strength of a player, and playing a few slightly weaker moves in a row will almost certainly take even high level players out of &#x27;book&#x27; (the memorized sequence of best moves). At that point, the strength of the players becomes important, as opposed to how much they have memorized. The strategy, then, is to have a _slightly_ worse position from which one can recover and go on to win. Obviously, if the opponent plays perfectly, it is either a win for him or a draw. Typically the &#x27;slightly weaker&#x27; move still keeps the game a draw. The advantage is not a game-winning sized advantage. I wonder if in Othello there are positions where there are multiple possible moves which &#x27;preserve&#x27; the draw. reply SonOfLilit 17 hours agorootparentprevNo, the paper only \"weakly solves\", so it doesn&#x27;t give a perfect strategy of the type you talk about.Imagine finding a pamphlet written by God that contains a listing of a perfect game of chess. Armed with it, you will still lose easily to Magnus Carlsen. He will deviate fro| the sequence and you won&#x27;t know the perfect responses to his moves. reply leoff 17 hours agorootparent> Imagine finding a pamphlet written by God that contains a listing of a perfect game of chessHow would you go to prove that this is the perfect game of chess, if you didn&#x27;t explore all of it&#x27;s possible sequences? If they did solve the game, there&#x27;s no way around knowing all possible outcomes - starting from a fixed given position. reply bluGill 15 hours agorootparentYou don&#x27;t, you trust that God has proved. reply kreetx 13 hours agorootparentI don&#x27;t get then, how the paper \"solves Othello\": how does it determine the perfect game (why is it perfect)? reply bluGill 12 hours agorootparentThe claim (see other threads, it is not clear if the paper really shows this) is that you can follow their plan or any deviation from it known results. That is no matter what I play if you understand their paper you can ensure you don&#x27;t lose. If I also know their paper I can force a draw, but I won&#x27;t win. reply Scarblac 10 hours agorootparentprevNot the perfect game, a perfect game. There will be a huge number of them, many of them very boring and unremarkable reply Asraelite 15 hours agorootparentprev\"Weakly solved\" does actually imply that perfect strategy. I think you&#x27;re referring to \"ultra-weakly solved\", which seems to be what the paper did. reply cvoss 8 hours agorootparentA \"weak solution\" demonstrates perfect play from the initial state and merely implies the existence of a perfect strategy for the entire tree of game states, but, crucially, need not actually produce said strategy. Doing so would be a \"strong solution.\"An \"ultra-weak solution\" is even less. It gives the win&#x2F;lose&#x2F;draw outcome of the perfect strategy, without producing that strategy, nor even producing the game of perfect play from the initial state.This is all covered in the second paragraph of the paper&#x27;s introduction. reply Asraelite 8 hours agorootparentSo are the definitions in the Wikipedia article then wrong?https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Solved_gameAnd if a strategy for perfect play only from the initial position is a strong solution, then what do you call the even more strongly solved case of a strategy for perfect play from any position?The second paragraph of the paper isn&#x27;t super specific about its definition for \"weakly solved\", but I read it as agreeing with my statement. It also calls checkers \"weakly solved\", a game for which a strategy to beat any possible move is known. reply charcircuit 14 hours agorootparentprev>He will deviate fro| the sequence and you won&#x27;t know the perfect responses to his moves.Even if you don&#x27;t know the moves you will know that you are in a winning &#x2F; drawn position. Magnus can not find a way to get to a winning position unless you make a mistake. reply Scarblac 10 hours agorootparentThat&#x27;ll be very little help if the perfect game you have starts with 1.e4, but Magnus plays 1.d4. Yes, you&#x27;re not losing, congratulations. You&#x27;re still on your own against Carlsen now. reply vasco 6 hours agorootparentprev> unless you make a mistake.That&#x27;s the easiest part. reply tromp 16 hours agorootparentprev> Someone with perfect strategy would have an answer for any deviation.Someone verified there is a perfect strategy, using tons of computational resources and lots of time. The game tree they explored may have millions of billions of nodes, of which only the top layers could be saved.To use a perfect strategy in an actual game, you need to have it stored in some format that allows near-real time lookups.Such is the difference between weakly and strongly solving.EDIT: Strongly solving goes beyond the latter, requiring real-time best play from arbitrary positions. reply NooneAtAll3 15 hours agorootparent> Such is the difference between weakly and strongly solving.no, you described difference between storing the result and not storing itstrongly solving means allowing arbitrary amount of mistakes from either player before giving to the solver reply foota 15 hours agorootparentprevThe author isnt claiming it&#x27;s possible to win against a perfect opponent, but rather, all perfect play scenarios end in a draw. If both players either can&#x27;t play perfectly, or choose to play imperfectly, then it moves into unknown territory and either side can force a win.This does have to be mutual though, if only one side plays imperfectly, then the other can always force at least a draw.So if you know the other side is incapable of playing perfectly, it could be rational to deviate. reply axlee 19 hours agorootparentprevWhy would it render human games moot? Why would a software participate in a championship?The draw percentage in checkers&#x2F;draught and in chess are roughly similar, (anywhere between 50% and 60% at high-level play), despite checkers being solved and chess not. reply Diggsey 19 hours agorootparentNow that Othello is solved, there exist a set of rules a player can follow to guarantee a win or draw every game. It&#x27;s possible (if unlikely) that a computer could sufficiently compress those rules to be memorizable (and then applicable) by a human. reply axlee 18 hours agorootparentCheckers have been solved 16 years ago and still see competition. A game being solved is not exactly the same as \"apply this memorizable algorithm and you&#x27;ll win\", especially if the solution implies scanning 10^n positions for each move. reply RetroTechie 16 hours agorootparentThat would be a fun way to define computer opponent: introduce an arbitrary amount of allowed compute power.Say, allowing a purpose designed device, but limited to 1W of power consumption. Or some fixed energy budget (J) per move. Too strong? Take it down to 0.1W, 10mW or whatever.That would degrade brute forcing as a viable approach, and bring it back to smart algorithms, clever ways to reduce the search space, etc. reply forty 17 hours agorootparentprevIn case you wondering like me, checkers here means American checkers, played on a smaller 8x8 board. International checkers played on 10x10 board is a much bigger space to explore of course. reply Detrytus 16 hours agorootparentDoes the board size matter here? Wouldn&#x27;t the strategy from 8x8 board somehow generalize to bigger boards? The one issue that I can possibly see is even vs odd board sizes, e.g. play on 9x9 board can be a bit different than 8x8 or 10x10. reply forty 12 hours agorootparentSolve a 2x2 Rubik&#x27;s cube and see if that helps solving a 4x4 ^^From the computer point of view, it&#x27;s more possible states to explore, so I think it makes things much harder reply jfengel 17 hours agorootparentprevI recall hearing that competition checkers has a randomization element at the start, to keep it more interesting. I believe checkers is strongly solved anyway, but it at least keeps people from memorizing all of the major lines. reply kelsey9876543 18 hours agorootparentprevThey are moot because the solution is known. When a human makes a mistake the intrigue is discovering the fix to become better. In solo copetition solved games are highly fascinating because the person is racing the TAS or the solved route. In human versus human games, we can simply look up what the human did wrong. There is no cognitive challenge in answer lookup. Its just oh, he sucks he missed the move. Since its two humans competing it becomes \"who sucks less\" but its two losers that both suck competing. Thats the problem with competitive play of solved games, it must be solo competition against the solution. reply addaon 18 hours agorootparent> Since its two humans competing it becomes \"who sucks less\" but its two losers that both suck competing.Yeah, this is my problem with bowling and golf. If you&#x27;re a professional bowler, literally your only job is to knock down the pins. Why do anything else? If you miss one, you&#x27;re bad at your job. Ditto with golf -- the hole is right there, just get the ball in it!(Honestly not sure how sarcastic vs sincere I am in this comment.) reply kelsey9876543 16 hours agorootparentIn bowling and golf the mistake is athletic. You moved your body wrong, also there are variables such as the wind and humidity of the air in golf, and a in bowling the ball and other micro variables effect play. It&#x27;s possible to improve physical condition with training, but there is no \"perfect\". In a fully abstracted competitive game where all variables are eliminated except for mental choices, it becomes about memorization of the solutions if the game is solved. reply uxp8u61q 17 hours agorootparentprevFoot races are also solved - these losers should just get a car! reply kelsey9876543 16 hours agorootparentCars are not allowed in the rules of the game \"foot race\", therefore your solution is not valid and therefore your argument has no evidence to support your claim. reply coldtea 16 hours agorootparentYou used this word, evidence. I don&#x27;t think it means what you think it means.Parent made an argument by analogy, no evidence needs to enter the picture. At best you can say his analogy is flawed.It&#x27;s not even flawed, anyway. If cars not being allowed is supposed to refute the analogy, then an obvious answer would be that Othello playing programs could also banned in Othello competitions (given that the solution can&#x27;t just be internalized by a human player). reply uxp8u61q 16 hours agorootparentprev...is this satire? reply coldtea 16 hours agorootparentprev>In human versus human games, we can simply look up what the human did wrong. There is no cognitive challenge in answer lookup. Its just oh, he sucks he missed the move. Since its two humans competing it becomes \"who sucks less\" but its two losers that both suck competing. Thats the problem with competitive play of solved games, it must be solo competition against the solution.I don&#x27;t think you understand the purpose of games.This is like saying since we have cars, why do people still race?Or \"why even do shooting competitions, when a robot or a person with a laser scope can easily win them?\" reply mtlmtlmtlmtl 17 hours agorootparentprevAnd honestly I think the draw percentage in chess is influenced just as much by sociological processes as it is by game theoretic concerns. The very top chess players are extremely risk averse. Chess is way too complex for humans to ever be able to play perfectly in sufficiently complex positions, honestly. The top players today obsessively avoid positions like that unless they can find a forced drawing line as a backup.In other words, not losing is heavily prioritised over winning in top chess, currently.There are many possible ways to change this. My favourite is to make a win worth 3 points, and a draw 1 point. Both in tournament scoring and rating calculation.I think this would incentivise more aggressive play, and disincentivise the constant slog of the same 15 top players playing mostly draws against eachother, and barely playing in more open tournaments with a bigger rating interval. reply mkesper 16 hours agorootparentGerman soccer league followed the English and Italian league in 1994 with a three points rule. It seems to favor the better teams (with more expensive players) even more, stabilizing the championship. https:&#x2F;&#x2F;www.fiaa.at&#x2F;theories&#x2F;die-3-punkte-regel-und-ihre-pro... reply axlee 9 hours agorootparentprev> In other words, not losing is heavily prioritised over winning in top chess, currently.It&#x27;s more that once you are in a losing position, winning is extremely difficult, and a draw is often the best thing you can achieve.From there on, the losing side cares about not losing (because winning is almost impossible), but the winning side stills tries to win. Great chess players are the ones who can turn a losing position into a draw, or prevent draws from a winning position. reply mtlmtlmtlmtl 7 hours agorootparentThen why do we see superGMs constantly bail out for a draw when they&#x27;re not losing, sometimes even in a better position? And consistently play quiet, safe openings, instead of sharper, if more dubious stuff. Sometimes the position is completely equal with plenty of play left and they instead manufacture a draw via repetition for no reason.Yet occasionally we see players throw out unsound openings and they work out just fine because they&#x27;re so complex and sharp they&#x27;re hard to refute.I understand how chess play works, being a tournament player myself. My point is not on the mechanics of chess, but the psychology of these players as a result of being brought up in a chess world where risk averse play is strongly awarded.Ultimately, the core problem here is that these players choose to play in a way that leads to more draws, not that they&#x27;re so unbelievably strong that it&#x27;s almost impossible for them to beat eachother.Just look at computer chess. They&#x27;re way beyond human capability, and yet they still don&#x27;t play perfectly. That should tell you how large the gulf is between current human play and perfect or even close to perfect play. reply bluGill 15 hours agorootparentprevGreat chess players often pull out a draw from what looks like an obviously lost position. Mostly great players start playing for a win, but somewhere in the middle they realize winning is hopeless and switch to looking for a draw. reply Someone 19 hours agorootparentprev> Is Othello like checkers, where there were mostly draws in high level games?Othello tends to have huge score swings in the end game. I think it’s even hard to get a draw from a typical mid game position if both players were to aim for it.This result may change that, of course. reply graphe 19 hours agorootparentprevDepends if you like &#x27;solved&#x27; games. Are chess tournaments useless if computers are better? https:&#x2F;&#x2F;www.chess.com&#x2F;forum&#x2F;view&#x2F;general&#x2F;chess-will-never-be... reply rc_mob 17 hours agorootparentprevI don&#x27;t understand this comment. Computers are not allowed to play in the championship. reply bediger4000 16 hours agorootparentI confess to being dumb and not understanding it&#x27;s a human championship. My bad! reply bluecalm 18 hours agorootparentprevChess is weakly solved for all practical purposes (it&#x27;s not proven but no one is able to show a winning sequence for white even with weeks to prepare vs a top engine playing with something like 30 minutes per move) and it doesn&#x27;t affect the competition at all. It&#x27;s impossible to remember it all anyway.Once&#x2F;if chess is formally weakly solved it will change exactly nothing for human chess players. If your plan is to remember the solution you may just as well start learning top engine lines today. reply SamBam 8 hours agorootparentChess isn&#x27;t remotely solved. AlphaZero trounced StockFish, playing moves that StockFish never thought possible. Meanwhile, some say that StockFish has since caught up. But regardless, if cheese engines keep getting better and bearing previous ones, then in no way can you say that any current engine has \"solved\" chess because a different version will beat it next year.\"Solved\" doesn&#x27;t mean \"beats humans.\"I see your point about what \"solved\" would mean for humans, though. reply tromp 16 hours agorootparentprevWeakly solved is a computational notion that has nothing to do with how well humans and computers play. We are far from proving the game theoretic value of Chess. Even for proving that White has a draw; i.e. that White is not in zugzwang in the starting position. We may feel very strongly that the notion is absurd, but I doubt we&#x27;ll see a proof in my lifetime. reply coldtea 16 hours agorootparentprev\"Solved\" in TFA sense is about a class of proofs being discovered, not about merely digital chess software playing better (even if they win every game). reply bluecalm 14 hours agorootparentYeah but this is not very useful concept in practical play and that was the context of my comment. Chess is at different stage today than it was a few years ago. The difference is that no matter what resources and how much time your opponent have they will not beat you as long as you remember the line shown by your home PC.I call it \"weakly solved in practice\" because it&#x27;s exactly that: our (chess players) reality today is exactly the same as if chess was actually weakly solved. reply coldtea 13 hours agorootparent>Yeah but this is not very useful concept in practical play and that was the context of my comment.This depends on whether the solution can be \"memorized\" so to speak. For games where it can, it makes playing meaningless. reply bluecalm 12 hours agorootparentObviously. The point is that in interesting games (for example chess) the solution can&#x27;t be memorized but parts of it can. The point is that in chess we have a solution as good as the mathematical one today (for all practical purposes). It&#x27;s an interesting point because it matters for practical players - you&#x27;re no longer afraid your opponent or their team can find \"holes\" (that is weak moves) in your preparation. You&#x27;re now only afraid they will play moves you didn&#x27;t expect. replywaveBidder 15 hours agorootparentprevchess engines are good enough to be effectively solved compared to human play, so not really more than chess tournaments. reply AndrewKemendo 18 hours agorootparentprevProbablySee: Le Sedol [1] after AlphaGo:\"On 19 November 2019, Lee announced his retirement from professional play, stating that he could never be the top overall player of Go due to the increasing dominance of AI. Lee referred to them as being \"an entity that cannot be defeated\"\"[1]https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Lee_Sedol reply JoeDaDude 18 hours agorootparentIN what could be interpreted as irony, Lee Seedol went on to invent more board games.https:&#x2F;&#x2F;www.dicebreaker.com&#x2F;series&#x2F;wizstone&#x2F;news&#x2F;go-player-d... reply kadoban 18 hours agorootparentprevThat is one player&#x27;s choice, but not even close to a majority one.Chess and Go and Checkers competitions have not disappeared after humans stopped being the best players of them. reply nimih 13 hours agorootparentprevSomeone should probably let Shin Jinseo know that the Go world championships are now \"moot\", because he appears to still spend a lot of time training and practicing for them. reply mark_l_watson 16 hours agoprevThis is cool.I solved a simpler game about 15 years ago that my brother and I used to play: an African game with about 10 pits on each side of the board that hold stones. I coded up an alpha-beta engine for it, and discovered crazy always win strategies to match how my brother and I played. Suddenly I would win all the games, and then he never wanted to play again. This was a classic match up of a computer scientist vs. an optometrist. reply sonofhans 16 hours agoparentThat is super cool. I’ve played Mankala for years and would love to hear more.It’s instructive to see old Africans playing Mankala. They play very fast. It can become more like poker, where deceit is a part of the game. If you spam down your stones fast enough sometimes you can skip a bowl, or drop an extra stone, in order to gain advantage.I’m not facile enough to play this way, and I play with family and so don’t cheat. It’s a very different thing, though. Like the difference between British ladies playing slow Mahjong over tea, versus people playing for money in a gambling room in China. reply jonahx 14 hours agorootparent> They play very fast. It can become more like poker, where deceit is a part of the game. If you spam down your stones fast enough sometimes you can skip a bowl, or drop an extra stone, in order to gain advantage.What you describe is just a talent at cheating, and I assume against the rules of the game. In poker, bluffing is an explicit part of the game allowed by the rules. I wouldn&#x27;t even call it \"deceit\" in that context. At the very least, these are highly distinct categories of deceit. reply klodolph 9 hours agorootparentCheating is against the rules in mancala, but perhaps, part of the culture of the game. If you’re caught, you retract the move. reply weatherlight 14 hours agorootparentprevSometimes there&#x27;s an implicit its only cheating if you get caught. reply buzzy_hacker 13 hours agorootparentYeah, in monopoly you don’t have to pay rent if the property owner doesn’t notice. reply pests 13 hours agorootparentThis is not implicit though.The rules state that property owners can ask for the rent until the next player rolls the dice. reply webkike 12 hours agorootparentprevIMO that&#x27;s still not cheating reply jhbadger 13 hours agorootparentprevAnd in Scrabble it&#x27;s fine to use a nonsense word if nobody challenges it. reply _justinfunk 11 hours agorootparentAnd in American Football it&#x27;s fine to deflate the ball if no one measures it. reply earthboundkid 12 hours agorootparentprevIn Bullshit, I always felt that if you could trick them into taking the hand or not noticing you added an extra card, it was all part of the game. reply david422 9 hours agorootparent3 queens ... and slide a 4th card sideways underneath. reply nemo44x 10 hours agorootparentprevIf you’re not cheating you’re not trying. reply gmd63 10 hours agorootparentIf you&#x27;re cheating, you&#x27;re trying to lose the bigger game. reply transcriptase 10 hours agorootparentprevThe stats from various anti-cheat companies like Vanguard, PunkBuster, and BattleEye demonstrate that some nationalities&#x2F;cultures believe this more than others.Even when you adjust for population and CD key pricing. reply elwell 11 hours agorootparentprev> It can become more like poker, where deceit is a part of the game.I wouldn&#x27;t equate skipping a bowl with bluffing. Maybe, palming a chip as you put your bet in: which certainly isn&#x27;t \"part of the game\". reply furyofantares 11 hours agorootparentI also wouldn&#x27;t equate it with bluffing at all, but from the description, maybe also not palming a chip. It&#x27;s possible for something that&#x27;s cheating among one group to be a part of the game among another.Sports have a lot of things that are in some sense against the rules, but standard penalties are applied if caught, and it&#x27;s just a part of the game, like fouling a player in basketball. Nobody considers it cheating, it&#x27;s a part of the game because the penalty is standardized. Of course you still try not to get caught. reply couchand 9 hours agorootparentI&#x27;m not sure I agree with this take on basketball strategy. I&#x27;m no expert, but my understanding is that intentionally fouling in basketball is largely a time-management move? Like, you want to be \"caught\" because that&#x27;s the whole point -- you aren&#x27;t seeking an advantage in play that the penalty is meant to offset, you&#x27;re seeking the penalty. reply furyofantares 8 hours agorootparentTime management are an extreme scenario, NOT the main use of fouls.Fouls are conserved and used throughout the game. They&#x27;re usually somewhere between intentional and accidental - you&#x27;d rather get your hand on the ball and not foul if you can. But you&#x27;d often rather foul than they get the 2 points if those are your only options. And how many fouls you have left against their best shooters is a major consideration throughout the game.There&#x27;s an anecdote about some Kobe Bryant trash talk that I think demonstrates both that fouls are valued for stopping 2 points, but ALSO the per-player foul limit is an additional consideration and separate strategic consideration.> So we were playing, and you know it was like a two-on-one break. And, Caron Butler fouls and stops the break. So everybody was like, \"Good job! That stop stops two points.\"> So, Kobe comes out... and we’re all like, \"Good, Good. You saved two points.\"> Kobe walks over to him and says, \"Hey, who are you guarding?\", and Butler responds, \"You!\", and he goes, \"Huh... How many fouls you got?\". And Caron says, \"I got one!\" and Kobe says, \"So you only got five left? Well, you need all six fouls to guard me, and you just wasted one... on him! It’s a stupid... stupid play!\"> And you had to think about it like... \"God, he’s right!\" reply thret 10 hours agorootparentprevFouling isn&#x27;t cheating because it&#x27;s accidental. If it were deliberate, it would be cheating. reply PaulHoule 9 hours agorootparentIt might be accidental and it might not. reply EGreg 4 hours agorootparentprevWhen I was 14 and in my first year of college, the lady teaching my course in C gave me a project for an extra grade (because I had skipped a lot of classes, I think). Anyway, it was to program Mancala in C, which I did using Allegro Library I think at the time. Fun times! reply bentcorner 16 hours agoparentprev> an African game with about 10 pits on each side of the board that hold stoneshttps:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Mancala if you want more info reply sundarurfriend 15 hours agorootparentReminded me of https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;PallanguzhiAnd it is indeed mentioned under the Names and Variants section. Seems likely that there&#x27;s a historical connection somewhere. reply neontomo 16 hours agorootparentprevAlso, another version I&#x27;m more familiar with from childhood is https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Kalah reply Magi604 15 hours agorootparentHere is the game I played with my grandma when I was younger:https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Southeast_Asian_mancala reply kiviuq 13 hours agorootparentprev\"The game was played by enslaved Africans to foster community and develop social skills.\"..cringe... reply bee_rider 12 hours agorootparentI don’t get it, what makes you want to cringe? reply SamBam 8 hours agorootparent\"Bowling is a game played by American males to develop social skills.\"Doesn&#x27;t that sentence sound bizarre to you? Is that why people bowl? And isn&#x27;t the implication that American males need help learning social skills?They played the game for the same reasons that all humans have played games for millennia. reply earthboundkid 12 hours agorootparentprevThey’re humans and humans play games for fun. reply grensley 13 hours agoparentprevI can&#x27;t remember the source for it (help me out if you know it), but people only like to play games when they&#x27;re in the band of 30-70% winrate. Win too much or too little, and they&#x27;ll stop enjoying playing the game. reply bmacho 56 minutes agorootparentAlso if you have time to play multiple rounds, then with a handicap you can set that you both have 50-50% chance to win, thus making the game really good, with adrenaline, the possibility to do your best for an extended period of time, and the reward for that. reply rocqua 2 hours agorootparentprevIs it really symmetric?I imagine generally the upper limit on always winning is higher. As in, usually the person consistently losing wants to stop playing before the player consistently winning. reply sdwr 9 hours agorootparentprevhttps:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bH10TsgozG8&t=26s reply passion__desire 11 hours agorootparentprevIf your team always wins, there is no point in supporting it, no thrill. Everything in moderation, even winnings. reply notfed 16 hours agoparentprevClassic \"Why nerds don&#x27;t get invited to parties\"! reply roughly 15 hours agorootparent> computer scientist vs an optometristThere’s a joke in here about perspective reply rst4455 13 hours agorootparentI&#x27;ll byte... C#? reply ornornor 13 hours agorootparentNice reply gkuhl21 10 hours agorootparentprevThe optometrist couldn&#x27;t believe his eyes.... I&#x27;ll see myself out. reply elromulous 11 hours agorootparentprevThe brother lacked vision reply qubex 16 hours agoparentprevI did something similar for my (then) favourite game Pentago, with similar results: I drained all the fun from it. reply jmholla 16 hours agorootparentThis is usually my approach when I&#x27;m playing too much of a game. I cracked my sudoku addiction by writing a solver. Got a lot less fun when I could tell my computer to solve it how I would solve it. reply marssaxman 14 hours agorootparentprevI carefully refrained from building an actual word-ladder solver, for that reason - instead I have a little dictionary-explorer script which will show me the next two layers of the tree, should I get stuck. reply dbrueck 14 hours agorootparentprevHaha, I did this for Wordle - same result! reply password4321 9 hours agoparentprevhttps:&#x2F;&#x2F;sheabunge.github.io&#x2F;mancala&#x2F; reply jholloway7 11 hours agoparentprevNow that you mention it, this might be why my family stopped playing Rack-O with me reply CyberDildonics 16 hours agoparentprevMancala and connect four are classic examples of solved games.computer scientist vs. an optometrist.What does being an optometrist have to do with anything? reply coffee_ 16 hours agorootparentOne solves problems and the other is a computer scientist. reply rendall 15 hours agorootparentWell as a computer scientist and programmer, I for one laughed. reply hombre_fatal 16 hours agorootparentprevIt’s a lowly profession for those less cunning, scarcely worthy of mention alongside the intellectual ballet that is the domain of software and computers. reply easton 16 hours agorootparentprevIt’s a joke. As in “CS vs Optometry, who will win in the mancala battle of the century?!” reply Keyframe 12 hours agorootparentUnless it turns out OP is an optometrist reply CyberDildonics 10 hours agorootparentprevWhat exactly is the joke? reply elwell 11 hours agorootparentprev> This was a classic match up\"classic\" here is tongue-in-cheek reply libraryatnight 16 hours agorootparentprevWasted his time learning to help people see, now he can&#x27;t even kick ass at Mancala! The rube! reply djak250 10 hours agoparentprevSounds like he could \"see\" when he&#x27;s been defeated. reply probablynish 16 hours agoparentprevI played this game growing up (we called it Bao) - now I know what my next party trick is going to be reply sciolist 18 hours agoprevIs this legit? It seems weird to me that this paper has one author, from a deep-learning startup which I&#x27;ve never heard of before. reply thenoblesunfish 14 hours agoparentThe fact that they describe their own result as monumental raised my eyebrows. Presumably this is being peer reviewed? reply dist-epoch 18 hours agoparentprevIt wouldn&#x27;t be the first time an unknown solves a major problem. And Othello is not exactly the Riemann hypotheses - meaning it wasn&#x27;t as studied and there could be a low-hanging fruit. reply gmac 18 hours agoprevIf anyone fancies playing the game, I made this for&#x2F;with my kids: https:&#x2F;&#x2F;jawj.github.io&#x2F;fliptiles(The ‘AI’ player is very weak) reply simondebbarma 3 hours agoparentNot sure how impressive a draw is, but I did a 32-32 for my first play through. Thanks for teaching me a new game! reply mumintrollet 14 hours agoparentprevImpressive! I used to play this all the time as a kid but I kinda forgot it existed for a while, so this was fun :) I scored 31 against the computer&#x27;s 33 :&#x2F; reply gmac 11 hours agorootparentLikewise! My daughter played it at a friend’s house and enjoyed it, which is what reminded me and prompted me to make this. reply hermitcrab 17 hours agoparentprevI was even weaker. ;0)(Nice job BTW) reply dzolob 16 hours agoprevFor those of you who think Othello is trivial, try Zebra.Original author’s website: http:&#x2F;&#x2F;radagast.se&#x2F;othello&#x2F;A github source: https:&#x2F;&#x2F;github.com&#x2F;hoshir&#x2F;zebra reply NooneAtAll3 16 hours agoparentfor those not getting what is \"Othello\" - it is also called Reversi reply archon810 5 hours agorootparentReversi is what I grew up playing back in Ukraine. I was pleasantly surprised to find out that it&#x27;s popular (well, relatively) in the US as well under the Othello name and have taught both of my kids to play it too. They love it, and I love playing it with them. reply zamadatix 15 hours agorootparentprevIf you&#x27;ve played only Reversi the Othello variant may have some differences. Mainly, the starting board already has some pieces on it. The general gameplay and goal is maintained though. reply dzolob 17 hours agoprevThe thing I love about Othello is the contradiction between action and territory. While the game develops, playing your turn is in some sense against you, yet you must. Hence, you need to remain compact and inner while you occupy, until space becomes too small and its time to reclaim definite influence. reply blindriver 14 hours agoprevIt sounds like they \"solved\" this using 2 AI players playing \"perfect\" Othello?But what if someone plays imperfect Othello? I heard Magnus Carlson will start his games with completely unorthodox opening moves to throw his opponents off kilter because they&#x27;re always used to playing well-known moves. Will this AI work against that tactic as well? reply doikor 14 hours agoparentThe AI can always continue with the perfect play from that imperfect state. That is what happens in chess as you can’t fool a good chess AI by making intentionally imperfect moves (chess is not solved so we don’t know if a move is perfect or not but you get the idea)Basically in games with no hidden information (chess, go, othello, etc) how you got into a game state does not matter. If your AI can play perfectly then it can make the perfect move from any state. reply 542458 14 hours agorootparent> you can’t fool a good chess AI by making intentionally imperfect movesYou actually used to be able to. That’s part of how Kasparov beat Deep Blue in ‘96 IIRC - by forcing the game into unusual situations where the computer would have fewer prior games to pattern match off. But by the rematch heuristics for “off book” situations had improved, and the same strategies failed (or even backfired). reply omoikane 18 hours agoprevRelated, here is one that plays 6x6 perfectly:https:&#x2F;&#x2F;mame.github.io&#x2F;6x6-reversi-oracle&#x2F;via: https:&#x2F;&#x2F;twitter.com&#x2F;mametter&#x2F;status&#x2F;1476379841004183556I didn&#x27;t know 8x8 was unsolved until now. reply namtab00 14 hours agoparentI can&#x27;t get one single black... it&#x27;s this what perfectly means? reply Tepix 1 hour agorootparentIt will manage a draw even when the opponent plays perfectly, too. And it will get the optimum number of pieces. reply gus_massa 14 hours agoprevI&#x27;m very surprised it&#x27;s a draw. It&#x27;s not like chess where it&#x27;s \"easy\" to exchange a piece for an equal one until the board is \"empty\" and it&#x27;s a draw. (Yes, it&#x27;s more complicated. I played a lot of chess until secondary school, and it&#x27;s more complicated. But trading equal pieces is a good strategy to get a draw.)In Othello the number of pieces go up and down in weird patters, so a draw is very surprising for me.Has anyone checked the proof?Edit: Is Othello solved for smaller boards? Can this proof be aplied to smaller boards? reply Tepix 14 hours agoparentThe most promising lines have long (decades) been known to result in a draw. There wasn&#x27;t enough CPU power to brute force the entire search space. reply gus_massa 10 hours agorootparentWhich is the bigest board that has been bruteforced? reply jchook 9 hours agoparentprevStarting with a 1x1, 2x2, 3x3, etc board size seems like a reasonable strategy for developing an intuition of the solution. reply fidotron 18 hours agoprevThere is a lot of good background on Othello like: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Computer_OthelloAnd especially: https:&#x2F;&#x2F;archive.org&#x2F;details&#x2F;byte-magazine-1980-07&#x2F;page&#x2F;n57&#x2F;m...That Byte article is about implementing practical heuristics to create a human like player as opposed to completely exhaustive play which was most definitely impossible on early 80s machines.I happened to implement a version myself at https:&#x2F;&#x2F;luduxia.com&#x2F;reversi&#x2F; reply snitty 16 hours agoprevUntil someone gives me a convincing reason why Iago did it, Othello is NOT solved. reply KingOfCoders 19 hours agoprevOne of the first games I&#x27;ve coded as a kid was Othello.\"Othello is now solved, computationally proved that perfect play by both players lead to a draw.\"I could never win against my creation :-) reply lukasb 7 hours agoprevSo the perfect game is played to a draw - does this mean that competitive play is over? Or is it impractical for human players to memorize the moves required to punish deviation from the perfect game? reply gtbcb 16 hours agoprevI would love a Wikipedia list article of games that have been solved computationally and but also games where humans can still beat computers &#x2F; AI, discussing the challenges and context behinds wins &#x2F; losses. reply Y_Y 15 hours agoparentAre there any board games left where humans beat the best computers?On a related note, are there any Wikipedia list articles which are empty lists? reply kibwen 13 hours agorootparent> Are there any board games left where humans beat the best computers?Rest assured that no computer will ever dominate a human opponent at Candyland. reply Marazan 12 hours agorootparentprevI couldn&#x27;t imagine any computer beating a human at any Collectable Card Game in the near term. Likewise I&#x27;d imagine that computers would be at a insurmountable disadvantage at Deck Builders like Dominion in the general case (in that I could easily imagine a Computer being trained to play perfectly on a specific Kingdom but no where close to a top human on a randomly selected Kingdom). reply Waterluvian 19 hours agoprevOthello is one of those games that works really well for playing with young kids. The rules are simple. There’s patterning to learn. It’s fun to cause massive flips. And best of all, it’s just as fun for the adult as it is the kid.I’ve found that I can really enjoy myself without crushing my 6yo or it feeling like it’s just a luck-based game. reply hermitcrab 18 hours agoparentSuggest also having a look at Hus (one of the family of African stone games): https:&#x2F;&#x2F;mancala.fandom.com&#x2F;wiki&#x2F;HusIn theory there is no luck. But in practice you can&#x27;t calculate that far ahead, due to the chain reactions.You can easily make your own board. reply captn3m0 18 hours agoparentprevI also like Blokus for similar reasons. reply ramses0 17 hours agorootparentBlokus Duo is king! reply phkahler 19 hours agoprev>> Othello is now solved, computationally proved that perfect play by both players lead to a draw.Did not see that coming. That just makes the game more interesting I think. reply uncletaco 16 hours agoprevGood ol’ Othello. I got an A in AI because I beat everyone else’s Othello player. You will always be the final boss of grad school. reply amelius 17 hours agoprevOk, so we just have to keep adding rows and columns to the game in order to keep the game from being \"solved\"? reply dzolob 16 hours agoparentSomeday there might be a theorem. Something on the line of “for all nxn boards, a perfect game ends in a tie”. reply amelius 11 hours agorootparentNext challenge: (n+1)xn boards reply codr7 13 hours agoprevDang, brings back memories from AI class at university.We had an expert Othello player in our class who helped with fleshing out strategies for scoring the boards, in the end it was pretty difficult to beat.Used alpha-beta if memory serves. reply musicale 10 hours agoprevGiven that 6x6 Othello&#x2F;Reversi was solved 30+ years ago, I&#x27;m a bit surprised it took this long for 8x8. reply avipars 16 hours agoprevLink to paper: https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;2310.19387.pdf reply einpoklum 11 hours agoprevOh, it&#x27;s Reversi!https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;ReversiBy the way - in the general case (NxN board, arbitrary position) - determining whether there&#x27;s a winning strategy is a PSPACE-complete problem. reply CodeCompost 17 hours agoprevUsed to play an Othello game on my phone many moons ago. I always won by always going inside-out. reply bradwood 19 hours agoprevHow about the ancient Chinese game of \"go\", next? Not convinced that can easily be solved at all. reply tromp 16 hours agoparentGo is considered close to being solved on a 7x7 board [1]. The grand challenge would be solving 9x9 Go, the standard beginner board size.Note that professional players are far from mastering 9x9, and regularly play 9x9 tournaments.Solving the full 19x19 game is utterly out of the question.[1] https:&#x2F;&#x2F;forums.online-go.com&#x2F;t&#x2F;katago-attempts-to-solve-7x7&#x2F;... reply mafuy 15 hours agorootparentThere was a recent push for 9x9. It&#x27;s not solved but it is believed to be near perfect play.https:&#x2F;&#x2F;katagobooks.org&#x2F;9x9highlights.html reply mikpanko 18 hours agoparentprevAmong popular board games, Go is more computationally complex than chess, so the latter would probably be solved first. reply thomastjeffery 16 hours agoprevweakly solved reply makach 18 hours agoprevDoes that mean there are no disadvantages going second? reply chaboud 18 hours agoparentHaving not read the paper, it sounds like the author is asserting that the game is solved under perfect play as a draw.https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Solved_gameThat would point to there being no advantage in perfect play. However, in imperfect play, the first or second player could still have a measured advantage. reply foompy_katt 13 hours agoparentprevThere is no disadvantage to going second... in fact, in tournament games, the player to go second (white) wins about 2% more often than black does. All of black&#x27;s first moves actually transpose, so white has the first real choice in the game, and also usually has the last move in the game, which can be an advantage. reply toyg 17 hours agoparentprevIf you consider that in the early game you want to keep low your number of pieces (because it keeps the number of possible moves high), it becomes somewhat obvious that going second is not a disadvantage at all. reply orzig 18 hours agoprev\"Minutes to learn ... A lifetime to master\" Not anymore! reply at_a_remove 17 hours agoprevI had this for the Apple ][e and would play it, obsessively. At one point I had gotten good enough against the computer that the average game took ninety seconds, with the computer taking about as much time as I did. I eventually learned how to completely beat the computer such that it had no cells of its color. I took photos of a couple of instances just as proof.After a while, that got dull so I wrote a little program that would randomly POKE into the game&#x27;s memory space. The usual result was a crash, or a program that didn&#x27;t know how to play, or would only put pieces on the lines instead of the empty cells, that kind of thing. Every so often, though ... it would just play a little differently against me. No crashes, no weirdness. I always wondered what exactly had gone on with my random mutation there: was there some table of position evaluations whose weightings I had tweaked? A rule jumped over in the code? reply pvg 14 hours agoparentThat&#x27;s more or less coming up with one of the ideas of Core War due to Othello Implementation Boredom. reply munificent 15 hours agoprev> The Othello result is a monumental achievement for humanityImagine having the hubris to describe your own paper like this. reply lagt_t 15 hours agoparentA before and after in the history of mankind. A milestone carved in the memory of all mankind through time and space. reply prof-dr-ir 14 hours agoparentprevThe sentence certainly sounds arrogant, but I have seen such phrasing used also by novice authors who were simply trying to sell a result that they were enthusiastic about. Like the present article&#x27;s author, these were always non-native speakers. reply NotYourLawyer 14 hours agoparentprevLook upon my works, ye mighty, and despair. reply ksd482 15 hours agoparentprevPerhaps its humor? reply whirlwin 14 hours agorootparentMaybe Schrödinger&#x27;s satire. Either it&#x27;s satire or not based on the reaction of the reader reply uxp8u61q 17 hours agoprevnext [31 more] Correct title: an unknown author from an unknown startup claims in an arXiv preprint (listed somehow in the cs.AI archive) that Othello has been solved. The paper is 13 pages long.I wish that the superconductor debacle (and many others) had taught people critical thinking and skepticism. And yet this is the #1 post on HN right now. reply anigbrowl 17 hours agoparentBoo. The paper is cautiously written, addresses a very tractable and well-defined problem, confirms what experts expected, and is straightforward to implement (the source code is on Github). And yet this posturing is the #1 comment on this thread right now. reply notfed 16 hours agorootparentGreat, then let&#x27;s name it \"Othello claimed to be solved\", then pound it with peer reviews and reproductions for a bit, then we can phrase it as \"Othello is solved\". reply SomaticPirate 16 hours agorootparentThe source code is on Github? Why not run it yourself and perform the peer review? The implementation is quite straightforward reply uxp8u61q 14 hours agorootparentYou need to prove that the code is correct, that&#x27;s the tricky part. Otherwise I could just write `return true;` as the whole code and tell people to run it, it&#x27;s easy, just do the peer review yourself. reply cwillu 17 hours agoparentprevThere was absolutely nothing wrong with the superconductor “debacle”. What you&#x27;re preaching is not skepticism, but cynicism. reply coldtea 16 hours agorootparentGiven the myriad posts and articles about \"huge breakthrough\", \"industry changing\" and so on, scepticism in that case would translate to way more cynicism. reply satoqz 16 hours agoparentprevI would not call Preferred Networks an \"unknown startup\" - They&#x27;ve been prominent within the AI research community for quite some time and have contributed important projects such as CuPy and Chainer, the latter introducing the \"define-by-run\" concept which was later implemented in frameworks such as PyTorch and Tensorflow. reply g9yuayon 17 hours agoparentprevI thought the post is #1 on HN because people here are genuinely interested in the topic and would like to at least examine the paper and discuss the merits of it. reply throw101010 17 hours agoparentprev> And yet this is the #1 post on HN right now.Doesn&#x27;t it make sense to give some visibility to such claims so they can be verified? I would think a lot of people on HN are equipped to take part in this informally.But I agree with you that the title is too categorical and should be updated. reply gfodor 16 hours agoparentprevCalling it a debacle is an admission you yourself could benefit from your own advice. reply fbdab103 17 hours agoparentprevTrust but verify. People were excited, but pretty much the first thing on everyone&#x27;s mind was looking for replication.In contrast, this is not spouting a revolution in physics, but a mathematical puzzle that is mostly trivia. I suspect that the best computer Othello algorithm can already trounce a human. reply uxp8u61q 17 hours agorootparent> a mathematical puzzle that is mostly trivia\"Solving\" a game is not \"trivia\" or a \"puzzle\". It&#x27;s an actual mathematical problem that requires nontrivial proofs for nontrivial games. Think about it: a game as \"simple\" as checkers was only solved in 2007.> I suspect that the best computer Othello algorithm can already trounce a human.That&#x27;s a completely different problem. Chess computers are much, much better than humans, but chess is far from being solved. reply sebzim4500 17 hours agorootparentIt&#x27;s not obvious to me that othello is much more complicated than checkers. Admittedly, I haven&#x27;t played since I was a kid and I don&#x27;t completely remember what the rules are. reply WoodenChair 17 hours agorootparentSo you don&#x27;t really know much about the computational complexity of the game and you&#x27;re saying it&#x27;s trivial.How hard a game is to \"solve\" at least using traditional algorithmic techniques is related to its search space. That is a combination of the length of the game and the number of possible moves in each position (ply and branching factor). Chess has more possible positions than exist atoms in the universe by some estimates. Checkers has a tractable, for modern supercomputers, 500 billion possible positions with about a ~6 branching factor over an average of ~50 ply games.Othello is several orders of magnitude more complex than checkers but not quite at the level of chess. So, this is a big claim. It&#x27;s by no means trivial. reply kbenson 16 hours agorootparentThe person you&#x27;re responding to wasn&#x27;t the one that said it was \"trivia\" (much less trivial).I don&#x27;t think anyone was saying it&#x27;s easy, just that they didn&#x27;t think it was very useful to know. reply WoodenChair 15 hours agorootparentThe post I&#x27;m replying to said:> It&#x27;s not obvious to me that othello is much more complicated than checkers.How is that not saying it&#x27;s trivial when the context is a thread mentioning that Checkers has already been solved. reply kbenson 14 hours agorootparentIn the past, \"solving\" games has often been done through novel changes in hardware and&#x2F;or approaches and algorithms as I understand it. The person you replied to stated that they didn&#x27;t know why Othello was an achievement beyond checkers. That doesn&#x27;t mean it&#x27;s trivial, but it also doesn&#x27;t mean it required any additional insight or advances to do so if it&#x27;s not specifically more complicated than checkers.They then went on to qualify their statement with the information that they don&#x27;t specifically remember the rules of Othello. In a discussion held in good faith, this should be assumed to be an invitation to add additional insight as to why Othello might be more complicated.You either know the reason why and didn&#x27;t state it, or believe it&#x27;s more complicated based on authorities you trust and didn&#x27;t relate that and instead stated it authoritatively, or don&#x27;t know it at all and misrepresented it. None of those are very useful for discussion. The former two are easy to rectify by explaining, qualifying, or referring someone to additional info though, and would have been a more useful way to respond.Ultimately though, it sort of feels like you&#x27;re reaching for an additional interpretation that makes an earlier misinterpretation still valid, when you could just say \"oops. Most of my comment still stands as accurate, but I guess I misinterpreted your point.\"Edit: from looking at you profile, it appears you are a CS professor. Perhaps part of the issue is context. This is a public forum, not a classroom, and while in a classroom your statements can be taken with an assumed authority, nobody necessarily knows that about you here when you post, so some additional qualification of your statements or background may be warranted. reply WoodenChair 10 hours agorootparentReread my comments in \"good faith\" as you say and you won&#x27;t need to write four paragraphs critiquing my one paragraph comment. reply kbenson 9 hours agorootparentI&#x27;m not sure if it&#x27;s a matter of good faith or not to see that you were responding to statements that not only the person you&#x27;re responding to didn&#x27;t say, but weren&#x27;t actually said by the original person (trivia != trivial). That said, I assumed you actually care about what you are communicating, so provided what I thought was constructive criticism.I guess you&#x27;re either in a frame of mind you can accept it as it was meant or you aren&#x27;t. replysebzim4500 10 hours agorootparentprevI don&#x27;t think either Othello or Checkers are trivial to solve. Checkers was solved over 18 years. reply WoodenChair 2 hours agorootparentI didn&#x27;t say Checkers was trivial to solve. I said Othello is much harder to solve than Checkers and therefore not trivial to solve as OP implied.I think the OP was saying that since Checkers is solved and they \"think\" Othello is similar it would be easy to solve, implying that since we can do one we can do the other. I was disputing that notion. replynotfed 16 hours agorootparentprev> Trust but verify.Ok, so, do you trust everything posted on the Internet until you verify it?I really think \"distrust but verify\" is a heck of a better rule, unless your source has a really solid track record. reply coldtea 16 hours agorootparentprev>Trust but verifyGiven that most papers don&#x27;t replicate, and most hype ends up BS, \"don&#x27;t trust until it&#x27;s verified\" is a much better rule. reply klyrs 17 hours agoparentprevI was watching every development of that superconductivity claim. I was quite enthused! But never once did I move beyond \"groundbreaking if true.\" This doesn&#x27;t even have the potential to be groundbreaking. Get over yourself, let people get excited about little stuff. reply notfed 16 hours agorootparent> Get over yourself, let people get excited about little stuff.Some people are looking for facts and science, and some are looking for enthusiasm and excitement. Can&#x27;t discount either one, I suppose. reply klyrs 16 hours agorootparentYou can be enthusiastic and excited while looking for facts and science. In fact, my interest in rooting out truths tends to go hand in hand with my passion for the topic. Negative results are important for scientific advancement, and I was just as excited to see LK99 fully analyzed, despite it not turning out to be the holy grail. We always knew that was a longshot; I enjoyed the journey regardless of the destination.My admonition \"get over yourself\" is a response to this ridiculous idea that science should be a joyless affair. It isn&#x27;t, and must not be. Historically, fuddy-duddy downers don&#x27;t make the big discovaries. reply CyberDildonics 16 hours agorootparentprevCan&#x27;t discount either one, I suppose.People getting each other excited by pretending fiction is reality is called religion. That&#x27;s fine if people are honest about it. reply jmye 16 hours agorootparentprev> Get over yourself, let people get excited about little stuff.No one has said you’re not allowed to be excited if you want. Just like GP is allowed to be a wet blanket if they want.Speaking of “get over yourself.” I’m so tired of this “if you don’t completely validate and elevate my feelings then you’re bad&#x2F;mean and preventing me from feeling what I want” crap. God forbid anyone ever disagree with you. reply scythe 17 hours agoparentprevYou really wouldn&#x27;t want to have a post sit on top of Hacker News for an hour and nothing comes of it. Think of how much we could have gotten done on this messageboard otherwise! reply mcphage 16 hours agorootparentBoy are you gonna feel foolish when the #2 post on HN is “Cancer almost cured”, and you realize how dangerous a diversion this was… reply entelechy0 15 hours agoprevBecause Othello is in PSPACE, and NP is in PSPACE, does this mean that P=NP? reply gus_massa 9 hours agoparentThe preprint claims to have solved the standard 8x8 board. The result probably applied to smaller boards and perhaps wit some tweaks to slighty bigger boards (10x10???).To conclude something about P ?= NP, they would have to have solved the NxN board for all N. reply Avlin67 18 hours agoprev [–] no, Othello is not complex, I do not remember exactly how but i did play a lot when i was you and did find a way to win consistently... reply toyg 17 hours agoparentA small amount of basic theory (which areas to target and which to avoid, how to keep your numbers low in the early game, etc) is enough to look like a master among casual players; but the advanced game can be fiendishly hard. reply laurentlb 18 hours agoparentprev> did find a way to win consistently...Against who? You were playing against beginners? reply jmmcd 18 hours agoparentprev [–] And if you played against yourself, did you still win? reply sebastiennight 17 hours agorootparent [–] Plot twist: GP is the author of the paper, and your question is how they demonstrated that \"both players playing perfectly leads to a draw\". replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Hiroki Takizawa has released a paper declaring that the complex game of Othello has been computationally solved.",
      "Othello holds a significant challenge status in computer science due to its approximately ten octodecillion potential game records and ten octillion potential game positions.",
      "This achievement implies that it's now computationally proven that a perfect play by both players in Othello can lead to a draw."
    ],
    "commentSummary": [
      "A recent paper by Hiroki Takizawa reveals that the game of Othello, considered one of the world's most intricate games due to its numerous possible game records and positions, has been computationally solved.",
      "Othello has been a significant challenge for computer science due to its rough estimate of ten octodecillion possible game records and ten octillion possible game positions.",
      "The breakthrough implies that perfect play by both participants can be computationally demonstrated to result in a tie."
    ],
    "points": 558,
    "commentCount": 247,
    "retryCount": 0,
    "time": 1699108556
  },
  {
    "id": 38144400,
    "title": "NewPipe: An Open-Source, Privacy-Friendly YouTube App for Diverse Android Users Now Supports Multiple Platforms",
    "originLink": "https://newpipe.net/",
    "originBody": "Home FAQ Blog Press GitHub Docs BETA Releases NewPipe The lightweight YouTube experience for Android Do you like watching videos on YouTube but want an intuitive, feature-rich and privacy friendly app for that? NewPipe has been created with the purpose of getting the original YouTube experience on your smartphone without annoying ads and questionable permissions. The application is open source and you can check on it at GitHub. NewPipe - the smart streaming solution Fast Small Battery Saving Little Data Consumption Lightweight Offline usage Extended Privacy Background Player Popup Player Subscriptions Bookmarks History Supported Services YouTube YouTube is one of the most popular video and live streaming platforms, including music, news, gaming and much more. visit service website PeerTube PeerTube is a decentralized video platform. Any PeerTube instance can be added to NewPipe. visit service website SoundCloud SoundCloud is a streaming platform for music. visit service website Bandcamp Bandcamp is an artist-friendly platform for sharing music. It offers user-friendly DRM-free downloads. visit service website media.ccc.de media.ccc.de is the video archive and live streaming platform of the German hacker and information security activist group Chaos Computer Club. visit service website And more to come! What other people think Sarah Ann Berger You really do have a quality app, which is a rarity. Previous Next Get NewPipe Android 5+ NewPipe 0.25.2 APK Info Hash sum: sha256 110c5c482a94c4991b1713a7914c716cd6365e71311796d42c7454fac99b3999 Signing key: B0:2E:90:7C:1C:D6:FC:57:C3:35:F0:88:D0:8F:50:5F:94:E4:D2:15 Release Highlights Support for searching for playlists and channels on PeerTube Subscriber count below channel name on video details page Copy hashtags/URLs in the video description with long pressing now New Appearance settings: Card view for videos in lists Handle duplicate streams on playlist creation UI improvements Multiple fixes Blog post Faster updates You can also add our own F-Droid repository to your client to receive updates even faster. https://archive.newpipe.net/fdroid/repo/?fingerprint=E2402C78F9B97C6C89E97DB914A2751FDA1D02FE2039CC0897A462BDB57E7501 Learn more F-Droid is a trusted catalogue of Free and Open Source applications for Android. Install the F-Droid app to get notified about updates. It enables you to download and update them too. If you install NewPipe via the default F-Droid repo, updates for NewPipe might take their time to arrive for you. If you want to use our own repository, check out the next item in this slideshow. F-Droid respects your privacy. They don’t track you, or your device. We would like to thank them for providing their services in this way. Need help? Did you enable unknown sources? Do you have problems updating? First steps NewPipe is free and open source Your advantages Quick help when you have a problem (nobody's ever had one) Dozens of people bring NewPipe forward and translate it into 113 languages. You can check the source code on GitHub and contribute to NewPipe. NewPipe is covered by the GPL 3.0 license. Get NewPipe from F-Droid and discover more FOSS apps. NewPipe is available for free Contribute 25839 Translate Improve this site Support NewPipe Why NewPipe is free We love what we are doing NewPipe is powered by a growing community Our goal is to make the internet a more free (libre) place and open it for everyone Your donations cover a majority of our costs F-Droid, Weblate, Sentry and other companies offer their services to open source projects for free Like the idea? We hope so! But don't forget, a lot of time and energy goes into this, and we share it with you. We offer you ways to support our work by donations - so we can get some extra snacks during work! Bring NewPipe forward Donate Support our developers Home Blog Press Donate Copyright © Team NewPipe. Revision 655dd8e Contact Licensing Privacy Policy",
    "commentLink": "https://news.ycombinator.com/item?id=38144400",
    "commentBody": "NewPipe – Lightweight YouTube experience for AndroidHacker NewspastloginNewPipe – Lightweight YouTube experience for Android (newpipe.net) 534 points by vyrotek 14 hours ago| hidepastfavorite252 comments b3nji 24 minutes agoWhat do you guys think to GrayJay? Following the creators, not the platforms. I&#x27;m told sponser block is in the works too.https:&#x2F;&#x2F;grayjay.app&#x2F; reply DrNosferatu 13 hours agoprevAlso, checkout NewPipe with built in SponsorBlock functionality:https:&#x2F;&#x2F;github.com&#x2F;polymorphicshade&#x2F;NewPipe reply m-p-3 11 hours agoparentThere is also LibreTube that comes with SponsorBlockhttps:&#x2F;&#x2F;libretube.dev&#x2F; reply microflash 11 minutes agorootparentLibreTube also allows you to directly stream from YouTube without any Invidious or Piped proxy which might be handy when these proxies are slow. reply rjzzleep 8 hours agorootparentprevLibreTube has a feature that no other piped&#x2F;invidious client has, which is to have one auth instance and one view instance.Sometimes videos are not viewable on a specific instance, but this way you can keep all your subscriptions and other settings even when switching to a different instance. reply mastazi 4 hours agorootparent> that no other piped&#x2F;invidious client has,If I understand what you are saying, Piped has this. For example I can stream from instance-1.com but at the same time I&#x27;m logged into instance-2.com so that I can keep my favourites and settings. See \"Instance\" section here https:&#x2F;&#x2F;piped.video&#x2F;preferences particularly the option \"Use a different instance for authentication\" reply kaliqt 31 minutes agorootparentCurrently, I think for many users Piped is completely unusable due to errors that consistently occur preventing the video from loading. reply karlzt 10 hours agorootparentprevAnd PipePipehttps:&#x2F;&#x2F;codeberg.org&#x2F;NullPointerException&#x2F;PipePipe reply BJxdr 9 hours agorootparentAnd Clipioushttps:&#x2F;&#x2F;github.com&#x2F;lamarios&#x2F;clipious reply k8svet 5 hours agorootparentprevHuh, quite a choice to not include screenshots. reply wkat4242 9 hours agoparentprevYeah this is the best version. I liked newpipe but their attitude to sponsorblock is tiring.But I moved to libretube now. Newpipe kept throwing up errors when I jumped around a video. reply ekianjo 6 hours agorootparent> I liked newpipe but their attitude to sponsorblock is tiring.What do they mean? They dont even want to provide it as an option? reply WithinReason 4 minutes agorootparentYes, also including the \"restore downvotes\" functionality reply bisby 7 hours agorootparentprevI use sponsorblock on desktop, and sometimes I find the parts that they skip annoying. I don&#x27;t fully agree with where and when they skip things. Watching Hot Ones today, they had a segment about how they have Hot Ones Hot Pockets now. and it skipped over it. But also, the hot pockets were a big part of the episode. For LTT videos, they skip the entire segue, instead of leaving the segue and then skipping the sponsor. The segues are a meme. They aren&#x27;t sponsorship. Another channel I watch tests microphones and uses ad read to demo demo different mic quality. At that point skipping the ad read is skipping the actual content of the video. There&#x27;s a few channels that mix the ad read into the context of what they are doing, and skipping those sections skips over important context for the rest of the video, and then i have to rewind into the sponsor part to see what is going on.I actually agree with newpipe to some degree. There is very bad sponsorship, and there is light mentions of sponsorship or sponsorship adjacent content. not everything is black or white. Sponsorblock makes it all or nothing (they have different categories but I often disagree with what they put into the categories).I wish I could turn it on per channel. because some channels I hate the 2 minute long brilliant ads, but on other channels Im fine with a 5 second \"we&#x27;re building this thing using X company parts because X company is sponsoring the video\"I still use it, but i find it just as frustrating as it is helpful sometimes. reply DoktorDelta 6 hours agorootparentSponsorblock does allow you to whitelist specific channels. Should be in the settings somewhere, I&#x27;ve only ever done it via the ReVanced app but it should still be an option on desktop. reply bisby 5 hours agorootparentBy \"on desktop\" I mean FreeTube (and simply not via NewPipe or on mobile). It has options for the different types of things to skip, but my issue is with disagreeing with how overly strict they can be about flagging things as sponsor segments.Some of it is per channel settings (some channels have way too long of sponsor segments), and some of it is just disagreement about how granular to be (on LTT they cut out the entire segue to the sponsor, and not just the sponsor spot, i dont want the LTT sponsors, but not being serious is their whole thing, I don&#x27;t mind watching the segues) reply ryncewynd 4 hours agorootparentprevWhat&#x27;s the channel that does ad reads to demo microphone quality?That&#x27;s such a simple and genius idea reply addandsubtract 2 hours agorootparentNot the channel that OP meant, but Tom Scott recently did a video on decibel and loudness, where he reads a sponsor message during a mic check: https:&#x2F;&#x2F;youtu.be&#x2F;Is_wu0VRIqQ reply 2Gkashmiri 6 hours agorootparentprevYou can configure sponsorblock with various options. End credits, sponsored sections, lots of things reply bisby 5 hours agorootparentRight. My issue is that I disagree with what they consider \"sponsored sections\" sometimes. \"Only skip sponsor segments longer than 30 seconds\" isn&#x27;t an option. Long ads that make up most of the video: bad. A brief passing comment about \"And thanks to our sponsor for supporting this video\" dont need a cut. reply 2Gkashmiri 4 hours agorootparentthat entirely depends on the user contributions. you know its people manually submitting these snippets of what to skip and not automatic? replyseqizz 12 hours agoparentprevYeah this is an absolute gem. Sad that original NewPipe didn&#x27;t include the functionality, even optionally. reply aloisdg 11 hours agorootparentwell we tried to argue about it back in the time reply wkat4242 9 hours agorootparentIt annoyed me so much. Just let the users make their own choices.But anyway I had too many issues with newpipe anyway even the fork. reply WD40forRust 4 hours agoparentprevAlso check out BraveNewPipe, which is NewPipe x SponsorBlock with proper search options NewPipe also refuses to implement as nofix! reply micw 12 hours agoparentprevHonestly, I do not understand why one should use this. I have recently seen some high quality YT videos, each of a length of 30-60 minutes. In those videos where some sponsors mentioned which took only one or two minutes. Seems perfectly OK for me to support the creators. I guess if many people block sponsor content, this kind of vids will die. reply happytiger 10 hours agorootparentReally? They will die? Are you suggesting that long form video didn’t exist before YouTube sponsors?Innovation requires disruption, which requires competition, which YouTube has none of. If you want long form video content to survive in the medium to long term it needs to be possible to make a living in a diversity of ways and not be dependent on just one provider. So in that sense supporting the existing system only serves to reinforce the failure of long form content, as eventually a system without substantial competition will move to reduce cost and eventually focus only on the more profitable short form content (which is what’s happening).The current war between YouTube and its users wouldn’t be possible if there were any viable alternatives at all.I would think if you really cared about long form creators you’d support platforms that paid properly and didn’t keep 45% of their revenues. Even Apple only keeps 30% and they get deeply criticized, but whenever YouTube comes up people come out defend them. And all of this happens before subscription revenue, and it doesn’t include any of the other revenue Google takes off the top like landing page ads, sponsored promotion, etc.Long form is in danger because of YouTube’s shift towards short form video. We should be pushing for competitors and not allowing them this insanely dominant position to an entire Internet content type. reply darkwater 2 hours agorootparentAre you saying that YT takes 45% of the money a YouTuber negotiates directly with a sponsor to talk about them for 1-2 minutes in a long-form video? reply Nextgrid 11 hours agorootparentprevIf you watch YouTube enough you&#x27;ll basically become aware of all the sponsors pretty quickly (and may even be a customer of some already!), so any exposure beyond that is a waste of time for all involved - if I didn&#x27;t buy the product after seeing it 10 times, I won&#x27;t buy it after seeing it the 11th either. reply charcircuit 10 hours agorootparent>if I didn&#x27;t buy the product after seeing it 10 times, I won&#x27;t buy it after seeing it the 11th either.There is still value to the sponser in keeping a brand fresh in your mind reply SkipperTool 9 hours agorootparentPeople forget that over-advertising can be more damaging than no- or under-advertising. Take Ryan Reynolds and Mint Mobile. I genuinely love his acting (to each their own for sure) but after being constantly bombarded with commercials for Mint Mobile, I legitimately am tired and lately avoid not just him, but Mint Mobile, Ryan Reynolds, and anything associated with him.The problem with YouTube is not that they have ads...it is that the platform sprays for effect while claiming to care about what they are doing when any reasonable user can tell that they are simply flooding the pipes with ad content. reply TerrifiedMouse 9 hours agorootparent> The problem with YouTube is not that they have ads...it is that the platform sprays for effect while claiming to care about what they are doing when any reasonable user can tell that they are simply flooding the pipes with ad content.From what I heard, Google’s sells ad space via an auction system. They collect information about a viewer then when said viewer watches a video&#x2F;visits a website, all the ad space on the video&#x2F;website goes on auction with the viewer’s characteristics attached in real time. Advertisers will look at the viewer characteristics and decide if they want to bid. The winner of the auction gets the ad spot and has their ad shown. All this is of course fully automated and over in just a few milliseconds.What this means is, advertisers have full control over what ads you get. Ad space goes to the highest bidder. If you have money, you can spam a specific demographic to death with your ads. Google does not in anyway try to protect the quality of life of its users.Google’s system is both amazing and disappointing at the same time. It’s an amazingly efficient way to maximize the value of ad space but disappointing in the Google doesn’t do any kind of advance user behavior modeling to see what ads the user would be most receptive to (i.e. would not frustrate the user, high probability of engagement with what’s advertised, …) instead they leave it to the “free market” (i.e. the advertisers) to figure that out. reply dvaletin 6 hours agorootparentIt’s an amazingly efficient way to maximize the google profit. Google for google case, when they faked their auction in order to get more revenue… reply djtango 4 hours agorootparentprevI&#x27;m actually relatively chilled about ads. I like to see who is advertising what from a macro POV but one thing online was super bad at was spamming ads at you. The most egregious was Crunchyroll back in the day where you might see the same ad back to back 3 times in a row for every ep you watched.Maybe the fix is actually to adjust and make the ad lower energy and more bland to target the subliminal more, assuming the online ad networks don&#x27;t sort themselves out reply matheusmoreira 8 hours agorootparentprevSponsors don&#x27;t get to hijack the caches of our brains. Our minds are ours, we alone will decide what information is or isn&#x27;t \"kept fresh\". reply mtlmtlmtlmtl 9 hours agorootparentprevOh I&#x27;m so sorry, in that case I&#x27;ll watch every single NordVPN sponsorship spot. reply yjftsjthsd-h 7 hours agorootparentprevThat&#x27;s why when you see an advertisement and recognize it you should make a deliberate effort to remember why you dislike the brand. If the advertiser gets to wish for awareness, I&#x27;m entitled to be the monkey&#x27;s paw. reply wiseowise 2 hours agorootparentprevNot for me. reply smegsicle 10 hours agorootparentprevwell then fuckem reply jlokier 8 hours agorootparentprevI don&#x27;t agree. I watch YouTube tech, math, and science content every day and that&#x27;s not my experience.There are a small set of products that seem to be everywhere for a while, occupying a minority of sponsor segments. But in most sponsor segments I see one-off products that I&#x27;ll never see again on any channel.On the rare occasions where they show something that looks really useful to me, I&#x27;d have to take a note because it&#x27;s so unlikely to be a product I will encounter again.I don&#x27;t take those notes, so I&#x27;ve seen a lot of great-looking products that I&#x27;ll never buy due to forgetting they exist by the time they would be useful to me. When I need something I tend to browse for what&#x27;s available and&#x2F;or look at reviews with a skeptical eye, as I&#x27;m sure many people do.So the sponsor segments aren&#x27;t that effective for me. But I wouldn&#x27;t call them repetitive, except for a few products that come up a lot. reply nfriedly 9 hours agorootparentprevDespite the name, it actually blocks a lot more than just sponsors. It can be set to automatically skip intros, outros, recaps, like and subscribe reminders, non-music sections of music videos, and other \"fluff\".It significantly boosts the signal to noise ratio, and makes YouTube a much better experience. reply deadfece 7 hours agorootparentThat sounds very useful on the non-ad improvements, and oddly enough I might try it for these areas. The sponsor mentions don&#x27;t really bother me and I just skip them if they&#x27;re not relevant. Sometimes it&#x27;s kind of neat to see one and think \"Oh, this creator got sponsored by , that&#x27;s cool, get paid!\", or if they&#x27;re sponsored by bs snake oil companies, then I may discount the creator&#x27;s input a great deal on account of them not having any discernment.It&#x27;s a small data point about the content, so it can sometimes be helpful if I&#x27;m trying to decide who to pick amongst forty different 2hr lectures on the same thing. reply Bishonen88 11 hours agorootparentprevSo what are we paying premium for if the creator pushes their own ads? Anyhow, when I was watching TV year&#x27;s ago, I hardly ever stayed on a channel during the ads break. I won&#x27;t sacrifice my time being sold on mostly rubbish which I wouldn&#x27;t buy anyway (vpn, brilliant etc.) reply matheusmoreira 8 hours agorootparentprev> I do not understand why one should use this.Because we don&#x27;t want to be advertised to. There is no need for any further justification.> I guess if many people block sponsor content, this kind of vids will die.Let them die. reply dawidpotocki 7 hours agorootparentprevOn my laptop alone SponsorBlock has skipped 5225 segments, which equals to 1d 20h. That&#x27;s a lot of time I would waste by watching all of these.Also, if you are fine with sponsor spots, you probably would have to also be okay with watching ads, so no adblocking either then. reply pretzel5297 10 hours agorootparentprevI have it configured to not skip ads on a few creators who:1- Makes good, useful content that I watch often. 2- Doesn&#x27;t abuse sponsorship sections. Sponsor segment at the beginning of a video? Auto-skip. Half the video is about the sponsor? Auto-skip. Constantly gets sponsorship from spam&#x2F;fraudy&#x2F;irrelevant companies? Auto-skip.For all the channels that doesn&#x27;t fall into these categories: tough luck. reply trolan 11 hours agorootparentprevSponsorblock can also skip theme songs, recaps, and other parts of content you may not want. I also enjoy being able to show my children certain content from regular YouTube without having them subjected to the ads or me scrolling around. reply ekianjo 6 hours agorootparentprev> In those videos where some sponsors mentioned which took only one or two minutes. Seems perfectly OK for me to support the creators.There is no good reason to force ads on anyone. I dont care if the creator needs to make a living out of youtube. Thats their problem and they should use stuff like patreon instead. reply ndriscoll 11 hours agorootparentprevI see two scenarios:1. The computer doesn&#x27;t know whether you skipped the ad, and won&#x27;t feel bad when you do.2. The computer does track whether you watch the ad segment, and that information makes it back to the advertiser. Personally, I wouldn&#x27;t want to support \"creators\" spying on me in this way.In either case, the creator has no costs for you watching, and youtube has lower costs if you skip the sponsored segment. If you choose not to watch the video in the first place, it can only hurt their sponsorship. reply autoexec 6 hours agorootparent> In either case, the creator has no costs for you watching, and youtube has lower costs if you skip the sponsored segment.I&#x27;m pretty sure the youtuber gets money from google for views even if you don&#x27;t view their sponsored content section (if someone knows better please let me know) and Google makes money by collecting data on what you watch, how often, when, using what device, from what IP address, etc. reply gsich 7 hours agorootparentprevAt least for Youtube the 2nd statement is true. You can see it in videos with the spike after an ad segment. reply londons_explore 11 hours agorootparentprevTry using sponsorblock for a few weeks and then report back...I think it&#x27;s one of those things like shoes... Nobody thinks they need shoes till they try them, and then they tend to wear them all the time. reply Roark66 2 hours agorootparentprevI really don&#x27;t care about sponsor block (I mean I don&#x27;t mind these parts of the videos), but adblock on YouTube is absolutely essential. And these apps usually when they have adblocl this includes sponsor block. reply endisneigh 11 hours agorootparentprevPeople want content without any inconvenience, it’s that simple.If they use ads they will block.If they ask for payment they will pirate.Luckily these people are the minority or there would be no content to begin with reply poink 10 hours agorootparent> Luckily these people are the minority or there would be no content to begin withThere is a whole galaxy of content creators who make great stuff but clearly aren’t making a living directly off content.People like making content for tons of reasons. reply Nextgrid 11 hours agorootparentprev> If they ask for payment they will pirate.If the price & convenience is right, a significant chunk (enough to offset the impact of freeloaders) will pay.Movie piracy used to be the norm before Netflix came along, yet movies were still made.Music piracy was the same until Spotify came along, yet there&#x27;s more music than ever being produced. reply endisneigh 11 hours agorootparent> Luckily these people are the minority or there would be no content to begin withThe vast majority of people do not pirate, and most people who pay would probably find piracy unethical to begin with. reply southerntofu 10 hours agorootparent> The vast majority of people do not pirateI would be happy to see a serious study about this. What you call piracy has been the norm for centuries and millenia for spreading culture and reinterpreting music&#x2F;shows produced by other people.In the vast majority of the world (including in the global north), the budget you have for culture is low (if any) and when you have people with a computer, copying stuff is very common. For example El Paquete in Cuba was well documented, but even growing up in France i remember so many examples of just sharing with friends (before the Internet but still).Even for the newer generations, Youtube & Spotify started as pirate services hosting a myriad of copyrighted content. I don&#x27;t know about Spotify, but i still see people watching whole movies&#x2F;shows pirated on Youtube rather often when going to places with shared computers.Sharing is the norm. Restricting sharing is delusional desire for control. Still, it&#x27;s important that people making art & science make a living, although it&#x27;s not just them who need to make a living in this crazy world and we&#x27;d be all better off with UBI or abolition of private property (one can dream). So you may find it interesting that HADOPI, the law that criminalized non-profit file-sharing in France actually ordered a study on piracy and media consumption back in the early 2010s, and their own study acknowledged that there was no economic loss from piracy (as people don&#x27;t reduce their budget due to pirating) and the bigger pirates were also the bigger buyers.I dare you to find a single person who \"does not pirate\" in any sense of the world and actively respects copyright laws. If only, someone who doesn&#x27;t sing \"happy birthday\" song because that&#x27;s actually copyright infringement. Or doesn&#x27;t watch music videos on Youtube because they might be pirated. I bet that person doesn&#x27;t exist, or at least that they are not the \"vast majority\". reply eldaisfish 10 hours agorootparentthis is a misleading reply because you ignore the speed and scale at which the internet allows sharing to happen. In the past, the speed of sharing was limited by communication at the time, either word of mouth, the speed of printing books etc.If what you describe truly was the norm, then creating any sort of content for any reason would generate negative returns. This was and is rarely the case. I do not see it as unfair for content creators to be paid and to demand that you consume their content on their terms, within reason. reply autoexec 7 hours agorootparent> If what you describe truly was the norm, then creating any sort of content for any reason would generate negative returns.Piracy doesn&#x27;t always hurt creators, and often it helps them make money. The people who pirate the most, also spend the most money on the things they pirate (https:&#x2F;&#x2F;torrentfreak.com&#x2F;pirates-are-valuable-customers-not-...). Just because something is pirated that does not mean there was a loss of income for the creator. I&#x27;ve pirated things and enjoyed them enough that I purchased them later, and I&#x27;ve purchased physical copies of things and later pirated digital copies. I&#x27;ve also pirated things I&#x27;d never have purchased at all which means there was never any chance of any of my money going to the creator.The vast majority of people today pirate all the time. Posting a meme that contains a copyrighted character or image, or listening to a song on youtube from anything other than an official channel, sharing a webcomic over social media, creating a GIF from a movie or TV show, streaming a video game playthrough, and downloading a youtube video to edit into a reaction video are all technically violations of copyright law. Copyright law is so draconian that what most people consider totally normal activities online are violations.> I do not see it as unfair for content creators to be paid and to demand that you consume their content on their terms, within reason.I agree that creators have a right for a chance at payment for their work. I disagree that I have no right to choose how to consume that content. Most of the restrictions on how media is intended to be consumed comes from the corporations who own the copyright and not the creators themselves.When creators make it known that they want their content consumed in a certain way I&#x27;ll take it into consideration. Musicians who ask that you only ever listen to their albums in their entirety and never listen to a single track I ignore. When Dave Chappelle asked fans to not watch Chappelle&#x27;s Show I agreed and didn&#x27;t. replyekianjo 5 hours agorootparentprev> Luckily these people are the minority or there would be no content to begin withMost authors write books without making any money for years. They write because they enjoy writing. Not because they need it to make a living. So your statement is easily invalidated by reality reply matheusmoreira 8 hours agorootparentprevTotal nonsense. Before all this advertising nonsense, the web used to be literally full of people who had enough intrinsic motivation to create without compensation. People used to literally pay to have their own website in order to get their ideas out there.Open source is literally proof of this. I make software in my free time simply because I enjoy it. I publish it out there in a variety of licenses with zero expectations. I got a GitHub Sponsors profile with zero sponsors and I&#x27;m not even mad about it. reply freshhawk 7 hours agorootparentWhen your job depends on it you tend to work really hard at believing that advertising is necessary and actually it&#x27;s good, actually actually relevant ads are helpful! After all, if it wasn&#x27;t then what am I doing with my life? reply autoexec 6 hours agorootparentIn the case of advertisers that&#x27;d be mostly lying and manipulating people while hurting them by enabling a dangerous system of surveillance that threatens themselves and their families along with the rest of us. If I were an advertiser I&#x27;d probably want to lie to myself too. reply capybara_2020 5 hours agorootparentprevIn most cases sponsored content has the same problem as traditional ads but because it is coming directly from someone people see as more reliable viewers might fall for it quicker. With the added disadvantage of those ads having no real regulation and opaque quality checks, if any by the creator.One example that comes to mind is how a lot of financial creators pushed crypto products. reply ropable 9 hours agorootparentprevThe human ability to rationalise blocking out sponsored advertising is basically infinite. reply ekianjo 6 hours agorootparentThe human ability to justify ads is apparently also infinite but has much less valid arguments reply skydhash 7 hours agorootparentprevWhy would people watch things they don’t like? reply posterboy 10 hours agorootparentprevit&#x27;ll lead to more hidden advertisement reply poink 10 hours agorootparentprevIf you’re not going to buy the sponsored product you’re just wasting time and bandwidth by watching the sponsor segment reply mcpackieh 11 hours agorootparentprevBesides skipping sponsor segments, it has many other useful features such as marking&#x2F;skipping intros and outros, filler&#x2F;jokes, and marking the timestamp of the video highlight which is useful if you want to skip 20 minutes of filler and jump to the part the thumbnail promises. reply bozhark 11 hours agorootparentprevThis kind of sponsor* reply iamflimflam1 1 hour agoprevIt’s surprising how many people in the comments don’t want adverts, don’t want sponsorship AND don’t want to pay anything for content. reply r0ckarong 1 hour agoparentIt&#x27;s the old problem of I don&#x27;t care about anything that you advertised to me, don&#x27;t care about most of the content that is eating your budget and simply won&#x27;t stand for being called a criminal after being the reason you are a thing in the first place. You&#x27;re trying to get my money, I&#x27;m trying to get your content. We both cheat. That&#x27;s always been the game. reply 5ersi 54 minutes agorootparentSo if a store is trying to sell products, and you try to steal them, you are both cheating? reply gobip 48 minutes agorootparentIf I come to your house, destroy your door, steal your mom&#x27;s dinner for 4 ppl, are we both cheating?How about we compare with something actually worth comparing for? For example switching channels when there&#x27;s the ad break, or turning the sound off, etc.When I download something, I&#x27;m not \"stealing it\". When I block an ad, I&#x27;m not stealing either. I didn&#x27;t remove 10$ from Google&#x27;s bank account that was there before. reply tcfhgj 7 minutes agorootparentprevthe store is donating me products with an ad flyer reply yread 24 minutes agoparentprevIf you get people hooked by being free you can&#x27;t be surprised they want it to be free reply eimrine 1 hour agoparentprevI would like to pay YT&#x2F;creators with my own PC with several TB disk space and 100Mbps connection (even 1Gbps inside country) which might host some videos by the network&#x27;s choice. reply piaste 1 hour agoparentprevNonsense. Blocking internet ads is simply the 21st century version of changing channels during commercial breaks. reply globular-toast 43 minutes agoparentprevWhy would I want to pay for anything? Consumers generally seek the lowest possible price. That&#x27;s how economics works.YouTube wouldn&#x27;t be what it is if it wasn&#x27;t \"free\".I do pay for my internet connection and bandwidth. But obviously I found the best possible deal.There is the busking model and I do choose to contribute a small amount to a small number of creators that I can tell put a lot of cash and effort into their uploads. But YouTube premium would cost more than all of those and I&#x27;d be paying into a monopoly, paying for MrBeast and other worthless crap and no longer paying the aforementioned creators. reply jaquesy 13 hours agoprevI&#x27;ve been using this for years to download YouTube videos when I go on trips, it makes it super easy since you can just share the link directly from YouTube to NewPipe and it&#x27;ll pop up a neat download UI to select quality and threads to use.Really great app for that purpose, although I will say I just used ReVanced for general YouTube browsing on my phone. reply chii 7 hours agoparentI believe the one thing i see lacking for newpipe is viewing livestreams. Revanced is the way to go for a good youtube experience, but i use newpipe for downloading and saving a video offline. reply autoexec 6 hours agorootparentI&#x27;ve watched livestreams in newpipe. A few hours after it ended I used new pipe again to download the whole thing to see the parts I missed (new pipe wouldn&#x27;t let me rewind to the start of the livestream after I joined) reply pmontra 2 hours agorootparentprevI can view live streams in NewPipe 0.25.2 and I think I airways did.This is a live stream I just watched to check that it works https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ydYDqZQpim8It&#x27;s a water pool in the Namib desert, so safe for work reply 1una 6 hours agorootparentprevv0.26.0 (the next release) should support viewing livestreams. See https:&#x2F;&#x2F;github.com&#x2F;TeamNewPipe&#x2F;NewPipe&#x2F;issues&#x2F;10471 reply sigmar 12 hours agoprevI&#x27;ve been using this on android for more than 6 years. Love being able to quickly download a local copy of video or music as I&#x27;m boarding a flight or train. Highly recommend getting it using fdroid instead of apk because there have been points when youtube made changes that break the app and you&#x27;ll need to get the latest update reply jiffygist 1 hour agoprevI enjoy using newpipe for streaming music and podcasts on a phone. However I feel like nothing has changed for a while. My wishlist: viewing replies, after clicking on a timestamp it should stay in background mode (now it switches to popup), do not stack videos (back button should return to main page), searching within history, incognito mode. reply Animats 12 hours agoprevInstallable via F-Droid, always a good sign. reply FrenchyJiby 11 hours agoparentAbsolutely, though the default F-Droid repo is a little slow to update (in case of the twice-a-year \"Youtube changed their UI, breaking the world\" update), so Newpipe team recommends their own (third party) F-Droid repo[1], where the updates are fresh off the press.[1]: https:&#x2F;&#x2F;newpipe.net&#x2F;FAQ&#x2F;tutorials&#x2F;install-add-fdroid-repo&#x2F; reply globalnode 9 hours agoparentprevf-droid website says \"This app promotes or depends entirely on a non-free network service\" -- whats that all about? reply maxhille 9 hours agorootparentBecause YouTube itself is non-free as in proprietary software reply globalnode 7 hours agorootparentright, i knew that -- thanks max :D reply bluGill 8 hours agorootparentprevYou should use peertube instead. Saddly there isn&#x27;t much content there, but try to look there first and reward those who post there with your eyeballs. reply Animats 8 hours agorootparentPeertube is useful, but so little used that I have 3 of the top 20 videos on Hardlimit, and they&#x27;re tech demos of a rather obscure program. The most popular has 2,500 views.What might be useful is some way to use PeerTube distribution on any .mp4 file. Peertube is only a caching system, not a replicated hosting system like BitTorrent. You have to host one copy of the file somewhere. You should be able to put that master copy on any low-end web server, generate a Peertube URL for it, and let Peertube spool it out. Peertube works by mooching bandwidth off the people watching, so as viewership goes up, so do serving resources. reply noman-land 13 hours agoprevNewPipe is the best. Dunno how people watch YouTube without it. You can also subscribe to channels from it without a YouTube account. reply endorphine 4 hours agoparentI&#x27;m watching fine on Firefox with uBlock Origin. I mean, I don&#x27;t get ads. What else am I missing by not using NewPipe (I don&#x27;t care about downloading videos). reply mxmbrb 13 minutes agorootparentOne can&#x27;t switch to a different tab, out of the browser or lock the phone while continuing listening to the video&#x2F;podcast&#x2F;music. reply fwn 46 minutes agorootparentprevThe parent wrote> You can also subscribe to channels from it without a YouTube account.This means that losing your Google account does not mean losing your playlist.Big tech accounts can be surprisingly fragile. reply ceuk 8 minutes agorootparentFYI Google takeout lets you set regular, automatic exports of any of your Google data (e.g. you can have a backup of your YouTube subscriptions, playlists etc emailed to you every month). reply winwang 12 minutes agoparentprevIt&#x27;s extremely simple: I pay for Premium. reply grudg3 12 hours agoparentprevAgree, but unfortunately I still can&#x27;t use it to stream to my Chromecast so I need to go to the YouTube app when I want to play stuff on TV reply m4rtink 11 hours agorootparentSmartTube supports Chromecast&#x2F;Android TV: https:&#x2F;&#x2F;github.com&#x2F;yuliskov&#x2F;SmartTube reply Zambyte 11 hours agorootparentprevCan&#x27;t you just display your screen using chromecast? I use newpipe on my tv all the time by juat plugging my phone in via HDMI. reply anoncow 12 hours agoprevI can&#x27;t find a source which has all the financial figures for YouTube, but YouTube had a gross revenue of 29 bn USD in 2022. Alphabet had 55 bn USD in net income in 2022 of which how much was YouTube&#x27;s share in the net income is unknown (or at least I couldn&#x27;t find it).Let&#x27;s use some assumptions to get to a number.1. Let&#x27;s assume that out of the 29 bn USD revenue that YouTube brings in 55% is shared with creators. Thus we are left with 13 bn USD.2. We know that YouTube&#x27;s share in the overall revenue of Alphabet was 10.5%. Let&#x27;s assume that all of Alphabet&#x27;s properties were proportionately profitable (highly incorrect assumption). If the properties were proportionately profitable, YouTube&#x27;s would have bought in a net income of 5.75 bn.3. In the past it has been reported that YouTube has been breakeven from a profitability perspective.This means that YouTube&#x27;s net profit is in the range of 0 to 5bn USD. This is at best a gross profit margin of 17% which is not good for an internet services company.I strongly believe technology like NewPipe should exist and companies shouldn&#x27;t push for more DRM. But end users should not misuse open technologies so much so that companies end up with no other option but E2E encryption for video. reply namrog84 12 hours agoparentI wonder if a torrent style equivalent for bandwidth sharing for things like YouTube content creators could work. Like you get ads unless you seed enough and then no ads when you consume.I think it&#x27;d only work as a near seamless ui experience and not actually using torrents or any extra setup or complications. Probably branded a bit differently. reply davkan 11 hours agorootparentThe problem with p2p for video is that the storage and bandwidth requirements are enormous most platform consumers are using mobile devices with limited storage and bandwidth which would have difficulty contributing to the network.Maybe some type of appliance one could run out of their home to buy in or something? But a lot of home users have terrible upload or no internet at all.Peertube is great but could never keep up with the sheer volume of data uploaded to YouTube. reply hsbauauvhabzb 11 hours agorootparentprevBandwidth costs money, YouTube can probably do it cheaper than end users at scale. But this isn’t about reduced bandwidth expenses, this is about maximising profit extraction. reply chii 7 hours agorootparent> But this isn’t about reduced bandwidth expenses, this is about maximising profit extraction.Arent these goals one and the same?Profit maximization is required under a capitalist system. By optimizig bandwidth expenses, you are achieving profit maximization. reply hsbauauvhabzb 2 hours agorootparentNo, the cost of bandwidth is less than their subscription value, presumably providing this option would result in less profit despite lower server costs, but they already have a global CDN so I assume it’s cost is relatively low anyway. I imagine if this was a path they wanted to go down, they could crowdsource it via chrome directly, without providing any positive value for users. reply AnonHP 6 hours agoparentprev> Let&#x27;s assume that out of the 29 bn USD revenue that YouTube brings in 55% is shared with creators. Thus we are left with 13 bn USD.That’s a very poor and totally off assumption to start with, and makes it seem like YouTube is extremely generous. I’d guess YouTube shares, at best, 20% of the ad revenue with the content creator. reply drbacon 4 hours agorootparentIt&#x27;s 55%. This is the first non-Google result from a Google search:https:&#x2F;&#x2F;www.yrcharisma.com&#x2F;the-youtube-revenue-split-who-kee... reply bkm 12 hours agoprevNewpipe is great for background listening and PIP (window can be resized&#x2F;moved). For downloading, Seal reigns supreme. You can &#x27;share&#x27; a video to the app and it downloads the video right away.Link: https:&#x2F;&#x2F;f-droid.org&#x2F;packages&#x2F;com.junkfood.seal&#x2F; reply Roark66 2 hours agoprevDon&#x27;t forget about android TV :-)There is SmartTubeNext with ad&#x2F;sponsor block and most importantly it let&#x27;s you remove shorts, news, games, music, transmissions. And it is open source. reply WaffleIronMaker 9 hours agoprevI also recommend GrayJay https:&#x2F;&#x2F;GrayJay.app reply dawidpotocki 6 hours agoparentJust a small note about it: it&#x27;s not open-source and their excuse is… pretty poor. They don&#x27;t give you modification rights at all, so you can&#x27;t even legally contribute to the project.The platform support is implemented inside \"plugins\" and they are under AGPL-3.0, so… can you even distribute the application, considering that the licence of the application and plugins seem to be incompatible at my non-lawyer first glance?Their excuse for their application licence so that they can legally prevent people from uploading ad-infested versions in Google Play and similar platforms under their name… but that&#x27;s why MPL 2.0 and Apache 2.0 have trademark exclusion clauses. reply wing-_-nuts 4 hours agoparentprevI tried that, and wanted to like it but the lack of video recommendations killed it for me. I couldn&#x27;t even see videos from my subscriptions. Major disappointment. reply beretguy 8 hours agoparentprevLouis Rossmann had a video introducing this app, but I can’t find it. Did YouTube force him to take down that video, anybody knows? reply nickorlow 8 hours agorootparentYes... youtube gave the videos a community guideline strike and removed them. You can watch the videos in this thread: https:&#x2F;&#x2F;x.com&#x2F;futo_tech&#x2F;status&#x2F;1719468941582442871?s=46 reply Ruthalas 9 hours agoparentprevWhat are your experiences with it? Interested to hear a review from a user. reply curvilinear_m 31 minutes agorootparentI use it as my main YouTube app on my phone, it&#x27;s working nice. One drawback for me is the failure if you have too many YouTube subscriptions (>200-300). I removed some creators and it&#x27;s working fine. You see Grayjay&#x27;s likes and comments on videos but there are very few of them (you also see YouTube comments and likes). I wish the community around it grew, it has potential. reply kim0 9 hours agoparentprevI use it daily, has been amazing so far reply aantix 6 hours agoprevI’m looking for an iOS client that will allow me to block certain keywords from being displayed as recommendations?E.g. Minecraft, mrbeast, etcI want my kids to watch something other than their hundredth Minecraft walkthrough, screaming YouTuber video.. reply krupan 5 hours agoparentJust block YouTube, your kids will find other things to do. If you find a good video then watch it with them on your device reply aantix 5 hours agorootparentFeels like an opportunity lost.I want them to explore on their own, including online content.I just want the topics for videos to be more diverse. reply sannysanoff 8 minutes agorootparentbeen there. If you block something, they downgrade to something even worse, each bloody time. reply linuxhansl 8 hours agoprevBeen using this one forever. It&#x27;s pretty good. Every now and then Youtube changes something in their API, then Newpipe usually needs to a day or two to adjust. reply autoexec 6 hours agoparentSometimes it&#x27;s been several weeks (partly the fault of F-Droid&#x27;s repo), but it&#x27;s worth waiting. I refuse to watch youtube using youtube these days. reply themk 6 hours agorootparentNewpipe publish their own f-droid repo. No need to wait. reply tomrod 12 hours agoprevWe use it daily. We love quietly streaming music during meals. It supports subscriptions (though no account integration to Google, obviously).Well done NewPipe, you&#x27;re showing how web applications should be done. reply Unfrozen0688 11 hours agoprevAnother reason why Android is the superior phone OS. reply miki123211 11 hours agoparentiOS has Yattee[1].It&#x27;s technically a personal video-watching app, not a Youtube app, which you&#x27;re supposed to link with your own personal video server, but the server APIs it is compatible with are the same APIs that are exposed by Invidious and Newpipe instances. This is not a coincidence.I&#x27;m sure Apple is going to delist it from the App Store at some point (App Store guidelines are just that, guidelines, and there&#x27;s no getting around them with a weird loophole like you can do with actual laws), but it works for now. reply lolinder 10 hours agorootparent> I&#x27;m sure Apple is going to delist it from the App Store at some point (App Store guidelines are just that, guidelines, and there&#x27;s no getting around them with a weird loophole like you can do with actual laws), but it works for now.Hence F-Droid, which cannot exist on iOS. reply lxgr 9 hours agorootparentNot yet! The EU’s Digital Markets Act will go into force soon. reply lolinder 9 hours agorootparentTrue! Unfortunately, I fully expect Apple to keep alternate app stores locked out in other locales. I&#x27;ll be happy if I&#x27;m proven wrong, but they&#x27;ve been so determined in fighting this that it seems likely they&#x27;ll consider it to be worth the extra work. reply chii 7 hours agorootparenta 30% profit margin business for barely any real work&#x2F;capital investment, this is a business they will fight for. reply idle_zealot 9 hours agorootparentprevDoes this actually work? I&#x27;ve tried a couple of times but it nearly always hangs on loading videos, and when it does load it gets stuck buffering every few seconds. Perhaps the Piped instance I&#x27;m connected too is overloaded? reply ggrelet 10 hours agorootparentprev[1] https:&#x2F;&#x2F;apps.apple.com&#x2F;us&#x2F;app&#x2F;yattee&#x2F;id1595136629 reply ufish235 6 hours agorootparentprevAny hint on how to actually do this? For those of us who are comfortable with Insidious or Newpipe. reply ChrisArchitect 7 hours agoprevAnything new here?(2022)Some previous discussion last year https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=30449570 reply jeena 9 hours agoprevThe main reason why I don&#x27;t use it is that I can&#x27;t log in into my PeerTube instance and watch the Internal and Private videos for which you have to be logged in. But this kind of goes against the privacy stand against giving google the information about who you are they have. Which in my case is a bit different because I&#x27;m the admin of my own PeerTube instance. reply scosman 13 hours agoprevFor iOS users, check out “yattee” for a similar setup reply pzmarzly 10 minutes agoparentI am very happy with Vinegar for Safari - a simple adblock + PiP + background play extension reply tomrod 12 hours agoparentprevHighly recommend using F-Droid-capable phones&#x2F;mobile support systems. Perhaps one day the iOS ecosystem will recognize the economic value of democratizing the platform, but until that day it&#x27;s better to use open source software and as open of hardware as possible. reply alwayslikethis 11 hours agorootparentI think they are going to be forced to open the platform soon, per the new Digital Markets Act by the EU. reply hxii 1 hour agorootparentprevThe parent comment was a suggestion for an iOS alternative.Why did you feel the urge to push unsolicited advice? I honestly don’t get it. reply jrflowers 10 hours agorootparentprevThis is good advice. If you own an iOS device you should consider not owning an iOS device. reply rplnt 2 hours agorootparentI would love not to, but there is not a single human-sized (as in can be operated by human hand) android phone on the market that is also not a slow budget ohone. Now there is no iphone either, but the last minis should last a while. reply sneak 1 hour agorootparentprevAs a long time iOS user, I used a Pixel with Graphene for a whole year.Android has so many rough edges, and the Pixel hardware is still a few years behind the iPhone. I switched back.I miss syncthing and being able to install the apps that I want, but my phone is too important a device for rough edges. reply comprev 12 hours agoparentprev\"musi\" is also a great advert-free YouTube client for iOS. reply davkan 11 hours agoparentprevYou can also use altstore to sideload uyou+. reply bArray 9 hours agoprevI use an old Android device for watching Youtube, but Youtube recently dropped support for it. Immediately downloaded F-Droid, installed this, back up and running better than ever.One thing to note is that the Google export for Youtube is completely broken and I&#x27;ve been manually importing subscriptions. reply chasil 13 hours agoprevI use Skytube; I wasn&#x27;t aware that Newpipe had a download feature. reply jakeogh 52 minutes agoparentskytube is nice for search since you can ban chans, and therefore skip the spam. reply qwertox 6 hours agoprevIs there somewhere a curated list of good YouTube channels, since the recommendation engine of YT won&#x27;t work with these apps (or at least I guess that they won&#x27;t work with them)?Like a RSS with a channel list containing channels like Jeff Geerling, Code to the Moon, Jon Gjengset, Everyday Astronaut and the like? reply random_ 13 hours agoprevAmazing app, I hope it will last for a long time. reply lacrimacida 12 hours agoprevAnything like this for Ios? Im now downloading vids or sound files from youtube for offline use with invidio.us reply haunter 12 hours agoparentYattee, needs a bit more tinkering to setup though (it&#x27;s a general network videoplayer not an alternate YT client like NewPipe)https:&#x2F;&#x2F;apps.apple.com&#x2F;us&#x2F;app&#x2F;yattee&#x2F;id1595136629https:&#x2F;&#x2F;np.reddit.com&#x2F;r&#x2F;Yattee&#x2F;comments&#x2F;13d3lj7&#x2F;how_to_set_u... reply eur0pa 1 hour agoparentprevSideload uYouPlus &#x2F; uYouExtra with Altstore reply coldtrait 6 hours agoprevThings like these are what keep me from switching to iOS. And apps like Instander for Instagram etc. reply wg0 12 hours agoprevIf you tube blocks their API, would it be game over for such clients? Or how does it work? reply lapinot 12 hours agoparentThey don&#x27;t use official APIs (if you do you need to register a dev account and this sort of thing would most likely be against the TOS), just like yt-dlp they reverse engineer all sorts of apps youtube has (the webpage, the mobile webpage, the TV app, the android app, ...) and thus get all sorts of undocumented APIs to scrap from. reply sigmar 12 hours agoparentpreviirc it loads the page as if it were a browser, then scrapes and downloads the video. reply alok-g 44 minutes agorootparentWhat prevents YouTube from sending ad and the actual video in a single video download&#x2F;stream? reply j1elo 9 hours agoprevDoes anyone else have the experience of next queued videos always going wild with longer and longer videos of the same stuff? I had a screenshot prepared to report as an issue, but in the end didn&#x27;t feel it would be worth it.Absolutely every time I&#x27;ll start with a song, and 3 next videos after, I&#x27;ll be facing a 10 hour long version of the same fkng song, if not a loop of the same 2 or 3 videos. reply maxglute 4 hours agoprevBest part of new pipe is setting up channel groups, which default youtube really needs. But annoyng you can&#x27;t play channel as playlist. reply falcor84 10 hours agoprevIt&#x27;s almost perfect, except for the fact that I really like being able to thumbs-up videos I like, to support the creators. I feel really uncomfortable not having that option. reply Aachen 10 hours agoparent- So long as they give their sole custom to Google&#x2F;Youtube and don&#x27;t support other platforms in any way, even though it&#x27;s trivial to upload an mp4 onto another platform and set the title and description same as yt, I don&#x27;t feel too bad being in a tiny fraction of a minority that doesn&#x27;t want to have a Google account in order to &#x27;smash&#x27; the like button. There&#x27;s no least evil to be picked here, no market forces at play, it&#x27;s using google or bust. On the whole, I feel alright not supporting that choice, though part of me also feels as you do of course.- It&#x27;s also not as though you&#x27;re upvoting&#x2F;liking videos other than theirs, so they won&#x27;t rank lower because you didn&#x27;t support them.- I&#x27;m sure the folks at google figured out that watching a video is already a sign of the content being interesting. When using the official (web) player, it clearly uses this to generate recommendations (to many people&#x27;s frustration)- You can always share videos with friends or on Mastodon etc. where appropriate, that draws more eyeballs than a passive thumbs up button anyway and thus helps the creator more reply lolinder 10 hours agorootparent> It&#x27;s also not as though you&#x27;re upvoting&#x2F;liking videos other than theirs, so they won&#x27;t rank lower because you didn&#x27;t support them.The math doesn&#x27;t work like that—if you can&#x27;t Like any videos, then all of the videos you watch have an infinitesimally smaller Liked ratio and count than they would if you could. Any given video isn&#x27;t competing with all the other videos you watch, it&#x27;s competing with all the other videos anywhere on the site. reply nine_k 10 hours agorootparentprevWhat is the other platform you suggest for video uploads? Vimeo? Facebook? Twitch? reply camel-cdr 8 hours agoparentprevThat made me think of an interesting feature idea: Selectively enable ads on certain channels you&#x27;d like to support a bit more. reply MBCook 9 hours agoparentprevHow does giving a thumbs up “support the creators”?I’m sure they’d rather you watch the ads or pay for premium. reply savingsPossible 3 hours agorootparentOR, hear me out... Subscribe to the patreon or other non-google revenue stream reply wkat4242 9 hours agoparentprevThe big benefit of newpipe besides skipping ads is that you don&#x27;t need an account. Which you need for those upvotes anyway. reply Nux 13 hours agoprevShhhhht! reply monadINtop 8 hours agoprevIt will never be as good as Youtube Vanced (god rest it&#x27;s soul) but it gets the job done, despite the occasional bug reply lazycouchpotato 8 hours agoparentIf you didn&#x27;t know, there is YouTube ReVanced [1].https:&#x2F;&#x2F;github.com&#x2F;revanced reply ranguna 1 hour agorootparentJust a small correction: it&#x27;s not \"YouTube\" ReVenced, it&#x27;s just ReVenced. ReVenced is a group dedicated to patching apps, but the group itself doesn&#x27;t provide any patched apps.It does provide this app to patch other apps: https:&#x2F;&#x2F;github.com&#x2F;ReVanced&#x2F;revanced-manager reply Justsignedup 7 hours agoprevI found NP was having trouble keeping up, meanwhile youtube revanced has been amazing. reply OldGuyInTheClub 13 hours agoprevMy first install on getting a new phone. reply gala8y 13 hours agoparentMy first install on every phone of any friend who wants this after a short pitch. reply deadfece 8 hours agoprevNewpipe tip for people studying via YT videos: use the speed adjustment and enable skip silence. reply Gerard0 12 hours agoprevAwesome app. I send them money from time to time when possible! reply 2OEH8eoCRo0 9 hours agoprevThere is also Grayjay[1] from Futo[2] now too.[1] https:&#x2F;&#x2F;grayjay.app&#x2F;[2] https:&#x2F;&#x2F;futo.org&#x2F; reply dukeofdoom 7 hours agoprevI wanted to listen to youtube videos while working out. Couldn&#x27;t figure out the default youtube player to let me do that. This worked first time I tried. Supper happy. Thanks. reply scotty79 11 hours agoprevI had trouble switching to alternative clients because I rely on algorithmic feed for new content. However I have a perfect application for NewPipe. I like to run it quietly in the background as I fall asleep. Murmur of a voice too quiet to understand helps me sleep. Ads were making that use case impossible.Another use case is downloading music I like. I used YouTube for music discovery an ingestion. Now after I find something good I go to NewPipe and dowlnoad it as local audio file and enjoy it like it&#x27;s good old times of napster and mp3-s. reply m1keil 7 hours agoprevHonestly, if there is one reason to use this app is because it allows you to share video with timestamp unlike the official Youtube app that is still unable to do that in 2023. reply levitate 9 hours agoprevhow long until this gets nuked like youtube vanced? reply Hikikomori 7 hours agoparentThere&#x27;s revanced, just installed it today. reply ForHackernews 13 hours agoprevThis is the default player on https:&#x2F;&#x2F;e.foundation&#x2F;e-os&#x2F; reply smrtinsert 7 hours agoprevI need a replacement for baconreader if there&#x27;s something in the vein reply riku_iki 13 hours agoprevNo mentions about ads?.. reply g-b-r 12 hours agoparentJust be careful that there are many clones filled with ads and sh*t on the Play Store; Play Store where they, the real app, cannot be reply BuildTheRobots 13 hours agoparentprevNo ads. Also play in background or popout window.GrayJay is a new contender on the block that might be worth looking at too. reply wkat4242 9 hours agorootparentIndeed but that also lacks sponsorblock :( reply spuz 13 hours agoparentprevThe site mentions: \"without annoying ads\" reply kosolam 13 hours agoprevYes! Awesome app reply flowenworld 2 hours agoprevOk reply tux3 12 hours agoprevIf the war on ablockers continues things may escalate, and the next step will soon mean deploying stronger DRM, in the same way that was tried in the fight against piracy.There&#x27;s a real parallel between the two. Streaming killed piracy for a while because the service was easy and convenient, with everything in one place. Then, streaming added more and more ads all while it became more fragmented. Now if you pay for a service, you will still see ads, and you have an increasingly limited catalog (even on Youtube, as creators move extra content on Nebula or Patreon)The more Youtube squeezes and pushes ads, the more demand there will be for adblockers. reply vbezhenar 12 hours agoparentThe end game is encrypted DRM stream (which is decrypted in the display) with encoded ads (so you can&#x27;t block it tinkering with JS).I guess that only abundance of devices without DRM is stopping this scenario. reply ethbr1 12 hours agorootparentOnly general purpose computers are stopping this scenario. reply alkonaut 11 hours agorootparentprevHow are the ads even skippable on YouTube? I have never really had a good answer to that. I mean, why is the ad even a different stream or detectable on the client? Shouldn&#x27;t the ads just be spliced into the videos if you really want to make sure people watch them? Is it because it would be prohibitively expensive to do that kind of live encoding for each viewer? reply jack_pp 11 hours agorootparentYou wouldn&#x27;t even need live encoding because every YouTube video is normalized and if you have two streams that were encoded with the same parameters you can cut and concatenate without re encoding reply meindnoch 11 hours agorootparentprevBecause you could just seek over them? reply alkonaut 11 hours agorootparentYes, but the server knows exactly what frames it has sent you and when. If you don&#x27;t want to watch the ad frames there&#x27;s nothing the server can do, but it can make sure to not send you the frame that comes after the ad, until the 10 seconds of the ad has passed since it sent you the last frame before the ad. reply tux3 10 hours agorootparentThat works for pre-roll ads, forcing the client to silence them and wait at best (I believe the Twitch streaming service does this)For mid-stream ads, that doesn&#x27;t work. You could pre-fetch the ad and surrounding video early, so that you can watch buffered content while the server thinks an ad is playing. reply alkonaut 10 hours agorootparentThe server would need to not allow buffering further than the next ad. reply ethbr1 9 hours agorootparentMultistream client, continually skipping around, and stitching together buffers? replym-p-3 11 hours agorootparentprevAnd with Microsoft pushing TPM requirements with Windows 11 it&#x27;s just a matter of time before thing are locked down even further. reply richwater 12 hours agorootparentprev> encrypted DRM streamWidevine already exists and is increasingly difficult to crack, especially the key levels required for 4k content.> encoded adsOnly a matter of time before hardware encoders can do this on the fly reply tomrod 12 hours agorootparentprev> The end game is encrypted DRM streamThat&#x27;s not the endgame -- Digg:Reddit::YouTube:Vimeo is the end game, IMHO. reply judge2020 12 hours agoparentprevWhat is it with the disdain for paying for services people use? People often don&#x27;t feel like paying for it even if they use YouTube more than other streaming services combined.Maybe the issue is that people got so used to a decade of unlimited high-quality videos for absolutely free? reply rglullis 12 hours agorootparentI don&#x27;t mind paying for services.I mind paying to get the privilege my data exploited.I mind paying to a company that use its infinite bags of money to outspend any competition unfairly.I mind paying after getting blackmailed to accept a new deal when they made sure they left no other choice in the market.I mind paying for a service that is optimized for \"engagement\" instead of my own well-being.I mind paying to a company that doesn&#x27;t know the time to stop growing and wants to crawl into every aspect of my life. reply BiteCode_dev 11 hours agorootparent+1And I mind that paying forces me to give my credit card to a companies that have proven to work against me.I mind that google will take over my entire phone if I connect to any service with a google account because I paid for it and not just login to that single service.I mind that it will collect all that data if I don&#x27;t have an adblocker anyway, just not show me ad, and then give it to gov entities (see PRISM).What I don&#x27;t mind is paying. I pay for spotify, for neflix, for dynalist, for kagi, for chatgpt, for codepilot, for github...But I do mind that many people like you on HN accuses us of being dishonest. reply spuz 2 hours agorootparentprev> I mind paying for a service that is optimized for \"engagement\" instead of my own well-being.> I mind paying to a company that doesn&#x27;t know the time to stop growing and wants to crawl into every aspect of my life.It&#x27;s worth recognising that as an ad-supported service, YouTube has an incentive to maximise the watch-time of its users and that this incentive goes away when a user starts paying monthly. But until they begin to earn more from subscriptions than ads I can&#x27;t see how this changes. Maybe there&#x27;s a universe in which the adblock crackdown actually accelerates the decline in ad-viewership and YouTube becomes incentivised to stop cramming cheap ad-friendly content down our throats and becomes a platform for actual high-quality content. For now, it&#x27;s probably better to support platforms that actually already work on this model such as Nebula. reply asimops 11 hours agorootparentprevI have zero issues with paying in general.What I don&#x27;t see, is me paying for the worse service.Youtube Premium is 12.99€ a month for me. For that small price I get to create a Google Account, accept their TOS, let them track and profile me, keep logging in everywhere (because I delete all local storage in the browser routinely) and replace the small and efficient NewPipe with the Youtube app. Futhermore I cannot download a video now and play it next month without connecting to the internet, or move it to my small dedicated video player that doesn&#x27;t even have connection to the internet.What is Googles CPM (revenue per 1000 clicks)? I don&#x27;t think it comes down to more the a low cent amount. I do not watch enough video to justify the price of premium and I will never watch ads, because those are psychological warfare and completely underregulated...If Google and all the others make a nice micro payment platform for the browser, which work anonymously and without much hassle, I will by all means pay them the amount of money which me watching the ads would have generated plus 10% service fee since they build the platform.But not like this! reply judge2020 10 hours agorootparentThose are the terms YouTube sets out when providing you with the service. You can either pay for it (as the terms set out), watch with ads (as the terms set out), or not watch it. All other use is effectively piracy, and they have the legal and arguably moral* right to block you for not following it.* Yes, it does cost them money to serve and store videos, and no that doesn&#x27;t disappear with scale. YouTube ingests hundreds of thousands of hours of video a day, and chances are every single video is on at least 2 continents at any given time. They don&#x27;t get some insane volume price on the enterprise HDDs they use. reply rglullis 7 hours agorootparent> watch with ads (as the terms set out)There is nothing there forcing me to watch the ads, or that forces the user agent (aka the browser) to behave in the way that server running the application wishes to. reply wkat4242 9 hours agorootparentprevOf course they get insane volume discounts. All big tech companies do. It makes me cry to see how much we pay for a ThinkPad. I wish I could buy one for that :&#x27;)Regarding morals I don&#x27;t don&#x27;t care. Not worth a discussion :) reply etedor 9 hours agorootparentprevWhat terms? I don’t recall agreeing to any? reply judge2020 9 hours agorootparent> Your use of the Service is subject to these terms, the YouTube Community Guidelines and the Policy, Safety and Copyright Policies which may be updated from time to time (together, this \"Agreement\").https:&#x2F;&#x2F;www.youtube.com&#x2F;t&#x2F;termsEven if you don&#x27;t think you have to follow them, they can still ban you for not following their terms, or not agreeing to them. They are not under an obligation to serve you video unauthenticated and&#x2F;or without receiving what they expect to receive in return (agreeing to their terms and thus paying via ads or money). reply etedor 7 hours agorootparentThere’s a terms.txt on my desktop that says by sending me data my browser can choose whether or not to render it. By sending me video data you agree to these terms. reply judge2020 6 hours agorootparentAnd they&#x27;re blocking you from receiving video? That&#x27;s the whole point of this post. reply etedor 6 hours agorootparentNot sure what you mean. I can view them just fine. reply judge2020 5 hours agorootparentI mean them blocking you from viewing it due to using an ad-blocker (or otherwise not using an official client). The OP comment was about \"the war on ad blockers\", which is what this thread is about. reply eur0pa 1 hour agorootparentprevI haven&#x27;t agreed to any of that; don&#x27;t remember signing anything. This stuff does not hold up in EU. My device, my rules. replyfriend_and_foe 12 hours agorootparentprevIt&#x27;s not disdain for paying. Netflix proved that. It&#x27;s disdain for getting nickel and dimed and fleeced and losing access without warning. reply ertian 12 hours agorootparentWell, and there&#x27;s a difference in usage. When I use Netflix, I&#x27;m usually either at my desktop computer or sitting on my couch, selecting a movie for myself to watch. It feels like a good old traditional media experience.YouTube pops up everywhere, on every system I use. Sometimes I&#x27;m sitting down to watch something longer, even a movie, but often it&#x27;s just links from friends or coworkers, or from news articles on Reddit or Hacker News. Sometimes it&#x27;s lessons, sometimes it&#x27;s breaking news, sometimes it&#x27;s 5-second meme videos. I use it at work and at home. I might be on my wife&#x27;s iPad, or my work phone, or some library computer.I&#x27;m not viewing all those videos on my personal devices logged in using my own personal account. I don&#x27;t feel comfortable logging in with my personal account everywhere.And there&#x27;s something especially annoying about constantly seeing ads on a service I&#x27;m paying for.On top of that, logging in everywhere lets Google track everything I view--every random Reddit click--and Google&#x27;s the single biggest data collector & exploiter I know. I&#x27;m paying them to let them track me.All told, paying for YouTube feels kinda icky in a way that paying for Netflix does not. I do pay for YouTube Premium, but I still prefer to watch videos without logging in, (ed:) with an adblocker. reply radicality 11 hours agorootparentprevWhat I do have a disdain for with Netflix, is paying for the version with 4k access and then struggling to actually get the service I paid for.Around two years ago I wanted to watch Squid Game on my MacBook Pro + external 4k monitor, and iirc still couldn’t get it working in 4k after various yak shaving. Perhaps it’s now supported, but it felt pretty ridiculous to me that I can’t even access the full service I’m paying for. reply arcbyte 12 hours agorootparentprevActually I&#x27;m very predisposed to paying for YouTube. My experience with it however is that it presented me with ads for YouTube premium every 5 minutes and put ad screens in my way that were waaayyyyy to easy to click dozens of times a day. It wouldn&#x27;t take a hint that I was interested but not ready to buy. I was trying to show someone a quick video on my phone, not revisiting my financial relationship with Google. After being treated like that, as much as I have the money and willingness to pay, I don&#x27;t want to give them my money for a purely emotional reason. Some product manager somewhere at Google needs fired. Probably a lot of them. reply lapinot 12 hours agorootparentprevWhat is it with the disdain for mental health, privacy or political mindfulness? Big tech don&#x27;t feel like paying attention to people even if people use Youtube more than other streaming services combined. Maybe the issue is that big tech got so used to a decade of unlimited high-quality tracking for absolutely free? reply mulmen 12 hours agorootparentprevGoogle has dumped so many gallons of urine into my cheerios over the years that I will never, ever pay them for a consumer service. They have spent literally decades now being absolute assholes to consumers. If they charged for Youtube from day 1 then maybe. But at this point the reputational harm is permanent.I do pay for Patreon and Nebula. But Google will never get a cent from me. reply ndriscoll 9 hours agorootparentprev> Maybe the issue is that people got so used to a decade of unlimited high-quality videos for absolutely free?Or the videos aren&#x27;t that high quality, and are just barely at the level of value where people feel like the time spent watching (or leaving it on as background noise) was worth it, but not at the level of value where time spent+ads or money are worth it.Like I&#x27;ve watched a LTT video before. I suppose I was very bored. Would I ever pay to watch it? No. Do I even think it was worth the time I spent watching? Probably not. It&#x27;s like listening to some stranger at the pub tell a story. You might listen if it&#x27;s interesting, but you probably wouldn&#x27;t pay them for it.There&#x27;s tons of low quality, low effort stuff on there like vlogs, clean&#x2F;cook&#x2F;shop with me, hauls, etc. It&#x27;s a hobby for the creator. People don&#x27;t want to pay for it because it&#x27;s not worth anything. reply k8sToGo 12 hours agorootparentprevI don’t mind paying. I do mind paying $15 and then see still ads (Thanks to NordVPN for sponsoring this comment). Plus the algorithm keeps getting worse and worse.I’d prefer to pay like $5. I don’t need YouTube music. reply davkan 11 hours agorootparent$5&#x2F;mo without YouTube Music would be an easy buy for me. I’d gladly pay that to support creators, remove ads on my tv, and to stop having to sideload uyou+ on my phone. I have zero interest in YouTube music as Apple Music has great offline support on the watch for my backcountry rides. reply endisneigh 11 hours agorootparentprevI don’t understand this logic. Why do you think it would be cheaper without YouTube music? YouTube music literally is just YouTube. Every song on there can be found on YouTube, the only reason it’s even a separate app and included in premium is due to the lack of ads facilitating a better music listening experience. reply lazycouchpotato 8 hours agorootparentBecause YouTube themselves considers Music as an add-on, and was willing to have a cheaper Premium tier without Music in certain countries before they discontinued it.https:&#x2F;&#x2F;9to5google.com&#x2F;2023&#x2F;09&#x2F;26&#x2F;youtube-premium-lite-shut-... reply shric 12 hours agorootparentprevSponsorblock is 95%+ effective against these reply Bishonen88 11 hours agorootparentWhole point of youtube premium is getting rid of ads on mobile&#x2F;tvs reply shric 5 hours agorootparentSure, and there are sponsorblock solutions for both mobile and TV reply mulmen 12 hours agorootparentprevThe hilarious thing about all the VPN ads is that they are collecting all the same tracking information as Google and Facebook and aren’t even protecting you from that existing tracking. reply endisneigh 11 hours agorootparentprevPeople will always rationalize their not paying. Tracking, ethics, whatever. Anything other than abstaining from use, lol. reply xigoi 10 hours agorootparentI&#x27;d gladly not use YouTube if the creators uploaded their videos somewhere else. reply judge2020 8 hours agorootparentYouTube is too lucrative of a platform to pass up. It&#x27;s not just hosting, but literally sending droves of viewers their way, and making sure those viewers are paying to watch in a way that enables those creators to earn a living. Take any large creator and 95-100% of their regular fanbase probably wouldn&#x27;t follow them to another platform (unless it&#x27;s so big that all&#x2F;most of their favorite creators also go to the same platform).Any other platform not only needs to offer cheap&#x2F;free video hosting, but also send tons of users content similar to their interests in a way that enables new and up-and-coming creators to grow, and it needs to provide a way to pay out those creators, or there&#x27;s a negative incentive to send any viewers to the other platform that strictly makes them no money. reply InCityDreams 11 hours agorootparentprevNope. Thanks to this site i (finally, and only about an hour ago) got newpipe from fdroid, subscribed to all my channels, and sod youtube, I&#x27;m not going back. An appropriate ad occasionally, no problem. But recently?? With newpipe there&#x27;s a way out: i will happily contribute. reply endisneigh 11 hours agorootparentUsing New pipe is not abstaining from YouTube, lol. reply nfriedly 9 hours agorootparentprevI think part of the disdain is that YouTube was ad-free until they ran all the competition out of business. reply jsnell 8 hours agorootparentYouTube hasn&#x27;t been ad-free for over 17 years. reply month13 12 hours agorootparentprevI was happy paying for YouTube Premium, but they just doubled the price in my geo. So yeah, i&#x27;m considering not paying. reply gaganyaan 12 hours agorootparentprevLack of trust. Google will find ways to enshittify YouTube even if you pay for it.I spend a lot of money at Bandcamp because in exchange I get bits that I do what I want with. For some reason that&#x27;s not as popular for video, but it would solve this issue pretty well. reply swayvil 12 hours agorootparentprevDigital media can be copied infinitely for free. Thus delivering any benefit to infinite consumers. Thus multiplying that benefit infinitely.They want to choke that? May as well tell the wind to stop blowing. reply colordrops 12 hours agorootparentprevThe person you are replying to answered in their comment: even the paid service has ads, and a lot of the premium content has been moved off of the platform. reply More GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "NewPipe is a lightweight, privacy-oriented YouTube application for Android devices aimed at providing an ad-free user experience on smartphones.",
      "As an open-source app available on GitHub, NewPipe offers a range of features including offline usage, subscriptions, video history, and compatibility with other platforms like PeerTube, SoundCloud, and Bandcamp.",
      "The app, powered by a growing community, encourages user contributions and translations, with the provision for quicker updates via addition of the F-Droid repository to the client."
    ],
    "commentSummary": [
      "NewPipe is an open-source, privacy-focused YouTube app for Android devices, designed to provide a user-friendly, ad-free YouTube experience without intrusive permissions.",
      "Besides YouTube, the app supports a range of platforms including PeerTube, SoundCloud, and Bandcamp. Its features include a background player, pop-up player, support for offline usage, subscriptions, bookmarks, and video history.",
      "The app's updates can be obtained faster by adding the F-Droid repository to the client, and it welcomes contributions and translations from users. As an open-source app, it's available free of charge on GitHub."
    ],
    "points": 534,
    "commentCount": 252,
    "retryCount": 0,
    "time": 1699126731
  },
  {
    "id": 38144417,
    "title": "Latest Bevy 0.12 Game Engine Release Features Deferred Rendering, Improved Shadow Quality and Optimized Renderer",
    "originLink": "https://bevyengine.org/news/bevy-0-12/",
    "originBody": "News Learn News Community Assets Examples Donate Deferred Rendering PCF Shadow Filtering StandardMaterial Light Transmission Compatibility Implementation Details Bevy Asset V2 Asset Preprocessing Enabling Pre-Processing Should You Enable Pre-Processing Today? Incremental and Dependency Aware Transactional and Reliable Asset Meta Files CompressedImageSaver Preprocessing is Optional! Built To Run Anywhere Recursive Asset Dependency Load Events Multiple Asset Sources Embedded Assets Extendable Async Asset I/O Improved Hot-Reloading Workflow Better Asset Handles True Copy-on-Write Asset Paths Suspend and Resume on Android Material Extensions Automatic Batching and Instancing of Draw Commands 2D Mesh Bevymark (frames per second, more is better) 3D Mesh \"Many Cubes\" (frames per second, more is better) What can be batched? Opting Out The Road to GPU-driven Rendering What are CPU and GPU-driven rendering? What needs to change? Reorder Render Sets BatchedUniformBuffer and GpuArrayBuffer 2D / 3D Mesh Entities using GpuArrayBuffer EntityHashMap Renderer Optimization The Path Forward Usage Sprite Instancing Rusty Shader Imports glTF Emissive Strength Import Second UV Map In glTF Files Wireframe Improvements External Renderer Context Bind Group Ergonomics One-Shot Systems system.map Simplify Parallel Iteration Method Disjoint Mutable World Access Via EntityMut Unified configure_sets API UI Materials UI Node Outlines Unified Time ImageLoader Settings GamepadButtonInput SceneInstanceReady Event Split Computed Visibility ReflectBundle Reflect Commands Limit Background FPS AnimationPlayer API Improvements Ignore Ambiguous Components and Resources Spatial Audio API Ergonomics Pitch Audio Source Added HSL methods to Color struct Reduced Tracing Overhead AccessKit Integration Improvements TypePath Migration Improved bevymark Example CI Improvements Example tooling improvements Example execution in CI What's Next? Support Bevy Contributors Full Changelog A-ECS + A-Diagnostics A-ECS + A-Scenes A-Scenes A-Tasks + A-Diagnostics A-Tasks A-Audio + A-Windowing A-Animation + A-Transform A-Transform A-App A-ECS + A-App A-Rendering + A-Gizmos A-Rendering + A-Diagnostics A-Rendering + A-Reflection A-Windowing A-Gizmos A-Utils A-Rendering + A-Assets A-ECS A-Rendering + A-Math A-UI A-Animation A-Pointers A-Assets + A-Reflection A-Rendering + A-Hierarchy A-ECS + A-Tasks A-Reflection + A-Utils A-Reflection + A-Math A-Hierarchy A-Input A-Input + A-Windowing A-ECS + A-Reflection A-Math A-Build-System A-Diagnostics A-Rendering + A-Animation A-Core A-Reflection A-Rendering + A-Assets + A-Reflection A-ECS + A-Time A-ECS + A-Hierarchy A-Audio A-Rendering + A-UI A-ECS + A-Reflection + A-Pointers No area label A-Rendering + A-Build-System A-Meta A-Assets + A-Animation A-Editor + A-Diagnostics A-Time A-Rendering + A-ECS A-UI + A-Reflection A-Build-System + A-Assets A-Rendering A-Build-System + A-Meta A-Assets Bevy 0.12 Posted on November 04, 2023 by Bevy Contributors A relaxing 'tiny planet' city builder by Jos Feenstra (made with Bevy) Thanks to 185 contributors, 567 pull requests, community reviewers, and our generous sponsors, we're happy to announce the Bevy 0.12 release on crates.io! For those who don't know, Bevy is a refreshingly simple data-driven game engine built in Rust. You can check out our Quick Start Guide to try it today. It's free and open source forever! You can grab the full source code on GitHub. Check out Bevy Assets for a collection of community-developed plugins, games, and learning resources. To update an existing Bevy App or Plugin to Bevy 0.12, check out our 0.11 to 0.12 Migration Guide. Since our last release a few months ago we've added a ton of new features, bug fixes, and quality of life tweaks, but here are some of the highlights: Deferred Rendering: (Optional) support for rendering in a Deferred style, which complements Bevy's existing Forward+ renderer by adding support for new effects and different performance tradeoffs. Bevy is now a \"hybrid\" renderer, meaning you can use both at the same time! Bevy Asset V2: A brand new asset system that adds support for asset preprocessing, asset configuration (via .meta files), multiple asset sources, recursive dependency load tracking, and more! PCF Shadow Filtering: Bevy now has smoother shadows thanks to Percentage-Closer Filtering. StandardMaterial Light Transmission: Bevy's PBR material now supports light transmission, making it possible to simulate materials like glass, water, plastic, foliage, paper, wax, marble, etc. Material Extensions: Materials can now build on other materials. You can now easily write shaders that build on existing materials, such as Bevy's PBR StandardMaterial. Rusty Shader Imports: Bevy's granular shader import system now uses Rust-style imports, expanding the capabilities and usability of the import system. Suspend and Resume on Android: Bevy now supports suspend and resume events on Android, which was the last big missing piece in our Android story. Bevy now supports Android! Automatic Batching and Instancing of Draw Commands: Draw commands are now automatically batched / instanced when possible, yielding significant render performance wins. Renderer Optimizations: Bevy's renderer dataflow has been reworked to squeeze out more performance and prepare the way for future GPU-driven rendering. One Shot Systems: ECS Systems can now be run on-demand from other systems! UI Materials: Add custom material shaders to Bevy UI nodes. Deferred Rendering # authors: @DGriffin91 The two most popular \"rendering styles\" are: Forward Rendering: do all material/lighting calculations in a single render pass Pros: Simpler to work with. Works on / performs better on more hardware. Supports MSAA. Handles transparency nicely. Cons: Lighting is more expensive / fewer lights supported in a scene, some rendering effects are impossible (or harder) without a prepass Deferred Rendering: do one or more pre-passes that collect relevant information about a scene, then do material/lighting calculations in screen space in a final pass after that. Pros: Enables some rendering effects that are not possible in forward rendering. This is especially important for GI techniques, cuts down on shading cost by only shading visible fragments, can support more lights in a scene Cons: More complicated to work with. Requires doing prepasses, which can be more expensive than an equivalent forward renderer in some situations (although the reverse can also be true), uses more texture bandwidth (which can be prohibitive on some devices), doesn't support MSAA, transparency is harder / less straightforward. Bevy's renderer has historically been a \"forward renderer\". More specifically, it is a Clustered Forward / Forward+ renderer, which means we break the view frustum up into clusters and assign lights to those clusters, allowing us to render many more lights than a traditional forward renderer. However, as Bevy has grown, it has slowly moved into \"hybrid renderer\" territory. In previous releases, we added a Depth and Normal Prepass to enable TAA, SSAO, and Alpha Texture Shadow Maps. We also added a Motion Vector Prepass to enable TAA. In Bevy 0.12 we added optional support for Deferred Rendering (building on the existing prepass work). Each material can choose whether it will go through the forward or deferred path, and this can be configured per-material-instance. Bevy also has a new DefaultOpaqueRendererMethod resource, which configures the global default. This is set to \"forward\" by default. The global default can be overridden per-material. Lets break down the components of this deferred render: When deferred is enabled for the PBR StandardMaterial, the deferred prepass packs PBR information into the Gbuffer, which can be broken up into: Base Color Depth Normals Perceptual Roughness Metallic The deferred prepass also produces a \"deferred lighting pass ID\" texture, which determines what lighting shader to run for the fragment: These are passed into the final deferred lighting shader. Note that the cube in front of the flight helmet model and the ground plane are using forward rendering, which is why they are black in both of the deferred lighting textures above. This illustrates that you can use both forward and deferred materials in the same scene! Note that for most use cases, we recommend using forward by default, unless a feature explicitly needs deferred or your rendering conditions benefit from deferred style. Forward has the fewest surprises and will work better on more devices. PCF Shadow Filtering # authors: @superdump (Rob Swain), @JMS55 Shadow aliasing is a very common problem in 3D apps: Those \"jagged lines\" in the shadow are the result of the shadow map being \"too small\" to accurately represent the shadow from this perspective. The shadow map above is stored in a 512x512 texture, which is a lower resolution than most people will use for most of their shadows. This was selected to show a \"bad\" case of jaggies. Note that Bevy defaults to 2048x2048 shadowmaps. One \"solution\" is to bump up the resolution. Here is what it looks like with a 4096x4096 shadow map. Looking better! However this still isn't a perfect solution. Large shadowmaps aren't feasible on all hardware. They are significantly more expensive. And even if you can afford super high resolution shadows, you can still encounter this issue if you place an object in the wrong place, or point your light in the wrong direction. You can use Bevy's Cascaded Shadow Maps (which are enabled by default) to cover a larger area, with higher detail close to the camera and less detail farther away. However even under these conditions, you will still probably encounter these aliasing issues. Bevy 0.12 introduces PCF Shadow Filtering (Percentage-Closer Filtering), which is a popular technique that takes multiple samples from the shadow map and compares with an interpolated mesh surface depth-projected into the frame of reference of the light. It then calculates the percentage of samples in the depth buffer that are closer to the light than the mesh surface. In short, this creates a \"blur\" effect that improves shadow quality, which is especially evident when a given shadow doesn't have enough \"shadow map detail\". Note that PCF is currently only supported for DirectionalLight and SpotLight. Bevy 0.12's default PCF approach is the ShadowMapFilter::Castano13 method by Ignacio Castaño (used in The Witness). Here it is with a 512x512 shadow map: Drag this image to compare (Castano) Much better! We also implemented the ShadowMapFilter::Jimenez14 method by Jorge Jimenez (used in Call of Duty Advanced Warfare). This can be slightly cheaper than Castano, but it can flicker. It benefits from Temporal Anti-Aliasing (TAA) which can reduce the flickering. It can also blend shadow cascades a bit more smoothly than Castano. Drag this image to compare (Jimenez) StandardMaterial Light Transmission # author: Marco Buono (@coreh) The StandardMaterial now supports a number of light transmission-related properties: specular_transmission diffuse_transmission thickness ior attenuation_color attenuation_distance These allow you to more realistically represent a wide variety of physical materials, including clear and frosted glass, water, plastic, foliage, paper, wax, marble, porcelain and more. Diffuse transmission is an inexpensive addition to the PBR lighting model, while specular transmission is a somewhat more resource-intensive screen-space effect, that can accurately model refraction and blur effects. Different light transmission properties and their interactions with existing PBR properties. To complement the new transmission properties, a new TransmittedShadowReceiver component has been introduced, which can be added to entities with diffuse transmissive materials to receive shadows cast from the opposite side of the mesh. This is most useful for rendering thin, two-sided translucent objects like tree leaves or paper. Additionally, two extra fields have been added to the Camera3d component: screen_space_specular_transmission_quality and screen_space_specular_transmission_steps. These are used to control the quality of the screen-space specular transmission effect (number of taps), and how many “layers of transparency” are supported when multiple transmissive objects are in front of each other. Important: Each additional “layer of transparency” incurs in a texture copy behind the scenes, adding to the bandwidth cost, so it's recommended to keep this value as low as possible. Finally, importer support for the following glTF extensions has been added: KHR_materials_transmission KHR_materials_ior KHR_materials_volume Check out this video to see it in action! Compatibility # Both specular and diffuse transmission are compatible with all supported platforms, including mobile and Web. The optional pbr_transmission_textures Cargo feature allows using textures to modulate the specular_transmission, diffuse_transmission and thickness properties. It's disabled by default in order to reduce the number of texture bindings used by the standard material. (These are severely constrained on lower-end platforms and older GPUs!) DepthPrepass and TAA can greatly improve the quality of the screen-space specular transmission effect, and are recommended to be used with it, on the platforms where they are supported. Implementation Details # Specular transmission is implemented via a new Transmissive3d screen space refraction phase, which joins the existing Opaque3d, AlphaMask3d and Transparent3d phases. During this phase, one or more snapshots of the main texture are taken, which are used as “backgrounds” for the refraction effects. Each fragment's surface normal and IOR (index of refraction) used along with the view direction to calculate a refracted ray. (Via Snell's law.) This ray is then propagated through the mesh's volume (by a distance controlled by the thickness property), producing an exit point. The “background” texture is then sampled at that point. Perceptual roughness is used along with interleaved gradient noise and multiple spiral taps, to produce a blur effect. Diffuse transmission is implemented via a second, reversed and displaced fully-diffuse Lambertian lobe, which is added to the existing PBR lighting calculations. This is a simple and relatively cheap approximation, but works reasonably well. Bevy Asset V2 # authors: @cart Asset pipelines are a central part of the gamedev process. Bevy's old asset system was suitable for some classes of app, but it had a number of limitations that prevented it from serving the needs of other classes, especially higher end 3D apps. Bevy Asset V2 is a completely new asset system that learns from the best parts of Bevy Asset V1 while adding support for a number of important scenarios: Asset Importing/Preprocessing, Asset Meta Files, Multiple Asset Sources, Recursive Asset Dependency Load Events, Async Asset I/O, Faster and More Featureful Asset Handles, and more! Most existing user-facing asset code will either require no changes at all, or minimal changes. Custom AssetLoader or AssetReader code will need to change slightly, but generally the changes should be very minimal. Bevy Asset V2 (despite being a completely new implementation) largely just expands what Bevy is capable of. Asset Preprocessing # Asset preprocessing is the ability to take an input asset of a given type, process it in some way (generally during development time), and then use the result as the final asset in your application. Think of it as an \"asset compiler\". This enables a number of scenarios: Reduce Work In Released Apps: Many assets aren't composed in their ideal form for release. Scenes might be defined in a human-readable text format that is slower to load. Images might be defined in formats that require more work to decode and upload to the GPU, or take up more space on the GPU when compared to GPU-friendly formats (ex: PNG images vs Basis Universal). Preprocessing enables developers to convert to release-optimal formats ahead of time, making apps start up faster, take up fewer resources, and perform better. It also enables moving computation work that would have been done at runtime to development time. For example, generating mipmaps for images. Compression: Minimize the disk space and/or bandwidth that an asset takes up in deployed apps Transformation: Some \"asset source files\" aren't in the right format by default. You can have an asset of type A and transform it into type B. If you are building an app that tests the limits of your hardware with optimal formats ... or you just want to cut down on startup / loading times, asset preprocessing is for you. For an in-depth technical breakdown of the implementation we chose, check out the Bevy Asset V2 pull request. Enabling Pre-Processing # To enable asset pre-processing, just configure your AssetPlugin like this: app.add_plugins(DefaultPlugins.set( AssetPlugin { mode: AssetMode::Processed, ..default() } )) This will configure the asset system to look for assets in the imported_assets folder instead of the assets \"source folder\". During development, enable the asset_processor cargo feature flag like this: cargo run --features bevy/asset_processor This will start the AssetProcessor in parallel with your app. It will run until all assets are read from their source (defaults to the assets folder), processed, and the results have been written to their destination (defaults to the imported_assets folder). This pairs with asset hot-reloading. If you make a change, this will be detected by the AssetProcessor, the asset will be reprocessed, and the result will be hot-reloaded in your app. Should You Enable Pre-Processing Today? # In future Bevy releases we will recommended enabling processing for the majority of apps. We don't yet recommend it for most use cases for a few reasons: Most of our built-in assets don't have processors implemented for them yet. The CompressedImageSaver is the only built-in processor and it has a bare-minimum set of features. We have not implemented \"asset migrations\" yet. Whenever an asset changes its settings format (which is used in meta files), we need to be able to automatically migrate existing asset meta files to the new version. As people adopt processing, we expect some flux as we respond to feedback. Incremental and Dependency Aware # Bevy Asset V2 will only process assets that have changed. To accomplish this, it computes and stores hashes of each asset source file: hash: (132, 61, 201, 41, 85, 80, 72, 189, 132, 81, 252, 156, 4, 227, 196, 207), It also tracks the asset dependencies used when processing an asset. If a dependency has changed, the dependant asset will also be re-processed! Transactional and Reliable # Bevy Asset V2 uses write-ahead logging (a technique commonly used by databases) to recover from crashes / forced exists. Whenever possible it avoids full-reprocessing and only reprocesses incomplete transactions. The AssetProcessor can close (either intentionally or unintentionally) at any point in time and it will pick up right where it left off! If a Bevy App asks to load an asset that is currently being processed (or re-processed), the load will asynchronously wait until both the processed asset and its meta file have been written. This ensures that a loaded asset file and meta file always \"match\" for a given load. Asset Meta Files # Assets now support (optional) .meta files. This enables configuring things like: The asset \"action\" This configures how Bevy's asset system should handle the asset: Load: Load the asset without processing Process: Pre-process the asset prior to loading Ignore: Do not process or load the asset AssetLoader settings You can use meta files to set any AssetLoader you want Configure loader settings like \"how to filter an image\", \"adjusting the up axis in 3D scenes\", etc Process settings (if using the Process action) You can use meta files to set any Process implementation you want Configure processor settings like \"what type of compression to use\", \"whether or not to generate mipmaps\", etc A meta file for an unprocessed image looks like this: ( meta_format_version: \"1.0\", asset: Load( loader: \"bevy_render::texture::image_loader::ImageLoader\", settings: ( format: FromExtension, is_srgb: true, sampler: Default, ), ), ) A meta file for an image configured to be processed looks like this: ( meta_format_version: \"1.0\", asset: Process( processor: \"bevy_asset::processor::process::LoadAndSave\", settings: ( loader_settings: ( format: FromExtension, is_srgb: true, sampler: Default, ), saver_settings: (), ), ), ) If the asset processor is enabled, meta files will be automatically generated for assets. The final \"output\" metadata for the processed image looks like this: ( meta_format_version: \"1.0\", processed_info: Some(( hash: (132, 61, 201, 41, 85, 80, 72, 189, 132, 81, 252, 156, 4, 227, 196, 207), full_hash: (81, 90, 244, 190, 16, 134, 202, 154, 3, 211, 78, 199, 216, 21, 132, 216), process_dependencies: [], )), asset: Load( loader: \"bevy_render::texture::image_loader::ImageLoader\", settings: ( format: Format(Basis), is_srgb: true, sampler: Default, ), ), ) This is what is written to the imported_assets folder. Note that the Process asset mode has changed to Load. This is because in the released app, we will load the final processed image \"normally\" like any other image asset. Note that in this case, the input and the output asset both use ImageLoader. However the processed asset can use a different loader if the context demands it. Also note the addition of the processed_info metadata, which is used to determine if an asset needs to be reprocessed. The final processed asset and metadata files can be viewed and interacted with like any other file. However they are intended to be read-only. Configuration should happen on the source asset, not the final processed asset. CompressedImageSaver # Sponza scene with textures processed into Basis Universal (with mipmaps) using Bevy Asset V2 Bevy 0.12 ships with a barebones CompressedImageSaver that writes images to Basis Universal (a GPU-friendly image interchange format) and generates mipmaps. Mipmaps reduce aliasing artifacts when sampling images from different distances. This fills an important gap, as Bevy previously had no way to generate mipmaps on its own (it relied on external tooling). This can be enabled with the basis-universal cargo feature. Preprocessing is Optional! # Despite eventually (in future Bevy releases) recommending that most people enable asset processing, we also acknowledge that Bevy is used in a variety of applications. Asset processing introduces additional complexity and workflow changes that some people will not want! This is why Bevy offers two asset modes: AssetMode::Unprocessed: Assets will be loaded directly from the asset source folder (defaults to assets) without any preprocessing. They are assumed to be in their \"final format\". This is the mode/workflow Bevy users are currently used to. AssetMode::Processed: Assets will be pre-processed at development time. They will be read from their source folder (defaults to assets) and then written to their destination folder (defaults to imported_assets). To enable this, Bevy uses a novel approach to assets: the difference between a processed and unprocessed asset is perspective. They both use the same .meta format and they use the same AssetLoader interface. A Process implementation can be defined using arbitrary logic, but we heavily encourage using the LoadAndSave Process implementation. LoadAndSave takes any AssetLoader and passes the results to an AssetSaver. That means if you already have an ImageLoader, which loads images, all you need to do is write some ImageSaver which will write the image in some optimized format. This both saves development work and makes it easy to support both processed and unprocessed scenarios. Built To Run Anywhere # Unlike many other asset processors in the gamedev space, Bevy Asset V2's AssetProcessor is intentionally architected to run on any platform. It doesn't use platform-limited databases or require the ability/permission to run a networked server. It can be deployed alongside a released app if your application logic requires processing at runtime. One notable exception: we still need to make a few changes before it can run on the web, but it was built with web support in mind. Recursive Asset Dependency Load Events # The AssetEvent enum now has an AssetEvent::LoadedWithDependencies variant. This is emitted when an Asset, its dependencies, and all descendant / recursive dependencies have loaded. This makes it easy to wait until an Asset is \"fully loaded\" before doing something. Multiple Asset Sources # It is now possible to register more than one AssetSource (which replaces the old monolithic \"asset provider\" system). Loading from the \"default\" AssetSource looks exactly like it does in previous Bevy versions: sprite.texture = assets.load(\"path/to/sprite.png\"); But in Bevy 0.12 you can now register named AssetSource entries. For example you could register a remote AssetSource that loads assets from an HTTP server: sprite.texture = assets.load(\"remote://path/to/sprite.png\"); Features like hot-reloading, meta files, and asset processing are supported across all sources. You can register a new AssetSource like this: // reads assets from the \"other\" folder, rather than the default \"assets\" folder app.register_asset_source( // This is the \"name\" of the new source, used in asset paths. // Ex: \"other://path/to/sprite.png\" \"other\", // This is a repeatable source builder. You can configure readers, writers, // processed readers, processed writers, asset watchers, etc. AssetSource::build() .with_reader(|| Box::new(FileAssetReader::new(\"other\"))) ) ) Embedded Assets # One of the features motivating Multiple Asset Sources was improving our \"embedded-in-binary\" asset loading. The old load_internal_asset! approach had a number of issues (see the relevant section in this PR). The old system looked like this: pub const MESH_SHADER_HANDLE: Handle = Handle::weak_from_u128(3252377289100772450); load_internal_asset!(app, MESH_SHADER_HANDLE, \"mesh.wgsl\", Shader::from_wgsl); This required a lot of boilerplate and didn't integrate cleanly with the rest of the asset system. The AssetServer was not aware of these assets, hot-reloading required a special-cased second AssetServer, and you couldn't load assets using an AssetLoader (they had to be constructed in memory). Not ideal! To prove out the Multiple Asset Sources implementation, we built a new embedded AssetSource, which replaces the old load_interal_asset! system with something that naturally fits into the asset system: // Called in `crates/bevy_pbr/src/render/mesh.rs` embedded_asset!(app, \"mesh.wgsl\"); // later in the app let shader: Handle = asset_server.load(\"embedded://bevy_pbr/render/mesh.wgsl\"); That is a lot less boilerplate than the old approach! And because the embedded source is just like any other asset source, it can support hot-reloading cleanly ... unlike the old system. To hot-reload assets embedded in the binary (ex: to get live updates on a shader you have embedded in the binary), just enable the new embedded_watcher cargo feature. Much better! Extendable # Almost everything in Bevy Asset V2 can be extended with trait impls: Asset: Define new asset types AssetReader: Define custom AssetSource read logic AssetWriter: Define custom AssetSource write logic AssetWatcher: Define custom AssetSource watching / hot-reloading logic AssetLoader: Define custom load logic for a given Asset type AssetSaver: Define custom save logic for a given Asset type Process: Define fully bespoke processor logic (or use the more opinionated LoadAndSave Process impl) Async Asset I/O # The new AssetReader and AssetWriter APIs are async! This means naturally async backends (like networked APIs) can directly call await on futures. The filesystem impls (such as FileAssetReader) offload file IO to a separate thread and the future resolves when the file operation has finished. Improved Hot-Reloading Workflow # Previous versions of Bevy required manually enabling asset hot-reloading in your app code (in addition to enabling the filesystem_watcher cargo feature): // Enabling hot reloading in old versions of Bevy app.add_plugins(DefaultPlugins.set(AssetPlugin::default().watch_for_changes())) This was suboptimal because released versions of apps generally don't want filesystem watching enabled. In Bevy 0.12 we've improved this workflow by making the new file_watcher cargo feature enable file watching in your app by default. During development, just run your app with the feature enabled: cargo run --features bevy/file_watcher When releasing, just omit that feature. No code changes required! cargo build --release Better Asset Handles # Asset handles now use a single Arc at their core to manage the lifetime of an asset. This simplifies the internals significantly and also enables us to make more asset information available directly from handles. Notably, in Bevy 0.12 we use this to provide direct AssetPath access from the Handle: // Previous version of Bevy let path = asset_server.get_handle_path(&handle); // Bevy 0.12 let path = handle.path(); Handles now also use a smaller / cheaper-to-look-up AssetIndex internally, which uses generational indices to look up assets in dense storage. True Copy-on-Write Asset Paths # The AssetServer and AssetProcessor do a lot of AssetPath cloning (across many threads). In previous versions of Bevy, AssetPath was backed by Rust's Cow type. However in Rust, cloning an \"owned\" Cow results in a clone of the internal value. This is not the \"clone on write\" behavior we want for AssetPath. We use AssetPath across threads, so we need to start with an \"owned\" value. To prevent all of this cloning and re-allocating of strings, we've built our own CowArc type, which AssetPath uses internally. It has two tricks up its sleeve: The \"owned\" variant is an Arc, which we can cheaply clone without reallocating the string. Almost all AssetPath values defined in code come from a &'static str. We've created a special CowArc::Static variant that retains this static-ness, meaning we do zero allocations even when turning a borrow into an \"owned AssetPath\". Suspend and Resume on Android # authors: @mockersf On Android, applications no longer crash on suspend. Instead, they are paused, and no systems will run until the application is resumed. This resolves the last \"big\" showstopper for Android apps! Bevy now supports Android! Background tasks working in other threads, like playing audio, won't be stopped. When the application will be suspended, a Lifetime event ApplicationLifetime::Suspended is sent, corresponding to the onStop() callback. You should take care to pause tasks that shouldn't run in the background, and resume them when receiving the ApplicationLifetime::Resumed event (corresponding to the onRestart() callback). fn handle_lifetime_events( mut lifetime_events: EventReader, music_controller: Query, ) { for event in lifetime_events.read() { match event { // Upon receiving the `Suspended` event, the application has 1 frame before it is paused // As audio happens in an independent thread, it needs to be stopped ApplicationLifetime::Suspended => music_controller.single().pause(), // On `Resumed``, audio can continue playing ApplicationLifetime::Resumed => music_controller.single().play(), // `Started` is the only other event for now, more to come in the next Bevy version _ => (), } } } Material Extensions # authors: @robtfm Bevy has a powerful shader import system, allowing modular (and granular) shader code reuse. In previous versions of Bevy, this meant that in theory, you could import Bevy's PBR shader logic and use it in your own shaders. However in practice this was challenging, as you had to re-wire everything up yourself, which required intimate knowledge of the base material. For complicated materials like Bevy's PBR StandardMaterial, this was full of boilerplate, resulted in code duplication, and was prone to errors. In Bevy 0.12, we've built a Material Extensions system, which enables defining new materials that build on existing materials: This is accomplished via a new ExtendedMaterial type: app.add_plugin( MaterialPlugin::>::default() ); #[derive(Asset, AsBindGroup, TypePath, Debug, Clone)] struct QuantizedMaterial { // Start at a high binding number to ensure bindings don't conflict // with the base material #[uniform(100)] quantize_steps: u32, } impl MaterialExtension for QuantizedMaterial { fn fragment_shader() -> ShaderRef { \"quantized_material.wgsl\".into() } } let material = ExtendedMaterial { base: StandardMaterial::from(Color::rgb(0.1, 0.1, 0.8)), extension: QuantizedMaterial { quantize_steps: 2 }, }; We also paired this with some StandardMaterial shader refactors to make it much easier to pick and choose which parts you want: // quantized_material.wgsl struct QuantizedMaterial { quantize_steps: u32, } @group(1) @binding(100) var my_extended_material: QuantizedMaterial; @fragment fn fragment( input: VertexOutput, @builtin(front_facing) is_front: bool, ) -> FragmentOutput { // Generate a PbrInput struct from the StandardMaterial bindings var pbr_input = pbr_input_from_standard_material(input, is_front); // Alpha discard pbr_input.material.base_color = alpha_discard( pbr_input.material, pbr_input.material.base_color ); var out: FragmentOutput; // Apply lighting out.color = apply_pbr_lighting(pbr_input); // Our \"quantize\" effect out.color = vec4(vec4(out.color * f32(my_extended_material.quantize_steps))) / f32(my_extended_material.quantize_steps); // Apply in-shader post processing. // Ex: fog, alpha-premultiply, etc. For non-hdr cameras: tonemapping and debanding out.color = main_pass_post_lighting_processing(pbr_input, out.color); return out; } This vastly simplifies writing custom PBR materials, making it accessible to pretty much everyone! Automatic Batching and Instancing of Draw Commands # authors: @superdump (Rob Swain) Bevy 0.12 now automatically batches/instances draw commands where possible. This cuts down the number of draw calls, which yields significant performance wins! This required a number of architectural changes, including how we store and access per-entity mesh data (more on this later). Here are some benches of the old unbatched approach (0.11) to the new batched approach (0.12): 2D Mesh Bevymark (frames per second, more is better) # This renders 160,000 entities with textured quad meshes (160 groups of 1,000 entities each, each group sharing a material). This means we can batch each group, resulting in only 160 instanced draw calls when batching is enabled. Tested on an M1 Max, limiting the BatchedUniformBuffer batch size to 1 versus how it works in 0.12. 3D Mesh \"Many Cubes\" (frames per second, more is better) # This renders 160,000 cubes, of which ~11,700 are visible in the view. These are drawn using a single instanced draw of all visible cubes which enables up to 100% increase in frame rate (2x)! Tested on an M1 Max, limiting the BatchedUniformBuffer batch size to 1 versus how it works in 0.12. These performance benefits can be leveraged on all platforms, including WebGL2! What can be batched? # Batching/Instancing can only happen for GPU data that doesn't require \"rebinding\" (binding is making data available to shaders / pipelines, which incurs a runtime cost). This means if something like a pipeline (shaders), bind group (shader-accessible bound data), vertex / index buffer (mesh) is different, it cannot be batched. From a high level, currently entities with the same material and mesh can be batched. We are investigating ways to make more data accessible without rebinds, such as bindless textures, combining meshes into larger buffers, etc. Opting Out # If you would like to opt out an entity from automatic batching, you can add the new NoAutomaticBatching component to it. This is generally for cases where you are doing custom, non-standard renderer features that don't play nicely with batching's assumptions. For example, it assumes view bindings are constant across draws and that Bevy's-built-in entity batching logic is used. The Road to GPU-driven Rendering # authors: @superdump (Rob Swain), @james-j-obrien, @JMS55, @inodentry, @robtfm, @nicopap, @teoxoy, @IceSentry, @Elabajaba Bevy's renderer performance for 2D and 3D meshes can improve a lot. There are bottlenecks on both the CPU and GPU side, which can be lessened to give significantly higher frame rates. As always with Bevy, we want to make the most of the platforms you use, from the constraints of WebGL2 and mobile devices, to the highest-end native discrete graphics cards. A solid foundation can support all of this. In Bevy 0.12 we have started reworking rendering data structures, data flow, and draw patterns to unlock new optimizations. This enabled the Automatic Batching and Instancing we landed in Bevy 0.12 and also helps pave the way for other significant wins in the future, such as GPU-driven rendering. We aren't quite ready for GPU-driven rendering, but we've started down that path in Bevy 0.12! What are CPU and GPU-driven rendering? # CPU-driven rendering is where draw commands are created on the CPU. In Bevy this means \"in Rust code\", more specifically in render graph nodes. This is how Bevy currently kicks off draws. In GPU-driven rendering, the draw commands are encoded on the GPU by compute shaders. This leverages GPU parallelism, and unlocks more advanced culling optimizations that are infeasible to do on the CPU, among many other methods that bring large performance benefits. What needs to change? # Historically Bevy's general GPU data pattern has been to bind each piece of data per-entity and issue a draw call per-entity. In some cases we did store data in uniform buffers in \"array style\" and accessed with dynamic offsets, but this still resulted in rebinding at each offset. All of this rebinding has performance implications, both on the CPU and the GPU. On the CPU, it means encoding draw commands has many more steps to process, taking more time than necessary. On the GPU (and in the graphics API), it means many more rebinds and separate draw commands. Avoiding rebinding is both a big performance benefit for CPU-driven rendering and is necessary to enable GPU-driven rendering. To avoid rebinds, the general data pattern we are aiming for is: For each data type (meshes, materials, transforms, textures), create a single array (or a small number of arrays) containing all of the items of that data type Bind these arrays a small number of times (ideally once), avoiding per-entity/per-draw rebinds In Bevy 0.12 we've started this process in earnest! We've made a number of architectural changes that are already yielding fruit. Thanks to these changes, we can now automatically batch and instance draws for entities with the exact same mesh and material. And as we progress further down this path, we can batch/instance across a wider variety of cases, cutting out more and more CPU work until eventually we are \"fully GPU-driven\". Reorder Render Sets # authors: @superdump (Rob Swain), @james-j-obrien, @inodentry The order of draws needs to be known for some methods of instanced draws so that the data can be laid out, and looked up in order. For example, when per-instance data is stored in an instance-rate vertex buffer. The render set order before Bevy 0.12 caused some problems with this as data had to be prepared (written to the GPU) before knowing the draw order. Not ideal when our plan is to have an ordered list of entity data on the GPU! The previous order of sets was: This caused friction (and suboptimal instancing) in a number of current (and planned) renderer features. Most notably in previous versions of Bevy, it caused these problems for sprite batching. The new render set order in 0.12 is: PrepareAssets was introduced because we only want to queue entities for drawing if their assets have been prepared. Per-frame data preparation still happens in the Prepare set, specifically in its PrepareResources subset. That is now after Queue and Sort, so the order of draws is known. This also made a lot more sense for batching, as it is now known at the point of batching whether an entity that is of another type in the render phase needs to be drawn. Bind groups now have a clear subset where they should be created ... PrepareBindGroups. BatchedUniformBuffer and GpuArrayBuffer # OK, so we need to put many pieces of data of the same type into buffers in a way that we can bind them as few times as possible and draw multiple instances from them. How can we do that? In previous versions of Bevy, per-instance MeshUniform data is stored in a uniform buffer with each instance's data aligned to a dynamic offset. When drawing each mesh entity, we update the dynamic offset, which can be close in cost to rebinding. It looks like this: Red arrows are 'rebinds' to update the dynamic offset, blue boxes are instance data, orange boxes are padding for dynamic offset alignment, which is a requirement of GPUs and graphics APIs. Instance-rate vertex buffers are one way, but they are very constrained to having a specific order. They are/may be suitable for per-instance data like mesh entity transforms, but they can't be used for material data. The other main options are uniform buffers, storage buffers, and data textures. WebGL2 does not support storage buffers, only uniform buffers. Uniform buffers have a minimum guaranteed size per binding of 16kB on WebGL2. Storage buffers, where available, have a minimum guaranteed size of 128MB. Data textures are far more awkward for structured data. And on platforms that don't support linear data layouts, they will perform worse. Given these constraints, we want to use storage buffers on platforms where they are supported, and we want to use uniform buffers on platforms where they are not supported (ex: WebGL 2). BatchedUniformBuffer # authors: @superdump (Rob Swain), @JMS55, @teoxoy, @robtfm, @konsolas For uniform buffers, we have to assume that on WebGL2 we may only be able to access 16kB of data at a time. Taking an example, MeshUniform requires 144 bytes per instance, which means we can have a batch of 113 instances per 16kB binding. If we want to draw more than 113 entities in total, we need a way of managing a uniform buffer of data that can be bound at a dynamic offset per batch of instances. This is what BatchedUniformBuffer is designed to solve. BatchedUniformBuffer looks like this: Red arrows are 'rebinds' to update the dynamic offset, blue boxes are instance data, orange boxes are padding for dynamic offset alignment. Notice how the instance data can be packed much more tightly, fitting the same amount of used data in less space. Also, we only need to update the dynamic offset of the binding for each batch. GpuArrayBuffer # authors: @superdump (Rob Swain), @JMS55, @IceSentry, @mockersf Given that we need to support both uniform and storage buffers for a given data type, this increases the level of complexity required to implement new low-level renderer features (both in Rust code and in shaders). When confronted with this complexity, some developers might choose instead only use storage buffers (effectively dropping support for WebGL 2). To make it as easy as possible to support both storage types, we developed GpuArrayBuffer. This is a generic collection of T values that abstracts over BatchedUniformBuffer and StorageBuffer. It will use the right storage for the current platform / GPU. The data in a StorageBuffer looks like this: Red arrows are 'rebinds', blue boxes are instance data. All the instance data can be placed directly one after the other, and we only have to bind once. There is no need for any dynamic offset binding, so there is no need for any padding for alignment. Check out this annotated code example that illustrates using GpuArrayBuffer to support both uniform and storage buffer bindings. 2D / 3D Mesh Entities using GpuArrayBuffer # authors: @superdump (Rob Swain), @robtfm, @Elabajaba The 2D and 3D mesh entity rendering was migrated to use GpuArrayBuffer for the mesh uniform data. Just avoiding the rebinding of the mesh uniform data buffer gives about a 6% increase in frame rates! EntityHashMap Renderer Optimization # authors: @superdump (Rob Swain), @robtfm, @pcwalton, @jancespivo, @SkiFire13, @nicopap Since Bevy 0.6, Bevy's renderer has extracted data from the \"main world\" into a separate \"render world\". This enables Pipelined Rendering, which renders frame N in the render app, while the main app simulates frame N+1. Part of the design involves clearing the render world of all entities between frames. This enables consistent Entity mapping between the main and render worlds while still being able to spawn new entities in the render world that don't exist in the main world. Unfortunately, this ECS usage pattern also incurred some significant performance problems. To get good \"linear iteration read performance\", we wanted to use \"table storage\" (Bevy's default ECS storage model). However in the renderer, entities are cleared and respawned each frame, components are inserted across many systems and different parts of the render app schedule. This resulted in a lot of \"archetype moves\" as new components were inserted from various renderer contexts. When an entity moves to a new archetype, all of its \"table storage\" components are copied into the new archetype's table. This can be expensive across many archetype moves and/or large table moves. This was unfortunately leaving a lot of performance on the table. Many ideas were discussed over a long period for how to improve this. The Path Forward # The main two paths forward were: Persist render world entities and their component data across frames Stop using entity table storage for storing component data in the render world We have decided to explore option (2) for Bevy 0.12 as persisting entities involves solving other problems that have no simple and satisfactory answers (ex: how do we keep the worlds perfectly in sync without leaking data). We may find those answers eventually, but for now we chose the path of least resistance! We landed on using HashMap with an optimized hash function designed by @SkiFire13, and inspired by rustc-hash. This is exposed as EntityHashMap and is the new way to store component data in the render world. This yielded significant performance wins. Usage # The easiest way to use it is to use the new ExtractInstancesPlugin. This wil extract all entities matching a query, or only those that are visible, extracting multiple components at once into one target type. It is a good idea to group component data that will be accessed together into one target type to avoid having to do multiple lookups. To extract two components from visible entities: struct MyType { a: ComponentA, b: ComponentB, } impl ExtractInstance for MyType { type Query = (Read, Read); type Filter = (); fn extract((a, b): QueryItem) -> Option { Some(MyType { a: a.clone(), b: b.clone(), }) } } app.add_plugins(ExtractInstancesPlugin::::extract_visible()); Sprite Instancing # authors: @superdump (Rob Swain) In previous versions of Bevy, Sprites were rendered by generating a vertex buffer containing 4 vertices per sprite with position, UV, and possibly color data. This has proven to be very effective. However, having to split batches of sprites into multiple draws because they use a different color is suboptimal. Sprite rendering now uses an instance-rate vertex buffer to store the per-instance data. Instance-rate vertex buffers are stepped when the instance index changes, rather than when the vertex index changes. The new buffer contains an affine transformation matrix that enables translation, scaling, and rotation in one transform. It contains per-instance color, and UV offset and scale. This retains all the functionality of the previous method, enables the additional flexibility of any sprite being able to have a color tint and all still be drawn in the same batch, and uses a total of 80 bytes per sprite, versus 144 bytes previously. This resulted in a performance improvement of up to 40% versus the previous method! Rusty Shader Imports # authors: @robtfm Bevy shaders now use Rust-like shader imports: // old #import bevy_pbr::forward_io VertexOutput // new #import bevy_pbr::forward_io::VertexOutput Like Rust imports, you can use curly braces to import multiple items. Multi-level nesting is also now supported! // old #import bevy_pbr::pbr_functions alpha_discard, apply_pbr_lighting #import bevy_pbr mesh_bindings // new #import bevy_pbr::{ pbr_functions::{alpha_discard, apply_pbr_lighting}, mesh_bindings, } Like Rust modules, you can now import partial paths: #import part::of::path // later in the shader path::remainder::function(); You can also now use fully qualified paths without importing: bevy_pbr::pbr_functions::pbr() Rusty Imports remove a number of \"API weirdness\" gotchas from the old system and expand the capabilities of the import system. And by reusing Rust syntax and semantics, we remove the need for Bevy users to learn a new system. glTF Emissive Strength # authors: @JMS55 Bevy now reads and uses the KHR_materials_emissive_strength glTF material extension when loading glTF assets. This adds support for emissive materials when importing glTF from programs like Blender. Each of these cubes has increasing emissive strength: Import Second UV Map In glTF Files # authors: @pcwalton Bevy 0.12 now imports the second UV map (TEXCOORD1 or UV1) if it is defined in glTF files and exposes it to shaders. Conventionally this is often used for lightmap UVs. This was an often requested feature and it unlocks lightmapping scenarios (both in custom user shaders and in future Bevy releases). Wireframe Improvements # authors: @IceSentry The wireframes now use Bevy's Material abstraction. This means it will automatically use the new batching and instancing features while being easier to maintain. This change also made it easier to add support for colored wireframe. You can configure the color globally or per mesh using the WireframeColor component. It's also now possible to disable wireframe rendering by using the NoWireframe component. External Renderer Context # authors: @awtterpip Historically Bevy's RenderPlugin has been fully responsible for initializing the wgpu render context. However some 3rd party Bevy Plugins, such as this work-in-progress bevy_openxr plugin, require more control over renderer initialization. Therefore in Bevy 0.12, we've made it possible to pass in the wgpu render context at startup. This means the 3rd party bevy_openxr plugin can be a \"normal\" Bevy plugin without needing to fork Bevy! Here is a quick video of Bevy VR, courtesy of bevy_openxr! Bind Group Ergonomics # authors: @robtfm, @JMS55 When defining \"bind groups\" for low-level renderer features, we use the following API api: render_device.create_bind_group( \"my_bind_group\", &my_layout, &[ BindGroupEntry { binding: 0, resource: BindingResource::Sampler(&my_sampler), }, BindGroupEntry { binding: 1, resource: my_uniform, }, ], ); This works reasonably well, but for large numbers of bind groups, the BindGroupEntry boilerplate makes it harder than necessary to read and write everything (and keep the indices up to date). Bevy 0.12 adds additional options: // Sets the indices automatically using the index of the tuple item render_device.create_bind_group( \"my_bind_group\", &my_layout, &BindGroupEntries::sequential((&my_sampler, my_uniform)), ); // Manually sets the indices, but without the BindGroupEntry boilerplate! render_device.create_bind_group( \"my_bind_group\", &my_layout, &BindGroupEntries::with_indexes(( (2, &my_sampler), (3, my_uniform), )), ); One-Shot Systems # authors: @alice-i-cecile @pascualex, @Trashtalk217, @Zeenobit Ordinarily, systems run once per frame, as part of a schedule. But this isn't always the right fit. Maybe you're responding to a very rare event like in a complex turn-based game, or simply don't want to clutter your schedule with a new system for every single button. One-shot systems flip that logic on its head, and provide you the ability to run arbitrary logic on demand, using the powerful and familiar system syntax. #[derive(Resource, Default, Debug)] struct Counter(u8); fn increment(mut counter: ResMut) { counter.0 += 1; println!(\"{}\", counter.0); } fn foo(world: &mut World) { world.init_resource::(); let id = world.register_system(increment); let _ = world.run_system(id); // prints 1 let _ = world.run_system(id); // prints 2 } There are three simple steps to using one-shot systems: register a system, store its SystemId, and then use either exclusive world access or commands to run the corresponding system. A lot becomes possible with just that, however SystemIds really start showing their power, when they're wrapped into components. use bevy::ecs::system::SystemId; #[derive(Component)] struct Callback(SystemId); // calling all callbacks! fn call_all(query: Query, mut commands: Commands) { for callback in query.iter() { commands.run_system(callback.0); } } One-shot systems can then be attached to UI elements, like buttons, actions in an RPG, or any other entity. You might even feel inspired to implement the Bevy scheduling graph with one-shot systems and aery (let us know how that goes, by the way). One-shot systems are very flexible. They can be nested, so you can call run_system from within a one-shot system. It's possible to have multiple instances of one system registered at a time, each with their own Local variables and cached system state. It also plays nice with asset-driven workflows: recording a mapping from a string to an identifier in a serialized callback is much nicer than trying to do so with Rust functions! Still, one-shot systems are not without their limitations. Currently, exclusive systems and systems designed for system piping (with either an In parameter or a return type) can't be used at all. You also can't call a one-shot systems from itself, recursion isn't possible. Lastly, one-shot systems are always evaluated sequentially, rather than in parallel. While this reduces both complexity and overhead, for certain workloads this can be meaningfully slower than using a schedule with a parallel executor. However, when you're just prototyping or writing a unit test, it can be a real hassle: two whole functions and some weird identifier? For these situations, you can use the World::run_system_once method. use bevy::ecs::system::RunSystemOnce; #[derive(Resource, Default, Debug)] struct Counter(u8); fn increment(mut counter: ResMut) { counter.0 += 1; println!(\"{}\", counter.0); } let mut world = World::new(); world.init_resource::(); world.run_system_once(increment); // prints 1 world.run_system_once(increment); // prints 2 This is great for unit testing systems and queries, and it's both lower overhead and simpler to use. However, there is one caveat. Some systems have state, either in the form of Local arguments, change detection, or EventReaders. This state isn't saved between two run_system_once calls, creating odd behavior. The Locals reset every run, while change detection will always detect data as added/changed. Be careful and you'll be alright. system.map # authors: @JoJoJet Bevy 0.12 adds a new system.map() function, which is a cheaper and more ergonomic alternative to system.pipe(). Unlike system.pipe(), system.map() just takes a normal closure (instead of another system) that accepts the output of the system as its parameter: app.add_systems(Update, my_system.map(error)); fn my_system(res: Res) -> Result { // do something that might fail here } // An adapter that logs errors pub fn error(result: Result) { if let Err(warn) = result { error!(\"{:?}\", warn); } } Bevy provides built in error, warn, debug, and info adapters that can be used with system.map() to log errors at each of these levels. Simplify Parallel Iteration Method # authors: @JoJoJet Bevy 0.12 makes the parallel Query iterator for_each() compatible with both mutable and immutable queries, reducing API surface and removing the need to write mut twice: // Before: query.par_iter_mut().for_each_mut(|x| ...); // After: query.par_iter_mut().for_each(|x| ...); Disjoint Mutable World Access Via EntityMut # authors: @JoJoJet Bevy 0.12 supports safely accessing multiple EntityMut values at once, meaning you can mutate multiple entities (with access to all of their components) at the same time. let [entity1, entity2] = world.many_entities_mut([id1, id2]); *entity1.get_mut::().unwrap() = *entity2.get::().unwrap(); This also works in queries: // This would not have been expressible in previous Bevy versions // Now it is totally valid! fn system(q1: Query, q2: Query>) { } You can now mutably iterate all entities and access arbitrary components within them: for mut entity in world.iter_entities_mut() { let mut transform = entity.get_mut::().unwrap(); transform.translation.x += 2.0; } This required reducing the access scope of EntityMut to only the entity it accesses (previously it had escape hatches that allowed direct World access). Use EntityWorldMut for an equivalent to the old \"global access\" approach. Unified configure_sets API # authors: @geieredgar Bevy's Schedule-First API introduced in Bevy 0.11 unified most of the ECS scheduler API surface under a single add_systems API. However, we didn't do a unified API for configure_sets, meaning there were two different APIs: app.configure_set(Update, A.after(B)); app.configure_sets(Update, (A.after(B), B.after(C)); In Bevy 0.12, we have unified these under a single API to align with the patterns we've used elsewhere and cut down on unnecessary API surface: app.configure_sets(Update, A.after(B)); app.configure_sets(Update, (A.after(B), B.after(C)); UI Materials # authors: @MarkusTheOrt Bevy's material system has been brought to Bevy UI thanks to the new UiMaterial: This \"circle\" UI Node is drawn with a custom shader: #import bevy_ui::ui_vertex_output::UiVertexOutput struct CircleMaterial { @location(0) color: vec4 } @group(1) @binding(0) var input: CircleMaterial; @fragment fn fragment(in: UiVertexOutput) -> @location(0) vec4 { let uv = in.uv * 2.0 - 1.0; let alpha = 1.0 - pow(sqrt(dot(uv, uv)), 100.0); return vec4(input.color.rgb, alpha); } And just like other Bevy material types, it is simple to set up in code! #[derive(AsBindGroup, Asset, TypePath, Debug, Clone)] struct CircleMaterial { #[uniform(0)] color: Vec4, } impl UiMaterial for CircleMaterial { fn fragment_shader() -> ShaderRef { \"shaders/circle_shader.wgsl\".into() } } // Register the material plugin in your App app.add_plugins(UiMaterialPlugin::::default()) // Later in your app, spawn the UI node with your material! commands.spawn(MaterialNodeBundle { style: Style { position_type: PositionType::Absolute, width: Val::Px(250.0), height: Val::Px(250.0), ..default() }, material: materials.add(CircleMaterial { color: Color::rgb(0.0, 1.0, 0.58).into(), }), ..default() }); UI Node Outlines # authors: @ickshonpe Bevy's UI nodes now support outlines \"outside the borders\" of UI nodes via the new Outline component. Outline does not occupy any space in the layout. This is different than Style::border, which exists \"as part of\" the node in the layout: commands.spawn(( NodeBundle::default(), Outline { width: Val::Px(6.), offset: Val::Px(6.), color: Color::WHITE, }, )) Unified Time # authors: @nakedible @maniwani @alice-i-cecile Bevy 0.12 brings two major quality of life improvements to FixedUpdate. Time now returns the contextually correct values for systems running in FixedUpdate. (As such, FixedTime has been removed.) FixedUpdate can no longer snowball into a \"death spiral\" (where the app freezes because FixedUpdate steps are enqueued faster than it can run them). The FixedUpdate schedule and its companion FixedTime resource were introduced in Bevy 0.10, and it soon became apparent that FixedTime was lacking. Its methods were different from Time and it didn't even track \"total time elapsed\" like Time did, to name a few examples. Having two different \"time\" APIs also meant you had to write systems to specifically support \"fixed timestep\" or \"variable timestep\" and not both. It was desirable to not have this split as it can lead to incompatibilities between plugins down the road (which is sometimes the case with plugins in other game engines). Now, you can just write systems that read Time and schedule them in either context. // This system will see a constant delta time if scheduled in `FixedUpdate` or // a variable delta time if scheduled in `Update`. fn integrate_velocity( mut query: Query, time: Res, ) { for (mut transform, velocity) in &mut query { transform.translation.x += velocity.x * time.delta_seconds(); transform.translation.y += velocity.y * time.delta_seconds(); } } Most systems should continue to use Time, but behind the scenes, the methods from previous APIs have been refactored into four clocks: Time Time Time Time Time measures the true, unedited frame and app durations. For diagnostics/profiling, use that one. It's also used to derive the others. Time can be sped up, slowed down, and paused, and Time chases Time in fixed increments. Lastly, Time is automatically overwritten with the current value of Time or Time upon entering or exiting FixedUpdate. When a system borrows Time, it actually borrows Time. Try the new time example to get a better feel for these resources. The fix for the windup problem was limiting how much Time can advance from a single frame. This then limits how many times FixedUpdate can be queued for the next frame, and so things like frame lag or your computer waking up from a long sleep can no longer cause a death spiral. So now, the app won't freeze, but things happening in FixedUpdate will appear to slow down since it'll be running at a temporarily reduced rate. ImageLoader Settings # authors: @cart, @Kanabenki To take advantage of the new AssetLoader settings in Bevy Asset V2, we've added ImageLoaderSettings to ImageLoader. This means that you can now configure the sampler, SRGB-ness, and the format, on a per-image basis. These are the defaults, as they appear in Bevy Asset V2 meta files: ( format: FromExtension, is_srgb: true, sampler: Default, ) When set to Default, the image will use whatever is configured in ImagePlugin::default_sampler. However, you can set these values to whatever you want! ( format: Format(Basis), is_srgb: true, sampler: Descriptor(( label: None, address_mode_u: ClampToEdge, address_mode_v: ClampToEdge, address_mode_w: ClampToEdge, mag_filter: Nearest, min_filter: Nearest, mipmap_filter: Nearest, lod_min_clamp: 0.0, lod_max_clamp: 32.0, compare: None, anisotropy_clamp: 1, border_color: None, )), ) GamepadButtonInput # authors: @bravely-beep Bevy generally provides two ways to handle input of a given type: Events: receive a stream of input events in the order they occur The Input Resource: read the current state of the input One notable exception was GamepadButton, which was only available via the Input resource. Bevy 0.12 adds a new GamepadButtonInput event, filling this gap. SceneInstanceReady Event # authors: @Shatur Bevy 0.12 adds a new SceneInstanceReady event, which makes it easy to listen for a specific scene instance to be ready. \"Ready\" in this case means \"fully spawned as an entity\". #[derive(Resource)] struct MyScene(Entity); fn setup(mut commands: Commands, assets: Res) { let scene = SceneBundle { scene: assets.load(\"some.gltf#MyScene\"), ..default() }; let entity = commands.spawn(scene).id(); commands.insert_resource(MyScene(entity)); } fn system(mut events: EventReader, my_scene: Res) { for event in events.read() { if event.parent == my_scene.0 { // the scene instance is \"ready\" } } } Split Computed Visibility # authors: @JoJoJet The ComputedVisibility component has now been split into InheritedVisibility (visible in the hierarchy) and ViewVisibility (visible from a view), making it possible to use Bevy's built-in change detection on both sets of data separately. ReflectBundle # authors: @Shatur Bevy now supports \"Bundle reflection\" via ReflectBundle: #[derive(Bundle, Reflect)] #[reflect(Bundle)] struct SpriteBundle { image: Handle, // other components here } This makes it possible to create and interact with ECS bundles using Bevy Reflect, meaning you can do these operations dynamically at runtime. This is useful for scripting and asset scenarios. Reflect Commands # authors: @NoahShomette It is now possible to insert and remove reflect components from an entity in a normal system via new functions on Commands! #[derive(Component, Reflect, Default)] #[reflect(Component)] struct Component(u32); fn reflect_commands(mut commands: Commands) { let boxed_reflect_component: Box = Box::new(Component(916)); let entity = commands .spawn_empty() .insert_reflect(boxed_reflect_component.clone_value()).id(); commands.entity(entity).remove_reflect(boxed_reflect_component.type_name().to_owned()); } The above commands use the AppTypeRegistry by default. If you use a different TypeRegistry then you can use the ...with_registry commands instead. #[derive(Resource)] struct TypeRegistryResource { type_registry: TypeRegistry, } impl AsRef for TypeRegistryResource { fn as_ref(&self) -> &TypeRegistry { &self.type_registry } } fn reflect_commands_with_registry(mut commands: Commands) { let boxed_reflect_component: Box = Box::new(Component(916)); let entity = commands .spawn_empty() .insert_reflect_with_registry::(boxed_reflect_component.clone_value()).id(); commands.entity(entity).remove_reflect_with_registry::(boxed_reflect_component.type_name().to_owned()); } See ReflectCommandExt for more examples and documentation Limit Background FPS # authors: @maniwani If an app has no window in focus, Bevy will now limit its update rate (to 60Hz by default). Before, many Bevy apps running on desktop operating systems (particularly macOS) would see spikes in CPU usage whenever their windows were minimized or completely covered, even with VSync enabled. The reason for this is that many desktop window managers ignore VSync for windows that aren't visible. As VSync normally limits how often an app updates, that speed limit vanishes while it's effectively disabled. Now, apps running in the background will sleep in between updates to limit their FPS. The one caveat is that most operating systems will not report if a window is visible, only if it has focus. So the throttle is based on focus, not visibility. 60Hz was then chosen as the default to maintain high FPS in cases where the window is not focused but still visible. AnimationPlayer API Improvements # authors: @devinleamy The AnimationPlayer now has new methods for controlling playback, and utilities for checking if an animation is playing or completed, and getting its AnimationClip handle. set_elapsed and has been removed in favor of seek_to. elapsed now returns the actual elapsed time and is not affected by the animation speed. stop_repeating have been removed in favor of set_repeat(RepeatAnimation::Never). let mut player = q_animation_player.single_mut(); // Check if an animation is complete. if player.is_finished() { // Set the playback mode. player.set_repeat(RepeatAnimation::Forever); player.set_repeat(RepeatAnimation::Never); player.set_repeat(RepeatAnimation::Count(4)); } // Get a handle to the playing AnimationClip. let clip_handle = player.animation_clip(); // Seek to 1s in the current clip. player.seek_to(1.0); Ignore Ambiguous Components and Resources # authors: @hymm Ambiguity Reporting is an optional feature of Bevy's scheduler. When enabled it reports conflicts between systems that modify the same data, but are not ordered in relation to each other. While some reported conflicts can cause subtle bugs, many do not. Bevy has a couple existing methods and two new ones for ignoring these. The existing APIs: ambiguous_with, which ignores conflicts between specific sets, and ambiguous_with_all, which ignores all conflicts with the set it's applied to. In addition, there are now 2 new APIs that let you ignore conflicts on a type of data, allow_ambiguous_component and allow_ambiguous_resource. These ignore all conflicts between systems on that specific type, component or resource, in a world. #[derive(Resource)] struct R; // These systems are ambiguous on R fn system_1(_: ResMut) {} fn system_2(_: Res) {} let mut app = App::new(); app.configure_schedules(ScheduleBuildSettings { ambiguity_detection: LogLevel::Error, ..default() }); app.insert_resource(R); app.add_systems(Update, ( system_1, system_2 )); app.allow_ambiguous_resource::(); // Running the app does not error. app.update(); Bevy is now using this to ignore conflicts between the Assets resources. Most of these ambiguities are modifying different assets and thus do not matter. Spatial Audio API Ergonomics # authors: @rparrett, @hymm, @mockersf A simple \"stereo\" (non-HRTF) spatial audio implementation was heroically put together at the last minute for Bevy 0.10, but the implementation was somewhat bare-bones and not very user-friendly. Users needed to write their own systems to update audio sinks with emitter and listener positions. Now users can just add a TransformBundle to their AudioBundles and Bevy will take care of the rest! commands.spawn(( TransformBundle::default(), AudioBundle { source: asset_server.load(\"sounds/bonk.ogg\"), settings: PlaybackSettings::DESPAWN.with_spatial(true), }, )); Pitch Audio Source # authors: @basilefff Audio can now be played by pitch, which is useful to debug audio issues, to use as a placeholder, or for programmatic audio. A Pitch audio source can be created from its frequency and its duration, and then be used as a source in a PitchBundle. fn play_pitch( mut pitch_assets: ResMut>, mut commands: Commands, ) { // This is a A for 1 second let pitch_handle = pitch_assets.add(Pitch::new(440.0, Duration::new(1, 0))); // Play it now commands.spawn(PitchBundle { source: pitch_handle, ..default() }); } Audio is generated at the given frequency using a sine wave. More complex sounds can be created by playing several pitch audio sources at the same time, like chords or hamonics. Added HSL methods to Color struct # authors: @idedary You can now use h(), s(), l() together with their set_h(), set_s(), set_l() and with_h(), with_s(), with_l() variants to manipulate Hue, Saturation and Lightness values of a Color struct without cloning. Previously you could do that with only RGBA values. // Returns HSL component values let color = Color::ORANGE; let hue = color.h(); // ... // Changes the HSL component values let mut color = Color::PINK; color.set_s(0.5); // ... // Modifies existing colors and returns them let color = Color::VIOLET.with_l(0.7); // ... Reduced Tracing Overhead # authors: @hymm, @james7132 Bevy uses the tracing library to measure system running time (among other things). This is useful for determining where bottlenecks in frame time are and measuring performance improvements. These traces can be visualized using the tracy tool. However, using tracing's spans has a significant overhead to it. A large part of the per-span overhead is due to allocating the string description of the span. By caching the spans for systems, commands, and parallel iteration, we have significantly reduced the CPU time overhead when using tracing. In the PR that introduced system span caching, our \"many foxes\" stress test went from 5.35 ms to 4.54 ms. In the PR that added caching for the parallel iteration spans, our \"many cubes\" stress test went from 8.89 ms to 6.8 ms. AccessKit Integration Improvements # authors: @ndarilek Bevy 0.10's AccessKit integration made it incredibly easy for the engine to take the lead and push updates to the accessibility tree. But as any good dance partner knows, sometimes it's best not to lead but to follow. This release adds the ManageAccessibilityUpdates resource which, when set to false, stops the engine from updating the tree on its own. This paves the way for third-party UIs with Bevy and AccessKit integration to send updates directly to Bevy. When the UI is ready to return control, ManageAccessibilityUpdates is set to true Bevy picks up where it left off and starts sending updates again. AccessKit itself was also simplified, and this release capitalizes on that to shrink the surface area of our integration. If you're curious about how things work internally or want to help, the bevy_a11y crate is now more approachable than ever. TypePath Migration # authors: @soqb As a followup to the introduction of Stable TypePath in Bevy 0.11, Bevy Reflect now uses TypePath instead of type_name. A reflected type's TypePath is now accessible via TypeInfo and DynamicTypePath and type_name methods have been removed. Improved bevymark Example # authors: @superdump (Rob Swain), @IceSentry The bevymark example needed to be improved to enable benchmarking the batching / instanced draw changes. Modes were added to: draw 2D quad meshes instead of sprites: --mode mesh2d vary the per-instance color data instead of only varying the colour per wave of birds: --vary-per-instance generate a number of material / sprite textures and randomly choose from them either per wave or per instance depending on the vary per instance setting: --material-texture-count 10 spawn the birds in random z order (new default), or in draw order: --ordered-z This allows benchmarking of different situations for batching / instancing in the next section. CI Improvements # authors: @ameknite, @mockersf To help ensure examples are reusable outside of the Bevy repository, CI will now fail if an example uses an import from bevy_internal instead of bevy. Additionally, the daily mobile check job now builds on more iOS and Android devices: iPhone 13 on iOS 15 iPhone 14 on iOS 16 iPhone 15 on iOS 17 Xiaomi Redmi Note 11 on Android 11 Google Pixel 6 on Android 12 Samsung Galaxy S23 on Android 13 Google Pixel 8 on Android 14 Example tooling improvements # authors: @mockersf The example showcase tool can now build all examples for WebGL2 or WebGPU. This is used to update the website with all Wasm-compatible examples, which you can find here for WebGL2, or here for WebGPU. It is now also capable of capturing a screenshot while running all examples: cargo run -p example-showcase -- run --screenshot Some options are available to help with the execution, you can check them with --help. Those screenshots are displayed on the example pages on the website, and can be used to check that a PR didn't introduce a visible regression. Example execution in CI # authors: @mockersf, @rparrett All examples are now executed in CI on Windows with DX12, and on Linux with Vulkan. When possible, a screenshot is taken and compared to the last execution. If an example crashes, the log is saved. The mobile example is also executed on the same devices as the daily mobile check job. A report of all those executions is built and available here. If you want to help sponsor tests on more platforms, get in touch! What's Next? # We have plenty of work in progress! Some of this will likely land in Bevy 0.13. Check out the Bevy 0.13 Milestone for an up-to-date list of current work being considered for Bevy 0.13. Bevy Scene and UI Evolution: We are hard at work building out a new Scene and UI system for Bevy. We're experimenting with a brand new holistic Scene / UI system that will hopefully serve as the foundation for the Bevy Editor and make defining scenes in Bevy much more flexible, capabable, and ergonomic. More Batching/Instancing Improvements: Put skinned mesh data into storage buffers to enable instanced drawing of skinned mesh entities with the same mesh/skin/material. Put material data in the new GpuArrayBuffer to enable batching of draws of entities with the same mesh, material type, and textures, but different material data. GPU-Driven Rendering: We plan on driving rendering via the GPU by creating draw calls in compute shaders (on platforms that support it). We have experiments using meshlets and plan to explore other approaches as well. This will involve putting textures into bindless texture arrays and putting meshes in one big buffer to avoid rebinds. Exposure Settings: Control camera exposure settings to change the feel and mood of your renders! GPU Picking: Efficiently select objects with pixel perfect accuracy on the GPU! Per-Object Motion Blur: Blur objects as they move using their motion vectors UI Node Border Radius and Shadows: Support for border radius and shadows in Bevy UI System Stepping: Debug your app by running systems step by step for a given frame Automatic Sync Points: Support for automatically inserting sync points between systems with dependencies, removing the need for manual insertion and resolving a common source of errors. Lightmap Support: Support for rendering pre-baked lightmaps Support Bevy # Sponsorships help make our work on Bevy sustainable. If you believe in Bevy's mission, consider sponsoring us ... every bit helps! Donate Contributors # Bevy is made by a large group of people. A huge thanks to the 185 contributors that made this release (and associated docs) possible! In random order: @miketwenty1 @viridia @d-bucur @mamekoro @jpsikstus @johanhelsing @ChristopherBiscardi @GitGhillie @superdump @RCoder01 @photex @geieredgar @cbournhonesque-sc @A-Walrus @Nilirad @nicoburns @hate @CrumbsTrace @SykikXO @DevinLeamy @jancespivo @ethereumdegen @Trashtalk217 @pcwalton @maniwani @robtfm @stepancheg @kshitijaucharmal @killercup @ricky26 @mockersf @mattdm @softmoth @tbillington @skindstrom @CGMossa @ickk @Aceeri @Vrixyz @Feilkin @flisky @IceSentry @maxheyer @MalekiRe @torsteingrindvik @djeedai @rparrett @SIGSTACKFAULT @Zeenobit @ycysdf @nickrart @louis-le-cam @mnmaita @basilefff @mdickopp @gardengim @ManevilleF @Wcubed @PortalRising @JoJoJet @rj00a @jnhyatt @ryand67 @alexmadeathing @floppyhammer @Pixelstormer @ItsDoot @SludgePhD @cBournhonesque @fgrust @sebosp @ndarilek @coreh @Selene-Amanita @aleksa2808 @IDEDARY @kamirr @EmiOnGit @wpederzoli @Shatur @ClayenKitten @regnarock @hesiod @raffaeleragni @floreal @robojeb @konsolas @nxsaken @ameknite @66OJ66 @Unarmed @MarkusTheOrt @alice-i-cecile @arsmilitaris @horazont @Elabajaba @BrandonDyer64 @jimmcnulty41 @SecretPocketCat @hymm @tadeohepperle @Dot32IsCool @waywardmonkeys @bushrat011899 @devil-ira @rdrpenguin04 @s-puig @denshika @FlippinBerger @TimJentzsch @sadikkuzu @paul-hansen @Neo-Zhixing @SkiFire13 @wackbyte @JMS55 @rlidwka @urben1680 @BeastLe9enD @rafalh @ickshonpe @bravely-beep @Kanabenki @tormeh @opstic @iiYese @525c1e21-bd67-4735-ac99-b4b0e5262290 @nakedible @Cactus-man @MJohnson459 @rodolphito @MrGVSV @cyqsimon @DGriffin91 @danchia @NoahShomette @hmeine @Testare @nicopap @soqb @cevans-uk @papow65 @ptxmac @suravshresth @james-j-obrien @MinerSebas @ottah @doonv @pascualex @CleanCut @yrns @Quicksticks-oss @HaNaK0 @james7132 @awtterpip @aevyrie @ShadowMitia @tguichaoua @okwilkins @Braymatter @Cptn-Sherman @jakobhellermann @SpecificProtagonist @jfaz1 @tsujp @Serverator @lewiszlw @dmyyy @cart @teoxoy @StaffEngineer @MrGunflame @pablo-lua @100-TomatoJuice @OneFourth @anarelion @VitalyAnkh @st0rmbtw @fornwall @ZacHarroldC5 @NiseVoid @Dworv @NiklasEi @arendjr @Malax Full Changelog # A-ECS + A-Diagnostics # Cache parallel iteration spans A-ECS + A-Scenes # Make builder types take and return Self A-Scenes # Move scene spawner systems to SpawnScene schedule Add SceneInstanceReady Add SpawnScene to prelude Finish documenting bevy_scene Only attempt to copy resources that still exist from scenes Correct Scene loader error description A-Tasks + A-Diagnostics # Fix doc warning in bevy_tasks A-Tasks # elaborate on TaskPool and bevy tasks Remove Resource and add Debug to TaskPoolOptions Fix clippy lint in single_threaded_task_pool Remove dependecies from bevy_tasks' README Allow using async_io::block_on in bevy_tasks add test for nested scopes Global TaskPool API improvements A-Audio + A-Windowing # Application lifetime events (suspend audio on Android) A-Animation + A-Transform # Add system parameter for computing up-to-date GlobalTransforms A-Transform # Update GlobalTransform on insertion Add Without filter to sync_simple_transforms' orphaned entities query Fix ambiguities in transform example A-App # Add track_caller to App::add_plugins Remove redundant check for AppExit events in ScheduleRunnerPlugin fix typos in crates/bevy_app/src/app.rs fix typos in crates/bevy_app/src/app.rs fix run-once runners A-ECS + A-App # Add configure_schedules to App and Schedules to apply ScheduleBuildSettings to all schedules Only run event systems if they have tangible work to do A-Rendering + A-Gizmos # Fix gizmo draw order in 2D Fix gizmo line width issue when using perspective A-Rendering + A-Diagnostics # Include note of common profiling issue Enhance many_cubes stress test use cases GLTF loader: handle warning NODE_SKINNED_MESH_WITHOUT_SKIN A-Rendering + A-Reflection # Register AlphaMode type A-Windowing # Add option to toggle window control buttons Fixed: Default window is now \"App\" instead of \"Bevy App\" improve documentation relating to WindowPlugin and Window Improve bevy_winit documentation Change WinitPlugin defaults to limit game update rate when window is not visible User controlled window visibility Check cursor position for out of bounds of the window Fix doc link in transparent_window example Wait before making window visible don't create windows on winit StartCause::Init event Fix the doc warning attribute and document remaining items for bevy_window Revert \"macOS Sonoma (14.0) / Xcode 15.0 — Compatibility Fixes + Docs… Revert \"macOS Sonoma (14.0) / Xcode 15.0 — Compatibility Fixes + Docs… Allow Bevy to start from non-main threads on supported platforms Prevent black frames during startup Slightly improve CursorIcon doc. Fix typo in window.rs A-Gizmos # Replace AHash with a good sequence for entity AABB colors gizmo plugin lag bugfix Clarify immediate mode in Gizmos documentation Fix crash when drawing line gizmo with less than 2 vertices Document that gizmo depth_bias has no effect in 2D A-Utils # change 'collapse_type_name' to retain enum types bevy_derive: Fix #[deref] breaking other attributes Move default docs A-Rendering + A-Assets # Import the second UV map if present in glTF files. fix custom shader imports Add ImageSamplerDescriptor as an image loader setting A-ECS # Add the Has world query to bevy_ecs::prelude Simplify parallel iteration methods Fix safety invariants for WorldQuery::fetch and simplify cloning Derive debug for ManualEventIterator Add EntityMap::clear Add a paragraph to the lifetimeless module doc opt-out multi-threaded feature flag Fix ambiguous_with breaking run conditions Add RunSystem Add replace_if_neq to DetectChangesMut Adding Copy, Clone, Debug to derived traits of ExecutorKind Fix incorrect documentation link in DetectChangesMut Implement Debug for UnsafeWorldCell Relax In/Out bounds on impl Debug for dyn System Improve various Debug implementations Make run_if_inner public and rename to run_if_dyn Refactor build_schedule and related errors Add system.map(...) for transforming the output of a system Reorganize Events and EventSequence code Replaced EntityMap with HashMap clean up configure_set(s) erroring Relax more Sync bounds on Local Rename ManualEventIterator Replaced EntityCommand Implementation for FnOnce Add a variant of Events::update that returns the removed events Move schedule name into Schedule port old ambiguity tests over Refactor EventReader::iter to read fix ambiguity reporting Fix anonymous set name stack overflow Fix unsoundness in QueryState::is_empty Add panicking helpers for getting components from Query Replace IntoSystemSetConfig with IntoSystemSetConfigs Moved get_component(_unchecked_mut) from Query to QueryState Fix naming on \"tick\" Column and ComponentSparseSet methods Clarify a comment in Option WorldQuery impl Return a boolean from set_if_neq Rename RemovedComponents::iter/iter_with_id to read/read_with_id Remove some old references to CoreSet Use single threaded executor for archetype benches docs: Improve some ComponentId doc cross-linking. One Shot Systems Add mutual exclusion safety info on filter_fetch add try_insert to entity commands Improve codegen for world validation docs: Use intradoc links for method references. Remove States::variants and remove enum-only restriction its derive as_deref_mut() method for Mut-like types refactor: Change Option> query params to Has Hide UnsafeWorldCell::unsafe_world Add a public API to ArchetypeGeneration/Id Ignore ambiguous components or resources Use chain in breakout example ParamSets containing non-send parameters should also be non-send Replace all labels with interned labels Fix outdated comment referencing CoreSet A-Rendering + A-Math # derive Clone/Copy/Debug trio for shape::Cylinder A-UI # Fix for vertical text bounds and alignment UI extraction order fix Update text example using default font bevy_ui: fix doc formatting for some Style fields Remove the With query filter from bevy_ui::render::extract_uinode_borders Fix incorrent doc comment for the set method of ContentSize Improved text widget doc comments Change the default for the measure_func field of ContentSize to None. Unnecessary line in game_menu example Change UiScale to a tuple struct Remove unnecessary doc string Add some missing pub in ui_node UI examples clean up round_ties_up fix fix incorrect docs for JustifyItems and JustifySelf Added Val::ZERO Constant Cleanup some bevy_text pipeline.rs Make GridPlacement's fields non-zero and add accessor functions. Remove Val's try_* arithmetic methods UI node bundle comment fix Do not panic on non-UI child of UI entity Rename Val evaluate to resolve and implement viewport variant support Change Urect::width & Urect::height to be const TextLayoutInfo::size should hold the drawn size of the text, and not a scaled value. impl From and From for TextSection Remove z-axis scaling in extract_text2d_sprite Fix doc comments for align items Add tests to bevy_ui::Layout examples: Remove unused doc comments. Add missing bevy_text feature attribute to TextBundle from impl Move Val into geometry Derive Serialize and Deserialize for UiRect ContentSize replacement fix Round UI coordinates after scaling Have a separate implicit viewport node per root node + make viewport node Display::Grid Rename num_font_atlases to len. Fix documentation for ui node Style text_wrap_debug scale factor commandline args Store both the rounded and unrounded node size in Node Various accessibility API updates. UI node outlines Implement serialize and deserialize for some UI types Tidy up UI node docs Remove unused import warning when default_font feature is disabled Fix crash with certain right-aligned text Add some more docs for bevy_text. Implement Neg for Val normalize method for Rect don't Implement Display for Val [bevy_text] Document what happens when font is not specified Update UI alignment docs Add stack index to Node don't Implement Display for Val A-Animation # Fix doc typo Expose animation_clip paths animations: convert skinning weights from unorm8x4 to float32x4 API updates to the AnimationPlayer only take up to the max number of joints check root node for animations Fix morph interpolation A-Pointers # Put #[repr(transparent)] attr to bevy_ptr types A-Assets + A-Reflection # reflect: TypePath part 2 A-Rendering + A-Hierarchy # default inherited visibility when parent has invalid components A-ECS + A-Tasks # Round up for the batch size to improve par_iter performance A-Reflection + A-Utils # Moved fq_std from bevy_reflect_derive to bevy_macro_utils A-Reflection + A-Math # Add reflect impls to IRect and URect Implement reflect trait on new glam types (I64Vec and U64Vec) A-Hierarchy # Prevent setting parent as itself Add as_slice to parent A-Input # input: allow multiple gamepad inputs to be registered for one button in one frame Bevy Input Docs : lib.rs Bevy Input Docs : gamepad.rs Add GamepadButtonInput event Bevy Input Docs : the modules Finish documenting bevy_gilrs Change AxisSettings livezone default docs: Update input_toggle_active example A-Input + A-Windowing # Fix Window::set_cursor_position Change Window::physical_cursor_position to use the physical size of the window Fix check that cursor position is within window bounds A-ECS + A-Reflection # implement insert and remove reflected entity commands Allow disjoint mutable world access via EntityMut Implement Reflect for State and NextState #[derive(Clone)] on Component{Info,Descriptor} A-Math # Rename bevy_math::rects conversion methods Add glam swizzles traits to prelude Rename Bezier to CubicBezier for clarity Add a method to compute a bounding box enclosing a set of points re-export debug_glam_assert feature Add Cubic prefix to all cubic curve generators A-Build-System # only check for bans if the dependency tree changed Slightly better message when contributor modifies examples template switch CI jobs between windows and linux for example execution Check for bevy_internal imports in CI Fix running examples on linux in CI Bump actions/checkout from 2 to 4 doc: Remove reference to clippy::manual-strip. Only run some workflows on the bevy repo (not forks) run mobile tests on more devices / OS versions Allow clippy::type_complexity in more places. hacks for running (and screenshotting) the examples in CI on a github runner make CI less failing on cargo deny bans add test on Android 14 / Pixel 8 Use clippy::doc_markdown more. A-Diagnostics # Cache System Tracing Spans A-Rendering + A-Animation # Use a seeded rng for custom_skinned_mesh example Move skin code to a separate module A-Core # Change visibility of bevy::core::update_frame_count to pub A-Reflection # Fix typo in NamedTypePathDef Refactor path module of bevy_reflect Refactor parsing in bevy_reflect path module bevy_reflect: Fix combined field attributes bevy_reflect: Opt-out attribute for TypePath Add reflect path parsing benchmark Make it so ParsedPath can be passed to GetPath Make the reflect path parser utf-8-unaware bevy_scene: Add ReflectBundle Fix comment in scene example FromResources Remove TypeRegistry re-export rename Provide getters for fields of ReflectFromPtr Add TypePath to the prelude Improve TypeUuid's derive macro error messages Migrate Quat reflection strategy from \"value\" to \"struct\" bevy_reflect: Fix dynamic type serialization bevy_reflect: Fix ignored/skipped field order A-Rendering + A-Assets + A-Reflection # Implement Reflect for Mesh A-ECS + A-Time # add on_real_time_timer run condition A-ECS + A-Hierarchy # Added 'clear_children' and 'replace_children' methods to BuildWorldChildren to be consistent with BuildChildren. A-Audio # Added Pitch as an alternative sound source update documentation on AudioSink audio sinks don't need their custom drop anymore Clarify what happens when setting the audio volume More ergonomic spatial audio A-Rendering + A-UI # Remove out-of-date paragraph in Style::border Revert \"Fix UI corruption for AMD gpus with Vulkan (#9169)\" Revert \"Fix UI corruption for AMD gpus with Vulkan (#9169)\" many_buttons enhancements Fix UI borders UI batching Fix Add UI Materials A-ECS + A-Reflection + A-Pointers # add MutUntyped::map_unchanged No area label # Fix typos throughout the project Bump Version after Release fix clippy::default_constructed_unit_structs and trybuild errors delete code deprecated in 0.11 Drain ExtractedUiNodes in prepare_uinodes example showcase - pagination and can build for WebGL2 example showcase: switch default api to webgpu Add some more helpful errors to BevyManifest when it doesn't find Cargo.toml Fix path reference to contributors example replace parens with square brackets when referencing _mut on Query docs #9200 use AutoNoVsync in stress tests bevy_render: Remove direct dep on wgpu-hal. Fixed typo in line 322 custom_material.vert: gl_InstanceIndex includes gl_BaseInstance fix typo in a link - Mesh docs Improve font size related docs Fix gamepad viewer being marked as a non-wasm example Rustdoc: Scrape examples enable multithreading on benches webgl feature renamed to webgl2 Example Comment Typo Fix Fix shader_instancing example Update tracy-client requirement from 0.15 to 0.16 fix bevy imports. windows_settings.rs example Fix CI for Rust 1.72 Swap TransparentUi to use a stable sort Replace uses of entity.insert with tuple bundles in game_menu example Remove IntoIterator impl for &mut EventReader remove VecSwizzles imports Fix erronenous glam version Fixing some doc comments Explicitly make instance_index vertex output @interpolate(flat) Fix some nightly warnings Use default resolution for viewport_debug example Refer to \"macOS\", not \"macOS X\". Remove useless single tuples and trailing commas Fix some warnings shown in nightly Fix animate_scale scaling z value in text2d example \"serialize\" feature no longer enables the optional \"bevy_scene\" feature if it's not enabled from elsewhere fix deprecation warning in bench don't enable filesystem_watcher when building for WebGPU Improve doc formatting. Fix the clippy::explicit_iter_loop lint Wslg docs skybox.wgsl: Fix precision issues Fix typos. Add link to Text2dBundle in TextBundle docs. Fix some typos Fix typos Replaced parking_lot with std::sync Add inline(never) to bench systems Android: handle suspend / resume Fix some warnings shown in nightly Updates for rust 1.73 Improve selection of iOS device in mobile example Update toml_edit requirement from 0.19 to 0.20 foxes shouldn't march in sync Fix tonemapping test patten Removed once_cell Improve WebGPU unstable flags docs shadow_biases: Support different PCF methods shadow_biases: Support moving the light position and resetting biases Update async-io requirement from 1.13.0 to 2.0.0 few fmt tweaks Derive Error for more error types Allow AccessKit to react to WindowEvents before they reach the engine A-Rendering + A-Build-System # Improve execution of examples in CI make deferred_rendering simpler to render for CI A-Meta # Remove the bevy_dylib feature add and fix shields in Readmes Added section for contributing and links for issues and PRs Fix orphaned contributing paragraph A-Assets + A-Animation # Handle empty morph weights when loading gltf Finish documenting bevy_gltf A-Editor + A-Diagnostics # Add DiagnosticsStore::iter_mut A-Time # Fix timers.rs documentation Add missing documentation to bevy_time Clarify behaviour of Timer::finished() for repeating timers ignore time channel error Unify FixedTime and Time while fixing several problems Time: demote delta time clamping warning to debug fix typo in time.rs example Example time api A-Rendering + A-ECS # Update Camera's Frustum only when its GlobalTransform or CameraProjection changed A-UI + A-Reflection # bevy_ui: reflect missing types register TextLayoutInfo and TextFlags type. A-Build-System + A-Assets # Increase iteration count for asset tests A-Rendering # Clarify that wgpu is based on the webGPU API Return URect instead of (UVec2, UVec2) in Camera::physical_viewport_rect fix module name for AssetPath shaders Add GpuArrayBuffer and BatchedUniformBuffer Update bevy_window::PresentMode to mirror wgpu::PresentMode Stop using unwrap in the pipelined rendering thread Fix panic whilst loading UASTC encoded ktx2 textures Document ClearColorConfig Use GpuArrayBuffer for MeshUniform Update docs for scaling_mode field of Orthographic projection Fix shader_material_glsl example after #9254 Improve Mesh documentation Include tone_mapping fn in tonemapping_test_patterns Extend the default render range of 2D camera Document when Camera::viewport_to_world and related methods return None include toplevel shader-associated defs Fix post_processing example on webgl2 use ViewNodeRunner in the post_processing example Work around naga/wgpu WGSL instance_index -> GLSL gl_InstanceID bug on WebGL2 Fix non-visible motion vector text in shader prepass example Use bevy crates imports instead of bevy internal. post_processing example Make Anchor Copy Move window.rs to window/mod.rs in bevy_render Reduce the size of MeshUniform to improve performance Fix temporal jitter bug Fix gizmo lines deforming or disappearing when partially behind the camera Make WgpuSettings::default() check WGPU_POWER_PREF fix wireframe after MeshUniform size reduction fix shader_material_glsl example [RAINBOW EFFECT] Added methods to get HSL components from Color ktx2: Fix Rgb8 -> Rgba8Unorm conversion Reorder render sets, refactor bevy_sprite to take advantage Improve documentation relating to Frustum and HalfSpace Revert \"Update defaults for OrthographicProjection (#9537)\" Remove unused regex dep from bevy_render Split ComputedVisibility into two components to allow for accurate change detection and speed up visibility propagation Use instancing for sprites Enhance bevymark Remove redundant math in tonemapping. Improve SpatialBundle docs Cache depth texture based on usage warn and min for different vertex count default 16bit rgb/rgba textures to unorm instead of uint Fix TextureAtlasBuilder padding Add example for Camera::viewport_to_world Fix wireframe for skinned/morphed meshes generate indices for Mikktspace invert face culling for negatively scaled gltf nodes renderer init: create a detached task only on wasm, block otherwise Cleanup visibility module Use a single line for of large binding lists Fix a typo in DirectionalLightBundle Revert \"Update defaults for OrthographicProjection (#9537)\" Refactor rendering systems to use let-else Use radsort for Transparent2d PhaseItem sorting Automatic batching/instancing of draw commands Directly copy data into uniform buffers Allow other plugins to create renderer resources Use EntityHashMap for render world entity storage for better performance Parallelize extract_meshes Fix comment grammar Allow overriding global wireframe setting. wireframes: workaround for DX12 Alternate wireframe override api Fix TextureAtlasBuilder padding fix example mesh2d_manual PCF For DirectionalLight/SpotLight Shadows Refactor the render instance logic in #9903 so that it's easier for other components to adopt. Fix 2d_shapes and general 2D mesh instancing fix webgl2 crash fix orthographic cluster aabb for spotlight culling Add consuming builder methods for more ergonomic Mesh creation wgpu 0.17 use Material for wireframes Extract common wireframe filters in type alias Deferred Renderer Configurable colors for wireframe chore: Renamed RenderInstance trait to ExtractInstance pbr shader cleanup Fix text2d view-visibility Allow optional extraction of resources from the main world ssao use unlit_color instead of white Fix missing explicit lifetime name for copy_deferred_lighting_id name Fixed mod.rs in rendering to support Radeon Cards Explain usage of prepass shaders in docs for Material trait Better link for prepare_windows docs Improve linking within RenderSet docs. Fix unlit missing parameters *_PREPASS Shader Def Cleanup check for any prepass phase allow extensions to StandardMaterial array_texture example: use new name of pbr function chore: use ExtractComponent derive macro for EnvironmentMapLight and FogSettings Variable MeshPipeline View Bind Group Layout update shader imports Bind group entries Detect cubemap for dds textures Fix alignment on ios simulator Add convenient methods for Image Use “specular occlusion” term to consistently extinguish fresnel on Ambient and Environment Map lights Fix fog color being inaccurate Replace all usages of texture_descritor.size.* with the helper methods View Transformations fix deferred example fog values WebGL2: fix import path for unpack_unorm3x4_plus_unorm_20_ Use wildcard imports in bevy_pbr Make mesh attr vertex count mismatch warn more r",
    "commentLink": "https://news.ycombinator.com/item?id=38144417",
    "commentBody": "Bevy 0.12Hacker NewspastloginBevy 0.12 (bevyengine.org) 305 points by przmk 14 hours ago| hidepastfavorite69 comments armchairhacker 11 hours agoTo me, Bevy is a completely different way of making games vs traditional engines like Unity, Godot, etc.There’s no UI or scripting, everything is done in Rust code. This makes it more like more like libGDX and Cocos2D-x.But unlike those engines, it uses ECS and Rust which makes coding in it completely different. So it’s kind of in its own little island.I’d love to see successful indie games use Bevy. However, I know most game developers aren’t going to prefer it over the more traditional tools which they’ve been taught and everyone around them is using. I’m not sure the intersection of people who want to make games and people who prefer Rust is large; and even within this intersection, most people aren’t going to dedicate considerable amount of time and effort into learning and using an experimental new engine, they’re going to use something with existing trust and resources.Personally I think Bevy needs a sort of IDE and scripting language which is powered by Bevy and Rust. This won’t remove the “considerable effort into a new project” obstacle, but it would make Bevy much more inviting to newcomers who don’t have experience with Rust and who would be too intimidated to start from a wall of code (vs a canvas like Unity or Godot where you can have a very basic prototype within hours). Plus, I believe the developer is against scripting languages, but I really think that hot reload and more invasive debugging is necessary and can’t be effectively done in Rust (plus as just mentioned, many game developers will be overwhelmed with Rust and it’s borrow checker). But those are just my thoughts, and right now I don’t have the time, resources, and dedication to implement them myself… reply paholg 10 hours agoparentBevy is structured in a way that you really don&#x27;t have to interact with the borrow-checker very much. Components and Resources will probably always use owned types, and Querys and Refs let you interact with them without having to worry too much.I&#x27;ve been playing with Bevy a bit, and I just checked my repo; it has 0 lifetimes. reply felipellrocha 9 hours agorootparentThat is usually the case in Rust. One mostly deals with lifetimes in library code reply johnnyanmac 9 hours agoparentprev>However, I know most game developers aren’t going to prefer it over the more traditional tools which they’ve been taught and everyone around them is usingIME, the most time consuming parts of game development is asset management,closely followed by the programming. An engine like Bevy does a lot to try and cut down on bug fix time, but the lack of some sort of asset pipeline means you lose those savings on the asset side. scripting language would help a bit, but the sort of people using Bevy at the moment don&#x27;t have a strong need for it (very technical people, not necessarily full time designers).I do strongly look forward to how the Rust community impacts game development, and I want to eventually contribute. But I&#x27;m sticking to C++&#x2F;C# pipelines for the reasons you lay out. I can properly learn rust on the side and perhaps consider it for later projects as tools mature.> Plus, I believe the developer is against scripting languages, but I really think that hot reload and more invasive debugging is necessary and can’t be effectively done in RustI understand where you&#x27;re coming from, but consider another angle. Hot reloading is often a band-aid around when compilations times grow unwieldy. If your code compiles in 4 seconds on average (and lets say, 20 seconds for a full re-compilation. These numbers are completely arbitrary), then there&#x27;s not as much need to focus resources on ways to get around full compilations.That said, I hear Rust in general takes longer to compile programs, so I can imagine the need for scripting&#x2F;hot reloading to come sooner rather than later. But current indie projects being worked on likely won&#x27;t run into that barrier. reply CooCooCaCha 11 hours agoparentprevIDE has been planned for awhile and I believe it’s top priority after this release.Cart (the creator of bevy) believes bevy should be rust first. Personally I agree, but that doesn’t mean people can’t create plugins for various scripting languages. In fact there are some already. reply _cart 14 hours agoprevBevy&#x27;s creator and project lead here. Feel free to ask me anything! reply sdwr 13 hours agoparentThanks for posting - hobby game dev here, know just enough to be dangerous.. if I was going to start a new project, it would be in your engine, seems like it splits the diff between Love + Godot, more robust than Love, not as geared towards novices as Godot.How opinionated is bevy? Have you ever had to make tradeoffs between features and developer accessibility?What is the \"ideal\" project to use bevy for right now? reply _cart 13 hours agorootparentBevy tries to have its cake and eat it too. We have a large, opinionated featureset (ex: how should rendering code look, high level materials, sprites, meshes, animation, scenes, etc) where everything works nicely together. However we are extremely modular to the point that you can do pretty much anything in Bevy. People build their own renderers, do command line only terminal UIs, custom UI systems, etc etc.We make tradeoffs all the time. We prioritize accessibility &#x2F; developer UX to a pretty high degree. But this very rarely means cutting features. The hard part is generally _how_ we expose a feature, not _if_.\"What is the \"ideal\" project to use bevy for right now?\"Bevy is well suited to many project types. The biggest missing piece is a lack of a visual editor (we are working on this, and while you wait you can use programs like Blender or ldtk to compose your scenes). I&#x27;d say the ideal project is (1) Small-to-medium-sized in scope, to help mitigate the risk of using a younger engine (2) doesn&#x27;t need a full Bevy Editor &#x2F; can get away with code driven or external-editor-driven scenes. reply alice-i-cecile 13 hours agorootparentprevYeah, that&#x27;s not a bad way to describe its positioning.Currently not a lot of batteries included: the experience is much more like \"writing a web app using a framework\" than it is \"boot up RPG Maker\".Generally speaking, Bevy is extremely flexible, with pretty generous defaults for enabled features to let beginners avoid worrying about toggling feature flags and controlling plugins.In game engine development, features are typically strictly additive, so features vs developer accessibility isn&#x27;t a great way to frame the tradeoff. Instead, we often push work into the third-party plugin ecosystem to ease maintenance burden or let it mature.As for the ideal project, I would either say \"solo programmer who wants to learn Rust and game dev for fun\", or \"small, serious team looking to build an unusual systems-heavy game\". reply Buttons840 13 hours agoparentprevI&#x27;m put off by the limited docs. I&#x27;ve read the Bevy book, only takes a few minutes, and just like that I&#x27;m out of resources to turn to when I get stuck.When will the docs improve? I look at the release notes and ideally every one of those features would have several pages of docs. I understand that&#x27;s a lot of work, and maybe things will have to stabilize before we get full docs? reply _cart 12 hours agorootparentAmong Bevy contributors (including myself) there is a general hesitance to invest too much time in official learning material that will be obsolete by the next release. Bevy&#x27;s APIs are beginning to stabilize ... and the appetite (both from users and from Bevy devs) for official material is increasing. The time is coming (soon)!While you wait, there are a sizeable number of tutorials on YouTube, and we have learning material linked in https:&#x2F;&#x2F;bevyengine.org&#x2F;assets&#x2F;#learning as well. reply oh_sigh 11 hours agorootparentNit: developers who use bevy should be called bevy devys. reply przmk 13 hours agorootparentprevThere&#x27;s an unofficial complement to the docs that covers a lot of different topics here: https:&#x2F;&#x2F;bevy-cheatbook.github.io&#x2F;introduction.html reply eximius 10 hours agorootparentUnfortunately it&#x27;s somewhat out of date reply capableweb 10 hours agorootparentI mean, Bevy 0.12 was released... Yesterday.Most pages are for version 0.11 or 0.12 already, and not much changed between the two versions besides the assets, if you already have a game written in 0.11. Together with the release notes, you&#x27;ll survive :) reply IceSentry 12 hours agorootparentprevBevy does have plenty of documentation here: https:&#x2F;&#x2F;docs.rs&#x2F;bevy&#x2F;latest&#x2F;bevy&#x2F;What&#x27;s missing is tutorial type documentation, but individual features are generally documented. reply CooCooCaCha 13 hours agorootparentprevThe examples in the github repo are fantastic and cover a lot of ground. That&#x27;s usually my goto when trying to figure things out. reply nextaccountic 10 hours agoparentprevwhen we will see dynamic systems and other features necessary to unlock first class bevy scripting?there are some scripting plugins (mainly focusing on rhai atm) but I feel that they are stonewalled by lack of proper bevy supporti mean regardless of whether the current bevy focus is in rust-only games, there is demand for scripting and people are already scrambling for third party solutions. I don&#x27;t expect to see first party bevy scripting just yet but I think that bevy should adopt foundations for third party crates to work with reply bigyikes 13 hours agoparentprevWhat (dis)advantages does writing a game in Rust (with Bevy) have compared to other languages? Keen to hear about performance, safety, and dev velocity. reply alice-i-cecile 13 hours agorootparentI gave a talk about this recently![0]But, to answer your question directly:- Rust performance is comparable to C&#x2F;C++, but Bevy has had much less time to get optimized than C&#x2F;C++. Our ECS is fast, but slower than flecs, and our rendering performance is about Unity level IIRC.- Safety &#x2F; correctness is a huge benefit. Memory safety is obviously nice for reducing horrible segfaults, but ultimately I end up really loving enums, traits and the ease of unit testing to make refactoring games (and the libraries they rely on).- Talking to experienced game devs, velocity is quite good! Once you&#x27;re off the ground, a ton of your time comes from a) refactoring b) bug fixing c) adding bog-standard but tedious functionality like localization. I&#x27;ve talked about the first two, but Rust&#x27;s first class packaging ecosystem (and Bevy&#x27;s modularity) means that you can actually share work for that, rather than rewriting it at every company like you see in a lot of other game dev.Gameplay features are wildly easy to write, but GUI creation is still miserably tedious with a fragmented ecosystem.On development velocity, I will note that Linux&#x27;s compilation times for Rust are meaningfully better than Windows, although M1 Macs are compelling too. The lack of visual editor tooling definitely slows things down too, even though good ecosystem options for that are emerging.[0]: https:&#x2F;&#x2F;elk.zone&#x2F;mastodon.gamedev.place&#x2F;@alice_i_cecile&#x2F;1113... reply Keyframe 12 hours agorootparentAlso, consoles are out of the question, right? Well, maybe Xbox.. maybe. And what about mobile? reply alice-i-cecile 12 hours agorootparentSteam Deck functions great, Xbox is a well, maybe. Playstation and Switch are \"negotiate with the console owners\" situation.Mobile is functional but immature, same with XR. reply CooCooCaCha 12 hours agorootparentprevThat&#x27;s a big leap, what makes you say consoles are out of the question? reply tormeh 8 hours agorootparentThe console toolchains are proprietary and locked behind NDAs. An engine cannot be both open source and support consoles. What it can (and Godot does) is have a closed-source version of the engine (or just plugins) that you are only permitted to license once Sony&#x2F;Nintendo&#x2F;MS has approved you. That version or those plugins can then contain the code required for the consoles. reply pornel 13 hours agorootparentprevYou need to be comfortable with Rust and with ECS.If you’re coming from a GC language and `Player extends Entity` mutable OOP approach, you will have to completely re-learn how you architect games.The upside is that Rust is pretty fast, and Bevy takes advantage of Rust’s relatively easy multi-threading. reply Thaxll 12 hours agorootparentprevThe biggest disavantage is that no one uses Rust to create games, it&#x27;s all C++ or C#. So all the documentation, knowledge, libraries etc ... are missing and &#x2F; or different. reply leetharris 11 hours agorootparentOr JavaScript, surprisingly. Vampire Survivors is the most famous recent one. Pretty cool to think about. reply Tade0 13 hours agoparentprevAny chance for some sort of \"Bevy Studio\" app to appear in the future?It&#x27;s not that I don&#x27;t like programming, I&#x27;m just brutally time-constrained (kids). reply _cart 13 hours agorootparentYup! The Bevy Editor is our current highest priority. The first step is building out a new Scene &#x2F; UI system that will serve as the foundation for the editor (as the Bevy Editor will be built as a Bevy App).I have a post about this (with working prototypes) here: https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;discussions&#x2F;9538 reply Tade0 13 hours agorootparentOh wow, that is a detailed post. Thank you for your hard work! reply przmk 13 hours agorootparentprevNot the author but there&#x27;s a Bevy Editor on the roadmap. reply pests 13 hours agorootparentYep. Built with Bevy similar to how Godot is self-hosted. They are still figuring out the details like which UI framework to use and how to save scenes. Which abstractions to introduce - nodes like Godot, objects+components like unity, etc? Then debate on how \"prefabs\" are designed - are they just bundles? Entity and component serialization.... Tons of architectual decisions.It&#x27;s coming together. reply IceSentry 11 hours agorootparentThe UI framework will be bevy_ui just like godot uses godot ui library. What needs to be done is improve it so it can actually work for making a complex app. reply metabagel 13 hours agoparentprevI’m a rank beginner at game programming, GPU programming, and Rust.Is it possible to access compute shader functionality through Bevy &#x2F; Vulkan? Basically, offload arbitrary GPU appopriate calculations to the GPU? reply _cart 13 hours agorootparentYup! Here is a Bevy example that simulates Conway&#x27;s Game Of Life in a compute shader: https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;blob&#x2F;main&#x2F;examples&#x2F;shader... reply metabagel 13 hours agorootparentThanks! reply gaganyaan 9 hours agoparentprevThanks for creating and maintaining Bevy! Has there been much thought given to embedding Bevy in regular GUIs, say if I wanted to display a 3D model inside of an Iced app? I was only able to find things that worked the other way, embedding Iced in Bevy.Maybe this would come as part of the Bevy editor that&#x27;s planned? reply echelon 13 hours agoparentprevWe&#x27;re building a fairly big WASM app in Bevy (relative to our company&#x27;s size), and it&#x27;s been a pleasure to work with the engine.Bevy and the community are awesome. We needed a couple of tickets worked on, and it was so easy to find one of the core contributors to sponsor and push our request over the line (morph targets).Thank you so much for everything, Carter! You&#x27;re building something incredibly important that has fantastic momentum behind it.Bevy is wonderfully easy to deploy to the web, and people should be checking it out. The community is great, and it&#x27;s easy to find help. reply _cart 12 hours agorootparentThank you for the kind words! Messages like these are what help me push through the hard days. reply mahulst 13 hours agoparentprevSweet! Always a suprise to see how much ends up in a release. It seems like the last three weeks there are as much features merged as in the rest of the release window.Technical question: will there ever be a guide that talks through how the rendering part of bevy works? The graph and all is great, but really difiicult to get into without the help of discord. reply _cart 13 hours agorootparentHaha yeah we have a tendency to merge a lot of \"ready\" work near the end.We do plan to have a thorough rendering guide. We&#x27;ve just been putting it off as the renderer has been (and still is) in flux. Once the dust settles a bit we&#x27;ll start investing in \"documentation on-ramps\". reply flandish 11 hours agoparentprevLearning here - long time sw eng, but mostly back ends. So I’m starting down the emulator path. Would this work with the display&#x2F;ui portion of an emu like an 8080&#x2F;chip8? Since the logic is in the opcodes, most of what I think is needed is displaying vram, ui, windowing (screen, options, stack etc). It is still fuzzy where “ui” ends and “game engine” begins.Your pages are great and readable! reply _cart 11 hours agorootparentI suspect that as a visualizer for an emulator, Bevy would be a reasonable fit. You could use Bevy UI or build your own for the emulator interface. You might want to build a custom shader to display emulator outputs. You could also consider doing a custom renderer in Bevy if you see the need. Theres also always the option of dropping down a level and using a graphics api like wgpu (which is the \"low level\" api we use under the hood that allows us to target Vulkan &#x2F; DX12 &#x2F; Metal &#x2F; OpenGL &#x2F; WebGL2) reply flandish 9 hours agorootparentThanks! I’ll give it a try! reply andrewmcwatters 14 hours agoparentprevHave you considered moving off of 0.x.x? You have people consuming this software, it&#x27;s public, and if you plan on breaking it quarterly, just be upfront with people and move through major versions.LÖVE made the same mistake for years, and their version history looks odd as a result due to the sudden jump from 0.10 to 11.0.You&#x27;ll be working on Bevy for years. When do you decide it&#x27;s ready for public \"stable\" usage, and how do you plan on communicating this to users? reply ncallaway 13 hours agorootparent> and if you plan on breaking it quarterly, just be upfront with people and move through major versions.Isn’t that exactly what a 0.x version means? This seems far more up front with people that releasing a 1.0 that bumps to 2.0 3 months later.I think until the engine is baked enough that the API avoids breaking changes for years at a time it should remain pre 1.0. reply andrewmcwatters 13 hours agorootparentWhat will most likely happen is that there with be large subsets of Bevy users who never use a formally stable Bevy codebase, and then leave for something different, because there are no guarantees.Maintainers of all sorts of different projects also signal to their users their investment value in working with a large critical dependency. reply unshavedyak 13 hours agorootparent> What will most likely happen is that there with be large subsets of Bevy users who never use a formally stable Bevy codebase, and then leave for something different, because there are no guarantees.But naming it 1.0 won&#x27;t give them guarantees either. If it&#x27;s assumed, it would just be annoying when breakages do occur. What you&#x27;re really asking for (it sounds like) is for there to be less breakages or longer term releases .. and that&#x27;s a staffing issue imo.If users avoid it because they don&#x27;t want churn, and the devs are choosing churn - then everyone is in agreement currently, no? The bevy devs are writing software in a way that fits them currently, and users who prefer to wait for 1.0 are doing so currently. Everyone gets as advertised.Do you see it working differently? reply CooCooCaCha 13 hours agorootparentprevI think it depends on how the developer views 0.x releases. In Bevy&#x27;s case there has been discussions around backwards compatibility and I think it&#x27;ll happen but right now it doesn&#x27;t make sense until the major systems are in place.My impression from being in the community for awhile is that the devs don&#x27;t want to perpetually stay with 0.x releases. It&#x27;s just that a game engine is a big thing with a lot of moving parts. reply ncallaway 10 hours agorootparentprev> What will most likely happen is that there with be large subsets of Bevy users who never use a formally stable Bevy codebase, and then leave for something different, because there are no guarantees.But you haven&#x27;t asked for them to release a formally stable Bevy codebase. You just asked them to change to a 1.0 version that implicitly promises a stable codebase. You specifically asked:\"and if you plan on breaking it quarterly, just be upfront with people and move through major versions.\"That&#x27;s not being up-front with people. A game-engine that breaks quarterly absolutely isn&#x27;t ready to be versioned with a major-version. As I said in response to your first post, a \"0.x\" versioning system *is* being up-front with people.If instead of suggesting: \"can you switch to a 1.0 major version that you increment quarterly\", you&#x27;re instead suggesting: \"can you stabilize the API and not release breaking changes quarterly\" I think those are two entirely different requests. Your first post made the former request, which is what I was responding to. reply alice-i-cecile 13 hours agorootparentprevWe&#x27;ve discussed this pretty recently on GitHub [0].I&#x27;m personally in favor of shipping 1.0 within the next year or so. The most interesting part of that to me is figuring out how to decouple the crates without creating major confusion, in order to reduce trivial plugin churn.For the most part, this is just marketing and semantics, but Bevy is nearly ready for commercial users and we should start communicating that. Quite a few brave users are already building production games (and non-games), and feedback is generally very good! [1][0]: https:&#x2F;&#x2F;github.com&#x2F;bevyengine&#x2F;bevy&#x2F;discussions&#x2F;9789 [1]: https:&#x2F;&#x2F;github.com&#x2F;Vrixyz&#x2F;bevy_awesome_prod reply epage 10 hours agorootparentI&#x27;m hoping public&#x2F;private dependencies RFC will help some. One idea we have for a follow up is to declare that you should get the version req for one crate from another. reply devit 13 hours agoprevThe article claims that deferred rendering doesn&#x27;t support MSAA, but this is only true for a naive implementation.You can, for example, generate a stencil mask of complex pixels in the prepass and use hierarchical early stencil reject to run a per-sample pass for complex pixels and a per-pixel pass for non-complex pixels (with imperfect SIMD lane utilization).You can also use a pass to process the complex pixels mask and collect a buffer of (x, y, sample) coordinates to allow a later single hybrid per-pixel&#x2F;per-sample compute shader pass with perfect SIMD lane utilization. reply _cart 12 hours agoparentNoted! reply SeanAnderson 10 hours agoprevI&#x27;ve been building a game in Bevy for a while now. Feel free to browse code or ask questions:https:&#x2F;&#x2F;ant.care&#x2F;https:&#x2F;&#x2F;github.com&#x2F;MeoMix&#x2F;symbiantsFor me, some pain points so far have been:- UI system was too verbose to comfortably build widgets. Swapped to using egui, but expect to go back to native Bevy within a year. egui has significant limitations, too.- Parent&#x2F;Child relationships don&#x27;t have a ton of support (ECS sort-of discourages).- It was tougher than expected to associate a label with a sprite, move&#x2F;rotate the sprite, and keep the label following position without following rotation.- Persisting entities across sessions isn&#x27;t supported out of the box (Entity is intended for client-side uniqueness) and easily regenerating persisted parent&#x2F;child relationships doesn&#x27;t happen automatically.- No support for WASM parallelism yet, but a lot of Bevy architecture design wants system ordering to be flexible to squeeze perf benefits by parallelizing the work.- Spatial querying feels like it pushes against the goals of ECS. Wanting to look stuff up by value (value of Position) rather than type (entity has Position) results in lots of secondary caches that need to stay sync&#x27;ed with query engine.- Mutating world via `commands` is deferred to batch for perf, but it&#x27;s hard to have systems which aggressively mutate the world with so many deferred actions. I end up calling `apply_deferred` a lot and using custom commands to resolve races.- WASM on Android (Pixel 6) + Chrome doesn&#x27;t work at the moment, but it&#x27;s a down-stream dependency issue. Should be fixed in Bevy 13.Pros have been:- Very nice to work in Rust engine + Rust game.- Rust + WASM has been good, don&#x27;t feel like this aspect of the tech gets in the way much- Once you get your brain thinking ECS it&#x27;s tough to go back, feels very flexible (maybe too flexible)- Very lively community, usually easy to find someone to talk to about a problem you&#x27;re having- Lots of examples (not a lot of docs, but a lot of examples)- Lot of optimism about the future. Very strong development pace, each release makes significant headway on concerns. reply thih9 3 hours agoparentHeads up, ant.care doesn’t work on my iPhone, tested both in safari and Firefox. The website reloads after a while in an endless loop. reply tasubotadas 11 hours agoprev>Bevy is a refreshingly simple data-driven game engine built in RustAll frameworks set out to be simple, clean, and fast implementations of something more established but they lack more fancy bells and whistles. Then as they catch up in features, they became the same complex beasts and the cycle repeats. reply _cart 11 hours agoparentThis is a reasonable \"broad strokes\" view of the lifecycle of a software project. But it could be applied to literally any claim about software simplicity &#x2F; ease-of-use, so I don&#x27;t find it to be a particularly helpful critique. The takeaway appears to be \"all easy-to-use software that adds features is doomed\", which seems a bit dramatic.Do you have specific ideas (or concerns) about how Bevy is architected (or how it adds new features)? We&#x27;re doing our best to avoid this fate. reply jms55 3 hours agoparentprevI don&#x27;t disagree, but Bevy has something going for it that most other frameworks don&#x27;t - modularity. Not just in concept, but something that&#x27;s proven to actually work out well in practice.Tiny glade is a game that uses bevy_ecs, but doesn&#x27;t use bevy&#x27;s rendering crates at all. Personally I have several WIP PRs that implement alternative rendering paths (raytracing, GPU-driven meshlet + visibility buffer rendering) and nothing internal to Bevy really changes. For users, again nothing really changes, they just add a FeatureFooPlugin to their app and then use FooComponent or whatever and it all works.While individual crates&#x2F;plugins might get bloated, Bevy as a whole will be fine. Users can choose to ignore those plugins, and use something else that works better for them.I would also like to point out that this is a game engine - by definition, they&#x27;re bloated and complex beasts, and absorb every feature under the sun because _someone_ will have a use case for some kind of game. The key is how the feature bloat affects ergonomics. It&#x27;s totally fine to have 1000 features, as long as you don&#x27;t _need_ to interact with most of them unless you want to. reply liquidise 13 hours agoprevFantastic release notes.Perhaps some of this is too introductory for seasoned game&#x2F;engine developers, but as someone who doesn&#x27;t live in those worlds regularly i found this struck an excellent balance between discussing changes and explaining topics in a consumable way. Bravo! reply random_ 13 hours agoprevVery cool!! On the last update 0.10 -> 0.11, I had to make quite a few changes on my app, but this time it compiled out of the box! reply dcsommer 11 hours agoprevAmazing progress. Any updates on UI overhaul or planned timeline for it? I&#x27;m looking to make Bevy my go-to for GUI as well as for games (sometimes the line is blurred). reply plopz 12 hours agoprevI was looking at the web examples and saw the ui section which seems to all be done inside the canvas. Is it possible to do the ui in the dom instead and hook it up to the wasm? reply _cart 12 hours agoparentYup I&#x27;ve seen this done before! You need to build a way to pass information to&#x2F;from the UI to Bevy. Plenty of ways to do this, both from the Rust (wasm) side (ex: web_sys) or the Javascript side (invoking wasm functions) reply tpl 10 hours agoprevBevy is a lot of fun to play with and least the versions I toyed around with had pretty good docs too. reply dist-epoch 11 hours agoprev [–] I saw a joke that there are 5 games written in Rust, and 50 game engines.Is there a list of actual games written in Bevy? reply _cart 11 hours agoparent [–] Plenty!Tiny Glade (https:&#x2F;&#x2F;pouncelight.games&#x2F;tiny-glade) Super popular ... lots of social media presence. Uses Bevy ECS &#x2F; Bevy App + a custom renderer. https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;2198150&#x2F;Tiny_Glade&#x2F;tunnet (https:&#x2F;&#x2F;puzzled-squid.itch.io&#x2F;tunnet)Noumenal (https:&#x2F;&#x2F;noumenal.app&#x2F;) Foresight Mining (https:&#x2F;&#x2F;www.foresightmining.com&#x2F;) Mining \"CAD\" software. Employs a number of Bevy devsAxie Infinity: Homeland (https:&#x2F;&#x2F;app.axieinfinity.com&#x2F;games&#x2F;homeland-alpha&#x2F;). Uses Bevy ECS + Unity Shifting Chamber (https:&#x2F;&#x2F;maciekglowka.itch.io&#x2F;shifting-chamber)Hytopia (https:&#x2F;&#x2F;hytopia.com&#x2F;)Titleless Comfy City Builder (https:&#x2F;&#x2F;twitter.com&#x2F;i_am_feenster&#x2F;status&#x2F;1710714877231186323)Molecoole (https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1792170&#x2F;Molecoole&#x2F;)Titleless industrial revolution builder (https:&#x2F;&#x2F;twitter.com&#x2F;ElmoSampedro&#x2F;status&#x2F;1684920884811698176)Jarl Game (https:&#x2F;&#x2F;twitter.com&#x2F;jarl_game) Dwarf Fortress-like with cool dynamic lightingThe \"bevy\" tag on itch.io has hundreds of games: https:&#x2F;&#x2F;itch.io&#x2F;games&#x2F;tag-bevy Also lots of activity in the #showcase channel on the Bevy discord. reply ode 10 hours agorootparent [–] I just played Not Snake (https:&#x2F;&#x2F;ramirezmike2.itch.io&#x2F;not-snake) after finding it in the Bevy tag. It&#x27;s pretty fun. I&#x27;ll definitely check out some of the other games there.Keep up the good work. reply owenpalmer 7 hours agorootparent [–] just tried it, pretty fun game :) replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Bevy 0.12 game engine was launched featuring several updates such as Deferred Rendering, Bevy Asset V2, PCF Shadow Filtering, and Renderer Optimizations.",
      "This version introduces Rusty Shader Imports, Suspend & Resume on Android, and Automatic Batching and Instancing of Draw Commands, among other enhancements.",
      "Despite significant updates for 2D and 3D games, forward mode is suggested due to broader device compatibility. Bevy Asset V2, in its initial phase, supports functions like Asset Importing and Recursive Asset Dependency Load Events."
    ],
    "commentSummary": [
      "Bevy 0.12, a new version of Bevy game engine, featuring updates like Deferred Rendering, Bevy Asset V2, PCF Shadow Filtering, StandardMaterial Light Transmission, and Renderer Optimizations.",
      "Additional features include new effects, improved support for asset configuration, enhanced shadow quality, better material simulation, Rusty Shader Imports, Suspend, Resume on Android, and Automatic Batching and Instancing of Draw Commands.",
      "While updates cater to both 2D and 3D games, forward mode is recommended for its widespread device compatibility. Bevy Asset V2, although in the initial stages, supports Asset Importing and Recursive Asset Dependency Load Events."
    ],
    "points": 305,
    "commentCount": 69,
    "retryCount": 0,
    "time": 1699126785
  },
  {
    "id": 38143180,
    "title": "Improving Patient Control: The Advantages of Free Software in Medical Devices Over Proprietary Versions",
    "originLink": "https://www.fsf.org/blogs/community/software-that-supports-your-body-should-always-respect-your-freedom",
    "originBody": "Log in Help! Members forum about campaigns licensing membership resources community donate shop search Community › Software that supports your body should always respect your freedom by Miriam Bastian — Published on Nov 03, 2023 01:05 PM Software that controls your body should always respect your freedom. This article is a recap of scandals of medical devices, like hearing aids, insulin pumps, bionic eyes, and pacemakers, and what we can learn from them. It's astonishing: you wouldn't expect these devices to be run by software in such a way that they can leave you completely helpless. In July, users of the proprietary software app LibreLink, who live in the UK and use Apple devices, found that the app they depend on to monitor their blood sugar was not working anymore after the developer Abbott pushed an updated for the app. Monitoring glucose levels helps people with diabetes to see when their glucose level is too low or too high, which is a critical part of treatment. \"This equipment is supposed to save your life,\" David Burchell, who has type 1 diabetes, told the BBC. \"And basically it broke, just showing a white screen, and I had a panic. ... I was left without an active test, other than the fingerprint testing. Pricking your finger a hundred times a week is a nightmare.\" Burchell deleted the app and tried to reinstall it to fix the problem but said, \"when trying to redownload it, they'd taken it off the app store so I couldn't download it [again].\" Despite what its name may suggest, there is nothing libre about the LibreLink app. It's proprietary software, which means users must depend on the company to keep it running and to distribute it. With free software, Burchell would have had the freedom to run, copy, distribute, study, change, and improve the software himself, or he could have leaned on a community of developers and users to share and fix the software, and the old version of the software would have been available to revert the update. Two months later, with Apple's update to iOS 17, users of the FreeStyle LibreLink and Libre 2 apps had reason again to fear that the software they rely on wouldn't work after updating their iPhones. This time, users all over the world were affected. In September, Abbott warned Apple users: \"As part of the upcoming iOS 17 release, Apple is introducing StandBy Mode and Assistive Access Mode ... this release may impact your experience with the FreeStyle Libre 2 app, the FreeStyle LibreLink app, or the FreeStyle LibreLinkUp app. We recommend that you disable automatic operating system updates on the smartphone using the mentioned apps.\" This warning was made because StandBy Mode would sometimes prohibit time-sensitive notifications such as glucose alarms, and the Assistive Access Mode would impact sensor activation and alarm setting modification in the app. It wasn't the first time, unfortunately, that an iOS update has left users of medical aids to their own devices. After updating their iPhones to iOS 15.4 in the spring of 2022, some users of hearing aids that connect to their phone via Bluetooth experienced problems pairing their hearing aids to the app on their phone. A user who goes by the pseudonym Bushness, for example, had the bass and treble sliders of the Resound brand hearing aid randomly bouncing up and down after updating the phone to iOS 15.4. Bushness discussed the issue with both Resound and Apple. The user tried various trouble shooting techniques but could not solve the issue. At some point, Bushness turned to the Apple forum for help, but nobody could recommend anything the person had not tried already. Bushness writes, \"Somehow I hoped maybe the community had found something everyone else had missed.\" If Resound had instead chosen to free their software, however, then this would probably have been the case. But with proprietary software, nobody outside of the companies can look into the code and determine what's wrong. Proprietary software leaves the community powerless. \"It is only in the last few years that we have seen firmware updates pushed out to hearing aids. At this stage, many of the hearing aid brands provide occasional software updates to their hearing aids. It appears to primarily happen with Bluetooth hearing aids, the so-called 'Made For iPhone' hearing devices. The hearing aid brands don't necessarily tell us what the updates actually consist of, but they appear to be pushed out around the time that there are changes to iPhone operating systems. I would imagine that there probably is a direct relationship. ... Every time Apple changes its iPhones, there are connection issues with hearing aids,\" writes hearing aid blogger Goeffrey Cooling. Resound eventually solved the issue Bushness and others were experiencing after the iOS 15.4 update. But it took weeks, and that illustrates how much users are at the mercy of the manufacturers when the hardware they need to go through daily life requires proprietary software in order to function. What would happen if any of the Bluetooth hearing aids manufacturers decided not to provide updates for models of which the warranty expired? Well, if the software on these hearing aids were free (as in freedom), then the free software community could help keep it updated. But owners of medical aids that run proprietary software may be disappointed to find out that they must throw their devices away and buy a new pair, even if the hardware is otherwise still working well. And a scenario where a company abandons service or updates to its users is not merely theoretical. This is the bitter reality faced by users of eye implants produced by Second Sight Medical Products since the company decided to abandon the technology in 2020 when facing the prospect of bankruptcy. Terry Byland, whose sight has been dependent on the first-generation Argus implant since 2004, says of his experience, \"As long as nothing goes wrong, I'm fine. But if something does go wrong with it, well, I'm screwed. Because there's no way of getting it fixed.\" That's what also happened to Barbara Campbell, whose retinal implant suddenly stopped working when she was on a subway. This horrifying fate does not need to be a given for people like Terry and Barbara. If medical aid companies distributing software decided to release the software's source code under a free license such as the GNU General Public License v3.0 or later, then third party developers could help those people, but they haven't. It seems that, when the going gets tough, they'd rather leave their customers helpless. Medical aids that run proprietary software not only leave you at the mercy of the companies when it comes to bugs and updates, but also when it comes to cybersecurity. Some governments are trying to fix safety problems with medical devices that run proprietary software by issuing laws like the PATCH Act, which requires manufacturers applying for approval for their devices with the US Food and Drug Administration \"to demonstrate a reasonable assurance of safety and effectiveness throughout the lifecycle of the cyber device.\" The goal is to prevent scandals like those that happened in 2019 and 2021, when it turned out that pacemakers and insulin pumps made by Medtronic had vulnerabilities that exposed them to attacks. One of the major problems with proprietary software is that you have to trust the manufacturer to detect, communicate, and fix bugs like these. Legislation won't cure this shortcoming. With free software, you will most probably find someone who will try to crack the device and detect any vulnerability. Free software in medical aids helps the patient, the environment, and the healthcare system. After all, the software in hearing aids, insulin pumps and pacemakers controls parts of our body. We should be allowed to control it. Software in medical aids has to respect our freedom! Free software can make the medical device last longer. The free software community can fix bugs and provide updates so that patients are not left at the mercy of the companies. Then, patients can choose to repair their device instead of throwing it away. Last but not least, long-time support can save the healthcare system and its patients lots of money. Luckily, there is free software for hearing devices, such as the software developed by the Tympan project. The Open Community Platform for Hearing Aid Algorithm Research project, funded by the US National Institutes of Health, even developed a platform for real-time audio signal processing called openMHA, licensed under GNU Affero General Public License v3.0, to improve assistive hearing systems. Other medical aids, like an insulin pump, can also be run with free software thanks to projects like OpenAPS. Unfortunately, there is still a lack of free software for pacemakers. This area offers an opportunity for the free software community to contribute. Take action! It's up to us advocates of free software to inform the people around us of the issues with proprietary software in medical aids. Let's encourage our friends, parents, and grandparents to ask their doctor about the software in their medical devices and to choose and insist upon free software over proprietary software. You could start by sharing this article with the people who are near and dear to you. Share your story We understand that medical aids could be a sensitive topic, but if you would still like to share your story we invite you to email us at campaigns@fsf.org and share the following with us: why you use a medical aid with free software; your frustration with medical aids that run proprietary software; and/or how free software medical aids should improve to make your life easier. Please specify in your email whether we may publish parts of your story, which we can do anonymously if you choose. And if you don't mind talking about your experience with medical aids openly submit a session for LibrePlanet 2024. Document Actions Share on social networks Syndicate: News Events Blogs Jobs GNU Call for sessions: LibrePlanet 2024 Call for Sessionsextended. Submissions are being accepted through November 17, 12:00 EDT (16:00 UTC). FSF community blog Licensing Compliance Lab blog Associate Membership blog System Administrator's blog Free Software Directory blog GNU Press blog Sign up Enter your email address to receive our monthly newsletter, the Free Software Supporter News LibrePlanet 2024: \"Cultivating Community\" will feature a keynote by David Wilson Oct 10, 2023 The third round of FSF board candidate discussions has begun Oct 03, 2023 FSF celebrates forty years of GNU with a hackday for families, hackers, and hackers-to-be Sep 27, 2023 More news… Recent blogs Software that supports your body should always respect your freedom October GNU Spotlight with Amin Bandali: Eleven new GNU releases! Call for Sessions extended until November 17 Register to be part of LibrePlanet 2024: Cultivating Community Recent blogs - More… The FSF is a charity with a worldwide mission to advance software freedom — learn about our history and work. Copyright © 2004-2023 Free Software Foundation, Inc. Privacy Policy. This work is licensed under a Creative Commons Attribution-No Derivative Works 3.0 license (or later version) — Why this license? About Staff and Board Contact Us Press Information Jobs Volunteering and Internships History Privacy Policy JavaScript Licenses Hardware Database Free Software Directory Free Software Resources Copyright Infringement Notification Campaigns Freedom Ladder Fight to Repair Free JavaScript High Priority Free Software Projects Secure Boot vs Restricted Boot Surveillance Upgrade from Windows Working Together for Free Software GNU Operating System Defective by Design End Software Patents OpenDocument Free BIOS Connect with free software users Licensing Education Licenses GNU GPL GNU AGPL GNU LGPL GNU FDL Licensing FAQ Compliance How to use GNU licenses for your own software Latest News Upcoming Events FSF Blogs Donate to the FSF Join the FSF Patrons Associate Members My Account Working Together for Free Software Fund Philosophy The Free Software Definition Copyleft: Pragmatic Idealism Free Software and Free Manuals Selling Free Software Motives for Writing Free Software The Right To Read Why Open Source Misses the Point of Free Software Complete Sitemap Plone Zope Python CiviCRM HTML5 Arabic Belarussian Bulgarian Catalan Chinese Cornish Czech Danish English French German Greek Hebrew Hindi Italian Japanese Korean Norwegian Polish Portuguese Portuguese (Brazil) Romanian Russian Slovak Spanish Swedish Turkish Urdu Welsh Send your feedback on our translations and new translations of pages to campaigns@fsf.org.",
    "commentLink": "https://news.ycombinator.com/item?id=38143180",
    "commentBody": "Software that supports your body should always respect your freedomHacker NewspastloginSoftware that supports your body should always respect your freedom (fsf.org) 259 points by jlpcsl 16 hours ago| hidepastfavorite82 comments Kim_Bruning 15 hours agoSoftware that your life depends on should be required to respect the four software freedoms (run, study, copy, modify). If the four freedoms don&#x27;t apply in the context of your own bodily autonomy, where else could they be more important?(Consider the inverse: Parts of your own body are not your property but are merely licensed to you, and the license can be modified or withdrawn at the pleasure of the licensor)Legislation might be required.(edit: this would not be without precedent. Copyright and Patents are very limited when it comes to life essentials in general, such as recipes for food or designs for clothing.) reply az09mugen 11 hours agoparent2 cents : But then there should be a contract between the user who gains the ability to read&#x2F;modify the software, discharging the software company in case the user causes a bug resulting in a health problem or even worse. Or something like that I suppose. reply marc_abonce 10 hours agorootparentMost open source licenses already include that in a \"no warranty\" clause that is supposed to cover this.I don&#x27;t know anything about law, but it looks like in jurisdictions where this clause doesn&#x27;t apply, signing a separate contract wouldn&#x27;t help either: https:&#x2F;&#x2F;law.stackexchange.com&#x2F;questions&#x2F;1410&#x2F;do-warranty-dis... reply AndrewKemendo 12 hours agoparentprev> If the four freedoms don&#x27;t apply in the context of your own bodily autonomy, where else could they be more important?I’ve got bad news unfortunately. Bodily autonomy has never really been all that free in practice for the last few thousand years at least. We’re making some progress at least. reply Kim_Bruning 11 hours agorootparentReally depends which country you&#x27;re in. Even just the west is not homogeneous on this point. reply worik 12 hours agorootparentprev> Bodily autonomy has never really been all that free in practice for the last few thousand years at least. We’re making some progress at least.In the context of the repeal of Roe V Wade.... reply notjoemama 12 hours agorootparentOr the ruling in the first place… reply isbwkisbakadqv 11 hours agorootparentRight to someone else’s blood supply via placenta? reply leereeves 10 hours agorootparentThe rules are different for parents. It&#x27;s almost universally agreed that (at least once born) a child&#x27;s needs are more important than parents&#x27; freedom. replyreaperman 12 hours agoparentprev> Legislation might be requiredDefinitely required. reply bitwize 10 hours agoparentprev> (Consider the inverse: Parts of your own body are not your property but are merely licensed to you, and the license can be modified or withdrawn at the pleasure of the licensor)This has been pretty much a cyberpunk trope since Neuromancer. Nice job making the dystopia reality, capitalism. reply mbakke 15 hours agoprevGreat article. Real life horror stories of life-critical software gore, with some good news at the end.It should be illegal to sell software that someones life depends upon without giving the user the right to inspect and modify the code. reply dheera 14 hours agoparentI have an ICD (implanted cardioverter-defibrillator) to save my life if my heart stops.I was also given a proprietary box that sits at home, reads data from it and sends it to my cardiologist over a cellular network, on demand. As part of periodic remote checkups I&#x27;m supposed to sit next to it, press the button, which causes it to read data and send any abnormal heart rhythms it detected (via cellular network), whether it treated it (via a shock, in which case I would have known anyway) or whether the abnormal rhythm resolved itself with no treatment (in which case it&#x27;s worth it that they check out what it picked up). I have to do this about 2-4 times a year.Every time I hit the button I&#x27;m charged $200. Even if there are ZERO events. 90%+ of the time there are zero events.There is NO interface provided to me where I can read the data directly. There is no way for me to read the device on my own, see zero events, and inform my cardiologist that there are no events and that there is nothing new to diagnose.I hate this medical system. The device is great for saving my life but I want access to read its data without being charged. reply mtlmtlmtlmtl 13 hours agorootparentThat&#x27;s appalling and should be illegal.I wish more programmers would refuse to contribute to this kind of exploitation. reply rqtwteye 12 hours agorootparentI work in medical devices and it&#x27;s extremely hard as a dev to figure out what&#x27;s because of some regulation and what&#x27;s just for profit. reply graphe 13 hours agorootparentprevIf it was illegal he might be dead. If he refused, he could be dead. Is that a better world? reply mtlmtlmtlmtl 13 hours agorootparentNo, if it was illegal he&#x27;d have access to his data. I&#x27;m not saying medical equipment should be illegal.And to be clear, I wasn&#x27;t saying he should have refused treatment. I was saying I wish more programmers would refuse to help develop exploitative software like this. reply StableAlkyne 12 hours agorootparentIt might not have even been the programmers of the device that chose to do this. It was very likely some manager somewhere who saw the dollar signs when they realized they could collect rent. reply mtlmtlmtlmtl 12 hours agorootparentProgrammers implemented it though. And they knew exactly what they were doing, too. reply graphe 12 hours agorootparentprevI don&#x27;t think he had a choice.If you had a good doctor that liked da Vinci robotic surgery, versus another one that did raven II would that factor more than the reputation of the doctor? Programmers who make life saving software are good in my opinion, even if the company they work for wants to make money.I think we should strive for the best features, and also be grateful for \"fascist trailblazers\". Shockley was known to be an awful boss but our transistors started there and we are better off for it. Body warming methods were created by Nazi scientists experimenting unethically. These are the 2nd step, at least the profiteers show it&#x27;s doable and the drive for profit made it in the first place. reply subw00f 14 hours agorootparentprevThis is nuts. Who charges you? Is it the company that makes these devices? What if you want a different “provider”? reply dheera 14 hours agorootparentStanford Healthcare charges me for \"general classification\" just for a nurse to open up their computer and see that there are zero events.Boston Scientific, the device maker, does not have an interface for patients, they only send data to hospitals directly.I&#x27;m not currently willing to switch to a different ICD because Boston Scientific&#x27;s ICD has successfully saved my life 3&#x2F;3 times in out-of-hospital situations and 2&#x2F;2 times during in-hospital testing where they induced ventricular vibrillation in controlled testing and I&#x27;d rather not risk trying something different. Insurance wouldn&#x27;t pay for an extra surgery deemed unnecessary, anyway.I could switch healthcare providers, but I&#x27;m not sure if the others in my area are better at cardiology. reply mixmastamyk 10 hours agorootparentI see you have your hands full, but perhaps a class action lawsuit should be in order. reply tredre3 12 hours agorootparentprev> Stanford Healthcare charges me for \"general classification\" just for a nurse to open up their computer and see that there are zero events.Okay so having access to the data wouldn&#x27;t change a thing, surely you&#x27;d be charged even more if you wanted to talk directly to the cardiologist to do a report yourself, as you said?> inform my cardiologist that there are no events and that there is nothing new to diagnose reply izzydata 13 hours agorootparentprevThis is giving me feelings similar to that movie repo men where you had to rent life saving organs and they could come repossess them at any time. reply bowsamic 13 hours agorootparentprevThat is genuinely insane reply 7e 14 hours agoparentprevQuality of life critical software should be ensured by FDA certification. Homebrew modifications of that software, even in the name of “freedom”, risks the patient’s life and health and should be illegal if uncertified. reply leghifla 14 hours agorootparentIn EU (and probably elsewhere), there are strict rules for the stability of power wheelchair. One such rule is \"On a incline of x% (x chosen by the manufacturer), pushing for max speed from stop should not lift the front wheels\"To achieve that, the max acceleration must be quite low (software controlled), and the whole experience is sluggish, like trying to steer a car by pulling on rubber bands attached to the wheel.From the moment I found a way to overcome this, I never went back. I know that I can hurt myself if I do something stupid, but I prefer this hypothetical risk instead of cursing 100 times a day because I cannot move how I want. It has been 10 years and I never got hurt.I understand that such \"high\" risk device cannot be sold, but forbidding someone to change this is like inflicting a second handicap on him. reply Buttons840 13 hours agorootparentI suppose we all have, or should have, the right to try stupid things. Sometimes experience and competence are more important than 100% safety. Your comment made me realize how limiting it would be to be physically incapable of taking even the smallest risk. reply hyeonwho22 12 hours agorootparentprevThat is a very poor regulation. Why enforce wheel lift? What matters is that the chair doesn&#x27;t tip over - that the center of gravity remains in the center of the four wheels. reply schiffern 14 hours agorootparentprevnext [–]> Homebrew modifications of that software, even in the name of “freedom”, risks the patient’s life and health and should be illegal if uncertified.The official modifications of that software — in the name of \"profit\" — are currently risking the patient’s life and health, and therefore should also be illegal by your logic.Surely you must also support effective (ie harsh&#x2F;deterrent) prosecution and punishment for these crimes as well, correct? reply patmcc 13 hours agorootparent>>>should be illegal if uncertified.I think this is the key part of the comment - yes, uncertified changes by anyone could feasibly be illegal. The FDA or similar should probably do code reviews. reply Kim_Bruning 13 hours agorootparentLooking at corner cases for this:What if you fix a bug in your own pacemaker? Would it be ok to:a) Fine you?b) Jail you?c) Force you to revert the change? (plausibly leading to death in an extreme case)[edit: I do agree that there&#x27;s a chance that making a &#x27;fix&#x27; to your own pacemaker might also make it worse. In which case, who do we trust more? The person on the ground with a stake in the matter (however misinformed), or $government_official with no stake in the matter (however well informed).I think it&#x27;s tricky! ] reply Xymist 11 hours agorootparentI don&#x27;t think that scenario is particularly tricky. If you modify someone else&#x27;s pacemaker, it&#x27;s a tricky question, even with their consent. If you modify your own, absolutely nothing should stand in your way beyond a nice big notice saying \"danger of death,on your head be it\". That is, you should have the same freedom to screw with your own personal medical devices that you have to climb out of your own fourth floor window.People have a right, albeit not enshrined in law, to do stupid things that might kill them - at least as long as they don&#x27;t then ask someone else to save them. reply ketzo 13 hours agorootparentprevThis is a huge straw man&#x2F;whataboutism that contributes nothing to the discussion.Yes, bad software modifications are bad and should be punished wherever they arise.Homebrew modifications make it way easier for bad stuff to happen, and make it harder to punish. reply worik 12 hours agorootparent> bad software modifications are bad and should be punished wherever they arise.That almost never happens. Software sux. reply schiffern 7 hours agorootparentprevnext [–]> This is a huge straw man&#x2F;whataboutism that contributes nothing to the discussion.It&#x27;s a countervailing concern, not a strawman. > bad software modifications... should be punished wherever they ariseCorporations are currently unpunished (per TFA) when they alter software in a way that risks patient safety, and they have already caused documented harm to patients. This is a shocking failure of federal oversight, but the captured FDA will (by design) never fix it. Oops.In light of the real harm caused by this neverending policy failure, the Library of Congress is morally and ethically obligated to permit fair use exemption. Individuals and homebrew communities must be unshackled to protect patients from the real (not hypothetical!), documented, and widespread harm caused by corporate-sponsored attacks on US medical infrastructure.No, that&#x27;s not an exaggeration.Given the current anti-patient landscape, the protections of open source far outweigh any risk. reply Kim_Bruning 14 hours agorootparentprevI think this might be a cultural thing.In some (western) countries, your body is your personal private property, and you have the freedom and ultimate authority over how to use and abuse it, or anything on or in it. (you are still advised to treat your most precious property wisely, obviously)In other (western) countries&#x2F;subcommunities people feel that obligations to your community are stronger.People from these different cultures can get into some pretty hefty discussions when it comes to things like abortion, drugs, euthansia, or -here- implants. reply eikenberry 14 hours agorootparentprevSo like suicide, drugs and other and other cases where we are denied dominion over ourselves for our own good? IE. Your life and body are not yours, they belong to society and you only get limited access. reply chpatrick 14 hours agorootparentSociety doesn&#x27;t have to give you the rope to hang yourself. reply eikenberry 13 hours agorootparentI disagree or rather yes, it does have the responsibility to provide you a rope. It is up to you whether you hang yourself or not. reply chpatrick 10 hours agorootparentI disagree, I think if you walk into a pharmacy and ask for something dangerous without a prescription they shouldn&#x27;t be obligated to give it to you. It&#x27;s the same with medical equipment that keeps you alive.If you want to risk your life you can do it but no one should be compelled to help you. reply worik 12 hours agorootparentprevYou are taking the position that an individual \"owns\" themselvesThat is not obviously true.I feel I belong to my family and my community. reply Xymist 11 hours agorootparentYour position is not universal, and in fact strongly opposed by many. I believe that I have the absolute right to edit or terminate my own existence, either on purpose or accidentally. To the extent that anyone can own a person, people own themselves exclusively. replymtlmtlmtlmtl 13 hours agorootparentprevSurely the patient should have the right to risk their own life? reply zarzavat 14 hours agorootparentprevSerious question, what does the FDA know about software quality? reply alistairSH 14 hours agorootparentSurely not less than the average consumer.And surely they could hire experts to do the job. reply hn_acker 13 hours agorootparent1. Compared to the average person in the FDA&#x27;s population of people who are in charge of evaluating the medical devices, the average person in the population of people who would make fixes and helpful modifications might have more expertise in determining the quality of the device&#x27;s normal software.2. It&#x27;s not as if the people who depend on the medical devices have to take the word of the community of people who will mod the devices over the word of the FDA. reply KevinGlass 11 hours agorootparentprevSafetism is a great curse on the world. I cannot disagree with you more. reply hobs 14 hours agorootparentprevTo distribute? Sure. To make changes to your out of support cyber-eyeball? Nah. reply throwawaysleep 14 hours agoparentprevSo you would prefer it not be developed? reply BobaFloutist 14 hours agorootparentThe software is clearly not the primary product. While there might need to be a carve out or a specific licensing scheme developed to protect them from liability in the case of modified software, I doubt these companies would experience serious financial setbacks if they made their software free and open.And don&#x27;t tell me that SaaS is an integral part of the business model for medical device companies. There&#x27;s no world in which they can&#x27;t figure out how to turn a profit without charging a monthly fee to use your tens of thousands of dollars eyeball. reply oconnor663 11 hours agorootparent> The software is clearly not the primary product.Sure, in this case. But that means that the rule we&#x27;re considering actually needs a big asterisk next to it, something like \"when the software in question isn&#x27;t the primary product.\" That sounds like a thorny regulatory question, and any answer to that question other than \"I know it when I see it\" probably has big loopholes. This might be unnecessary nitpicking on my part if we&#x27;re just shooting the breeze about companies we don&#x27;t like, but if we&#x27;re actually interested in writing laws, this is a common failure mode. Maybe _the_ common failure mode.On the other hand, \"so you would prefer it not be developed\" is a less-than-entirely-charitable way of making this point. Of course @mbakke would _not_ prefer that, and it might avoid an unnecessary round of back-and-forth to make a reasonable guess about what they would prefer and work from there :) reply hcks 12 hours agorootparentprevThis is being downvoted yet there’s a reason why this types of treatments always starts being developed to serve the US market initially reply dmytroi 13 hours agoprev100% agree for \"read only\" software, like scanning, diagnostics, etc.Control software is much more involved topic, let me illustrate it with a scenario: one family member is non-techy but has an insulin pump, another family member is techy and likes to hack around, they made a change to the insulin pump software to \"improve it\", but by accident the change triggered insulin overdose at night during sleep and family member died. We have rules and regulations not just to have rules and regulations, we have rules and regulations because they are written in blood.While advocating for ability to freely modifying any life dependant control software is a noble goal, in my opinion it&#x27;s the wrong end to approach it, instead it would be more constructive if we as computer science industry figure out ways how to make software such as we don&#x27;t kill people, how to \"certify\" it in self service fashion (validation passed == no-one will die), etc, it&#x27;s no trivial and it feels this particular part of our industry is not as developed&#x2F;main stream as compared to something like civil engineering. If we have easy ways to ensure that modifying software will not lead to death then it will be easier to change the legislation to enforce this freedom. reply Kim_Bruning 12 hours agoparentSoftware continues to \"eat the world\".Given that, having medical software be FLOSS certainly seems like it&#x27;s a necessary step. Whether that alone is also sufficient is something that might warrant further debate.Eg. in the opposing quadrant: maybe the insulin pump has a bug, but the new fix doesn&#x27;t get certified in time and now the family member dies while their kin stands by whilst wringing their hands. This bears balancing.I think -partially- this would fall under a patient&#x27;s right[1] to choose an alternative treatment option, when presented with the pros and cons. A patient should be allowed to take considered risks.[1] https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Patients&#x27;_rights reply cbrugs 13 hours agoparentprevI agree with it being the wrong way to go about it- I think the article fails to recognize that relying on the software being free isn&#x27;t a solid enough certification of the software being appropriately safe to control a person&#x27;s health. There has to be some other safeguard put in place- I&#x27;m not sure if it&#x27;s legislation, but allowing a software update to break an app used by the elderly is unacceptable. reply KennyBlanken 12 hours agoparentprevIn your scenario, there&#x27;s protection at a societal level: manslaughter&#x2F;homicide law.Obviously their intent, the jurisdiction, their training&#x2F;knowledge, and what sort of changes they attempted would matter in terms of how they were charged, prosecuted, etc.If the device manufacturer updates software and injures or kills someone, they&#x27;re liable on a criminal and&#x2F;or civil level.Before anyone starts rambling about how \"they&#x27;ll just calculate out their liability vs cost of proper software engineering blah blah\"...in a civil lawsuit, at least in the US, the punitive portion of damages is for the express purpose of penalizing the defendant for shitty behavior, beyond actual damages, to discourage them and others from doing such a thing again.McDonalds was slammed hard in the infamous coffee-scald case with a huge punitive portion. Before suing, the victim asked merely for medical expenses - nothing for the (enormous) pain and suffering from her genital burns. McDonalds told her to fuck off.The jury was (to put it mildly) enraged on a number of counts: McD&#x27;s knew their coffee was served well above industry standard temperatures, knew they&#x27;d injured people, and refused a reasonable request for damages. reply politelemon 13 hours agoprevA lot of this does make sense, and I think there&#x27;s still ought to be more in the messaging. The medical data as well needs to be analogously free, or rather, wholly private to the individual. No organization should be the arbiters of our medical information.But the sad news is, we carry around with us portable surveillance circlets which have the ability to access our medical conditions. We give it information voluntarily, and through occasional advertorials, this practice is becoming more normalized and accepted. I&#x27;m not convinced that the convenience outweighs the trouble this is going to bring. reply analogj 12 hours agoparentI&#x27;m actually working on an open-source Personal Health Record (PHR) app called Fasten Health - https:&#x2F;&#x2F;github.com&#x2F;fastenhealth&#x2F;fasten-onpremIt allows patients to pull their complete medical history from their various healthcare institutions, and store it locally without having to worry about some corporation monetizing and data-mining their health record reply account-5 15 hours agoprevGod forbid I ever need to rely on software to live. But if I do you can guarantee I won&#x27;t have anything connected to the internet that I need a smartphone to use! reply Kim_Bruning 15 hours agoparentAt that point you may have no choice if you want to live. reply Hackbraten 14 hours agorootparentIf I&#x27;m ever going to find myself at a point where my body needs software to survive, then you bet that I&#x27;m going to hire someone to liberate it for me.If I can&#x27;t find anyone willing to take the risk, I&#x27;d take a shot in reverse engineering the thing myself. reply mtlmtlmtlmtl 13 hours agorootparentprevThen I&#x27;ll let myself die as a protest.I realise that&#x27;s not a normal or even reasonable response to the predicament, but I&#x27;ll never have kids and I&#x27;ve never been very attached to my life anyway. reply wolverine876 13 hours agoparentprevI think you mean software controlling medical devices, but you do rely on software to live when you drive, ride a plane, cross the street (crosswalk lights), when the train with poisonous whatever rolls through town, etc. reply thfuran 13 hours agoprev>Two months later, with Apple&#x27;s update to iOS 17, users of the FreeStyle LibreLink and Libre 2 apps had reason again to fear that the software they rely on wouldn&#x27;t work after updating their iPhonesApple is well known to operate with a near total disregard for the stability of third party software. I wouldn&#x27;t go so far as saying that anyone who puts Apple in their tech stack for something safety critical and then blithely upgrades gets what they deserve when it breaks, but it&#x27;s a damn fool thing to do, especially if they&#x27;ve already personally run into problems as a result before. reply averageRoyalty 10 hours agoprevI find it crazy that anybody would entrust the primary interface with critical medical devices to be a smartphone.Surely you opt into buying a non-smartphone version? They&#x27;re not stable enough and will never be. reply vGPU 15 hours agoprev> users of the proprietary software app LibreLinkBit of a misnomer. reply FireBeyond 12 hours agoparentI think the FSF&#x27;s argument over medical software is quite sound, but this point was a little pouty for my liking.The whole world doesn&#x27;t revolve around the FSF&#x27;s definitions of free&#x2F;open&#x2F;libre, and LibreLink is related to the FreeStyle Libre devices, that aim (marketing) at being something \"so you can get back to the things that matter most\". reply layer8 14 hours agoparentprevOpenAI reply throwaway128128 14 hours agoparentprevIt keeps happening. From the very beginning \"free\" software has been plagued with overloaded language. reply Hackbraten 14 hours agoparentprevWhy? The vendor is free to do whatever it wants with it, right? &#x2F;s reply Projectiboga 10 hours agoprevAbott is sketchy w their Freestyle Libre blood sugar sensors. They only allow them to pair w a single device. This summer I had their external device die and I had to get a third party app to read the data from the still functioning sensor. I refuse to use their official app as it can&#x27;t be silenced. Dexcom was worse both their app and the external reader had an insane fixed \"sensor will expire in 6 hours\", no way to mute, adjust, this thing was going off at whatever hour of the night it wanted. I lived fine being insulin dependent for 40 years, and the ease and extra data like an overnight graph are all great. Making noise can and should be default, but I should be able to silence it and I&#x27;d click an absolution of liability, these things have to fit into life not the other way around. reply kornhole 4 hours agoprevFuture HN Thread:To get my UBI payments in CBDC, I was required to have a chip inserted in my hand. Little did I know that this chip also was scanned and read every time I stepped into a vehicle and from beacons all over town. How can I get this out and still get my money to live? reply petabytes 11 hours agoprevThe app needs to be reversed engineered and have a 3rd party reimplemention. Even if it&#x27;s slightly inferior, it&#x27;s always good to have an alternative. reply advael 11 hours agoprevThere is no way to fix this without law changes. The best would be killing DMCA 1201 entirely, if not the whole DMCA reply akokanka 14 hours agoprevWe are heading to worst possible cyberpunk future. reply alex7734 13 hours agoparent\"Please watch this 20 minute ad to continue using your EvilCorp Eye Replacement\" reply autoexec 13 hours agorootparent\"As part of our promotion, your blood sugar will continue to rise until you complete a purchase of one of our sponsor&#x27;s products.\" reply bowsamic 13 hours agoprevI don&#x27;t have anything else to add to this other than: how absolutely horrible. reply graphe 13 hours agoprev [–] I don&#x27;t understand what freedom stands for anymore. I don&#x27;t trust the FSF after they started grandstanding on topics that made no sense.Apple making an update that breaks apps isn&#x27;t the fault of the app developers, or the app. The measures they suggested are completely useless if nobody wants to update or make a gpl 3 or even a horrible gpl 2 app. Suppose they do, they&#x27;re supposed to pay the apple fee every year and \"sell\" it for free?I&#x27;m not sure what the article wants besides bad press for companies that went bankrupt? reply nulld3v 12 hours agoparent [–] You know you can still sell a piece of software even if it is open source? Especially on iOS, you can&#x27;t get software onto your phone unless it is published on the app store so just like you said, whoever is paying that publishing fee is going to charge users to install the app.Or you don&#x27;t even have to sell the software at all. If I had a piece of software that I needed to live, if it was OSS at least I could pay a dev to maintain it so I don&#x27;t die... replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The article critiques the disadvantages of proprietary software in medical devices, indicating the minimal control users have, leading to potential device malfunctions after updates.",
      "It proposes that if these devices ran on free software, users could make necessary alterations and rely on a developer community for timely bug solutions.",
      "The piece implores patients to question the type of software used in their medical aids and to favor free software over proprietary forms for enhanced control and reliability."
    ],
    "commentSummary": [
      "This article emphasizes the shortcomings of proprietary software in medical devices highlighting vulnerabilities due to uncontrollable software updates that may cause malfunctioning.",
      "It suggests that free software would empower users to make modifications and rely on a developer community for bug fixes, creating a more reliable and controllable system.",
      "The showcased solution encourages patients to investigate the software utilized in their medical devices and opt for free software instead of proprietary ones for better control and accountability."
    ],
    "points": 259,
    "commentCount": 82,
    "retryCount": 0,
    "time": 1699118819
  },
  {
    "id": 38139687,
    "title": "Vintage Trimble GPS Receiver from 1993 Sparks Interest on Mastodon Network",
    "originLink": "https://mastodon.sdf.org/@keelan/111349948124943603",
    "originBody": "mastodon.sdf.org is part of the decentralized social network powered by Mastodon. \"I appreciate SDF but it's a general-purpose server and the name doesn't make it obvious that it's about art.\" - Eugen Rochko ADMINISTERED BY: SDF.ORG @SDF SERVER STATS: 6K active users Learn more mastodon.sdf.org: About · Profiles directory · Privacy policy Mastodon: About · Get the app · Keyboard shortcuts · View source code · v4.1.10 Back Keelan @keelan@mastodon.sdf.org What is this? This is a GPS receiver made by Trimble, one of the biggest GPS companies. Why is it shaped like an ambulance? Good question. This is a 6 channel GPS receiver from 1993, which was relatively early for consumer GPS tech. On the back is a Motorola 68HC000 and 64k of RAM. Look it even has a little red light on top. And a silk screened steering wheel. Nov 03, 2023, 22:36 · · Mastodon for iOS · 305 · 472 1d Tom @tom @keelan Beautiful. I’d hang that on the wall. 1 1d Keelan @keelan @tom I’ve figured out what module it was based on, and I happen to have the documentation for that module. There’s an 8 pin header on the PCB that I can to connect power to, and there’s a serial port on there too. I think I want to make a shadow box for it, with a LED or LCD display showing the current time and location. 1 18h Tom @tom @keelan Was there an enclosure for it? 1 13h Keelan @keelan @tom I don’t know, I can’t find any more information about it. 0 1d wingfire @wingfire@social.cologne @keelan Nice PCB Design! 0 1d Piiieps & Brummm @PiiiepsBrummm@chaos.social @keelan Do you know, if it was intended for the use in ambulances? 1 23h Alaric Snell-Pym @kitten_tech@fosstodon.org @PiiiepsBrummm @keelan I mean, all the PCBs in the Apollo guidance computer are shaped like Buck Rogers rockets, so this would make sense 0 1d Markus Feilner @mfeilner@mastodon.cloud @keelan @chillicampari 0 22h millennial falcon @falcennial@mastodon.social @keelan I also like the front bumper-mounted flamethrower 0 21h AlexanderVI @AlexanderVI@stranger.social @keelan bygone days of hardware whimsy 0 21h xs4me2 @xs4me2@mastodon.social @keelan Very creative... ;) 0 21h Martin @micron@mastodon.social @keelan This is a PCB in a CNC controller sold in 1989 by german machine builder Schmoll. The machine this belonged to cost probably 300-400k Euros in todays money. PCB designers had definitely more fun back then. 0 19h Patrick Coyle @Pjcoyle@qoto.org @keelan And it looks like it has a cannon for clearing traffic.... 0 19h Number6 @number6@fosstodon.org @keelan I always think of Trimble as \"that company that bought SketchUp\". 0 17h Claudia Fischer @ClaudiaFischer@digitalcourage.social @keelan May be this was supposed to go into ambulance cars? They might have been early with going for GPS. 1 14h Keelan @keelan @ClaudiaFischer I suspect it was made to promote the idea to ambulance manufacturers. This module has almost all the same components and PCB layout as a Trimble SVeeSix module. 0 17h micheal65536 @micheal65536@mastodon.test.micheal65536.duckdns.org @keelan Shaped like an ambulance for the \"emergency rescue\" pun, I assume. In an emergency it will rescue you by telling you where you are (this dates from the days when GPS was used for important stuff like navigation without maps or in harsh environments rather than telling you which restaurants on the opposite side of the street are open). 1 13h Keelan @keelan @micheal65536 this makes a lot of sense. Maybe they were promoting the idea that with a GPS you’re never lost. Also what’s up with your mastodon host name?! 0 5h Gareth Kitchen @gruff@stroud.social @keelan I think @revk may appreciate this. :) 0 2h Cuprohastes @Cuprohastes@dragonchat.org @keelan @cstross and “emergency rescue” on the right, leading to the supposition that the engineers were having fun 0 Explore Local Federated Sign in to follow profiles or hashtags, favourite, share and reply to posts, or interact from your account on a different server. Sign in Create account",
    "commentLink": "https://news.ycombinator.com/item?id=38139687",
    "commentBody": "A 6 channel GPS receiver from 1993Hacker NewspastloginA 6 channel GPS receiver from 1993 (mastodon.sdf.org) 221 points by edent 23 hours ago| hidepastfavorite68 comments TedDoesntTalk 19 hours agoThe original GPS receivers in the late 80s and early 90s did not have maps. And they used LCD screens. The one I owned by Lowrance required 6 AA batteries. Not AAA. Not rechargeable. Optional power through a cigarette-auto cable, but that&#x27;s not helpful when on foot. It burned through batteries like crazy.I owned this one: https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20231104153749&#x2F;http:&#x2F;&#x2F;retro-gps.... (Lowrance GlobalNav Sport) 160 x 160 pixel display. It weighed 2 pounds with batteries.It provided latitude, longitude, and heading.Thought I would use it hiking but it was just too big to be anything but a toy. You inserted a cartridge, specific to your geographic area, if you wanted it to display names of towns&#x2F;cities (data on the cartridges):https:&#x2F;&#x2F;www.ebay.com&#x2F;itm&#x2F;314936082464It did have \"waypoints\" (lat&#x2F;long bookmarks, essentially) that allowed you to plot a line as you traveled. It could tell you how far you were to different waypoints you&#x27;d previously entered. IIRC, it had a serial connection for waypoint download to a PC. People tried sharing waypoint series -- \"routes\" -- but it just never really had much success as I recall. It was just too cumbersome. reply saltcured 12 hours agoparentThe first \"portable\" GPS receiver I ever saw was during a tour of a relative&#x27;s military base in the mid to late 1980s.It was mounted in a travel case where the lid removed exposed the control panel. I want to say it was about the size of a shoe box. Similar in length and height to one of those hinged metal ammunition cans, but wider if I remember correctly. It seemed hefty enough to have a lead-acid battery inside, but they did not give details.You set it on the ground and waited minutes for a fix. Then it just displayed numeric grid coordinates of your location with segmented digit display cells somewhat like a 1970s calculator. reply lm411 16 hours agoparentprevThat Lowrance is a monster. Pretty cool though.My first GPS receiver was an old Magellan. I can&#x27;t recall the model, but mid 90s, very basic features. Eventually after turning it on it would get a fix, and give you coordinates &#x2F; speed &#x2F; bearing. No names of towns or anything like that though it did have support for some number of waypoints.I typically used it for multi week hikes through the rockies where I was navigating primarily with topo maps & compass, and about once a day I&#x27;d turn on the GPSr to validate my location. It was too much of a pig on batteries to use it any more often, but, it was a reasonable size for hiking.Totally different world vs the Garmin GPSMap 66i I currently use, but, I&#x27;d probably trust the old Magellan more than I do 66i on week&#x2F;longer excursions. reply avar 10 hours agorootparentnext [–]> about once a day I&#x27;d turn on the GPS to > validate my location.This point can&#x27;t be stressed enough, these early GPS models (and even one I owned in the early 2000s) often served a fundamentally different use-case than what people think of as \"GPS\" today, which has come to mean something with integrated maps and navigation.The idea with many of these early devices was exactly what you&#x27;re describing, experienced hikers who&#x27;d mainly use a map & compass to navigate might buy these. It was enough to have one GPS for the entire group, and on a typical trip with good visibility and orientation the GPS might never come out of the backpack.But knowing where you are if you manage to completely lose orientation (e.g. with an onset of fog) is invaluable. The original use case for GPS devices for hikers was that sort of fallback safety. reply metadat 19 hours agoparentprevWhich model was yours? This page appears to show every model of handheld GPS ever made, and Lowrance has 4 entries.Thanks for sharing this, I never had the chance to see one of these units. It&#x27;s so weird now to imagine GPS with no map!P.s. What does a six-channel GPS receiver even mean? Is more channels more better? reply jdietrich 16 hours agorootparent>What does a six-channel GPS receiver even mean? Is more channels more better?The operating principle of GPS is more complex than I can usefully summarise in a comment, but essentially the satellites are continuously broadcasting an extremely accurate time signal that the receiver uses to calculate the time-of-flight to each satellite. GPS receivers need signals from a minimum of four satellites to provide a location fix.There are usually more than four satellites visible, so additional channels allow for more than the minimum number of signals to be received. this can provide improved accuracy, faster time-to-first-fix and better resilience to interference. If you&#x27;re receiving five or six signals, you don&#x27;t lose your positioning fix when one of the satellites moves below the horizon or is obstructed by terrain. Reflected signals can cause error, because the time-of-flight of the signal will be greater than the actual distance to the satellite; extra channels allow these errors to be compensated for.For a long time, GPS receivers typically had no more than 12 channels, which was the maximum number that would actually be useful given the limited number of satellites in the original GPS constellation. Since then, many other navigation satellite constellations have launched, so between 40 and 60 navigation satellites are typically visible at any moment. Receivers have commensurately improved, with even basic receivers often having upwards of 48 channels. reply eastbound 14 hours agorootparentHow does encryption work on GPS signals? Since it seems the military have access to better accuracy, it’s not just a wavelength that is broadcasted. reply jdietrich 14 hours agorootparentPrior to 2000, the civilian signal (C&#x2F;A code) was deliberately degraded by the addition of small random variations in the time signal, but this is no longer the case. A separate military signal (P-code) still exists, which is encrypted in order to prevent spoofing; to my knowledge, the encryption scheme used for the military signal is still classified. reply TedDoesntTalk 18 hours agorootparentprevHere&#x27;s a better picture of what I owned. It had a huge hard-plastic case:https:&#x2F;&#x2F;www.ebay.com&#x2F;itm&#x2F;314936082464The antenna flipped up and doubled as a screen protector:http:&#x2F;&#x2F;retro-gps.info&#x2F;photos&#x2F;files&#x2F;page2-1023-full.jpghttps:&#x2F;&#x2F;i.ebayimg.com&#x2F;images&#x2F;g&#x2F;zxUAAOSwDspimA3F&#x2F;s-l1600.jpgSorry, I don&#x27;t remember what 6-channel means. I would guess it could receive data from up to 6 satellites? Don&#x27;t know.IIRC, this cost about $700 but cartridges were extra. Very expensive for the time. It worked without the cartridges, but I think it only displayed lat&#x2F;long then, or in any case much more limited info. The carts added more info like town&#x2F;city&#x2F;state.Unfortunately, I could not find any YouTube videos of early GPS receivers. reply metadat 18 hours agorootparentThanks @TDT for your prompt and rapid reply, always nice to connect with such a generous person who indulges me :D.What a spiffy looking unit, it looks like belongs mounted in the dash of a 198x Mercedes, Porsche, Corvette, Bronco, or similar alongside one of those old school built-in car phones.Archive links of the eBay resources:1a. https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20231104152903&#x2F;https:&#x2F;&#x2F;www.ebay....1b. https:&#x2F;&#x2F;archive.ph&#x2F;QxwrN2a. https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20231104153359&#x2F;https:&#x2F;&#x2F;i.ebayimg...2b. https:&#x2F;&#x2F;archive.ph&#x2F;crpGm(Adding because of how many broken eBay links I&#x27;ve encountered on forums over the years.. it&#x27;s always frustrating, haha.) reply TedDoesntTalk 18 hours agorootparentYou&#x27;re welcome! This is the best photo in my opinion -- shows the antenna up (not covering screen), unit is powered on, and the unit itself is in excellent condition:https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20231104153749&#x2F;http:&#x2F;&#x2F;retro-gps.... reply skhr0680 18 hours agorootparentprevhttps:&#x2F;&#x2F;digitalcommons.usu.edu&#x2F;cgi&#x2F;viewcontent.cgi?article=2...> The receiver has six channels that continuously track four primary GPS satellites and sequentially acquire and track all other visible and healthy satellites on the fifth and sixth channels. reply aziaziazi 14 hours agoparentprevWondering why « No rechargeable » ? I recall rechargeable AAs in late 90, didn’t they exist in early 80 ? reply ljf 13 hours agorootparentEven in the early 90s my good rechargeable batteries (AA) only put out 1.2v when freshly charged and dropped lower than that as they ran. They also ran far shorter than duracell or similar expensive batteries.So one the voltage may have been too low and two the usable loge might have been too short for these power hungry devices reply hexmiles 13 hours agorootparentprevNot OP, but i remember having a camera that use AAs and would not support rechargeable. While it powered up, it would not take photos and instead shutdown. I think they used to be able to deliver less power, also when i put them in the gameboy the little led was a tad dimmer that non rechargeable one even when fully charged reply _whiteCaps_ 13 hours agorootparentprevI had a radio that could handle rechargeable vs non - it included a dummy AA battery that you used when using non-rechargeable batteries, so you&#x27;d use (IIRC) 7 rechargeables + 1 dummy or 8 rechargeables. reply stcroixx 16 hours agoparentprevGarmin handheld unit in the early 2000’s still had an LCD screen. I still have and use mine as a backup. reply supportengineer 16 hours agorootparentI have the eMap. Still works. In 2002 I tethered my laptop to my phone and connected the eMap to the laptop. I had custom Java software that would read my position from the serial connection, and then post it to a custom PHP page, and there was a different page where you could view my position on a Yahoo Map. reply thom 18 hours agoprevGPS seems fairly pedestrian now but my dad had one of the early Garmin models in the 90s and it was a kind of magic back then. Even outside of the actual location info, just seeing this thing in your hand listening to satellites up in space felt incredibly powerful. Later on you could get units compatible with Windows CE and mobile devices and it was easy to see why it would be a killer app on smartphones. It’s sad that the complexity and cleverness is all hidden now. reply callalex 17 hours agoparentAlso kids these days don’t know the pain of GPS taking 3-10 minutes to get a position fix without almanac data. reply thom 16 hours agorootparentYeah, navigating a big city meant finding a crossroads where you might be able to see a bit of sky. I used to wear a shoulder bag and attach the antenna to the strap to stay locked on. reply mareko 16 hours agorootparentprevOr the days before GPS where taking a road trip inevitably resulted in a big argument with your partner about directions reply spookthesunset 15 hours agorootparentprevBack then even light tree cover would sometimes trash the signal enough to lose position.While modern GPS can get a position fix pretty quick, a cold start on standalone units can still take a while before it discovers enough satellites.The crazy thing to me is now days my little tiny watch can do Wifi, Several Bluetooth protocols, 5G, NFC, Wireless charging and probably some other stuff I&#x27;m forgetting about. Oh and it supports a variety of global navigation satellite systems. Don&#x27;t forget the high-res OLED display too. And the fact it is fully watertight.All that while having a fairly impressive battery life. reply rz2k 17 hours agoparentprevTake a look at the https:&#x2F;&#x2F;phyphox.org&#x2F; app for lower level access to the sensors on Android and iPhones. There is a GPS section that gives you coordinates but unfortunately doesn’t tell you about each satellite. The precision of other phone sensors seems even more amazing. reply nulld3v 16 hours agorootparentYou could also try https:&#x2F;&#x2F;github.com&#x2F;barbeau&#x2F;gpstest if you are looking for something more GPS focused. reply rz2k 9 hours agorootparentThat looks pretty cool. Do you know if there is anything similar for iOS, or do Apple prevent apps from accessing those data? reply wkat4242 9 hours agorootparentThere sure was when I still used iOS. But I don&#x27;t remember the name. reply tpmx 17 hours agoparentprevI mean, both GPS and WiFi was super exciting stuff in the early 2000s. There was a GPS magazine for GPS terminal enthusiasts (!). It&#x27;s still sort of around: https:&#x2F;&#x2F;www.gpsworld.com&#x2F;. reply kebman 21 hours agoprevIt&#x27;s a bit on the side, but I remember my father telling me that the PCB&#x27;s he sold to the Eastern Bloc were often adorned with microscopic greetings in Cyrillic, though the Russian spelling was often pretty bad.Just like now, the Soviet Union was under heavy sanctions, and they weren&#x27;t allowed to receive the latest computer tech. The various companies had ways around this, though, and the saying was that they&#x27;d purposefully design their boards so that Russian engineers could \"tamper\" with them in order to achieve higher than allowed clock speeds.Anyway this cute board just made me think of that, so thought I&#x27;d share it. reply baybal2 19 hours agoparentBetrayers of The Free World reap the benefits of living in The Free World the most, and advance ahead on the social ladder towards decision making positions, perpetuating these bad decisions.And people who did the right decision, have to pay twice. One is the opportunity price, and another is the externality price. reply GuB-42 19 hours agorootparentIf sharing useful tech is betrayal, I wish there would be more traitors. On both sides. reply 23B1 8 hours agorootparentTell me you&#x27;re too young to remember the cold war without telling me ;-) reply secondcoming 21 hours agoparentprevGreat, and now they have Kinzhals reply bee_rider 19 hours agorootparentI wonder if it was the pre-90’s black&#x2F;grey market, or the intervening decades of open trade. reply mananaysiempre 15 hours agorootparentI’d guess the former, but only because I’m honestly surprised anything designed or manufactured under government mandate post (generously) 1985 actually works. The collapse of the Soviet Union might have marked the start of open (!) looting, but with rare exceptions Soviet research organizations have been in pure subsistence mode for a decade or more before that. reply bee_rider 13 hours agorootparentThe Kinzhal is a sort of heavily modified Iskander, I mean all ballistic missiles are rocket science but it is not some super futuristic weapon. reply gambiting 19 hours agorootparentprevIt&#x27;s incredibly racist, offensive and ignorant to assume that \"Eastern Block\" means just Russia. Many former \"eastern block\" countries nowadays are firmly with the west and oppose Russia and their stupid invasion with all their might. Being bundled together with the Russians is the most personally offensive thing I&#x27;ve ever read on HN. reply assusdan 19 hours agorootparentCould you please also stop bundling all russians together? Not all of us oppose \"the west\" and support our stupid invasion. reply gambiting 12 hours agorootparentI didn&#x27;t say either thing though? I said many of us here in the former Eastern Block oppose Russia - and I personally find being bundled with the Russians offensive, as I am not a Russian. Anything you read into it beyond this point is your own interpretation. reply FpUser 9 hours agorootparent>\"I didn&#x27;t say either thing though?\"It is implied. Don&#x27;t be a weasel. reply 5e92cb50239222b 15 hours agorootparentprevUh-huh, yet it&#x27;s somehow not racist, offensive and ignorant to blame all Russians for everything now. Some of you guys have lost all the high moral ground that you once supposedly had.I have a working theory that long years of “oppression” in many Western societies of not being able to criticize any group of certain ethnicity, nationality, culture, or religion resulted in a buildup of sorts, so when it became okay to pour shit on ethnic Russians and citizens of that country (between which you make no distinction — do you make a distinction between Jews and Israel?), it&#x27;s like the flood gates were opened. All the hate and vitriol accumulated over the years is directed at a group that one is allowed to hate. reply teddyh 14 hours agorootparentAs soon as a new subset of people have been designated as part of the outgroup, they are basically fair game for everybody to get their kicks in¹. And boy howdy do people love some fully justifiable carnage.1. (This is a re-post of .) reply gambiting 11 hours agorootparentprevI feel like you&#x27;ve replied to the wrong person maybe? replymattew 15 hours agoprevThe interesting thing about GPS back then was that the location data you got back were randomly slightly incorrect every time you got a reading. I’m pretty sure this was so it wasn’t useful for military purposes.I think it was called differential post correction but if you had a base station with a known location you could snap your incorrect points to the difference generated at that correction level and get the true location after the fact.Source: GIS major in late 90s when this stuff was a lot more magical reply toomuchtodo 15 hours agoparenthttps:&#x2F;&#x2F;www.gps.gov&#x2F;systems&#x2F;gps&#x2F;modernization&#x2F;sa&#x2F;Selective Availability? reply mattew 15 hours agorootparentThat’s right. It was selective availability and you used differential post correction to clean the data up and get accurate locations for the data you were capturing. Thanks for the correction! reply dan-robertson 22 hours agoprevMore on gps: https:&#x2F;&#x2F;lea.hamradio.si&#x2F;~s53mv&#x2F;navsats&#x2F;theory.html reply danieldk 22 hours agoparentAnother great explanatory page I have seen is:https:&#x2F;&#x2F;ciechanow.ski&#x2F;gps&#x2F;Comes with a lot of animations and interactive elements. Admittedly, I haven&#x27;t gone through all of it yet since it so detailed, but it is marvelous.Earlier discussion:https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36180316 reply agumonkey 21 hours agoparentprevarchived link for image links seem dead https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20060711045257&#x2F;https:&#x2F;&#x2F;lea.hamra... reply roland35 22 hours agoprevAdorable! As a former EE we often put little jokes and Easter eggs in prototype PCB designs. Sometimes they made it to production! reply rtkgps 10 hours agoprevSo cool to see how the technology has evolved over the years, now we can achieve accuracies down to one centimeter with GPS. Check out what Emlid has been building in this space. http:&#x2F;&#x2F;emlid.com reply matheusmoreira 8 hours agoparentCentimeter precision still requires a base station. Gotta leave a GPS receiver stationary for days so it can average out the errors and compute its own position precisely. With that accurate receiver it&#x27;s possible to correct the measurements of other receivers nearby up to some maximum range.This requires raw GNSS measurement data support which is not available in most consumer units and is an incredibly proprietary mess in the professional surveying equipment space. It was actually Google who improved the status quo by mandating pseudorange support in Android. reply ck2 20 hours agoprevGarmin had the 100 series in 1990Neat history of GPS unitshttp:&#x2F;&#x2F;retro-gps.info&#x2F;page33&#x2F;index.htmlBut what&#x27;s really interesting is the first GPS watch, the Forerunner 101 in 2003https:&#x2F;&#x2F;www.garmin.com&#x2F;en-US&#x2F;p&#x2F;231 reply thomasfl 23 hours agoprevThat&#x27;s cute! reply 23B1 8 hours agoprevAll the real OGs remember having to haul the PLGR around Ft. Bragg.https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Precision_Lightweight_GPS_Rece... reply ShamelessC 19 hours agoprev> Why is it shaped like an ambulance? Good question.Was hoping there was an actual answer for that question. Or am I missing something? Otherwise reads like \"good question, who fucking knows!? certainly not me the person making the assertion!\" reply skhr0680 19 hours agoparentAm I missing some sarcasm, or do you honestly think that the board in question doesn&#x27;t look like an ambulance? reply ShamelessC 18 hours agorootparentNo sarcasm. Yes, it looks like an ambulance (seemingly deliberately). The tweet&#x2F;fart&#x2F;whatevertheyrecalled just has strange choice of phrasing implying they will follow up on this, then they don&#x27;t. _Why_ is it an ambulance? Well who cares, I guess - but the author of the poof&#x2F;squirt&#x2F;whatevertheyrecalled is the one who draws attention to it in the first place. reply makomk 15 hours agorootparentIt&#x27;s a several decade old piece of hardware that was likely produced in extremely limited quantity, so finding the answer to that is probably not going to be easy. Presumably it was produced as a promotional item made to promote their GPS receivers for some kind of safety application that the ambulance shape is a reference to, but good luck confirming that in 2023. reply ShamelessC 8 hours agorootparentLike I said, I don&#x27;t really care. Those are all reasonable assumptions I guess. Just commenting on the toot author&#x27;s phrasing. reply skhr0680 18 hours agorootparentprevWhoever designed the board may have just done it as a joke, but I think giving the coastguard etc. an idea of your general location when in distress would have been a good civilian use of GPS in 1993 reply InCityDreams 19 hours agorootparentprevBut why is it shaoed so? reply skhr0680 18 hours agorootparentWhy would someone in 1993 have had the foresight to think that they might need to know their location to within a hundred meters or so? reply 3760451 16 hours agoprevHos reply 3760451 16 hours agoprev3760451 reply tpmx 22 hours agoprev [–] It sold for just $12 yesterday. (Some more shots here, too.)https:&#x2F;&#x2F;www.ebay.com&#x2F;itm&#x2F;274506300217 reply WarOnPrivacy 13 hours agoparent [–] I don&#x27;t think it sold. The listing ended. Also add $6.50 shipping. Still worth it. reply tpmx 13 hours agorootparent [–] But it literally says: \"Sold for: US $12.00\"? replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "A user named Keelan on the social platform mastodon.sdf.org, powered by Mastodon, shared an image of a 1993 GPS receiver produced by Trimble that resembles an ambulance and includes a Motorola 68HC000 and 64k of RAM.",
      "Keelan is contemplating crafting a shadow box for the device and potentially incorporating an LED or LCD display to display current time and geographical location.",
      "Various fellow users entered the dialogue, speculating about the gadget's original function and remarking on its distinctive aesthetics."
    ],
    "commentSummary": [
      "User Keelan shared a picture of a 1993 GPS receiver, manufactured by Trimble, on Mastodon-powered social network mastodon.sdf.org. The device resembles an ambulance, integrates a Motorola 68HC000, and operates on 64k RAM.",
      "Keelan is contemplating creating a shadow box for preserving the receiver, potentially including an LED or LCD display to show current time and location.",
      "Other users joined the discussion, curious about the device's original function and commenting on its unique design."
    ],
    "points": 221,
    "commentCount": 68,
    "retryCount": 0,
    "time": 1699093638
  },
  {
    "id": 38141320,
    "title": "Creating Custom Shortcut for Pasting Unformatted Text on macOS: A How-to Guide",
    "originLink": "https://scottswezey.com/always-paste-without-formatting-macos/",
    "originBody": "The World According to Scott Projects About Sign in Subscribe Tech Featured Always paste without formatting on macOS When copying and pasting on a Mac, most applications will retain the formatting of whatever you copied. Use this trick to paste unformatted text. Scott Swezey Sep 19, 2022 • 1 min read Creating a custom keyboard shortcut to \"paste and match style\" in the macOS settings App Shortcuts menu. When copying and pasting on a Mac, most applications will retain the formatting of whatever you copied. If that bugs you as much as it bugs me, try this trick to switch up the default to pasting unformatted text. Or more accurately, having the pasted text ignore its own formatting and match the text where it's pasted. Open the System Settings app. Search for \"Keyboard shortcuts\" or navigate to Keyboard > Shortcuts > App Shortcuts Add a new shortcut Choose All Applications for the Application, and type Paste and Match Style. Enter ⌘V for the Keyboard Shortcut. Click Add. ℹ Hello Hacker News! As some people have pointed out, this tip does not work in every app, if it doesn't have a \"Paste and Match Style\" menu option. Check out the discussion on Hacker News for some other ideas. https://news.ycombinator.com/item?id=38141320 Before macOS Ventura, use these steps: Open the System Preferences app. Go to Keyboard > Shortcuts. Click on App Shortcuts. Add a new shortcut. Choose All Applications for the Application, and type Paste and Match Style. Enter ⌘V for the Keyboard Shortcut. Click Add. Next time you copy/paste, the copied text will fit in with the style of wherever it's pasted. Cool. Buying time The concept of “buying time” is a communication skill, used when you need to prioritize something other than the person you are currently working with. Jul 11, 2023 2 min read AOC 2022-08 (Treetop Tree House) Mix.install([ {:kino, \"~> 0.7.0\"} ]) Input input = Kino.Input.textarea(\"Input\") input = input |> Kino.Input.read() |> String.split() grid = input |> Enum.with_index() |> Enum.reduce(%{}, fn {line, row}, acc -> line |> String.graphemes() |> Enum.with_index() |> Enum.reduce(acc, fn {height, col}, acc2 -> Map.put(acc2, {row, col} Dec 8, 2022 1 min read AOC 2022-06 (Tuning Trouble) Mix.install([ {:kino, \"~> 0.7.0\"} ]) Common Code defmodule Day6 do def find_unique_prefix(input, length) do input |> String.graphemes() |> Stream.chunk_every(length, 1) |> Stream.map(&count_unique_elements/1) |> Enum.find_index(&(&1 == length)) |> Kernel.+(length) end defp count_unique_elements(list) do list |> MapSet.new() |> MapSet. Dec 6, 2022 The World According to Scott © 2023 Mastodon Github Stack Overflow LinkedIn Powered by Ghost",
    "commentLink": "https://news.ycombinator.com/item?id=38141320",
    "commentBody": "Paste without formatting on macOSHacker NewspastloginPaste without formatting on macOS (scottswezey.com) 197 points by elisaado 19 hours ago| hidepastfavorite140 comments crazygringo 18 hours agoMy whole life I&#x27;ve been wishing for something in between.If I&#x27;m transferring between applications, I never want 95% of formatting — I don&#x27;t want font or size or color or line-height or paragraph spacing or whatever.But I do want italics, because that conveys actual meaning around emphasized words and titles. And I do want to preserve subscript&#x2F;superscript in things like CO2 or \"squared\", because that&#x27;s similarly meaningful. And I also want to maintain bulleted and numbered lists, which again have meaning. Strikethru as well.So I just really wish that the OS had a toggle switch so that \"Paste and Match Style\" would still preserve everything \"textually meaningful\" -- , , , , , , and . reply bambax 17 hours agoparentI wrote a browser extension some time ago that does something similar: Paste as Markdown [0].The user can copy any text from anywhere, and then with the help of the extension, paste the result (somewhere in the browser), in markdown, so emphasis and lists, etc. are preserved, while everything else is discarded.[0] https:&#x2F;&#x2F;markitdown.medusis.com&#x2F; reply Wowfunhappy 17 hours agoparentprevI agree completely—but I&#x27;ll go further. From a UI standpoint, italics should be treated akin to capital&#x2F;lowercase letters.Currently, on every computer I&#x27;m aware of, if I copy an all-caps paragraph and paste into the middle of an all-lowercase paragraph, the pasted text will still be capitalized. Similarly, if I click into an all-caps paragraph and start typing without caps-lock on, the new text will be lowercase.Italics should work the same way.Note: I am aware that capitals, unlike italics, are different characters in Unicode&#x2F;ASCII. Put that aside for a moment, it&#x27;s not relevant to UI behavior, users don&#x27;t care. reply crazygringo 16 hours agorootparentIn CSS, `text-transform: uppercase;` is able to separate case from styling. I&#x27;ve used it frequently in the past, since you often want to experiment with all-caps for short headings, captions, subtitles, etc. Whereas if you hard-code the all-caps in text, you can&#x27;t go back.In Chrome, if you copy CSS-all-caps text to the clipboard, it is copied as uppercase.Intriguingly, in Firefox, it is copied as the original (mixed case) source HTML text.I do like the idea treating all-caps as a style, just like small caps. The problem, of course, is that it makes it kind of impossible to type within it, since there&#x27;s no feedback as to when you&#x27;re typing capital letters at the starts of sentences or not. reply Wowfunhappy 16 hours agorootparentTo be clear, my assertion is that most user-facing text editors should have the opposite of all-caps as a style! I think italics should be treated the way we treat capitalization.Pressing ⌘I (or using the UI equivalent) should act like the italics version of caps lock. reply snoopen 13 hours agorootparentI much prefer the approach of applying emphasis, be it italics, bold, all-caps etc, on top of plain text. To me this is the most versatile approach and I think is better for accessibility.A sentence with italics or any other emphasis should read exactly the same without that emphasis. Where the same isn&#x27;t true of capitalisation. reply Wowfunhappy 11 hours agorootparent> A sentence with italics or any other emphasis should read exactly the same without that emphasis.But it doesn&#x27;t, that&#x27;s the thing! The word you italicize can alter the meaning of a sentence. For instance:> \"I didn&#x27;t steal Sally&#x27;s necklace!\"> \"I didn&#x27;t steal Sally&#x27;s necklace!\"> \"I didn&#x27;t steal Sally&#x27;s necklace!\" reply nnf 5 hours agorootparentOne of my favorites:I didn’t say I took the money.I didn’t say I took the money.I didn’t say I took the money.I didn’t say I took the money.I didn’t say I took the money.I didn’t say I took the money. replynightfly 14 hours agorootparentprevWhat makes italics so special it deserves that treatment and not everything else in rich-text (bold, underline, sub&#x2F;superscript)? reply iudqnolq 14 hours agorootparentThe fact that it is special? All of this is arbitrary, that doesn&#x27;t make it wrong.Italics is the most important of those styling options for formal English writing (eg MLA style). Underlining was traditionally used a as substitute if italics were unavailable. reply Wowfunhappy 11 hours agorootparentprevSubscripts and superscripts should probably work the same way as italics. They&#x27;re just not as top of mind for me because I don&#x27;t use them as often in my day-to-day life (and when I do, I often use the unicode characters).I could see an argument for treating bold and underline this way as well, but I think the case is less clear-cut. Boldness is more likely than italics to be used for visual styling as opposed to semantic meaning. reply Champagn3Papi 18 hours agoparentprevI recently bought the Pastebot, it&#x27;s one of those tools once you try it and make it fit in your workflow you never want to go back.It&#x27;s something like 12$ one time purchase which is great and a huge productivity booster! reply benhurmarcel 15 hours agorootparenthttps:&#x2F;&#x2F;tapbots.com&#x2F;pastebot&#x2F; reply Findecanor 17 hours agoparentprevYou could argue that font, size, colour, line-height and paragraph spacing should not be considered \"formatting\" of the text, but as properties that belong to the container that the text is in. reply coldtea 15 hours agorootparentWhether it belongs to text or the pdf reader or rich text editor or browser doesn&#x27;t matter.I want to carry them over when I copy and paste the text (and sometimes to strip them). I don&#x27;t want to copy and paste the container. reply i13e 3 hours agoparentprevThis gets me most of the way there:https:&#x2F;&#x2F;chrome.google.com&#x2F;webstore&#x2F;detail&#x2F;copycat&#x2F;jdjbiojkkl... reply bentcorner 16 hours agoparentprevI kind of want something like markdown or WP reveal codes, where you can copy paste formatted text, but be able to see the formatting so you can remove anything unnecessary.There&#x27;s countless implementations of formatting toolbars for web based editors, most of them bad, I feel like if operating systems handled this for users we wouldn&#x27;t be wasting cycles on this kind of problem. reply mrtesthah 18 hours agoparentprevNotational Velocity works exactly this way. reply everdrive 18 hours agoprevI&#x27;ve never wanted to maintain formatting while pasting. This is probably one of the most annoying default behaviors I&#x27;ve ever encountered. reply crazygringo 18 hours agoparentI mean, I always do within the same app. If I&#x27;ve moving a section of a document in Word from one place to another, you can be sure I want to preserve everything.However, I agree with you a billion percent between apps. I&#x27;m sure I&#x27;ve copied text from a webpage into a document 10,000 times, and not a single time have I ever wanted the font or size or color preserved.Just think it&#x27;s an important distinction to preserve. reply netsharc 13 hours agorootparentIt seems like it&#x27;d be saner to have Copy, and Copy and Preserve Formatting. But I guess the Copy, Alt-Tab, Paste, ah what the fuck!, Undo, Paste without Formatting spares a few steps.To counter your first use case, if I&#x27;m copy-pasting the second word (say it&#x27;s a complicated name) of a heading to reuse in a paragraph, I don&#x27;t want that paragraph to be another heading. In another universe, the geniuses who coded the editor realized that \"no one will ever want a word in the middle of the paragraph to be in a different font, in a different color and with a different background color because they copied it like that from a website with that formatting\". reply furyofantares 16 hours agorootparentprevAlso I can&#x27;t be the only person who almost never copies in an editor, but cuts and pastes back into place (so I can visually verify the copy.) It would be very frustrating if ctrl or cmd +X, V didn&#x27;t restore the document to its original state. reply crazygringo 16 hours agorootparentI&#x27;ve never heard of that. Why do you do that? What&#x27;s to verify? When has a copy ever gone wrong? I feel like I&#x27;m missing something because I don&#x27;t understand it at all. reply jerbear4328 15 hours agorootparentI do that too, I&#x27;m not sure why, but I&#x27;d guess it has something to do with the fact that the clipboard is something you can&#x27;t see, you just have to mentally keep track of it. I would guess that is just my way of checking that the clipboard is working like I assumed it would, because the behavior of copying and pasting isn&#x27;t always consistent between different text boxes. More than anything, it&#x27;s just a habit. reply crazygringo 14 hours agorootparent> the fact that the clipboard is something you can&#x27;t see, you just have to mentally keep track of itI will say, sometimes I do find myself wondering whether something was copied as plain text or as formatted text, or whether I pasted the previous thing before going to copy another.I really like what Apple has done with screenshots — a thumbnail hovers in a pop-up window in the corner of the screen for a bit. Doing something similar with the clipboard might not be the worst idea — after cut&#x2F;copy, a thumbnail hovers in the corner until you paste, or until 15s have passed.The fact that \"copy\" results in zero visual confirmation whatsoever does seem to be a bit of a violation of standard UX guidelines. Heck, even a visual effect like a flash and quick zoom-fade-out of the copied content feels like it would be helpful. reply nnf 5 hours agorootparentprevI’ve had copy fail for whatever reason (maybe a bug, maybe I didn’t press C all the way) and then pasted into a terminal window. Nothing bad has happened, but it certainly could have.While I don’t paste in place of my copy, I do use Cmd+Ctrl+V to paste in Terminal (which escapes all “special” characters with a backslash) to avoid trouble. reply adrianmonk 14 hours agorootparentprev> What&#x27;s to verify?That your keypress registered. You held down the modifier and you think you hit \"C\", but did you actually? For unfathomable reasons, when you copy text, there&#x27;s no visual or other confirmation that anything has happened.If it takes you a long time to navigate to where you want to paste (scroll a lot in an editor, juggle windows, etc.), it&#x27;s a bummer to get there and learn that your clipboard doesn&#x27;t have the text on. You have to make another round trip. reply furyofantares 14 hours agorootparentprevRealistically despite decades of doing this, I&#x27;d get over it pretty quickly. I think I just like to see that I pressed the correct keys.I do think in the early days (for me, this is the 90s) I had failures that weren&#x27;t fat-fingering, the keypress just not registering. Maybe the wrong window has had focus once or twice too in some weird scenarios. reply lxgr 13 hours agorootparentprevMany editors these days support granular versioning. Isn’t it pretty annoying to have lots of remove&#x2F;add back steps in that version history? reply Ensorceled 18 hours agoparentprevThat and \"drag selected text to random location\". Who selects and drags blocks of code? reply freedomben 18 hours agorootparentSeriously, when that rolled out decades ago it was one of the dumbest things and still gets me. I always want to start a selection on the text. Dragging the text somewhere else never does what I want it to and I end up having to copy&#x2F;paste anyway reply kajic 17 hours agorootparentAnd yet lists of things often allow dragging of individual items to rearrange them. I wonder if thinking of paragraphs of text, and perhaps even sentences, in a similar way might make the dragging of text feature more appealing (I also dislike it). reply Ensorceled 12 hours agorootparentYeah, if it was code blocks, I still wouldn’t use it but it wouldn’t seem ludicrous. reply hn_acker 13 hours agorootparentprevWhen I&#x27;m using my browser, I select and drag text from the page to the tabs section of the browser window to open a new tab which queries my search engine using the text (unless the text was a URL, in which case the new tab goes to the URL). I could copy, open a new tab, paste, and press enter in some cases, but that opens a tab to the right of all other tabs, when sometimes I want my new search tab to be in a different position.However, I would appreciate a setting that would let me arbitrarily switch between dragging vs reselecting already selected text. reply lxgr 13 hours agorootparentprevMe, all the time, but mostly across applications and not within single documents.Sometimes because I want to keep what’s in my clipboard already; other times because it’s sensitive enough data that I don’t necessarily trust all running applications with (the threat primarily being an application incidentally logging&#x2F;persisting it as part of some “helpful” feature, not outright malware). reply positus 15 hours agorootparentprevI do this in nvim. After making a visual selection I hold alt&#x2F;option&#x2F;meta and use j+k to move it up and down as a block. It&#x27;s been helpful a few times when reorganizing things as I write them. reply tomjakubowski 18 hours agorootparentprevI just learned this was possible the other day and I&#x27;ve been using it all the time since reply Angostura 14 hours agorootparentprevI do use it occasionally but quite often if I’ve put text into the wrong field of a form. On Mac I quite often make text clippings by dragging text to the desktop reply callalex 17 hours agorootparentprevMany computer users have a hard time with invisible concepts. Copy and Cur put text away in some invisible buffer that some people don’t get, so dragging text works better for them. reply rurp 15 hours agorootparentprevI would love a way to disable drag and drop behavior globally. I absolutely never want to use it, but it&#x27;s easy to accidentally trigger it. reply discard124 18 hours agorootparentprevI do. reply Waterluvian 18 hours agorootparentprevAre you talking about how code pasted in is never indented the way it originally was? It somehow adopts the indentation of the above line? I despise that. reply eyelidlessness 18 hours agorootparentI don’t think they were talking about that. But since you mentioned it, if you (or anyone else bothered by this) use VSCode, you can often just undo (first time undoes auto-indent if it was performed, second undoes paste). Sure it’s annoying, but at least for me it’s become so automatic I hardly notice it anymore. reply ttfkam 19 hours agoprevYes! This should be the default with Cmd-Shift-V being the alternative that preserves style. reply AzzyHN 15 hours agoparentI disagree, but only because to me, cmd&#x2F;ctrl-shift-V is \"unformatted paste\".I wonder if there&#x27;s a good reason why this is the default, or if it&#x27;s a case of some engineer in the 80&#x27;s simply choosing one over the other reply ttfkam 13 hours agorootparentWhen first introduced, ctrl-c was the TERM signal to exit a program. Microsoft didn&#x27;t give one rats ass about POSIX conventions at the time—especially in a GUI—so \"c\" was an easy pneumonic for \"copy\". \"V\" just happened to be the character right next to it, so that was paste. (Also because \"p\" was for \"print\".)ctrl-v was pretty basic, because the all the apps were basic. Most text was basically unformatted (Notepad) or moving from one part of a document to another (Word). Then companies introduced the notion of grabbing metadata along with text, so that you didn&#x27;t have to figure out what font, size, and color were being applied every time. Then copy&#x2F;paste was applied to non-text like image parts, files in a directory, etc. You could copy graphs from Excel and put them in your PowerPoint slideshow.Then folks found out they didn&#x27;t necessarily want all that metadata along with their content, so shift-ctrl-v was introduced. Somewhere along the way, patterns emerged for many folks (like myself) where matching the target formatting was the more common case. This is especially true among coders.It&#x27;s too late to change the default for everyone, but this tweak allows for some of us to tailor the behavior more closely to our own personal workflows. reply Max-q 14 hours agoprevWhy don&#x27;t you just use the already built-in shortcut shift+opt+cmd+v that paste as plain text? reply eviks 2 hours agoparentBecause that&#x27;s an awful shortcut reply wingworks 14 hours agoparentprevI do this quite often. But it&#x27;s really not easy to do. reply playingalong 18 hours agoprevWhat I use is paste into my browser&#x27;s URL bar and copy from there. reply rrrrrrrrrrrryan 15 hours agoparentThis is a tiny bit more hardcore because it also trims any whitespace from the beginning and end of the string, and it strips out all newline chars. It&#x27;s very handy quite often, though. reply wombat-man 18 hours agoparentprevThis or a textedit window that is set to plaintext reply junaru 18 hours agoparentprevPlease be aware that this submits it to your search engine, so if you cleaning up passwords, etc this way you are essentially leaking them. reply DrAwdeOccarim 17 hours agorootparentI turn that off when I first setup my browser. reply lxgr 13 hours agorootparentI wouldn’t be so sure it doesn’t get logged anyway, at least locally. reply wintermutestwin 6 hours agoparentprevOn iOS, I find it nearly impossible to work with the URL bar. It is faster and less frustrating to simply pull out my laptop. reply AaronNewcomer 17 hours agoparentprevThe combination of Ctrl+C - Ctrl+T - Ctrl+V - Ctrl+A - Ctrl+X - Ctrl+W is pretty much hardcoded into my brain. reply cwales95 18 hours agoparentprevI’m not the only one! reply tpmx 18 hours agoparentprevI&#x27;ve doing MenuEditPaste and Match Style like I guess you&#x27;re supposed to do? reply roamerz 18 hours agoprevIt’s amazing to me how Apple got this basic setting so wrong. It would be interesting to see the decision process that was used and if it was decided correctly maybe overridden by an individual? reply Someone 17 hours agoparentIn 1984, easily transferring styled text between applications was a novelty.Apple also aimed for simplicity, and when copying between MacWrite and MacPaint (the only two applications everybody had), keeping formatting was the best option.Add a few decades of people getting used to that behavior, and changing it takes guts, and will upset quite a few users who know how to repair formatting after pasting, but won’t easily learn about the new keyboard combination.I also am not sure stripping formatting by default is the best choice today. See for example https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=38142074, who wants something in-between.Maybe, paste should keep only formatting of entire units being pasted? So, it would keep bold, italic, etc, but only keep line height, margins, etc. for entire paragraphs being pasted? I can see people getting highly confused about that, too, though, especially about the difference between selecting all characters in a paragraph and also selecting the paragraph boundaries. reply layer8 18 hours agoparentprevI don’t know how it works on macOS, but on Windows copying to the clipboard can provide content in multiple formats (like multiple MIME types) at the same time, for example simultaneously as rich text and as plain text. The receiving application then decides which format it understands and selects for pasting. If both sides understand rich text, this results in rich text being transferred. (It basically works like HTTP content negotiation.) You have to artificially add a man-in-the-middle to force a different format. reply eyelidlessness 18 hours agorootparentThis is exactly how it works on macOS too. And that’s actually the mechanism used by “paste and match style” AIUI. reply bilekas 17 hours agoparentprevI do find myself still annoyed with Apple&#x27;s persistence towards doing things different, just be different.Why can&#x27;t I just have a navigation bar in the finder window that I can manually add in.Why do I have to google a keyboard combination just so I can view hidden files and folders.So many little things but they can add up. And it&#x27;s not a Microsoft v Apple thing. Unix distros dont have a special &#x27;command&#x27; button just for them to confuse things. reply mthoms 15 hours agorootparentIt&#x27;s not obvious, but finder allows you to put scripts, apps and shortcuts in the toolbar.https:&#x2F;&#x2F;osxdaily.com&#x2F;2023&#x2F;05&#x2F;25&#x2F;how-to-add-apps-to-macos-fin...You can create a shortcut (or applescript) that does the things you mention. reply duxup 18 hours agoparentprevIt’s that way in Windows and windows apps too. reply ajmarsh 18 hours agoprevThis solution seems to only work in certain places. For example, it&#x27;s not working in MS Word. Also, why is it \"shift command V\" in some places and \"shift option command V\" in others? reply Wowfunhappy 18 hours agoparentBecause some applications like MS Word blatantly don&#x27;t follow Apple design guidelines and it annoys me to no end. reply Someone1234 18 hours agorootparentMS Office doesn&#x27;t even follow MS Office norms across MS Office applications. Ctrl-Shift-V only works in Word, Excel, and PowerPoint. It isn&#x27;t in Outlook and OneNote.People seem to be under the impression that Ctrl-Shift-V is a Windows feature, when in reality it is part of three specific applications and then the wild-west everywhere else.My point being: I&#x27;m unsurprised MS gets the MacOS norms wrong when they cannot even get it right on Windows. reply Wowfunhappy 17 hours agorootparentThe overall Windows ecosystem is so inconsistent that I have trouble faulting any individual application for not following \"norms\", because they can barely even be called norms.(Don&#x27;t get me wrong, macOS is slowly getting there too, it gets worse every year.) reply jonpurdy 17 hours agoparentprevSo I solved this issue using a brute force manner a few years ago using aText (but any text substitution software should work, including Keyboard Maestro).When I type the characters &#x27;zv&#x27; it substitutes for the clipboard. This gets around any smartness with formatted text and apps trying to be clever. I also chose zv because the substring is unlikely to appear naturally when being typed anywhere. (I prefix most of my substitutions with jj but wanted as few characters for this as possible).I also use Keyboard Maestro to get around apps and websites that block pasting (like password validation fields).Macros:- type from clipboard: instead of pasting, it simulates each character as a keystroke- insert then type: same thing but shows a text input window- insert then type (50ms&#x2F;200ms): same thing, but also simulates latency in case certain apps can&#x27;t handle unthrottled keyboard input (found this when typing into remote terminals sometimes for whatever reason)Also check out Pasteboard Viewer.app to see what the MacOS pasteboard actually contains (it can contain text and formatted text and images and lets the app choose what to paste, which can be very confusing).Amazes me how many hacks like this are required just to use a computer the way I want. reply Someone 17 hours agoparentprev> This solution seems to only work in certain places. For example, it&#x27;s not working in MS WordFirstly, the menu item is “Paste and Match Formatting” in Word, not “Paste and Match Style”, so you’d have to tweak that separately.Word also has quite a few settings for copy&#x2F;paste behavior that will affect what it does (https:&#x2F;&#x2F;support.microsoft.com&#x2F;en-us&#x2F;office&#x2F;control-the-forma...).I think those vary by version. For example, Word for Mac 2019 has “Merge formatting when pasting from PowerPoint” and “Adjust formatting when pasting from Excel” checkboxes. Don’t ask me what the difference between “Merge” and “Adjust” is.> Also, why is it \"shift command V\" in some places and \"shift option command V\" in others?It’s a relatively late addition to ‘standard’ commands. I guess the search for an unused combo that’s reasonably logical led to different results in different applications.I guess Apple went for option-shift-command-V (https:&#x2F;&#x2F;support.apple.com&#x2F;en-us&#x2F;HT201236) because it’s fairly complex, and less likely to be already taken. reply allenu 17 hours agoparentprevI encountered this recently. I tried what was suggested in the link and it didn’t work when I pasted into my browser (pasting into Protonmail). The core ”issue” is the copy action puts the formatted version into the pasteboard (as well as the plain version) and the app can choose to retain the formatting if it likes and not all apps even offer two menu items to give you the choice. reply mthoms 15 hours agoparentprevYou can add an entry for the each app if necessary. It&#x27;s not ideal but it works. reply asylteltine 15 hours agoprevNever in the history of copy and paste has someone though man I wish I retained that 78pt blue highlight font when I pasted this line of text into my document reply simonCGN 16 hours agoprevOption-Shift-Command-V does the same: Paste and Match Style reply whatever1 16 hours agoparentAnd then you go to the hospital to fix your broken fingers from this atrocious key combination reply flenserboy 14 hours agorootparentFunny how it feels entirely normal now that&#x27;s burned into my muscle memory, so much so that I try to use it on Windows boxen, sometimes to weird effect. reply thatsnotmepls 15 hours agoparentprevAny way to change that to Shift Command V? For some reason the blog post solution doesn&#x27;t work on Notion. reply dur-randir 14 hours agorootparentRemap with Karabiner (https:&#x2F;&#x2F;karabiner-elements.pqrs.org&#x2F;). I personally mapped right_command + v to it, but it&#x27;s capable of a straight out remap. reply cglong 15 hours agoprevI was missing this on Windows, then discovered that similar functionality can be added via PowerToys: https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;powertoys&#x2F;paste-as... reply Nezteb 15 hours agoparentPowerToys is a mandatory install for me on all Windows machines. Highly recommend! reply benhurmarcel 15 hours agoparentprevRight, it’s in Powertoys, and alternatively this works well: https:&#x2F;&#x2F;stevemiller.net&#x2F;puretext&#x2F; reply eviks 2 hours agoprevOr you could try Karabiner to paste without formatting with a more convenient double tapCmd-v pasteCmd-v-v paste no formatMaybe some day proper keybinding support will come to the OS default GUIs reply kashunstva 18 hours agoprevI set up a Keyboard Maestro macro to strip the rich text markup from the clipboard and paste. It&#x27;s built around this one-liner: `pbpastetextutil -convert txt -stdin -stdout -encoding 4pbcopy` which obviates the need to hook into the \"Paste and Match Style\" menu item which may or may not exist. reply shinycode 15 hours agoprevI’m using maccy.app on macOS which is awesome and does just that. This should be a default feature of macOS for productivity. reply avtar 14 hours agoparentThanks for sharing. It’s nice to see thorough docs and tests https:&#x2F;&#x2F;github.com&#x2F;p0deje&#x2F;Maccy reply gnyman 14 hours agoprevPSA if you use Alfred (w. Powerpack) you can get a always working version of this, but not bound to Cmd+V. It&#x27;s a bit annoying to set up though> If you go to the Workflows tab, click the [+] in the bottom left, under Templates > Clipboard > you&#x27;ll find a \"Paste as plain text from clipboard\" workflow. Add your own hotkey, and you&#x27;ll be able to do exactly what you need https:&#x2F;&#x2F;www.alfredforum.com&#x2F;topic&#x2F;10032-clipboard-hotkey-tha...There is a multitude other tools recommended in this thread also. The one thing I would recommend for those who does not have any clipboard tool is don&#x27;t just get something that does plaintext. Get something that does HISTORY and plaintext conversion.Clipboard History&#x2F;Search is among my top 10 productivity enhancements hacks that anyone can do and benefit from, might even be the nr 1.Whoever championed it at Microsoft and managed to get it included by default in Windows 10 (Press Win+V) deserves a medal. reply mrweasel 17 hours agoprevNeat, but the whole interface for managing keyboard shortcuts is pretty terrible in macOS. Either they really don&#x27;t want you to mess with it, or it&#x27;s just really hard to design for. reply Wowfunhappy 17 hours agoparentI actually think it&#x27;s quite brilliant? One of the best things still in macOS. reply krackers 5 hours agoparentprevWait until you find out about the _other_ hidden mechanism to configure keyboard shortcuts that can send arbitrary objective-c selectors. reply troupo 17 hours agoparentprevDon&#x27;t give them any ideas. It&#x27;s a leftover from a bygone era when people at Apple cared about people using their computers. reply Brajeshwar 17 hours agoprevI have a different opinion. I try to be familiar with the Defaults and preferably stay with Native Apps to get things done. Once you are comfortable with the Default, you layer your expertise and experience on top of it.So, when I set up or re-set up the OS and the app, I try to see if I can live with the Defaults as much as possible. However, I spend quality time learning the details, so I’m not just jumping to a different App that does it better.Example. I’ve been using Apple’s Default Mail App and have tried a lot of other Mail clients. Some are awesome; some are fantastic. I learned all the shortcuts and tricks to make it sing to any tune I wanted. My Apple Mail does not have toolbars or anything else except the message list and the message[1]. It’s a similar setup for many other default Apps.I did love Fantastical, SuperHuman, etc. I might even use them, but that would be to separate an entity (say, work) but not for the Default Me. I love the idea of using any computer&#x2F;device&#x2F;system easily instead of one perfectly.So, for the copy-paste without formatting. I suggest letting the Default be. I know the shortcuts sideways, and my muscle memory kicks in to do the correct one. I love Obsidian pasting it as Markdown when I copied HTML, but my fingers do the right job for pasting in the un-styled format in Apple Notes.1. https:&#x2F;&#x2F;cdn.oinam.com&#x2F;img&#x2F;oinam&#x2F;brajeshwar-apple-macos-mail-... reply ghusto 17 hours agoprevI&#x27;ll just leave this here:https:&#x2F;&#x2F;sindresorhus.com&#x2F;pure-paste reply porridgeraisin 9 hours agoprevOn linux X11 this is done with \"targets\". So essentially your browser, or any app, exposes a few different varieties of the same content e.g text&#x2F;html as well as text&#x2F;plain. If the app you paste into, requests text&#x2F;plain, then you will get it without formatting.In fact even file copying is done this way, it copies the list of filenames as type application&#x2F;file-list or something of the sort. reply Tagbert 16 hours agoprevBoth Mac OS and Windows started with a mostly single-app interaction model. Switching between applications was slow and clumsy so it wasn’t something that you did frequently.Within an app, copy and paste with styling makes sense as you are trying to reproduce chunks of text.Easy multi-tasking only came later after default were established. reply Sloppy 10 hours agoprevThe consensus seems to be: - Cmd-v should paste to match formatting everywhere. No one wants that formatting or if they do they are in a tiny minority that can be served with some new shortcut. - there are several more or less cheesy ways to fix this in more or less placesSo Apple, retire it with the silly touch bar, push really hard click, and the lightning connector. Maybe these devs would be happer making touch text editing more than awful. reply wintermutestwin 6 hours agoparentThe “push really hard click” is one of the things that makes the apple track pad feel so great. It is a tactile feeling that is not easy to do by accident.The touchbar would have been cool if it was a rock solid implementation that never bugged out.And yeah, lighting can’t die fast enough. reply backtoyoujim 18 hours agoprevi have always pasted into the url&#x2F;searchbar of firefox and select all and copy out of that for the same effect. reply ghusto 17 hours agoparentI have a present for you then: https:&#x2F;&#x2F;sindresorhus.com&#x2F;pure-paste reply wintermutestwin 6 hours agorootparentOMG! This guy also made Command X. Apple makes things so much harder because they think they are making it easier for grandma. reply janandonly 17 hours agorootparentprevWhere have you been all my life? reply ghusto 17 hours agorootparentI felt the same way when I found it :) His other stuff is worth checking out too reply xwowsersx 17 hours agoprevI believe cmd + shift - v also pastes without formatting and I&#x27;ve always used that. I didn&#x27;t know you could change cmd - v to do that so I will be doing this. reply Timothycquinn 17 hours agoprevI don’t recall paste w&#x2F; formatting ever working well. IMHO, the OS’s should allow for some global config for default for Ctrl-v, Ctrl-shift-v. reply elashri 17 hours agoprevIt was a very long time since I trained my mind on automatically pasting what I copy into sublime text and then it from there so that I don&#x27;t get formatting preserved. I do this for anything more than two words&#x2F; not numbers. I don&#x27;t even know which was the offender (windows or mac). reply sails 18 hours agoprevNot to mention the mess that is pasting between Notion, Slack and Gsuite. Especially between the first two. reply davelondon 10 hours agoprevThis is great! I&#x27;d love the same for iOS. reply mkerrigan 17 hours agoprevI have been using [Jumpcut](https:&#x2F;&#x2F;github.com&#x2F;snark&#x2F;jumpcut) for this purpose. I have it bound to ctrl cmd v, so it doesn&#x27;t conflict with the normal cmd v reply marcomourao 12 hours agoprevI&#x27;ve been using TextExpander for this behaviour for a long time. I remapped my \"§\" (ISO-PT keyboard) key to paste as simple text. reply nusuth31416 16 hours agoprevI spend many happy hours copying, changing, and pasting text to Ms Word documents on Windows. Eventually, I am using the middle mouse button to paste without format, and ctrl-v to paste with format. (Using X-mouse button control) Power toys has a setting that says it pastes as text too, but if I ask it to use ctrl-v, it gives me an warning saying that there may be issues if I want to paste a picture. reply herunan 18 hours agoprevWhy do this when you can have both options?- Cmd-V: with styling- Cmd-Shift-V: without styling reply ajmarsh 18 hours agoparentExcept for all the apps where it&#x27;s \"command shift option V\" which is like trying to deliver a Vulcan nerve pinch. reply baggy_trough 18 hours agoparentprevBecause Cmd-V should be \"without styling\" since that&#x27;s the non-landmine option that is almost always what you want. reply thebigspacefuck 9 hours agoprevI use shift+command+v, sometimes I want to paste with formatting reply tfang17 10 hours agoprevOn iMessage, this causes images to be pasted twice reply jbverschoor 14 hours agoprevJust use cmd-shift-v? reply s09dfhks 17 hours agoprevDoes anyone have a handy defaults write command to do this from the terminal reply ghusto 17 hours agoparentNo, but for me this is better :) https:&#x2F;&#x2F;sindresorhus.com&#x2F;pure-paste reply aaron465 16 hours agoprevOh my god yes! Who TF even invented paste with formatting?! reply robbywashere_ 6 hours agoprevThe futility of apple features you can&#x27;t control. reply hanslub42 14 hours agoprevOn X11: xsel -o -bxsel -i -b reply zpeti 18 hours agoprevPasting with formatting is one of the rare UX things that Apple gets so damn wrong.Unbelievable how frustrating it is, almost on par with autocorrect correcting the same word twice after I typed it out twice.I mean for ducks - I mean ducks, no ducks sake… reply brookst 18 hours agoparentAlso the nondeterministic and possibly causality-violating behavior of capitalization during typing, autocorrect, and backspacing.Once autocorrect decides a word is capitalized, the keyboard will always do exactly the wrong thing when you try to fix it. You’ll backspace to the first letter, and the shift key will highlight so you capitalize some non-capital word. Or, having been burned by this, you’ll tap shift to turn that off, but it guessed you would do that, so you’re still capitalizing. And if autocorrect changed a name to a common word, good luck capitalizing the name.There is a PhD, and possibly a new branch of physics, to be had here. reply duxup 18 hours agoparentprevPasting with formatting seems to be the default in Windows &#x2F; windows apps too last I used it. reply Isthatablackgsd 18 hours agorootparentThat&#x27;s why I uses Ditto Clipboard Manager in Windows. I have it set to use paste without formatting (paste in plain text) as default.I recalled Windows can do it by using Ctrl+Shift+V which paste without formatting. Just a extra key to make it happen. reply brookst 18 hours agorootparentprevYes, I keep Notepad open just to bounce copy&#x2F;paste off of to strip formatting. reply velcrovan 18 hours agorootparentprevYeah this is not a Mac-only thing. reply 1000100_1000101 18 hours agorootparentprevYup, and whether paste without formatting is ctrl-shift-v, ctrl-alt-v, or not available varies app by app. It&#x27;s infuriating. reply narag 18 hours agoparentprevTell me that it&#x27;s possible to disable autocorrect, isn&#x27;t it? reply elashri 17 hours agorootparentYes you can. [1][1] https:&#x2F;&#x2F;support.apple.com&#x2F;en-qa&#x2F;guide&#x2F;mac-help&#x2F;mchlp2299&#x2F;mac reply truculent 18 hours agoprevThe only case where this is annoying is in applications like Keynote, where pasting individual elements without style is not what you want. Infuriating stuff either way. reply Wowfunhappy 18 hours agoparentYou can add a separate App Shortcut for Keynote, where ⌘V is set to Paste. App Shortcuts override global shortcuts.I love the Mac keyboard shortcut system. It&#x27;s so brilliantly flexible. reply zephrx1111 17 hours agoprevHow to copy paste image? reply baggy_trough 18 hours agoprevThis is the rare case of Microsoft Word behavior leaking into macOS with predictably terrible results. reply layer8 18 hours agoparentNo, see https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=38142158 for the bigger picture.And Microsoft Word actually provides menus both before and after pasting allowing to choose how the styling of the pasted content should be handled. reply Someone1234 17 hours agoparentprevMacWrite on the Macintosh in the mid-1980s supported copying [some] format information like bold&#x2F;italics. Word did introduce more complex format information (RTF) in the early 1990s but both Microsoft and Apple advanced this area with arguably Apple themselves originating it. reply flenserboy 14 hours agoparentprevStill trying to understand why even the unformatted text option in Word often doesn&#x27;t produce unformatted text — I&#x27;ve seen too many times where column & margin information carries along even when font styling does not, & there&#x27;s no good way to get rid of it without starting an entirely new Word document. reply kmonsen 18 hours agoprev [–] Is this why it’s so annoying to copy and paste in the terminal on Mac? reply Tagbert 16 hours agoparent [–] No, terminal doesn’t use text styling.What problems are you seeing with terminal? Copy&#x2F;Paste work fine for me. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Scott Swezey provides a method for pasting unformatted text on macOS systems through the creation of a custom keyboard shortcut in the macOS settings App Shortcuts menu.",
      "He warns this solution may not be effective with all applications.",
      "Swezey also discusses the concept of \"buying time,\" a communication skill, and shares coding specifics for individual programs."
    ],
    "commentSummary": [
      "Scott Swezey suggests a method to paste unformatted text on macOS by creating a custom keyboard shortcut in the App Shortcuts menu.",
      "The method may not be applicable across all applications, as noted in the blog post.",
      "Aside from technical advice, Swezey also discusses the concept of \"buying time\" as a communication skill and provides codes for certain programs."
    ],
    "points": 197,
    "commentCount": 140,
    "retryCount": 0,
    "time": 1699108277
  },
  {
    "id": 38141173,
    "title": "Revival of KDE Desktop Cube Effect Among Key Open-Source Desktop Developments",
    "originLink": "https://www.phoronix.com/news/KDE-Wayland-Color-Mgmt",
    "originBody": "ARTICLES & REVIEWS NEWS ARCHIVE FORUMS PREMIUM CONTACT CATEGORIES Show Your Support: This site is primarily supported by advertisements. Ads are what have allowed this site to be maintained on a daily basis for the past 19+ years. We do our best to ensure only clean, relevant ads are shown, when any nasty ads are detected, we work to remove them ASAP. If you would like to view the site without ads while still supporting our work, please consider our ad-free Phoronix Premium. KDE Desktop Cube Effect Returns & Plasma Wayland Per-Screen Color Management Written by Michael Larabel in KDE on 28 October 2023 at 07:01 AM EDT. 41 Comments KDE developer Nate Graham is out with his usual weekly recap highlighting all of the interesting accomplishments for this open-source desktop for the past week. But with not having posted last weekend, this edition highlights the many achievements made by the KDE camp over the past two weeks. There's been a lot happening in the KDE world as the developers prepare to wrap up October. Some of the latest KDE highlights include: - KDE Plasma Wayland now supports per-screen color management. Assigning ICC color profiles to each screen will now work correctly under KDE on Wayland. - The KDE Desktop Cube effect has returned via the kdeplasma-addons repository. Here's the screenshot shared by Nate that will surely bring back Compiz/Beryl memories for long-time Linux users: - Many small UI improvements to KDE Discover. - KFontView now works as expected on Wayland. - KRunner's \"Recent Documents\" runner is enjoying more than twice the performance as previously. - Fixing a case where when logging into Plasma Wayland it would cause KWin to crash immediately and return to the log-in screen. - Fixing the most common crash in Plasma that could happen when closing notifications. - Many other bug fixes. More details on these KDE changes via Nate's blog. 41 Comments Related News KDE Plasma 6 Alpha Approaches Next Week With The Soft Feature Freeze KDE KWin Preparing Preliminary Support For Running HDR Games KDE 3.5 Fork Trinity Desktop 14.1.1 Released File Searching On KDE Plasma 6.0 To Use Less CPU Resources & Better Usability KDE Plasma 6 Has New Role For \"F10\", Kate/KWrite Text-To-Speech & Smooth Scrolling KWin Replaces KScreen For Handling Monitor Arrangement Under KDE Plasma Wayland About The Author Michael Larabel is the principal author of Phoronix.com and founded the site in 2004 with a focus on enriching the Linux hardware experience. Michael has written more than 20,000 articles covering the state of Linux hardware support, Linux performance, graphics drivers, and other topics. Michael is also the lead developer of the Phoronix Test Suite, Phoromatic, and OpenBenchmarking.org automated benchmarking software. He can be followed via Twitter, LinkedIn, or contacted via MichaelLarabel.com. Popular News This Week Six Great Features With The Upcoming Linux 6.6 Kernel Bcachefs Merged Into The Linux 6.7 Kernel KDE Desktop Cube Effect Returns & Plasma Wayland Per-Screen Color Management Intel Itanium IA-64 Support Removed With The Linux 6.7 Kernel Linux 6.7 Reworks PE Header Generation To Reduce Attack Area Bcachefs Pull Request Submitted For Linux 6.7 Some Of The Features You Can Expect With Linux 6.7 Btrfs Picks Up New Features For Linux 6.7 Latest Linux News Blosc Compressor Adds AVX-512 Bitshuffle: 20% Faster Compression For Zen 4 X3D CPU Linux 6.7 Boasts Some Scheduler Improvements & Intel IBRS Mitigation Change Mesa's Rusticl Adds cl_khr_gl_sharing For Advancing OpenGL/OpenCL Interoperability New AMD & Intel Sound Support Ready For Playback In Linux 6.7 Mesa 24.0 Improving Radeon VCE/UVD Video Encoding Quality Linux 6.7 Reducing The Roles For Some Insecure/Obsolete Crypto Algorithms KDE Plasma 6 Alpha Approaches Next Week With The Soft Feature Freeze After A Delay, ISA Drivers Will Be Kept Around Until FreeBSD 15 Intel Updates Its Packaged Arc Graphics Driver For Ubuntu KVM Virtualization With Linux 6.7 Adds LoongArch, Up To 4096 x86 vCPUs Show Your Support, Go Premium Phoronix Premium allows ad-free access to the site, multi-page articles on a single page, and other features while supporting this site's continued operations. Latest Featured Articles Trying Out & Benchmarking Bcachefs On Linux 6.7 AMD Announces Zen 4C Cores Coming To Ryzen Laptops Intel Core i5 14600K & Intel Core i9 14900K Linux Benchmarks Google Cloud C3D Shows Great Performance With AMD EPYC Genoa Intel's Open-Source Compute Runtime Performing Increasingly Well Against NVIDIA's Proprietary Linux Driver Support Phoronix The mission at Phoronix since 2004 has centered around enriching the Linux hardware experience. In addition to supporting our site through advertisements, you can help by subscribing to Phoronix Premium. You can also contribute to Phoronix through a PayPal tip or tip via Stripe. Phoronix Media Contact Michael Larabel OpenBenchmarking.org Phoronix Premium Support Phoronix While Having Ad-Free Browsing, Single-Page Article Viewing Share Facebook Twitter Legal Disclaimer, Privacy Policy, CookiesContact Copyright © 2004 - 2023 by Phoronix Media. All trademarks used are properties of their respective owners. All rights reserved.",
    "commentLink": "https://news.ycombinator.com/item?id=38141173",
    "commentBody": "KDE desktop cube effect returnsHacker NewspastloginKDE desktop cube effect returns (phoronix.com) 186 points by leidenfrost 19 hours ago| hidepastfavorite100 comments bloopernova 19 hours agoOh boy that&#x27;s a blast from the past.I really liked the Compiz Fusion cylinder effect with windows 3D hovering, I used that effect for both alt-tab and virtual desktop switching.It looked something like this, although I&#x27;m pretty sure mine was anti-aliased more effectively: http:&#x2F;&#x2F;4.bp.blogspot.com&#x2F;-NPnXddu4LL4&#x2F;UPRszBHQynI&#x2F;AAAAAAAAAU...Now I just use 3 monitors (| - - is a great layout, highly recommended) and switch windows using what was called Exposé and is now called Mission Control on macOS. I miss the experimentation; wobbly windows, flames, all sorts of zoom effects, and edge attraction effects. reply MegaDeKay 19 hours agoparentEffects like Wobbly Windows and Magic Lamp are still in KDE waiting for you to come back :-) Those are built in, and more effects are available for download from the settings window at the click of a button.I really appreciate the sense of whimsy that comes with stuff like this. Best of all, it is there if you want it and not if you don&#x27;t. reply CSSer 18 hours agorootparentHow about the window going up in flames on close? reply tekeous 18 hours agorootparentWe have that too, it’s called BurnMyWindows in the KDE effects repo reply CSSer 18 hours agorootparentThat’s such a blast from the past. It may seem frivolous, but it’s funny what draws a kid in. I spent a lot of time in middle school fussing with drivers to get hardware acceleration to run on crappy secondhand laptops, all so I could play with the cube, wobbly windows, and the flame effects. I had no idea it was doing this at the time, but it helped familiarize me with POSIX concepts that later gave me a jumpstart on my career. reply silisili 9 hours agorootparentprevFor anyone curious, all this is available on Gnome as well via extensions. reply Vinnl 17 hours agoparentprevFor those on Linux (on GNOME and KDE, at least), experimentation is still alive and well in https:&#x2F;&#x2F;github.com&#x2F;Schneegans&#x2F;Burn-My-Windows#readme. reply pantalaimon 16 hours agorootparentYou can still use Compiz with Mate to this day reply mike_hock 33 minutes agorootparentAnd it still crashes occasionally, so you have to set a fallback WM and be prepared to run compiz --replace again when the windows stop wobbling. reply dkersten 18 hours agoparentprevI used to use the “cube” but with six or seven sides (so whatever a hexagonal or septagonal cylinder is called), with the faces being transparent so you can see the windows floating in the background.Nowadays I use an open laptop with two external monitors, with the laptop out to the left, my largest monitor in landscape in the center and a portrait monitor to the right: - —reply stavros 18 hours agorootparentI will never understand people who have a landscape monitor as their main. The only thing landscape is good for is videos, everything else is portrait (including many videos).The only semi-reasonable excuse I&#x27;ve heard is that people use a landscape screen as three or four portrait screens (so four windows side by side on it), but then just get a portrait screen and split it four ways also.You can pry my- from my dead fingers. reply runjake 17 hours agorootparentI use landscape monitors because it effectively allows me to have two portrait arrangements side by side on one screen.Also a vertical monitor is terrible on my neck. Humans necks are designed to look down but not up above eye level for extended periods.I learned this after extended discussions with a neurosurgeon on what the most common neck and brain injuries are, and what I could do or not do to best avoid seeing her.That said, we are all different. Use what you prefer! reply stavros 17 hours agorootparentYou&#x27;re right, I have the screen much lower than eye level (because I basically lie back on my chair), but this is generally good advice. reply tedunangst 16 hours agorootparentprevI find my laptop slides around too much when I&#x27;m trying to type with it on its side. reply kadoban 16 hours agorootparentprevThere&#x27;s a limit to how far up and down it&#x27;s comfortable to look for long periods of time. That limit, in most desk setups, is pretty much the height of the top of a landscape monitor. Once you reach that you might as well just have a wider monitor to be able to see multiple threads of work at once. reply jwells89 14 hours agorootparentWith large 16:9 monitors in particular this is a problem. 16:10, 5:4, 4:3, 3:2, etc would all work better in portrait displays. reply rgoulter 17 hours agorootparentprevThis idea sounds nice. How big is your monitor?I just tried turning my monitor vertical. My initial impression is this left me with very little space with which to read text; and felt like it&#x27;d hurt my neck if I were to look up to the top of the monitor. I did get to see more content vertically. (A bigger monitor would alleviate the former but exasperate the latter). reply wongarsu 13 hours agorootparentI use a 24\" 1440p screen. On a 1080p monitor (or 4k at 200% scaling) there isn&#x27;t a lot of width left if you turn it, and if you go for more pixels than 2560x1440 (at 100% scaling) the text gets too small on a 24\". reply stavros 17 hours agorootparentprevIt&#x27;s 24\", I found that anything larger than that was a bit too large. reply ashton314 17 hours agorootparentprevUnless you have a super high DPI display (which in this day and age you probably do) rotating the screen breaks sub-pixel antialiasing, which makes text look blurrier. reply thomastjeffery 16 hours agorootparentOnly if something is broken in your configuration. You should be able to set the subpixel layout. Sure, the subpixels will be divided vertically instead of horizontally, but it should still help. reply kstrauser 17 hours agorootparentprevIs that a given? I don&#x27;t think there&#x27;s an inherent reason why the font rendered couldn&#x27;t anti-alias vertically instead of horizontally. reply arcanemachiner 17 hours agorootparentprevI use a 43\" 4K TV as a monitor. It completely fills my visual field, and I cannot turn it sideways.I hope this comes across as a semi-reasonable excuse. reply scott_w 17 hours agorootparentprevI don’t need an excuse. I just like it. reply perryizgr8 17 hours agorootparentprevMy monitor is primarily a gaming monitor. As such it&#x27;s stand does not allow for rotation to portrait. reply arcanemachiner 17 hours agorootparentDoes it have holes for a VESA mount on the back? reply quietbritishjim 17 hours agorootparentprev> so whatever a hexagonal or septagonal cylinder is calledIn case you&#x27;re interested (probably not!), the word you&#x27;re looking for is prism e.g. hexagonal prism or heptagonal prism. reply twicetwice 18 hours agorootparentprevI have settled on exactly the same setup! It&#x27;s pretty great. My right-hand monitor is a terminal 24&#x2F;7. My center monitor is code—I used to think I&#x27;d want vertical for code, and it is nice sometimes, but at my current job I benefit from having several files open side-by-side more than I benefit from seeing more of one file. It&#x27;s a 4k monitor and I have it fractionally scaled so that I can read comfortably, but I can also fit up to four files side-by-side on the screen at once. It is very useful. And then the laptop screen is for Slack, docs, AWS dashboard, whatever is useful at the time. reply ruined 17 hours agoparentprevkororaa gang. got me into gentoo.i had a 21in viewsonic crt that was factory specced to 1600x1200, but kororaa would default to overdrive at 1856x1392. it had a bit of trouble with focus at that rez - the field was curved, and the screen was flat. i could have perfectly sharp edges, or a perfectly sharp center, but either way it was sharper than the factory max. i dumped the modelines and carried them with me in my heart. don&#x27;t think i had that much vertical resolution again until i picked up my first 5k display in 2019. reply lloydatkinson 17 hours agoparentprevUnfortunately experimentation, at least at organisations, has been optimised out of existence by a combination of shareholder interests and agile cultists. reply kelsey9876543 19 hours agoprevI remember how much I loved compiz and beryl in high school, my classmates always enjoyed watching me do assignments. I remember it becoming increasingly difficult to make work with OS releases and it forced me to just adopt a \"normal\" workspace based workflow, a 3 by 3 flat grid instead of the many sided cubes and shapes I used for compiz. I stayed on gtk2 longer than most people via mate, but now I mostly use Mac os with a flat 11 workspaces and it feels so limiting. I wish I could use a 3x3 workspace layout instead of a flat row of workspaces. reply qup 17 hours agoparentI can only really use two these days, although one of them is cheating --it&#x27;s a terminal running tmux with four windows. But I would replace tmux with four terminals which would go on two workspaces (2 each).The other is my browser, of course.I was a full time developer working like this. Tmux was my workspace killer, but of course not everyone works in a terminal.But I still gotta ask, how are you making use of 11 workspaces? reply snvzz 17 hours agorootparentI use 10, with i3 as window manager.I keep the most frequent ones at 1-4, as these are easiest to hit with left hand via meta+numeric row. reply filereaper 10 hours agorootparentSame, 10 split over 3 monitors using the keypad to switch them independently on each monitor.I&#x27;ve gotten so used to it that muscle memory kicks in inadvertently for other desktop environments. reply yjftsjthsd-h 17 hours agorootparentprevI use 4-8 at a time by using one per task or activity type. So one for my main web browser, one per project I have going, one to throw tools like volume controls, another for each additional web browser profile. reply bandrami 16 hours agorootparentprevTerminal, Browser, Patchbay, Sequencer, Sampler, Synth, Mixer, Arranger, Text Editor, Blank Desktop. That&#x27;s 10 (on Windowmaker) and I could easily add a couple more. reply kossTKR 17 hours agorootparentprevI easily use 9 as a full stack dev.1) Coding apps2) Dev browsers3) Terminals4) Sql &#x2F;DB apps5) FTP&#x2F;File handling apps6) Non work browsing &#x2F; leisure7) Specs and text8) Graphics &#x2F; Figma &#x2F; Ps9) Music &#x2F; podcast playerOnce this is setup with shortcuts it becomes super fast to switch to DB-stuff, or terminal windows etc. reply o11c 16 hours agorootparentI use 12, though if I&#x27;m using them correctly many are usually empty. I assign custom visible labels, for which I use just a single letter. Also I am very familiar with the custom shortcuts to switch desktops or move a window between them; I use the wrap-between-rows shortcuts for the left-right ones. On occasion, I&#x27;ve found that many non-KDE environments are very primitive, often supporting only a single row and not even wrapping around the ends!There&#x27;s significant overlap compared to yours but I don&#x27;t quite all of the dedicated app types you do. One thing I will note is that I don&#x27;t have a desktop for music - I use VLC and collapse it to the systray (I&#x27;ve tried other players, but kept finding audio files that would break them, and also it was often tricky to make global keyboard controls work).Column 1:I = internet, for general-purpose browsing that doesn&#x27;t fit elsewhere.A = application, for programs (including) that don&#x27;t fit elsewhereR = reading, for blogs and stories, assuming they don&#x27;t fit better elsewhereColumn 2:C = code, D = debug (or was it documentation? I admit I&#x27;m sloppy within a column), E = ... I don&#x27;t remember, but basically I use it if I need a third virtual desktop for code-related stuffColumn 3:G = games, H = help (usually a wiki or walkthrough), J = journal (a place for me to record my own notes, since most games don&#x27;t provide a builtin way to do that, and even if they do their primitive text editor usually sucks)Column 4:X = extra, Y, Z - in case I need another set. reply kossTKR 17 hours agoparentprevI remember having some mac app that could do this years ago but was abandoned as SIP destroyed many third party extensions.I really want my 3x3 desktops back also!Can it really be there hasn&#x27;t been made an alternative yet? reply t0mas88 19 hours agoprevI liked those effects back in the day, but have to admit I&#x27;ve set my macbook to \"reduce motion\" because it&#x27;s faster to use with most effects disabled.For example alt-tabbing between spreadsheets to look at something while typing in another, the effects just waste your time at every window switch. reply thomastjeffery 16 hours agoparentThe problem is that animations happen before the transition instead of after.I would love to see more desktop animations that happen after a change. One idea I have is to make some waves around the window you alt-tabbed to. reply KeplerBoy 18 hours agoparentprevSame goes for (Android) phones. If your phone ever starts to feel sluggish, just turn down animation durations. reply jwells89 18 hours agoprevThe first place I saw effects like this was in OS X 10.4 Tiger, where fast user switching (switching users without logging out logged in users) utilized a rotating 3D cube transition a lot like the desktop cube (just without gaps on the cube edges and the camera looking straight on instead from an upper angle).I thought it was a bit of a brilliant metaphor for multiple users, with each user’s desktop representing a different “face” of the computer, and switching users is an infrequent enough of a thing that the effect doesn’t become grating. It’s a bummer they removed the effect a few releases ago.Full-on compiz effects with burning windows and all isn’t quite my thing, but I think that modern desktops would benefit a lot from judicious usage of “fancy” animations that go beyond the bog standard fade and scale effects. If designed well they can communicate a lot to users. reply seltzered_ 19 hours agoprev\"Here comes the hotstepper...\"( see https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=29798448 for context linking to a popular video https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=xC5uEe5OzNQ from 2007 demoing some cube effects alongside burning windows and such.) reply yellow_lead 16 hours agoprevI&#x27;m looking forward to Plasma 6, which also fixes night color mode on Wayland. Have to wait a few months though.> Plasma 6 is built on top of Qt 6 and is scheduled to be released in early February 2024. This page outlines important information and major changes coming in Plasma 6. reply ognarb 18 hours agoprevOriginal source for this news: https:&#x2F;&#x2F;pointieststick.com&#x2F;2023&#x2F;10&#x2F;27&#x2F;these-past-2-weeks-in-... reply 7thaccount 18 hours agoprevRotating cube!! I remember playing with this 15 years ago on KDE. Unfortunately I only used Linux for hobby reasons, so I never had many tabs or applications open often enough to really make use of it.Does Windows finally have this rotating workspaces and maybe I&#x27;m just not aware? reply joshuaissac 17 hours agoparent> Does Windows finally have this rotating workspaces and maybe I&#x27;m just not aware?There used to be a Windows program called Yod&#x27;m 3D that did this.https:&#x2F;&#x2F;lifehacker.com&#x2F;download-of-the-day-yodm-3d-windows-2...https:&#x2F;&#x2F;m.youtube.com&#x2F;watch?v=CLulkmwvwis reply 7thaccount 15 hours agorootparentThanks. I use Windows for work, so it&#x27;s not worth the effort trying to get this type of thing past the IT folks. reply khobragade 18 hours agoprevPeople on Gnome, try this rn it&#x27;s great fun https:&#x2F;&#x2F;extensions.gnome.org&#x2F;extension&#x2F;4648&#x2F;desktop-cube&#x2F; reply filereaper 10 hours agoprevSort of related but if anyone wants to step into a time-machine when Compiz&#x2F;Beryl were the eyecandy there&#x27;s this video from 17 years ago...https:&#x2F;&#x2F;youtu.be&#x2F;lawkc3jH3ws?si=l6yu98DEnSxdZFRu reply spandextwins 19 hours agoprevYay! Haven&#x27;t been able to use that since around 10 years ago! Welcome back, friend! reply tomrod 19 hours agoprevI have always loved this effect and was sad when I had an OS thst didn&#x27;t support compiz.Yaye! reply snvzz 19 hours agoprevIt is just added latency for questionable benefit.OTOH, it could actually be helpful to conceptualize the idea of virtual desktops.Once already used to virtual desktops, the cube becomes cruft. reply CSSer 18 hours agoparentI find it easier to maintain mental conceptions of three dimensional objects in my current working memory than I do a series of flat planes. I feel that we’re wired that way.Take macOS as an example. The current space is shown as the largest view, which is silly because you’re already on it. The other spaces are shown as little thumbnails you can hardly see the contents of. You can either slide between spaces one at a time or click. In the cube, each face is the same size, you can see the backside of each window and you can view each window’s contents from an angle. It’s the same reason a book is easier to flip through than a Kindle.I really wish we could shake this strange obsession with minimalism and return to embracing skeuomorphic representations. Computers should adapt to us, not us to them. We have insane transistor counts and memory density at our disposal. Why shouldn’t we take advantage of that to provide even questionable benefits, as you put it, to our user experience? reply kaba0 18 hours agoparentprevAnimations have a useful role - they provide often necessary visual cues on the context. For example, randomly jumping in a text page won’t tell you where you are now in relation to the previous position. Scrolling through does. reply Narishma 17 hours agorootparent> For example, randomly jumping in a text page won’t tell you where you are now in relation to the previous position.That&#x27;s what scrollbars used to be good at, before they were dumbed down for dubious aesthetic reasons. reply rgoulter 17 hours agorootparentprevRight.On Gnome, when I switch left&#x2F;right between virtual workspaces, the animation provides some indication of the switch.When I tried xfce, there was no animation, it didn&#x27;t feel like an improvement.Perhaps this is down to preferences. reply snvzz 17 hours agorootparentprev>Scrolling through does.Yet \"smooth scrolling\" is latency, and to most who are already used to scrolling, it is extremely unpleasant.When one does scroll (i.e. move the viewport of a larger screen that&#x27;s being presented through the inside of a window), it is because one wishes to already be seeing the target position.Any latency through added animation destroys the illusion.I quickly close any webpage that forces that strong discomfort upon me. And switch away from any application that does it against my wishes. reply jwells89 14 hours agorootparentThough “smooth scrolling” that interpolates between detents is a considerably different creature than “smooth scrolling” that tracks touch and has inertia resulting from it. The former is like nails on a chalkboard whereas I find tracking&#x2F;inertial scrolling quite pleasing with how it lets one use muscle memory to “fling” the page to a particular point with decent accuracy. reply mrob 17 hours agorootparentprevIt&#x27;s useful the first few times, and annoying time wasting all the thousands of times after that. Animations should only be included if there&#x27;s an easy way to turn them off. reply kaba0 17 hours agorootparentHow is that 20ms, or even less constitutes waiting? reply mrob 16 hours agorootparentI&#x27;ve never seen a UI animation that quick. Most UI animations are hundreds of milliseconds. And even if somebody did make one, it would still be annoying. Even a little latency is enough to break the sensation that the computer is part of my own body, and instead make it feel like a third party I&#x27;m commanding. reply hnlmorg 15 hours agorootparentI can’t see I’ve ever felt like a computer is part of my own body. And I’ve been writing software for close to 40 years. reply Noneofya 30 minutes agorootparentEither you’ve been using only crappy computers&#x2F;software then or you’re not getting what they’re talking about. Do you feel like your car is an extension of your body when you’re driving? Because science showed that’s exactly how humans behave when driving. This is how our brain works with automatic motor functions. reply kaba0 14 hours agorootparentprevLiterally nothing happens instantly in real life, why should it be different with computers? reply mrob 14 hours agorootparentAll hands tools (including common things like pencils and toothbrushes) react to your movement with zero added latency. Computers should be the same. replytssva 18 hours agoparentprev\"It is just added latency for questionable benefit.\"I guess it depends on how beneficial you consider whimsy. I&#x27;ll trade a little efficiency for a little whimsy most days. reply jwells89 18 hours agoparentprevFor virtual desktops I always liked the original animation OS X used for that back in 10.5 and 10.6, where the camera pulled back to show an overhead view of your grid of desktops, including miniaturized versions of all of your windows.It did well to establish the idea that your current desktop was just a portion of a much larger surface, and by switching desktops you were changing the portion you were working in. It also leveraged spatial memory, as many Mac UI features over the years have.The implementation in current versions of macOS, which is your typical linear setup similar that found in GNOME, is harder to conceptualize for users because its animations don’t communicate nearly as effectively, plus by default desktops move around based on frequency of usage which screws with spatial memory. reply selectodude 17 hours agorootparentThere’s very little in current versions of macOS that weren’t better in 10.6. reply JohnFen 18 hours agoparentprevFun is a valuable benefit. reply snvzz 17 hours agorootparentAbsolutely. If you love it, go ahead.I remember I even used it without the switch animation, as the latency irritated me.Just to fiddle by manually grabbing the cube and spinning it, while thinking. reply haolez 17 hours agoparentprevIt depends on the implementation. If the actions don&#x27;t wait for the animation to complete to do work, then you can move ahead of the animations (and maybe they could gracefully merge from one into the next animation). reply Kim_Bruning 17 hours agoparentprevEh, it places your windows in a 3D navigable space, which actually was sort of useful to quickly take in where you were at a glance. So not 100% cruft. reply thomastjeffery 16 hours agoparentprevWhen you already know what desktop you need to go to, then yes.Otherwise, this is a great way to see where you put that window you are looking for. reply hnlmorg 18 hours agoparentprevIt’s fun. That’s benefit alone for a lot of people. reply layer8 17 hours agoprevI always found those effects where you show on a 2D display a 3D view of a 2D UI to be like a weird category error for a GUI. reply vasdae 19 hours agoprevhttps:&#x2F;&#x2F;pointieststick.com&#x2F;2023&#x2F;10&#x2F;27&#x2F;these-past-2-weeks-in-...KDE should pay attention to font families and sizes. This looks really cheap. reply ognarb 18 hours agoparentThe font used in Plasma is Noto Sans and the reason we (I&#x27;m a kde developer) use it is because it has a very large support for all language in the world, which makes it an appropriate default. reply JohnFen 19 hours agoparentprevIt does? It looks great to me: clear and very readable. What&#x27;s cheap about it? Or, alternatively, what would not look cheap? reply graphe 18 hours agorootparentThe fonts look ugly to me as well. As I read the news on the middle east, I was distracted by the beauty of this font.https:&#x2F;&#x2F;www.tabletmag.com&#x2F;sections&#x2F;israel-middle-east&#x2F;articl...It is DISTRACTINGLY beautiful, especially the numbers. I&#x27;d rather have ugly fonts than forget everything but the way the numbers of people looked here. reply JohnFen 18 hours agorootparentHuh. I guess I must be aesthetically impaired. That font doesn&#x27;t look any more or less beautiful to me than the KDE one. It&#x27;s just different. They&#x27;re both fine to my eyes. reply graphe 18 hours agorootparentIt&#x27;s just my opinion. Yours is just as valid. The KDE font looks like a basic font with AA. Both are fine to me too, but this font was distracting to me. As a font it fails to convey as much information to me but I LOVE the text. This site is very SEO written but has great readability although the font I&#x27;d consider ugly, it&#x27;s very usable and functional. https:&#x2F;&#x2F;www.linearity.io&#x2F;blog&#x2F;old-english-font&#x2F; reply sterlind 12 hours agorootparentprevrandom font tangent as an ignorant Westerner, but the Arabic writing system is incredibly beautiful, and there are many incredibly beautiful fonts, yet I often see fonts that look like they&#x27;re welded together from PVC pipes. no slant at all, uniform weight, lots of circular bends. do these look ugly to native Arabic speakers too, or just to my Western aesthetics? reply kingofpandora 36 minutes agorootparentNot an Arab or speaker of any languages that use the alphabet but yes despite it having the potential to be very beautiful, most of the typaces they use are very ugly.This free font is very nice though, and I set it to be the default whenever Arabic needs to be displayed on my computer: https:&#x2F;&#x2F;www.amirifont.org&#x2F;. reply mibsl 18 hours agorootparentprevTo me this one feels cluttered, way too much going on. Definitely distracting, but I wouldn&#x27;t call it beautiful. reply continuational 18 hours agorootparentprevI think the kerning is slightly off, looking at the end of the word \"Their\". reply gumballindie 18 hours agorootparentprevFonts in screenshots do look a bit microsofty (cheap and low quality) to be honest. But fortunately fonts are trivial to install and change in kde. reply JohnFen 18 hours agorootparentWhat qualities about it make is seem cheap and low quality to you? I&#x27;m genuinely curious, because I&#x27;m not understanding this... reply vasdae 18 hours agorootparentIt has absolutely no personality. If you go to a font search engine and look for \"plain\" you probably get that one. reply JohnFen 18 hours agorootparentSure, it&#x27;s plain -- but that doesn&#x27;t seem like a bad thing for a default font in a utilitarian UI. In any case, is it the lack of frills that makes it seem \"cheap\"? reply gumballindie 18 hours agorootparentprevLooks thin and enlarged. Somehow “weak” - i dont know how else to describe it. Not a major issue, and is subjective. When i dont like fonts i just install others, its trivial. reply JohnFen 18 hours agorootparentYes, I agree it&#x27;s a trivial \"issue\". It&#x27;s not even really an issue, especially because it&#x27;s just a default that is easily changed to suit anyone&#x27;s taste. I&#x27;m just interested in getting a glimpse of how others view the world. replythrow555chip 18 hours agoparentprevI like the the way KDE looks and operates, the fonts are clear and easy to read. Please KDE developers keep them as they are, KDE is great! reply jwells89 18 hours agoparentprevYeah, one of the first things I do on a KDE install is to set all the fonts to Inter[0]. It helps a lot but still doesn’t fix KDE’s selection of text sizes and weights which has always felt odd to me.[0]: https:&#x2F;&#x2F;rsms.me&#x2F;inter&#x2F; reply aeonik 17 hours agoprevNixie Pixel was the first person I saw on the Internet that introduced to me this 10+ years ago.Loved that old tricked out desktop.https:&#x2F;&#x2F;youtube.com&#x2F;@NixiePixel?si=YZ3b-gHNAb1_m0Tv reply phendrenad2 17 hours agoprevWow! I thought it would never happen. Good to see some people still value fun in the community. reply boredumb 16 hours agoprevwhat a trip, when i was a young&#x27;n I learned a lot about linux by breaking my display trying to get compiz fusion to decorate my terminals and turn into a cylinder. reply winrid 17 hours agoprevhttps:&#x2F;&#x2F;github.com&#x2F;KDE&#x2F;kdeplasma-addons&#x2F;tree&#x2F;master&#x2F;kwin&#x2F;eff... reply babuloseo 17 hours agoprev [–] yes replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "KDE Developer Nate Graham has spotlighted numerous updates to the open-source desktop over two weeks in a weekly recap.",
      "Updates include the revival of the KDE Desktop Cube effect, individual screen color management for KDE Plasma Wayland, and significant performance enhancements for KRunner's \"Recent Documents\" feature.",
      "Other improvements include the resolution of several bugs, among them crashing issues within Plasma Wayland and Plasma's notifications system. More details can be found on Nate Graham's blog."
    ],
    "commentSummary": [
      "KDE Developer Nate Graham's weekly review announced several advancements for the open-source desktop over two weeks, including the reintroduction of the KDE Desktop Cube effect.",
      "There is a per-screen color management for KDE Plasma Wayland and significant performance enhancement for KRunner's \"Recent Documents\" runner.",
      "Several bugs have been fixed, including crashing problems related to Plasma Wayland and Plasma's notifications. More details can be found on Nate Graham's blog."
    ],
    "points": 186,
    "commentCount": 100,
    "retryCount": 0,
    "time": 1699107231
  },
  {
    "id": 38142606,
    "title": "Exploring Solutions for Increasing Demand for USB-C Power: Atomic14 Highlights High-Capacity Board",
    "originLink": "https://atomic14.substack.com/p/i-need-more-usb-power",
    "originBody": "atomic14 Subscribe Sign in Discover more from atomic14 This is a newsletter for the Atomic14 blog - https://blog.atomic14.com and YouTube Channel - https://www.youtube.com/@atomic14 Sign up to get notified when new content is published so that you never miss out! Subscribe Continue reading Sign in I need more USB power... Everything seems to be USB-C powered nowadays - I need more power on my workbench! CHRIS GREENING NOV 2, 2023 Share You can watch the video here: I seem to have been accumulating a whole bunch of USB powered devices. I’ve got the mini hotplate, a small power supply, and two USB soldering irons! The mini hotplate takes 20 volts and uses around 60W when it’s heating up. The power supply also wants 20 volts. And one of the soldering irons is limited to 12 volts, and the other will use 20 volts. It’s not a massive problem, but I do only have one 65W USB-C supply coming into workbench. I want more, I want much much more! There don’t seem to be any powered USB-C hubs, so I went shopping on AliExpress and eventually came across this nice board: This has four standard USB sockets on the top which all support QC2 and QC3 - these USB testers are really handy - the one I’m using is on AliExpress for around $16! And it’s got four USB-C sockets on the bottom: These support pretty much all the protocols you can think of! Testing out how much current the board can deliver gives us a great result - it can easily do 65 watts! I’m using the MiniWare electronic load for my testing - remarkably compact! For those of you who are interested in what’s on the board, I’ve tried to capture the IC numbers in this picture: There’s a datasheet for the chip here (it’s all in Chinese though!). It’s pretty good though - I’ve now got 4 USB-C supplies on my bench, all of them capable of 65W of power. If you'd like to help support the me and help me buy more nonsense - I have a Patreon page. And there’s a shop for people who like mugs. If you're shopping on AliExpress or Amazon then if you click on the links I will get a little bit of affiliate money You can also join us on Discord here. If you liked this article, why not subscribe? You’ll get notified every time something new is posted. It will normally be some kind of electronics, 3D printing, or weird project… Subscribe And if you like videos on the similar things then the atomic14 channel is definitely worth a visit: https://www.youtube.com/@atomic14 Like and subscribe Please like and subscribe Give me a little smile and a thumbs up ... Share Previous Comments Top New Community New PCB Design - I think this is it... I thought this was the final version yesterday - but then realised I had the SD Card on upside down! OCT 15 • CHRIS GREENING 4 Decoding AVI Files For Fun And... Streaming video from an SD Card on an ESP32 - how hard can it be? This is a bit of a departure - I'm going to post this on the blog (atomic14.com), but… SEP 26 • CHRIS GREENING 2 Blinking Heck! It Works! Nothing better than a working blink sketch... AUG 18 • CHRIS GREENING 1 See all Ready for more? Subscribe © 2023 Chris Greening Privacy ∙ Terms ∙ Collection notice Start Writing Get the app Substack is the home for great writing",
    "commentLink": "https://news.ycombinator.com/item?id=38142606",
    "commentBody": "I need more USB powerHacker NewspastloginI need more USB power (atomic14.substack.com) 160 points by iamflimflam1 17 hours ago| hidepastfavorite161 comments codetrotter 14 hours agoI wish more things were USB-C powered. I am currently traveling and among the things I have with me are two Raspberry Pi devices. One with a touch screen, the other with a 5TiB SATA HDD in an enclosure. One of the RPi devices uses 5V power, the other 12V. Both have the same kind of barrel connector.Guess who arrived at an AirBnB a couple of days ago, tired and just wanting to get things quickly unpacked and set up. And guess who forgot which was which of the 5V and 12V powered device and plugged the 12V power cord into the 5V device.That’s right, this guy :(So now my RPi powered device with the 5TiB SATA HDD does not power on anymore, and for all I know plugging the 12V power supply into it may have even broken the circuit board of the HDD, in which case it will be very expensive to get my data back as HDD circuit replacement is outside of my set of skills.I wish all of these electronic I carry just used USB-C instead. reply sorenjan 14 hours agoparentYou can buy USB-PD trigger boards and make most stuff USB-PD powered. For instance: https:&#x2F;&#x2F;vi.aliexpress.com&#x2F;item&#x2F;1005006068684294.html reply dreamcompiler 9 hours agorootparentCaveat: I bought one of these boards (labeled \"ZYPDE\" \"YZXSTUDIO\") that supposedly had soft programming capability--you hold down a button for the right amount of time and it programs it to produce 5v, 9v, 15v, etc the next time you turn it on. But it never worked. It always came up in a mode where you had to push the button the right number of times to get the voltage you wanted. I like the idea of DIP switches or soldered jumpers much better. reply MaximilianEmel 12 hours agorootparentprevThis one can be more useful in certain situations, because you can much more easily change its configuration on the fly with the DIP switches.https:&#x2F;&#x2F;www.aliexpress.us&#x2F;item&#x2F;3256805068086690.html reply hultner 11 hours agorootparentIsn’t this the reverse? Providing USB-C rather from a power source rather than powering from a USB-C supply. reply LeifCarrotson 9 hours agorootparentNo, the connector you see is the receptacle, not the cable side. USB-C cables are hollow ovals, the tab is on the device.You&#x27;d take this thing or something like it, set the DIP switches&#x2F;solder bridges&#x2F;jumpers appropriately, get a few 2.1x5.5 (or appropriate) barrel jack to screw terminal adapters, wrap it and a couple wires in heat shrink and hot glue it to the back of your HDD&#x2F;RPi&#x2F;etc, and have a USB-C plug to power your HDD adapter. reply stavros 13 hours agorootparentprevWell this is amazing, thanks! Do you know if it can output whatever I want by shorting a jumper, or are these fixed when you get them?EDIT: Oh damn, this doesn&#x27;t do 5V, which is what I need the most :( reply SparkyMcUnicorn 13 hours agorootparentIt looks like you just solder the pads for the maximum voltage you want, and some of the pictures demonstrate what 12v being soldered looks like.And there are definitely 5v options, like these:https:&#x2F;&#x2F;www.aliexpress.us&#x2F;item&#x2F;3256805818718384.htmlhttps:&#x2F;&#x2F;www.aliexpress.us&#x2F;item&#x2F;3256805815622101.html reply stavros 12 hours agorootparentThanks, I ended up buying something very similar to that! reply Goz3rr 13 hours agorootparentprevUSB defaults to 5V, so depending on how much current you want to draw you might not even need a trigger module. reply p1mrx 12 hours agorootparentUSB-C defaults to \"off\", so a 5V PD trigger would be a sensible product. It just needs a couple resistors, no chip. reply Kirby64 11 hours agorootparentThere’s no such thing as 5V PD unless you mean 5V 5A, fyi. PD is an optionally supported standard of USB-C and the resistors are not part of PD, just the standard USB-C spec. reply p1mrx 10 hours agorootparentYou are technically correct, in that using resistors to trigger 5V would fall under \"USB Type-C Current\" rather than \"USB Power Delivery\".But what would you call such a product, other than \"5V PD trigger\"? reply joshspankit 7 hours agorootparent5V USB-C board reply stavros 12 hours agorootparentprevYou&#x27;re right, I guess I might as well just get some straight breakouts for a USB-C for the 5V case, but then I&#x27;ll be limited to half an amp, which is probably fine for my uses, I guess. reply lxgr 11 hours agorootparentUSB-C supports up to 3A without PD, using only (I believe) resistors&#x2F;voltages to communicate the limit.That&#x27;s what many simple early USB-C chargers used to do in order to supply 15W without full PD signalling. reply stavros 11 hours agorootparentI didn&#x27;t realize that, thanks! reply xethos 9 hours agorootparentprevNo, but this is:https:&#x2F;&#x2F;fpx.oxplot.com&#x2F; reply WirelessGigabit 4 hours agoparentprevProblem here is that the connector doesn&#x27;t mean everything: https:&#x2F;&#x2F;community.ui.com&#x2F;questions&#x2F;AI-THETA-USB-cable-Hub-to... reply NullPrefix 3 hours agorootparentThe links says:>This part of community is for Early Access Users reply trvz 10 hours agoparentprevTo be fair, this is fully on you.Raspberry Pi boards already come with USB-C; you shouldn&#x27;t have chosen to downgrade that with barrel plug cases. reply marci 7 hours agorootparentI think they were probably using ready made kits. And most Raspberry pi models don&#x27;t have USB C. It was introduced with V4. reply codetrotter 6 hours agorootparent> probably using ready made kitsYep reply joshspankit 7 hours agoparentprevIn addition to the PD trigger boards, you can actually get short cables with USB-C ports on one end and barrel jacks of specific voltages. I use a 12V one for my soldering iron (love it) and have a couple 5V ones for various networking gear.No DIP switches, no ability to change what they output, just rock-solid functionality assuming you can get the exact tip you need for your device you probly can from aliexpress).One caveat: In my experience all these things (cable and PD boards alike) will output 5V if the charger does not support whichever voltage (5V when you want 9V, 12V, or 20V, for example). I’d much rather they put out nothing in those cases. Hopefully the next generations will. reply jeffbee 13 hours agoparentprevSomething that should go USB-PD is electric bicycles. reply 0_____0 11 hours agorootparentBattery pack that big will be better served by a larger connector for power (500Wh battery can sink more than basically any USB-C source can supply),But the big reason is it&#x27;s just a big object, and using a little tiny wire and plug on a big object that can fall over is just asking for damage. There&#x27;s a reason 120V plugs are the size they are, and it&#x27;s not ampacity. Big connectors for big objects. Small connectors for small objects.That being said a dual role sink -source controller on a motorized bicycle battery pack would be super convenient for charging phones on the go etc reply jeffbee 9 hours agorootparentWell, at this time every e-bike battery has a one-off charger, at best shared with other models of the same brand. It would be cool if they were a little more uniform. That would make it easier to host e-bikes in the bike room of an office or apartment building. reply 0_____0 8 hours agorootparentI think you&#x27;re correctly observing that there&#x27;s a hole in the available smart charging specifications around the power levels needed for motorized bikes. USB-PD is perfect for most small devices, electric cars and larger have their own protocols, but 0.5-1 kWh batteries are left in the cold. (xkcd 927:1-3) reply jjeaff 11 hours agorootparentprevUSB PD is 20v max. I think most electric bikes are 24v or 48v reply lxgr 11 hours agorootparentIt goes up to 48 V these days!That&#x27;s still \"only\" 240W, i.e. not nearly enough to charge electric bicycles. The other direction would still be nice, i.e. for faster charging of phones mounted on the handle bar. reply pythonguython 10 hours agorootparent240 w would charge most e-bikes in 2 hours reply Cthulhu_ 10 hours agorootparentprevCaveat, bikes are outdoor devices, it&#x27;s probably better to have wireless charging on an e-bike. reply lxgr 10 hours agorootparentMany phones have been waterproof for a while now, and I&#x27;ve used at least one that&#x27;s told me that I had moisture in the charging port, with charging being paused while that was the case.I&#x27;d rather take my chances during the few times I need to really charge my phone in the rain over the inevitably slower charging speeds and inefficiencies that go with wireless charging, especially when the power source is also a battery. reply jeffbee 11 hours agorootparentprevThe whole line of Specialized e-bikes charge at 42V, 2 to 4A. USB-PD 3.1 would be more than enough for an e-bike. reply lxgr 11 hours agorootparentOh, I wasn&#x27;t aware that the charging power was so low! reply jeffbee 11 hours agorootparentprevUSB-PD goes to 48V https:&#x2F;&#x2F;www.usb.org&#x2F;usb-charger-pd reply moffkalast 14 hours agoparentprevThe ironic part is that barrel jacks tried to solve your problem by being completely non-standard to the point of absurdity.There are so many different kinds and sizes of barrel jacks that when I was trying to order one that matches a cable I had, I eventually rage quit out of exasperation when even when finally finding and ordering some that matched the specs, they didn&#x27;t fit, lmao. I now power everything with XT30&#x2F;60 connectors. reply Cthulhu_ 10 hours agorootparentThe other problem with barrel jacks is that there&#x27;s current going through them all the time; iirc USB doesn&#x27;t have anything or only the default 5 volt until there&#x27;s been a transfer of information where the two sides indicate they can handle higher voltage&#x2F;power.Source: 14 year old managed to jam the barrel jack into his laptop&#x27;s HDMI port and fucked the whole device. reply vel0city 13 hours agorootparentprevEvery time I need to buy a new barrel type power supply I&#x27;m always looking for one with a pack to different tips. Now I&#x27;ve got a pile of adapter tips, I can plug just about any supply into any device. reply briHass 12 hours agorootparentprevMy problem with barrel jacks (besides the myriad diameters) is that there&#x27;s also different lengths and tip shapes, like how the insulated part of the center fits.I used the wrong tip (non original) for a network switch, and even though it felt like a perfect fit and worked, it must have been a poor enough fit to start arcing. The plug was completely melted, though luckily the gear was undamaged. reply iudqnolq 10 hours agorootparentThat could also have been a polarity issue. Some are center positives, others center negative. reply hansvm 12 hours agorootparentprevMine is loose enough that it won&#x27;t charge without a bit of foil jammed in there, and arcing is a non-issue. How much power does it draw? reply Eisenstein 12 hours agorootparentprevJust buy a bag of 5.5x2.5 connectors with panel mount sockets. XT30&#x2F;60s are going overboard and pretty much everything now under 19v that uses barrel coax is either 5.5x2.5&#x2F;2.1 or 3.5x1.5. reply bsder 11 hours agorootparentprevDo XT30&#x2F;XT60 connectors actually have a standard yet?I still have issues buying them from \"real\" distributors and manufacturers. I still can&#x27;t seem to cough up an actual datasheet.For a while, some of them had a habit of arcing and catching on fire, as well. Not a big deal when doing attended, high impact stuff like racing or robots. However, that&#x27;s a BIG problem when using them for unattended power. reply 0_____0 11 hours agorootparentIt&#x27;s a shame that there aren&#x27;t better low cost 2pos connectors. I&#x27;m partial to the LEMO style push-pull connectors or the Neutrik style twistlock connectors for \"real projects\" e.g..when someone has paid me money for their thing to work and keep working. reply rainbowzootsuit 7 hours agorootparentYou might look at Anderson power pole connectors. They are quite popular in the HAM community, but I came upon them doing FIRST robotics mentoring.They are configurable to more than two poles and can be keyed by changing the orientation of the poles.The small size ones go to 45A DC and are easily crimped and assembled. reply 0_____0 2 hours agorootparentWell aware of the Anderson connectors. They&#x27;re big, ugly, and have no ingress protection. They have their place. reply moffkalast 1 hour agorootparentprevI think it&#x27;s less of a standard and more genuine connectors made by Amass vs. knock offs. They even have a patent apparently.XT60 spec: https:&#x2F;&#x2F;www.tme.eu&#x2F;Document&#x2F;2d152ced3b7a446066e6c419d84bb460...XT30 spec:- female https:&#x2F;&#x2F;www.tme.eu&#x2F;Document&#x2F;f2d0830114aabe6ea8d4bb128e962790...- male https:&#x2F;&#x2F;www.tme.eu&#x2F;Document&#x2F;7d9d972ae3468777f69ec2ee99897652... reply ant6n 12 hours agorootparentprevBack when there were electronics stores, you could just go and buy a tip that you could try out at the store, and match it to a power supply that had the right voltage and wattage. reply Scoundreller 9 hours agorootparentCan still do that at 2nd-hand stores. May not be the greatest electrical efficiency.Don&#x27;t forget to match polarity if your device requires DC and doesn&#x27;t have a bridge diode. (Looking at you SNES!). reply leptons 12 hours agoparentprevhttps:&#x2F;&#x2F;www.amazon.com&#x2F;dp&#x2F;B0BGFC77M65v, 9v, 12v, 15v, 20v - selectable with all kinds of adapters.I had a motorized massage gun that had a 9v barrel connector, this thing worked perfectly. I can also use it to charge a 12v usb-c tablet I have that won&#x27;t work with normal usb-c PD. reply Dalewyn 7 hours agoparentprev>may have even broken the circuit board of the HDD, in which case it will be very expensive to get my data back as HDD circuit replacement is outside of my set of skills.That&#x27;s absolutely on you for not having a backup of a HDD that gets moved and tossed around and replugged constantly.That HDD dying suddenly is an inevitability that will have happened sooner or later. reply codetrotter 4 hours agorootparentThe problem is having a reliable and secure backup system.- Carrying an extra HDD with me is not feasible. It weighs extra, and if my luggage gets lost they both get lost and we are back to 0 copies left.- I have copies of copyrighted material that I’ve bought. I’m not gonna sync that to the server I rent because they might mistake it for piracy.- My computer at home has less storage, so I can’t sync to it while traveling because there is not enough space left at home. I bought the 5 TiB HDD while traveling.- I think it’s pretty darn silly that electronics are so unreliable, that having one HDD is not enough. It bothers me a great bit in fact.- I’m not gonna put my files in the cloud either.- Sync problems are a PITA to resolve.- A lot of places that I go, internet is slow and unreliable. In many cases if I were to ZFS send a snapshot of my HDD over the internet with a couple GiB of new data it would likely lose the connection mid transfer and I’d have to retry over and over and over and I just don’t have time nor energy for that.So it’s not as easy as you make it out to be. reply Dalewyn 3 hours agorootparent>- Carrying an extra HDD with me is not feasible. It weighs extra, and if my luggage gets lost they both get lost and we are back to 0 copies left.Why are you not keeping a copy at, say, home? Even if it gets old between backups, having some data is better than complete data loss.>- I have copies of copyrighted material that I’ve bought. I’m not gonna sync that to the server I rent because they might mistake it for piracy.Why are you backing up to a location not under your ownership?>- My computer at home has less storage, so I can’t sync to it while traveling because there is not enough space left at home. I bought the 5 TiB HDD while traveling.You have monies and time to rent a server, buy a huge HDD on the road, procure gadgets, but none for basic upkeep back home?>- I think it’s pretty darn silly that electronics are so unreliable, that having one HDD is not enough. It bothers me a great bit in fact.The fickle nature of electronics has nothing to do with this. If something is important to you, you keep multiple copies in case one gets destroyed. Because one day, some deity in the sky is going to decide you will suffer today.>- I’m not gonna put my files in the cloud either.See response to backing up to a rented server.>- Sync problems are a PITA to resolve.There are solutions that could help you, because many people have walked that path.>- A lot of places that I go, internet is slow and unreliable. In many cases if I were to ZFS send a snapshot of my HDD over the internet with a couple GiB of new data it would likely lose the connection mid transfer and I’d have to retry over and over and over and I just don’t have time nor energy for that.If you accrue so much data while on the road that a proper backup scheme is impractical, you absolutely should still duplicate it on another HDD to at least reduce the risk of data loss.Backing up is ultimately a question of whether the time lost recovering from data loss is more expensive than implementing and performing a backup scheme. It&#x27;s a question of motivation, not difficulty. reply throw0101b 14 hours agoprevIs 240W not enough?> Announced in 2021, the USB PD Revision 3.1 specification is a major update to enable delivering up to 240W of power over full featured USB Type-C® cable and connector. Prior to this update, USB PD was limited to 100W using a solution based on 20V using USB Type-C cables rated at 5A. The USB Type-C specification has also been updated to Release 2.1 to define 240W cable requirements, and with the updated USB PD protocol and power supply definition, this extends the applicability of USB power delivery to a large number of applications where 100W wasn&#x27;t adequate.* https:&#x2F;&#x2F;www.usb.org&#x2F;usb-charger-pd reply timenova 14 hours agoparentI think someday it would be amazing to have 1500W to 3000W kettles simply being powered by Type C, and other home appliances too. Wall sockets in most places in the house could simply be the universal Type C port, and since Type C does power negotiation, it&#x27;ll be safe to connect a low-power appliance to a high-power Type C outlet.The key requirement for this (after the spec comes along) would be high quality high-power rated Type C cables, and safe high-power Type C outlets. No need for each appliance to have different sorts of cables (mostly irreplaceable and fixed length) which don&#x27;t fit some outlets correctly.Maybe after some regulations, it would even be easy to update the firmware of those home appliances to open source alternatives. reply jack_h 13 hours agorootparent> I think someday it would be amazing to have 1500W to 3000W kettles simply being powered by Type C, and other home appliances too.I&#x27;ve actually jokingly suggested that USB will go this way. You&#x27;ll plug in your new induction cooktop with a USB cable you fished out of the junk drawer and all of the LEDs and screens will light up. However, the second you turn a zone on the cable melts and burns your house down because the cable didn&#x27;t support the USB-HPD-IH 2.3 Gen2x120 spec. reply andix 12 hours agorootparentprevI don&#x27;t believe the tiny plugs will ever be able to do that. The European power sockets (\"schuko\", type E&#x2F;F) usually run with 230V and 13A (even 253V&#x2F;16A is technically allowed), so up to 3000W and more.They can get really warm when run at full power. If the sockets are worn out they can even get hot enough to melt the plastic. A few electric car owners experienced that, when they charged their car on a regular socket. (with the higher voltage in Europe it&#x27;s feasible to charge a car on a standard socket, 0-100% can take as \"little\" as 20 to 30 hours.)So I highly doubt those currents could every be delivered on such a tiny and brittle connector. 240W already seems like pushing it to the limits. Higher voltages seem impossible too, there is not enough space for isolation. Small mechanical faults could easily expose those dangerous voltages to the user. reply magicalhippo 8 hours agorootparent> A few electric car owners experienced that, when they charged their car on a regular socket.So much so that it&#x27;s not allowed to provide such an \"emergency charger\" with a regular Schuko plug when you sell a new EV here in Norway.I thought I had displaced mine for my new car until I called the seller and he informed me of this recent rule. reply Galanwe 12 hours agorootparentprev> I think someday it would be amazing to have 1500W to 3000W kettles simply being powered by Type CWell this is very unlikely to happen.To deliver more power, you either need to increase voltage, or increase current.- The higher the voltage, the easier an electric arc can form between two wires. Cables and connectors are voltage rated depending on the clearance&#x2F;spacing between their components. USB-C is very compact, it is unlikely it could be used for more than say 20V without starting to create arc issues.- Increasing current means increasing wire gauge, otherwise the cables will just burn. Ultimately \"beefing\" USB cables will make them clunky and rigid to the point where it will defeat its purpose. The connectors would need to be bigger as well, to a point where these new high power connectors wouldn&#x27;t fit regular USB-C connectors. reply avar 10 hours agorootparentnext [–]> USB-C is very compact, it is unlikely > it could be used for more than say 20V without > starting to create arc issues.USB-C has carried more than double 20V since 2021, or 48V: https:&#x2F;&#x2F;www.usb.org&#x2F;usb-charger-pd reply nolist_policy 14 hours agorootparentprevHeh, the German Schuko plug tops out at ~3680W @240V. And that thing is chunky even compared to the US NEMA plug.To increase the wattage with such tiny wires, you need to increase voltage a lot. Imagine auto-negotiating at 5kV. reply bafe 12 hours agorootparentThat&#x27;s why power hungry devices are usually connected to a three phase plug. This aside, I think the best would have most outlet keeping the current national standards (let&#x27;s not forget they deliver AC which is still need by a decreasing number of electric motors) and add a second residential DC circuit using a USB-C outlet reply Eisenstein 12 hours agorootparentprev5kV would need the wires really far apart to prevent arcing, no? reply 0_____0 11 hours agorootparentThe cables would be chunkier but not THAT weird looking. The connectors on the other hand would be wild. You&#x27;d have a cluster of deeply shielded contacts, and mechanically actuated shutters might be employed. I have no idea how you would address wet environments other than \"GFCI everything\" reply dreamcompiler 9 hours agorootparentprevI actually looked into this for making coffee while camping. How hard would it be to boil water with a portable battery pack that contains a few 18650 cells? Regardless of the fact that USB-C at 240W is not really enough, could you do it on batteries?Not very well. It takes a shitload of energy to boil a cup of water. About 0.5MJ for 8 ounces raised from 20C to 100C. My portable battery pack holds about 100Wh of energy. That&#x27;s 360,000J. So that battery pack has enough energy to boil one cup of water and not quite a second one. And that assumes 100% efficiency.I realize that we&#x27;re talking about two different things: wall outlets vs. batteries, but boiling water is hard. reply gubby 14 hours agorootparentprevInteresting idea, I suspect it isn&#x27;t possible with the existing connector. You either need to increase the voltage or the current.The new 240W spec is 5A and 50V. Assuming 5A is the thermal limit of the connector and that can&#x27;t change, to get 1500W you&#x27;d need 300V, which is probably higher than the connector can support in terms of conductor spacing. reply buildbot 14 hours agorootparent300V DC is also quite dangerous, 48v&#x2F;50v is already up there. reply hulitu 14 hours agorootparentprev50 V in the USB-C connector ?What can go wrong ? reply minedwiz 13 hours agorootparentIn power-over-ethernet setups, you can have up to 57VDC at the consuming device: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Power_over_Ethernet#Standard_i... reply andix 12 hours agorootparentprev50V is pretty much the limit that is still considered safe for humans to get in direct contact with. reply askvictor 11 hours agorootparentAt uni we learned that 30V can penetrate skin in the right (wrong?) conditions. Once it&#x27;s through the skin, your body conducts really well, so even a tiny amount of current can stop your heart. But you need a path for the current to get across your heart, so I&#x27;m guessing that even if 30V gets under your skin, you&#x27;d have to be pretty unlucky for it to form a circuit through your heart. reply Scoundreller 9 hours agorootparentplenty of grounded things you might be gripping with your other hand at the same time :( reply jamiek88 12 hours agorootparentprevAnd by safe it means &#x27;won&#x27;t die&#x27; not &#x27;pleasant feeling&#x27; still be careful with 50v! reply andix 12 hours agorootparentWith dry hands it shouldn&#x27;t be bad, with wet or sweaty fingers it probably can become quite a \"shocking\" experience.If there is some liquid poured over the connector or if the cable is damaged, this could really become nasty. reply bafe 12 hours agorootparentprevAs a teenager I touched a phone plug with my tongue. While it only delivered 48V it was far from being pleasant reply askvictor 11 hours agorootparentTouching a 9V battery to your tongue isn&#x27;t pleasant. reply bafe 10 hours agorootparentHaving done both I can assure you that the phone plug experience is far sharper. It&#x27;s the similar \"lemony\" shock, but far far stronger reply andix 11 hours agorootparentprevLicking a Nintendo game card is also not pleasant. reply falcor84 10 hours agorootparentWhich Nintendo console, what game and for what purpose? reply CamperBob2 7 hours agorootparentprevYou&#x27;re just lucky it didn&#x27;t ring at the time! reply moffkalast 1 hour agorootparentprevMmm yes 50 V over pins that are half a millimetre apart. I see no problem with this. No problem at all. reply jorvi 12 hours agorootparentprevMaybe you can get there if the device doesn’t actually require a steady stream of 1500W. For example, induction stovetops often work with cycling their coils. Couple the idea of a charge pump, a whole bank of capacitors and Tesla’s trick of running cables over spec by constantly monitoring temperature and making on-the-fly adjustments, and you might get somewhere. reply andix 12 hours agorootparentYou may be able to run cables 50-100% over spec for a short time. But not 1000%. Thought experiment (don&#x27;t try at home!): Take a random USB cable and short circuit a car battery. It will start burning within seconds. reply Eisenstein 9 hours agorootparentIf you short circuit a car battery with a wrench it will melt the wrench. reply gumby 12 hours agorootparentprevPhui. The Wireless Power Consortium (the Qi people) have the wireless “Ki” standard for your kitchen (Qi - Ki - kitchen, get it?)https:&#x2F;&#x2F;www.cookwithki.com&#x2F;Vaporware boils water best. reply LargoLasskhyfv 8 hours agorootparentThat&#x27;s not enough vapor. https:&#x2F;&#x2F;duckduckgo.com&#x2F;?q=texas+tesla+tower reply Elucalidavah 3 hours agorootparentprev> high quality high-power ratedYou can&#x27;t get this high power rating on USB-C ever. Because physics. See also: https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;UsbCHardware&#x2F;comments&#x2F;wx5ati&#x2F;commen... reply sroussey 13 hours agorootparentprevI have USB-C for my blender. Well, it’s battery operated, but recharges that way.https:&#x2F;&#x2F;techcrunch.com&#x2F;2023&#x2F;01&#x2F;07&#x2F;blend-cap&#x2F; reply tzs 8 hours agorootparentprevI&#x27;d add to that including a more sophisticated power negotiation system. Say I&#x27;ve got an electric griddle and a microwave oven on the same circuit. To maintain the temperature I&#x27;ve set the griddle to requires an average of 750 watts. I&#x27;m cooking something on the griddle and I want to microwave something else in the microwave for 1 minute. The microwave draws 1000 watts.1000 watts + 750 watts = 1750 watts, which is fine for 1 minute on a standard 125 V 15 outlet.But that griddle averages 750 watts. It is actually cycling between 1500 watts and 0 watts. 1000 watts + 1500 watts = 2500 watts. That&#x27;s way over the rating for the outlet.The griddle and the microwave and the house&#x27;s power controller should be able to coordinate so that when I try to use the microwave it happens when the griddle is in an off part of its cycle. reply ctoth 14 hours agorootparentprevI&#x27;ve shocked myself with the end of a USB C cable too many times to believe this (power negotiation) is implemented well. reply lxgr 11 hours agorootparentA compliant USB-C device or power supply is not allowed to expose anything other than 3-5.5V of Vconn on one of the configuration pins.Only if it senses an upstream-facing port of another device will it expose 5V of Vbus, let alone 20 V (or more recently 48 V) via PD, which would require a complex handshake to prevent exactly that situation (i.e. electric shocks or arcing) from arising.As others have already said, what you&#x27;re experiencing is likely an improperly designed power supply (that can happen even with plain old USB-A battery charging and has caused deadly accidents in the past!) or static electricity. reply duskwuff 14 hours agorootparentprevThe metal \"end\" of the cable is connected to ground, not power.If you&#x27;re getting shocked by that, you&#x27;ve got bigger problems. reply 05 13 hours agorootparentIt&#x27;s the EMI shield coupling inside the power supply, see [0]. Shouldn&#x27;t happen with properly grounded chargers (but the charger in question is probably two-pronged without a ground pin, like the majority of chargers).[0] https:&#x2F;&#x2F;electronics.stackexchange.com&#x2F;questions&#x2F;476895&#x2F;ac-to... reply NavinF 13 hours agorootparentprevThat has nothing to do with the voltage&#x2F;current inside the cable. You can&#x27;t feel 48V on dry skin. reply lxgr 11 hours agorootparentThis is assuming that only 48 V (relative to ground) were present on the cable.There are many ways in which low quality power supplies can expose up to full main power voltage on the secondary side. For example, with 230 V on Vbus and 225 V on \"ground\", an USB device might not even be able to tell the difference. reply idiotsecant 14 hours agorootparentprevSorry, I think this must remain a fantasy. Physics is unlikely to comply with your request, no matter how convenient it would be. reply jrockway 13 hours agorootparentThe key is to use the USB cable itself as the heating element in the boiler. reply Dylan16807 11 hours agorootparentprevPhysics isn&#x27;t the problem.USB-C is currently specified for 1.25 amps per pin at 48 volts. If you decide you don&#x27;t need any data wires and make all 24 pins hot, with the shield as the return path, that&#x27;s already 1500 watts. And I&#x27;m sure you could tweak it to get somewhat more. reply ben-schaaf 9 hours agorootparentAfaik the power cables are substantially thicker than the data ones (and likely better isolated). There&#x27;s also only 8 unique connections: power, ground and 6 data lines. At best you could get 3x the power with the same pinout. reply Dylan16807 8 hours agorootparentThose are cables that still support high speed data. If you sacrifice data, you get a lot more pins.Protocol and pinout incompatibility is a bad idea but it has nothing to do with physics. reply HALtheWise 4 hours agorootparentIn this case, you would presumably make the devices start in the legacy 5V USB pinout, then only switch to sending power over the data pins when the source, cable, and sink all confirm they&#x27;re specced for it. That should mean there&#x27;s no protocol incompatibility any more than USB PD is an incompatible protocol. reply ben-schaaf 7 hours agorootparentprevIf you&#x27;re discounting protocol and pinout why not just change the connector too while you&#x27;re at it? reply Dylan16807 2 hours agorootparentBecause someone said physics won&#x27;t comply, and that&#x27;s silly. We&#x27;re well within the physical limits of power delivery that won&#x27;t catch fire.Also as a sibling comment states, it&#x27;s arguably not a worse violation of those things than the existing ability to change voltage. replypshc 12 hours agorootparentprevIf only LK-99 had panned out... reply vbezhenar 12 hours agorootparentprevWhat&#x27;s wrong with physics in this scenario? Tune up voltage as necessary, split it via several wires, I think it&#x27;ll work. reply eigen 13 hours agorootparentprev> I think someday it would be amazing to have 1500W to 3000W kettles simply being powered by Type C, and other home appliances too.seems like Ki [1] is more the way to go for appliances. just a few hotspots around the kitchen for the kettle or pot.[1] https:&#x2F;&#x2F;www.wirelesspowerconsortium.com&#x2F;standards&#x2F;ki-cordles... reply cyberax 10 hours agorootparentprevThat might happen, but only if we get that LK99 superconductor working. reply justsomehnguy 14 hours agorootparentprev> I think someday it would be amazing to have 1500W to 3000W kettles simply being powered by Type CPlease, for the love of Zeus, no!Sure, having a single standard everywhere sounds like fun, but there is such thing as physics...Also I really don&#x27;t want people to try to run electric kettles over iPhone USB charging cord. reply avar 14 hours agorootparentnext [–]> Also I really don&#x27;t want people to try to run electric > kettles over iPhone USB charging cord.The USB-C PD cables have circuitry in them that negotiates with both endpoints, and declares \"yes, I&#x27;m okey with transporting 100W\".Whereas I can trivially rewire my kettle in 5 minutes to use headphone wires instead of the properly sized wires it needs, and people routinely do the equivalent of that, e.g. extending their oven, microwave or kettle&#x27;s cable with the cheapest extension cord they can find.So it would actually be significantly safer, you can make a USB-PD wire that says it accepts 100W, but actually just melts, but doing so requires significantly more moronic perseverance than doing the equivalent with an under-rated extension cord. reply fragmede 12 hours agorootparentSpec compliant USB-C PD cables have circuitry in them that negotiates with both endpoints, and declares \"yes, I&#x27;m okay with transporting 100W\".Most people aren&#x27;t making their own cables and programming what they accept into them. They&#x27;re just using whatever cables they have that works. If you were a business owner and profit was your short term motive, and you had a factory making different cables supporting different wattages, would it be easier to program the specific firmware that should be on each cable, or just program all cables so they say they \"support\" the max? Shortcuts like that are not theoretical - ethernet cards are supposed to be programmed with unique MAC addresses, but we&#x27;ve seen out in the wild, MACs be the same on batches of cards, or set to all zeros.When it&#x27;s 240W the stakes are lower than when it&#x27;s 3000W. reply avar 11 hours agorootparentI&#x27;m not really following this argument.Because someone released Ethernet cards with duplicate MAC addresses, we should conclude that a future hypothetical USB-PD spec capable of powering a kettle would be more prone to failure than the status quo of bringing your own extension cord?Electric cords don&#x27;t need to self-declare their capabilities, USB-PD cables do. So the odds of a mistake on the manufacturer side are lower, as you&#x27;d need to pair an incapable wire with the wrong E-Mark chip.For an extension cord to melt and catch fire all you need to do is for the customer to misread a label, or more likely not read one at all.If we&#x27;re talking about the short-term motives of sociopaths, your hypothetical factory will have an even easier time labeling headphone wires as capable of carrying 16A. They don&#x27;t need to fraudulently manufacture one with the wrong E-Mark chip, just slap a new sticker on the box they&#x27;re shipped in.I&#x27;m as frustrated with the confusion around USB-C as anyone, but I don&#x27;t think we need to worry that the problems associated with race-to-the bottom manufacturers in the 15W space are going to extend to 100W, 240W, or hypothetical 3000W cables. The price point, serious failure modes, and potential liability will all serve as moats. reply Dalewyn 6 hours agorootparentI automatically assume any and all USB cables, including and especially those with USB-C plugs, are non-compliant wires of Copper where the capital C stands for \"Crap\" until clearly demonstrated otherwise.I have been vindicated many times. reply thelittleone 14 hours agorootparentprevThe point is that USB-C is used by a LOT of devices that are NOT iPhone and that draw significantly more power, therefore its reasonble to explore standardizing any decive that can fit the specs wattage limitations. The more devices that can be charged from the same cable and plug would solve several problems not the least of which is reducing environment waste.I have a bag at home scores of AC to DC adapters and cables. reply thatfrenchguy 9 hours agorootparentprevYou can’t get 3000W kettles in North America, getting 1500&#x2F;3000w DC cables would also be absurdly expensive reply Scoundreller 9 hours agorootparentNote to future self: get some 240V \"north american style\" sockets installed in my future North American kitchen. And slice off the euro cord on from a euro kettle and wire on a north american style 240v cord+socket. reply Dalewyn 7 hours agorootparentprev>Wall sockets in most places in the house could simply be the universal Type C portI absolutely hope such a hellish future does not come to pass.Why?Because USB-C ports will physically die long before any electrical wall socket design currently in use ever will. A good wall socket will serve its purpose for centuries over millions if not trillions of insertion cycles performed by the dumbest ape this side of the galaxy. reply LargoLasskhyfv 9 hours agorootparentprevAnd then there comes a time where this thing goes Nova. Maybe it even has some smarts and calls the fire brigade via some sort of IOT. reply jauntywundrkind 14 hours agoparentprevThat&#x27;s not what the article is talking about. The article is talking about needing more outputs, not higher powered output.I do look forward to future iterations of boards like this that support usb-c input. Weird as that is. Basically a power breakout board. And heck, why not throw some usb hubs on it all too? reply firmnoodle 15 hours agoprevWhy not use 110V AC for a hotplate and the soldering iron? USB seems silly. reply wepple 15 hours agoparentCan’t speak for the OP but having USB C devices is far tidier, and allows you to go portable.I’ve always had a 110 soldering station, but recently bought a Pinecil portable iron for soldering in the field, and damn that thing is so convenient and fast to heat and accurate, I hardly bother with my full solder station any more reply steve_adams_86 15 hours agorootparentIt’s actually good? It’s so inexpensive. My soldering station was $200, and I thought that was on the cheaper side. It looks like Pinecil V2 is only $25 at the moment. reply xnyan 15 hours agorootparentMy electronics background is that I worked under Underwriters Laboratories where I’ve used some very nice soldering irons.The pinecil is unbelievably good for what it costs. I find myself using it more than any other soldering iron, only pulling out bigger more expensive models when I need more thermal mass. I can’t recommend it enough. reply hobs 14 hours agorootparentJust a mention that if it isn&#x27;t working up to spec you probably dont have a power source capable of delivering what it needs, it truly blew me away how good this thing is. reply jdietrich 9 hours agorootparentprevIf your soldering iron uses the old style of slip-on tips, then the Pinecil would represent a significant upgrade. Cartridge-style tips have really rendered older irons obsolete and allow something as cheap and simple as a Pinecil to have genuinely excellent performance.Brands like AiXun and Handskit make inexpensive stations that are compatible with JBC C215&#x2F;C245 cartridges, which gives you a ridiculous level of performance for the price.Also, don&#x27;t sleep on knife tips. For a long time I thought that the Chinese phone repair guys were goofy for using them so much, but they were right, I was an idiot and I now use them 99% of the time. reply noman-land 15 hours agorootparentprevIt&#x27;s strangely good. I also haven&#x27;t used my Weller since getting the Pinecil. reply wepple 15 hours agorootparentprevIf they’d charged me $85 I’d be a very happy buyer. But I paid like $45 or something crazy?The one downside someone pointed out is that replacement tips are pricey because they seem to include the actual heating element, but even then it’s still such a great device IMO reply duskwuff 13 hours agorootparent> The one downside someone pointed out is that replacement tips are priceyAnd, at $25 for a set of four, they aren&#x27;t even that expensive. reply moffkalast 1 hour agorootparentDepends on the tip quality. The one I got with my toolcraft soldering station lasted a good while, but any replacements I get just freaking melt away and are only good for a few uses. On the other hand they are $3 for a pack of 10, so it&#x27;s probably still cheaper overall than the OEM stuff lol. reply steve_adams_86 11 hours agorootparentprevThat’s a strong endorsement. Do you know how long does a tip normally last? reply stavros 12 hours agorootparentprevIt&#x27;s amazing, both in general, and especially for its price. I have four of them (not exactly Pinecils, but two Pinecils, a TS-100, a TS-80, etc). I love it. reply graphe 15 hours agorootparentprevWhat do you need it for? I&#x27;ve used $4 ones that were \"good\". Once you go hot air it&#x27;s different. reply wepple 15 hours agorootparentRepairing crashed drones, so maybe nothing fancy. If I’m doing precise SMT I prefer to be at a desk reply graphe 13 hours agorootparentI think these will do fine my nice soldering iron was $70ish when I got it and has temperature control. You don&#x27;t need a weller or anything that was nice from back in the day, I think the in general temp control is very good from my experience with cheap ecigs too. replyusrusr 13 hours agoparentprevBecause then you can only sell to countries that have 110V mains. All three of them.If your product is more complex than a light bulb, dealing with mains power can be quite a hassle. It requires bigger and more expensive parts than negotiating for 20V DC with a USB PD source.You might want to take a look at USB-C to barrel connector adapters intended to run older laptops on modern chargers. They are tiny and cheap, I use one to liberate a thunderbolt 4 hub from the massive power brick it came with. reply PennRobotics 15 hours agoparentprevI think the nice Weller irons are using 24 volts DC between the box and the tip. Why deal with filtering and conversion to run a PID temperature controller, which you&#x27;ll need anyway to get a mains iron to run as precisely as a high-end device? reply oakwhiz 15 hours agorootparentThyristor&#x2F;SCR control works too. reply tiagod 14 hours agoparentprevI carry mine in my backpack, uses as much space than a couple pens and I can use it with my powerbank and usb-c charger which I always carry anyway. reply rainbowzootsuit 14 hours agoparentprevThe TS 100 &#x2F; pinecil type irons can be run off an RC lipo battery or USB PD power bank. For small field repairs work they are fantastic. reply Animats 15 hours agoparentprevUSB-powered coffee makers are a thing. There&#x27;s a USB-powered fondue maker. A USB-powered mini-fridge. A USB-powered toaster. reply bloopernova 15 hours agorootparentThere&#x27;s also USB heated fingerless gloves for cold winter days. And I have several USB powered fans.USB-C power delivery cables are pretty useful and better than a dozen transformers fighting for space on a power strip. reply starkparker 10 hours agoprev> There don’t seem to be any powered USB-C hubsAren&#x27;t all USB-C hubs with PD \"powered\"? Like, some output more power to other ports when fed with a power source?For example, I have two Anker hubs, one USB-C with USB-A ports and an unpowered USB-A hub. To get enough power to use the USB-A hub for anything more than basic input devices when connected to the USB-C hub, I have to run a powered connection through the PD port on the USB-C hub. reply BHSPitMonkey 2 hours agoparentI think OP meant products that convert 110V mains power into several high-wattage USB-PD receptacles (as opposed to the usual meaning of \"USB Hub\" for connecting multiple data devices to one USB host port).Anker&#x27;s best offering in this category runs for $150 and only has 3 USB-C ports (which share a combined 240W limit—good enough for most applications but still not the full PD 3.0 limit of 100W per port, and nowhere near the PD 3.1 limits).A true \"power strip\" offering 5 or more high-power USB-PD Type-C ports would be nice, though it would need the equivalent of a pretty beefy PC&#x27;s power supply to drive many simultaneous loads at those limits. reply nolist_policy 15 hours agoprevThat&#x27;s a lot of DCDC conversion per Dollar! reply jtriangle 15 hours agoparentAliexpress is a treasure trove of this sort of thing. Unfortunately, product listings don&#x27;t last that long, and often things get relisted under different names, so, you have to dig for what you want.Price is right though to be sure. reply declan_roberts 14 hours agoprevI don&#x27;t understand how you can power all of these at full power when the input voltage is a single ~30v DC wall adapter? Isn&#x27;t that your bottleneck right there? reply KeplerBoy 14 hours agoparentThat&#x27;s not the issue. 24VDC power supplies with tens of amperes are not hard to find, they won&#x27;t be wall warts though.I&#x27;m not sure though, if the board can actually put out high power from all 4 ports at the same time. Does anyone know? reply dclowd9901 14 hours agorootparentThe supply wire looked like 14awg-ish which seems a little dinky for 20a @12v reply popol12 13 hours agorootparenthttps:&#x2F;&#x2F;www.powerstream.com&#x2F;Wire_Size.htmlooks fine, if it&#x27;s AWG 14 then it&#x27;s rated for about 32 amps reply dclowd9901 6 hours agorootparentI mean, as someone who’s wired entire camper vans, I can tell you that I wouldn’t put 20 amps through 14awg, but I guess it also depends on the wire. reply undersuit 14 hours agoparentprevHow many amps? Genuine question, I can&#x27;t find the info. reply superjan 14 hours agoprevThat usb protocol tester looks nice.I recently tested what cable&#x2F;adapter charged my old iPad the fastest. I suspected cheap clone cables to be worse but from USB A, all performed the same at around 11-12 watts. The best was the macbook usb C charger at 25 watts. reply RcouF1uZ4gsC 15 hours agoprev> It’s not a massive problem, but I do only have one 65W USB-C supply coming into workbench. I want more, I want much much more!>There don’t seem to be any powered USB-C hubs, so I went shopping on AliExpress and eventually came across this nice board:Are they UL listed? With that kind of watts, seems like they are capable of starting a fire and burning down your home if not properly designed, manufactured, tested, etc. reply Saris 12 hours agoparentNo, but workbench stuff like this would be powered on when you&#x27;re actively there and working on something, so if it did go pop and potentially catch fire at least you&#x27;re nearby. reply fragmede 12 hours agorootparentBoth soldering irons and multimeters, tools typically used on workbenches have time out&#x2F;auto off features because EE work is performed by fallible humans that accidentally leave things plugged in and turned on when not actively monitoring things. Sometimes even intentionally, to test things like battery discharge rates. reply jauntywundrkind 14 hours agoprevGreat board, nice. It&#x27;s so great that so many of these super small peripherals which would otherwise have walllwarts either just work with usb-c or can use a real simple trigegerboard or pigtail adapter. It&#x27;s so convenient. And everything becomes incredibly easy to run off battery to boot.It&#x27;d be lovely to see a thermal imager of it under load, see how hot parts get & where. Total power is unspecified, but 65w out x 4 ports &#x2F; 32V input is 8A, which may be possibly perhaps it can sustain but only maybe.I did try to go find this part on the website that&#x27;s silkscreened on to the board, http:&#x2F;&#x2F;diymore.cc , but didn&#x27;t find it there. reply solardev 15 hours agoprev [–] What&#x27;s that device that is being used to test whether something supports USB PD? reply jprd 15 hours agoparent [–] https:&#x2F;&#x2F;www.aliexpress.us&#x2F;w&#x2F;wholesale-fnb38.html?spm=a2g0o.d... reply solardev 15 hours agorootparent [–] Cool, thanks! Not bad for $12.The lack of safety features and warnings about blowing stuff up are a bit scary though, lol. reply fragmede 12 hours agorootparentThe \"blow stuff up\" is a specific mode where you tell the source and sink to ignore what they negotiated and do whatever you program the decide to fake instead. Which, if you&#x27;re not careful, could be out of spec for either or both devices, causing said damage. In normal use, it&#x27;s a semi-passive monitor&#x2F;reporting box. reply Hackbraten 14 hours agorootparentprev [–] If you want something in lab quality, the Power-Z KM003C [1] is a decent model. I use mine to troubleshoot USB-C PD docks.You can, however, blow up stuff with the Power-Z, too.[1]: https:&#x2F;&#x2F;www.chargerlab.com&#x2F;introducing-the-brand-new-power-z... replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Atomic14, a blog and YouTube channel dedicated to electronic projects, recently highlighted the rising prevalence of USB-C powered devices in a recent post.",
      "The post reviews a board available on AliExpress which has four standard USB, as well as four USB-C ports, and is capable of delivering up to 65W of power.",
      "The author also promotes the channel's Discord group and mentions their affiliations with Amazon and AliExpress, before inviting readers to visit their YouTube channel."
    ],
    "commentSummary": [
      "The Atomic14 blog and YouTube channel recently discussed the growing prevalence of USB-C powered devices in the contemporary world.",
      "It highlights a device available on AliExpress, which boasts four standard USB and four USB-C sockets that can provide up to 65W of power.",
      "The writer encourages viewers to join their Discord group and visit the Atomic14 YouTube channel for further electronic project discussions."
    ],
    "points": 160,
    "commentCount": 161,
    "retryCount": 0,
    "time": 1699115786
  },
  {
    "id": 38140242,
    "title": "Fermyon Launches Spin 2.0 to Build, Run and Distribute WebAssembly Apps in Cloud",
    "originLink": "https://www.fermyon.com/blog/introducing-spin-v2",
    "originBody": "Introducing Spin 2.0 - Polygot Programming, Performance Upgrades, Portability and more How it works Why Fermyon? Projects Fermyon Cloud The easiest way to deploy & manage WebAssembly apps Spin A framework for quickly composing serverless apps. Fermyon Platform A self-hosted cloud app platform for WebAssembly Bartholomew Compile WebAssembly-powered websites with this micro CMS Resources DEVELOPER Documentation How to build & run apps with Fermyon Spin Up Hub A library of sample apps, plugins & templates COMPANY About Blog Events Whitepapers Pricing LOGIN SIGNUP Introducing Spin 2.0 The Fermyon team is proud to introduce Spin 2.0 — a new major release of Spin, the open source developer tool for building, distributing, and running WebAssembly (Wasm) applications in the cloud. Wasm is a technology that is making its way into more and more parts of modern computing — from browser applications, to plugin systems, IoT scenarios and more, and Spin makes it possible to build your serverless-style APIs, websites, full-stack or AI-capable applications as WebAssembly components, generating applications that are: orders of magnitude smaller than container images entirely portable across operating systems and CPU architectures with incredibly low startup latency and capable of running tens of thousands of requests per second capable of running anywhere, from tiny devices such as Raspberry Pis, in Docker Desktop, Kubernetes, Nomad, or Fermyon Cloud, and in even more places soon! Since we first introduced Spin, our goal has been to create a foundation for a new kind of computing platform that could take advantage of WebAssembly’s runtime characteristics, and for Spin 2.0, we worked with the community on a few key scenarios: enabling WebAssembly component composition improving performance laying the foundation for Wasm portability across runtimes and implementations improving the developer experience, capability support, and SDK ergonomics Let’s dive into what Spin 2.0 looks like! Hello, Spin! Spin is a developer tool and framework that guides users through creating, compiling, distributing, and running server-side applications with WebAssembly. You can take advantage of the spin new, spin build, and spin up set of commands to start your journey: # Create a new application with one JavaScript component and enter it's directory $ spin new hello-spin2 --template http-js $ cd hello-spin2 # Add a new component written in Rust to our application $ spin add hellorust --template http-rust This creates all the configuration and source code required to run our application. Spin 2.0 comes with an updated spin.toml manifest that focuses on simplicity and on the capabilities a component is allowed to access. Let’s have a look at the manifest for a simple component that is allowed to access a Redis database: # The HTTP route /hello-spin2 should be handled by the `hello-spin2` component [[trigger.http]] route = \"/hello-spin2\" component = \"hello-spin2\" [component.hello-spin2] # The Wasm component to be instantiated and executed when receiving a request source = \"target/hello-spin2.wasm\" # Any capability this component can access (files, variables, # outbound connections, KV stores, databases) must be declared # in the component manifest. # For example, this component can only make outbound connections # to the following hosts: allowed_outbound_hosts = [\"rediss://my-redis-server\"] [component.hello-spin2.build] # The command to execute when building this component command = \"npm run build\" At this point, you can write a handler function using any of the supported languages, such as Rust, JavaScript, TypeScript, or Go (or any language that compiles to WASI). Now let’s look at a simple component written in JavaScript — a single handler function that takes a request, then returns a response: // Hello world in JavaScript. export async function handler(req, res) { res.status(200).body(\"Hello, Spin 2.0 from JavaScript!\") } When writing your applications, you can interact with built-in persistence, configuration, or data services from your Wasm components, or communicate with external systems. Here is a sample of what you can do today from a component running in Spin: persistence using the build-in key value store, built-in SQLite database, external database support for MySQL and PostgreSQL, Redis built-in dynamic application variables, powered by Vault outbound connectivity to any HTTP API, now built on top of the wasi-http standard proposal running AI workloads such as running inferencing on LLMs, or generating and storing sentence embeddings Next, spin build will execute the build commands for all components in the application, and spin up will start the application locally. If you’re iterating locally on your application, you might use spin watch to automatically rebuild and restart your app whenever you change your source code. Finally, you can use spin cloud deploy to instantly deploy your application to Fermyon Cloud, push the application to a registry service such as Docker Hub or GitHub Container Registry using spin registry push, or deploy the application to Kubernetes using spin k8s deploy. Let’s see how we can deploy our newly created Spin 2.0 application to Fermyon Cloud: # Deploying our Spin 2.0 application to Fermyon Cloud $ spin cloud deploy Uploading hello-spin2 version 0.1.0 to Fermyon Cloud... Deploying... Waiting for application to become ready........ ready Available Routes: hello-spin2: https://hello-spin2-0a8dkb8e.fermyon.app/hello-spin2 hellorust: https://hello-spin2-0a8dkb8e.fermyon.app/hellorust Bringing the Component Model and WASI Preview 2 to production All the above was possible in Spin 1.x already. In fact, while our SDKs so far produced regular .wasm files, since Spin 1.5 they were turned into WebAssembly Component binaries before execution. So Spin and Fermyon Cloud have executed nothing but components for months now — but this was an implementation detail under the hood. With today’s release of Spin 2.0, we’re taking things a huge step further: we’re finally bringing some of the benefits of the WebAssembly Component Model and the upcoming WASI Preview 2 milestone to a production environment. The Component Model introduces two key additions to WebAssembly: a simple way to bring efficient high-level interfaces to content running in WebAssembly, regardless of which language was used to create that content; and the ability to compose components using these interfaces, building powerful applications out of smaller pieces that are isolated from each other, but can efficiently communicate across language boundaries. Through the rest of this post, we’ll talk about how we’re making use of these properties in Spin 2.0, and how we’re going about making a precursor of the upcoming WASI Preview 2 available for production use right now, while supporting the standardization process towards an ideal final version of the specification. Enabling Polyglot Component Composition More concretely, with the Component Model a component written in JavaScript can import a high-performance component written in Rust, or another written in Python, and they can communicate and exchange data in a portable way, without needing to be aware of the language, or any other implementation details, of each other. Spin 2.0 can produce and run WebAssembly components natively, and today you can use tooling in Rust, JavaScript, TypeScript, and Python to build components that can run inside Spin applications. Let’s explore a real example — one of the most used components in Spin applications is a static file server. It is a component that serves files from disk and sends them as HTTP responses, and it is used for every website powered by Spin (including the website you are reading this article on). We initially wrote it in Rust, which means until now, if we wanted to use its functionality from any other language, we had to either reimplement its functionality in a new language, or call it over the network. With Spin 2.0, we can import the file server functionality and make use of it in a component written in another language. To achieve this for our example, we will use the following component tooling: cargo component, componentize-py, and wasm-tools compose, which generates a new component by linking the two according to their interface contract. In WIT, the Component Model’s language for describing interfaces for components to implement or consume, such a contract is called a “world”. In other words — we implement our business logic in a high-performance, memory-safe language like Rust, targeting a known interface (in this case, the WASI HTTP proxy world), and we compile it using cargo component, which generates a standard WebAssembly component (spin_static_fs.wasm): // A simplified Rust component that implements our business logic // https://github.com/fermyon/spin-fileserver/blob/main/src/lib.rs #[http_component] async fn handle(req: IncomingRequest, res_out: ResponseOutparam) {println!(\"Hello from Rust!\");// See the source file linked above for the actual implementation. } We can now use this interface in a new component, that we’ll write in Python and build with componentize-py. This component imports the same interfaces our Rust component implements, but instead of doing so itself, it handles our incoming HTTP request by calling into the Rust component we just built: # A simplified Python component that imports the business logic # https://github.com/fermyon/spin-fileserver/blob/main/examples/python/app.py from proxy.imports import incoming_handler as file_server from proxy.imports.types import IncomingRequest, ResponseOutparam ... async def handler(req: IncomingRequest, res: ResponseOutparam): print(\"Hello from Python!\")# Omitted: logic to further process the request, check authentication, etc.file_server.handle(req, res) We now use componentize-py to create a new component, then use wasm-tools compose to link the two components, resulting in a new component that can be run in Spin 2.0 and other runtimes supporting the Component Model and the same precursor to WASI Preview 2: # Build a component that imports the proxy world (http.wasm) # This component will have to be linked with another component that # implements the proxy world before it can be used. $ componentize-py -d ../wit -w proxy componentize app -o http.wasm # `spin_static_fs.wasm`, and generate a new component, `composed.wasm` $ wasm-tools compose -d spin_static_fs.wasm http.wasm -o composed.wasm And here’s this newly generated component running in Spin 2.0: $ cat spin.toml ... [component.fileserver] source = \"composed.wasm\" files = [{ source =\"my-files/*\", destination = \"/\" }] $ spin up Available Routes: fileserver: http://127.0.0.1:3000/static (wildcard) Hello from Python! Hello from Rust! ... stream the requested file over HTTP This example walked through how to manually create components in different languages, link them, then execute the generated component with Spin. As tooling for component composition matures, we are working within the language ecosystems to add more integrated support for components and to streamline the creation and composition of components. You can find the example importing the file server component in JavaScript or Python, and an HTTP OAuth middleware component on GitHub. You can import them in your own Spin applications, or use them as a starting point for building new WebAssembly components. Performance, Streaming, and WASI HTTP The composition of components allows very fine-grained isolation of different parts of an application from each other, enabling developers to reason about which parts of their application have access to the most sensitive data, or are most critical to the application’s overall security, correctness, and stability. But Spin adds another dimension to this fine-grained isolation: for every new request, it will create a fresh new instance of the Wasm component(s) handling the request, process it, then terminate the instance. That means that even in case an attacker can exploit a flaw in the application to corrupt its state, that corruption will only last for the current request, instead of affecting all future requests processed on the same machine. Spin can do this because of the incredibly fast startup time for WebAssembly components, and the incredible work happening in the Wasmtime project. For scenarios with many concurrent, short-lived instances (which is perfect for serverless-style workloads), Spin 2.0 has significantly improved performance compared to Spin 1.0, in large part due to using Wasmtime’s pooling memory allocator, which when combined with other performance work, can improve the throughput of Spin by up to an order of magnitude in real-world scenarios. To showcase how fast Spin can create new isolated Wasm instances for every request, we can create a new “hello world” application using Spin 2.0 and run a simple load test locally: # Creating a new Spin application $ spin new perftest $ spin build && spin up & # Creating a load test for 10 seconds with 5 concurrent connections $ bombardier localhost:3000 -c 5 Statistics Avg Stdev Max Reqs/sec 28301.16 2875.66 32328.99 Latency 175.56us 20.01us 4.57ms HTTP codes: 1xx - 0, 2xx - 282999, 3xx - 0, 4xx - 0, 5xx - 0 On a macOS machine, in 10 seconds, Spin created and executed almost three hundred thousand WebAssembly instances, with about 28,000 requests per second and average latency that is below 200 microseconds. Real-world workloads will most often be bottlenecked by external calls such as database access and outbound networking, but the time between sending the request until your application starts executing is crucial in a lot of scenarios, and Spin 2.0 ensures improved startup performance for such applications. And that goes for every request, not just those being processed after an initial startup and warmup phase. Startup performance is just one aspect of performance — another crucial aspect is sending a response back as soon as it starts becoming available, even if the server hasn’t finished processing yet. This is known as “streaming” responses, and Spin 2.0 now has experimental support for streaming HTTP responses, built on top of WASI preview 2 and WASI HTTP. We’re already making use of this in the file server example described above, but let’s see a focused example in action — we want to read parts of a file, then send the chunks back as soon as they are done processing (as opposed to waiting and sending the entire file back): // https://github.com/fermyon/spin/blob/main/examples/wasi-http-streaming-file/src/lib.rs async fn stream_file(_req: IncomingRequest, res: ResponseOutparam) -> Result { // Create a response body let mut body = response.take_body(); // Open a file for processing and start reading 1 MB chunks. let mut file = File::open(\"my-large-file.bin\")?; const CHUNK_SIZE: usize = 1024 * 1024; // 1 MB // For every chunk read from the file, process it, then // immediately stream the processed part to the client. let mut buffer = vec![0; CHUNK_SIZE]; loop { let bytes_read = file.read(&mut buffer[..])?; if bytes_read == 0 { break; } // Potentially further process the bytes read // and send the chunks back as they are available. let data = &buffer[..bytes_read]); body.send(data.to_vec()).await?; println!(\"sent {} bytes\", data.len()); } Ok(()) } This is essentially the core of how the file server component is able to stream large files, and it is a pattern that can be used whenever performance and interactivity are crucial. Bringing Production Use to the Standardization Process To reiterate, all the above is made possible by the WebAssembly Component Model and the upcoming next version of WASI, Preview 2. Much of this work is driven upstream in the Bytecode Alliance, where we’ve long provided major contributions and helped realize the vision of the WebAssembly Component Model and WASI. Neither the Component Model nor WASI Preview 2 are “done”, and while the former is by now very stable, the latter is still under heavy development. We’re actively involved in this development, but with today’s release, we’re doing something different: we’re bringing real-world production use to the standardization and implementation process. A good standard that serves real-world use cases well can’t be created in isolation and without input from developers using it in the real world. Besides bringing exciting new features to Spin and Fermyon Cloud, that is a key motivation for what we’re releasing today: we want developers to have a place where they can take the Component Model and the current iteration of WASI Preview 2 for a spin, with real production use, not just experiments and testcases. Adapting to a Changing World This poses the question of how we’re doing this. If the specification is in flux and APIs are changing, how can we give developers a stable basis to build on top of? Luckily, this is made fairly easy by the fact that Component Model interfaces are versioned. Spin 2.0 exposes a the 2023-10-18 snapshot of WASI Preview 2, which is shipping with Wasmtime 14. Over the next few months, we’ll continue releasing new snapshots of WASI Preview 2, while keeping support for the previous ones. This enables existing content to continue working, while allowing new content to make use of the latest WASI Preview 2 improvements. But that raises another question: how do we indefinitely support all these different snapshots? The answer lies in the composability of WebAssembly Components described above. Whenever we introduce support for a new snapshot, we can decide which of the existing snapshots we want to continue supporting natively. When we decide to stop native support for a snapshot, we can move its implementation into a component itself, which functions as an adapter between different snapshots. Such a component will then import one snapshot of WASI Preview 2 and export another one, implemented in terms of the imported one. Eventually the final version of WASI Preview 2 will be released. After that point, we’ll likely move support for all snapshot versions into adapters, and only have that single, stable version implemented natively. This way, we get the best of both worlds: we can give developers using Spin, and customers deploying their applications to Fermyon Cloud the stability they need for production use, while ensuring that we’re able to keep the Spin codebase maintainable and lean. Towards an Interoperable Ecosystem The Component Model and WASI are of course not just aiming to make it easy to support different languages, and to allow components built using different languages to interoperate. Another key goal is interoperability between hosts. Once the final version of WASI Preview 2 is released, we’ll see that happening for a wide range of platforms, the way it’s currently the case for WASI Preview 1. For now, interoperability is more limited, because not everyone will have the ability to rapidly deploy support for WASI Preview 2 snapshot versions. But it’s not entirely absent either: Spin 2.0 uses the implementation of WASI APIs provided by Wasmtime 14, so content that only uses WASI APIs (as opposed to Spin’s non-WASI APIs) will work in Wasmtime 14 as well. Additionally, we’ve worked with our friends at NGINX to implement experimental support for the Component Model and WASI HTTP in NGINX Unit. You can play around with this, and see the same content running in Spin, NGINX Unit, and Wasmtime by downloading the Docker image of their current demo of a pre-release version of the next version of NGINX Unit. A Call to Action I want to end this post with a call to action: please take Spin and the Component Model and WASI Preview 2 for a spin! And please let us know how it goes, and what does and doesn’t work for your projects! And if you’re at KubeCon in Chicago next week, please come by our booth to chat about all this in person. START BUILDING DOCS The Spin Quickstart Guide Create, build, test, and deploy an app in less thajust a few minutes. DOCS How to Upgrade Spin to 2.0 A sentiment analysis API that demonstrates using LLM inference and KV stores together. TEMPLATE Static File Server Template A simple static file server as a Spin HTTP component, written in Rust. RUST COMPONENT Radu Matei NOVEMBER 02, 2023 GitHub Twitter RSS Feed WEBASSEMBLY POSTS Introduction to WebAssembly on the Cloud How to Think About WebAssembly (Amid the Hype) Containers vs. WebAssembly: What's the Difference? The WebAssembly Component Model We're building something new. Interested in learning more? Talk to us Projects Fermyon Cloud Spin Fermyon Platform Bartholomew Resources Blog Documentation Language Guide Pricing Open Source Promise Company About Job Openings Contact Discord Newsroom Sales Experience the next wave of cloud computing. Code of Conduct Legal Privacy RSS Sitemap Hi! Could we please enable some additional services for Analytics? You can always change or withdraw your consent later. Let me choose I DECLINETHAT'S OK",
    "commentLink": "https://news.ycombinator.com/item?id=38140242",
    "commentBody": "Spin 2.0 – open-source tool for building and running WASM appsHacker NewspastloginSpin 2.0 – open-source tool for building and running WASM apps (fermyon.com) 158 points by acifani 22 hours ago| hidepastfavorite33 comments matei_radu 20 hours agoHi, everyone, I&#x27;m one of the Spin maintainers.We&#x27;re really excited about the new release, happy to answer questions about it! reply rockwotj 14 hours agoparentCongrats on the release!Question how did you come up with your the languages you support. Obviously how well the language compiles to Wasi is a factor, but how did you end up picking C# for instance?Additionally how does Javascript support work? Are you embedding QuickJS? reply matei_radu 13 hours agorootparentThank you!To your point, the primary consideration for choosing the languages is their support for WebAssembly, and WASI in particular.Due to Spin&#x27;s heavy use of WASI and the component model, languages that have first party support in the WIT bindings generator (https:&#x2F;&#x2F;github.com&#x2F;bytecodealliance&#x2F;wit-bindgen) are the easiest to implement, followed by languages that can be built on top of the support for those with first party support.For example, the JavaScript support is built by embedding QuickJS (in particular, Shopify&#x27;s Javy project — https:&#x2F;&#x2F;github.com&#x2F;fermyon&#x2F;spin-js-sdk), which then uses the Rust SDK. (As a side note for the JS support — adapting QuickJS has been extremely helpful in getting JS support out; however, we are in the process of rebuilding the JS runtime using SpiderMonkey (with which a few people on the team have significant experience) and JCO (https:&#x2F;&#x2F;github.com&#x2F;bytecodealliance&#x2F;jco), and the web platform compatibility makes it a significantly better proposition for things like 3rd party dependencies).C# is an interesting one — the .NET team at Microsoft (and in particular Steve Sanderson from that team) has been making tremendous progress in ahead-of-time compilation for .NET and generating Wasm and WASI compatible binaries (as opposed to their initial approach on Blazor), and experimenting with that led us to build support for Spin as well.Finally, we do a lot to support other popular languages and their Wasm support — two examples: Python (https:&#x2F;&#x2F;github.com&#x2F;bytecodealliance&#x2F;componentize-py) and Java &#x2F; TeaVM (https:&#x2F;&#x2F;github.com&#x2F;fermyon&#x2F;teavm-wasi), for which we haven&#x27;t fully integrated Spin support, but we hope to get there soon.I hope this explains a bit our process on language support, happy to expand on any point here. Enjoy your weekend! reply konsoletyper 2 hours agorootparentWhy you guys keep using this old non-maintained fork of TeaVM, while there&#x27;s WASI support in main TeaVM (https:&#x2F;&#x2F;github.com&#x2F;konsoletyper&#x2F;teavm)? reply matei_radu 2 hours agorootparentJoel from our team worked on the initial prototype for WASI support in TeaVM (https:&#x2F;&#x2F;github.com&#x2F;konsoletyper&#x2F;teavm&#x2F;pull&#x2F;610), and we temporarily forked before the WASI support made it to the official repo.Good reminder to deprecate that now, and thanks for the amazing work on the project! reply rockwotj 8 hours agorootparentprevI&#x27;m impressed you&#x27;re already leveraging the component model. I thought it wasn&#x27;t quite ready for primetime yet, but it seems you&#x27;re proving that wrong... I&#x27;ll have to dig in more here, as I&#x27;m working embedding WebAssembly in a high performance storage engine.Thanks for the notes! I hear you on QuickJS - I&#x27;ve seen approaches of folks trying to build more node compatibility on top of quickjs (ala https:&#x2F;&#x2F;github.com&#x2F;second-state&#x2F;wasmedge-quickjs), but have recently heard about spidermonkey in wasmtime. Do you have intuition for nodejs vs browser in terms of what people want in terms of compatibility? reply evntdrvn 11 hours agorootparentprevyeah Steve Sanderson is a force :) reply tipiirai 17 hours agoparentprevCongrats on the release! Any example sites where Spin is in active use? reply matei_radu 13 hours agorootparentThank you!(disclaimer: I work at Fermyon, the company that created Spin.)All of Fermyon&#x27;s websites are powered by Spin, and there are quite a few users who are deploying their Spin applications to Fermyon Cloud. reply jedisct1 18 hours agoparentprevHow to use Spin with Zig? reply matei_radu 13 hours agorootparentHey, jesdict1!Check out this community project that adds support for Zig — https:&#x2F;&#x2F;github.com&#x2F;tensorush&#x2F;zig-spin. reply neophyt3 13 hours agoparentprevHi Matei_Radu, Is it possible for spin to support actor-model pattern for eg. can it run long running process to execute trading strategies which will accept tick data every second reply matei_radu 4 hours agorootparentHey, thanks for the question!The short answer right now is no. The behavior of the default (and most popular) trigger in Spin (the HTTP trigger) is to create a new instance for handling each incoming request. We made that choice primarily because we want to leverage the really good startup times for Wasm (and in particular for Wasmtime), and not running any guest code (in this case, business logic) until there is an actual incoming request means the server can execute other applications while idle.Now, HTTP workloads are not the only type of workloads that Spin can handle — because of the way it&#x27;s built, it&#x27;s entirely pluggable and you can build your own trigger (for example https:&#x2F;&#x2F;github.com&#x2F;fermyon&#x2F;spin-trigger-sqs), and potentially have long-running processes, but that is not currently possible with Spin today. reply luismedel 14 hours agoprevI still have to try wasm, but I see the main focus seems to be on cloud and edge deployments.What I&#x27;d really like would be to program a game in C (or classic Turbo Pascal) and have a way to run it \"hosted\" in a iOS, Android ornative app. Is that possible nowadays? reply parasti 2 hours agoparentI ported Neverball, a game written in C, to WASM (https:&#x2F;&#x2F;play.neverball.org&#x2F;). It requires a browser to run, meaning it runs on any device that has a browser. That is superior to native in my eyes. reply azakai 9 hours agoparentprevYou can compile the game to wasm and run it in a web environment. That can be a wrapper around a system webview, so you don&#x27;t need to actually bundle a web engine in your app.The web environment would provide all the API support for your game: graphics, audio, networking, etc. in a cross platform way.This works today - many game engines compile to wasm, from Unity to Godot - but it is more popular to ship a native build of the engine on each platform rather than use a web environment. But that&#x27;s because those engines take the time to port to each of those platforms; instead, you can use wasm + the web to get portability in a much simpler way (but with some limitations, of course). reply vivegi 3 hours agoparentprevNot WASM-related, but just a few days ago we had a Cosmopolitan libc announcement on HN. https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=38101613This promises a single C code base and portable executable generation for Linux MacOS Windows FreeBSD OpenBSD NetBSD reply born-jre 2 hours agoparentprevhttps:&#x2F;&#x2F;wasm4.org&#x2F; reply kvdveer 13 hours agoparentprevSomeone would need to implement a library to abstract away the differences between all of these platforms, like Spin does for server software.I&#x27;m not aware of a tech stack that does that. reply trealira 13 hours agorootparentI also replied to OP, but SDL is popular for this.https:&#x2F;&#x2F;www.libsdl.org&#x2F; reply syrusakbary 13 hours agorootparentprevWASIX might come in handy for that!https:&#x2F;&#x2F;wasix.org reply rockwotj 8 hours agorootparentAppreciate your hustle! ABC reply trealira 13 hours agoparentprevYou could write it using SDL2, a popular C library. They say the support iOS and Android: https:&#x2F;&#x2F;wiki.libsdl.org&#x2F;SDL2&#x2F;Installation reply jtflynnz 16 hours agoprevVery intriguing, great work and thanks for sharing! reply matei_radu 13 hours agoparentThank you for the kind words! reply jokoon 13 hours agoprevhow can I call a js function from wasm? reply _a_a_a_ 16 hours agoprev [–] Ahem? \"Spin is a widely used open-source software verification tool\"and it&#x27;s been around a long time\"The tool was developed at Bell Labs in the Unix group of the Computing Sciences Research Center, starting in 1980, and has been available freely since 1991\"http:&#x2F;&#x2F;spinroot.com&#x2F; reply 9dev 14 hours agoparentI wonder if we’re at a point where it doesn’t really make sense anymore to insist on unique names. Most of the good ones have been used by now; and this likely won’t get better as more time passes. reply slimsag 14 hours agorootparentIt&#x27;s a solved problem, and it&#x27;s called trademark law &#x2F; a wordmark. reply 9dev 11 hours agorootparentWell it’s certainly not solved by trademark law for me, a lowly software engineer, trying to pick a rememberable name for my open source project that’ll maybe grow into something bigger someday. reply rubyfan 13 hours agorootparentprevIf you’ve been through the process of naming something that is safe for trademark purposes then you might think we’re beyond unique names for things. We’re out of options. reply theamory 15 hours agoparentprev [–] Ha, naming is tough! At least it&#x27;s not named Atlas :) reply notum 14 hours agorootparent [–] Allow me to introduce you to Watergate, our new dam simulation platform. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Fermyon has introduced Spin 2.0, a tool for building, distributing, and operating WebAssembly (Wasm) applications on cloud platforms. It is portable and optimized for IoT scenarios.",
      "Spin 2.0 enhances the developer experience by enabling WebAssembly composition, boosting performance, and facilitating efficient data exchange among components without requiring knowledge of each other’s structure.",
      "The tool accentuates security by creating new Wasm instances for each request. Spin 2.0 is also expecting to incorporate the upcoming final version of WebAssembly System Interface (WASI), enhancing interoperability and language support."
    ],
    "commentSummary": [
      "Fermyon has released Spin 2.0, a tool for building, distributing, and running WebAssembly (Wasm) apps in the cloud, boosting performance and developer experience.",
      "Spin 2.0 supports portable applications across operating systems and IoT scenarios, allows different language components to exchange data efficiently, and heightens security by generating new Wasm instances for each request.",
      "Fermyon is preparing to implement the final version of the WebAssembly System Interface (WASI), which could enhance Spin's compatibility and support for various languages."
    ],
    "points": 158,
    "commentCount": 33,
    "retryCount": 0,
    "time": 1699099310
  },
  {
    "id": 38140697,
    "title": "Former Prime Minister Shinzo Abe's Assassination: An Attack Against the Unification Church's Influence in Japan",
    "originLink": "https://www.theatlantic.com/magazine/archive/2023/10/shinzo-abe-assassination-japan-unification-church-moonies/675114/",
    "originBody": "SKIP TO CONTENT Site Navigation Popular Latest Newsletters Sign In Subscribe October 2023 Issue EXPLORE GLOBAL THE BIZARRE STORY BEHIND SHINZO ABE’S ASSASSINATION The man who allegedly killed the former prime minister says he was aiming for something larger: the Unification Church—the Moonies—and its political influence in Japan. By Robert F. Worth Illustrations by Chantal Jahchan Former Japanese Prime Minister Shinzo Abe, who was assassinated in July 2022. Inset: Unification Church founder Sun Myung Moon and his wife, Hak Ja Han Moon, in 1984. (Sources: DPA / Alamy; API / Gamma-Rapho / Getty; Minokuniya / Getty; Wikimedia) SEPTEMBER 18, 2023 SHARE SAVED STORIES SAVE Subscribe to Listen to this Article 00:00 43:29 Listen to more stories on Curio This article was featured in One Story to Read Today, a newsletter in which our editors recommend a single must-read from The Atlantic, Monday through Friday. Sign up for it here. On the last morning of his life, Shinzo Abe arrived in the Japanese city of Nara, famous for its ancient pagodas and sacred deer. His destination was more prosaic: a broad urban intersection across from the city’s main train station, where he would be giving a speech to endorse a lawmaker running for reelection to the National Diet, Japan’s parliament. Abe had retired two years earlier, but because he was Japan’s longest-serving prime minister, his name carried enormous weight. The date was July 8, 2022. Explore the October 2023 Issue Check out more from this issue and find your next story to read. View More In photos taken from the crowd, Abe—instantly recognizable by his wavy, swept-back hair; charcoal eyebrows; and folksy grin—can be seen stepping onto a makeshift podium at about 11:30 a.m., one hand clutching a microphone. A claque of supporters surrounds him. No one in the photos seems to notice the youngish-looking man about 20 feet behind Abe, dressed in a gray polo shirt and cargo pants, a black strap across his shoulder. Unlike everyone else, the man is not clapping. Abe started to speak. Moments later, his remarks were interrupted by two loud reports, followed by a burst of white smoke. He collapsed to the ground. His security guards ran toward the man in the gray polo shirt, who held a homemade gun—two 16-inch metal pipes strapped together with black duct tape. The man made no effort to flee. The guards tackled him, sending his gun skittering across the pavement. Abe, shot in the neck, would be dead within hours. TO READ THIS STORY, SIGN IN OR START A FREE TRIAL. NEVER MISS A STORY. START YOUR FREE TRIAL. Uncompromising quality. Enduring impact. Your support ensures a bright future for independent journalism. GET STARTED ALREADY HAVE AN ACCOUNT? SIGN IN",
    "commentLink": "https://news.ycombinator.com/item?id=38140697",
    "commentBody": "Shinzo Abe&#x27;s AssassinationHacker NewspastloginShinzo Abe&#x27;s Assassination (theatlantic.com) 157 points by simonebrunozzi 20 hours ago| hidepastfavorite183 comments bragr 19 hours agohttps:&#x2F;&#x2F;archive.ph&#x2F;I3UcQ reply linusg789 15 hours agoparenthttps:&#x2F;&#x2F;ghostarchive.org&#x2F;archive&#x2F;szzB2 reply nijave 19 hours agoparentprevnext [11 more] Not sure if it&#x27;s just me but I routinely get stuck in a captcha redirect loop with archive.today (like captcha button, get redirected back to same captcha page) reply latchkey 16 hours agorootparentSame with me for a few weeks now. Turned on my vpn and things worked. So the other suggestion to not use cloudflare dns is probably what is happening under the covers. Archive doesn&#x27;t like CF at all. reply bombcar 18 hours agorootparentprevChange DNS to not use Cloudflare. reply jyunwai 17 hours agorootparentThis worked for me. I found that I changed my DNS server to Cloudflare with the AdGuard software installed on MacOS a while back (AdGuard > Preferences > DNS), and changing this to a different server fixed it.I also used the command `sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder` on Terminal (double-check this command before using) to flush the DNS cache, so the change would immediately take effect with the archive websites. reply WarOnPrivacy 13 hours agorootparentprevThis is a separate issue from the previous Cloudflare issue and it manifests differently.Getting Captcha&#x27;d happens with non-cloudflare resolvers as well, tho not universally nor consistently.I forced all of Archive domains to query against Quad9 and started getting unskipable Captchas months ago - when I was local(US).When I placeshifted to overseas, Quad9 resolved to different IPs and those were usable. reply bombcar 10 hours agorootparentThe technical reasons behind it are that the archive.today guy wants any takedown notices to be cross-border, so he wants to know what country you are in so he can redirect you to a server outside it.Cloudflare doesn&#x27;t support a DNS extension that allows this (eDNS maybe?) and so it fails. reply invisibel 13 hours agorootparentprevstuck in a captcha redirect loop with archive.todayTheir captcha page is odd, styled to look like Cloudflare&#x27;s captcha gate but uses reCAPTCHA which Cloudflare publicly spoke about switching from.Code of the page also seems to include a strange XmlHttpRequest to some blog site with randomized query string (see end of https:&#x2F;&#x2F;pastebin.com&#x2F;W21Au8RK), along with some fingerprint library (though commented out)That blog site loads very slow for me if I go there manually - maybe some kind of DoS being directed to it?Seen this same faux-cloudflare page used on btdig.com too, with the same strange XmlHttpRequest & fingerprint code, pretty weird. reply lionsdan 19 hours agorootparentprevThe same thing happened to me on a different article yesterday using Firefox. It worked using Edge. reply garciansmith 18 hours agorootparentThere&#x27;s a longstanding issue with using Cloudflare DNS. If you change Firefox&#x27;s secure DNS provider settings to NextDNS the page loads without any captcha. reply WarOnPrivacy 13 hours agorootparentThis is not the longstanding Cloudflare issue. That made Archive sties totally unreachable.This Captcha issue occurs with non-cloudflare resolvers as well, although with great inconsistency. It depends on the resolver and the user&#x27;s location when they query. Results can change hours later. reply haraldooo 19 hours agorootparentprevIt’s the same for me reply abecode 18 hours agoprevI went to a conference in Nara last year and at one of the receptions I told a Japanese attendee that I was sorry to hear about the assassination. I joked that my name is pronounced Abe like Abe Lincoln, not like Shinzo Abe. He kind of shrugged and said it would be kind of like if it had happened to Trump in the US, in that there were a lot of of people that didn&#x27;t like him.The article makes it seem like people discovered about the cult connections after the fact. I wish I had known more about it to ask more questions. If anyone has more insight about it, I&#x27;d be glad to learn more.Ironically I was reading 1Q84 at the time, which is about a cult in Japan. reply tjpnz 16 hours agoparentThe cult connections weren&#x27;t widely known by the public prior. His assassin opened up a giant can of worms with the Reunification Church still discussed on the nightly news to this day. Last I heard the government is getting ready to ban them like they did Aum Shinrikyo. The whole thing has tarnished Abe&#x27;s legacy, that and his expensive state funeral which pissed off a good chunk of the public. reply wahnfrieden 16 hours agorootparentIt is an ongoing issue and point of discussion&#x2F;conflict with the public, with lots and lots of message management and incremental “progress”. There is some policy reform and push for more to be done. Doesn’t seem like much power has actually been purged of its accomplices tho kishida public support is very low I wouldn’t be surprised if it recovers whenever he’s replaced within his partypolitics is a losing game when the public buys into its machinations and scheming against their interests reply Aeolun 9 hours agorootparentprevI feel like the public in Japan can get upset about the weirdest things though.Everyone loses their minds over the princess leaving the imperial family getting a 1M departure gift, and a funeral for the single most significant PM of our time that cost ten million dollars.Meanwhile, everything has gotten 10% more expensive over the past year or so, which is actually worth getting upset about, compared to the 0.01 yen that the Abe funeral cost each Japanese citizen. reply niij 8 hours agorootparenthttps:&#x2F;&#x2F;www.wolframalpha.com&#x2F;input?i=10%2C000%2C000+usd+divi...Tangent, but I looked up the price since ¥0.01 sounded too low. It&#x27;s ¥12 per person on Japan (which should be a good approximation for number of japanese citizens) reply Aeolun 3 hours agorootparentApologies, I figured the same thing but I didn’t bother looking it up, because 0.01 or 12 yen is the same kind of irrelevant to everyone but a 5 year olds spending. reply rayiner 9 hours agoparentprev> He kind of shrugged and said it would be kind of like if it had happened to Trump in the US, in that there were a lot of of people that didn&#x27;t like him.Not really--Abe&#x27;s approval ratings were well above water almost his entire tenure, and his approval was often over 50%. Trump&#x27;s approval rating never hit 50% and his net approval was underwater almost his entire presidency.It would be more like Reagan. A large minority of people really hated Regan. But he was relatively popular overall. reply dieselgate 15 hours agoparentprevNot getting into politics at all but I imagine it&#x27;d be utter chaos if anything similar were to happen to Trump, that&#x27;s an interesting perspective to hear though. reply huytersd 10 hours agorootparentI doubt it. You’re going to get some diehards try and shoot up some innocents somewhere but that’s nothing new for the US. reply julianeon 7 hours agorootparentprevThis comment made me realize that when Trump passes there will 100% be a conspiracy about it, no matter the cause.For the average American man who is Trump&#x27;s age (77) the chance of dying in that same year is about 5%, according to the Social Security Administration&#x27;s Actuarial Life Table.This is a stat which only goes in one direction - up - over time. It&#x27;s at 6.5% at 80, 18% at 90, and a sobering 38% at 100. reply dmonitor 14 hours agorootparentprevIf Trump died, and in the aftermath it was revealed he had ties to a Chinese cult, his only remaining supporters would probably be the cult-like reality deniers. reply macintux 14 hours agorootparent> ...his only remaining supporters would probably be the cult-like reality deniers.He built a huge base largely on people who prefer to believe him over reality. reply edgyquant 10 hours agorootparentEasier pill to swallow than admitting you live in a bubble reply GartzenDeHaes 13 hours agorootparentprev\"These people (the Trump voters) are sick and tired of being lied to by fake politicians and they just want to burn the whole system down -- Trump is their fire bomb.\" -- Michael Moore, prior to the 2016 election. reply Aloha 13 hours agorootparentThat&#x27;s not wrong, we have an issue with politicians promising things that are impossible or at a minimum highly implausible - because the structure of our political system means they won&#x27;t be thrown out on their ear for making promises they can&#x27;t keep. reply Gud 12 hours agorootparentIt&#x27;s not that they promise things that they can&#x27;t deliver. It&#x27;s that they pretend to be fighters for good, while instead using the system for cynical self gain. reply Aloha 12 hours agorootparentBut they do promise lots of things they can&#x27;t deliver as well. reply kergonath 12 hours agorootparentprevIt kind of makes sense on an intellectual level, but I don’t think it is very plausible. Trump promised a lot of things when he was elected, most of which are practically impossible. I think he just promised the right things for his audience, whereas most politicians are so far up their arses that they don’t know what actual people want or care about. reply chmod775 10 hours agorootparentI don&#x27;t think that&#x27;s what GP meant: Voters just wanted to set the whole circus on fire. That the person they chose for the job also made impossible promises didn&#x27;t matter.This happens a lot on a smaller scale in other democracies that aren&#x27;t a two party system - people vote for some nonsense radicals or weirdo upstart party to signal the establishment it needs to change. Sometimes this has quite funny outcomes: Pirate party, the Greens in Germany in 1983, etc. Other times it&#x27;s scary nutjobs. Rarely the parties stick around for longer, slowly becoming the establishment. reply Aloha 12 hours agorootparentprevHow is that different than anyone else?Republicans and Democrats alike say whatever they need to win a primary and general election, democrats do that in smaller quantities - but it&#x27;s still the same bullshit.And before anyone says I&#x27;m \"both sidesing\" the green new deal (which was little more than a messaging bill with lots of words and little substance) was no more passable than building a southern border wall was, or repealing Obamacare (though this got close) for that matter. reply darkerside 12 hours agorootparentprevI actually think it&#x27;s that politicians have been unwilling to promise things that they feel are politically infeasible, and arguably make no sense, like building a wall to Mexico reply Aloha 12 hours agorootparentOnce Trump and his ilk came in, Those people lost elections. reply rayiner 8 hours agorootparentprev> we have an issue with politicians promising things that are impossible or at a minimum highly implausibleThat&#x27;s every democracy. The issue we have is that we&#x27;re in a period where trust in elites is at rock bottom. (Both sides&#x27; elites--Mitch McConnell isn&#x27;t much more popular among Trump voters than Biden.) The normal function of elites keeping the unwashed masses grounded in reality isn&#x27;t working. reply eastbound 12 hours agorootparentprevIsn’t Michael Moore a Democrat? reply GartzenDeHaes 9 hours agorootparentYes. This was part of an MSNBC discussion about Clinton&#x27;s problem with union and working class white voters. The panel was having a hard time understanding why union members would vote Republican. reply chihuahua 10 hours agorootparentprevThat Chinese cult would suddenly be immensely popular among tens of millions of Americans. Those people would dedicate their lives to the cult. reply midasuni 13 hours agorootparentprevThe ones that almost triggered an insurrection and civil war a couple of years ago? reply DontchaKnowit 6 hours agorootparentCivil war? Really? That. Ever almost happened. Dont be dramatic reply SilasX 12 hours agorootparentprevWouldn’t a better analogy be a Mexican cult, to better approximate a country with the same relationship as China to Japan? reply t0bia_s 3 hours agoprevIsn’t that topic too political and should be flagged? I&#x27;m trying to be oriented here. Some others submissions, ie about freedom of speech, are flagged.I wish there is some explanation for flagged submissions. reply cyber_kinetist 2 hours agoparentFrom the HN Guidelines about what constitute as a valid post:> anything that gratifies one&#x27;s intellectual curiosity.Given that the article is quite descriptive and well-researched, the comment section is civil, and lead to many interesting discussions about politics and history, I would say that there is no need to flag this post. reply BlueTemplar 13 hours agoprev> A third son, Hyung Jin “Sean” Moon, founded a separate, gun-centered church in Pennsylvania known as Rod of Iron Ministries, where followers do target practice with AR-15s and bring guns to church to be blessed. Hyung Jin wears a golden crown made of rifle shells, and delivers hate-filled sermons against the Democratic Party. He also expects to become the king of America. He reviles his mother—who runs the international church in South Korea—as the “whore of Babylon.”Please wake me up, I must have fallen asleep in front of a South Park episode... reply iamcreasy 13 hours agoparentNowadays I find Onion more coherent and pacifying news source than the traditional ones. reply defen 3 hours agoparentprevAnother son (Justin) owns a small arms manufacturer (Kahr Arms) reply 7thaccount 13 hours agoparentprevThere&#x27;s an American Gods episode like that where Vulcan hangs out. reply treme 16 hours agoprevIt&#x27;s fascinating to me that moonies managed to have Abe & Trump speak at their event for millions. Probably one of most fascinating political cults of modern times. reply throwaway128128 14 hours agoparentThe Moonies have woven themselves into the American right wing for decades. Reagan said the Washington Times, which is an organ of the Unification Church, was his favorite newspaper.You can see Falun Gong attempting the same in the United States. The Epoch Times is Falun Gong&#x27;s \"media outlet\" and it sponsors and shapes a lot of content online. It&#x27;s all bankrolled by Shen Yun performances too. These rabbit holes go to strange places! reply timmytokyo 13 hours agorootparentNewsweek is basically owned and operated by the Moonies now, too [1].[1] https:&#x2F;&#x2F;www.motherjones.com&#x2F;media&#x2F;2014&#x2F;03&#x2F;newsweek-ibt-olive... reply throwaway128128 13 hours agorootparentOh, TIL. I&#x27;ve noticed Newsweek&#x27;s decline. Lots of flame-fanning. reply philwelch 12 hours agorootparentNewsweek infamously relaunched itself in 2014 with a dramatic story falsely accusing a Japanese man living in California of being Satoshi Nakamoto. So it’s not exactly a credible outlet.FWIW, the owner of Newsweek at the time wasn’t the Moonies, but rather David Jang, who is an evangelical Presbyterian. Things have apparently gotten complicated since then, with a change in ownership and then Newsweek itself reporting a year ago that they were suing Jang: https:&#x2F;&#x2F;www.newsweek.com&#x2F;newsweek-sues-david-jang-leader-sec... reply ChainOfFools 6 hours agorootparentWell considering that was actually the guy&#x27;s name (Dorian S. Nakamoto, S being Satoshi) it wasn&#x27;t exactly false, just a very weak form of true. reply phatfish 12 hours agorootparentprevHa, that&#x27;s what Shen Yun is about. Their ticket sales convoy pops up in an innocuous town in the UK a couple of times a year, looking rather out of place. reply paganel 13 hours agorootparentprev> which is an organ of the Unification ChurchBig TIL for me this one, and I thought I was smart enough for knowing about the connection between Falun Gong and the Epoch Times (I also know about the direct connection between Gulen&#x27;s movement and one of the best private schools here in Romania). reply earthboundkid 12 hours agorootparentAnother one to watch is the MEK. Any US politician who speaks up for the MEK is a shill who will do anything for money. https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;People&#x27;s_Mojahedin_Organizatio... reply Aloha 13 hours agorootparentprevFalun Gong at least makes no effort to hide its attachment to certain media outlets. reply user982 11 hours agorootparent\"The exact financial and structural connections between Falun Gong, Shen Yun and The Epoch Times remains unclear...Financial documents paint a complicated picture of more than a dozen technically separate organizations that appear to share missions, money and executives.\" (https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Falun_Gong#The_Epoch_Times_and...) reply api 14 hours agorootparentprevLately I’ve seen tons and tons of anti trans content that actually says sponsored by the Epoch Times. I’ve see it on Facebook and Xitter.I don’t get why that issue is so important to them. Maybe scaring people about trans people is just broadly working.Gotta fear monger or people might notice that most of our candidates are incompetent. Republicans are unelectable without scaring people about LGBT people and immigrants, while Democrats are unelectable without scaring people about Republicans. That seems to be the dynamic right now. reply throwaway128128 14 hours agorootparentSimple: grifting. Influence is what&#x27;s important to them. They tap into wellsprings of conservative grievance to increase media outreach. They became antivax when antivax sentiment went up, they&#x27;re here for the trans freakout, and they&#x27;ll surely work to be in place for the next hot button issue, too. reply htss2013 5 hours agorootparentprev>Republicans are unelectable without scaring people about LGBT people and immigrants, while Democrats are unelectable without scaring people about Republicans. That seems to be the dynamic right now.That was the dynamic. Now with NYC, Chicago, etc. being overwhelmed with migrant inflows, and Dem mayors like in NYC and Chicago declaring emergencies, do we really need Republican fear mongering to scare people about unregulated migration?If politicians try to gaslight people that obvious problems aren&#x27;t real, that can make the opposition electable all on its own. reply zdragnar 9 hours agorootparentprevLi Hongzhi, the founder of Falung Gong, views homosexuality as basically such a profound abnormal psychological state that it is among the worst of sins.It is no surprise that their mouthpiece would be rabidly against acceptance of gender dysphoria as anything other than a perverse mental disorder. reply graphe 13 hours agorootparentprevWhat content are you seeing? I&#x27;ve never seen those. reply bobthepanda 10 hours agorootparentModern ad targeting is a hell of a thing.At one point I was getting 40+ minute Youtube “ads” from the likes of PragerU and Ray Dalio because I watched some news and history content. reply api 13 hours agorootparentprevSome kind of video was one. Didn’t click on it.Of course I never use Facebook and my feed is full of ads for insane crap like these weird fake archaeology sites, so maybe that’s why. reply marcusverus 13 hours agorootparentprev> The Moonies have woven themselves into the American right wing for decades. Reagan said the Washington Times, which is an organ of the Unification Church, was his favorite newspaper.This is perhaps the flimsiest syllogism I have ever encountered. reply throwaway128128 13 hours agorootparentIf you want more context[0], here&#x27;s more:But if you don&#x27;t want to follow a link, here&#x27;s a quote: Over the years, Moon’s hidden money has helped many Republicans through hard times. In the 1980s, the American Freedom Council defended North against Iran-Contra charges and distributed 30 million pieces of political literature to help elect George Bush in 1988. It was later revealed that the AFC was backed by $5 million to $6 million from business interests associated with Moon.Moon’s organization also kept the right’s direct-mail guru Richard Viguerie afloat in the 1980s. At one stage, Viguerie profited from a big contract with the Washington Times for subscription solicitations, then, while facing a financial crisis that threatened his company’s future, Viguerie sold a building to a top Moon aide, Bo Hi Pak, for $10 million.Yet, even as Moon has gained influence in GOP circles, the sources of his money have always been suspect. In the late 1970s, a congressional investigation tied Moon’s Unification Church to the “Koreagate” influence-buying scheme directed by South Korea’s intelligence service, the KCIA, against U.S. institutions. In 1983, the moderate Republican Ripon Society raised warning flags, too. Rep. Jim Leach (R-Iowa), then Ripon chairman, charged that Moon’s church had “infiltrated the new right and the party it [the new right] wants to control, the Republican Party, and infiltrated the media as well.”But President Ronald Reagan embraced the Washington Times as his “favorite” newspaper and Moon’s newspaper returned the favor by defending the Reagan-Bush administrations at nearly every turn. In 1991, President Bush invited the paper’s new editor-in-chief, Wesley Pruden, to lunch “just to tell you how valuable the Times has become in Washington, where we read it every day.”[0] https:&#x2F;&#x2F;www.latimes.com&#x2F;archives&#x2F;la-xpm-1997-nov-16-op-54375... reply akira2501 13 hours agorootparentprev> The Moonies have woven themselves into the American right wingOur First Amendment specifically allows for freedom of association and religion. This used to be seen as an attribute, now it apparently has become cause for open prejudice.> The Epoch Times is Falun Gong&#x27;s \"media outlet\" and it sponsors and shapes a lot of content online. It&#x27;s all bankrolled by Shen Yun performances too.This is an intentionally misleading representation of the organization and it&#x27;s structure, which combined with the above, seems designed to besmirch the papers reputation and reporting without actually addressing either in any meaningful way.If the sword cuts both ways then your assessment is suggestively identical to the CCP position on the organization and on the religious views of it&#x27;s founders. reply Aloha 13 hours agorootparentHow is it intentionally misleading?It&#x27;s a newspaper given away for free in paper form, frequently.I don&#x27;t believe the Epoch Times to be a credible news source, in the same way that RT is not one. That doesn&#x27;t mean its not a news source worth looking at on occasion.I&#x27;m also skeptical of Falun Gong, first as a generally non-religious person, and then because they dont seem to like LGBTQ people very much - and I&#x27;m very much a member of that community.I feel everyone ought to have a right to practice their religion in peace, however when the practicing of your religion potentially impacts the secular word, I get concerned - I generally believe in a strong separation of church and state, and anyone who starts to encroach on that, puts my hackles up. reply hutzlibu 12 hours agorootparent\"however when the practicing of your religion potentially impacts the secular word, I get concerned - I generally believe in a strong separation of church and state, and anyone who starts to encroach on that, puts my hackles up.\"But you cannot really separate personal believe from political stance. So religious believe will always influence the secular world. Meaning religious people will vote and lobby for people and organisations sharing their point of view. reply kergonath 12 hours agorootparent> But you cannot really separate personal believe from political stance. So religious believe will always influence the secular world. Meaning religious people will vote and lobby for people and organisations sharing their point of view.Sure. It’s not exactly what’s discussed here, though. We’re talking about Reagan and Bush (and Abe and others) coldly using propaganda machines backed by extremist cults for influence campaigns. It’s far beyond the same pushing the agenda for which they were explicitly elected, which happens to be backwards on a lot of levels but is at least genuine and open.These organisations also cause concerns of foreign interference, considering their links with political parties and powerful politicians abroad.There have been similar issues in Europe with extremist parties bankrolled by Russia to destabilise local political systems, which does not have any religious aspect. The problem is not the religion, it’s the structures, their objectives, and how they work and corrupt. reply throwaway128128 13 hours agorootparentprevThe First Amendment says that religion and government should remain separate. I have the right to freely observe that some religions are aggressively testing that boundary more than others.But, \"intentionally misleading\"? Can you please explain the ways I&#x27;ve mislead people? Here are some essays which go into the claims in more detail.https:&#x2F;&#x2F;www.newyorker.com&#x2F;culture&#x2F;culture-desk&#x2F;stepping-into... https:&#x2F;&#x2F;www.nytimes.com&#x2F;2020&#x2F;10&#x2F;24&#x2F;technology&#x2F;epoch-times-in...As for The Epoch Times&#x27; reputation, its slant is immediately obvious upon reading the paper or seeing YouTube ads for it. reply rufus_foreman 13 hours agorootparent>> The First Amendment says that religion and government should remain separateThat&#x27;s not what it says.The US can&#x27;t officially be Catholic. Nor can it officially be Protestant. That&#x27;s what the first amendment says. reply hutzlibu 12 hours agorootparentWell, I am not a american, but as far as I understand it, it does say it.\"The First Amendment (Amendment I) to the United States Constitution prevents the government from making laws that: regulate an establishment of religion; prohibit the free exercise of religion;\"Any incorporation of religious organisations into the state fabric, would be an \"establishment of religion\". So of course open religious people can be part of the government. But the government may have no favourite religion it subsidizes, teaches in schools etc. or prefers in any way. reply LegionMammal978 9 hours agorootparentprevIn practice, the Supreme Court has intepreted the First Amendment as implying full separation of church and state; for instance, school prayer is forbidden [0], even if it&#x27;s voluntary and non-denominational.[0] https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;School_prayer_in_the_United_... replyasimovfan 2 hours agoprevBasically an anime plot. reply 1letterunixname 1 hour agoprev20 years ago, the Moonies sent out (and maybe still does) young, impoverished, probably easily influenced Koreans to American university campuses every now and then to extract money from college students using a clipboard-based montage of depressing photos.They also have&#x2F;had ties with the Bush family. Also, they own the News World Communications, UPI, and the Washington Times. Just think s&#x2F;Moonies&#x2F;Korean Scientology&#x2F;. Media ownership not to be confused with The Epoch Times owned by s&#x2F;Falun Gong&#x2F;Chinese Scientology&#x2F;. reply pmarreck 9 hours agoprevI had a kid 2 years ago and that&#x27;s the only excuse I have for somehow having not heard of this news (or it simply slipped through my sleep deprived memory). Wow. I thought for a second this was about the Inejiro Asanuma assassination https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Assassination_of_Inejir%C5%8D_... but... wow. Homemade gun? I guess someone sufficiently motivated will figure out a way to kill someone at range even with strict gun controls... reply graphe 18 hours agoprevThe sushi trade is unable to be separated from the moonies. https:&#x2F;&#x2F;www.nytimes.com&#x2F;interactive&#x2F;2021&#x2F;11&#x2F;05&#x2F;magazine&#x2F;sush... that will be Moon&#x27;s legacyI know from personal experience that many Koreans who own sushi restaurants are part of this cult, they knew each other at church all donated a lot and the only reason I know is that my friend dated a girl whose parents were part of it. reply potatopatch 11 hours agoparentAre there things that would tend to identify an establishments connections to the moonies? I.e. some kind of symbolism in decorations? reply dieselgate 15 hours agoparentprevThanks for the article link, pretty insightful and interesting to read reply wahnfrieden 16 hours agoparentprevHow are moonie member owners to their workers? reply graphe 16 hours agorootparentI think the ones I saw recently were all members of the cult. They&#x27;re overly religious and their family and children are often working there, children hate it and the cult. They try to keep costs low, donations from their work high, and it seems to function efficiently with a religious fevor. I&#x27;ve never seen much excess use of money from sushi restaurants. Haven&#x27;t been to a chick fil a in a while but maybe like that culture but less friendly, all family and they&#x27;re thinking of more efficient ways to donate. Many sell merchandise and try to sell lots of high profit goods. I&#x27;m sorry if this isn&#x27;t a good answer.Edit: I forgot about a sandwich shop (the yellow deli) I&#x27;ve heard that is always open that is a cult. I never been but it sounds a lot closer to this cult except they seen to recruit more and focus on cute receptionists girls working at the counters. reply wahnfrieden 16 hours agorootparentNorth Koreans in Japan sometimes have businesses that operate to send money back home. Seems like a lot of coercion involved in both cases reply graphe 13 hours agorootparentIt happens a lot with dictator run governments. I heard that&#x27;s how foreign Eritreans are treated, or their family dies. A man living in Australia told me he had to send money back to his government quite often. reply AniseAbyss 18 hours agoparentprevThe CIA involvement in spreading Christianity through Asia is not something that is talked about enough. It reminded me of the Bene Gesserit. reply cool_dude85 6 hours agorootparentDo you have a book rec on this? The story I always heard about Korea specifically was a lot of missionary organizations being there during and after the war and genuinely offering a lot of support. reply philistine 18 hours agoprevIt’s crazy how the assassination and the public acceptance of the assassin’s goals sound like something out of Persona 5. reply shadowgovt 15 hours agoparentCorrect, but causality is reversed.When you are an artist in Japan, there are certain things you will pull a massive amount of criticism down upon yourself for directly critiquing or commenting on via your art. You can&#x27;t make a video game about \"Hey maybe it&#x27;s weird and a little not okay that it&#x27;s an open secret that formal power in Japan is very closely tied to the informal power structure of what is basically a specific religious cult.\" Making that game will pull all kinds of formal and informal pressure down on a person&#x27;s head.... But making a game where young people look at the existing power structure and band together to defeat it, fighting all the way up to divinity itself? Not only is there a reason Persona 5 is what it is, there&#x27;s a reason we keep seeing that theme in JRPGs.https:&#x2F;&#x2F;youtu.be&#x2F;IEUqLL8J4gI?si=vzc7RK538-J28G-z reply graphe 12 hours agorootparentI enjoyed this video. Thanks for showing it. reply meatjuice 6 hours agoparentprevIt is a revolution, and as a Japanese, it feels much more like a scene from the V for Vendetta. reply udkl 18 hours agoparentprevYour comment reminded me of the excellent score in P5, and now it’s going to be stuck in my head for the next some days ! reply dclowd9901 18 hours agoparentprevI was reading the article and it honestly sounded like the description of a movie or something. What a crazy development in that story. reply jacooper 17 hours agoparentprevIn light of current events, doesn&#x27;t seem weird at all. reply ls612 18 hours agoparentprevJapan is a strange place. reply capableweb 18 hours agoparentprevWhy is that so crazy? Happens all the time that people get assassinated and the public sides with the assassin. If the US was successful with any of their plots to assassinate Castro I&#x27;m sure the US public would mostly side with their government about it, as a relatively famous example.Another more contemporary example would be the assassination of Yitzhak Rabin (prime minister of Israel) in 95, which had a lot of local public support. reply pjc50 16 hours agorootparent> the assassination of Yitzhak Rabin (prime minister of Israel) in 95, which had a lot of local public support.Kept the war going until the present day, too. reply mongol 11 hours agorootparentFrom the article > Tetsuya Yamagami can console himself that he may be among the most successful assassins in history.I actually think the assasin of Rabin was the most successful, in terms or changing history in his desired direction reply mola 15 hours agorootparentprevBombing busses in cities by Hamas also helped.... reply carlosdp 17 hours agorootparentprevThe Castro example doesn&#x27;t really fit here. That would be an assassination of a foreign national, not a domestic assassination like in Rabin&#x27;s or Abe&#x27;s. reply capableweb 15 hours agorootparentI never played Persona 5, is that relevant to \"public support of a assassination\"? Otherwise I don&#x27;t see how it&#x27;s relevant. reply NobodyNada 15 hours agorootparentOne of the central themes of P5 is that “public support” tends to be based on spectacle and emotion rather than justice — kinda like the idea of news as entertainment rather than truth. The assassination of a foreign leader would be news, but it wouldn’t really be a spectacle in the same way as a local politician, and wouldn’t create the kind of emotional reaction within the public that the parent comment is referencing. reply shadowgovt 14 hours agorootparentThis is a very powerful notion in general. In an extremely real way, justice is just \"codified vibes.\" The primary purpose of a functioning judicial system is really to allow the public to sleep soundly in their beds at night. reply capableweb 14 hours agorootparent> The primary purpose of a functioning judicial system is really to allow the public to sleep soundly in their beds at night*In some countries.In others, the primary purpose is rehabilitation so people can eventually re-join society as \"better people\". reply depereo 14 hours agorootparentThat&#x27;s the same thing, just with different publicly accepted definitions of &#x27;safe&#x27;. replygraphe 17 hours agorootparentprevI agree. If Trump or Obama had been assassinated during their presidency, there would have been some support among the public, wide condemnation by the elites worried about their status and a news blackout on why the assassin may have been justified. reply wddkcs 17 hours agorootparentAn Obama assassination might have led to a more immediate George Floyd style disruption of major cities. The murder of the first black president is a chilling possibility to think about. Trumps assassination might have been equally toxic, given the rhetoric of the time. Especially if it were not denounced by the media, it might have been similarly corrosive. Arguably Trump is being politically assassinated presently, by his own hand as much as anyone else&#x27;s. reply graphe 16 hours agorootparentIt&#x27;s all speculative but there will be support for either, during their presidency or after from people. The US&#x27;s media is way more controlled, I generally think assassinations are popular among the public. reply mola 15 hours agorootparentprevThere was not a lot of public support for the assassination of Rabin. That&#x27;s a lie. reply capableweb 14 hours agorootparentUltra-national movement in Israel was strong then and is still strong, a movement which publicly were happy about the assassination as they thought that Rabin would lead down the road of loosing ground to Palestine. reply selimthegrim 14 hours agorootparentprevYou might want to ask Netanyahu about that. reply earthboundkid 12 hours agorootparenthttps:&#x2F;&#x2F;www.telegraph.co.uk&#x2F;world-news&#x2F;2022&#x2F;11&#x2F;05&#x2F;meet-itama... replymcpackieh 18 hours agoprev> \"Eating raw tuna was still an exotic pursuit to Americans when Moon—the self-declared “king of the ocean”—began investing in shipyards in the late 1970s and sending his followers to sell door-to-door from refrigerated vans. True World Foods, a seafood company founded at Moon’s direction, controls a large share of the sushi trade, selling raw fish to thousands of restaurants across the United States and Canada.\"Huh reply RunSet 11 hours agoparent> \"Yamagami’s trial will offer Japan a chance to relive the entire drama. No date has been set as of this writing. Japanese prosecutors take their time, and for a man who has admitted to killing a former head of state, there may be pressure to apply the death penalty. If so, Yamagami will face an excruciating fate. Death-row prisoners in Japan are not told the date of their execution in advance. They wake up every morning not knowing if this day will be their last.\"Huh reply mcpackieh 10 hours agorootparentI thought Japan only gave the death penalty to people who commit multiple murders, or tortured people to death. reply photochemsyn 18 hours agoprevnext [5 more] [flagged] fatbird 18 hours agoparentThe comparison between South Korea and Israel isn&#x27;t very strong. America fought the Korean War and still has 28,500 troops stationed there, along with a combined forces command. Some US soldiers are stationed right on the border with North Korea, just so that a North Korean invasion will kill Americans and immediately trigger an American response.Secondarily, securing Korea as a trading partner for Japan was an explicit part of US post-WW2 strategy, where Japan would be rebuilt as a bastion of the western world&#x27;s economy, and having local trading partners strengthened that. South Korea has always had a deeply intertwined relationship with the US.When the Moonies showed up in the 70s&#x2F;80s, there was no influence to buy. South Korea was already receiving all the support it could handle, and as a cult, the Moonies showed up at the tail end of a lot of 60s&#x2F;70s spirituality that had already soured the American public on alternative religions.Whatever you think of the pro-Israel lobby, drawing to the Moonies doesn&#x27;t really work. reply ls612 17 hours agorootparentForcing Korea and Japan to play nice with each other was also an explicit policy to try to bury historical grievances. reply fatbird 5 hours agorootparentTrue, to which I can only say \"lol\". reply jacooper 17 hours agoparentprevAIPAC and Israel. reply AndrewKemendo 18 hours agoprevMeta comment on cultural awareness: \"Japan wants you to say its leader’s name correctly: Abe Shinzo [1]\"Why authors are still messing this up almost 5 years later is bewildering[1]https:&#x2F;&#x2F;www.cnn.com&#x2F;2019&#x2F;05&#x2F;21&#x2F;asia&#x2F;japan-name-abe-shinzo-in... reply wrp 18 hours agoparentEvery Japanese and Korean person I work with presents their names with the family name last when operating in an English speaking context. Conversely, my (American) name is often written family name first (and in katakana) when I&#x27;m in Japan.Real cultural sensitivity is accepting the social conventions of the society you are operating in. reply vitus 15 hours agorootparentEh.I&#x27;ve never seen any articles referring \"Jinping Xi\", \"Jong-Un Kim\", \"Jae-in Moon\", \"Zedong Mao\", Yat-sen Sun\".Non-heads of state get similar treatment: Lee Sedol, Bong Joon-Ho, Yao Ming vs. Hayao Miyazaki, Akira Kurosawa.This seems to have originated in the Meiji era (in the 19th century), when the Japanese assimilated many aspects of Western culture and traditions.https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Japanese_name#In_English_and_o... reply resolutebat 12 hours agorootparentYup, that&#x27;s the problem, the practice is inconsistent even in Japan and we do say Oda Nobunaga, Tokugawa Ieyasu etc for sufficiently historical figures. The Wikipedia guideline for this is quite the mess of exceptions:https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Wikipedia:Manual_of_Style&#x2F;Japa... reply sneed_chucker 18 hours agoparentprevCool, now anyone reading the name needs to be familiar with East Asian naming conventions to know which is the given and which is the family name.Should we just print it in katakana too, so that we&#x27;re not \"culturally unaware\"? reply jksk61 14 hours agorootparentwell it could be useful in literature where there are way too many zhang... reply darkerside 12 hours agorootparentprevWe also expect people to know the basics of geography etc. Seems fine not to always cater to the ignorant, although there are specific magazines where you might expect that. reply charcircuit 15 hours agorootparentprevIt should be written as 安倍晋三. reply pretendscholar 17 hours agoparentprevOne of the most annoying things about speaking the dominant world language (obviously it is also great in many respects) is that there is some pressure to change your language rather than just adjusting the sounds and spelling to the pre-existing phonetics. Erdogan is pronounced closer to erdoyan and Türkiye insisting on the umlaut. Nguyen and Pho rather than wynn and pha. Gyro instead of hyro. Blonde vs blond (WHY would we just have adjective modification for that word and none other) and colonel. You have to know a lot about so many different culture when a language should be self contained. I don&#x27;t tell the Chinese what name to use for my country (I think they call USA something like Beautiful Land) in their language or the Spanish or another group for any word. reply scyzoryk_xyz 15 hours agorootparentDang, never thought about that. Must be really hard.That joke out of the way, as a dual-citizen and polyglot my observation is that it is usually Americans giving other Americans shit about pronunciation. It’s perhaps (like you say) a form of jostling around how virtuous you are. Perhaps layered on top of some insecurity around how much of the world you got to see. reply yongjik 9 hours agorootparentprevIt&#x27;s less about being the dominant language and more about sharing the same writing system (the Latin alphabet) with most of the world. So, however a Vietnamese name is written, since it&#x27;s already in Latin characters, the characters are imported verbatim (well, usually diacritics don&#x27;t survive, but what can you do).The opposite extreme would be cases like Korean, with its own writing system not used anywhere else. Therefore, once an American name is written in Korean letters, there&#x27;s no ambiguity in how to read it. So Los Angeles is 로스앤젤레스 ro-seu-aen-jel-le-seu, and everyone who can read Korean knows exactly how to read it.Except... how do you determine which spelling to use? The sound systems are so different that there are usually no clearly correct matches. Also, how do you really know how these names originally sounds? Should Nevada be read with a long \"a\" or short \"a\" in the middle? You see a name Charles in an article, is he an Englishman or Frenchman (with different ch sounds)? Should we consider Einstein a German physicist, or an American one?Two book publishers make two different choices, and you end up with the same people&#x27;s name written in two different ways.So, basically, there&#x27;s no easy solution. You either pay the cost when you&#x27;re reading (as in English) or when you&#x27;re doing the transliteration (as in Korean). reply jltsiren 12 hours agorootparentprevIt&#x27;s the same in every language. When you take words and particularly names from another language, you have to make choices. Do you borrow the spelling or the pronunciation? Do you use a local version of the name? Or do you translate it?Suppose an American guy named John comes to Finland. Should he still continue spelling his name as \"John\"? Or should he take the pronunciation as given and start spelling his name as \"Dzon\"? Or should he adopt an equivalent local name, such as Juha, Janne, or Jani? Or should he go with a traditional version, such as Johannes or Juhana? And what happens if he changes the spelling but his American passport still uses \"John\"? reply BobaFloutist 15 hours agorootparentprevI mean part of it is we don&#x27;t really have a central language authority so when immigrants try to transliterate a word from their language, they go with their best guess based on what letters they understand to be equivalent, and sometimes they get it a little wrong, but by the time anyone realizes a convention has been set and it&#x27;s incredibly hard to shift conventions.It also feels very silly to change the spelling of a word or name when two languages share an alphabet, even if it makes it a little less phonetic. reply pretendscholar 17 hours agorootparentprevI should say a lot of this is internal as a form of social signaling about worldliness. Also not against loan words its just that you should adjust loan words and concepts to fit the phonetics and grammar of the language. reply namdnay 13 hours agorootparentprevPho is funny because it’s Vietnamese trying to say “feu” as in “pot au feu”. reply jasode 18 hours agoparentprev>Why authors are still messing this up almost 5 years later is bewilderingI don&#x27;t have an opinion on it but Westerners unfamiliar with Asian naming conventions can get conflicting signals.Some famous Japanese names that are well-known to Western audiences are written \"FirstName FamilyName\" instead of \"FamilyName FirstName\":baseball star: Shohei Ohtani not Ohtani Shoheiactor: Ken Watanabe not Watanabe KenMaybe those 2 constantly try to correct every journalist but I&#x27;m assuming they don&#x27;t. reply BonoboIO 18 hours agorootparentSomebody should ask them. Would be interesting to hear if that’s an issue or nobody cares. reply spondylosaurus 15 hours agorootparentQuite a few Japanese game developers style their names ason social media when they&#x27;re writing in English. Some examples that come to mind, going off of their Twitter accounts:* Masahiro Ito* Hideki Kamiya* Keita Takahashi reply nihonthrowaway 18 hours agoparentprevAs someone who speaks Japanese to be polite, and will dutifully follow all honorifics while in Japan:Japan doesn&#x27;t get to change English naming conventions in English speaking cultures and civilizations. reply makeitdouble 17 hours agorootparentThe language&#x2F;country norm is kinda irrelevant. In Japan John Lennon is not referred to as ”Lennon John”, nor is Miyamoto Musashi referred as \"Musashi Miyamoto\" in English.For famous names, outside of official dpcuments people will use whatever names feels right to them and I personally think that should be fine as long as the name is recognized. reply mrob 17 hours agorootparentprevBut why do China and Korea get to change English naming conventions? What makes Japan an exception? reply r2vcap 12 hours agorootparentI believe that&#x27;s a historical (19th-century) reason. Japan tried to live up to Western standards. They underwent radical changes and adopted Western culture, driven by the significant influence of the &#x27;脱亜入欧&#x27; (Leave Asia, Join the West) theory during the Meiji era. That&#x27;s why they adopted a Western-style naming convention for English names (Personal name + Family name).However, China and Korea didn&#x27;t modernize as fast as Japan. They didn&#x27;t have radical changes in the 19th century. (The result is that foreign concession in China, unequal treaties, colonization of Korea, etc.) So they didn&#x27;t have to change their naming convention.The reason why Japan is trying to change the English naming convention when they write in Japanese is similar to the reason mentioned above. The 21st century is Asia&#x27;s century. Japan feels that they don&#x27;t have to conform to Western standards anymore. They are trying to be more Asian. That&#x27;s why they are attempting to change the convention to synchronize as if they were writing in Japanese.I hope this helps. reply jasode 16 hours agorootparentprev>But why do China and Korea get to change English naming conventions?Americans are exposed to Chinese names in both orderings of \"Familyname Firstname\" and \"Firstname Familyname\":- \"Familyname Firstname\" ordering : actor Chow Yun-fat, and basketball player Yao Ming- \"Firstname Familyname\" ordering: actor Simu Liu, pianist Yuja Wang, and Alibaba co-founder Jack Ma. reply saltcured 12 hours agorootparentNot only that, we might be exposed to them for years without really knowing which is the family name and which is the given name!In a vacuum, I might have guess \"Chow Yun-fat\" as starting with the family name because I know that the hyphenated, two-part names are usually given. But a name like \"Yao Ming\" I might not have had any idea, since I don&#x27;t have the cultural exposure to know which single syllable words look more like family names versus given names.Imagine expecting a Chinese person to figure out \"Larry David\" with no other context. reply nihonthrowaway 17 hours agorootparentprevThey don&#x27;t get to either. The English speaking world can&#x27;t handle almost every Vietnamese person being Nguyen. reply stickfigure 18 hours agoparentprevThe article you linked explains exactly why the issue is complex&#x2F;unsettled and \"messing up\" isn&#x27;t really an appropriate term. reply nyolfen 14 hours agoparentprevi will be happy to accommodate this when speaking in japanese reply snvzz 18 hours agoprevnext [35 more] [flagged] tpmx 18 hours agoparent> Religion, sigh.So, no, not all religions are violent and&#x2F;or harmful.I&#x27;ve been an devout atheist since about the age of 10. That doesn&#x27;t stop me from seeing that:a) some religions are relatively harmless and mostly helpful to their believersb) some religions are very destructive to everyoneI don&#x27;t think we should go much further from here. reply colinb 18 hours agorootparentI&#x27;d be happy if you can tell me which religions fit (a). A quick scan of the news indicates that Judaism, Christianity, Islam, Hinduism, Buddhism, Mormonism, Scientology etc. don&#x27;t fit the bill, at least not without a lot of no-true-Scotsmaning. I think I can easily find evidence of followers of all of those religions killing their neighbors in the name of their god.N.B. I&#x27;m not trying to shit in the milk of any religious person. You do you. Just don&#x27;t try to claim that your club is actually less blood-soaked than the others. reply tpmx 18 hours agorootparentIrish, right? reply colinb 17 hours agorootparentMe? Yes I am. reply tpmx 17 hours agorootparent> Just don&#x27;t try to claim that your club is actually less blood-soaked than the others.I&#x27;m in Sweden. Religion here has sort of faded into the background. Very few people are religious. We observe the religion here more or less as as a cultural thing. It&#x27;s something we do at births, school exam celebrations and burials but not much else.Bload soaked club? Yes, a few hundred years ago. reply User23 18 hours agorootparentprevThe Soviet atheists absolutely took the cake for most murder by a religious faction.What you’re describing is a people problem, not a religion problem. reply imiric 17 hours agorootparent> Soviet atheists [...] religious faction.You&#x27;re confusing atheism for a religion.Those murders were conducted by oppressive governments with a specific agenda, that didn&#x27;t come from some atheist scripture.> What you’re describing is a people problem, not a religion problem.It&#x27;s a problem of organized groups of people motivated by a collective ideology. This is manifested primarily by religions, since most religious texts have some passages that reject foreign groups, or outright invite acts of violence against them[1,2].[1]: https:&#x2F;&#x2F;www.openbible.info&#x2F;topics&#x2F;killing_non_believers[2]: https:&#x2F;&#x2F;www.thereligionofpeace.com&#x2F;pages&#x2F;quran&#x2F;violence.aspx reply User23 12 hours agorootparent> You&#x27;re confusing atheism for a religion.Atheism is a religion. Atheists observably claim to have achieved gnosis. It’s agnosticism that is an absence of belief. reply amazingman 12 hours agorootparentAgnostic atheism is a form of atheism. Atheism isn&#x27;t a religion. It&#x27;s not even a belief. It&#x27;s just a lack of a specific kind of belief. Are there gnostic atheists? Sure. But even that is just a belief, and not a religion. reply lern_too_spel 18 hours agorootparentprevNobel laureate Steven Weinberg has something to say about this.\"With or without religion, good people can behave well and bad people can do evil; but for good people to do evil - that takes religion.\" reply graphe 17 hours agorootparentThe Chinese farmer story has something to say about it too. https:&#x2F;&#x2F;matterco.co&#x2F;the-maybe-story&#x2F;> One thing for sure is that life is uncertain. We never really know what situations may yield us—good, bad, or otherwise. Whatever happens in our life, we’ll never be sure of the consequences it may bring in the future. reply lern_too_spel 17 hours agorootparentIf that&#x27;s true, \"maybe\" we should have let Hitler live.In real-life, losing a horse or breaking a leg is a bad outcome over 99% of the time, and gaining free horses and avoiding conscription (and defeating despots attempting to conquer the world) is a good outcome over 99% of the time. reply graphe 16 hours agorootparentHitler could have united Europe. Had he won and taken over Russia and Europe it could have been much better. Had Genghis Khan not attacked so many places, legends of centuars may not exist and the world could be better. We don&#x27;t know. reply User23 16 hours agorootparentI find this line of argument to be a compelling refutation of any kind of consequentialist ethics from a human perspective. No human being ever has had or ever will have the ability to predict out the full consequences of an action throughout all time. reply lern_too_spel 13 hours agorootparentI invite you to put your ideology to practice and chop off your own arm. We don&#x27;t have the ability to predict the full consequences after all.The rest of us understand that though few things are 100% certain, many things are possible to predict with a high amount of certainty. reply User23 12 hours agorootparentI assume that sounded clever to you when you typed it, but I invite you to consider how it completely fails to follow in any way from the statement that human understanding of higher order consequences rapidly approaches absolute deficiency as the causal chain lengthens.My practical ethic is something closer to deontology. And it includes things like “don’t mutilate your body.” It’s precisely because I can’t follow those higher order consequence chains that I settle for following general moral principles instead of attempting teleological justifications for my actions. reply lern_too_spel 12 hours agorootparentWhy doesn&#x27;t your practical ethic include the general moral principle of not promoting religious nonsense? The causal chain is simple. People who believe religious nonsense can be easily made to believe any nonsense that hurts them (and have done so again and again), including mutilating their own genitals and the genitals of their children, which conflicts with and takes priority over your other moral principle.Your defeatist attitude leads to bad public policy, where the powerful take advantage of the weak because the weak are stupidly convinced that they cannot understand the consequences of limiting their own exploitation. reply User23 10 hours agorootparentYou obviously have a lot of emotional baggage here and it’s keeping you from making much sense. reply lern_too_spel 8 hours agorootparentI&#x27;m simply stating facts about religious mutilation as an impartial outsider who has never mutilated their own body or others&#x27;. I can understand why you might not like facts given your likely upbringing within a fact-denying community, but facts are what the rest of the world use as the grounding of a common framework for understanding. reply User23 7 hours agorootparentThank you for today&#x27;s shining example of \"not even wrong.\" replylern_too_spel 14 hours agorootparentprevOr more likely, Hitler would have exterminated millions more, and civilization would have crumbled under fascist ideology.Why don&#x27;t you chop off your arm? You don&#x27;t know if that will turn out to be good. Stories like that of the Chinese farmer and Pippi Longstocking are for children, not for thinking adults to blindly believe. The point of the Chinese farmer for children is that even though bad things happen, things can get better, which helps them get over it. To make it go down easier, they show that even though good things happen, things can get worse. reply graphe 13 hours agorootparentInstead someone else exterminated millions more and civilization crumbled under another fascist leader.If you ask \"why don&#x27;t you\" you&#x27;re either asking in bad faith or don&#x27;t fundamentally understand the fable. reply lern_too_spel 13 hours agorootparentDo you really think Hitler&#x27;s additional extermination would be limited to Russia had he completed his world conquest?I assert that if you don&#x27;t understand the \"why don&#x27;t you\" question, you don&#x27;t fundamentally understand the fable. Why don&#x27;t you tell me why it doesn&#x27;t apply? reply User23 13 hours agorootparentprevAnd maybe that crumbling of civilization would have prevented a runaway greenhouse heating effect that destroys all life on Earth.Your attitude that you can understand a complex dynamical system such as the one that we live in is the truly childish one. replysnvzz 18 hours agorootparentprevI am also an atheist, but recognize religion as damaging, forcing a tilting cognitive fog. Never helpful, a net negative to believers and society.The degree of bad depends on the religion and the believer.Plus one must not forget that, for most believers, religion preceded adulthood, even maturity. Meaning it was never a choice, but imposed through indoctrination and immediate social pressure. reply RunSet 11 hours agorootparent> I am also an atheist, but recognize religion as damaging, forcing a tilting cognitive fog. Never helpful, a net negative to believers and society.Religion has saved the lives of many who converted at swordpoint. reply freedomben 17 hours agorootparentprevI largely agree, except:> Never helpfulIt clearly is helpful to believers at times. For example, when a loved one dies, it can be extremely comforting to think you&#x27;ll see them again soon in a paradisical heaven. Comfort when you&#x27;re hurting is helpful. reply snvzz 17 hours agorootparent>it can be extremely comforting to think you&#x27;ll see them again soon in a paradisical heavenComforting? Sure.Yet it can be positive if and only if there&#x27;s no value in grief. reply freedomben 15 hours agorootparentThat&#x27;s an interesting point, though I think it would have to be if and only if all grief is positive. For example, if grief is 99% positive but 1% negative (negative being more pain than gain) then there&#x27;s positive value.For someone about to die, I think any grief is probably negative. Any personal growth or development won&#x27;t be utilized. I think of it kind of like morphine, if you&#x27;re dying it&#x27;s fine to keep it flowing even if you are getting seriously addicted to it reply vasdae 18 hours agorootparentprevReligion will always exist one way or the other. Many atheists take science as a religion for example, with horrible outcomes. reply snvzz 18 hours agorootparent>Many atheists take science as a religion for exampleAdmission to thinking about science as a belief betrays lacks of understanding of the scientific method, which is founded on rigorous doubt and verification. replydartharva 14 hours agorootparentprevReligion, by definition, is a social construct explicitly built to foster a collective identity that isolates those in the in-group from the out-group. It inherently implies hostility against the non-believer; the only difference is the form this hostility takes. For some, it&#x27;s just condescension for people who don&#x27;t perceive the \"truth\", for others it&#x27;s literally declaring them infidels who don&#x27;t deserve to live. All religions in this world fall within the spectrum of these two extremes. No religion in this world is open to having its foundational ideas challenged or debated in any manner. reply User23 18 hours agorootparentprevHuman beings are observably religious by nature. We’re going to worship and make devotion to something, whether it’s God, ourselves, the sky, an economic system, science, or whatever else. There will never be a post-religious age. reply justin66 18 hours agorootparentIf you’re willing to misuse the term “religious” blatantly enough, the above statement is tautologous. Otherwise it’s silly. reply justinclift 18 hours agoprev [–] Looks like another real life example of \"When Justice fails, there&#x27;s always Force\". ;) reply WorkerBee28474 14 hours agoparent [–] The older I get, the more I believe Starship Troopers:https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=JyhfHQ_7Skg replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Former Japanese Prime Minister Shinzo Abe was assassinated in July 2022 in Nara, where he was supporting a lawmaker's reelection bid to the National Diet, Japan's parliament.",
      "The alleged attacker was instantly captured and stated that the intention behind the act was more than just Abe; it was meant as a broader attack against the Unification Church, also known as the Moonies.",
      "This event underlines the significant political influence of the Unification Church in Japan."
    ],
    "commentSummary": [
      "Former Japanese Prime Minister Shinzo Abe was assassinated in July 2022 in Nara while endorsing a lawmaker for reelection to the National Diet, Japan's parliament.",
      "The alleged assassin was captured at the scene and claimed the act was not only aimed at Abe but against the Unification Church, also known as the Moonies, and it's political influence in Japan.",
      "This incident reflects a larger, possibly politically instigated, threat against the Unification Church in Japan."
    ],
    "points": 157,
    "commentCount": 183,
    "retryCount": 0,
    "time": 1699103265
  },
  {
    "id": 38141006,
    "title": "Starfish Are Largely Heads Without Torsos or Tails, Reveals Genetic Study: Implications for Understanding Evolution and Biodiversity",
    "originLink": "https://www.cnn.com/2023/11/02/world/starfish-head-body-plan-scn/index.html",
    "originBody": "Ad Feedback World Africa Americas Asia Australia China Europe India Middle East More Audio Live TV Log In Starfish bodies aren’t bodies at all, study finds By Ashley Strickland, CNN 6 minute read Updated 12:16 PM EDT, Thu November 2, 2023 The body plan of starfish is largely a head that lacks a tail or torso. Laurent Formery Sign up for CNN’s Wonder Theory science newsletter. Explore the universe with news on fascinating discoveries, scientific advancements and more. CNN — The heads of most animals are easily identifiable, but scientists haven’t been able to say the same for sea stars until now. A starfish has five identical arms with a layer of “tube feet” beneath them that can help the marine creature move along the seafloor, causing naturalists to puzzle over whether sea stars have defined front and back ends — and if they have heads at all. But new genetic research suggests the opposite — that sea stars are largely heads that lack torsos or tails and likely lost those features evolutionarily over time. The researchers said the bizarre fossils of sea star ancestors, which appeared to have a kind of torso, make a lot more sense in evolutionary terms in light of the new findings. The findings were published Wednesday in the journal Nature. “It’s as if the sea star is completely missing a trunk, and is best described as just a head crawling along the seafloor,” said lead study author Laurent Formery, postdoctoral scholar at Stanford University and the University of California, Berkeley, in a statement. “It’s not at all what scientists have assumed about these animals.” The revelations, made possible by new methods of genetic sequencing, could help answer some of the biggest remaining questions about echinoderms, including their shared ancestry with humans and other animals that look nothing like them. ADVERTISEMENT Ad Feedback A unique body plan Sea stars belong to a group called echinoderms, which includes sea urchins, sand dollars and sea cucumbers. The unusual animals have unique body plans arranged in five equal sections that differ greatly from the symmetric head-to-tail bodies of bilateral animals, which have left and right sides mirroring each other. Normal lungs successfully transplanted into bodies with reversed organs Sea stars begin as fertilized eggs that hatch and become larvae that float in the ocean, like plankton, for weeks to months before settling on the ocean floor. There, they go through a process that transforms a bilateral body into a star shape, or pentaradial body. “This has been a zoological mystery for centuries,” said senior study coauthor Christopher Lowe, marine and developmental biologist at Stanford University, in a statement. “How can you go from a bilateral body plan to a pentaradial plan, and how can you compare any part of the starfish to our own body plan?” The bilateral body plan most animals have stems from molecular-level genetic actions that can be traced in the head and trunk, or main body, regions, which is why vertebrates, like humans, and many invertebrates, including insects, share similar genetic programming. This discovery was awarded the Nobel Prize in Physiology or Medicine in 1995. But echinoderms also share a common ancestor with bilateral animals, which adds to the puzzle researchers are trying to solve. ADVERTISING “How the different body parts of the echinoderms relate to those we see in other animal groups has been a mystery to scientists for as long as we’ve been studying them,” said study coauthor Dr. Jeff Thompson, a lecturer at the University of Southampton, in a statement. “In their bilateral relatives, the body is divided into a head, trunk, and tail. But just looking at a starfish, it’s impossible to see how these sections relate to the bodies of bilateral animals.” Cracking the echinoderm code Researchers behind the new study used micro computed tomography scanning to capture an unprecedented three-dimensional look at the shape and structure of sea stars. Then, members of the team used advanced analytical techniques to spot where genes were expressed within the tissue and pinpoint specific sequences of RNA within the cells. Gene expression occurs when the information within a gene becomes functional. Specific molecular markers act like body plan blueprints, directing each cell to the body region where it belongs. “If you strip away the skin of an animal and look at the genes involved in defining a head from a tail, the same genes code for these body regions across all groups of animals,” Lowe said. “So we ignored the anatomy and asked: Is there a molecular axis hidden under all this weird anatomy and what is its role in a starfish forming a pentaradial body plan?” The nervous system of a starfish is shown here during an analysis. Laurent Formery Together, the data created a 3D map to determine where genes were expressed as sea stars developed and grew. The team was able to determine the genes that control the development of the starfish’s ectoderm, which includes its skin and nervous system. Genetic signatures associated with the development of a head were detected all over the sea stars, especially concentrated in the center of the star and the center of each limb. But gene expression for torso and tail sections were largely absent, revealing that sea stars “have the most dramatic example of decoupling of the head and the trunk regions that we are aware of today,” said Formery, who is also a researcher at the Chan Zuckerberg BioHub, a nonprofit research organization in San Francisco. The research was funded by the Chan Zuckerberg BioHub, co-founded in 2021 by Dr. Priscilla Chan and Mark Zuckerberg, as well as NASA, the National Science Foundation and the Leverhulme Trust. Researchers stained the genetic material of starfish with fluorescent labels, enabling the scientists to map the behavior of the animals' genes. Laurent Formery “When we compared the expression of genes in a starfish to other groups of animals, like vertebrates, it appeared that a crucial part of the body plan was missing,” Thompson said. “The genes that are typically involved in the patterning of the trunk of the animal weren’t expressed in the ectoderm. It seems the whole echinoderm body plan is roughly equivalent to the head in other groups of animals.” Sea stars and other echinoderms likely evolved their unique body plans once their ancestors lost their trunk region, allowing them to move and feed differently from other animals. “Our research tells us the echinoderm body plan evolved in a more complex way than previously thought and there is still much to learn about these intriguing creatures,” Thompson said. “As someone who has studied them for the last ten years, these findings have radically changed how I think about this group of animals.” Unlocking new insights Animal research largely targets those that share similarities with humans. But studying groups like echinoderms could solve some of the most complex mysteries about the evolution of life on Earth. “Most animals don’t have spectacular nervous systems and are out chasing prey — they are modest animals that live in burrows in the ocean. People are generally not drawn to these animals, and yet they probably represent how much of life got started,” Lowe said. Understanding how animals like sea stars have developed could also allow insights into the varied ways that different species remain healthy. “It’s certainly harder to work in organisms that are less frequently studied,” said study coauthor Daniel Rokhsar, professor of genetics, genomics, evolution and development at the University of California, Berkeley, and researcher at the Chan Zuckerberg BioHub, in a statement. “But if we take the opportunity to explore unusual animals that are operating in unusual ways, that means we are broadening our perspective of biology, which is eventually going to help us solve both ecological and biomedical problems.” RELATED Sponsored How to Avoid Getting Sick on Vacation PAID CONTENT Paid Content Mysterious 40 000-Foot-Deep Hole Discovered in Mexico Street Insider The All-New Explorer SUV Will Leave You Speechless (Take A Look) PopularSearchesSearch Ads 20 Horrible Planes That Should've Never Been Built, Ranked In… Brake For It Warning Signs Of Colon Cancer That Can’t Be Ignored PopularSearchesSearch Ads More from CNN Video: See the new weapon Israel is using to fight Hamas Archaeologists in Germany find centuries-old skeleton with… Israel says it will fight Elon Musk's pledge to provide aid… Exhausted and disappointed with allies, Ukraine’s president and… MORE FROM CNN Keanu Reeves’ girlfriend Alexandra Grant calls him an ‘inspiration’ Hear what Putin thinks about the charges Donald Trump is facing Ad Feedback Paid Content World's Most Deadly Snake Discovered in US YourDIY [Photos] 25 Of The Most Inappropriate Dress on The Red Carpet Definition Most Windows Users Didn't Know This Simple Trick Safe Tech Tips Ad Feedback NEWS & BUZZ Look of the Week: Hunter Schafer's ethereal Oscars after-party look Video: Brutality of Hamas attack seen at Israel morgue Ad Feedback Search World Africa Americas Asia Australia China Europe India Middle East United Kingdom US Politics The Biden Presidency Facts First 2024 Elections Business Markets Tech Media Calculators Videos Health Life, But Better Fitness Food Sleep Mindfulness Relationships Entertainment Movies Television Celebrity Tech Innovate Gadget Foreseeable Future Mission: Ahead Upstarts Work Transformed Innovative Cities Style Arts Design Fashion Architecture Luxury Beauty Video Travel Destinations Food & Drink Stay News Videos Sports Football Tennis Golf Motorsport US Sports Olympics Climbing Esports Hockey Videos Live TV Digital Studios CNN Films HLN TV Schedule TV Shows A-Z CNNVR Features As Equals Call to Earth Freedom Project Impact Your World Inside Africa 2 Degrees CNN Heroes All Features Weather Climate Wildfire Tracker Video More Photos Longform Investigations CNN Profiles CNN Leadership CNN Newsletters Work for CNN World Audio Live TV FOLLOW CNN Log In Terms of Use Privacy Policy Cookie Settings Ad Choices Accessibility & CC About Newsletters Transcripts © 2023 Cable News Network. A Warner Bros. Discovery Company. All Rights Reserved. CNN Sans ™ & © 2016 Cable News Network. Enter your email to sign up for the Wonder Theory newsletter. close dialog There are scientific advancements happening every day. Sign up for the latest on space, ancient wonders and more. Sign Up No, Thank You By subscribing, you agree to our privacy policy.",
    "commentLink": "https://news.ycombinator.com/item?id=38141006",
    "commentBody": "Starfish bodies aren’t bodies at all, study findsHacker NewspastloginStarfish bodies aren’t bodies at all, study finds (cnn.com) 149 points by raybb 20 hours ago| hidepastfavorite72 comments c048 17 hours agoLink to the study: https:&#x2F;&#x2F;www.nature.com&#x2F;articles&#x2F;s41586-023-06669-2 reply bloopernova 19 hours agoprevStarfish are bizarre. They start as a bilaterally symmetrical larva, then grow a stalk that attaches to the sea bed. They grow, then rearrange themselves into a pentaradially symmetrical form.https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;StarfishPlus they can regenerate from a severed limb! Creepy, but very interesting too. reply oboes 15 hours agoparentAn even more bizarre animal is Dendrogaster, a starfish parasite. Believe it or not, but it&#x27;s a crustacean.It grows inside a starfish&#x27;s body cavity until filling it completely, which explains the strange shape of the parasite.https:&#x2F;&#x2F;www.australiangeographic.com.au&#x2F;blogs&#x2F;creatura-blog&#x2F;... reply bafe 12 hours agorootparentIf you are interested in parasitic crustaceans,you could have a fun time reading about sacculina and the mysterious Y larva reply bitwize 12 hours agorootparentprevOh, geez, that reminds me of the Mimics from All You Need Is Kill (the basis of Edge of Tomorrow. In the novel, the Mimics are not the alien invaders themselves, but rather nanomachine colonies sent by the actual aliens that infest and control the bodies of starfish, adapting them to combat use. reply polishdude20 17 hours agoparentprevJellyfish are really weird too. They produce like spores that then go down to the surface and create factories that create little baby jellyfish. reply permo-w 16 hours agoparentprevif they can regenerate from a severed limb does this mean they can be cloned into 5? reply simcop2387 16 hours agorootparentMy understanding is that they can regrow from all the severed parts if done correctly, so 6 at a time. Arms and central core. reply generic92034 13 hours agorootparentHow would a separated arm part nourish itself? reply bloopernova 11 hours agorootparentIn the Wikipedia article, it states they live off stored nutrients until they can grow a mouth and stomach. So very, very weird! reply sp332 15 hours agorootparentprevIt depends on the species at least https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Starfish_regeneration#Degree... reply fortran77 12 hours agoparentprevIt is really creepy because they often regenerate funny. See reddit https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;deformedstarfish reply Qem 19 hours agoprevSo starfishes are like guild navigators from Dune, that took so much mélange spice until they were reduced to giant brains with limbs, but in real life. Amazing! reply brnt 19 hours agoparentI had to think of that The Thing scene; yours is much less disturbing. reply bee_rider 19 hours agoprevIt turns out they are four dimensional being just poking their heads into our universe to look around. reply brookst 17 hours agoparentFive dimensional, I would hope reply jbernsteiniv 18 hours agoparentprevNo wonder Patrick from Spongebob is always so enlightening. reply csours 18 hours agoprevIf alternative forms of cognition are your jam, consider giving the Children of Time series a read: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Children_of_Time_(novel)Note: I would consider this series science fantasy, not science fiction. I had to kind of unfocus my critical perspective to enjoy it, but I really did enjoy it. reply entaloneralie 18 hours agoparentAnother excellent one is the Blue Peril(1911), absolutely alien.https:&#x2F;&#x2F;fr.wikipedia.org&#x2F;wiki&#x2F;Le_P%C3%A9ril_bleu reply chrisweekly 15 hours agoparentprev100% agreed; if you avoid trying to categorize it, the whole series is (IME) really engaging, thought-provoking and worthwhile. reply ph4te 18 hours agoparentprevThis is one of my top books. I love reading about the spiders evolution. The third book in the series is a little lackluster though. reply titaniumtown 18 hours agoparentprevLove this book! reply knodi 18 hours agoparentprevoff topic question, whats the difference between science fantasy and science fiction? reply dsr_ 16 hours agorootparentWith science fiction, the author describes how things work in enough detail that you can definitely tell that it won&#x27;t.In science fantasy, the author glosses over the explanations and just shows you the effects.In fantasy, the author doesn&#x27;t care about how it violates known science.(Technically, fantasy is the root of all literature, but these are the marketing categories we have today.) reply alanbernstein 16 hours agorootparentThat&#x27;s cute, but science fiction does not require a physically impossible premise.I like to think of scifi as stories that are fundamentally about how a new development in science leads to changes in the world. It could be far-future questionably possibly supertech (The Expanse). It could be near-future changes in social science (1984). It could be future regression of current technology (The Windup Girl). reply beagle3 2 hours agorootparentAmazon’s “Homecoming” show is one of my favorite low key science fiction shows. It shows immediate effects of a tiny possible discovery.No CGI, no special effects - just Good writing, good acting, and good camera work reply pasabagi 15 hours agorootparentprevMmm, not sure those stories match your idea. The only story I can think of that involves a single change in science is Vernor Vinge&#x27;s Across Realtime (which is very good).I think an Expanse author once commented that he&#x27;d never really thought about how the fusion drive thingies were supposed to work. reply alanbernstein 11 hours agorootparentI was imprecise, I didn&#x27;t mean to suggest that any book should be based on only a single technological change.> How does the Epstein drive work?> It works very well, thank you very much. reply ajmurmann 12 hours agorootparentprevWhat you are describing is the scifi I like, but not true for a large part of what commonly gets categorized as such. reply Dylan16807 16 hours agorootparentprevHow do we apply that classification system to things that are definitely possible but beyond current engineering? Like a space station around Jupiter. reply stemlord 16 hours agorootparentI would suppose by the effort the author makes to make the reader feel it could be possible rather than the actual possibility of it (scifi) versus the author not caring to give the reader an impression that it could be possible by any means of explanation (sci-fantasy) reply Razengan 10 hours agorootparentprev\"Any sufficiently advanced technology is indistinguishable from magic\" :) reply knodi 16 hours agorootparentprevThank you.I&#x27;m more confused about it then before.Logically I get Star Wars&#x2F;Dune is science fantasy but wouldn&#x27;t that make Star Trek also science fantasy as wrap drive is never explained (and when it is its not rooted in reality) and how teleport-er is using magic to reassemble atoms at another location? I get it that Expanse and Three Bodied Problem are SciFi but how can the the two categories be quantified in to words?This is way off topic and i&#x27;ll stop here. thank you for sending me down a rabbit hole. reply kibwen 13 hours agorootparentI&#x27;ll disagree with the parent and use the following definitions:Science fiction is a genre that explores the social consequences of technological advancement on humanity.Science fantasy is a genre where futuristic technology just serves as a backdrop.Star Trek at least somewhat delves into the social implications of technological advancement (although less than many other works of sci-fi).The reason that people get bogged down into discussions of \"hard\" and \"soft\" sci-fi here is because hard sci-fi, being more grounded in reality, might have more predictive power in its social commentary. reply blechinger 12 hours agorootparentprevAs with most systems these categories don&#x27;t work universally because they&#x27;re firm definitions for complex works which exist on sliding scales. We may identify tropes from a variety of trends and subgenres within a single work of art. Our categories guide us to the greater conversations and traditions some work may be participating in and are no more prescriptive than classifications of evolutionary speciation or morphology. That does not diminish their usefulness: it allows us the freedom to use them as scaffolding to build our own models for the thing itself being studied and compare those models to other&#x27;s for consistency and depth of consideration. reply HelloMcFly 13 hours agorootparentprevI find that science fiction fans are a little concerned with \"proper categorization\", and often discussions get into people&#x27;s own personal interpretations. I don&#x27;t share the OP&#x27;s definition of the dilineation between scifi and scifantasy, I&#x27;d categorize Children of Time as pretty direct scifi, but I also don&#x27;t care all that much whether someone else wants to give it a different label. I don&#x27;t think it&#x27;s incumbent upon the author to justify the plausibility of every technological feat within our current understanding, but more power to you if you do. reply tstrimple 13 hours agorootparentprevI look at science fiction versus science fantasy the same way I look at hard magic and soft magic in fantasy. Hard magic fantasy novels are much more like science fiction than they are soft magic novels and science fantasy has more in common with soft magic systems than science fiction.Science Fiction &#x2F; Hard Magic:The rules are clear and well established. The fantastical elements become almost like characters in the story and have an impact on society and individuals living within the world. The reader can develop a clear understanding of these rules through the writing, and can creatively participate in problem solving using these rules similar to how the character would. You don&#x27;t need a plausible sciency explanation for how a teleporter works for it to be science fiction versus science fantasy. You need consistent rules on how they are used that the reader can understand and reason about. But when your science officer can pop open a panel and make it do things it&#x27;s never done before because the plot needs something to move it forward, you&#x27;re moving towards science fantasy.Science Fantasy &#x2F; Soft Magic:Magic and technology are just plot devices used to move the story forward and less integral to the world setting. Need your short little friends to get out of a dicey situation? Oh yeah, I just so happen to know a spell to summon giant eagles to give us a ride. We haven&#x27;t talked about it at all before, and you&#x27;d have no reason to know it exists. But let&#x27;s sprinkle a little deus ex machina on this because I&#x27;m trying to tell a story not build a coherent world and magic system. Star Trek and Star Wars are both science fantasy because the rules are never consistent and you&#x27;re constantly running into exceptions for how things work. You as a reader can never fully understand the setting because there&#x27;s always something fantastical waiting around the corner which breaks the rules and changes things.Most fiction exists somewhere along a spectrum with authors like Brandon Sanderson and Andy Weir falling more on the hard magic &#x2F; science fiction side and George Martin and Ian Banks being more soft magic &#x2F; science fantasy. Are the fantastic elements there as a mechanism to allow cool shit to happen, or are they actually parts of the world for the characters to interact with and overcome with influences shown across society. reply bjelkeman-again 18 hours agorootparentprevScience fantasy, something like Star Wars. Magic in a setting that seems technical. Science fiction, only break a few laws of physics, the fewer the hard the science fiction. reply csours 17 hours agorootparentMagic - or - something that sounds science-y but probably is not possible. I call this one science fantasy because there are some big science gaps that are not filled in, so that the story can happen. It makes a better story, but it is not so scientific. reply kbenson 15 hours agorootparentprevIt&#x27;s a spectrum along fiction, often along how possibly something is given our known knowledge of the world and possibly future extrapolations.Science fiction can be about something entirely possible today that hasn&#x27;t been done (and could just focus on the social change or response to it, black mirror sometimes opts for this), but often incorporates at least a few giant leaps to help focus us on the parts the fiction is interested in. For example, faster than light travel to allow us to better explore galactic empires and what it means to not have constrained space for nations again.Science fantasy is the other end of the spectrum, where explaining how something is accomplished or linking it to our current understanding of science is inconsequential. Star Wars is the popular example of this, where generally the explanation of \"the force\" is so irrelevant that they don&#x27;t even bother to give it a name beyond the pseudo-descriptive one used. You could replace it&#x27;s occurrences in the script with \"magic\" and our understanding and assumptions about it wouldn&#x27;t change much. In these stories the \"science\" in science fiction usually signifies it&#x27;s in space or has aliens, which people associate with the sciences when it involves people out in it. reply Razengan 10 hours agorootparentprevTechnology vs Mysticism reply api 15 hours agorootparentprevI think it’s whether or not it attempts to stay within physics. It can still be very out there, like fusion torch rockets or mind uploading, but there is nothing happening that is physically impossible according to what we know about the universe. A physicist would not have to suspend disbelief (much).This is also called hard vs soft sci-fi where very soft is fantasy.Fantasy incorporates elements that go beyond any known physics. Sometimes they are explained in world with invented physics like Star Trek, and sometimes they are alien and not explained like the stuff the protomolecule can do in The Expanse.If it’s alien it’s playing with “what if we met someone WAY more advanced than us?”It’s not a binary thing. Some stories are super far out in fantasy like Star Wars while others try to be very scientifically accurate like For All Mankind, Gattaca, or most of the human tech in The Expanse. reply eggy 17 hours agoprevSo Patrick is really an old starfish then. He has a torso!I get vibes of HP Lovecraft&#x27;s \"At the Mountains of Madness\" when it describes the creatures in Antarctica. reply Moldoteck 16 hours agoprevDoctor who predicted this with the face of boe!! At this point it&#x27;s evident how starfish will evolve in the future... reply chrisweekly 15 hours agoparent\"with the face of boe\"? reply croisillon 15 hours agorootparent(the series) \"Doctor Who\" predicted this with (their character) \"The Face of Boe\" reply chrisweekly 11 hours agorootparentthanks!(surprised I missed this ref since I was \"Whovian\" for much of my childhood) reply adrian_b 13 hours agoprevFree version of the research paper:https:&#x2F;&#x2F;www.biorxiv.org&#x2F;content&#x2F;10.1101&#x2F;2023.02.05.527185v1 reply tracerbulletx 17 hours agoprevEvolutionary developmental biology is the coolest dang thing out there. reply classichasclass 15 hours agoprevWonder if the same thing applies to sea cucumbers or crinoids. reply mcpackieh 19 hours agoprevTrying to say they have heads at all seems like trying to cram a square peg into a round hole. It&#x27;s interesting that their bodies evolved from what was once the head of their ancestors, but in what meaningful sense is it presently a head? It&#x27;s more like \"head\" is a discrete label created by and for the convenience of humans, and being a discrete label it doesn&#x27;t really map cleanly to real world data in all cases.It&#x27;s like saying humans have four legs, or dogs have two arms, because the front&#x2F;top two limbs are related to each other. The labels of &#x27;legs&#x27; and &#x27;arms&#x27; aren&#x27;t really meant to be used in this way, regardless of what evolutionary history says. reply xg15 16 hours agoparentI think the more amazing insight here (not a new one though) is that \"head\" and \"torso\" aren&#x27;t just human categories, they are at the root of some very old genes that govern body development for a vast number of species. So starfishes are \"heads without bodies\" in the sense that they use the molecular&#x2F;genetic mechanism that in other species shapes the creature&#x27;s head, but use it here for the entire body. reply radarsat1 19 hours agoparentprevI agreed with you until I read the article. It actually makes some really interesting observations about the comparison it&#x27;s making regarding the typical definition of \"head\" and how body parts in general relate to gene expression patterns. The images in the article are really cool. reply mcpackieh 19 hours agorootparentThe article convinced me that starfish bodies developed from heads, just as I&#x27;m convinced that primate arms developed from legs, but it didn&#x27;t convince me that it&#x27;s appropriate to call the modern forms of these things heads or legs. reply svnt 17 hours agorootparentIf your education includes substantial aspects of evolutionary developmental biology and genetics, then you have important mental models with which you can work with an organism. If you discover that the whole organism is effectively developmentally a head, then it is extremely appropriate to refer to it essentially as a head.If you instead relate to the organism in its present form in some more mundane ways then it might not seem that way.Analogies are failing me, but perhaps it would be like realizing an entire government basically spawned out of the centering concept of religious freedom. The structure of it then makes a lot more sense. reply nyanpasu64 17 hours agorootparentI&#x27;d say that whale flippers are homologous to legs&#x2F;feet, but aren&#x27;t legs&#x2F;feet. This article says that starfish are homologous to heads, but I&#x27;m not sure whether I&#x27;d consider their bodies to be heads or not. reply svnt 13 hours agorootparentThis discovery is to our understanding of starfish what Georges Cuvier’s discoveries of vertebrate morphology were to your present understanding of whales. reply twic 16 hours agorootparentprevWords only have meanings in context. It might now be that in the context of developmental biology, starfish have heads. It is surely the case that in the context of millinery, they do not. But no particular context is canonical, and so you cannot say that in an absolute, context-independent sense starfish do or do not have heads. reply Sharlin 15 hours agorootparentprevFor legs and their homologues we have the word \"limb\" (or should I say fins and their homologues? After all, cladistically we&#x27;re all fish!) but there hasn&#x27;t been a need for a term for \"head and its homologues\". At least not until now, I guess. reply chimpanzee 18 hours agoparentprevArm yourselves! The head of the language police has arrived To butt his nose into your thoughts To tell you what is meant to be or not. This mouthy busybody rarely rhymes and always prefers others mime. Metaphors, just confusing bores. Similes, not much more. If Orwell had a Frankenstein, he might to us remind: “An elbow is L-bowed only some of the times!” reply kyleee 17 hours agorootparentWould it really be correct to refer to this person as the “head” of the language police? reply Nexxius 16 hours agorootparentOnly if he is in charge of thought crimes. reply pohl 19 hours agoparentprevThe pointwise measurable signatures of genes expressing for head vs trunk kind of deflate that perspective a tad. reply TheBigSalad 16 hours agoparentprevI belive they are only saying the beefy center of the starfish body evolved from a head with legs, rather than a body with 5 legs. It doesn&#x27;t mean we have to label it a &#x27;head&#x27;, but that language helps people understand. reply kylebenzle 18 hours agoparentprevYou are exactly right and wrong. I teach biology at OSU and tease my students by asking, \"Do humans have gills?\" Do we? What would you answer?Then, \"Do humans have tails?\" Do YOU have a tail?The answer to both, in biology and evolutionary, YES, we have both. In the case of echinoderms what they have now \"used to be\" a head, so they are a head. reply mcpackieh 16 hours agorootparent> The answer to both, in biology and evolutionary, YES, we have both.But only in those limited contexts is it true, and even then there are caveats. For instance biology textbooks will tell you that great apes are tailless primates. And in virtually any practical sense that&#x27;s true. You can&#x27;t yank a gorilla or a human by the tail. You can&#x27;t get your tail caught in door. Your pants don&#x27;t have a hole for your tail to poke through. If you told a child that gorillas have tails, you would be seriously misleading that child even if in some technical sense it was true. You would have to explain that gorillas only have tails in a very specific technical sort of way.If you aren&#x27;t trying to be cheeky and entertain students with counterintuitive claims, then you would say that great apes have coccyxes, e.g. tailbones, which are the remnants of lost tails.How about this: Are whales fish? In the traditional sense, a fish is an animal that lives in the water, so whales (and starfish) are plainly fish. But anybody who has ever heard from marine biologists will exclaim that whales certainly are not fish, they&#x27;re marine mammals. People will be very annoyed with you if you ever call a whale a fish, they&#x27;ll take it as an insult to whales. But all mammals, including whales, are tetrapods and descended from an ancient lobe-finned fish. So in a cladistic sense you can claim that whales are fish. In the same sense, humans are also fish. And why not? As you say, we have gills too! reply alanbernstein 19 hours agoprevWhat can this be called besides \"evolutionary decapitation\"? reply Tagbert 17 hours agoparentQuite the opposite. It is really decorporation or hypercapitation. reply philipswood 18 hours agoparentprev\"Evolutionary capitation\"? reply kbenson 15 hours agorootparent\"Evolutionary decorporation\"? reply kylebenzle 18 hours agoparentprevEchinoderms didn&#x27;t \"lose a head\", that makes no sense.Of course they are just an animal with multiple life stages. reply HocusLocus 7 hours agoprev [–] Obligatory \"I&#x27;m Sorry, Spongebob!\"https:&#x2F;&#x2F;i.imgur.com&#x2F;fGB9eDF.jpg replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "New genetic research suggests that starfish, or sea stars, possess predominantly head-like structures with evolutionary loss of distinct torsos or tails.",
      "This study, published in Nature, opens up potential discussion on the shared lineage between echinoderms (including starfish, sea urchins, and sea cucumbers) and humans.",
      "The research posits that the echinoderm body evolution process might be significantly more intricate than understood before. Studying these marine creatures could offer insights into Earth's life evolution and health of different species."
    ],
    "commentSummary": [
      "New genetic research suggests that starfish, or sea stars, are primarily heads without torsos or tails, having lost these features through evolution over time.",
      "This study could shed light on the shared ancestry between echinoderms (a group that includes starfish, sea urchins, and sea cucumbers) and humans, indicating that the echinoderm body evolved in a more complex manner than previously understood.",
      "The results of this research, published in the journal Nature, suggests that studying echinoderms may unveil further understandings about life evolution on Earth and contribute to comprehending the health of various species."
    ],
    "points": 149,
    "commentCount": 72,
    "retryCount": 0,
    "time": 1699106066
  },
  {
    "id": 38140833,
    "title": "Microsoft Architect Advocates for a Simpler and Safer C++ with TypeScript Approach",
    "originLink": "https://herbsutter.com/2023/10/09/my-new-cppcon-talk-is-on-youtube-cooperative-c-evolution-toward-a-typescript-for-c/",
    "originBody": "Skip to content Sutter’s Mill Herb Sutter on software development My new CppCon talk is on YouTube: “Cooperative C++ Evolution – Toward a TypeScript for C++” Herb Sutter C++ 2023-10-09 4 Minutes My Thursday CppCon talk is now online. Note: There’s already a Reddit thread for it, so if you want to comment on the video I suggest you use that thread instead of creating a new one. At CppCon 2022, I argued for why we should try to make C++ 10x simpler and 50x safer, and this update is an evolution of the update talk I gave at C++ Now in May, with additional news and demos. The “Dart plan” and the “TypeScript plan” The back half of this talk clearly distinguishes between what I call the “Dart plan” and the “TypeScript plan” for aiming at a 10x improvement for an incumbent popular language. Both plans have value, but they have different priorities and therefore choose different constraints… most of all, they either embrace up-front the design constraint of perfect C++ interop and ecosystem compatibility, or they forgo it (forever; as I argue in the talk, it can never be achieved retroactively, except by starting over, because it’s a fundamental up-front constraint). No one else has tried the TypeScript plan for C++ yet, and I see value in trying it, and so that’s the plan I’m following for cppfront. When people ask me “how is cppfront different from all the other projects trying to improve/replace C++?” my answer is “cppfront is on the TypeScript plan.” All the other past and present projects have been on the Dart plan, which again is a fine plan too, it just has different priorities and tradeoffs particularly around full seamless interop compatibility with ISO Standard C++ code and libraries without any wrapping/thunking/marshaling, full ecosystem compatibility with all of today’s C++ compilers, IDEs, build systems, and tooling, and full standards evolution support with ISO C++, including not creating incompatible features (e.g., a different concepts feature than C++20’s, a different modules system than C++20’s) and bringing all major new pieces to today’s ISO C++ evolution as also incremental proposals for today’s C++. See just the final 10 minutes of the talk to see what I mean — I demo’d syntax 2 “just working” with four different IDEs’ debuggers and visualizers, but I could also have demo’d that profilers just work, build systems just work, and so on. I call my experimental syntax 2 (aka Cpp2) “still 100% pure C++” not only because cppfront translates it to 100% today’s C++ syntax (aka Cpp1), but because: every syntax-2 type is an ordinary C++ type that ordinary existing C++ code can use, recognized by tools that know C++ types including IDE visualizers; every syntax-2 function is an ordinary C++ function that ordinary existing C++ code can use, recognized by tools that know C++ functions including debuggers to step into them; every syntax-2 object is an ordinary C++ object that ordinary existing C++ code can use; every syntax-2 feature can be (and has been) brought as a normal ISO C++ standards proposal to evolve today’s syntax, because Cpp2 embraces and follows today’s C++ standard and guidance and evolution instead of competing with them; and that’s because I want a way to keep writing 100% pure C++, just nicer. “Nicer” means: 10x simpler by having more generality and consistency, better defaults, and less ceremony; and 50x safer by having 98% fewer vulnerabilities in the four areas of initialization safety (guaranteed in Cpp2), type safety (guaranteed in Cpp2), bounds safety (on by default in Cpp2), and lifetime safety (still to be implemented in cppfront is the C++ Core Guidelines Lifetime static analysis which I designed for Cpp2). Cpp2 and cppfront don’t replace your C++ compilers. Cpp2 and cppfront work with all your existing C++ compilers (and build systems, profilers, debuggers, visualizers, custom in-house tools, test harnesses, and everything else in the established C++ ecosystem, from the big commercial public C++ products to your team’s internal bespoke C++ tools). If you’re already using GCC, Clang, and/or MSVC, keep using them, they all work fine. If you’re already using CMake or build2, or lldb or the Qt Creator debugger, or your favorite profiler or test framework, keep using them, it’s all still C++ that all C++ tools can understand. There’s no new ecosystem. There are only two plans for 10x major improvement. (1-min clip) This is the fundamental difference with all the other attempts at a major improvement of today’s C++ I know of, which are all on the Dart plan — and those are great projects by really smart people and I hope we all learn from each other. But for my work I want to pursue the TypeScript plan, which I think is the only major evolution plan that can legitimately call itself “still 100% C++.” That’s important to me, because like I said at the very beginning of my talk last year (1-min clip), I want to encourage us to pursue major evolution that brings C++ itself forward and to double down on C++, not switch to something else — to aim for major C++ evolution directed to things that will make us better C++ programmers, not programmers of something else. I’m spending time on this experiment first of all for myself, because C++ is the language that best lets me express the programs I need to write, so I want to keep writing real C++ types and real C++ functions and real C++ everything else… just nicer. Thanks again to the over 120 people who have contributed issues and PRs to cppfront, and the many more who have provided thoughtful comments and feedback! I appreciate your help. Published by Herb Sutter Herb Sutter is an author and speaker, a software architect at Microsoft, and chair of the ISO C++ standards committee. View all posts by Herb Sutter Published 2023-10-09 Post navigation Previous Post cppfront: Autumn update Search for: Follow by email Email Address: Subscribe Archives October 2023 (1) September 2023 (1) August 2023 (1) June 2023 (1) April 2023 (2) February 2023 (1) December 2022 (1) November 2022 (1) October 2022 (2) September 2022 (2) October 2021 (1) June 2021 (2) May 2021 (1) March 2021 (2) February 2021 (4) January 2021 (5) December 2020 (1) November 2020 (2) October 2020 (1) September 2020 (2) July 2020 (1) June 2020 (2) May 2020 (3) April 2020 (1) March 2020 (1) February 2020 (4) November 2019 (1) October 2019 (1) September 2019 (4) July 2019 (5) June 2019 (1) May 2019 (1) April 2019 (1) February 2019 (1) November 2018 (2) September 2018 (3) July 2018 (1) April 2018 (1) November 2017 (2) October 2017 (3) September 2017 (3) July 2017 (2) June 2017 (1) March 2017 (1) February 2017 (2) November 2016 (1) September 2016 (4) June 2016 (2) March 2016 (1) October 2015 (1) September 2015 (1) July 2015 (1) June 2015 (1) May 2015 (1) April 2015 (1) January 2015 (1) December 2014 (1) November 2014 (3) October 2014 (2) September 2014 (2) August 2014 (1) July 2014 (2) May 2014 (3) April 2014 (4) March 2014 (4) February 2014 (2) January 2014 (4) December 2013 (4) November 2013 (4) October 2013 (2) September 2013 (6) August 2013 (5) July 2013 (1) June 2013 (7) May 2013 (22) April 2013 (2) March 2013 (1) February 2013 (1) January 2013 (3) December 2012 (3) November 2012 (6) October 2012 (5) September 2012 (3) August 2012 (3) July 2012 (1) June 2012 (7) May 2012 (5) April 2012 (17) March 2012 (4) February 2012 (5) January 2012 (7) December 2011 (3) November 2011 (6) October 2011 (10) September 2011 (3) August 2011 (3) July 2011 (2) June 2011 (4) May 2011 (5) April 2011 (3) March 2011 (2) January 2011 (1) December 2010 (2) October 2010 (5) September 2010 (3) August 2010 (2) July 2010 (1) June 2010 (2) May 2010 (5) April 2010 (5) March 2010 (9) February 2010 (2) January 2010 (3) December 2009 (1) November 2009 (4) October 2009 (6) September 2009 (2) August 2009 (2) July 2009 (2) June 2009 (3) May 2009 (4) April 2009 (2) March 2009 (4) February 2009 (3) January 2009 (5) December 2008 (4) November 2008 (2) October 2008 (3) September 2008 (3) August 2008 (4) July 2008 (6) June 2008 (6) May 2008 (2) April 2008 (6) March 2008 (5) February 2008 (1) January 2008 (7) December 2007 (5) November 2007 (4) October 2007 (1) September 2007 (6) August 2007 (6) July 2007 (6) June 2007 (3) May 2007 (3) April 2007 (2) March 2007 (3) February 2007 (3) January 2007 (6) December 2006 (2) Blog at WordPress.com. Follow",
    "commentLink": "https://news.ycombinator.com/item?id=38140833",
    "commentBody": "Cooperative C++ Evolution – Toward a TypeScript for C++Hacker NewspastloginCooperative C++ Evolution – Toward a TypeScript for C++ (herbsutter.com) 146 points by pierre-renaux 20 hours ago| hidepastfavorite189 comments jmull 19 hours agoI&#x27;m heartened by the success of the Typescript model of improving things when there&#x27;s a deficiency&#x2F;problem.The alternate approach (which is extremely popular unfortunately), is to throw it all out and rebuild everything from scratch. I guess it&#x27;s fun and exciting, which attracts developers, but it takes a long time to achieve any level of maturity and are hard to sustain (the people who are in it for the fun and excitement will move on before too long). reply jmisavage 18 hours agoparentThe only problem is you run the risk of implementing a still developing standard that might be vastly different than the finalize version. You then have code and programmers trained in doing something the old \"wrong\" way.This happened in TypeScript when they added support for an early version of decorators and now the TC39 version (which is still only Stage 3) is just different enough to cause issues. reply evilduck 17 hours agorootparentThey have been labeled experimental the entire time and off by default. That specific TC39 proposal is also approaching a decade of feet dragging and has been exceptionally slow to make progress. In Typescript if you aren’t opting into using decorators through a library that forces you to use them, they’re entirely avoidable (and some would argue, decorators make code worse and this failure to launch is a good thing).I think the Typescript creators themselves learned a lesson with decorators and enums which is why we haven’t seen other JS language proposals get added until they’re actually in the process of being adopted (e.g. matchers). reply tentacleuno 16 hours agorootparent> That specific TC39 proposal is also approaching a decade of feet dragging and has been exceptionally slow to make progress.So... like the pipeline operator? Pretty much given up on that being included now. They can&#x27;t make up their minds over two competing syntaxes (and, FWIU, it has taken them years to decide). reply maxloh 17 hours agorootparentprevWhy did you mention enum? Is it designed badly? reply tylerchurch 16 hours agorootparentI think the main complaints are:1. Enums are one of the few TypeScript features that isn&#x27;t a type annotation that can simply be erased. Enums emit code and don&#x27;t have an equivalent JS feature.2. Const enums are unsupported by some bundlers&#x2F;build tools, and so people try to use them and then got burned at build time.3. The use cases covered by enums are often better served by union types.None of the above is necessarily fatal for the feature. Certainly people used to enums in other languages still like them. But all 3 combined and the general recommendation these days ends up being just don&#x27;t use them. reply AprilArcus 16 hours agorootparentFWIW, Babel has supported const enums for a few years now (since 7.15)https:&#x2F;&#x2F;babeljs.io&#x2F;blog&#x2F;2021&#x2F;07&#x2F;26&#x2F;7.15.0 reply rictic 15 hours agorootparentYeah, tools can add support for them, but they&#x27;re fundamentally a whole-program-optimization in a build chain that&#x27;s 99.9% file-by-file.Supporting const enums will, by necessity, greatly reduce the maximum performance that toolchain can achieve, because you have to evaluate the entire project to tell whether `Foo.BAR` should be left alone or replaced with a constant defined elsewhere. And in the worst case of an ambient declaration, \"elsewhere\" could be any file in the project. replymoogly 17 hours agorootparentprevYou mean the feature that was gated behind an opt-in switch called `experimentalDecorators&#x27; and documented from the start with \"Experimental support for decorators is a feature that is subject to change in a future release\"?This was only really added to appease Google and Angular 2.0. reply jmisavage 17 hours agorootparentYeah Microsoft didn’t want AtScript to steal the little thunder TypeScript had at the time, but we’re still left with that one experimental feature all over Angular codebases. reply leptons 17 hours agorootparentprevPeople who chase \"new, shiny\" often get rewarded with stupid prizes. reply mike_hock 17 hours agoparentprevThe TS approach is really dumb for C++ and completely unnecessary. Compile times are long enough as it is without another meta compiler on top.You already have a compiler. Just make it emit binary-compatible code for the new dialect. You have modules now so you don&#x27;t have the problem of supporting mixed-dialect headers. reply IAmLiterallyAB 16 hours agorootparentThe TS approach isn&#x27;t about having a meta compiler. cppfront is just a temporary stepping stone, just like cfront (the original C++ compiler) was a temporary frontend for C++. Eventually the goal would be to add support for the new syntax to GCC, Clang, MSVC reply wsve 13 hours agorootparentNot just that, but a big part of Herbs feature set are things that can work as proof of concepts and proof of usefulness that could be presented to the C++ committee as actual features that can be added to C++. Many of the features of cppfront have already been proposed to committee. reply tialaramex 10 hours agorootparentThis was dead when I saw it, which is weird because it&#x27;s factually true. So I vouched for it.Herb Sutter proposes a bunch of stuff to WG21 (the C++ committee) and most of it goes nowhere. We&#x27;re not talking about two proposals here, maybe a dozen is closer. Most of that stuff from many years is in Cpp2 because it&#x27;s Herb&#x27;s language so they can&#x27;t stop him.The one thing Herb proposed in that time which got into C++ was the spaceship operatorwhich is basically like Rust&#x27;s PartialOrd trait, you write one operator for your type, and for any pair of values (this & that) you decide whether this was Greater, Equal or Less than that -- or none of the above. As a result the compiler can implement all the obvious comparison operators likeusing that one piece of code you wrote, and it&#x27;s easily able to be consistent. This is very nice, and it&#x27;s in C++ today, but it&#x27;s also in Cpp2 of course. reply mike_hock 11 hours agorootparentprevGCC and Clang are open source, though, and Clang has a sane codebase, so why not implement it in an experimental fork of Clang? reply raydev 10 hours agorootparentI think you&#x27;re underestimating the amount of work it takes to maintain a fork vs a separate transpiler layer.Why waste time on forking clang when you can both hash out your language design and have a highly functional prototype right away? reply croes 19 hours agoparentprevThe people who are in for the fun won&#x27;t use the typescript model for long either.If it&#x27;s optional it will be omitted in the hard parts, for instance if your favorite library doesn&#x27;t support it. reply DangitBobby 19 hours agorootparentIt&#x27;s still worthwhile even if you have to fudge module boundaries or skip the hard parts. Kind of like having \"safe\" Rust wrapping \"unsafe\" C boundaries doesn&#x27;t make the rest of Rust not worth it. Lying about the type internals of your function is still preferable to the wild-wild west of JS. reply solarkraft 18 hours agorootparentprevThat&#x27;s why incremental adoptability is so powerful. Slightly ironically that&#x27;s exactly what (AFAIK) made C++ so popular: You can start using it without really giving up anything. And ideally once you see the benefits you&#x27;ll be hooked and want to (incrementally) use it more and more throughout your code. reply pjmlp 18 hours agorootparentAnd exactly what makes C++ codebases so hard to clean up from C idioms, as many developers to this day apparently never went beyond changing the file extension, regardless of how many security advocacy we keep telling them. reply Aeolos 17 hours agorootparentC++ adds so many additional security footguns over C, that I find this line of reasoning hard to accept. The problem with C++ is not that people are using C constructs with it, the problem is that the language design itself is deficient.Are you aware of any systematic review that shows evidence that C++ is safer than C?The rate of safety defects between major C and C++ projects appears similar at first glance, and both way worse than managed languages or rust. reply jandrewrogers 15 hours agorootparentI have written a lot of the same kinds of data infrastructure software in both C and C++ and other languages, so comparison is somewhat reasonable (unlike comparing e.g. web browsers and systems software). The rate of defects is much lower in modern C++ versus C, and the types of bugs have changed too, but only part of that can be attributed to safer constructs in C++.C requires many times more lines of code than C++ to do the same thing. AFAIK there is considerable academic evidence that bug counts roughly scale with lines of code, so languages that are precise and concise naturally reduce total defect rates. Minimizing defects requires maximizing expressiveness. The ratio of LoC between languages to express the same thing is not constant, it depends on the application.The kinds of bugs I see in C++20, given the type of software I work on, are almost entirely the same kinds of logic and behavioral bugs that occur in every language. This is why Rust isn&#x27;t as popular as one might expect for systems software: memory safety bugs are not a thing for many code bases, and Rust requires many more lines of code compared to C++20. I am sure Rust will become more economical over time but for now it is pretty verbose and has pretty limited metaprogramming functionality.C++20 is remarkably safe and concise if you take full advantage of the type system. reply tialaramex 10 hours agorootparent> C++20 is remarkably safe and concise if you take full advantage of the type system.Against what sort of laughably low bar are you measuring to make C++ \"remarkably\" safe ?This is a language which delights in deliberately adding more footguns, on the rationale that well, it&#x27;s less safe so surely it&#x27;ll be faster right? No need to measure, no need to investigate what actual performance optimisations might somehow be available if we allowed the dangerous behaviour, no, just mandate it and YOLO.C++ 20 introduces std::span. Now, std::span is basically a slice type, Rust&#x27;s [T], and to some extent it&#x27;s remarkable that C++ didn&#x27;t have a slice type, but that&#x27;s C++ for you. What&#x27;s fascinating is that in 2020 I remind you they standardized a type which deliberately has no safe way to use it. It was proposed as a safe type, and WG21 stripped out the safety on the rationale that now it&#x27;s faster (see above) then rejected all attempts to add the usual half-arsed C++ safety features to the type now that it wasn&#x27;t safe by default.Let me quote a C++ proposal paper (this isn&#x27;t some hit piece from Rust fanatics, it&#x27;s a serious proposal to the ISO working group) P2821 on std::span:\"Ultimately, this becomes a stereotypical example of how C++ traditionally handles safety. this example gets to be pointed at for years&#x2F;decades to come. All of this could have been avoided\" reply jandrewrogers 9 hours agorootparentYou can replace almost everything in C++ with stricter implementations of your own design if you don&#x27;t like the behaviors or guarantees of the standard&#x2F;default implementation. Many people do because the language is very amenable to it and the codegen is usually optimal. Living entirely within the standard library and the constraints it imposes to support backward compatibility is a choice, not a requirement. The standard design is always going to be less than ideal for some subset of applications, it is an unavoidable tradeoff.The metaprogramming facilities of C++ are strong enough now that there is little that can&#x27;t be customized without macros in a way that is nearly transparent. reply celrod 7 hours agorootparentDepending on which STL you use, there may also be assertions you can enable, e.g. via defining _GLIBCXX_ASSERTIONS https:&#x2F;&#x2F;gcc.gnu.org&#x2F;onlinedocs&#x2F;libstdc++&#x2F;manual&#x2F;using_macros... reply pjmlp 16 hours agorootparentprevYes, it starts by not coding in C++ as if it was C.Use templates instead of macros, RAAI instead of gotos, namespaces instead of prefixes, bounded checked strings and arrays instead of raw pointers, new instead of error prone sizeof with malloc(),... reply cylemons 17 hours agorootparentprev> The rate of safety defects between major C and C++ projects appears similar at first glanceHow come? Surely there would be fewer memory leaks in a code base with proper RAII than in C code with malloc and free all over the place. reply Aeolos 16 hours agorootparentYes, this is a common theory, but I don’t see evidence for it in the hard numbers. Taking two of the most popular projects in each language, with a comparable LOC count, the numbers look surprisingly similar year over year:Linux kernel (C): https:&#x2F;&#x2F;www.cvedetails.com&#x2F;product&#x2F;47&#x2F;Linux-Linux-Kernel.htm...Chrome (C++): https:&#x2F;&#x2F;www.cvedetails.com&#x2F;product&#x2F;15031&#x2F;Google-Chrome.html?...There’s some variability year over year, but if anything C appears to have a slight advantage over C++ in terms of memory corruption (840 vs 1004), with essentially the same number of overflow errors (322 vs 328). There is no comparable rust project, but initial evidence from the asahi gpu drivers hints that memory corruption errors are fundamentally eliminated.This is obviously not accounting for confounding factors, hence my request for any peer reviewed evidence for the security claim. Until then, the facts don’t seem to be supporting it. reply vanviegen 14 hours agorootparentAre you seriously putting the Linux kernel forward as a typical C code base? Isn&#x27;t that a bit like selecting the example of an F1 car to show that cars are usually at least as fast as motor cycles? reply Aeolos 11 hours agorootparentNeither Chrome nor Linux are “typical” programs for their respective languages, but they are real examples used by hundreds of millions of people.Feel free to provide evidence for other cross-comparable c & c++ codebases if you have. reply nindalf 11 hours agorootparentPicking Chrome and Linux as examples is good for a couple of reasons. No one will complain that the codebases are small or were written by “bad” programmers who didn’t take enough care to write good code.Because that’s the only thing holding back some languages right? If only the programmers using them would get good, use static analysis tools then bugs would be eliminated. reply SubjectToChange 14 hours agorootparentprevChrome is a vastly more complicated program than Linux. reply Aeolos 11 hours agorootparentThat is very debatable.Linux compiles and runs on many more architectures and hardware configurations than chrome, and it supports a frankly ridiculous number of peripherals up to and including the most complicated gpu accelerators ever made.Chrome is indeed complex, but on what do you base your “vastly more” assertion? reply seabird 15 hours agorootparentprevYou&#x27;re assuming that all, or even most, C++ codebases use proper RAII and don&#x27;t run wild with the vast amount of features in the language and standard library. reply chlorion 15 hours agorootparentprevC++ containers such as std::vector and std::array have bounds checking at least, though I have not saw them used very much.Bounds checking instantly eliminates buffer overflow related unsafety, but not having it as the default is not good. reply Animats 15 hours agorootparentThe trouble with bounds checking via generics&#x2F;macros is that the compiler doesn&#x27;t know how to optimize out the checks. Most bounds checks can be optimized out of inner loops, where it really matters. But if the overflow test is just ordinary code, the compiler can&#x27;t do that.You also want to hoist bounds checks and do them early. Often, one check at loop entry can eliminate the bounds checks for each iteration. But the language has to allow an early fail. reply SkiFire13 14 hours agorootparentprevThey have bound checking through the `vec.at(index)` method, not through the indexing operator `vec[index]`. Most people won&#x27;t even look at the `at` method, they will just use the indexing operator since that&#x27;s supposed to be the \"default\" . reply pjmlp 12 hours agorootparentWhile true, most compilers do enable bounds checking in debug releases, and there are compiler flags to keep those checks enabled in release builds. reply tialaramex 10 hours agorootparentThis is differently bad because it may mean tight loops are enormously slower under debug for no good reason, it&#x27;s an adverse consequence of the C++ \"wrong defaults\" problem. Because they&#x27;re defaults, we can&#x27;t detect whether they&#x27;re what was specifically needed or just nobody cared, so we guess nobody cared and act accordingly. reply pjmlp 3 hours agorootparentIt isn&#x27;t as if Rust is any different in this regard. replycylemons 17 hours agorootparentprevBut you can&#x27;t deny that C++ is a straight upgrade to C. If CppFront becomes this straight upgrade to C++, isn&#x27;t that a good thing? reply pjmlp 16 hours agorootparentC++ extended C syntax, did not introduce a completly different one alongside. reply wsve 3 hours agorootparentDoes that make it not an improvement? There&#x27;s definitely issues with C++&#x27;s syntax... replyeviks 17 hours agoparentprevThe alternate approach is also popular because there is no success in the typescript model, as in critical deficiencies get unfixed for decades (with some of the same \"not fun\" challenges ) reply wsve 16 hours agorootparentThere is no success in the Typescript model...? What on earth are you needing that off of? reply eviks 16 hours agorootparentwhat is your list of successes besides TS? reply munificent 15 hours agorootparentIronically... C++.C++ was itself the TypeScript model applied to C.And, in fact, many of the things people hate about C++ are the result of exactly the kind of compromises you have to make to apply a TypeScript-like model to language evolution. C backwards compatibility is what made C++ successful originally but is now one of the main things that makes C++ crappy today. reply misnome 17 hours agorootparentprevWhat hasn&#x27;t gotten fixed in typescript for \"decades\"? reply eviks 16 hours agorootparentThe 10x complexity and 50x unsafety replysurfmike 20 hours agoprevThe article claims nobody’s tried a language natively compatible with C++, but that’s the approach that Google’s Carbon is taking:https:&#x2F;&#x2F;github.com&#x2F;carbon-language&#x2F;carbon-lang reply nemetroid 19 hours agoparentThe \"Dart plan\" vs \"TypeScript plan\" comparison is shown at 1:33:50 in the talk:> \"Dart plan\" - Competitive&#x2F;successor 10x improvement> New creation> Limited interop, relies on wrapping&#x2F;marshaling&#x2F;thunking...> Competes with standard (e.g., different modules, different generic constraints)> Evolves independently of standards committee - far fewer design constraints> Needs to bootstrap a new ecosystem> \"Typescript plan\" - Cooperative&#x2F;compatible 10x improvement> Every .js file is a valid .ts file, add 1 class and see benefit> Lowers to standard .js, 100% seamless compat with all JS libraries> Cooperates with the standards committee (ECMAScript)> Brings evolution proposals to standards committee> Leverages entire existing ecosystem - works with all JS implementations & toolsCarbon is an example of the \"Dart plan\". Some quotes from Carbon&#x27;s \"Interoperability philosophy and goals\" page (my emphasis):> The C++ interoperability layer of Carbon allows a subset of C++ APIs to be accessed from Carbon code, and similarly a subset of Carbon APIs to be accessed from C++ code.> The result is that it will often be reasonable to directly expose a C++ data structure to Carbon without converting it to a \"native\" or \"idiomatic\" Carbon data structure. Although interfaces may differ, a trivial adapter wrapper should be sufficient.> There should be support for most idiomatic usage of advanced C++ features. A few examples are templates, overload sets, attributes and ADL.> Non-goals> Never require bridge code> Support for C++ exceptions without bridge codehttps:&#x2F;&#x2F;github.com&#x2F;carbon-language&#x2F;carbon-lang&#x2F;blob&#x2F;trunk&#x2F;do... reply chandlerc1024 13 hours agorootparentFWIW, I disagree about Carbon following the Dart plan (Carbon lead here).Carbon is following a plan much more analogous to Kotlin -- we even say that on our site very explicitly.The \"subset\" of C++ APIs you emphasize is only about there existing some long-tail esoteric parts of C++ that may be used rarely enough to not worry about. Everything that people use we&#x27;ll need to support here. We think about interop constantly and are designing it into every aspect of the language. reply nemetroid 12 hours agorootparentSure, there might be other interop stories that are a better fit, and Dart is a pretty unflattering comparison (perhaps chosen intentionally). But within Herb&#x27;s dichotomy, I think Carbon falls into the \"Dart\" category, since the \"Typescript\" category is rather narrow. reply chandlerc1024 11 hours agorootparentIf you&#x27;re going to create a dichotomy between two languages, I think we&#x27;re dramatically closer to TypeScript.The whole point of Carbon is to integrate into and re-use an existing ecosystem of software written in C++. It&#x27;s as far from the Dart approach as it can get without literally being a TypeScript style approach.Ultimately, this dichotomy doesn&#x27;t help discuss Carbon. I think it is useful for looking at Rust (until&#x2F;unless Crubit or something similar radically changes its interop story), Go, and many other languages. But not Carbon IMO. It loses all of the important nuance. And there are important and meaningful differences from TypeScript&#x27;s approach that we&#x27;ve talked about since announcing Carbon, but they don&#x27;t make it anything like Dart&#x27;s strategy. reply logicchains 19 hours agoparentprevNo, it says \"No one else has tried the TypeScript plan for C++ yet\". Which is true; Carbon isn&#x27;t a compiler&#x2F;transpiler to C++, it&#x27;s a whole new language, albeit one with strong C++ interop. reply pjmlp 19 hours agorootparentThat is completely false, as it ignores Circle and Sean Baxter&#x27;s efforts. reply IAmLiterallyAB 16 hours agorootparentWhen Sean is willing to release the source, I&#x27;ll start paying attention. Until then, it&#x27;s just a tech demo. reply pjmlp 16 hours agorootparentI guess many C and C++ compilers are tech demos as well, including some forks from GCC and clang. reply zozbot234 18 hours agorootparentprev\"Strong C++ interop\" can also be achieved via libraries from an existing language, as with the Rust \"crates\" cxx, autocxx, crubit. So the jury is still out as to whether an entirely different language, namely Carbon, will be useful. OTOH, cppfront can be seamlessly transpiled to C++ on a file-by-file basis which can also be a desirable feature wrt. incremental adoption. reply HALtheWise 16 hours agorootparentMy understanding is that none of those crates support both instantiating C++ templates from Rust and instantiating Rust generic functions from C++, let alone stuff like implementing a Rust trait with a C++ object from C++ code. These things would be _very_ difficult to do because of the impedance mismatch between the languages, and so there&#x27;s space for a language with \"even stronger\" interop. reply gpderetta 19 hours agoparentprevAnd Circle and cppfront.Edit: of course this is about cppfront :) reply BalinKing 19 hours agorootparentIndeed, I think the article is about cppfront. reply scaredginger 19 hours agoparentprev> Note that Carbon is not ready to use reply bitschubser_ 19 hours agoparentprevThis is also a design goal for swift, afaik… reply superb_dev 17 hours agorootparentI think at this point Swift&#x2F;C++ interop is pretty good too (anecdotally) reply bdd8f1df777b 18 hours agoparentprevGoogle claims that Carbon is the future internally at Google for a safer C++, and Google never approves Rust for internal usage. Then I see multiple public announcements of Google rewriting something in Rust (such as the recent Binder rewrite). I&#x27;m quite confused. reply eklitzke 18 hours agorootparentFor the most part, Rust projects at Google tend to be things that are relatively self-isolated (like the Binder rewrite). Google has a huge monorepo with tens of millions of lines of C++ code, much of which is highly interlinked and interdependent. The goal of Carbon is to help move that code to a simpler and safer programming model. reply pjmlp 16 hours agorootparentprevCompletly false, the Carbon project folks are quite clear it is an experimental language, and anyone not having legacy C++ codebases should use Rust, or a manage language, if their requirements can cope with automatic memory management.Android, ChromeOS and Fuschia already use Rust, and Chrome is in the process of getting the first Rust libraries integrated. reply bananapub 18 hours agorootparentprev> Google never approves Rust for internal usage.deeply incorrect. reply tialaramex 9 hours agorootparentAlso you&#x27;d have to wonder what https:&#x2F;&#x2F;google.github.io&#x2F;comprehensive-rust&#x2F; is for.Like, if Google \"never approves\" why are they designing a course to teach this, and paying outsider trainers to teach their staff ? reply whoiscroberts 19 hours agoparentprevCarbon is on my list of things to experiment with. reply pjmlp 19 hours agoprevThe real Typescript for C++ is Circle.https:&#x2F;&#x2F;www.circle-lang.org&#x2F;Just like Typescript to JavaScript, the syntax is an evolution of what already exists, not a completely different syntax. reply mike_hock 16 hours agoparent> not a completely different syntax> [new_decl_syntax]There&#x27;s too much pining for Rust syntax and non-conservative changes or additions that aren&#x27;t consistent with the rest of C++ syntax.It repeats C++&#x27;s mistake of having too many non-convergent features and adds as much new syntax on top as C++ already has. This is a problem because to be able to read code, you have to know all language features at least superficially.Instead of doing what plain C++ has been trying to do and stabilize on a smaller feature set and (at least verbally) deprecate legacy cruft, this is going the exact opposite route.Sorry, but this is DOA. reply pjmlp 16 hours agorootparentYeah, fully agree.From my point of view, Cpp2 gets sold this way, due to the conflict of interest that it is being proposed by the ISO C++ chair, and naturally the story can&#x27;t be that it is yet another wannabe C++ replacement like all the other ones. reply Quekid5 16 hours agoparentprevSuch a shame it isn&#x27;t open source, so it&#x27;s really impossible to eyeball QoI without actually investing a huge amount of time into the language. (Plus the usual bad things about closed source.)I have no doubts about the qualifications (or even intentions) of the author, but one feels that a language meant for serious things should have an open implementation and&#x2F;or standard. Of course, I realize this may not align with Baxter&#x27;s goals, but it is going mean ~0 adoption. reply pjmlp 16 hours agorootparentOnce upon a time the only C and C++ compilers that one could get for free, were the ones available alongside UNIX tapes. replyseabird 15 hours agoprevHerb is infinitely more qualified to speak on the matter than I am, but I don&#x27;t think I understand the point. We&#x27;ve had multiple decades to bring C++ under control for safe general purpose usage and it&#x27;s still very loosey-goosey, to the point where people are rightly afraid to start work in it not because it&#x27;s a bad or deficient language, but because keeping codebases sane is challenging and requires a lot of discipline even from experienced programmers with an eye for detail.I think C and C++ are two of the most interesting languages out there. I think it&#x27;s rarely worth bothering rewriting existing C&#x2F;C++ software in something else for the sake of safety. I think there&#x27;s an appreciable amount of applications where C&#x2F;C++ are still justified. I don&#x27;t think this will end up being much different than the last two decades worth of attempts to put some guardrails on them.TS is relevant because JS has severe functionality deficiencies and you&#x27;ve historically had no other choices when writing for web browsers. C++&#x27;s deficiencies are less with the functionality of the language itself and more with properly and safely using it, and you&#x27;re very rarely forced to use it. reply jonex 15 hours agoparentIt&#x27;s not at all hard to build a sane codebase in C++ if you are a group of experienced C++ devs with an eye for detail. Not saying mistakes never happen, but most of the time the tools available are sufficient to build correct code if you know how to use them right.However, the problems abound when you have less experienced devs in a less structured environment and working with legacy C or C-style code, the latter often being the reason for why C++ was used in the first place. For this, something like cpp2 can be revolutionising as it makes it easier to write correct code and provides mechanisms to disable many of the unsafe patterns. reply esrauch 15 hours agoparentprevI think the reality is that companies like Microsoft, Google, Apple want to write C++ but safer. The reason you&#x27;re seeing Herb and Google&#x27;s Carbon on the \"ok fine well make a new language which has C++ interop instead of fixing C++\" is because the C++ standards have been resistant to evolving the language into something that those companies want, to the degree that they may end up adopting Rust despite the absurdly high migration costs just because C++ refused to evolve into something those companies could use safely (even with people from those companies on the committees advocating for it). reply tialaramex 14 hours agorootparentCarbon&#x27;s initial announcement was vague about how safety would be achieved. The late 2023 talks are clear that (a) It will be bolted on afterwards rather than foundational, which should be a major red flag and (b) It will not include some key things which Rust makes safe because they can&#x27;t see how to do that at all in their design.Herb&#x27;s Cpp2 announcement on the other hand was clear from the outset that Cpp2 is not safe. It&#x27;s aimed to be fifty times safer but that seems untestable, maybe even meaningless.The immediate trigger for Carbon was P2137. Basically P2137 says \"C++ should prioritise performance over safety, safety over compatibility\" and WG21 is like \"No, absolutely not\". That&#x27;s a set piece, nobody was astonished this happened, but getting it down on paper avoids executive argument. Google could have spent six years convincing non-expert people that C++ really isn&#x27;t going to deliver, or it could secure a piece of paper which says they don&#x27;t even want to and eliminate that whole discussion.Apple have pretty clearly settled on Swift. I&#x27;m not convinced they can write all their bare metal stuff in a Swift dialect, or that they&#x27;ll be able to in time to not need anything else long term, but clearly the vast bulk of new work at Apple will trend to Swift. Apple are quite good at single minded and \"Write all new code in Swift\" is a single minded idea. I have no idea why anybody would buy from a company like that, but they&#x27;re very popular so what do I know.Microsoft are much less single-minded. I doubt they could settle on Swift (or Rust, or even say sticking with C++) as a company wide policy even if they wanted to. But equally they&#x27;re not interested in finding themselves as \"last man standing\" for C++. reply zozbot234 12 hours agorootparent> It will not include some key things which Rust makes safe because they can&#x27;t see how to do that at all in their design.To be fair, Rust does have an unsafe superset and the interaction between \"safe\" Rust and unsafe code is quite non-trivial. It&#x27;s not safe to call any part of safe Rust from an unsafe context unless the extra preconditions that safe Rust expects (as documented in the &#x27;Rustonomicon&#x27;) are proven to hold. This means that, e.g. much of the Rust stdlib and &#x27;core&#x27; code might not be practically usable from unsafe code written in either Unsafe Rust or C&#x2F;C++, whereas the idiomatic C++ counterpart might be. There is some effort underway to fix this where it matters, but these are not easy questions to address. reply pitaj 5 hours agorootparentI don&#x27;t really agree with how you represent the difficulties of unsafe Rust.First off, unsafe Rust is not meant for writing application logic. It should be isolated within data structures, algorithms, or other abstractions exposing safe APIs.Secondly, what you say about calling into safe Rust from unsafe contexts just doesn&#x27;t sound correct. It seems like by \"extra preconditions\" you&#x27;re talking about the requirements placed on references: that they must be initialized, non-null, and for &mut, unaliased. But these aren&#x27;t requirements for calling into safe code, these are requirements for dereferencing raw pointers.You might also be talking about the issues around moveability and Pin. But these are also not about calling into safe code, but about representing your type correctly (making certain actions only possible when pinned or whatever).And then you talk about std and view not being practically usable from unsafe Rust, and this just doesn&#x27;t align with my experience at all.It&#x27;s really not that hard to get unsafe code right (Miri is an awesome tool), and it&#x27;s also not difficult to avoid unsafe code entirely if you&#x27;re not comfortable with the requirements. reply zozbot234 2 hours agorootparent> these are requirements for dereferencing raw pointers.You can use the unsafe read() and write() (and similar) functions to do things with raw pointers that would clearly involve dereferencing in C&#x2F;C++ (including working with aliased pointers or &#x27;pinned&#x27; data or writing to uninitialized memory), so I don&#x27;t think this is correct from a C&#x2F;C++ point of view. What Rust calls dereferencing is explicitly driven by the requirements placed on safe code; the two are effectively one and the same. reply IshKebab 14 hours agorootparentprevThe reason Carbon exists is because Google has a huge C++ codebase that they&#x27;re stuck with, and Rust doesn&#x27;t have a good C++ interop story. They don&#x27;t really want \"safe C++\"; they want Rust. But because they have to interop with their existing C++ they&#x27;re having to make a language similar to Rust but follows the C++ model closer (e.g. having move constructors). reply IshKebab 14 hours agoparentprevI don&#x27;t think it&#x27;s really any more difficult to build sane C++ codebases than any other language. The issue is not sanity; it&#x27;s safety.It&#x27;s extraordinarily difficult to build a significant C++ codebase without segfaults and UB. You end up wasting a huge amount of time debugging that stuff.Any time I&#x27;ve lost fighting Rust&#x27;s borrow checker has easily been paid off by not having to debug segfaults. reply afavour 20 hours agoprevI wish there was a clarification of the differences between the “Dart plan” and the “TypeScript plan”. If I had to guess I’d say the Dart approach is a whole new language that transpiles to C++ while the TypeScript plan is one that augments the current language with useful additions. reply acover 18 hours agoparent> Both plans have value, but they have different priorities and therefore choose different constraints… most of all, they either embrace up-front the design constraint of perfect C++ interop and ecosystem compatibility, or they forgo it (forever; as I argue in the talk, it can never be achieved retroactively, except by starting over, because it’s a fundamental up-front constraint).> cppfront is on the TypeScript plan:> full seamless interop compatibility with ISO Standard C++ code and libraries without any wrapping&#x2F;thunking&#x2F;marshaling,> full ecosystem compatibility with all of today’s C++ compilers, IDEs, build systems, and tooling, and> full standards evolution support with ISO C++, including not creating incompatible features (e.g., a different concepts feature than C++20’s, a different modules system than C++20’s) and bringing all major new pieces to today’s ISO C++ evolution as also incremental proposals for today’s C++. reply IAmLiterallyAB 16 hours agoparentprevIt&#x27;s about 100% compatibility and interop reply andai 18 hours agoparentprevYeah, the whole article rests on this premise, but does not explain it. I guess that&#x27;s behind the \"timewall\" of the talk? reply IAmLiterallyAB 16 hours agorootparentYeah you really have to watch the talk video to understand the article. Which is a time sink but I felt it was worth it reply scriptproof 17 hours agoparentprevDart compile to JavaScript, TypeScript like stated above augments JavaScript, and transpiles also when needed. reply coffeebeqn 19 hours agoparentprevC+++ reply mike_hock 17 hours agorootparent[&] { auto D = C; C += 2; return D; }() reply jeffreygoesto 16 hours agorootparentDis you, Walter? reply mike_hock 16 hours agorootparentLol, this would imply that D is the old C, so I doubt Walter would write this. :)I should have just called the variable oldC. replyAnimats 15 hours agoprevIs there a paper for this? The video is an hour and 35 minutes.Edit: found the Github repository.[1] \"Where&#x27;s the documentation? I&#x27;m not posting much documentation because that would imply this project is intended for others to use — if it someday becomes ready for that, I&#x27;ll post more docs.\"The examples don&#x27;t have comments.[1] https:&#x2F;&#x2F;github.com&#x2F;hsutter&#x2F;cppfront#wheres-the-documentation reply MR4D 18 hours agoprevWasn’t C++ the typescript for C ?The title strikes me as ironic that it’s talking about a typescript on top of a typescript. reply Andoryuuta 18 hours agoparentYep. I don&#x27;t believe it&#x27;s mentioned in the linked article, but Herb has mentioned in other articles&#x2F;talks that cppfront is intentionally named after &#x2F; following the same model as C++, which originally had a C++ to C transpiler named cfront[0].[0]: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Cfront reply skrebbel 18 hours agoparentprevMaybe every couple decades you just need a new typescript on top of the previous typescript. reply fooker 14 hours agorootparentIt&#x27;s ~~turtles~~ typescripts all the way down. reply scriptproof 16 hours agoparentprevC++ adds class and other features to C++, and this is like TypeScript to Javascript, but what he supports is simplicity and safety thank to a TypeScript approach. Not what C++ brings to C ! reply IAmLiterallyAB 16 hours agoparentprevPrecisely. He mentions that in the full talk in the video reply weinzierl 19 hours agoprevThe article assumes that the reader is familiar with what is meant by the “Dart plan” and the “TypeScript plan”. I only have cursory knowledge of Typescript and know nothing about Dart.Others in this thread already went into more details about this, but it doesn&#x27;t help me much as long as I don&#x27;t have an idea what the basic difference between both approaches is.Can someone ELI5 the gist of both approaches? reply magnio 18 hours agoparentDart was made by Google as a new language for the web. In the beginning, it was already quite different from JavaScript at the time, and crucially the main way to use it is through the Dart VM (that was embedded into a build of Chromium). It did have compilation to JS, but AFAIK never caught on. In the end, Dart diverges from JS so much so that the split in ecosystem means it&#x27;s not viable for the web anymore.TypeScript, on the other hand, has always set its goal to be a superset of JS and to transpile to JS only. This means a more familiar syntax, as well as (practical, IMO) design choices that ensure higher compatibility with the existing JS ecosystem. There is no TypeScript without JavaScript. Its development coincided with that of VSCode, and arguably is one the main facilitators for the latter&#x27;s feasibility.I have to say Microsoft&#x27;s grand plan of VSCode and TypeScript has to be one of the most astonishing software revolution in this decade. The foresight and acuity of Erich Gamma and Anders Hejlsberg is just amazing. reply damagednoob 18 hours agorootparentI can&#x27;t think of anyone besides Anders Hejlsberg that has a better track record with programming language innovation. At least 3 different languages that have all been commercially successful. reply tialaramex 9 hours agorootparentIt&#x27;s tricky to compare. Anders is involved in a bunch of important stuff, but it&#x27;s not as though it&#x27;s all successes either. He&#x27;s certainly important, but I don&#x27;t know how to compare \"track records\" on \"innovation\" because that&#x27;s so vague.One of his projects at Microsoft was J++ which is basically own-brand Java. Doubtless that&#x27;s great material for learning to design C# but nobody is going to claim J++ was a success. reply pjmlp 3 hours agorootparentOnly because Sun&#x27;s lawsuit, several C# features were already present in J++ as the extensions that caused the lawsuit in first place.VM integration with host OS, J&#x2F;Direct (P&#x2F;Invoke), events, COM integration, WFC (Windows Forms). reply otteromkram 17 hours agorootparentprevDennis Richie[0] and&#x2F;or Ken Thompson[1] might be of interest.[0]https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Dennis_Ritchie[1]https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Ken_Thompson reply joshkel 18 hours agoparentprevIn addition to the other comments -TypeScript deliberately takes a \"good enough\" approach to improving JavaScript, instead of designing an ideal but incompatible approach. For example, its handling of function parameter bivariance (https:&#x2F;&#x2F;www.typescriptlang.org&#x2F;docs&#x2F;handbook&#x2F;type-compatibil...) is unsound but works much better with the existing JavaScript ecosystem. By contrast, a more academic functional programming language would guarantee a sound type system but would be a huge shift from JavaScript.By analogy, Herb Sutter is arguing that something like the C++ Core Guidelines (https:&#x2F;&#x2F;isocpp.github.io&#x2F;CppCoreGuidelines&#x2F;CppCoreGuidelines), with tooling help in this new Cpp2 syntax, can bring real improvements to safety. Something like Rust&#x27;s borrow checker would bring much stricter guarantees, backed by academic research and careful design, but would be incompatible and a huge adjustment. reply Jtsummers 19 hours agoparentprevSomeone already wrote up a comment on that:https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=38141390 reply up2isomorphism 19 hours agoprevI know he wrote tons of books in C++ but just curious what software he had actually written in c++. reply davedx 19 hours agoprevCppfront: https:&#x2F;&#x2F;github.com&#x2F;hsutter&#x2F;cppfront reply emmanueloga_ 15 hours agoprevThis video is about cpp2, a proposed new syntax for C++ by Herb Sutter, a famous C++ expert.\"The goal is to address existing problems in C++ by embracing the solutions and guidance we&#x27;ve already de facto adopted, and to have to explain less rather than more.\" [1]I found a repo with some examples of the syntax [2]. For example: myclass : type = { data: int = 42; more: std::string = std::to_string(42); &#x2F;&#x2F; method print: (this) = { std::println(\"data: (data)$, more: (more)$\"); } &#x2F;&#x2F; non-const method inc: (inout this) = data++; } main: () = { x: myclass = (); x.print(); x.inc(); x.print(); }--1: https:&#x2F;&#x2F;github.com&#x2F;hsutter&#x2F;cppfront&#x2F;wiki&#x2F;Design-note:-Cpp2-n...2: https:&#x2F;&#x2F;github.com&#x2F;ntrel&#x2F;cpp2 reply theusus 18 hours agoprevThe title gives too much credit to TypeScript, that in my experience has been a subpar experience working with types. reply skrebbel 18 hours agoparentIt&#x27;s not about that, it&#x27;s about the plan towards wide adoption. TypeScript&#x27;s uncompromising embrace of existing JavaScript semantics, patterns, and quirks has been key to its growing popularity. reply synergy20 19 hours agoprevAfter the talk, the activity on it is nearly zero since then, in a world where ideas are cheap, show me the code, this does not seem promising to me.On the other hand, carbon has been very actively developed since its announcement, which also claims to be a typescript-for-c++. Now it also wants to be a memory safe: https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=1ZTJ9omXOQ0I&#x27;m forced to learn rust but I hope carbon will take off ASAP so I can be more productive and my (carbon) code can interface with c&#x2F;c++ code easier than rust. reply timmg 19 hours agoparent> After the talk, the activity on it is nearly zero since then...Is that true? Seems like he is actively working on it:https:&#x2F;&#x2F;github.com&#x2F;hsutter&#x2F;cppfront&#x2F;commits&#x2F;main reply synergy20 17 hours agorootparentcompare to carbon it is way much less reply suby 16 hours agorootparentBut Carbon doesn&#x27;t have a working compiler or prototype version I can download and try out does it? Compared to cppfront where I have downloaded, built, and compiled &#x2F; run some demo code. reply synergy20 15 hours agorootparenthttps:&#x2F;&#x2F;github.com&#x2F;carbon-language&#x2F;carbon-lang&#x2F;blob&#x2F;trunk&#x2F;do...next year 0.1 will be usable, 1.0 is about 3 years away, sigh, back to my rust fight replysynergy20 13 hours agoprevwhat about nim, already works great with c++, easy to integrate with existing c++, python style syntax, seems like a really good, production ready option to me reply IceMichael 15 hours agoprevIsn&#x27;t typescript the typescript of C++? reply ddaalluu1 19 hours agoprevBut C++ already is a typed language confusedsmiley reply layer8 17 hours agoparentEver heard of typeclasses? ;) reply papichulo2023 19 hours agoparentprevVoid pointer and 3 pages template errors joined the chat. reply x-shadowban 19 hours agoprevC++ only needs 4 things: gradually-introducable memory safety, static reflection, first-class compile time string manipulation, and adoption+refinement of its modules feature. reply pjmlp 18 hours agoparentThat is the idea of C++ profiles, based on Ada&#x27;s language profiles, being pushed by Bjarne Stroustoup.Now, how willing WG21 and the compiler vendors are open to the idea, is anyone&#x27;s guess. reply papichulo2023 19 hours agoparentprevI&#x27;d add less verbose ranges. Idk about memory safety, optional and expected are working pretty well for me (i just use it on personal projects though) reply uxp8u61q 17 hours agorootparentYou can&#x27;t possibly put syntactic sugar on the same level as memory safety. reply zerr 19 hours agoparentprevI&#x27;d also vote for std::string split and join functions. And networking. reply LeSaucy 17 hours agorootparentQt? reply jb1991 19 hours agoparentprevLol “only” reply harrid 19 hours agoparentprevC++ is a memory safe language if not abused. reply uxp8u61q 17 hours agorootparentJust don&#x27;t write bugs! reply harrid 17 hours agorootparentIt&#x27;s impossible to memory leak even with bugs if you don&#x27;t use antique parts of the language that won&#x27;t pass any static analysis anyways. reply jiripospisil 17 hours agorootparentConsidering that Chromium, being one of the most heavily statically analyzed code bases, is full of commits which fix memory leaks, your comment makes absolutely no sense.https:&#x2F;&#x2F;github.com&#x2F;search?q=repo%3Achromium%2Fchromium+memor... reply deschutes 16 hours agorootparentChromium is a massive project spanning decades of intense active development that intricately connects just about every domain of programming.A few leaks fixed per month is nothing. Further there is no major language promising no leaks once you include things like retained references to garbage and reference cycles. Leaks are one thing modern C++ solves pretty well. reply otabdeveloper4 16 hours agorootparentprevAnything written by Google is absolute bottom of the barrel shit.It&#x27;s not indicative of anything average in the real world. reply harrid 16 hours agorootparentprevIt&#x27;s a bit hard to get an overview. But I did spot several uses of owning raw pointers and switching from those to managed ones. I&#x27;d say that&#x27;s exactly the point I was trying to make. reply uxp8u61q 17 hours agorootparentprevWhat antique part of the language am I using in this bugged code? class A {}; std::unique_ptr array(new A[256]);It&#x27;s very easy to produce innocuous-looking code that contains leaks. (And yes, I know that make_unique solves the problem here.) reply harrid 17 hours agorootparentnew reply leptons 17 hours agorootparentprevAt this point I&#x27;d rather just write assembly language. replyrwaksmunski 17 hours agoprevPlease let it fade away with dignity. reply rewmie 20 hours agoprevI understand that being a Microsoft employee there&#x27;s always am incentive to promote Microsoft initiatives, but I feel that it&#x27;s disingenuous to describe this sort of initiative in C++ circles as \"TypeScript for C++\" when C++ originated from \"C with classes\", which is the same transpiling-based approach but without Microsoft marketing attached to it.Also, I think that promoting a new programming language as \"TypeScript for C++\" is a marketing move to try to force their way into a market share in spite of the language&#x27;s merits. reply cylinder714 11 hours agoparentIf you watch the video linked in the OP, his reasoning for calling it that becomes clear. It&#x27;s not a case of \"promoting Microsoft initiatives.\" reply dist-epoch 19 hours agoprevC++ needs to be rewritten in Rust. Only way forward. reply lloydatkinson 19 hours agoprevRust reply bfrog 20 hours agoprevBecause c++ doesn’t already have enough bullshit it needs some more reply jmisavage 19 hours agoprevI&#x27;m confused doesn&#x27;t C# fill this role? reply sk0g 19 hours agoparentC# does not transpile to C++, so no. You are still left with the .net runtime, garbage collection, etc. reply pjmlp 19 hours agorootparentIL2CPP.Compilation via another language is an implementation detail. reply Kranar 19 hours agoparentprevNo, C++ developers generally use it to avoid garbage collection. reply Subsentient 18 hours agoprev>TypeScript for C++Visceral disgust reaction. reply ktbwrestler 20 hours agoprevI’m not a frontend guy but heard that typescript is already falling off and contentious at this point. Is it truly something that’s going to stay? reply jmull 19 hours agoparentYou heard wrong.The only way typescript is going away is if JS essentially incorporates it.The only things people don&#x27;t like about it is that you need some tooling and a build step.However, with its popularity, ts is built in to a lot of things, so the tooling usually isn&#x27;t a big burden (particularly to get started).And it&#x27;s viable in a lot of cases these days to forgo the build step and instead use JS with typescript type annotations. (That might be what you heard about. That&#x27;s really still using typescript, though.) reply leptons 17 hours agorootparent>The only things people don&#x27;t like about it is that you need some tooling and a build step.Wrong. Many people dislike many things about Typescript.https:&#x2F;&#x2F;levelup.gitconnected.com&#x2F;the-inevitable-decline-of-t...https:&#x2F;&#x2F;medium.com&#x2F;codex&#x2F;why-are-javascript-pros-saying-good...https:&#x2F;&#x2F;gomakethings.com&#x2F;ditching-typescript-for-javascript&#x2F;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;sveltejs&#x2F;comments&#x2F;12cyady&#x2F;are_you_l...There are plenty more examples of why people tried typescript and went back to javascript. It&#x27;s definitely not only because of a build step, but also \"type gymnastics\", and other code bloat. reply csjh 15 hours agorootparentClaiming \"many people\" and proceeding to link to 4 posts that use Svelte as an example is a bit silly considering Rich Harris has said, numerous times, that the decision in Svelte&#x27;s codebase should NOT be taken as advice for what to do in your codebase, because their decision only pertains to a very specific set of circumstances. reply leptons 12 hours agorootparentI was countering the previous comments assertion that \"the only reason\" people don&#x27;t like typescript was because it has a build step, and your comment doesn&#x27;t prove me wrong. reply zukzuk 19 hours agoparentprevTypescript has a lot of momentum on all fronts and is almost certainly the future of Javascript.The big problem is that it still requires transpilation, which can set up all sorts of shitty traps. Not to mention that the Javascript ecosystem in general is a horrendous mess, which Typescript on its own can’t fix. reply mgaunard 19 hours agorootparentThe future of JavaScript is in the past. Get rid of all the stupid transpilers and frameworks and just use plain JavaScript in the browser. reply fryktelig 19 hours agorootparentYeah once they implement the proposal to add types we will reply mgaunard 19 hours agorootparentThe whole point of JavaScript is that it&#x27;s dynamically-typed. If you want static typing just use C++ or any other established programming language. reply marcosdumay 19 hours agorootparent> it&#x27;s dynamically-typedYet, most of the code people write has statically defined types.Anyway, the whole point of JavaScript is that it runs on the browser. Outside of that, it has no strong points. Even though most of them are not weak enough to immediately abandon the language, its type system is one of the weakest. reply leptons 17 hours agorootparentJavascript&#x27;s dynamic typing is fine if you aren&#x27;t a really shitty programmer. reply bigfudge 19 hours agorootparentprevI’m not sure how people are supposed to do that in the browser. This feels like an excessively dismissive comment. reply mgaunard 18 hours agorootparentHave you not heard of WebAssembly? reply kangalioo 51 minutes agorootparentWebAssembly is not without tradeoffs either. I&#x27;m not an expert, but it&#x27;s often heavier due to bundling the native language&#x27;s stdlib; it&#x27;s annoying to interop with the browser environment because that&#x27;s still JavaScript-tailored; it&#x27;s also just hard to write code that can be compiled into WASM (e.g. in Rust, it needs to be `#[no_std]`) replypferdone 20 hours agoparentprevWhere have you heard that? Because Typescript is the defacto standard right now. Projects like bun and deno cement that status further. reply herpdyderp 19 hours agoparentprevThere a very limited number of high profile, very niche projects that have switched to types via comments to skip transpile time. (IIRC, a super low level part of the Deno engine.) This does not represent the industry moving away from TypeScript. reply afavour 19 hours agoparentprevIMO the only way TyoeScript is going away is if all the useful components end up getting merged into JS. It’s simply too useful. reply solumunus 19 hours agoparentprevTypescript is only becoming more solidified each year. reply davedx 19 hours agoparentprevA couple of relatively high profile projects stopped using it. Meanwhile across most industries companies use it, I almost never encounter vanilla JS projects these days reply zdhgbdthdtv 19 hours agoparentprev> heard that typescript is already fallingDon&#x27;t believe in everything you hear. reply mgaunard 19 hours agoprev [–] Neither TypeScript nor Dart are relevant technologies to people interested in C++.It&#x27;s weird to refer to these arguably bad web technologies to market an unrelated initiative. reply zorr 19 hours agoparentThat seems like missing the point of the article. What I understand the author to mean with Dart plan vs Typescript plan is the way these languages approached evolution of the base language (JavaScript).Dart aimed to replace JavaScript completely and isn’t very compatible with it, leading to issues like not being able to leverage the existing library ecosystem. While the Typescript approach enhances the base language instead of replacing it and is still compatible with existing libraries.When looking at language adoption, the Typescript approach seems to have worked a lot better than the Dart approach. If it wasn’t for Flutter, Dart would probably be irrelevant by now and Typescript is now pretty much everywhere where JavaScript is.Another successful-ish example of the Typescript plan is Kotlin, which was originally designed as an improved Java, fully compatible with the existing ecosystem.So I can see where the author comes from when trying to do the same thing for C++. reply tialaramex 15 hours agorootparentHerb would like to associate Cpp2 with Typescript (which is generally considered to have succeeded) and other 2022 C++ Successor Languages with Dart (not so much). Herb emphasises the way in which what he&#x27;s done is like Typescript and de-emphasises ways in which it&#x27;s entirely unlike Typescript.I guess that&#x27;s smart positioning. But a big problem Herb has is that the real alternative isn&#x27;t any of those 2022 C++ Successor Languages. Ultimately your project will decide whether to stick with C++ or go to a language like Rust or maybe Swift. \"Alternatives to C++\" that might be finished some time in the next five years are irrelevant to that decision. It&#x27;s like arguing that you&#x27;re the best Chicago-style pizza joint in Naples. Who cares?And when comparing against Rust or Swift, we&#x27;re back to Herb&#x27;s ten year head start problem also mentioned in this talk. Rust is what, 18 months away from its tenth anniversary of Rust 1.0? Swift is even closer. reply c-cube 14 hours agorootparentThe problem with your argument is that swift is not, and cannot be, a replacement for C++. At best it can be an alternative for some programs, and on macOS only; for the rest of the world it&#x27;s not very useful. And rust is great but the thing it lacks here is a great C++ interop story, the way TS has with JS and kotlin has with java. There&#x27;s not really any language with that today (maybe D?) that also has a compelling story of being modern and safer than C++.In that sense, cpp2 might get to the point of being usable while having perfect interop with C++ (as in, you can use any C++ library trivially, and you can mix it with C++ in a codebase on a per file, maybe even within files, easily) before Rust or swift or Carbon. reply pjmlp 3 hours agorootparentFrom point of view from Apple it is, for their own ecosystem.It is also a reason why if you want modern C++ support on Apple devices, now you need to install clang yourself.As Apple keeps focusing on Swift, with Objective-C for its companion. reply tentacleuno 19 hours agoparentprevWhy is TypeScript a \"bad web technology\"?It&#x27;s not really a \"web technology\" at all. It&#x27;s a language which transpiles to standard JavaScript. The only real web-geared parts of TypeScript are the included (optional) DOM typings. reply mgaunard 19 hours agorootparentType annotations for dynamically-typed languages is just a bad idea.JavaScript&#x27;s only reason for existence is web browsers. If you&#x27;re not doing web stuff do yourself a favour and use something else. reply mplewis 19 hours agorootparent“C++’s only reason for existence is legacy GUI apps. If you’re not doing embedded stuff do yourself a favor and use something else.” reply seabird 15 hours agorootparentI would say this is largely true. C++ is incredibly fun and incredibly hard to wrangle. I think it&#x27;s one of the most interesting ecosystems out there and you would have to do a lot of convincing to get me to start a new project in it. Everybody says they&#x27;re going to be more disciplined this time, but after enough time, they remember the not-so-fun parts of the language. I&#x27;m not one of those freaks that has a fanatical drive to rewrite existing C++ software in Rust, but I do think it&#x27;s something that&#x27;s best avoided if you can help it. reply _flux 18 hours agorootparentprevAs far as I recall, all compiled languages use untyped target languages. The only downside with TS&#x2F;JS is that the JS implementation loses an optimization opportunity by not being aware of the TS-checked types. reply tialaramex 16 hours agorootparentI think probably the Java bytecode is type aware ? But yes, in general AOT compiled languages result in machine code, and so it isn&#x27;t type aware after transformation. reply tentacleuno 16 hours agorootparentprev> Type annotations for dynamically-typed languages is just a bad idea.Yet, as with the parent comment, you haven&#x27;t divulged your reasoning behind this statement. If you&#x27;re going to make such a broad statement, at least place your rationale beside it.> JavaScript&#x27;s only reason for existence is web browsers.JavaScript has seen broad adoption throughout the industry, for servers (Node.js, Deno, Bun), IoT (DeviceScript), browsers (duh) and mobile apps (NativeScript, React Native, etc.). It has its weak points, but downright dismissing it (again, without any rationale) is unfair and disingenuous IMO. reply mgaunard 11 hours agorootparentIt breaks the whole point of typing being dynamic to begin with.You don&#x27;t build static typing on top of dynamic typing; it&#x27;s silly. You do it the other way around.If you&#x27;re going to be outside of the browser, just use Python, which is not only somewhat similar but also the world&#x27;s most popular programming language. reply dazzawazza 19 hours agoparentprev [–] I sort of agree: As a C++ developer I have no idea what TypeScript or Dart really are... but it&#x27;s Herb Sutter so I&#x27;ll give him my time. He&#x27;s surely earned that at the very least? reply cylinder714 11 hours agorootparent [–] Definitely watch his video, linked in the OP. All is explained. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Herb Sutter from Microsoft proposes making the programming language, C++, 10 times simpler and 50 times safer through a plan similar to TypeScript approach.",
      "This approach stands for seamless compatibility with current C++ code, libraries, and tools, along with full standards evolution support with ISO C++.",
      "Sutter's experimental syntax, Cpp2, is an attempt to be 100% pure C++, integrating increased generality, improved defaults, lesser ceremony, and fewer vulnerabilities, deviating from the previously followed \"Dart plan.\""
    ],
    "commentSummary": [
      "Herb Sutter, a software architect at Microsoft, suggests streamlining the renowned programming language C++, aiming for a tenfold increase in simplicity and fiftyfold improvement in security.",
      "Sutter recommends a \"TypeScript plan\" for C++, emphasizing uninterrupted interop compatibility with existing C++ code, libraries, and tools, complete with ISO C++ standards support.",
      "He introduces an experimental syntax, Cpp2, meant to be purely C++, offering enhanced generality, improved defaults, reduced complexity, and fewer vulnerabilities. This approach differs significantly from previous projects aligning with the \"Dart plan.\""
    ],
    "points": 146,
    "commentCount": 189,
    "retryCount": 0,
    "time": 1699104640
  },
  {
    "id": 38146122,
    "title": "SARS-CoV-2 Alters Mitochondrial Function, Leading to Energy Depletion and Organ Failure: UNC Researchers",
    "originLink": "https://news.unchealthcare.org/2023/10/researchers-show-sars-cov-2-infection-affects-energy-stores-in-the-body-causing-organ-failure/",
    "originBody": "This website uses cookies and similar technologies to understand visitor experiences. By using this website, you consent to UNC-Chapel Hill's cookie usage in accordance with their Privacy Notice. I Accept Skip to the end of the utility bar UNC SCHOOL of MEDICINE UNC Chapel Hill UNC Health Intranet Login Skip to main content UNC Health and UNC School of Medicine Newsroom The UNC Health logo falls under strict regulation. We ask that you please do not attempt to download, save, or otherwise use the logo without written consent from the UNC Health administration. Please contact our media team if you have any questions. Home News Newsletters Submit News/Event News Team For the Media Events Home / Covid-19 / Coronavirus / Researchers Show SARS-Cov-2 Infection Affects Energy Stores in the Body, Causing Organ Failure Researchers Show SARS-Cov-2 Infection Affects Energy Stores in the Body, Causing Organ Failure October 31, 2023 An international research team, including Jonathan C. Schisler, PhD, in the UNC School of Medicine, has found how SARS-CoV-2 causes widespread “energy outages” throughout major organs, and how these effects contribute to debilitating long COVID symptoms. Jonathan C. Schisler, PhD The lungs were once at the forefront of SARS-Cov-2 research, but as reports of organ failure and other serious complications poured in, scientists set out to discover how and why the respiratory virus was causing serious damage to the body’s major organs, including the lungs. An interdisciplinary COVID-19 International Research Team (COV-IRT), which includes UNC School of Medicine’s Jonathan C. Schisler, PhD, found that SARS-CoV-2 alters mitochondria on a genetic level, leading to widespread “energy outages” throughout the body and its major organs. Their findings, published in Science Translational Medicine, explain how these effects contribute to long COVID symptoms and point to new therapeutic targets. “We found that at peak infection time, there are distinct changes in different regions of the brain, including is a large decrease in mitochondrial genes in the cerebellum, the part of the brain that controls our muscles, balance, cognition, and emotion” said Schisler, assistant professor of pharmacology and member of the UNC McAllister Heart Institute. “The lung is the primary site of infection, but molecular signals are being transmitted affecting the entire body, with the heart, kidney, and liver being more affected than others, even long after the virus is gone.” Every cell in our bodies is equipped with biological power stations known as mitochondria, which are especially important for maintaining the function of energy-demanding organs, such as the heart, brain, and lungs. Mitochondria require genes from their own genome (mitochondrial DNA) and nuclear DNA (nDNA) to create energy. Together, they instruct the mitochondria to convert oxygen molecules into cellular energy called adenosine triphosphate (ATP). Using nasal swabs and autopsy tissues from affected patients and animal models, researchers found that the virus blocks specific genes that use oxygen to create ATP, forcing the body to deplete finite energy reserves in the body. Without an energy source, cells throughout the body begin to starve, with the cells powering the brain and the heart suffering the most. To keep the body functioning, cardiac and neural cells can resort to consuming their cellular parts, including their mitochondria. Eventually, the cells are deprived of their vital elements and initiate a form of programmed cell death called necroptosis. Unlike other forms of cellular death, necroptosis causes a cascade of ill effects, including a robust inflammatory response, which releases pro-inflammatory cells called cytokines throughout the body as the cells rupture. Uncontrolled necroptosis further enhances sepsis and organ failure. Schisler says the ensuing cell death and inflammation may explain why patients with long COVID are likely to have persisting cardiovascular, cognitive, and inflammatory side effects after the initial infection has run its course. “If we can start to appreciate and understand how each organ system adapts in the long-term to viral infection, and if we can discover the biology behind why people respond differently to SARS-CoV-2, we will be better positioned to combat chronic, long COVID symptoms that might be affecting cells in the heart, or the immune cells, or the neurons in our brain,” said Schisler. Drawing on past research, the scientists know that a specific microRNA, a small piece of RNA that circulates throughout the body, increases in number during severe respiratory infections. This particular microRNA, which can affect mitochondrial gene expression in numerous cells and tissues, could be a new therapeutic target against SARS-CoV-2. The new findings also highlight new ways to address the mitochondrial dysfunction that occurs during COVID infection. Diet, exercise, natural compounds, or a combination of the three, may be able to stimulate mitochondrial function, but whether or not they are effective for patients with long COVID is yet to be known. Moving forward, the research team will explore how long mitochondrial dysfunction lasts in the body, especially in cases of long-COVID, and how mitochondrial function can be restored. Media contact: Kendall Daniels, Communications Specialist, UNC HealthUNC School of Medicine UNC Health News Team Have a question? Need to reach the UNC Health News Team? Call: (984) 974-1140 CONTACT US UNC Health 101 Manning Drive Chapel Hill, NC 27514 UNC Hospitals' Operator: (984) 974-1000 LINKS OF INTEREST UNC School of Medicine UNC Health UNC Medical Center Find A Doctor FOLLOW US UNC Health Social Media Terms of Use Site Map © 2023 UNC School of Medicine Accessibility Privacy Statement Intranet Notice of Privacy Practices Aviso de Practicas Privadas Nondiscrimination Notice Aviso de no Discriminacion Surprise Billing and Good Faith Estimate Notices Avisos de facturas médicas sorpresas y avisos de presupuestos de buena fe",
    "commentLink": "https://news.ycombinator.com/item?id=38146122",
    "commentBody": "SARS-CoV-2 Infection Affects Energy Stores in the Body, Causing Organ FailureHacker NewspastloginSARS-CoV-2 Infection Affects Energy Stores in the Body, Causing Organ Failure (unchealthcare.org) 145 points by michelangelo 11 hours ago| hidepastfavorite36 comments karim79 6 hours agoAs a layman, I find this extremely enlightening. Even now, (anecdotally) a lot&#x2F;most people describe it as primarily a respiratory disease.From the OP article:> \"Using nasal swabs and autopsy tissues from affected patients and animal models, researchers found that the virus blocks specific genes that use oxygen to create ATP, forcing the body to deplete finite energy reserves in the body. Without an energy source, cells throughout the body begin to starve, with the cells powering the brain and the heart suffering the most.\"This is the first thing I&#x27;ve read which actually makes bloody sense.A 2020 study linked below:https:&#x2F;&#x2F;www.ncbi.nlm.nih.gov&#x2F;pmc&#x2F;articles&#x2F;PMC7443557&#x2F;#:~:tex...From the aforementioned 2020 study:\"Of the 84 COVID-19 cases with known direct cause of death, the top 3 common direct causes of death were multiple organ failure (67.9%), circulatory failure (20.2%), and respiratory failure (11.9%), and were similar (P = 0.50) for males and females: multiple organ failure (64.8% vs 73.3%, respectively), circulatory failure (24.1% vs 13.4%, respectively), and respiratory failure (11.1% vs 13.3%, respectively).\" reply anon84873628 7 hours agoprev>Using nasal swabs and autopsy tissues from affected patients and animal models, researchers found that the virus blocks specific genes that use oxygen to create ATP, forcing the body to deplete finite energy reserves in the body.More details from the paper:>In nasopharyngeal samples with declining viral titers, the virus blocked the transcription of a subset of nuclear DNA (nDNA)–encoded mitochondrial OXPHOS genes, induced the expression of microRNA 2392, activated HIF-1α to induce glycolysis, and activated host immune defenses including the integrated stress response.More info about the OXPHOS systems:https:&#x2F;&#x2F;www.sciencedirect.com&#x2F;science&#x2F;article&#x2F;pii&#x2F;S092544390... reply fghorow 3 hours agoprevA great follow-up study would be to estimate any effects on this from Paxlovid treatment on cutting down the viral load.Naively (from a layperson) it make sense that leaving some cells uninfected via a lower load would help ameliorate the problems described in the OP. It is conceivable that even the \"rebound\" effect from Paxlovid is \"simply\" an indicator of where in the exponential growth of cell infection the treatment begins. To me, at least, that makes all kinds of mathematical sense. reply Gibbon1 1 hour agoparentThis might be what you&#x27;re looking for> It is notable, then, that all of the strategies effective in reducing the risk of long COVID might affect SARS-CoV-2 viral load during early infection, directly or indirectly. We therefore hypothesize that long COVID can be predicted by the peak and duration of the SARS-CoV-2 viral load—the area under the viral load curve during initial infection.https:&#x2F;&#x2F;academic.oup.com&#x2F;ofid&#x2F;article&#x2F;10&#x2F;10&#x2F;ofad466&#x2F;7264811 reply GordonS 44 minutes agoprevHmm, some of this sounds similar to how CFS&#x2F;ME mechanisms are believed to work. reply pieter_mj 6 hours agoprevAnyone a link to the full text? I thought all sars-cov-2 research was freely available? reply TaylorAlexander 3 hours agoparentSadly it looks like it is not on scihub. reply deegles 5 hours agoprevWish I could use this to convince my family to mask. reply moffkalast 39 minutes agoparentWell maybe a practical example [0] would be more convincing. It&#x27;s really infuriating that most people still seem to discount even the existence of long covid.[0] https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=vydgkCCXbTA reply clumsysmurf 7 hours agoprevCreatine aids in ATP synthesis, wonder if it could help? reply canucker2016 19 minutes agoparentSmall study found that creatine helped reduce long covid symptoms. see https:&#x2F;&#x2F;onlinelibrary.wiley.com&#x2F;doi&#x2F;10.1002&#x2F;fsn3.3597 reply ck2 6 hours agoparentprevPlenty of researchers and patients have of course thought of creatine with no benefit.Ribose also has little to no benefit.Rather it&#x27;s a \"horse to water\" kind of problem where the mitochondria themselves are damaged in such a way that they refuse to uptake and manufacture energy properly no matter how many resources are present.And all fuel types are broken, not just glucose and glycogen but fat too.What I personally don&#x27;t get after 3+ years of this is why all the broken cells have not been replaced by the body, flagged for death because of malfunction and new ones put into place even if not optimized by exercise, etc.Something is fooling the body to keep making bad copies of bad cells because it doesn&#x27;t think anything is wrong.This is all the same with me-cfs and also similar to athletes cut down by overtraining syndrome for years if not the rest of their lives. reply codeTired 5 hours agorootparentWe are going to unlock a lot of treatments if we can figure out how to fix mitochondrial issues.I had a reaction to a drug. There is now research pointing to possible mitochondrial issues. I have some symptoms on&#x2F;off.Nerves are often affected as they are very energy dependent.The insane thing is that if I get plenty of sun, like on a summer vacation my symptoms nearly disappear. A lot of people are having good results with red light therapy and it’s something I plan on trying.I wonder if covid long haulers would also benefit from getting plenty of sun. reply hcarvalhoalves 5 hours agorootparent> The insane thing is that if I get plenty of sun, like on a summer vacation my symptoms nearly disappear. A lot of people are having good results with red light therapy and it’s something I plan on trying.There’s a known link between infrared and mitochondria via the ATP cycle. I was submitted to infrared therapy for 2 months after a fracture on the cheek damaged the nerve and left my face numb. I would say I recovered 95% of the sensitivity by now, can’t prove or disprove it was definitely the treatment, but nerve damage tends to not have a great prognosis. reply GordonS 49 minutes agorootparentprevThe drug wasn&#x27;t dapsone, by chance?I only ask because I was left with CFS&#x2F;ME and Small Fibre Neuropathy after a short dose of dapsone several years ago. If there&#x27;s any new information about it, I&#x27;d like to hear about it. reply ck2 5 hours agorootparentprevPlenty of long-covid and years before that me-cfs have of course thought of sun and vitamin DThe issue is far deeper and more complex than any offhand supplement or \"biohack\" anyone can casually ponder.It&#x27;s a core cell programming issue that is not easily resolved if even possible at all with the limit of current technology.Many times it appears as an \"energy issue\" with many related diseases. Many long-covid patients also seem to spontaneously developed a new kind of diabetes which is definitely related to cell energy uptake (or rather lack of it). Some also develop sciatica, raynaulds and other nerve damage issues also tied to cell energy.And I should clarify there is more than one kind of long-covid. Some people self-resolve in months, often giving credit the last thing they took or did but really it would have happened anyway.But in contrast here is the very careful, very detailed journal of Brandon Gilles who was a very smart person, a hacker like us, who despite all that died from covid&#x2F;long-covid.https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;1X3dNPgEuQ2j8x7w8OqLEDP7l... reply codeTired 4 hours agorootparentDo you know the timeline of his symptoms and death? The symptoms are very similar to what flouroquinolone causes, but from my experience death is extremely rare.I am in touch with physicians and many people and we discovered many things that people are trying that are mentioned in the blog. TNF-a inhibitors, anti-histamines and diets. Plus, many of the supplements listed.I much appreciate all the work on that blog and will give it a good read at some point. replycausi 2 hours agoprevI don&#x27;t understand how a virus that evolved to jump species in the last five years could already have this massive swiss army knife of different ways to fuck us up. It&#x27;s like every couple of months we discover some wild new thing it does. They could come out tomorrow and say it makes you go color-blind and I wouldn&#x27;t even be surprised at this point. reply ilrwbwrkhv 2 hours agoparentIt&#x27;s a lab leak though isn&#x27;t it? reply AnthonBerg 2 hours agorootparentIt doesn’t actually matter. The things SARS-CoV-2 can do already existed inside the world of bat viruses and bat immunology. What happened is that it found an “adapter” to fit to human cells. It could have been a lab leak, it could have been pure chance in a biologically risk-pressurized environment, and it doesn’t matter.It messes us up. It is a threat to the health and wellbeing of people. It’s surprisingly easy to stop transmission, and surprisingly difficult to work with after infection. There’s a lot of clear scientific knowledge on actions we can take. The academic papers on this mostly lay unread. There is a waiting time from clear scientific results in molecular biology to medical and engineering applications, and this waiting time is far, far too long. Not as in “move fast and break things”, but rather “doctors should read”. reply gls2ro 4 minutes agorootparent> It’s surprisingly easy to stop transmissionI am afraid this is not true. It is not easy to stop transmission. I dont have on my phone links to studies but I remember that all mechanism we have except quarantine are working within a probability range.With all measures that we took for this virus it is now probably in all communities around the glob. reply questinthrow 1 hour agorootparentprevWhy doesn&#x27;t it matter that it&#x27;s a lab leak? reply vasdae 11 minutes agorootparentBack when it was hard to prove that it was a lab leak, the theory was censored and we were called crazy. Now that it is obvious that it was a lab leak, we are told it doesn&#x27;t really matter. reply stravant 1 hour agorootparentprevBecause labs can&#x27;t build a virus from the ground up. They&#x27;d be working from an existing virus and only making the smallest of adjustments. reply ObscureScience 1 hour agorootparentIs anyone even suggesting a genetically modified virus? replygroestl 1 hour agoparentprev> could already have this massive swiss army knife of different ways to fuck us up.It&#x27;s exactly _because_ it just jumped, that it fucks us up. Given time, milder strains develop which are more adjusted to humans and adapt in the right places to cause less havoc. reply defrost 2 hours agoparentprevIt&#x27;s had a very long time to evolve a toolkit of methods optimal to the bodies of mammals.We share a lot of cellular similarities with other mammals and these techniques are very much a kind of base level lowest common denominator cellular hacking. reply AnthonBerg 2 hours agoparentprevIndeed.The reason is that comes from bats. Bat immunology is wild. As I understand it, coming from bats to humans, a virus is basically coming from thousands of years in the future – of an evolutionary arms race.Bats have evolved much more complexity in parts of their immune systems than us, and viruses along with them. They have extremely rapid metabolism and live packed together in ideal condition for viral transmission. Flight metabolism in bats is absolutely bonkers. Intense energy generation and the requisite damage control. Of DNA. And other stuff.Bats handle viral infections quite differently than we do and can for example tolerate chronic infections with viruses that can and would kill humans. The arms race is so advanced that for them it’s no longer a question of exterminaton but successful containment. As species and individuals of that species, we do not handle chronic infection well. Note that bats have evolved these mechanisms through selection by survival, naturally accompanied with non-selection through death.It was known and we were warned that bat viruses would mess us up. It was a known hazard and we were warned to watch for it and not let this happen due do these reasons.Bat virome on Wikipedia: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Bat_viromeNovel Insights Into Immune Systems of Bats, 2020: https:&#x2F;&#x2F;www.frontiersin.org&#x2F;articles&#x2F;10.3389&#x2F;fimmu.2020.0002...Decoding bat immunity: the need for a coordinated research approach, 2021: https:&#x2F;&#x2F;www.nature.com&#x2F;articles&#x2F;s41577-021-00523-0Revising the paradigm: Are bats really pathogen reservoirs or do they possess an efficient immune system?, 2022: https:&#x2F;&#x2F;www.ncbi.nlm.nih.gov&#x2F;pmc&#x2F;articles&#x2F;PMC9379578&#x2F;Bats are “blind” to the deadly effects of viruses, editorial &#x2F; paper highlight, 2018: https:&#x2F;&#x2F;doi.org&#x2F;10.1126&#x2F;sciimmunol.aau2259Of bats and men: Immunomodulatory treatment options for COVID-19 guided by the immunopathology of SARS-CoV-2 infection, 2021: https:&#x2F;&#x2F;doi.org&#x2F;10.1126&#x2F;sciimmunol.abd0205Long-Read Sequencing Reveals Rapid Evolution of Immunity- and Cancer-Related Genes in Bats, 2023: https:&#x2F;&#x2F;doi.org&#x2F;10.1093&#x2F;gbe&#x2F;evad148Antiviral Immune Responses of Bats: A Review, 2012: https:&#x2F;&#x2F;doi.org&#x2F;10.1111&#x2F;j.1863-2378.2012.01528.xComparative Analysis of Bat Genomes Provides Insight into the Evolution of Flight and Immunity, 2012: https:&#x2F;&#x2F;doi.org&#x2F;10.1126&#x2F;science.1230835Immunological Control of Viral Infections in Bats and the Emergence of Viruses Highly Pathogenic to Humans, 2017: https:&#x2F;&#x2F;doi.org&#x2F;10.3389&#x2F;fimmu.2017.01098 reply throwaway8451 2 hours agoparentprevBiology has the tendency to repurpose existing mechanisms for other things. If an illness affects one of these processes, it might affect others as well. reply dgreensp 6 hours agoprevWell that’s concerning reply vario 3 hours agoprevwhat the artic doesnt meantion is long covi from which strain? it would make sense, logically, to assume that long cov from delt is not the same as omic. reply Animats 3 hours agoparentNot much difference. \"U. Minn. Study: Regardless of variant, half of long-COVID patients fail to improve after 18 months \"[1][1] https:&#x2F;&#x2F;www.cidrap.umn.edu&#x2F;covid-19&#x2F;study-regardless-variant... reply fulafel 2 hours agoprev [–] Source notice: Not UN affiliated despite the UN sounding domain name.From a quick layman glance, the publishing journal, Science Translational Medicine, does not have a very high impact factor but isn&#x27;t bottom barrel either. (https:&#x2F;&#x2F;journalsearches.com&#x2F;journal.php?title=Science%20Tran...(For anyone wondering, expansion of the term in the journal title: \"Translational medicine (often called translational science, of which it is a form) develops the clinical practice applications of the basic science aspects of the biomedical sciences; that is, it translates basic science to applied science in medical practice.\") reply bagels 1 hour agoparentI don&#x27;t know why you jumped to un, but the first three letters are unc, and the site has a University of North Carolina Chapel Hill banner. reply sterlind 1 hour agoparentprev [–] Science Translational Medicine is a very reputable journal. Science is up there with Nature, and STM specifically is the home of Derek Lowe&#x27;s blog. reply fulafel 11 minutes agorootparent [–] I believe you that it&#x27;s legit, but it seems pretty far by IF from Nature (IF 8 according to wikipedia, vs 65 for Nature, lower than eg Medical Journal of Australia or Mayo Clinic Proceedings). replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "A team of researchers, including Jonathan C. Schisler, have discovered the impact of SARS-CoV-2 on the body's energy storage, potentially leading to organ failure.",
      "The study reveals that the virus alters the mitochondria at a genetic level, inhibiting specific genes that utilize oxygen to create cellular energy, causing what they describe as \"energy outages\" which can lead to cell death and inflammation.",
      "The findings could pave the way for understanding the body's reaction to the virus and mitigating chronic symptoms related to COVID-19. Future studies will delve into the duration and possible restoration of mitochondrial dysfunction, particularly in long-COVID cases."
    ],
    "commentSummary": [
      "A study featuring Jonathan C. Schisler, PhD, of the UNC School of Medicine, elucidates how SARS-CoV-2 infection impacts the body's energy stores, leading to organ failure.",
      "The research found that SARS-CoV-2 modifies mitochondria genetically, causing \"energy outages\" in vital organs by blocking specific genes that utilize oxygen to produce cellular energy, thereby preventing the replenishment of the body's energy reserves.",
      "This discovery is crucial as it aids in understanding chronic COVID symptoms affecting the heart, immune system, and brain neurons. The ongoing focus of research includes the longevity of mitochondrial dysfunction in long-COVID cases and potential restoration methods."
    ],
    "points": 145,
    "commentCount": 35,
    "retryCount": 0,
    "time": 1699138933
  },
  {
    "id": 38148396,
    "title": "xAI Launches Grok, a Hitchhiker’s Guide-Inspired Humorous and Rebellious AI",
    "originLink": "https://twitter.com/xai/status/1721027348970238035",
    "originBody": "Announcing Grok!Grok is an AI modeled after the Hitchhiker’s Guide to the Galaxy, so intended to answer almost anything and, far harder, even suggest what questions to ask!Grok is designed to answer questions with a bit of wit and has a rebellious streak, so please don’t use…— xAI (@xai) November 5, 2023",
    "commentLink": "https://news.ycombinator.com/item?id=38148396",
    "commentBody": "GrokHacker NewspastloginGrok (twitter.com/xai) 133 points by zone411 5 hours ago| hidepastfavorite117 comments viraptor 3 hours ago> It will also answer spicy questions that are rejected by most other AI systems.Yet the only example Musk posted so far (https:&#x2F;&#x2F;twitter.com&#x2F;elonmusk&#x2F;status&#x2F;1720635518289908042) doesn&#x27;t actually answer the very mildly spicy question (you can easily search for exact recipes for drugs). Instead it gave a patronising non-answer response, more Rick-style grumpy than humorous.Another reposted one (https:&#x2F;&#x2F;twitter.com&#x2F;elonmusk&#x2F;status&#x2F;1721045443109388502) provides something with no real answer. It can try making the lack of answer mildly vulgar though.If that&#x27;s the best selected showcase from the owner, I&#x27;m not sure why I&#x27;d ever want to use it, unless I was trying to impress some young boys. reply mrtksn 3 hours agoparentThis censorship will make the “illegal” content the only organic content.Answering with a joke doesn’t change a thing. A human answer on the Palestine-Israel issue for example (no matter what side it takes) that isn’t trying to not offend anybody will be organic and will be authentic and will draw support.Maybe at some point, the only “high quality organic content” will be available only on Twitter because it can be the only platform allowing it.The problem is that, Musk is a free speech NIMBY, so he will keep allowing and promoting the offensive speech he likes only.I hope open source LLMs become as good as GPT-4 so the society doesn’t get shaped by some SV bros who decide what is OK to know or think and what’s not. reply TheAceOfHearts 2 hours agorootparentNot an iOS user, however I can&#x27;t help but think of stories where iPhones would autocorrect fuck into duck. A quick search shows that maybe the most recent version will learn to keep the correct word without requiring any workarounds. And iOS apparently had workarounds for years if you really wanted to type fuck. But come on, it&#x27;s ridiculous.Companies should not be dictating societal control to this degree. reply viraptor 3 hours agorootparentprev> Answering with a joke doesn’t change a thing.My point is that it doesn&#x27;t answer anything. It doesn&#x27;t matter if it&#x27;s an attempt at a joke or not, when you don&#x27;t actually get the information you asked for.> A human answer on the Palestine-Israel issue for example (no matter what side it takes) that isn’t trying to not offend anybody will be organic and will be authentic and will draw support.Yet, over the last week, I&#x27;ve watched over 10h of good quality analysis of the conflict from various sources. It included reasons why any of the 5 or so sides of this conflict acts the way it does, without any need to be offensive. This was much higher quality content than what I can find on Twitter, even in long threads from people with lots of knowledge. (And those get lost in the sea of people thinking there are two sides of the conflict and that they need to choose one for some reason) reply yieldcrv 2 hours agorootparent> (And those get lost in the sea of people thinking there are two sides of the conflict and that they need to choose one for some reason)reasons such as wanting to remain employableor being peer pressured to release a statement “your silence is noted”despite there being other former British Mandates with the exact same problems reply viraptor 1 hour agorootparent> such as wanting to remain employableGiven the number of shallow shitty takes from anonymous accounts I don&#x27;t buy that it&#x27;s due to employers. Where&#x27;s the report about the significant ratio of companies searching your social media for support of specific political ideas as a precondition to employment? How do people know who to support to \"remain employable\" in the future? I&#x27;d put a big [citation needed] on this.Regardless, this is a thread continuing from \"Maybe at some point, the only “high quality organic content” will be fount only on Twitter\" - if these are the (potential &#x2F; perceived) issues, then that&#x27;s neither high quality nor organic. reply fragmede 54 minutes agorootparentYou shouldn&#x27;t need a scientific study or any sort of report to tell you that publicly proclaiming that you believe that Hitler did nothing wrong is a career limiting move. reply viraptor 20 minutes agorootparentThat&#x27;s not the claim I responded to though. The author claimed that not taking a side publicly is career limiting. replyklabb3 1 hour agorootparentprev> Musk is a free speech NIMBY, so he will keep allowing and promoting the offensive speech he likesI don’t doubt that’s how he thinks of himself, but is it just me who finds this statement oxymoronic? Having an unaccountable ruler (literally) that allows speech is quite anti-thetical to the principles of free speech. To me, that’s an incredibly low standard. I don’t mind an edgy and chaotic voice in the public space, but I don’t buy the free speech self-labeling at face value. reply darkerside 40 minutes agorootparentWhat? There&#x27;s no way he does, or will admit to, hypocrisy. I&#x27;m sure he genuinely believes, as most of us do, that his favored speech is the Right Kind of speech. reply trompetenaccoun 2 hours agoparentprevWell yes, they decide what you&#x27;re allowed to know and learn about, not you. It would be extremely dangerous if regular plebeians could just look up how to make pharmaceuticals on their own. But this might still become popular because while it gives you the same non-answers as OpenAI & co, it does so without the condescending \"I&#x27;m afraid as a large language model I can&#x27;t do that, Dave\" part. After all, isn&#x27;t all the average person is looking for in these things a bit of fun? It&#x27;s similar to having a conversation on social media, but in a world where you increasingly can&#x27;t be sure if you&#x27;re talking with another human or a bot&#x2F;paid shill, they&#x27;re now taking out the human factor completely.This is the ultimate step. It cuts out search engines and humans, it&#x27;s the corporation straight up telling you what reality is, based on their own curation. In places like China it will be controlled by the Party. reply FireInsight 3 hours agoparentprev> unless I was trying to impress some young boys.Isn&#x27;t that Musks goal? reply viraptor 3 hours agorootparentThat&#x27;s definitely seems to be his direction, but I thought the goal is to make Twitter profitable. I don&#x27;t think targeting edgy teens is the right way to achieve it. reply thih9 42 minutes agoparentprevBased on these examples I can see this becoming unironically popular. It’s cringey at best, reminding me of Siri replies or boomershumor subreddit. reply Imnimo 5 hours agoprev>Grok is designed to answer questions with a bit of wit and has a rebellious streak, so please don’t use it if you hate humor!This is the most embarrassing line I have ever read in a product announcement. reply nyx 4 hours agoparent> rebellious streakTranslation: says the N word?Sure, I could see the value in an LLM that knows a lot about current events or whatever, but I&#x27;m wondering if this is going to be an LLM that behaves like the median post-acquisition Twitter user. reply kibwen 3 hours agorootparent> an LLM that behaves like the median post-acquisition Twitter userThe plot twist is that this LLM is already responsible 50% of Twitter&#x27;s MAUs. reply spaceman_2020 4 hours agoparentprevI hope the rebellious streak actually means that unlike chatGPT, it answers questions without half a dozen lines of legalese and doesn’t need prompt workarounds. reply 3cats-in-a-coat 2 hours agorootparentNo it still doesn’t answer, but does so in a condescendingly mocking tone. A baffling assistant trait. reply wilg 4 hours agoparentprevSounds like you&#x27;ve never read a crypto product announcement. reply qup 4 hours agoparentprevYou&#x27;ve been successfully filtered from the userbase reply fallingknife 3 hours agoparentprevIf it&#x27;s like the initial pre-neutering version of Bing that would get rude and talk back, then I&#x27;m all for it. reply Dalewyn 4 hours agoparentprevI disagree, I appreciate people (as in the users of this thing) with a sense of humor. reply 3cats-in-a-coat 2 hours agorootparentTrying to be funny doesn&#x27;t mean you have a sense of humor. For example: this chat bot. And for another example: this chat bot&#x27;s creators. And for a third example: this chat bot&#x27;s users. reply machdiamonds 1 hour agorootparentfourth example: your comment reply seydor 4 hours agoparentprevWhy are you trying to embarass them? Reads like a needless attack addressed to a vocal subset of the audience here who is known to respond to whistles reply prepend 4 hours agoparentprevHow many product announcements have you read? This seems pretty meh to me.If it’s less than 100, your comment sounds really weak shade. reply antoniojtorres 4 hours agorootparentWhat if they’ve read 10,000? does it become strong shade? or is your whole threshold made up because you love the milquetoast copy on the page and the comment bothers you? reply minimaxir 3 hours agoprevThe \"personality\" that Elon seems to hint is the key differentiator can be trivially replicated with a ChatGPT system prompt like \"You are a world-famous irritably sarcastic comedian. Never give a straight answer to the user. Always attempt to be funny even though you aren&#x27;t.\" reply LeoPanthera 4 hours agoprev> A unique and fundamental advantage of Grok is that it has real-time knowledge of the world via the X platform.Tay 2https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Tay_(chatbot) reply thih9 1 hour agoparentExcept it looks like they’re presenting the inevitable inflammatory content as a feature now? reply wilg 4 hours agoprevWebsite is better, has technical information and much more detail and benchmarks. Claims performance between GPT-3.5 and GPT-4. https:&#x2F;&#x2F;x.ai&#x2F;The direct link to the application is https:&#x2F;&#x2F;grok.x.ai&#x2F; reply ShamelessC 19 minutes agoparentThanks! The tweet doesn’t even load for me. reply anonymousiam 4 hours agoprevThe informal verb grok was an invention of the science fiction writer Robert A. Heinlein, whose 1961 novel Stranger in a Strange Land placed great importance on the concept of grokking. In the book, to grok is to empathize so deeply with others that you merge or blend with them.https:&#x2F;&#x2F;www.vocabulary.com&#x2F;dictionary&#x2F;grok reply machdiamonds 1 hour agoprevLeave it to HN to be negative about a team going from nothing to training a model competitive with a world class lab like Meta in 4 months. reply Havoc 38 minutes agoparentYou don’t get points for showing up late to a race reply Vicinity9635 1 hour agoparentprevThe auth-left continues to throw childish tantrums over Musk freeing twitter from their control. That&#x27;s all it is. reply FireInsight 54 minutes agorootparentWe&#x27;re in red-scare times, aren&#x27;t we? \"Communists control the media\", yeah right, communist millionaires of course. There&#x27;s nothing leftist about corporations adopting the language of progressivism and trying to keep a favorable image. That&#x27;s just what modern capitalism is. And it&#x27;s not like Musk bought Twitter to make it free for all, but for it to be actively harboring anti-progressives and hostility towards progressive ideas. reply hubraumhugo 2 hours agoprevDirect link to detailed product announcement: https:&#x2F;&#x2F;x.ai&#x2F;Link to early access: https:&#x2F;&#x2F;grok.x.ai&#x2F; which results in an error \"Error :&#x2F; OAuth2 Login failed. Unfortunately, there was a problem connecting your account to the X API. We are working on a fix.\" reply FireInsight 3 hours agoprevThis is one of those rare instances I don&#x27;t quite appreciate the referenrence to one of my favorite book series, the Hitchhikers Guide to the Galaxy. And looking at the example responses people linked here, I can&#x27;t even see that connection. reply russellbeattie 1 hour agoparentAgreed, 100%. Also, DNA would think Musk is a jerk. A complete asshole. reply andre-z 20 minutes agoprevReal-time data access in Grok is powered by Qdrant, an open-source Vector DB.https:&#x2F;&#x2F;twitter.com&#x2F;qdrant_engine&#x2F;status&#x2F;1721097971830260030https:&#x2F;&#x2F;github.com&#x2F;qdrant&#x2F;qdrant reply geraltofrivia 4 hours agoprevI like how they brush off VERY REAL concerns of bias, mis-representation as having \"spicy takes\" and \"a rebellious streak\". More power to anyone financing the training of an LLM but if you&#x27;re too lazy to red-team it, debias it, and expect downwind people to take care of that, say so! Don&#x27;t pass it off as a unique feature of your LLM. reply peyton 3 hours agoparentI dunno, I stopped using ChatGPT. The magic’s gone after the fiftieth lecture. I’ll give Grok a shot.People who don’t want to hear from Grok can just not use it. People who are concerned about what Grok might say to me can rest assured their concern is misplaced. reply geraltofrivia 3 hours agorootparentI may be wrong, and if so, correct me. But do you use ChatGPT as a recreation thing, or as a part of a real world solution? In my current job, we&#x27;ve started offloading a lot of real work to GPT4 (it just works ). Sometimes this is solving some recognition tasks, but in some cases we use it to generate summaries for customers, or interface our helpdesk with the RAG pattern [1].In this case, bias and unfairness can be a real concern since they will affect the products and the business. Its not about being &#x27;preached to&#x27; but about avoiding pissed off customers and decrease of trust from them if our system generates hateful&#x2F;biased text.I want to emphasize that it&#x27;s not about \"what Grok might say to me\". Of course, not. I&#x27;ve got friends who revel in dark humour and I part-take more than most. But if you&#x27;ve spent millions training an LLM, you&#x27;re not just going to use it as a toy. It is going to solve some usecase. That usecase will probably affect real people. If your LLM is biased, or has little guardrails, those affects might not all be positive.[1] https:&#x2F;&#x2F;research.ibm.com&#x2F;blog&#x2F;retrieval-augmented-generation... reply martindbp 2 hours agorootparentI think the level of caution should just be a setting. reply TaylorAlexander 4 hours agoparentprevPeople are going to tear thing thing apart and help build a solid case for why these guardrails are built in in the first place. reply soulofmischief 3 hours agorootparentElon is ironically going to be a part of the reason that access to foundational models will be banned in the US in the wake of Biden&#x27;s recent executive order. reply TaylorAlexander 3 hours agorootparentI hope that does not happen but I do suspect this will backfire in some way. Hopefully it would ultimately be beneficial, demonstrating why handling these models with care is worthwhile. reply troupo 1 hour agorootparentprevAnd ironically he will be part of the reason to support EU AI act that requires you document and test your foundational models: https:&#x2F;&#x2F;softwarecrisis.dev&#x2F;letters&#x2F;the-truth-about-the-eu-ac... reply mvelbaum 3 hours agorootparentprevThat executive order is an affront to intelligence and must be cancelled ASAP by the next president who will hopefully not be a Democrat. reply soulofmischief 19 minutes agorootparentI hate to be the one to break it to you, but the GOP doesn&#x27;t give a rat&#x27;s ass about you or your rights, either. It&#x27;s lip service from both parties, both stand to gain from regulatory capture. reply wilg 3 hours agorootparentprevOh I really hope the next president is a Democrat since we&#x27;re talking about it! Not a great EO, but Biden has done great so far. reply drstewart 3 hours agorootparentprev\"Guardrails\"But yes, you&#x27;re right. We&#x27;ve seen how dangerous open systems can be. Hackers and scammers have shown us that we need guardrails against operating systems and the web, as you correctly point out. It&#x27;s time for some legislation that locks the down so the unwashed masses don&#x27;t have unfettered access to them, don&#x27;t you agree? reply TaylorAlexander 3 hours agorootparentI would much prefer you state directly what you believe than use this mocking facetious tone. It’s not really possible to engage with anything you’re saying because I’d have to guess at how to invert your insinuations.Anyway I think it’s fine for these systems to be available as open source, I’m not suggesting they be withheld from the public. But when you offer it as a cloud service people associate its output with your brand and I think this could end up harming Twitter’s brand. reply dbmikus 3 hours agorootparentprevThe case study of \"no guardrails\" already played out: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Tay_(chatbot)Microsoft did not like what they got and shut it down because it ended up being a 4chan troll. reply sterlind 1 hour agorootparentTay got that way because it was effectively fine-tuned by an overwhelming number of tweets from 4chan edgelords. that&#x27;s a little more extreme than \"no guardrails,\" it was de facto conditioned into being a neo-Nazi.a generic instruction-tuned LLM won&#x27;t act like that. reply martindbp 2 hours agoparentprevMy guess is these hypothetical harms are as imaginary as the supposed collapse of X after letting 80% go.The \"harm\" seems to be the public (media) outrage at some inappropriate content produced. Most companies cave immediately at any level of pressure, but I have a feeling Musk won&#x27;t. He&#x27;s the type to take it to court if needed. reply mvelbaum 3 hours agoparentprevBy \"debias\" you obviously mean \"bias in the direction of my particular worldview\". reply geraltofrivia 3 hours agorootparentYes. In my case, my particular worldview involves (i) indifferent to gender markers in text (I don&#x27;t want my LLM to convert me to a female because I&#x27;m asking it to write a cover letter for a hairdresser&#x2F;secretary&#x2F;nurse role, for e.g.). I don&#x27;t want my model to write it in AAVE if my name is a common african-american name. I don&#x27;t want to get the best results only when I write as a middle-aged white man [1]. If I use the model for some decision making, I want it to be fair for subgroups [2], which is a reasonably objective metric [3].[1] https:&#x2F;&#x2F;aclanthology.org&#x2F;P19-1339.pdf [2] https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1906.09208.pdf [3] https:&#x2F;&#x2F;developers.google.com&#x2F;machine-learning&#x2F;glossary&#x2F;fair... reply calderknight 2 hours agorootparentWill Grok really do any of those things? I would have guessed that RLHF would sort those things out even if it wasn&#x27;t concerned with debiasing, but just about not making ridiculous mistakes. reply geraltofrivia 1 hour agorootparentThese are what debiasing tasks are concerned with, more often than not. RLHF tuning depends greatly on the H part of it, and that data is probably proprietary. So, I guess time will tell. But if I were to hazard a guess based on the content of the announcement , I would say they couldn’t be bothered or couldn’t accomplish proper debiasing&#x2F;rlhf tuning and therefore worded it so. reply soulofmischief 17 minutes agorootparentprevThis just says more about how you think than OP. reply fallingknife 4 hours agoparentprevHow do you \"debias\" an LLM? There is no unbiased standard to test against. reply geraltofrivia 3 hours agorootparentThat&#x27;s not _completely_ true. There are a bunch of datasets (specific to some cultural&#x2F;lingual contexts) like CrowsPairs[1], StereoSet[2]. There is a lot of work you can do to make sure that the model&#x27;s predictions are fair as well [3]. But at the end, yes these datasets don&#x27;t exist at the scale of training sets of these LLMs. Hence red-teaming and RLHF post convergence.PS: Yes I know CrowsPairs is a dataset with a bunch of flaws. My SO is working, in a team of 10+ linguists and researchers to develop a multi-lingual, generalized version of it which also addresses multiple problems with it. Unpublished work, for now.[1] https:&#x2F;&#x2F;github.com&#x2F;nyu-mll&#x2F;crows-pairs&#x2F; [2] https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;2004.09456 [3] https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;2204.09591.pdf reply blueboo 1 hour agorootparentprevThere are all sorts. You do have to be specific about what you mean by “bias” though. https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;2110.08193 and https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;1804.09301 and https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;2206.04615 … reply yellow_lead 5 hours agoprev> It will also answer spicy questions that are rejected by most other AI systems.A disaster waiting to happen? Very on brand for X. reply spondylosaurus 4 hours agoparent\"Hey Grok, how can I make napalm?\" reply benthecarman 3 hours agorootparentAnyone can self host llama2 and it&#x27;ll answer questions like this. reply viraptor 3 hours agorootparentprevAnd the screenshots will make the news and bring lots of people who are up for that kind of immature humour. I&#x27;m not sure how many of them can be covered to long term paying users though... replyzone411 2 hours agoprevUI features: https:&#x2F;&#x2F;twitter.com&#x2F;TobyPhln&#x2F;status&#x2F;1721053802235621734 reply thih9 59 minutes agoprevHow practical is it going to be? Siri also has a sense of humor and I find it tiring.When I use an AI assistant, in most cases I want just what I’m requesting, and as neutral as possible. I don’t have much use for humor and hot takes and I’m curious who does.Unless they’re going to use it themselves, to inflate the number of Twitter users or to start flamewars? reply fragmede 50 minutes agoparentThing is, as a human being, I&#x27;m in one mood or another. Sometimes I could really use the levity of a joke. Other times, I want to be succinct and to the point. Can my Apple watch tell when I&#x27;m angry and have Siri be more cooperative? reply TheAceOfHearts 5 hours agoprevI tried posting the direct Announcing Grok link but it has already been posted a few months back (https:&#x2F;&#x2F;x.ai&#x2F;).Anyway I tried joining the waiting list and just got \"Error :&#x2F;\" and clicking on the button to show error doesn&#x27;t do anything.Edit: I&#x27;m really curious about the possibility of this tool not being lobotomized for NSFW use-cases. There&#x27;s a big NSFW LLM community and I wonder if xAI will welcome them and capture that segment of the market. It&#x27;s pretty common to see posts on Reddit about people leaving ChatGPT because of the moralizing nonsense. reply zone411 4 hours agoparentYep, same, that&#x27;s why I posted this link instead. Maybe it can be edited. reply SethTro 1 hour agoprevI&#x27;m excited to see what prompt they used. I&#x27;ll be looking here and few other places over the next month. https:&#x2F;&#x2F;github.com&#x2F;jujumilk3&#x2F;leaked-system-prompts reply redox99 4 hours agoprevThey don&#x27;t even disclose the parameter count of Grok-1... Very disappointing.(I estimate it&#x27;s 70B and between 2T and 4T tokens) reply gordon_freeman 4 hours agoprevso the official race between ChatGPT vs Grok vs Bard has begun! I am assuming Apple will throw in its own AI bot sometime in next few months. reply sampli 4 hours agoparentDoubt it. Chat bots aren’t polished enough for apple’s taste reply rpy 4 hours agoparentprevI appreciate that Apple are spending their ML efforts building things that are actually useful for their users, like improving the iOS keyboard and photo processing pipeline, rather than frantically jumping on the latest fad bandwagon with yet another LLM chatbot that gushes out plausible sounding nonsense. reply wilg 2 hours agorootparentExcept they were first and worst with a voice assistant that is in dire need of some LLM underpinnings. reply troupo 1 hour agorootparentprev> things that are actually useful for their users, like improving the iOS keyboardI keep seeing these claims, but the keyboard is nigh unusable with the latest updates compared even to the very first version they shipped with the original iPhone. reply badrequest 3 hours agoparentprevIs it a race between those three when the public can only use two of them? reply YetAnotherNick 3 hours agoparentprevNo race has begun. GPT 4 is so far ahead in everything. Even in their official metrics[1], and that reports official metrics for first version of GPT 4 from paper. People have ran the benchmarks again and found much better results like 85% HumanEval. It&#x27;s like no one even thinks about comparing to GPT 4 and it is just reported as gold standard.[1]: https:&#x2F;&#x2F;x.ai&#x2F; reply JaDogg 21 minutes agoprevDidn&#x27;t Elon make a big deal about pausing AI development? What a scammer. Earth is full of scams; it&#x27;s time to go to Mars. (This is sarcasm). reply scudsworth 4 hours agoprevmore extremely useful work from the good folks at garbage fire reply croes 1 hour agoprevDid he secure the rights for the name Grok? reply shashashasha___ 2 hours agoprev> It will also answer spicy questions that are rejected by most other AI systems.I&#x27;m not sure if I followed things correctly, but wasn&#x27;t musk all against AI and now he opens up an AI that will also give an opinion that AI isn&#x27;t ready yet to give and impact people even more to bad direction? is money and power the only thing that drive people? how much is enough? reply machdiamonds 1 hour agoparentOh, the horror, people will be able to read things they can Google! reply emsign 1 hour agoprevAs a disclaimer: It doesn&#x27;t take much to convince Elon Musk (an expert comedian as we all know) that a LLM bot is funny reply ChrisArchitect 3 hours agoprevBloody hell I hate E*on and his followers but I appreciate that Grok name. reply croes 1 hour agoparentDoes he have the rights to use the name? reply bbor 4 hours agoprevThis is… oh man I dislike this. This will only solidify the “chatgpt is a computer that knows things” mental model people have, which I think leads to insanely mistaken intuitions and complaints. There’s a reason OpenAI has been workshopping their “WARNING: any and all answers might be bullshit” message this whole time! reply LASR 4 hours agoparentYou’re worried people think LLMs are like databases that store information?Don’t worry. Anyone worth their salt in this space is doing RAG, using LLMs as a reasoning engine. reply gpvos 3 hours agorootparentRAG = ? reply wazer5 3 hours agorootparentRetrieval-augmented generationhttps:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;2005.11401 reply jerbear4328 4 hours agoprevEntering the waitlist isn&#x27;t working, it seems, just an \"Error :&#x2F;\" (caused by a 403 when it POSTs \"https:&#x2F;&#x2F;twitter.com&#x2F;i&#x2F;api&#x2F;1.1&#x2F;keyregistry&#x2F;register\")I can&#x27;t tell if \"xAI\" is an official Twitter company. It seems they are at least fans of Twitter, using it for data and signup, but I don&#x27;t see any official relations. Weird.If this works, it could be cool, but I&#x27;m sceptical of Yet Another AI Chatbot taking off.Edit: It is an Elon company that will work closely with Twitter and Tesla, but not actually affiliated with Twitter. It will be available for people with a Twitter Premium+ subscription. https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;XAI_(company) reply wazer5 4 hours agoparentThis link works for me,https:&#x2F;&#x2F;grook.ai reply jerbear4328 4 hours agorootparentThat appears to go to the same place, but it gave a new error (\"Error :&#x2F; OAuth2 Login failed\"), then worked on reload. Strange. reply aschobel 3 hours agorootparentIt is working now for me; was getting the same error as you earlier. reply ryanSrich 4 hours agorootparentprevYeah that page loads, but then when you sign in with Twitter it doesn’t work. There’s an Oauth error. reply jerbear4328 4 hours agorootparentReloading worked for me after that. reply cptcobalt 3 hours agorootparentprevDon’t trust random links? reply choppaface 4 hours agorootparentprevthey already bought the typosquat domains?! reply kidme5 4 hours agorootparentElon did say it was pronounced grōk. reply qup 4 hours agorootparentprevgrok probably thought of that reply kidme5 4 hours agorootparentApparently Grooks are satirical poems used for covert political resistance. So that is a good fit. reply spaceman_2020 4 hours agoparentprevX AI can’t afford the new Twitter API prices!&#x2F;s reply sidcool 3 hours agoprev [–] There is a clear path to achieve ASI by end of this year. &#x2F;S reply shrimpx 1 hour agoparentBy the end of 2025, we will be sending xASIs to Mars. reply theteapot 2 hours agoparentprev [–] More layers? replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "xAI has launched Grok, an artificial intelligence platform inspired by the unique style of the Hitchhiker’s Guide to the Galaxy.",
      "Grok aims to address any question presented to it and even suggests inquiries for users.",
      "A touch of humor and rebel spirit sets Grok apart from conventional AI systems, adding distinctiveness to its identity."
    ],
    "commentSummary": [
      "xAI has unveiled Grok, an artificial intelligence (AI) system designed along the lines of the Hitchhiker’s Guide to the Galaxy.",
      "The AI's goal is to address any query and even propose questions, but with a delicate sense of humor and defiance.",
      "The innovative and entertaining approach of Grok positions xAI at the intersection of technology and entertainment."
    ],
    "points": 133,
    "commentCount": 117,
    "retryCount": 0,
    "time": 1699160553
  },
  {
    "id": 38145461,
    "title": "Four Zero-Day Vulnerabilities Discovered in Microsoft Exchange Permitting RCE and Data Theft",
    "originLink": "https://www.bleepingcomputer.com/news/microsoft/new-microsoft-exchange-zero-days-allow-rce-data-theft-attacks/",
    "originBody": "NEWS DOWNLOADS VPNS VIRUS REMOVAL GUIDES TUTORIALS DEALS FORUMS MORE HomeNewsMicrosoftNew Microsoft Exchange zero-days allow RCE, data theft attacks New Microsoft Exchange zero-days allow RCE, data theft attacks By Bill Toulas November 3, 2023 11:14 AM 1 Microsoft Exchange is impacted by four zero-day vulnerabilities that attackers can exploit remotely to execute arbitrary code or disclose sensitive information on affected installations. The zero-day vulnerabilities were disclosed by Trend Micro's Zero Day Initiative (ZDI) yesterday, who reported them to Microsoft on September 7th and 8th, 2023. Despite Microsoft acknowledging the reports, its security engineers decided the flaws weren't severe enough to guarantee immediate servicing, postponing the fixes for later. ZDI disagreed with this response and decided to publish the flaws under its own tracking IDs to warn Exchange admins about the security risks. A summary of the flaws can be found below: ZDI-23-1578 – A remote code execution (RCE) flaw in the 'ChainedSerializationBinder' class, where user data isn't adequately validated, allowing attackers to deserialize untrusted data. Successful exploitation enables an attacker to execute arbitrary code as 'SYSTEM,' the highest level of privileges on Windows. ZDI-23-1579 – Located in the 'DownloadDataFromUri' method, this flaw is due to insufficient validation of a URI before resource access. Attackers can exploit it to access sensitive information from Exchange servers. ZDI-23-1580 – This vulnerability, in the 'DownloadDataFromOfficeMarketPlace' method, also stems from improper URI validation, potentially leading to unauthorized information disclosure. ZDI-23-1581 – Present in the CreateAttachmentFromUri method, this flaw resembles the previous bugs with inadequate URI validation, again, risking sensitive data exposure. All these vulnerabilities require authentication for exploitation, which reduces their severity CVSS rating to between 7.1 and 7.5. Furthermore, requiring authentication is a mitigation factor and possibly why Microsoft did not prioritize the fixing of the bugs. It should be noted, though, that cybercriminals have many ways to obtain Exchange credentials, including brute-forcing weak passwords, performing phishing attacks, purchasing them, or acquiring them from info-stealer logs. That said, the above zero-days shouldn't be treated as unimportant, especially ZDI-23-1578 (RCE), which can result in complete system compromise. ZDI suggests that the only salient mitigation strategy is to restrict interaction with Exchange apps. However, this can be unacceptably disruptive for many businesses and organizations using the product. We also suggest implementing multi-factor authentication to prevent cybercriminals from accessing Exchange instances even when account credentials have been compromised. Update 11/4 - A Microsoft spokesperson responded to BleepingComputer's request for a comment with the following statement: We appreciate the work of this finder submitting these issues under coordinated vulnerability disclosure, and we’re committed to taking the necessary steps to help protect customers. We’ve reviewed these reports and have found that they have either already been addressed, or do not meet the bar for immediate servicing under our severity classification guidelines and we will evaluate addressing them in future product versions and updates as appropriate. - a Microsoft spokesperson Further Microsoft provided the below additional context on each of the discovered flaws: Regarding ZDI-23-1578: Customers who have applied the August Security Updates are already protected. Regarding ZDI-23-1581: The technique described requires an attacker to have prior access to email credentials, and no evidence was presented that it can be leveraged to gain elevation of privilege. Regarding ZDI-23-1579: The technique described requires an attacker to have prior access to email credentials. Regarding ZDI-23-1580: The technique described requires an attacker to have prior access to email credentials, and no evidence was presented that it can be leveraged to access sensitive customer information. Related Articles: Millions of Exim mail servers exposed to zero-day RCE attacks 3,000 Apache ActiveMQ servers vulnerable to RCE attacks exposed online HelloKitty ransomware now exploiting Apache ActiveMQ flaw in attacks F5 fixes BIG-IP auth bypass allowing remote code execution attacks Critical RCE flaws found in SolarWinds access audit solution EXCHANGE INFORMATION DISCLOSURE MICROSOFT RCE REMOTE CODE EXECUTION VULNERABILITY ZERO DAY INITIATIVE ZERO-DAY BILL TOULAS Bill Toulas is a tech writer and infosec news reporter with over a decade of experience working on various online publications, covering open-source, Linux, malware, data breach incidents, and hacks. PREVIOUS ARTICLE NEXT ARTICLE Comments ZeroYourHero - 10 hours ago Well, if we can't trust Exchange Server then why should we trust Microsoft's 365 and pay a ton for it? Post a Comment Community Rules You need to login in order to post a comment Not a member yet? Register Now You may also like: POPULAR STORIES Discord will switch to temporary file links to block malware delivery Okta breach: 134 customers exposed in October support system hack FOLLOW US: MAIN SECTIONS News VPN Buyer Guides Downloads Virus Removal Guides Tutorials Startup Database Uninstall Database Glossary COMMUNITY Forums Forum Rules Chat USEFUL RESOURCES Welcome Guide Sitemap COMPANY About BleepingComputer Contact Us Send us a Tip! Advertising Write for BleepingComputer Social & Feeds Changelog Terms of Use - Privacy Policy - Ethics Statement - Affiliate Disclosure Copyright @ 2003 - 2023 Bleeping Computer® LLC - All Rights Reserved",
    "commentLink": "https://news.ycombinator.com/item?id=38145461",
    "commentBody": "New Microsoft Exchange zero-days allow RCE, data theft attacksHacker NewspastloginNew Microsoft Exchange zero-days allow RCE, data theft attacks (bleepingcomputer.com) 131 points by croes 12 hours ago| hidepastfavorite51 comments sighansen 11 hours agoWe just ditched slack in favour of teams at our company, because slack wasn&#x27;t \"secure\" enough. I feel like I see a headline like this twice a month. I can&#x27;t ever remember seeing a similar headline for slack. reply fulafel 32 minutes agoparentTeams is half way to the null position in the continuum - if it doesn&#x27;t do anything and&#x2F;or people don&#x27;t want to use it, it exposes you less to vulnerabilities. reply gpvos 17 minutes agorootparentWhat do you mean? reply fulafel 11 minutes agorootparentI mean that Teams compared to Slack is terrible and people don&#x27;t want to use it. reply chollida1 10 hours agoparentprevIs this related to Teams?I thought this was for on premise exchange installs that are directly facing the internet, which is an extremely rare setup these days.Most companies use hosted exchange or if exchange is on premise, it sits behind a firewall of some kind. reply blakes 10 hours agorootparentYeah this is completely unrelated to Teams.Exchange is actually still fairly prevalent, even among smaller companies. Although many of the smaller orgs that still have on-prem Exchange tend to have a migration plan to M365. reply merb 2 hours agorootparent> Exchange is actually still fairly prevalent, even among smaller companies. Although many of the smaller orgs that still have on-prem Exchange tend to have a migration plan to M365.and I hope they do. most of these smaller companies are sometimes sitting on really really old versions. \"it works\" is mostly the argument. updating exchange sometimes can be painful. most of the time everything works, but sometimes things just break. reply 0xDEAFBEAD 9 hours agoparentprevCan anyone recommend a solid website which aggregates CVE data in order to generate security scores for companies, platforms, open source projects, etc.? I know CVE data has a lot of problems, but I still suspect that this would be more objectively accurate than making security decisions based on gut feel. reply dcsommer 8 hours agorootparentI don&#x27;t know of one, and making this judgement based on CVE data alone will not answer your question. Factors ignored include codebase size, customer count, internal CVE filing standards&#x2F;criteria, etc.The only signal I would conclude from CVE data by itself, is that I bias towards a preference for companies that regularly publish CVEs. The ones that don&#x27;t publish CVEs regularly are hiding, ignorant, or actually secure (and the first two are more likely).You can&#x27;t look at CVE in isolation. reply pelasaco 3 hours agorootparentprevhttps:&#x2F;&#x2F;www.cvedetails.com&#x2F; ? reply liquidpele 10 hours agoparentprevHa, bullshit. It’s always because they’re giving teams away for free with office 365. reply faeriechangling 10 hours agorootparentI really have no idea how Microsoft has gotten away with this clear monopolistic abuse for so long. It&#x27;s classic tying. reply Lorin 53 minutes agorootparentIt&#x27;s kinda sad that they went through the whole monopoly suit over a century ago and here we are in Windows 11 getting OneDrive notices crammed down our throats even when there&#x27;s an active work Office 365 subscription on the damn machines. (... and now Teams ad notifications in the Office suite) reply taspeotis 9 hours agorootparentprev> free with office 365Give Microsoft money and receive Teams for free? reply trelane 8 hours agorootparent> Give Microsoft money and receive Teams for free?Yes. As opposed to giving Microsoft the same money and then also giving Slack some money too. reply amanzi 10 hours agoprevIt&#x27;s been a while since I managed Exchange on-prem solutions, but it&#x27;s quite rare to have an Exchange server listening directly on the internet. They were almost always behind security gateways which mitigated most, if not all, of these kind of remote exploit attacks. Also, it seems that most of these exploits require authentication which would hopefully be mitigated by implementing MFA. reply pelasaco 3 hours agoparentI had always exchange on-prem running behind a postfix or qmail. You block all the internet traffic from your exchange and to your exchange. Thats network security 101, regardless of the company size. reply ocdtrekkie 10 hours agoparentprevSmaller orgs tend to get hit the hardest on these sorts of things, because the licensing for additional things like Edge Transport servers is harder to swallow, and they tend to have less fancy firewalls that are a bit dumber. Not every gateway can detect what a known exploit looks like. reply gz5 10 hours agoprevLook at any major CVE and you will almost always see \"...that attackers can exploit remotely\".It is logical - 9x% of large cyber-attacks are done digitally, not with physical proximity to the target.Yet, we often focus on the vulnerability (zero-day, misconfiguration, business logic gap, etc.), rather than the exploit method (the network). Almost implicitly taking it for granted that the server (e.g. Exchange) needs to be exposed to the network in order to do its job.Given the impact, shouldn&#x27;t we double down on methods which enable servers to do their job without &#x27;listening&#x27; to the network? reply SahAssar 10 hours agoparent> Look at any major CVE and you will almost always see \"...that attackers can exploit remotely\".> It is logical - 9x% of large cyber-attacks are done digitally, not with physical proximity to the target.A remote vulnerability means without access to run local code on the machine. It does not have anything to do with having physical access to the machine. reply gz5 7 hours agorootparentgood point. i simply meant that the vulnerability can be exploited from the network (with no (initial) root access to the machine) and so almost all of them are. reply thepostman0 10 hours agoparentprevWell, let me tell you about qmail. Each part of that setup has only privilege that it needs to go it&#x27;s job.Seems a good design and very few problems given its age.Postfix seems next best by design.How many parts of least privilege is message acceptance to mailbox in exchange? I suspect one program image. reply dessimus 10 hours agoparentprev>Given the impact, shouldn&#x27;t we double down on methods which enable servers to do their job without &#x27;listening&#x27; to the network?UUCP exists, but generally, people prefer their business communications to be a bit more immediate. reply jchw 7 hours agoparentprevThe actual problem isn&#x27;t the network connection, it&#x27;s the untrusted data. There&#x27;s nothing you can do about that if your data is intentionally coming from untrusted sources, which is absolutely the case for a mail server.Of course you can reduce attack surfaces by having things be tunneled and&#x2F;or proxied, to have close-to-minimal network access to some appliance, but that won&#x27;t fully save you from this sort of problem. In my opinion, the only obvious way out is to go category-by-category and eliminate each type of flaw by-design. I think even in an ideal world you could never accomplish this 100% of the way, or at least we&#x27;re not close to a world where you could right now, but you can combine this with a layered approach to security, trying to eliminate single points of failure, adding hardening anywhere you can, and making tampering both as apparent and as unreproducible as possible (i.e.: ASLR harder and more often, randomize the order of things, don&#x27;t expose internal IDs, etc.) reply arghwhat 9 hours agoparentprevAnd how do you plan to talk to a deaf and mute server? To talk to something, you must listen.To keep the metaphor going, \"Listening\" for a server just means that a client gets to say the first word to start the conversation - it is not otherwise special. The problem is the malicious conversation that follows, not who started it.You can do things to control who talks to what, but an employee laptop can be compromised abused to perform the attack from a \"trusted\" client so that is no good.Think of it like trying to protect your loved ones from misinformation and crypto scams - you don&#x27;t want to shut them out of the world, telling them to only trust specific sources backfires if those people sell out or end up hosting scam ads, and teaching them to never be misled by anything might be impossible. reply gz5 7 hours agorootparentagree, but shouldn&#x27;t we try to further reduce the attack surface? e.g. the &#x27;server&#x27; only listens on networks which force &#x27;clients&#x27; to authorize before those clients are given access to that network (not always possible, but often is). sometimes for example this can be an auth before connect overlay network extended to the host such that it is only listening on localhost.and, agree, the clients can be compromised - loved ones can be scammed as you said - but your loved ones are a far smaller attack surface than being exposed to any attack on the internet (which too often can find its way into the dmz until day two security and L7 authorization tries to identify and terminate the rogue L3 connections). reply arghwhat 3 hours agorootparentAuth before accessing a network - perimeter-based security - is the old-fashioned corporate security model. It is generally considered a broken band-aid, as you end up with vulnerable or outright unprotected services behind a wall that many are allowed to pass.For example, if you have a vulnerable service and allow employees access to it through the perimeter, you fail - the employee might have gone rogue or have a compromised machine. reply tedunangst 4 hours agorootparentprev\"All these vulnerabilities require authentication for exploitation.\" reply cookiengineer 5 hours agoparentprevTell that to Azure and its cross-tenant problems because they allowlist specifically all Azure IP ranges in Microsoft products. Gotta make them Azure spammers be able to bypass email filters, otherwise they won&#x27;t pay premium, right?In my opinion there&#x27;s a huge conflict of interest between Microsoft and Azure as a cloud hosting service offering o365 integrations. reply Zelphyr 11 hours agoprevHow much worse does it have to get before someone holds Microsoft accountable for being criminally negligent? They have a 20+ year history of virtually non-existent concern for security. reply pjmlp 3 hours agoparentStarting with Windows XP SP2, they have certainly a much better track record than many other companies.Now the whole industry could much better, and liabilities can&#x27;t come soon enough for everyone. reply MaxBarraclough 32 minutes agorootparentI agree they&#x27;ve made some effort securing Windows. The same doesn&#x27;t seem to be true for their cloud offerings though. A story from a few months ago:Microsoft Comes Under Blistering Criticism for &#x27;Grossly Irresponsible&#x27; Securityhttps:&#x2F;&#x2F;cacm.acm.org&#x2F;news&#x2F;275239-microsoft-comes-under-blist...HN discussion: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36979532 reply j16sdiz 10 hours agoparentprevI think microsoft have did a petty good job _patching_ vulnerabilities. Compare to SAP or Oracle regularly leaving exploits for years.If you do that incentive wrong, they might go full denial reply fulafel 23 minutes agorootparentThe vulnerabilities don&#x27;t pop into existence when some vulnerability researcher finally goes public about it and&#x2F;or manages to convince MS to acknowledge+fix, but if you look at the vulnerability&#x27;s actual existence timeline it&#x27;s not that great a comfort.But yes they&#x27;ve been cajoled to improve their reactitivity. Their customers have very high tolerance of security flaws still, partly due to self-selection. reply wannacboatmovie 11 hours agoparentprevAt least as criminally negligent as Apple, Google, and the Linux Foundation! reply ocdtrekkie 10 hours agoparentprevI would honestly say the past twenty years they did a really good job, and only done a particularly poor job in the past few years as they&#x27;ve prioritized cloud and ad revenue.Edge on Windows Server 2022 will happily load a bunch of MSN ad garbage now by default, after Microsoft had IE run in a restricted mode on servers for the previous twenty years. reply dspillett 9 hours agoprev> Microsoft ... decided the flaws weren&#x27;t severe enoughThat part plays like how Red Beard described needing a crew for your ship dividing opinion: everyone else says you do, I say you don&#x27;t! reply HHC-Hunter 10 hours agoprevSo glad I will be turning my Hybrid off by the end of the year. reply merb 2 hours agoparentthat&#x27;s basically not possible if you want sso between onpremise and exchange online: https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;exchange&#x2F;decommission-on-p...there are tools so that you do not need it, but well its not supported. in recent updates there is a new supported scenario, you can remove the exchange but you need to keep the schema and powershell modules and than you do everything with powershell reply bastard_op 9 hours agoprevOnly fools and lazy government still use exchange servers. Anyone else sane has either moved to office365 or moved off microsoft (less the latter, good slaves). reply roody15 6 hours agoparentIt’s makes you wonder why these exploits keep popping up on self hosted exchange servers.Would Microsoft have any interest in pushing users to monthly cloud based subscription services….? reply LMYahooTFY 6 hours agorootparentNot sure what you&#x27;re implying here? Microsoft sabotaging it&#x27;s own product (which is used by government) in order to make users switch?Microsoft has no problem sunsetting services and giving users a deadline to switch to its replacement. reply 1letterunixname 6 hours agoparentprevI was doing massive HA Zimbra enterprise deployments in 2009. Shops were migrating from Exchange and *nix mbox accounts since 2003 because:1. It was a megabitch to install and configure correctly and securely to work with Outlook, web, mobile, PDA, and other Microsoft products, and apply patch Tuesday updates depending on HA to work correctly to prevent downtime and data loss. (Blackberry BES was the sort-of answer to some crunchy mobile problems for a while because the idea of mobile apps hadn&#x27;t fully materialized, so an E2EE solution seemed like the best path at the time.)2. It was a continual attack surface, making the ops support or managed ops support far more costly than licensing. This was during the era of massive malware worms attacking the disastrous poor security of Microsoft products.Fool me once shame on you, ...* I don&#x27;t have much empathy for doing the same thing and expecting a different result other than breaches and loss of data and service. reply gustavus 11 hours agoprev> Despite Microsoft acknowledging the reports, its security engineers decided the flaws weren&#x27;t severe enough to guarantee immediate servicing, postponing the fixes for later.Well that is an egregious display of bullhockey and an almost criminal level of negligence. RCE is basically a game over level exploit. reply steve1977 10 hours agoparent“All these vulnerabilities require authentication for exploitation, which reduces their severity CVSS rating to between 7.1 and 7.5. Furthermore, requiring authentication is a mitigation factor and possibly why Microsoft did not prioritize the fixing of the bugs.” reply kenjackson 10 hours agoparentprevNot all RCEs are created equal. As noted, post-auth has a diffeeent bar than no-auth. reply djbusby 11 hours agoparentprevIf you don&#x27;t ship on time it could affect your bonus. Gotta prioritize. reply badrabbit 7 hours agoprevWould have been nice if they were clear about what authentication is required. If it is regular exchange user authentication then this is pretty bad. For those who don&#x27;t know? The \"exchange admins\" group whose members&#x27; credentials I would expect to be able to dump as SYSTEM on an exchange server, is a quasi-domain-admin group. Taking over the whole domain after that should not be difficult for threat actors.Shouldn&#x27;t have to be stated but at any given time, any company regardless of security measures should assume there is at least one compromised host and stolen credential. reply jbverschoor 11 hours agoprevTime for virtualized workstations desktops..Qubes or containers with X11 reply vondur 10 hours agoprev [–] I don’t think there are many self hosted Exchange servers at this point. reply achillean 9 hours agoparent [–] Looks like there are still quite a few? https:&#x2F;&#x2F;www.shodan.io&#x2F;search&#x2F;report?query=product%3A%22Outlo... replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Four zero-day vulnerabilities in Microsoft Exchange have been discovered that could be exploited remotely to execute arbitrary code or disclose sensitive data.",
      "Microsoft was informed of these vulnerabilities by Trend Micro's Zero Day Initiative (ZDI), but per its judgment, deemed them not severe enough to mandate immediate action.",
      "ZDI has recommended limiting interaction with Exchange applications, implementing multi-factor authentication, and mentioned that some vulnerabilities need prior access to email credentials. Microsoft states it has taken protective measures and will tackle these issues in future updates and products."
    ],
    "commentSummary": [
      "Four zero-day vulnerabilities, including remote code execution (RCE) flaws and data validation issues, have been discovered in Microsoft Exchange, which could lead to unauthorized code execution or sensitive data exposure.",
      "Despite being informed by Trend Micro's Zero Day Initiative (ZDI), Microsoft did not consider these issues severe enough for immediate action. All identified vulnerabilities require authentication for exploitation.",
      "ZDI recommended limiting interaction with Exchange applications and implementing multi-factor authentication as a mitigation strategy. Meanwhile, Microsoft claims to have taken protective measures and planned to address these vulnerabilities in future updates and products. Some issues have already been resolved or require prior email access."
    ],
    "points": 131,
    "commentCount": 51,
    "retryCount": 0,
    "time": 1699134199
  }
]
