[
  {
    "id": 38792446,
    "title": "The Evolution of Text-based IDEs: A Comparison to Modern IDEs",
    "originLink": "https://blogsystem5.substack.com/p/the-ides-we-had-30-years-ago-and",
    "originBody": "Share this post The IDEs we had 30 years ago... and we lost blogsystem5.substack.com Copy link Facebook Email Note Other Discover more from Blog System/5 A newsletter on operating systems, build systems, programming languages, software engineering, and my own software projects. Specifics include FreeBSD, Linux, Rust, Bazel and EndBASIC. Subscribe Continue reading Sign in The IDEs we had 30 years ago... and we lost A deep dive into the text mode editors we had and how they compare to today's Julio Merino Dec 25, 2023 23 Share this post The IDEs we had 30 years ago... and we lost blogsystem5.substack.com Copy link Facebook Email Note Other 13 Share I grew up learning to program in the late 1980s / early 1990s. Back then, I did not fully comprehend what I was doing and why the tools I used were impressive given the constraints of the hardware we had. Having gained more knowledge throughout the years, it is now really fun to pick up DOSBox to re-experience those programs and compare them with our current state of affairs. This time around, I want to look at the pure text-based IDEs that we had in that era before Windows eclipsed the PC industry. I want to do this because those IDEs had little to envy from the IDEs of today—yet it feels as if we went through a dark era where we lost most of those features for years and they are only resurfacing now. If anything, stay for a nostalgic ride back in time and a little rant on “bloat”. But, more importantly, read on to gain perspective on what existed before so that you can evaluate future feature launches more critically. Give the gift of Christmas! Share this post with the rest of the world and consider subscribing to Blog System/5 too; it’s free! Subscribe First editors and TUIs In the 1990s, almost every DOS program you ran had a full-screen Text User Interface (TUI) which sported text-based windows, drop shadows, colors, and mouse support. Here is just one example: The MS-DOS Editor (aka EDIT.COM) with one of its settings dialog open. Note the menu bar, the rich dialog with list selectors and buttons, and the status bar documenting navigation shortcuts. Each program was its own island because its interface was unique to the program. However, they were all so similar in how they looked like—80x25 characters didn’t leave much room for uniqueness—and how they worked that the differences didn’t really get in the way of usability and discoverability. Once you learned that the Alt key opened the menus and that Tab moved across input fields and buttons, you could navigate almost any program with ease. But let’s talk about editors. MS-DOS shipped with a TUI text editor since version 5 (1981), which I previously covered in a recent article and is shown above. This editor “worked”, but it was really inconvenient for coding: you needed to exit the editor to compile and run your code, and when you re-ran the editor, you’d have to navigate back to where you were before. “In my house”, we used something called SideKick Plus (1984), which wasn’t really a code editor: it was more of a Personal Information Management (PIM) system with a built-in notepad. The cool thing about it, however, was that it was a Terminate and Stay Resident (TSR) program, which meant that it loaded in the background and you could bring it up at any time by pressing Ctrl+Alt. SideKick Plus' main screen after pressing Ctrl+Alt to bring it up. Note how DOS remains in the background. Think of this TSR feature as rudimentary multitasking for an OS that did not have multitasking. This was really effective because quickly switching between code editing and building is critical for an efficient inner development loop. (And by the way, this past experience explains the design of the code editing flow in EndBASIC. I did not implement the equivalent of Ctrl+Alt, but I’ve considered it many times.) By this point, however, real IDEs had already existed for a few years. Turbo Pascal 1.0 (1983) shows the beginning of an integrated experience, although it did not feature its iconic TUI yet. QuickBASIC 2.0 (1986) shows more of a “traditional” TUI (the same as EDIT.COM, because they are the same editor), and MS-DOS 5 came with QBasic, a reduced version of QuickBASIC that didn’t allow compiling to native code but that had the same look. The Borland Turbo series The crown jewel of IDEs, in my opinion, were the later Borland Turbo series, which included Turbo C++ (1990), Turbo Assembler and Turbo Pascal. These IDEs were language specific, but they had full-screen TUIs and were extremely powerful. Here, take a look at what we had. Syntax highlighting: Borland Turbo C++ showing a \"Hello World\" program to demonstrate syntax highlighting. Compiler integration and diagnostics: Borland Turbo C++ after compiling a program, showing a warning because I did not return a value from main(). Integrated project and build system management: Borland Turbo C++ showing its project management and multi-window features. In the picture, you can see two C++ source files, with one depending on the other, and the project window listing all files that need to be compiled together. A debugger with breakpoints, stack traces, and the like: Borland Turbo C++ showing a debugging session with a program that contains multiple functions, a breakpoint, and the current call stack. And even a full reference manual: Borland Turbo C++ showing its integrated help system, with the \"Hello World\" program in the background and the help for printf. Remember: all of this in the early 1990s—a little over 30 years ago at the time of this writing. I was an avid user of Turbo C++, with which I learned a lot. I remember using their conio.h libraries to implement TUIs of my own, and then their builtin graphics.h libraries to play with implementing GUIs. And note: this was without the Internet. There was no option for many to just “look up how things worked” in Stack Overflow: the IDE had to be discoverable right away (which it was) and self-contained to offer you a complete development experience. What about Linux back then? Now take a moment to compare this scene with Linux in the early 1990s. In Linux, almost every program was also text based, but those programs did not come with a full-screen TUI. It just wasn’t “the Unix way”. I remember watching the X11 configuration tool (XF86Setup) or the OpenBSD installer and feeling shocked by how simplistic those were: me, a young teenager with barely any “real” coding experience, had written better-looking programs already. In any case, this didn’t stop me from my quest to not use Windows. I continued to learn the ways of Linux and soon faced the “best” editors recommended by every book and community online: Vim and Emacs. And I could not understand why they were praised. Using these was like stepping back into the past. They were full-screen programs indeed, but they seemed pretty arcane. Vim did have syntax highlighting but it was far from being an IDE. Emacs could be configured to integrate with some code assisting features and the like, but it was far from being “fire and forget” like the Turbo family of IDEs. Just look at the default Emacs configuration today, which hasn’t changed much (if at all) since then. It does have windows, but they aren’t decorated. It didn’t have colors (and now barely has), because why? It didn’t use to have mouse support. It does have a menu bar though, but it is just a gimmick? If you press M-` as the instructions tell you, you face a truly strange interface to navigate the menu—which makes one wonder why they even bothered to waste a full line of screen real state to show a menu bar that does nothing. A fresh installation of Emacs in the console, with the standard welcome screen in the background and the \"menu\" open after pressing M-`. Now try giving this to anyone with little coding experience and getting them to create, compile, and debug a program. They will have trouble just navigating the editor, and they won’t find any of the features that would allow for project management or compiler integration. For comparison, in writing this post, I fired up Turbo C++ in DOSBox and I was able to create a “hello world” project and navigate the environment in minutes—all without prior knowledge (everything I had known has been forgotten by now). The environment is intuitive and, as an IDE, integrated all around. Contemporary TUI IDEs Anyhow. Let’s forget about the past and look at what we have today in TUI-land. I don’t want to look at GUIs because… well, Visual Basic was the pinnacle of graphics programming and we don’t have that either anymore—which is also a topic for another day. (Well, OK, you have Gambas… but who knows about it?) The closest more-modern equivalent to the Borland Turbo C++ environment is RHIDE. As you can see in the picture below, it looks incredibly similar—and you’d be forgiven if you thought this is Turbo C++. Unfortunately, it is DOS-only and seems to be mostly abandoned by now with its latest release dated 7 years ago. The RHIDE IDE showing the same \"hello world\" program as before, with no errors nor warnings after compilation. Then we have Free Pascal. This is the closest you’ll get to the old experience but with a modern codebase, running natively on Unix systems and leveraging terminals of any size. The Free Pascal IDE with a trivial \"hello world\" program and overlapping windows for a built-in ASCII table and a calculator. And lastly we have QB64. This closely resembles Microsoft QuickBasic but… don’t let it trick you: even though it looks like a TUI, it is actually a GUI application that simulates a TUI. You cannot run QB64 in a terminal. The QB64 IDE, which looks textual but is actually a graphical program. Both Free Pascal and QB64 are maintained and under relatively-active development, with their most recent releases in 2021… but they are mostly ignored because they expose arcane languages that most people have no interest in these days. “Real” contemporary console IDEs So what are we left with for modern languages today? The state of the art seems to be Neovim, Doom Emacs, or even Helix. These editors are very powerful and, thanks to various plugins, offer reasonable IDE-like experiences. That said, if you ask me, none of these provide the same kind of experience that the previous Borland products offered: their interfaces are obscure and, due to their multi-language nature, they work OK for almost everything but they aren’t great for anything. “Jack of all trades, master of none” if you will. In any case, the preferred “simple” TUI editor, based on what I observed in the deranged microsoft/terminal#16440 discussion, seems to be… GNU Nano… which OK, it works, but first: it’s no IDE, and second, to me this looks like WordStar. Yeah, I know it isn’t WordStar: if you want WordStar, the closest you’ll find is Joe, but the looks of Nano remind me of my first experiences with a word processor back in the CP/M days. Here, look: The GNU Nano editor in its default setup, with an empty file open. So even though we do have powerful console editors these days, they don’t quite offer the same usable experience we had 30 years ago. In fact, it feels like during these 30 years, we regressed in many ways, and only now are reaching feature parity with some of the features we used to have. It is natural that TUIs diminished in popularity once graphical OSes gained traction, and it is somewhat interesting that they are making a comeback just now. As for why, I think we have to thank the invention of LSP for most of the recent progress in this area. TUI editors were “on hold” for many years because building IDE features for them was a lot of effort and their small maintainer base could not afford to implement them. LSP unlocked access to existing language-specific integrations and reinfused interest in the old-and-trusty Vim and Emacs. Hopefully, the upcoming BSP will do even more to make these TUIs more IDE-like. Why TUI IDEs anyway? It is fair to ask “Who cares? Every desktop and laptop runs a graphical OS now!” And it’s a good question. In general, you probably don’t want a TUI IDE. If VSCode is your jam, its remoting abilities are superb and VSCode has a reasonably good graphical interface without being a full-blown IDE. But there are a few things that VSCode doesn’t give us. The first is that a TUI IDE is excellent for work on remote machines—even better than VSCode. You can SSH into any machine with ease and launch the IDE. Combine it with tmux and you get “full” multitasking. Yes, you could instead use a remote desktop client instead of SSH, but I’ve always found them clunky due to lag and the improper integration with the local desktop shortcuts. The second is that VSCode’s remote extensions are not open source, which isn’t a major problem… except for the fact that they don’t work on, say, FreeBSD and there is no way to fix them. So this makes it impossible for me to remote into my primary development server with VSCode. And the third is… reduced resource consumption. Bloat everywhere I can’t leave without ranting about “bloat” for a little bit. Borland Turbo C++, with all its bells and whistles (the UI, the C++ toolchain, the integrated manuals…), is less than 9 MB after installation and ran within 640kb of RAM. For comparison, Helix is 16 MB on disk, which is pretty impressive (and honestly unexpected), but Doom Emacs is about 500 MBs and consumes many MBs of RAM. Note, however, that none of these numbers account for the language toolchains or help systems, and toolchains nowadays rank in the GBs of disk space. To get “real” IDEs, we have to jump to graphical programs like IntelliJ or VSCode. VSCode, for example, is about 350 MBs on disk (surprisingly less than Doom Emacs) but it will eat your computer for lunch: it’s Electron after all. I have noticed very significant savings in laptop battery life by dropping VSCode and moving to Doom Emacs. So the question I want to part with is: have we advanced much in 30 years? Modern IDEs have some better refactoring tools, better features, and support more languages, but fundamentally… they haven’t changed much. The only major difference that we are starting to see might be AI-assisted coding, but this is a feature mostly provided by a remote service, not even by the installed code! And that’s all for today. On my side, I’ll happily continue using all of Doom Emacs, Vim, VSCode, and IntelliJ depending on the situation. Merry Christmas if this is your thing! Blog System/5 is a completely free publication. Please subscribe to support my work! Subscribe 23 Share this post The IDEs we had 30 years ago... and we lost blogsystem5.substack.com Copy link Facebook Email Note Other 13 Share",
    "commentLink": "https://news.ycombinator.com/item?id=38792446",
    "commentBody": "IDEs we had 30 years agoHacker NewspastloginIDEs we had 30 years ago (blogsystem5.substack.com) 547 points by titaniumtown 22 hours ago| hidepastfavorite456 comments novok 12 hours agoIMO the real loss in IDE tech is the speed that visual basic 6 gave you to make desktop guis.Web and mobile development (which I have done all 3) are significantly slower than what you could do with VB6. It&#x27;s really strange why we haven&#x27;t gotten back to it. reply stavros 8 hours agoparentVB6 was fantastic. The language was terrible, but the IDE was the best way to make GUIs that ever existed. The Windows 98 era was excellent for UX as well, with every element on the screen having an accelerator key, consistent menu guidelines, consistent visuals, keyboard shortcuts, etc.It was just brilliant. reply csomar 5 hours agorootparentVB6 worked because the environment was simple. GUIs are simple when you don&#x27;t need to do any styling, do not require any special modifications and most importantly you don&#x27;t need responsiveness. All of that, and you need a special environment and operating system to run the GUI. Web front-end are a completely different game in that regard. reply josephg 5 hours agorootparentYeah. Back in the day, every application was expected to use the same common set of controls - which were well written by the OS vendor, well tested, well documented and well understood by users. Every button on windows 95 looks and behaves the same way. Every application had application menus that worked the same way, in the same font, and they all responded to the same keyboard shortcuts.These days every application reinvents its own controls for everything. For example, in a web browser the tab bar and address bars are totally custom controls. Electron apps like vscode take this to the extreme - I don&#x27;t think vscode or spotify use any native controls in the entire UI.I blame the web in part. It was never designed as a system to build application UIs, and as such the provided UI primitives are primitive and rubbish. Developers got used to building our own custom elements for everything - which we build fresh for every client and style in alignment with the brand. UIs built on the web are inconsistent - so our users never get a chance to learn a common set of primitives.And for some reason, OS vendors have totally dropped the ball on this stuff. Windows has several competing \"official\" UI libraries. Every library has a different look and feel, and all are in various stages of decomposition. Microsoft&#x27;s own software teams seem as lost as everyone else when it comes to navigating the morass of options - if windows 11 and MS Teams are anything to go by. Macos isn&#x27;t quite as bad, but its still a bit of a mess. Every year I expect the people building xcode to know how to build and debug software on macos. And then xcode crashes for the 3rd time in a week. Xcode achieves the impossible of making the javascript ecosystem seem sane and attractive.I&#x27;d love a return to the halcyon days of vb6, where UIs were simple and consistent. Where there was a human interface guidelines document that UI developers were expected to read. I want users and developers alike to know how the platform works and what the rules and conventions are. F it. How hard can that really be to build? reply pvg 3 hours agorootparentI think you&#x27;re forgetting how much more dense and complex even a basic web ui is in controls. Every HN comment in the default story view has something like up to 10 clickable controls - a pair of vote buttons, username, timestamp, a bunch of nav links, a hide control, a reply button. HN, the famously minimalist, oldskool website. The web made new ui and even the back-in-the-day version of that ui is way more complicated than the back-in-the-day desktop app UI you&#x27;re thinking of. reply josephg 2 hours agorootparentHm. I don&#x27;t think it would be that hard it would be to remake HN&#x27;s UI using an old school UI component library. The up&#x2F;down arrows could use the up&#x2F;down buttons on this screenshot from macos&#x27;s old color picker:https:&#x2F;&#x2F;guidebookgallery.org&#x2F;pics&#x2F;gui&#x2F;interface&#x2F;dialogs&#x2F;colo...... But limited to only allow you up&#x2F;downvote between -1 and 1.Everything else could be done with buttons and a TextField &#x2F; Label for comments and replying.The web is a bit weird in that it taught us to build every UI as a giant scrolling document. And HN is no different. A more \"classic\" UI approach would be something like Thunderbird mail - with 2 panes: a \"comments\" tree on top and a \"message body\" down the bottom. That would be harder to read (since you&#x27;d need to click on the next message to jump to it). But it might encourage longer, more thoughtful replies.Thunderbird: https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;91536&#x2F;Or you could reimplement HN with classic controls and something like TB 114&#x27;s UI:https:&#x2F;&#x2F;www.ghacks.net&#x2F;wp-content&#x2F;uploads&#x2F;2022&#x2F;08&#x2F;account_ma...Probably still worse that what HN is now though. reply tomatocracy 1 hour agorootparentA \"traditional\" UI for HN would surely look a lot like Usenet newsgroup readers. I think Thunderbird might even still support NNTP.Usenet had a much better model for discussion groups&#x2F;forums like HN in my view, though crucially for the modern world it is missing some kind of \"comment voting\"&#x2F;user-driven moderation. I wonder if there&#x27;s an HNNNTP gateway around somewhere? reply troupo 1 hour agorootparentprev> I think you&#x27;re forgetting how much more dense and complex even a basic web ui is in controls.It really isn&#x27;t. Web is anemic in controls and layouts compared to what&#x27;s actually possible with proper controls and control over those controls. reply indigochill 3 hours agorootparentprev>and most importantly you don&#x27;t need responsivenessI&#x27;m gonna ask a dumb question out of ignorance because I know responsiveness is all the rage, but... what do we gain from it? Would it not be more straightforward to build UIs from the ground up for desktop and mobile targets than make one UI to morph to fit both? reply alpaca128 1 hour agorootparent\"Desktop\" encompasses everything from ultrawide 8k monitors to 768p laptop screens where the user may have scaled down the browser window - and that&#x27;s on brand new hardware, I know people who are still using 15+ years old laptops!This alone means you either handle any window size and size ratio or your UI will break for some users. reply Osiris 2 hours agorootparentprevThere are many different screen resolutions. Being able to adjust the application based on available space makes the application usable to more people. reply qingcharles 2 hours agorootparentprevThe GUI WinForms editor in Visual Studio 2022 is a direct descendant of the one in VB6 and has all the exact same functions that I remember from VB6. reply blackbeans 2 hours agorootparentprevI think Delphi was slightly better. The components in Delphi were more powerful at the time. But the general idea is the same.C# with WinForms is still usable today and provides a similar experience. Although the design language has fallen out of fashion. reply ryba1967 2 hours agorootparentI agree on all points. In Delphi designers and properties felt more logical and consistent.For me, WinForms always had an element of struggle not present in Delphi reply johnx123-up 1 hour agorootparentprevLet&#x27;s not forget Delphi and OptiPerl https:&#x2F;&#x2F;www.uptiv.com&#x2F;free&#x2F;optiperl&#x2F; Till date I have not seen any IDE that could reproduce its amazing box and line coding feature reply timcobb 8 hours agorootparentprevwas the language even that bad? reply novok 6 hours agorootparentIt was a running joke about how bad it was. It was a bit before my time although, but even when I saw people use it as a kid and playing with it myself, it was pretty obvious how fast it was in making things. reply svachalek 4 hours agorootparentprevIIRC, there were no user defined types. You had to write the whole app using primitives. reply ankurdhama 4 hours agorootparentYou can create classes in VB 6 from IDE where you would add a class module and define code in that module. There was no \"class\" keyword AFAIK. reply recursive 4 hours agorootparentprevThere was definitely a `Type` keyword that was similar to a struct. reply qingcharles 2 hours agoparentprevYou&#x27;re totally wrong.The IDEs I was making in VB6 in the 90s I&#x27;m making about twice as quick in Visual Studio 2022 in C# with WinForms.In fact, quicker because I&#x27;m getting GPT to write any gnarly code I need -- like I just asked it if it was possible to add a tooltip to a ListBox and it churned out exactly the code I need, something I would have spent a bunch of time figuring out on my own. reply ant6n 1 hour agorootparentIn Delphi u didn’t need any code to add a tooltip to a component - just add it as a property in the inspector. U can do it in code if you want, but it’s easy to do since u see the available properties in the inspector. reply alberth 10 hours agoparentprevVB6 was the only “low code &#x2F; no code” tool that actually delivered on its promise.Bill Gates demoing it from 32-years ago.https:&#x2F;&#x2F;youtu.be&#x2F;Fh_UDQnboRw?feature=shared reply StableAlkyne 31 minutes agorootparentExcel is arguably the most successful low-code tool.Even non programmers can come up with some crazy stuff in Excel that just works, that will just run on any machine in their company. reply askvictor 8 hours agorootparentprevDelphi was even better. In fact, having used both, I hated vb6. reply tomcam 59 minutes agorootparentprevMinor nit: he is demoing VB 1 reply csomar 5 hours agorootparentprevMicrosoft Access was way ahead, in my opinion. Especially that it came with a ready database, reports, etc.. and with VB6 you could practically do anything you want with the operating system. It&#x27;s interesting we have thrown it all for something much more inferior. reply jen20 5 hours agorootparentprevI spent a long time doing VB6 and Windows.Forms, the idea that it was meaningfully better than NeXT or Delphi is just wrong. reply pkphilip 3 hours agoparentprevYes, Delphi too. So also tools like Powerbuilder for developing database-heavy apps. There is nothing even remotely close to those tools now. reply haddr 11 hours agoparentprevOr even better one: Delphi (if you were into pascal) reply dkersten 11 hours agorootparentI’ve often heard people mention that Delphi was a superior RAD GUI experience than Visual Basic, but as someone who’s never used it, what is it that made it so great compared to VB or other GUI builder type tools (eg Qt Designer)? reply gardnr 10 hours agorootparentThe pascal language requires things to be declared in a certain order. It&#x27;s a bit awkward some of the time bit it enables the compiler to work in a single pass. This meant that running an application was extremely fast by any standards and this really made it stand out compared to other development tools out there.VB created applications that had to ship with a shared runtime library. Windows wasn&#x27;t great at versioning these libraries so developers often shipped their own VB runtime with their executable. The executable was small and the runtime was comparatively huge which had a negative impact on user perception when downloading the installers.Before moving on to Microsoft in 1996, Anders Heilsberg was the Chief Engineer at Borland that oversaw the development and release of Delphi 1.0.For years, VB felt like an application that could make deployable versions of itself. Delphi felt like a programming environment that compiled code into applications.After Heilsberg moved to MS, a lot of improvements were made in VB that utlimately made Delphi less attractive, especially during Borland&#x27;s strategic waffling known as \"The Inprise Years\": https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Borland#Inprise_Corporation_Er...If you want to get a feel for what it was like then check out the FOSS clone \"Lazarus\". reply bloblaw 10 hours agorootparent> After Heilsberg moved to MS, a lot of improvements were made in VB that utlimately made Delphi less attractiveWell, not actually. With Anders&#x27; move to Microsoft, VB6 (aka, VB \"classic\") was discontinued. Microsoft supported Visual Basic syntax on the .NET runtime, but the vast majority of VB programmers considered this to be a different language because developing for the .NET Framework (remember this is ~2001) was a huge departure from VB Classic.Many VB developers petitioned Microsoft to open-source VB6 or continue releasing improvements on it. Microsoft did not and chose to continue with their .NET + C# strategy. reply analog31 7 hours agorootparentVB6 was my last VB. It came at just the time when getting a computer onto a network to download and install a giant distribution was touch and go. The building where I worked didn&#x27;t have networking in the labs, the \"labs\" were whatever space we could find, and the \"lab computers\" were old cast-offs retired from office use. It meant that supporting VB.NET with a brand spankin new networked computer wasn&#x27;t a safe assumption.At the same time, I was playing with Linux at home, and wanted tooling that could run on either platform. I learned Python at home, and then made the switch at work.One of my last VB6 apps, thousands of lines, has been running in the plant without issue for 15 years. On one occasion I had to bump up the declared sizes of some fixed length arrays.As for GUIs, I never found anything close to VB, but also decided to just write a thin wrapper around Tkinter and let my layout be generated automatically by default. I haven&#x27;t missed laying out my GUIs, which were always a hodgepodge anyway. reply cstejerean 6 hours agorootparentprevThere&#x27;s a bit of a gap there though between 1996 and Visual Basic classic being discontinued. VB.NET came out in 2002 but VB6 was supported until 2008.VB5 in 1997 and VB6 in 1998 really closed the gap with Delphi from what I remember. reply trelane 5 hours agorootparentprev> After Heilsberg moved to MS, a lot of improvements were made in VB that utlimately made Delphi less attractive, especially during Borland&#x27;s strategic waffling known as \"The Inprise Years\": https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Borland#Inprise_Corporation_Er...This is (from Borland&#x27;s telling) not an accident. https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=29513242Hard to not waffle when your major competitor hires away your top talent. reply bloblaw 10 hours agorootparentprevHaving worked with both Delphi and Visual Basic, I&#x27;ve found that Delphi had the edge, especially for professional apps. Its use of Object Pascal meant you got compiled, efficient code right out of the box, and it didn&#x27;t need an extra runtime like VB.The VCL component library in Delphi is still unmatched in native code – very comprehensive built-in (and commercial) components, and customizable. Plus, Delphi&#x27;s database connectivity was unparalleled and can be setup in the designer where you could see data queried and returned live in your grid component!Delphi also supported advanced language capabilities (when compared to VB), like inline assembly and pointers, which were essential for low-level optimization or system hacking. The robust error handling in Delphi was another plus compared to VB&#x27;s older &#x27;On Error&#x27; style. reply pkphilip 3 hours agorootparentprevFew things that made Delphi great: for one thing you could develop all sorts of apps in Delphi - from system management apps, to database heavy apps, to editors, to games etc.1. The component architecture was just great - I have yet to see any language&#x2F;platform with a more sophisticated component structure even now.2. There were all sorts of free and commercial components that you could download and install into the IDE and have it running in your application in next to no time. ActiveX etc didn&#x27;t even come close to the level of integration and speed that the Delphi component architecture provided.3. Components could be loaded into the UI during the design time itself and you could see it functioning directly within the IDE when you place it on your form. Example: You could connect to a database, run a query, put that into a table with all sorts of sorting and navigation functions and you could see this working even without compiling the 3pplication.4. It was trivial to develop components for Delphi - even though it was so sophisticated. You could develop one in about 15-30 minutes.5. The compilation speed was just insane. It just blew everything else out of the water and so you could do fast compile+run cycles. reply r00fus 10 hours agorootparentprevI wrote a neural net ML app in the 90s using Delphi.VB was easier to start but Delphi was nearly as fast to build, code was compiled (fast!), Object Pascal supported OOP and the UI features like visual form inheritance I have yet to see implemented anywhere else. reply mhh__ 2 hours agoparentprevNever really got why Microsoft didn&#x27;t keep going with that kind of thing. Why don&#x27;t we have .net properly inside excel instead of VBA?Money? Internal elitism? reply akho 2 hours agorootparentOffice Developer Tools exist.They&#x27;re trying to steer people away from end-user programming towards using more well-defined, tested, features. I find it patronizing, but, having seen some VBA, understand the reasoning. reply tomatocracy 1 hour agorootparentprevVBA can&#x27;t really be removed due to the need to support legacy files (especially Excel). For more sophisticated stuff they expect you to use Office Developer Tools or similar now. reply eternityforest 10 hours agoparentprevI would really expect there to be some FOSS Python or JS insta-app-maker that&#x27;s as easy as VB was, but for some reason nobody wants to work on such things. reply askvictor 4 hours agorootparentHave a look at https:&#x2F;&#x2F;anvil.works -it&#x27;s a drag and drop web app creator using python for front and backend. It&#x27;s as close to Delphi for the modern age as I&#x27;ve come across. reply zubairq 2 hours agorootparentprevi am working on such a thing myself at https:&#x2F;&#x2F;github.com&#x2F;yazz&#x2F;yazz. Also there are many other people trying to build something similar reply sho_hn 5 hours agorootparentprevThere is Gambas: https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;GambasIt&#x27;s more that few people want to make and distribute small desktop apps anymore. reply anigbrowl 4 hours agorootparentThat&#x27;s 20 years old. People like native apps, it&#x27;s just that GUI programming is generally such a pain that many people avoid it. reply unleaded 8 hours agoparentprevWindows Forms is pretty much the successor to VB6 and I think is still supported. Still nothing like it on Linux though, even though people say Linux is way better than Windows for software development :&#x2F; reply jpc0 5 hours agorootparentThe subset of GUI software is much much smaller than the greater whole.I do agree though that any GUI programming on Linux is a pain compared to Linux &#x2F; Mac. However the proliferation of web based apps, even those running in electron shows how valuable a truely cross platform GUI framework that is easy to use would be.Google is trying with flutter and dart but last time I used it I felt it was still being iterated on far too quickly, maybe a bit ( maybe even now ) it will be more friendly to use. reply kragen 7 hours agoparentprevwhat aspect of the development speed do you feel is faster? i feel like i can write things like Mr.Ms.faster in html than i could in vb6. maybe i&#x27;m wrong about that?you can try it in your url bar: data:text&#x2F;html,Mr.Ms.of course that doesn&#x27;t give you database integration, but if you just want crud, you can get crud pretty quick out of django&#x27;s adminhere&#x27;s a couple of things i&#x27;ve hacked up recently in dhtml which i think wouldn&#x27;t have been easier in vb6http:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;ifs a 2-d iterated function system editorhttp:&#x2F;&#x2F;canonical.org&#x2F;~kragen&#x2F;sw&#x2F;dev3&#x2F;clock a watchlighting clock reply novok 6 hours agorootparentNow try to make a layout with that form example that you could free form put anywhere in 2d space and have it flex properly as the window size changes beyond the defaults that html gives you and make the generic B2B SAAS dashboard like Segment, RevenueCat, Mixpanel, Datadog, Sentry, etc. I bet you could make a VB6 &#x2F; Pascal equivalent much faster than you would be able to with a mobile or web app, especially if they were updated with a decent graph widget set.Also your two examples are drawing canvas examples, thats a pretty different target that delphi &#x2F; vb6 have with their GUI toolkits. reply o11c 3 hours agorootparentFYI, since 2017-ish doing layouts in HTML is much easier if you use \"display: grid\". Just be aware that the numbering is based on lines, not boxes. Also be aware that to use percentage-based heights at top level, you have to style the `html` and `body` too.Additionally, use of `@container` queries (the modern, poorly-documented alternative to `@media` queries) lets you do more advanced layout changes on element resize. This requires adding `container-type: size` style on the parent (I found this very confusing in the docs). reply kragen 5 hours agorootparentprevi&#x27;m struggling under the misconception that having things flex properly as the window sizes is the default in html and basically impossible in vb6. but i&#x27;m very open to having my misconceptions corrected. is there a public video that demonstrates what it looks like when an expert uses vb6, so i can see what things that are hard in html are easy in vb6?i have no idea what segment, revenuecat, mixpanel, datadog, sentry, etc., are reply pxmpxm 4 hours agoparentprevDidn&#x27;t Microsoft more or less just copy everything from Borland Delphi? They had drag and drop GUI stuff in the early 90s. reply sedatk 1 hour agorootparentNo, Delphi came out years after Visual Basic. There was an earlier Turbo Pascal for Windows, but it didn&#x27;t have visual design features as far as I remember. reply doubloon 8 hours agoparentprevVBA is still used all the time. As long as you have Excel or Outlook you can use it. reply choppaface 3 hours agoparentprevFlash and Actionscript did this for the web but then Apple killed Flash.Maybe in the era of LLM-assisted webdev tools (like teleporthq.io or MS Sketch2Code etc) the LLM will help sidestep API moats and help bring back such low-code IDEs. Or it could backfire and bring about API moats with non-human-accessible APIs (obfuscated binary only). reply scarface_74 3 hours agorootparentApple did not kill Flash. Flash killed Flash.Adobe claimed that they could get Flash running on the first iPhone if Apple let them.When Flash finally did come to mobile via Android in 2010, it required 1GB of RAM and a 1Ghz CPU and it still ran badly.The first iPhone had a 400Mhz CPU and 128MB of RAM. It could barely run Safari. Were you around when the only way that Safari could keep up with your scrolling was by having a checkerboard pattern while waiting on the screen to be redrawn? reply hk1337 11 hours agoparentprevWould this be similar to the .NET Webforms? That could be done in C# or VB. reply wombarly 10 hours agorootparentThe equivalent would be WinForms reply FpUser 7 hours agoparentprevI think by overall value it pales in comparison to Delphi. At leas this is my experience. reply ThinkBeat 20 hours agoprevI loved TurboPascal. I agree with everything the post argues.I would like to expand a bit on it being before the Internet was a huge thing.The manuals that came with TurboPascal were nearly excellent. It included most of what you would need to get started. When you didn&#x27;t quite understand something, you had to spend time to figure it out and how to do it well. This could be time consuming, but afterwards you gained important knowledge.Then there were other books to get, there were \"coding\" magazines, though at the moment I cant remember any TurboPascal specific ones. and if you were lucky you knew one or two other people who were into coding and you could share problems, solutions, hints and tips. and warez.There were also a lot of BBSs out there. Where you could ask questions, help others, etc.These days most people if they face a problem, Google it (maybe now ChatGPT it) find someone posted a solution, cut and paste the crappy code, crosses fingers that it works and off you go.(or pull down libraries without having any idea what in the world it actually does)At the same time things have gotten a lot more complex . In my TurboPascal days I knew most of the stack. The programming language, the operating system, assembler, a lot of how the CPU worked.These days understanding javascript, understanding the runtime &#x2F; compiler etc, before you even get close to the underlying OS, and certainly not down into assembler amd CPU reply boznz 42 minutes agoparentThe first Turbo Pascal IDE, with compiler and debugger, ran as a .com file so all the code and data had to fit in a 64KB memory segment. reply wwweston 13 hours agoparentprevI&#x27;m not sure whether the issue is stack complexity &#x2F; depth, but there is definitely something in the culture where it&#x27;s common for docs and how-tos and Q&#x2F;A to tell you what to do, the steps&#x2F;commands&#x2F;etc, but to do little to help you build any kind of relevant domain model.This isn&#x27;t exactly new, there&#x27;s always been documentation like this, but I think the proportions have changed dramatically since even the early 2000s.One of my vaguely defined theories is that as valuable as automation is, the culture of automation &#x2F; process has started to diffuse and act as an influence on how we think, in steps & commands rather than models.Possible that we&#x27;ve always been steps-results &#x2F; input-output beings, but I wonder. reply Vegenoid 11 hours agorootparentI recently created some documentation for a process at work where I explained the &#x27;why&#x27; for most of the steps and commands. Not in great detail, but just a bit of detail. I thought that it was good as a step-by-step recipe, while also giving context that could help someone in the event that something didn&#x27;t go according to plan.I was asked to remove much of the context that I provided, so as not to confuse the reader, and to make it as direct as possible. This is documentation intended for experienced, technical professionals. I think that the revised documentation is less helpful. reply spditner 10 hours agorootparentPerhaps it could be restructured to separate out the howto from the explanation to serve the reader’s intended use at the time as described here: https:&#x2F;&#x2F;diataxis.fr reply starkparker 3 hours agorootparentAs a tech writer I love the concepts of Diataxis but don&#x27;t agree with it being invoked here. Context is critical in all four of its quadrants, and its model doesn&#x27;t apply uniformly to every aspect of every application.GP did IMO the right thing by understanding the audience first in order to judge what level of context is appropriate. That should be rule 0 before anything in Diataxis gets involved. replyTrixter 13 hours agoprevThe article covers some good points, but misses a few extra things that the Turbo Pascal 7.0 IDE included that made it a true powerhouse:- A full OOP tree to determine parents&#x2F;traits of descendant objects- The ability to edit, assemble, and trace through both inline and external assembler code- A registers window that showed all registers and flags at any stage of runtime...all while able to run on the first 4.77 MHz 8088 IBM PC, which was long in the tooth by the time TP 7.0 came out. (The OOP tree required a 286 as they only added it to the protected mode IDE.) This made the TP 7.0 IDE a complete development and debugging environment for assembler as well as Pascal. reply qingcharles 2 hours agoparentI never tested it on an XT, but it ran like a dream on my 286. I wouldn&#x27;t be where I am now without Turbo C++&#x2F;Turbo Assembler. reply badsectoracula 12 hours agoparentprev> ...all while able to run on the first 4.77 MHz 8088 IBM PCEh, more like it walked rather than ran :-P. reply shagie 11 hours agoprevTwenty nine years ago, Metrowerks Code Warrior was released https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;MetrowerksI had the shirt ( https:&#x2F;&#x2F;www.rustyzipper.com&#x2F;shop.cfm?viewpartnum=282427-M558... ) and wore it for many years... wish I knew where it was (if its still in one of my boxes somewhere).The IDE was no where near as clunky as a text only DOS screen. https:&#x2F;&#x2F;www.macintoshrepository.org&#x2F;577-codewarrior-pro-6 reply destitude 9 hours agoparentThe alternative was MPW which was awful! Long Live Code Warrior! Its debugging was probably a decade ahead of its time. reply khazhoux 9 hours agoparentprevThe entire System 7 UI was really a thing of beauty. reply miki123211 20 hours agoprev> there are a few things that VSCode doesn’t give us.> The first is that a TUI IDE is excellent for work on remote machines—even better than VSCode. You can SSH into any machine with ease and launch the IDE. Combine it with tmux and you get “full” multitasking.I definitely disagree with this sentiment. At my last job, I had to do most of my work on a remote server (because it had a GPU), and I found VS Code far more pleasant to use than plain old SSH. People recommended using an editor on the server side or freaking around with Win SCP &#x2F; Cyberduck, but VS Code was just so much better in so many ways.Because of VS Code&#x27;s web roots, it can easily run its frontend on your own local computer while running its backend somewhere else. This means that most common actions, like moving the cursor or selecting text, can be done locally, without the need for a round trip to the server. The operations that do have to be executed remotely, like saving a file for example, are properly asynchronous and don&#x27;t interrupt your workflow. Everything is just far snappier, even if you&#x27;re working from home, through a VPN, on barely working WiFi and an ADSL line.As a bonus, you get fully native behavior and keyboard shortcuts that you&#x27;d expect from your platform. Things like text selection and copying just work, even some of your addons are carried over. reply ncruces 19 hours agoparent100% agree. Remote VSCode over SSH is great.The resource consumption on the client doesn&#x27;t bother me one bit. Any minimally decent laptop can put up with that load, on battery power, for hours.I would agree with “whatever it takes to make the server install leaner, more portable, etc” just without sacrificing many features.If the server side doesn&#x27;t run on FreeBSD that&#x27;s really too bad. If Microsoft makes it hard to improve by not making those bits open source, that&#x27;s very unfortunate. reply blackoil 18 hours agoparentprevVS Code remote in some cases is better than local.As the remote can be a docker container, so when I have to do some experiment, I create a container takes 5 min to setup. I than can play around, test dozen packages and configs, once I am comfortable commit last version.If I want to do some quick testing on project by different team, again a local container is setup in 2-10 mins. Once done delete the container and my local system isn&#x27;t messed up.Last is obvious use case if you want to test anything on reasonable large data or GPUs. Create a cloud server, get data run your code, tests. Push data to S3 and done. reply ParetoOptimal 13 hours agorootparentvscode&#x27;s model of server on host is good because of low latency.It can be a bit heavy in cpu usage depending on plugins though.I like emacs tramp in theory since it doesn&#x27;t impose that, but latency suffers.With correct ssh config it usually works well, but many times I&#x27;d prefer lower latency with emacs being on the host.That&#x27;s supposedly possible, but I&#x27;ve never gotten it working. reply kagevf 6 hours agorootparentWhat were you trying to do with tramp? I’ve used it for coding Common Lisp, together with a remote SLIME session - ie slime-connect - and while I have run into at least 1 limitation with paths, I have a decent enough work around for it. I think the setup was just a matter of setting some customizable variables. reply ParetoOptimal 6 hours agorootparentI typically use tramp for:- docker containers - accessing boxes on same networkSometimes its fine, but then perhaps because of regressions, I get buffers that never seem to recover and have to be cleaned up. reply kagevf 2 hours agorootparentI see. I thought I had some .emacs customized settings I could share, but they&#x27;re all slime specific. It appears tramp otherwise just works without further configuration - unless I set them in ielm and forgot about them before copying them over to .emacs, but I didn&#x27;t see anything like that in my ielm history. replypjmlp 19 hours agoparentprevI was doing exactly the same 30 years ago with X Windows and XEmacs. reply freddie_mercury 19 hours agorootparent> This means that most common actions, like moving the cursor or selecting text, can be done locally, without the need for a round trip to the serverNo, you weren&#x27;t doing this. You were making a round trip to the server when you moved the cursor or selected text. reply gumby 19 hours agorootparent> You were making a round trip to the server when you moved the cursor or selected text.Of course this being X, your machine ran the server and the remotes were the clients… reply pjmlp 18 hours agorootparentprevNo, as gummy well putted it, all of that was done on the client computer. reply pierrebai 17 hours agorootparentThe fact that it is easy to confuse the server with the client in X, it does not change the fact that the XServer and XEmacs are running on different computers, so each interaction is a round-trip. reply pjmlp 17 hours agorootparentXServer and XEmacs are both running on the client machine.Also it is impossible by laws of physics by using distributed computing, not having each keypress and its display on a rendering surface, being a two way street. reply LegionMammal978 14 hours agorootparentBy the \"client machine\" where XServer and XEmacs are both running, do you mean the machine where the human user is entering keypresses and viewing windows? Or do you mean the machine where the files are ultimately getting edited? Clearly, there has to be something running on each of the machines, since otherwise one side would have nothing to connect to on the other side. What is running on the machine opposite the \"client machine\"?The idea with VS Code is that neither the keypresses nor the displayed windows are being sent over the network, but are kept within the same machine where the user is entering or viewing them. Only the file data (or debugger status, etc.), which are cached and far less frequently updated, are sent over the network. Are you saying that XEmacs can also function remotely in this way, with neither keypresses nor displayed windows sent over the network? reply oivey 16 hours agorootparentprevThere’s some confusion in some of the replies here. The point this person is trying to make is that you get the remote machine’s key bindings, not the local’s. That’s an artifact of the experience being a remote desktop. reply miki123211 19 hours agorootparentprevYou still had to do a roundtrip for every single click though, right? I don&#x27;t think X Windows has any kind of client side scripting system.That&#x27;s better than SSH for sure, but still not as good as the web model. reply pjmlp 19 hours agorootparentX Windows server runs on the client machine.The client is the server application. reply dpassens 18 hours agorootparentThe point still stands, though. You need a roundtrip, even if it starts from the X server rather than the X client. reply pjmlp 18 hours agorootparentYou always need some level of round trip between keyboard and UNIX procecess.The server application isn&#x27;t guessing keys, regardless of the connection format.What matters is how the communication is being compressed and local optimizations. reply johannes1234321 18 hours agorootparentThe difference here is that VisualStudio code fully runs the GUI on the local machine and only file IO or external programs (compiler, the actual program being devleoped, ...) run remotely. Thus the UI reacts promptly to all interactions and many of the remote interactions happen asynchronously, thus even saving a file will not block further actions.Whereas any non trivial X application does work in the client, thus even basic interactions have a notable delay, depending on connection. reply pjmlp 17 hours agorootparentIt shows you never used slow telnet sessions over modems.There is no difference between doing this over text or graphics, in terms of the whole setup regarding network communications for data input and output. reply johannes1234321 15 hours agorootparentAgain: The key difference is that in VS.Code the UI runs local, thus all UI interactions are \"immediate\" and there is no difference between local and remote operation. Yes, IO has latency, but where possible that is hidden by the UI (possible: saving a file happens without blocking UI; not possible: loading a file requires the file to be loaded .. but even then the UI can already prepare the window layout)Thisnis very different form a system, where each keystroke and each menu action has to be transfered first, before the remote side can identify the needed UI update and send that back reply pjmlp 15 hours agorootparentAgain: learn UNIX distributed computing architecture.Not going to waste more my time explaining this. reply johannes1234321 15 hours agorootparentTelnet is a way more low level protocol. Please learn what you are talking about and have a good day. reply keyle 11 hours agorootparentPjmlp is right. You need to read on how X was designed for remote work. reply mr_mitm 8 hours agorootparentJohannes&#x27;s point was, I believe, that using VSCode remotely works fundamentally different than using apps remotely via X. I don&#x27;t think he is confused about how X was designed. reply throw10920 6 hours agorootparentprevDesigned badly, in this case.Arguments to authority aren&#x27;t appealing. Arguments from logic are. The fact is that X and VSCode&#x27;s remote protocols are designed very differently, and in high-latency and high-jitter connections (and many low-bandwidth ones), VSCode&#x27;s protocol is simply better. replyRusky 15 hours agorootparentprevVS Code isn&#x27;t doing this with text or graphics, though. In X terms, it&#x27;s running both the client and server on your local machine. It simply doesn&#x27;t put the network boundary in the same place as an X application.VS Code&#x27;s \"backend\" that runs on the remote machine is rather only in charge of more \"asynchronous\" operations that aren&#x27;t part of the UI&#x27;s critical path, like saving files or building the project. It doesn&#x27;t speak anything as granular as the X protocol. reply pjmlp 15 hours agorootparentClassic UNIX program architecture in distributed systems, apparently some knowledge lacking here.Long are the days using pizza boxes for development it seems. reply Rusky 15 hours agorootparentThe comparison you made wasn&#x27;t to arbitrary distributed UNIX programs, though. It was to X applications, which don&#x27;t work this way. replyfalcor84 17 hours agorootparentprevI&#x27;m sorry to say I&#x27;m as confused as I was before I read these sentences.Let me try to rephrase: with X Windows, the UI server runs on your local machine, while the UI client runs on the remote machine (e.g. your application&#x27;s server). Is that correct? reply pjmlp 16 hours agorootparentNo, the whole UI runs on the client machine, which in X Windows nomenclature is the server.The client application (on X Windows nomenclature), runs on the remote server and is headless.Instead of sending streams of bytes to render text, it sends streams of encoded X Windows commands to draw the UI.Everything else regarding compilers, subprocesses and what have you keeps running on the server, regardless how the connection is made.Think big X Windows terminals or green&#x2F;ambar phosphor terminals accessing the single UNIX server, used by the complete university department. reply nox100 8 hours agorootparentI&#x27;m surprised pjmip is missing the point here. Or maybe I am> Instead of sending streams of bytes to render text, it sends streams of encoded X Windows commands to draw the UI.(Simplified) VSCode is sending no bytes to a server when you&#x27;re editing a file. The entire file exists on the client, you can edit all you want and everything stays on the client. Only when you pick \"save\" is a data sent to the server.My understanding with X Windows is as you mentioned above, you press a key, that key it sent app on another machine, that other machine sends back rendering commands. Correct? Vs VSCode, you press a key, nothing is sent remotelyNote: There&#x27;s more to VSCode, while it doesn&#x27;t have to send keystrokes and it is effectively editing the file locally (so fast). It does send changes asynchronously to the remote machine to run things like the Language Server Protocol stuff and asychronously sending the results back. But, you don&#x27;t have to wait for that info to continue to edit. reply falcor84 15 hours agorootparentprevThanks for elaborating, it helped a bit and now this section of the Wikipedia article fully clicked for me:\"\"\"The X server is typically the provider of graphics resources and keyboard&#x2F;mouse events to X clients, meaning that the X server is usually running on the computer in front of a human user, while the X client applications run anywhere on the network and communicate with the user&#x27;s computer to request the rendering of graphics content and receive events from input devices including keyboards and mice.\"\"\" replyOsrsNeedsf2P 19 hours agorootparentprevEven in 2023 you can get vim to be more powerful than VS Code. But it&#x27;s that much more difficult.As the author states, IDEs haven&#x27;t necessarily gotten a lot better, but imo advanced features have become a lot more accessible. reply TheRoque 18 hours agorootparentWhat does it mean \"more powerful\" ? Do you mean in terms of productivity ? It probably depends on your task anyways. In 2023, it&#x27;s still a pain to have decent debugging in Vim. For pure text editing, I can believe you, but for software development, I highly doubt it. reply falcor84 17 hours agorootparentprev> Even in 2023 you can get vim to be more powerful than VS Code. But it&#x27;s that much more difficult.I absolutely agree, assuming you&#x27;re using \"powerful\" in the same sense as saying that a Turing machine is more powerful than a MacBook. reply stevebmark 4 hours agorootparentprevVim is a text editor, not a code editor. It has always been fundamentally designed this way. reply lelandbatey 14 hours agorootparentprevIt&#x27;s similar in outcome (doing \"stuff\" remotely), but not the same architecturally.VScode runs on the computer in front of you, and it _does not_ send key-presses or other user input over the network at all. Instead VScode sends file-changes over the network to the remote, and executes commands on the remote (e.g. SSH&#x27;s in and runs &#x27;gcc ...&#x27;).With X, XEmacs is not running on the computer in front of you; it&#x27;s running on a computer far away. Every key-press and mouse click must be transmitted from the computer in front of you over the network, received by the remote computer, then a response sent from the remote to the computer you&#x27;re interacting with, where it&#x27;ll be displayed. reply eurekin 17 hours agoparentprevI use that all the time in my hobby tinkering pseudo cloud server on a odroid SBC. It feels like I&#x27;m literally on that specific computer directly. Plugins like docker work as well reply qingcharles 2 hours agoparentprevI wish I could find a decent way to make VSCode work properly on Android. reply Tmpod 18 hours agoparentprevI&#x27;ve been wanting to try something like that with neovim&#x27;s remote features, but haven&#x27;t found the time. Has someone attempted this? If so, how successful was it?I&#x27;ve always been a big user of powerful laptops because I do like the mobility (allows me to work&#x2F;browse stuff outside my home office) and I dread the pains of properly synching my files across a laptop and desktop (not only documents&#x2F;projects, but also configs and whatnot). reply caskstrength 16 hours agoparentprev> I definitely disagree with this sentiment. At my last job, I had to do most of my work on a remote server (because it had a GPU), and I found VS Code far more pleasant to use than plain old SSH. People recommended using an editor on the server side or freaking around with Win SCP &#x2F; Cyberduck, but VS Code was just so much better in so many ways.I&#x27;m not familiar with VS Code setup for remote editing. Does it run LSP on remote and give you full hints, errors, etc. locally?> As a bonus, you get fully native behavior and keyboard shortcuts that you&#x27;d expect from your platform. Things like text selection and copying just work, even some of your addons are carried over.Selecting text with Shift+ArrowKey or something like that is not a \"bonus\", it is just a bad text editing experience. Keyboard shortcuts are the way they are on Vim&#x2F;Emacs not because their developers can&#x27;t figure out how to bind Ctrl+C&#x2F;Ctrl+V... reply saghm 13 hours agorootparent> I&#x27;m not familiar with VS Code setup for remote editing. Does it run LSP on remote and give you full hints, errors, etc. locally?Not sure about other languages, but when I use VS Code to develop Rust remotely, it prompts me to install the rust-analyzer extension (which is my preferred LSP server for Rust) to a remote whenever I&#x27;m opening a project for the first time. VS Code is able to distinguish between extensions that need to be installed on the same machine as the code (like the LSP server) and extensions that are just making changes to the local UI.> Selecting text with Shift+ArrowKey or something like that is not a \"bonus\", it is just a bad text editing experience. Keyboard shortcuts are the way they are on Vim&#x2F;Emacs not because their developers can&#x27;t figure out how to bind Ctrl+C&#x2F;Ctrl+V...I use an extension for vim keybindings in VS Code. When connecting to a remote host, the vim plugin still works fine, itand doesn&#x27;t prompt me to install anything on the remote side, since the changes are synced to the remote host at a much higher level than that (i.e. locally mapping \"dd\" to \"delete this line from this file\" and sending that to the remote rather than sending the remote the keystrokes \"dd\" and having the remote determine how to interpret it). reply aidos 15 hours agorootparentprevMy understanding follows (I don’t use it but I’ve noticed the processes running on other people’s machines). Corrections welcome.It’s split into a client (web frontend) and server that’s doing all the work. The server can be run anywhere but it’s effectively a bunch of stuff installed in a docker container. When you start an instance for a project, it creates a container for that instance with all the code folders etc bound in. LSPs are running in that container too.It’s possible to use your own image as a base (you might have custom deps that make installing the requirements for an LSP hard, for example).The trick they use here is that there’s some base container&#x2F;volume that has most of the server stuff downloaded and rest to go. Whether you start a normal instance or from a custom image they do it the same way by just mounting this shared volume and installing what they need to bootstrap the server.It also appears they create a frontend window per server process too. So the master client process starts, you select a project folder, they create a new server container and a new client window connected to it. The frontend client is local while each server can be anywhere (obviously you could run the client with X if you wanted to further muddy that). reply hlfshell 19 hours agoparentprevThis ability also proves useful when trying to do complex package management in an isolated manner with ROS; I ultimately used a remote vs code shell running off the robots OS to just have my ide recognize the many local and built dependencies that requires a full ROS setup. reply medo-bear 20 hours agoparentprevUsing the editor on the server from a remote connection is silly. However VSCode is not unique. On my local Emacs I use ssh via tramp [0] to browse files on the server and then edit localy. HOWEVER I also have physical access to my server. Emacs then gives me the added benefit of being able to run in terminal on the physical server without any window manager installed.[0] https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;tramp&#x2F; reply mbreese 19 hours agorootparent> Using the editor on the server from a remote connection is silly.In my experience, this is the best way to do remote work. The alternative is to either not work with remote resources (data, hardware, etc), work locally and sync changes to remote, or work locally with a remote mounted file system (unless you need remote hardware).For the parent, they needed GPU access, so they had to run remotely for hardware access.I normally need particular data that is too big to move locally, so I like to work remotely for that reason. I could remotely mount drives via an SSH Fuse mount, however the IO speed for this method can quickly become a problem. For me, it is a much better experience to either use a remote web editor (rstudio server), VSCode remotely (which is a remote web editor over ssh), or vim. With web based remote editors, you still draw the screen locally, but get updates from remote. And more importantly, compiling and building takes place remotely.I find this method much better than either pure remote access (VNC&#x2F;RDC&#x2F;X11) or local-only editing with syncing code and&#x2F;or data. But it very much depends on your work. When I don’t need to work with remote data, a locally managed Docker devcontainer provides a much better development experience. reply globular-toast 19 hours agorootparentIn my experience, it&#x27;s the worst way to do remote work. There are so many better solutions.If TRAMP is too slow, just mount the remote filesystem locally using FUSE somehow. Use SSH to run processes on the remote system like compile and run the program. No need to run the text editor on the remote system.You can also do it the other way around: have your remote system load your local data. I developed a small bare metal OS this way. Ran the cross compiler locally, had the output go to some NFS mount which was also available via TFTP. Booted the target system with PXE.Running a text editor on a remote system is good for one off things and maybe as a last resort, but that&#x27;s it. reply mbreese 16 hours agorootparent> just mount the remote filesystem locally using FUSE somehowThis is the step that never works consistently for me. There is always some amount of random extra latency that makes the this workflow painful. I work with some extremely large data files, so random access to these is the primary issue.In general, the idea is that it is often better to do compute where the data already is. My experience is that you should also do the programming closer to where the data is as well. This tends to make an iterative development loop tighter.But this is highly dependent upon what you’re doing. reply globular-toast 13 hours agorootparentThat&#x27;s a different thing, though. You don&#x27;t edit the data in a text editor interactively, do you? I would do any interactive editing with a local editor and then fire off remote processes to operate on the data.It&#x27;s funny because my reasons against using a text editor remotely are exactly the same: to make the development loop tighter. I am very upset by latency and always try to remove it where possible. I think this is the kind of thing where we&#x27;d need to look over each other&#x27;s shoulders to understand our respective workflows. reply mbreese 4 hours agorootparent> You don&#x27;t edit the data in a text editor interactively, do you?That’s exactly what I’m doing. The code is written on the remote server. VSCode’s remote setup is actually very good at this. Mainly because, it is really a web editor that is hosted remotely and you use a local browser (Electron) to interact with it. The processing loop then happens all remotely.But really, I’m talking more about data analysis, exploration, or visualization work. This is when I need to have good (random) access to 100’s of GB of data (genomics data, not ML). For these programs, having the full dataset present during development is very important.If I’m working on more traditional programming projects, I can work locally and then sync, but recently I’ve been using more docker based devcontainers. These are great for setting up projects to run wherever, and even in this case, the Docker containers could be hosted remotely or locally (or more accurately in a VM). reply globular-toast 1 hour agorootparentYeah I used to work with genomics data and never did I think I needed to have part of my text editor running on the high performance cluster.I think people are just talking about different things and confusing each other. The original comment I replied to was arguing against SSHing in (or vnc or something) and running the text editor there. VSCode isn&#x27;t doing that. It is running the interactive part locally. It&#x27;s hard for me to understand why it needs a server part, though. If you want to edit something locally it has to send it across the network. There&#x27;s no way around it. It seems like six of one and half a dozen of the other. reply fooster 5 hours agorootparentprevVscode remote has almost no visible latency period. reply globular-toast 1 hour agorootparentBecause it&#x27;s running the editor locally... reply fooster 5 hours agorootparentprevHave you actually used vscode remote? If not you should. If you have all I can is that I’ve personally used all the solutions you are mentioning and for me vscode remote is the top bar none even for very large repos. reply xuhu 18 hours agorootparentprevIs there an efficient way to do \"Find in files\" from a vim or vscode instance running locally and editing+compiling remote files via ssh ? Preferably something that runs instantly for 1 GiB repos ? reply blackoil 18 hours agorootparentHaven&#x27;t tried on exceptionally large repos, but in VSCode since actual find logic is on server, it should work simply fine. If I remember correct, even on vscode.dev (in browser with no server), your browser downloads the search index and then search and navigation are fast. Though it may struggle with very large repos. reply mbreese 16 hours agorootparentprevI’m not sure what you mean by vscode running locally with editing via ssh. I’m fairly certain that when you do a remote connection in vscode, it literally runs the vscode program remotely and you are just connecting to a tunneled web interface. The only thing running locally is the Electron browser shell. So, remote “find in files” is running remotely, so it should be as efficient as it would be from that side.That said, you can also open a terminal in vscode and use grep. If you’re running remotely, the terminal is also remote. That’s what I normally do. reply ReleaseCandidat 13 hours agorootparentprevVS Code uses ripgrep under the hood (locally and remote). reply Tistel 18 hours agorootparentprevI worked at a place that had a half built distributed system that we still needed to use (many bidders buying Ad space from a API based market). one great thing with tramp is that you can tramp into multiple systems simultaneously. So you are editing say files from 5 different systems (tweaking the yaml or whatever) at the same time. You could then start eshells on each of those systems at the same time. It made it really easy to adjust the settings and restart multiple apps really quickly (big screen, 5 files on top, 5 shells on bottom). I always get a kick out of people saying \"you use that! you need to switch to editor X it has feature Y!\" And me thinking yeah, that feature has been in emacs since before you were born. it is getting a bit crufty in its age though. Its main attraction is for people who like LISP. There a project called lem (IIRC) that is rewriting it in much higher performance Common Lisp. reply vindarel 11 hours agorootparentAbsolutely: https:&#x2F;&#x2F;lem-project.github.io&#x2F; Works for Common Lisp out of the box (it&#x27;s a Lisp machine) and for other languages (LSP client). reply benterix 20 hours agorootparentprev> Using the editor on the server from a remote connection is silly.Why? reply gtirloni 19 hours agorootparentConstant screen redrawing and input lag. reply tomjen3 19 hours agorootparentWhich is not only not the case with VS Code, but that is explicitly explained in at the top of the thread. reply Zambyte 19 hours agorootparent> Which is not only not the case with VS Code [...]Which is also immediately mentioned after the claimed that using a remote editor is silly. reply actionfromafar 20 hours agorootparentprevTramp is quite slow though, IMHO, and last I used it Emacs very much expects file access to by synchr. reply 3836293648 15 hours agorootparentTramp has like four backends, try sshfs if ssh is too slow reply bayindirh 21 hours agoprevPeople still forget Eclipse when it comes to a full-blown yet not bloated IDE. That thing consumes less than a bare bones VSCode install while running 5x the tools. It can handle everything from code to git to CI&#x2F;CD and remote development since 2013.I&#x27;m using it for 20 years and I think it&#x27;s the unsung hero of the IDE world.This article doesn&#x27;t mention it either as a modern GUI IDE. reply hnlmorg 21 hours agoparentThere’s a reason people don’t talk much about Eclipse these days and it’s because it was a pain to maintain back when it really should have shone.I really wanted to like Eclipse but gave up on it a decade ago because it required constant management from release to release. I remember one job I had where I didn’t need an IDE all that often and I would spend nearly as much time configuring Eclipse again upon the next time I came to use it, as I was spending time writing code in it.I’m sure it’s improved leaps and bounds in that time - 10 years is a heck of a long time in any industry, let alone IT. But I do know I wasn’t the only one who got frustrated with it. So myself and others switched to other solutions and never looked back. reply bayindirh 21 hours agorootparentI was there, but it has changed. \"Four updates a year\" was a great decision to make, to be honest.It just updates now, and I export my installation XML and send to people when they want the exact same IDE I use. reply badsectoracula 20 hours agoparentprevI used to like Eclipse but honestly it was and still is a hog. At the time i used it in the late 2000s it was basically the best IDE for C++, having features that Visual C++ users either did not have or needed to pay extra for plugin to get. I used it at work then when everyone else used Visual C++.However at home i had a computer i bought late 2003 (which was a high end PC at the time but still) and the program was so heavy i remember despite running it under a lightweight environment (just X with Window Maker) i had to choose between Firefox and Eclipse because otherwise things would crawl due to the excessive memory use both programs made :-P.Eventually i switched to other IDEs and forgot about Eclipse. But i did try it recently again and while obviously doesn&#x27;t feel as heavyweight as it did back then (i&#x27;m running it on a 8 core machine with 32GB of RAM so it better be), it still feels sluggish and startup time is still quite slow.Also TBH i never liked the idea behind workspaces.These days i don&#x27;t write C++ much but when i do i use either QtCreator or Kate with the Clangd LSP (which i also use for C). reply bayindirh 20 hours agorootparentI think 9 seconds startup time with 1GB of memory use is pretty acceptable for an IDE at the size of Eclipse (just timed).Considering I&#x27;m not closing it down for whole day when I&#x27;m using it, waiting for ~10 seconds in the morning is not that bad.In 2003, Eclipse was at its infancy and was an absolute hog, I agree on that front.Actually you are not expected to have \"n\" workspaces. Maybe a couple (personal and office) at most. Project relationships and grouping is handled via \"referenced projects\".Kate is an awesome code-aware text editor. I generally write small Go programs with that, but if something gonna be a proper project, it&#x27;s always developed on Eclipse. reply LanceH 17 hours agorootparentThere were a couple things going on in 2003.First, it was quite common for a company to buy a developer the exact same corporate standard computer as everyone else. So lots of computers had limited ram to run things like J2EE, Lotus Notes, and Eclipse at the same time. It was painful.The startup was always slow because it preloaded everything. This was a deliberate choice to not load things and interrupt the developer. Just don&#x27;t close it all day and the experience was very good.A plus compared to the standard of the day was that it ran native widgets. So doing something as simple as opening a file explorer to browse through your project was considerably faster than comparable IDE&#x27;s at the time.Personally, I loved the customization which was dialed all the way up. I could have multiple windows with different arrangements of panels within them, all saved. I haven&#x27;t run across anything as configurable since then.It also had the big benefit of their plugin system which shined when working with multiple languages in the same project.It always felt to me like it became trendy to crap on Eclipse because of the slow startup time and it never could shake that. reply badsectoracula 20 hours agorootparentprev> Considering I&#x27;m not closing it down for whole day when I&#x27;m using it, waiting for ~10 seconds in the morning is not that bad.I tend to close and run the IDEs (and most programs) multiple times per day - a clean desktop kinda lets me clean&#x2F;reset my thoughts - so long startup times are annoying. Of course i wouldn&#x27;t avoid a program if it was responsive, fast and did what i wanted after it started up.> Actually you are not expected to have \"n\" workspaces. Maybe a couple (personal and office) at most. Project relationships and grouping is handled via \"referenced projects\".Yeah i also had a single workspace but i worked in a bunch of other things, including some Java stuff in NetBeans and i want to have everything in one place. I do use and prefer IDEs but every other IDE could just store projects wherever i wanted. reply saulpw 15 hours agorootparentprev> I think 9 seconds startup time with 1GB of memory use is pretty acceptable.9 seconds of startup time on a modern GHz computer is completely unnecessary and unacceptable IMO. There may be 9 seconds of work it wants to do at startup, but there&#x27;s no way it needs to do it in a single thread before letting you start to interact with it. This is an optimization effort, nothing more. Give me a month with their codebase and I could get that down to under a second. (So could most decent software engineers.) It would just need to be something they actually put effort into. reply bayindirh 13 hours agorootparentIn that 9 seconds, a Java VM starts up, starts up an OSGI compliant platform and loads all the plugins you have installed and enabled in that particular Eclipse installation. When the window appears 9 seconds later, the VM is warmed up, all your plugins + IDEs (yes multiple) are ready to use. No additional memory allocations are done WRT your development plugins. Also remember that these plugins are not in isolation. There’s a dependency graph among them.In the following seconds, updates are checked and indexes of your open projects are verified and re-run if necessary which takes againIn any case, it&#x27;s a younger product than the offerings in the article.Yeah, but my gripe was about the closing of the article, which mentioned VSCode. I think the author just doesn&#x27;t know about it.Eclipse is my DeFacto C++&#x2F;Python IDE and I&#x27;d love to develop a decent Go plugin for it, too. Maybe someday. reply hnlmorg 21 hours agorootparentprevNot just C++. I used to use it for Java development and had the same experiences as the GP too.I’m sure it’s really good these days. But I’ve moved on now and my current workflow works for me, so I don’t see the point in changing it until I run into issues again. reply bayindirh 21 hours agorootparentJava never got that slow, but it used to tax the system a lot in the earlier days, yes.I developed Java with Eclipse, but the project I did was not that big when Eclipse was not its prime, and it was in its prime when I was experienced enough to be able to \"floor it\" in terms of features and project complexity.Now it&#x27;s just a blip on the memory usage graph when working with big projects, and way way more efficient than the Electron apps which supposed to do 20% of what Eclipse can do. reply olejorgenb 18 hours agoparentprevEclips also had (have?) The very interesting mylyn plug-in which narrows down the code to the context your working within. Think collapsing everything in eg the project tree and also functions within files.This context is built up based on what part of the code you work on. reply jbverschoor 21 hours agoparentprevI love eclipse, but it&#x27;s unbearable on macos reply bayindirh 21 hours agorootparentHow come? I use it regularly. Genuinely asking. reply jbverschoor 17 hours agorootparentI don’t know. It’s even worse with IntelliJ. IntelliJ crashes regularly. It unbearable.Running m1 sonoma reply perrylaj 13 hours agorootparentInteresting - I run Intellij Ultimate on Macbooks (both Intel and m2) and never have a crash. Infrequently run into bugs when upgrading the ide or 3rd party plugins; that requires some sort of cache invalidation or project reimport (couple times a year), but it&#x27;s pretty smooth sailing for something I use across many different projects and languages. Java, kotlin, TS, python, groovy, shell scripting, json&#x2F;xml&#x2F;yaml&#x2F;html&#x2F;tsx are all generally touched 40+ hours on a weekly basis - it just works.I do agree intellij is memory hungry with multiple projects open and a variety of languages involved, but RAM is cheap enough (and VMs&#x2F;Docker&#x2F;K8s hungry enough) that I just don&#x27;t buy a machine with less than 32GB anyway, so I give intellij up to 6 GB and never give it another thought.I don&#x27;t do much android development, but do find Android Studio to feel clunky and slow at times, guessing because of the heavy integration with Android dependencies and emulation, but not really something I know enough about to comment with any sense of authority. reply hugi 20 hours agorootparentprevHow so? Use it daily, with hundreds of open projects and it just flies. reply fredgrott 20 hours agoparentprevI think you are mistaken, Eclipse takes up 3 times the ram VSCode does...I can use VSCode using only 6gig ram even with big projects with native code such as kotlin, java, c, swift, etc..Eclipse will not run on 6 gig ram neither will jetbrains or android studio. reply bayindirh 20 hours agorootparentMy system monitor says it&#x27;s using 1.3GBs after warming up, and even forcefully reindexing a big C++ project.I don&#x27;t think VSCode will use 400MBs with that amount of code, plus electron, plus all the LSP stuff you run beneath it.In that state Eclipse will fit into a 6GB system just fine. I&#x27;d love to try that at a VM right now, but I don&#x27;t have the time, unfortunately :) reply hinkley 12 hours agorootparentprevIf memory serves, fully loaded Eclipse would take about 20-25% more memory than IntelliJ, which was itself rightfully called greedy.At the time most of us felt it was worth the cost of entry for all of the tools you got, which eclipse had a subset of. reply layer8 18 hours agoparentprevI’ll raise you NetBeans to that. reply stjohnswarts 9 hours agoparentprevI should fire it up, I haven&#x27;t tried it in a while. It was the only thing I could use that seem to accurately (more or less) index large projects that you, uh, had some issues compiling and just want to navigate around and look through the code. now I mostly just use rg for big projects, inside of neovim reply jen20 20 hours agoparentprevA blast from the past there. I used Eclipse for Java in its infancy while I was at university and thought it was decent enough compared to whatever version on emacs would have been on whatever version of Solaris was on my CS department servers.A couple of years later I started an internship at a bank and spent ~3 hours trying to get a project building before someone introduced me to IntelliJ, which I still use every day almost 20 years later! reply jmyeet 21 hours agoparentprevVSCode is really a text editor-in-IDE-clothing. Also, it&#x27;s an Electron app and those are notoriously resource heavy.~20 years ago I became an early IntelliJ user. From version 3 maybe? It&#x27;s hard to recall. I&#x27;ve never looked back.But I did try Eclipse and... I never got the appeal. For one, the whole \"perspectives\" thing never gelled with me. I don&#x27;t want my UI completely changing because now I&#x27;m debugging. This is really part of a larger discussion about modal editors (eg vim vs emacs). A lot of people, myself included, do not like modal editors.But the big issue for Eclipse always was plugins. The term \"plugin hell\" has been associated with Eclipse for as long as I can recall. Even back in the Subversion days I seem to recall there were 2 major plugins (Subclipse? and another?) that did this and neither was \"complete\" or fully working.To me, IntelliJ was just substantially better from day one and I never had to mess around with plugins. I don&#x27;t like debugging and maintaining my editor, which is a big reason why I never got big into vim or eclipse. I feel like some people enjoy this tinkering and completely underestimate how much time they spend on this. reply bayindirh 20 hours agorootparentFor me, perspectives are perfect, because it provides me a perfect set of tools for everything I do at that moment. It&#x27;s probably a personal choice, so I agree and respect your PoV.The plugin conflicts were way more common in the olden days, that&#x27;s true, however, I used subclipse during my Master&#x27;s and it was not incomplete as my memory serves. It allowed me to do the all wizardry Subversion and a managed Redmine installation Assembla had to offer back in the day.It&#x27;s much better today, and you can work without changing perspectives if you prefer, so you might give it another shot. No pressure though. :)Trivia: VSCode Java LSP is an headless Eclipse instance. reply marcosdumay 18 hours agorootparentAt a minimum, perspectives play very nicely with the plugins system.Eclipse was created over that extremely interesting idea that you can write a plugin to do some completely random task, and have all of it reconfigured on the perfect way for that task.But you can&#x27;t have a rich ecosystem of plugins without organizing them in some way, and nobody ever created a Debian-like system for them as it&#x27;s a lot of thankless hard work. reply verelo 20 hours agorootparentprevI’ve been using vscode for a few years now and while i find its search amazing, it doesn’t do much more for me. Its syntax highlighting is good, but the auto complete recommendations have been driving me insane recently.Writing rails api with a nextjs ui, anyone got any suggestions on alternative paths i should take? reply victorbojica 20 hours agorootparentJetBrains solutions. It think it&#x27;s called RubyMine. reply jmyeet 19 hours agorootparentprevThis may not apply to you but I find it so weird how many programmers won&#x27;t invest even a modest amount into software they&#x27;ll use 8 hours a day every day. Particularly when we&#x27;ll so easily spend money to upgrade RAM or buy a new PC.RubyMine on a cancel anytime personal license is $22.90&#x2F;month (or $229 for a year). That&#x27;s nothing. I&#x27;d say just try it. If you don&#x27;t like it, you might only be out $23.I&#x27;m not a Ruby person so can&#x27;t comment on that really. For Java (and C++) it&#x27;s a lifesaver. Things like moving a file to a different directory and it&#x27;ll update all your packages and imports. Same with just renaming a class or even a method.The deep syntactic understanding Jetbrains IDE have of the code base is one of the big reasons I use them. reply thiht 17 hours agoparentprev> People still forget Eclipsethank god reply mihaic 21 hours agoprevFor me, the closest modern successors to the Borland suite are Visual Studio (not VSCode) and the Jetbrains IDEs. The feel like they&#x27;re the only one with a holistic, batteries included, design that actually focuses on debuggability.I actually feel that the terminal-based focus of modern FAANG-style development actually hindered proper tool development, but I was never able to explain it to anyone that hasn&#x27;t used Borland C++ or Borland Pascal in the past, except maybe to game developers on Visual Studio. reply pjmlp 20 hours agoparentC++ Builder versus Visual C++ for RAD GUI development.I never understood why Redmond folks have so hard time thinking of a VB like experience for C++ tooling, like Borland has managed to achieve.The two attempts at it (C++ in .NET), and C++&#x2F;CX, always suffered push back from internal teams, including sabotage like C++&#x2F;WinRT (nowadays in maintainance as they are having fun in Rust&#x2F;WinRT).The argument for language extensions, a tired one, doesn&#x27;t really make sense, as they were Windows only technologies, all compilers have extensions anyway, and WinDev doesn&#x27;t have any issues coming with extensions all the time for dealing with COM.Or the beauty of OWL&#x2F;VCL versus the lowlevel from MFC. reply becurious 16 hours agorootparentDevDiv vs WinDev. The Windows group maintains the C++ compiler. So you get the resource editor for dialog templates and that’s about it. And that actually got worse from Visual Studio .NET onwards, my guess is that it got took over by the DevDiv people when they unified the IDEs. reply pjmlp 15 hours agorootparentYes pretty much that.Windows could have been like Android, regarding the extent of managed languages usage and NDK, if DevDiv and WinDev had actually collaborated in Longhorn, but I digress. reply aulin 21 hours agoparentprevout of the loop, how is terminal-based development related to FAANG? reply marcodave 20 hours agorootparentI guess it&#x27;s caused by the \"brogrammer\" culture of Silicon Valley, where you would get hazed if you dared using a GUI-based tool. Also, being more focused on open-sourcing their tools (because other companies do not open source them, therefore being un-cool), which begets a \"simpler\" and \"engineeristic\" approach to UX, which do not need UI experts and designers. reply jpollock 16 hours agorootparentprevLots of companies end up with their own internal tooling. They have their own build systems, packaging systems, release systems, version control, programming languages, configuration languages, everything.Some even have their own editors.There is a lot of value in picking a transferrable editor and using that. From that point it becomes \"what is the best editor that will _always_ be available\". Emacs&#x2F;Vim fit that.Then the muscle memory can begin to grow, and there is one less bit of friction in starting a new job.One of the best pieces of advice I received was \"pick an editor and go deep\". reply aulin 7 hours agorootparent> One of the best pieces of advice I received was \"pick an editor and go deep\".Agreed, I&#x27;d be infinitely less productive if I couldn&#x27;t use the editor I learned to master in the past 20 years.A corollary to that would be \"pick a company that lets you use your own editor\". There&#x27;s lots of friction from IT departments towards emacs and vim. The package&#x2F;plugin system is a security nightmare with lots of potential supply chain attacks and more importantly no trusted vendor to blame when something goes wrong. reply MonkeyClub 20 hours agorootparentprevIt became sort of a hackerish trend in the past decade, usinga hyper customized (neo)vim in lieu of an IDE. reply bluetomcat 20 hours agorootparentprevExcept maybe Apple, all the others are service-oriented companies. They run heterogenous pieces of code on their servers and their ideology is “move fast and break things”. It’s a hipster culture that reinforced the use of 1980s “video terminal” editors and CLI tooling because they were supposedly more flexible for their workflows. reply danieldk 21 hours agoprevI loved Turbo Pascal, but to me the high point of Borland&#x27;s tooling was Delphi (1995). I don&#x27;t want to sound like old man yells at cloud, but every time someone says that building GUIs with Electron is so easy compared to native apps, I just wished they experienced Delphi in its prime.There are some very short&#x2F;simple demos on YouTube:https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=m_3K_0vjUhk reply lelanthran 14 hours agoparent> but every time someone says that building GUIs with Electron is so easy compared to native apps, I just wished they experienced Delphi in its prime.Every time someone says that, I mention Lazarus. I stll get a thrill out of using it (one of my github projects is a C library, and the GUI app is in Lazarus, which calls into the API to do everything).The problem I find with Lazarus is that it seems to be slowly dying; yes, they still work on it, but feature-wise they are very behind what can be done with HTML+CSS and a handful of js utility functions.A wealthy benefactor could very quickly get Lazarus to the point of doing all the eye-candy extras that HTML+CSS let you do (animated elements, for example). reply aaptel 10 hours agoparentprevLooks pretty similar to C# WinForms that ships with Visual Studio. https:&#x2F;&#x2F;youtu.be&#x2F;n5WneLo6vOY?si=maped85dMX90KIn1 reply hinkley 12 hours agoparentprevI will happily fill an hour with trash talking Microsoft, but getting the father of Delphi on board is one of the shrewdest things they’ve managed. I wish he’d found a different project to sink his teeth into though. reply pjmlp 20 hours agoparentprevThey can still experience it today with the community edition. reply mikewarot 16 hours agorootparentIf you can agree to their very strange terms and conditions.Or, use Lazarus&#x2F;Free Pascal, which is almost identical, except for the documentation, which needs a massive overhaul, in tooling and content. reply pjmlp 15 hours agorootparentNot everyone is religious against such agreements.Those can profit from very latest version. reply Aardwolf 20 hours agoprevAt least the programs in the screenshot have actually useful and visible scrollbars. Seriously, scrollbars are super useful and should never be hidden, they both provide information you want to see and actions you want to do, why is everything trying to make them as subtle as possible today, even most Linux UI&#x27;s which I&#x27;d expect are normally made more for usefulness than \"design trends\"? reply ryanjshaw 20 hours agoparentGitHub&#x27;s Android app doesn&#x27;t even show scroll bars. And no scroll grab or snapback in apps even when there is a scroll bar. Am I the only person who scrolls back to check something and wants to quickly return to where I was in a document? Even if just FF on Android had this I would be happy.On desktop we can drag scrollbars but I can&#x27;t imagine what it&#x27;s like to use modern 4-8px action area scroll bars if you have fine motor control challenges.I just don&#x27;t understand how we got to this point. Do people not use the apps they write? reply posix86 20 hours agorootparentThis must be a bug though. If you unfold hidden comments, you jumpt to the BOTTOM, where you just WERE, rather than the top. So you scroll up, with no scrollbar, frantically, because you don&#x27;t know how far you have to go. Until you reach the top - and you drag down ONE MORE TIME, because you&#x27;re scrolling frantically, so the whole thread reloads, and everything is folded again, and you&#x27;re back where you started. reply badsectoracula 20 hours agoparentprevOn Linux this depends on your theme really, all the themes i use have scrollbars - e.g. here is an example with Gtk3 (which IIRC introduced the \"autohiding scrollbars\" to Linux desktop)[0]. It is \"cdetheme-solaris\" which i think is from [1]. I might have modified it a bit though. Though normally i use Gtk2 apps with a modified \"cleanlooks\" theme (a screenshot from Lazarus[2] i made a couple of days ago shows it - including the scrollbars :-P).[0] https:&#x2F;&#x2F;i.imgur.com&#x2F;CAyu5Ay.png[1] https:&#x2F;&#x2F;github.com&#x2F;josvanr&#x2F;cde-motif-theme[2] https:&#x2F;&#x2F;i.imgur.com&#x2F;Yw1tTcD.png reply analog31 20 hours agoparentprevMoreover, make the scrollbars big enough for my thumbs on my touch screen. Or at least make it optional. reply lisper 1 hour agoprevThis article completely ignores the Macintosh and the greatest IDE ever, which came out in in the mid-80s: Coral Common Lisp. It ran on a Mac Plus with 1MB of RAM and it was fucking awesome. It included a drag-and-drop interface builder that let you build a complete app in literally a matter of minutes. Nothing I&#x27;ve seen has come close since. reply malkia 13 hours agoprevThe two most indispensable programs for me are \"midnight manager\" for Linux&#x2F;OSX and the like, and \"Far Manager\" on Windows (and mc there too under wsl2).I&#x27;m lost with Far Manager at work. I&#x27;ve stopped using Explorer long time ago (and use it only to verify some reported workflow from other users, or some obscure thing not possible in Far Manager).Other tools: tig (pager), emacs, mg (mini-emacs) - I wish that was available on Windows too without needing msys2&#x2F;cygwin, and few others.Back in the DOS days - it was Norton&#x2F;Volkov Commander, PC Tools, but also Turbo&#x2F;Borland Pascal 3, 4, 5; the most awesome E3 editor (from this series - https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;E_(PC_DOS) ) - and many more reply breadwinner 6 hours agoprevNeXT had a terrific IDE 30 years ago, called Interface Builder. More info: https:&#x2F;&#x2F;arstechnica.com&#x2F;gadgets&#x2F;2012&#x2F;12&#x2F;the-legacy-of-next-l... reply jshier 4 hours agoparentThe IDE was Project Builder, Interface Builder was a separate, as the name implies, builder for interfaces that could then be connected to Obj-C code in Project Builder. They continued as separate apps even after Apple bought NeXT and shipped Mac OS X, until they unified the two into Xcode. reply lumb63 16 hours agoprevEven if VSCode&#x2F;other IDE had features that blew Neovim out of the water, I don’t think I’d move over. The customizability, modal aspect, and open-source-ness are huge for me. I can create macros on the fly for repetitive tasks, can navigate without ever having to stall my train of thought to touch my mouse, and customize every single key binding and the code that it runs. I can create custom commands to do every single thing I’ve ever conceived of wanting to do. I can upstream bug fixes and see those others have suggested that haven’t been up streamed yet. I will concede that for some, maybe this is too much work to set up “just a text editor”, but I enjoy it, and I spend most of my day editing or viewing text, so to me, it’s worth it.If there is one thing I’ve learned in my years of software engineering, it’s that everyone prefers different workflows. Let people build their own, however they want, with whatever tools they want, and they will be happier for it. reply troupo 1 hour agoparentAlmost everything you wrote is available for any modern IDE, and modern IDEs, thankfully, don&#x27;t assume that your code is text. So they give all the things you mentioned and superior tools to work with code out of the box: anything from refactoring to code analysis to several types of semantic search to... reply archargelod 26 minutes agorootparentCorect me if I&#x27;m wrong, but you can&#x27;t define macros in a couple key strokes or contribute to development of any modern IDE.Nor they were designed to be hackable or customizable. If you open one of the setting sections in VS-Code you are presented with giant, over-engineered control panel with myriad of options you can toggle.Where Vim has a blank canvas you splash with couple dozen lines of code to make it unique and personal. It&#x27;s almost like you aren&#x27;t using just vim, but your own hand-made editor built on a great minimal base, that is Vim. reply marmakoide 19 hours agoprevI am easily distracted (as in, ADHD-like), I enjoy very sparse work spaces in general. Tools with lots of icons, windows, and other widgets are very uncomfortable to me. I prefer typing commands, I believe a well written command language and a good search function are more comfortable. I will go to great lengths to avoid some tools if it means avoiding a clickodrome : for example, when coding for STM32 devices, I prefer bare metal GCC + makefile over STMCube.To each his own tho, it&#x27;s nice to have different tools for different peoples. reply tgv 19 hours agoprev30 years ago, THINK C for the mac was already nearing discontinuation. It was a great compiler plus plus graphical IDE with debugger for its time. Hard to find info about it, but this site has some screenshots of the various versions:https:&#x2F;&#x2F;winworldpc.com&#x2F;product&#x2F;think-c&#x2F;4x#screenshotPanel reply eludwig 18 hours agoparen",
    "originSummary": [
      "This article examines the transformation of text-based IDEs throughout three decades and compares them to contemporary IDEs.",
      "The author shares their firsthand encounters with older IDEs such as SideKick Plus and Turbo Pascal, emphasizing their characteristics and user-friendliness.",
      "Despite the decline in popularity of text-based user interfaces (TUIs) in software development due to graphical operating systems, TUI IDEs are making a resurgence with the introduction of the Language Server Protocol (LSP).",
      "While some enhancements have been implemented in modern IDEs, the fundamental functionality has largely stayed the same."
    ],
    "commentSummary": [
      "Participants in the discussion express frustration with modern IDEs and praise the simplicity and efficiency of older tools like Visual Basic 6 and Delphi.",
      "The challenges of web and mobile development are discussed, including the fragmentation of UI libraries and the difficulties faced by OS vendors in creating integrated IDEs.",
      "Low-code tools like Excel are mentioned as advantageous, while the limitations of Python and JavaScript for app creation are also debated. Other topics include documentation, remote development, code editing, and IDE performance."
    ],
    "points": 547,
    "commentCount": 456,
    "retryCount": 0,
    "time": 1703763537
  },
  {
    "id": 38794068,
    "title": "Amazon Warned by FDA for Undeclared Ingredients in Supplements",
    "originLink": "https://www.fda.gov/inspections-compliance-enforcement-and-criminal-investigations/warning-letters/amazoncom-inc-662503-12202023",
    "originBody": "WARNING LETTER Amazon.com, Inc. MARCS-CMS 662503 — December 20, 2023 Share Post Linkedin Email Print Delivery Method: Via Email Product: Drugs Food & Beverages Recipient: Recipient Name Andy Jassy Recipient Title CEO Amazon.com, Inc. 2021 7th Ave Seattle, WA 98121-2601 United States Regulatory-inquiries@amazon.com Issuing Office: Center for Drug Evaluation and ResearchCDER United States Secondary Issuing Offices United States WARNING LETTER December 20, 2023 RE: 662503 Dear Mr. Jassy: This letter concerns your firm’s distribution of products that violate the Federal Food, Drug, and Cosmetic Act (the “FD&C Act”). The United States Food and Drug Administration (FDA) purchased on your website, www.amazon.com, products that are labeled as energy enhancing supplements or food, but laboratory analyses confirmed that they contained undeclared and potentially harmful active pharmaceutical ingredients. As discussed further below, your firm is responsible for introducing or delivering for introduction into interstate commerce products that are unapproved new drugs under section 505(a) of the FD&C Act, 21 U.S.C. 355(a). Furthermore, the products are misbranded drugs under section 502 of the FD&C Act, 21 U.S.C. 352. As explained further below, introducing or delivering these products for introduction into interstate commerce is prohibited under sections 301(a), 301(d), and 505(a) of the FD&C Act, 21 U.S.C. 331(a), 331(d), and 355(a). Your firm is also responsible for introducing or delivering for introduction into interstate commerce a food that is prohibited under section 301(ll) of the FD&C Act, 21 U.S.C. 331(ll). FDA purchased “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” “Mens Maximum Energy Supplement,” and “X Max Triple Shot Energy Honey” through your website, www.amazon.com. All of these products were introduced or delivered for introduction into interstate commerce by Amazon via your Fulfillment by Amazon service.1 FDA confirmed through laboratory analyses that the “MANNERS Energy Boost,” “Round 2,” “Genergy,” and “X Max Triple Shot Energy Honey” products, purchased on www.amazon.com, contained the active pharmaceutical ingredient (API) tadalafil; and the “WeFun,”2 “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” products, also purchased on www.amazon.com, contained the API sildenafil. These ingredients are not declared on the products’ labeling.3 Sildenafil and tadalafil are phosphodiesterase type-5 (PDE-5) inhibitors and the active ingredients in the FDA-approved prescription drugs Viagra and Cialis, respectively, used to treat erectile dysfunction (ED). These undeclared ingredients may interact with nitrates found in some prescription drugs, such as nitroglycerin, and may lower blood pressure to dangerous levels. Information on the labels and/or labeling of “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” demonstrates that these products are marketed as dietary supplements4. However, these products do not meet the definition of “dietary supplement” under section 201(ff) of the FD&C Act, 21 U.S.C. 321(ff). Under section 201(ff)(3)(B)(i) of the FD&C Act, 21 U.S.C. 321(ff)(3)(B)(i), a product is not a dietary supplement if it includes an article that is approved as a new drug under section 505 of the FD&C Act, unless that article was marketed as a dietary supplement or food before its approval as a drug. Sildenafil and tadalafil were not marketed as dietary supplements or as foods before Viagra and Cialis were FDA-approved. FDA approved Viagra (containing sildenafil as the active ingredient) as a new drug on March 27, 1998. FDA approved Cialis (containing tadalafil as the active ingredient) as a new drug on November 21, 2003. Given that sildenafil and tadalafil were not marketed as dietary supplements or as foods before Viagra and Cialis were FDA-approved, “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement,” which contain sildenafil or tadalafil, are excluded from the definition of “dietary supplement” under section 201(ff)(3)(B)(i) of the FD&C Act. The remaining product, “X Max Triple Shot Energy Honey,” is a food5 that was confirmed by laboratory analysis to contain tadalafil. Unapproved New Drugs The “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” products that are marketed as dietary supplements are drugs as defined by section 201(g)(1) of the FD&C Act, 21 U.S.C. 321(g)(1), because they are intended for use in the diagnosis, cure, mitigation, treatment, or prevention of disease and/or intended to affect the structure or any function of the body. Examples of claims observed on the labeling, including the outer packaging, that establish the intended use of these products as drugs include, but may not be limited to, the following: “MANNERS Energy Boost” From the product label: “Energy Boost” “Round 2” From the product label: “THE POWER TO GO AGAIN! STRENGTH * ENERGY * ENDURANCE” “WeFun” From the product label: “Energy[,] Performance” “Genergy” From the product label: “ENERGY FOR MEN” “Big Guys Male Energy Supplement” From the product label: From the product name: “Male Energy Supplement” “Extreme Power” “Focus . . . Energy . . . Mood” “500 MG POWER BOOST” “Mens Maximum Energy Supplement” From the product label: The product name: “Mens Maximum Energy Supplement” “NEVER ENDING ENERGY!” “STRENGTH[,] ENERGY[,] ENDURANCE” “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” are not generally recognized as safe and effective for their above referenced uses and, therefore, are “new drugs” under section 201(p) of the FD&C Act, 21 U.S.C. 321(p). With certain exceptions not applicable here, new drugs may not be legally introduced or delivered for introduction into interstate commerce without prior approval from the FDA, as described in sections 301(d) and 505(a) of the FD&C Act, 21 U.S.C. 331(d) and 355(a). There are no FDA-approved applications in effect for “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement.” Introduction or delivery of these products into interstate commerce without approved applications violates sections 301(d) and 505(a) of the FD&C Act, 21 U.S.C. 331(d) and 355(a). Misbranded Drugs Additionally, “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” are misbranded under section 502(a) of the FD&C Act, 21 U.S.C. 352(a). Under section 502(a) of the FD&C Act, 21 U.S.C. 352(a), a drug is misbranded if its labeling is false or misleading in any particular. Section 201(n) of the FD&C Act, 21 U.S.C. 321(n), provides that, in determining whether an article’s labeling or advertising “is misleading there shall be taken into account . . . not only representations made or suggested . . . but also the extent to which the labeling or advertising fails to reveal facts material in light of such representations.” The labeling for these products does not declare that they contain PDE-5 inhibitors. The use of PDE-5 inhibitors can be associated with significant safety issues and the risk of serious adverse events. The undeclared PDE-5 inhibitors in these products may pose serious health risks because consumers with underlying medical issues may take the products without knowing that they can cause serious harm or interact in dangerous ways with other drugs they may be taking. For example, PDE-5 inhibitors may interact with nitrates found in some prescription drugs (such as nitroglycerin) and can lower blood pressure to dangerous levels. Consumers with diabetes, high blood pressure, or heart disease often take nitrates. The failure to disclose these ingredients in the products’ labeling renders them misbranded under section 502(a) of the FD&C Act. “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” are also misbranded under section 502(f)(1) of the FD&C Act, 21 U.S.C. 352(f)(1), in that their labeling fails to bear adequate directions for their intended uses. “Adequate directions for use” means directions under which a layman can use a drug safely and for the purposes for which it is intended (see 21 CFR 201.5). Prescription drugs, as defined in section 503(b)(1) of the FD&C Act, 21 U.S.C. 353(b)(1), include those that, because of their toxicity or other potentiality for harmful effect, and/or the method of their use, and/or the collateral measures necessary for their use, are not safe for use except under supervision of a practitioner licensed by law to administer them. All PDE-5 inhibitors which have been approved for marketing by FDA are limited by an approved new drug application to use under the supervision of a practitioner licensed by law to administer such drugs. “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement,” which contain undeclared sildenafil or tadalafil, are also prescription drugs as defined in section 503(b)(1)(A) of the FD&C Act, and as such, can be used safely only at the direction and under the supervision of a licensed practitioner. Therefore, it is impossible to write “adequate directions for use” for “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” such that a layperson can use these drugs safely for their intended uses. These products are not exempt from the requirements that their labeling bear adequate directions for use by a layperson, 21 CFR 201.100(c)(2) and 201.115, because there are no FDA-approved applications in effect for these products. For these reasons, “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” are misbranded under section 502(f)(1) of the FD&C Act. The undeclared sildenafil or tadalafil in “MANNERS Energy Boost,” “Round 2,” “WeFun,” “Genergy,” “Big Guys Male Energy Supplement,” and “Mens Maximum Energy Supplement” also causes the products to be misbranded under section 502(f)(2) of the FD&C Act, 21 U.S.C. 352(f)(2), because their labeling lacks adequate warnings against unsafe dosage or methods or duration of administration or application, in such manner and form, as are necessary for the protection of users. As previously noted, there is a potential for serious health risks associated with these products, particularly since anyone who takes these products would be unaware of the presence of the undeclared drug ingredients and placed at risk for the associated adverse events. The introduction or delivery for introduction into interstate commerce of these misbranded drug products is a prohibited act under section 301(a) of the FD&C Act, 21 U.S.C. 331(a). Prohibited Act under Section 301(ll) It is a prohibited act under section 301(ll) of the FD&C Act, 21 U.S.C. 331(ll), to introduce or deliver for introduction into interstate commerce any food to which has been added a drug approved under section 505 of the FD&C Act or for which substantial clinical investigations have been instituted and for which the existence of such investigations has been made public. As noted above, FDA purchased “X Max Triple Shot Energy Honey” from www.amazon.com and confirmed through laboratory testing that the product contained undeclared tadalafil. Based on available evidence, FDA has determined that the prohibition in section 301(ll) applies to tadalafil.6 The introduction or delivery for introduction into interstate commerce of “X Max Triple Shot Energy Honey” is therefore prohibited under section 301(ll) of the FD&C Act. Conclusion The violations cited in this letter are not intended to be an all-inclusive statement of past or present violations that may exist in connection with the products you distribute. You are responsible for investigating and determining the causes of any violations and for preventing their recurrence or the occurrence of other violations. It is your responsibility to ensure that your firm complies with all requirements of federal law, including FDA regulations. This letter notifies you of our concerns and provides you an opportunity to address them. Failure to adequately address this matter may result in legal action including, without limitation, seizure and/or injunction. Please submit a written response to this letter within fifteen working days from the date of receipt, explaining the specific steps you have taken to address any violations. Include an explanation of each step being taken to prevent the recurrence of violations, including steps you will take to ensure that Amazon will no longer introduce or deliver for introduction into interstate commerce unapproved new drugs and/or misbranded products with undeclared drug ingredients, as well as copies of related documentation. If you believe that the products you distribute are not in violation of the FD&C Act, include your reasoning and any supporting information for our consideration within fifteen working days from the date of receipt of this letter. Your response should be sent to U.S. Food and Drug Administration, CDER/OC/Office of Unapproved Drugs and Labeling Compliance by email to FDAAdvisory@fda.hhs.gov. Sincerely, /S/ Jill Furman Director Office of Compliance Center for Drug Evaluation and Research Food and Drug Administration /S/ Ann M. Oxenham, J.D. Director Office of Compliance Center for Food Safety and Applied Nutrition Food and Drug Administration ____________________________ 1 Amazon distributed each of the products directly to individual U.S. consumers on behalf of third parties. Each of the products was “fulfilled” by Amazon; your website states, “Fulfillment by Amazon (FBA) is a service that allows you to outsource order fulfillment to Amazon. Sign up for Amazon FBA to send products to Amazon’s global network of fulfillment centers and offer customers free, two-day shipping through Prime. When a customer makes a purchase, Amazon fulfillment specialists can pick, pack, and ship the order. We can also provide customer service and process returns for those orders.” (See https://sell.amazon.com/fulfillment-by-amazon). 2 On August 25, 2023, Hua Da Trading Inc., dba WeFun Inc., issued a voluntary nationwide recall of WeFun Capsules due to the presence of undeclared sildenafil (see https://www.fda.gov/safety/recalls-market-withdrawals-safety-alerts/hua-da-trading-inc-dba-wefun-inc-issues-voluntary-nationwide-recall-wefun-capsules-due-presence). 3 U.S. Food & Drug Administration, Public Notification: MANNERS Energy Boost contains hidden drug ingredient (February 2, 2023), https://www.fda.gov/drugs/medication-health-fraud/public-notification-manners-energy-boost-contains-hidden-drug-ingredient; U.S. Food & Drug Administration, Public Notification: Round 2 contains hidden drug ingredient (August 22, 2023),https://www.fda.gov/drugs/medication-health-fraud/round-2-contains-hidden-drug-ingredient; U.S. Food & Drug Administration, Public Notification: Genergy contains hidden drug ingredient (August 23, 2023), https://www.fda.gov/drugs/medication-health-fraud/genergy-contains-hidden-drug-ingredient; U.S. Food & Drug Administration, Public Notification: X Max Triple Shot Energy Honey contains hidden drug ingredient (August 23, 2023), https://www.fda.gov/drugs/medication-health-fraud/x-max-triple-shot-energy-honey-contains-hidden-drug-ingredient; U.S. Food & Drug Administration, Public Notification: WeFun contains hidden drug ingredient (August 23, 2023) https://www.fda.gov/drugs/medication-health-fraud/wefun-contains-hidden-drug-ingredient; U.S. Food & Drug Administration, Public Notification: Big Guys Male Energy Supplement contains hidden drug ingredient (August 23, 2023), https://www.fda.gov/drugs/medication-health-fraud/big-guys-male-energy-supplement-contains-hidden-drug-ingredient; U.S. Food & Drug Administration, Public Notification: Mens Maximum Energy Supplement contains hidden drug ingredient (August 23, 2023), https://www.fda.gov/drugs/medication-health-fraud/mens-maximum-energy-supplement-contains-hidden-drug-ingredient. 4 The labeling for each of these products includes a Supplement Facts panel. 5 The labeling for this product includes a Nutritional Information panel. 6 There is an exception if the substance was marketed in food before the drug was approved or before the substantial clinical investigations involving the drug had been instituted. However, based on available evidence, FDA has concluded that this is not the case for tadalafil.",
    "commentLink": "https://news.ycombinator.com/item?id=38794068",
    "commentBody": "Amazon receives FDA warning letter for supplements with undeclared ingredientsHacker NewspastloginAmazon receives FDA warning letter for supplements with undeclared ingredients (fda.gov) 478 points by mkmk 18 hours ago| hidepastfavorite382 comments kayodelycaon 18 hours agoI’m glad the conclusion says the products lists are not the only ones to which this letter applies. Otherwise Amazon could just remove the products mentioned and make the FDA play wack-a-mole.As a side note, this letter is exactly why I think a regulatory agency like the FDA is absolutely necessary. This stuff can kill people and it is impossible for the average person to protect themselves. reply toomuchtodo 18 hours agoparentThe FDA likely needs a data team if they don’t have one already to monitor Amazon for ongoing compliance. Similar to the SEC’s data team that monitors capital market data flows for anomalies that would indicate illegal behavior.My two cents: good market to be looking for good data folks who might want a (potentially remote) federal agency data job with shakiness in tech.https:&#x2F;&#x2F;usajobs.github.io&#x2F;microsite-data-science&#x2F; reply altairprime 14 hours agorootparentIf Amazon fails to comply with the auditing requirements imposed by law, their entire retail shipping business could be closed by the US federal government. The FDA need only prove that Amazon has a pattern of negligence in their product auditing duties under law, in order to impose severe penalties, up to and including shuttering Amazon FBA. The FDA is not required to perform inventory assessments as a free service for Amazon in order to reach that final outcome. This letter is the first, necessary, step towards doing so. reply serial_dev 12 hours agorootparentI assume it&#x27;s still a move with lots of politicking involved, so they need to stand on solid grounds, proof and all, I don&#x27;t think they would every take lightly closing down vone of the biggest companies of the country (and the world).If it ever happened, I can already see the endless coverage by Sean Hannity and similar about how it&#x27;s governmental overreach that risks destroying an important US company with X thousands employees...However, I don&#x27;t think it will ever happen, in the end it&#x27;s one of the richest men, Jeff Bezos behind Amazon with significant influence on news reporting, who seems to be on good terms with both the Republicans and Democrats, and the regulatory agencies in the US just didn&#x27;t show a pattern of going too hard against US companies. reply altairprime 12 hours agorootparentI definitely don’t have a well-formed opinion on how likely such an outcome is, but I absolutely believe that discussing that outcome as a serious concern is necessary discussion to have. reply Dalewyn 9 hours agorootparentprevIt&#x27;s a good thing that regulatory actions are slow going and difficult to prove under the law, otherwise the commons would be subject to powertripping leaders above clouds far more than they are already.It also means that if things do get to such a point, then the action will come down swift and heavy in a manner generally agreeable to the majority of the commons. reply bilbo0s 18 hours agorootparentprevIf you&#x27;ve ever been with a startup that needed a 510k, you&#x27;d know that the FDA regularly monitors everyone for compliance. At least in my narrow domain of medical imaging and treatment planning devices they do. I&#x27;d be surprised if they didn&#x27;t have similar mechanisms in place in every area of their &#x27;jurisdiction&#x27;.It doesn&#x27;t really hurt the Amazons, they&#x27;re just distributors. Doesn&#x27;t really even hurt me. If RTP is a part of my software product I should be under a microscope. It&#x27;s going to be small people who try to market supplements who will get trounced now. Because every report will, by law, have to include the source of the product. And that source company or individual is in for a long year. Even shutting down won&#x27;t end their legal obligations in a lot of cases.On the other hand, that was, in part, the original point of the FDA. To stamp out the snake oil salesmen. So, yeah. I guess they&#x27;re just carrying out that mandate in new and updated ways. reply jacurtis 16 hours agorootparentAs someone who worked at a startup that grew to a significant size in the \"Nutraceuticals\" industry (the fancy name for supplements), I can tell you that the FDA has nearly zero regulation or monitoring of supplements.I&#x27;ll omit brand names here, but I can tell you some sketchy stuff happens in supplement manufacturing all the time. During the ~6 years I worked there, only one letter came from the FDA after a whistleblower at a competitor&#x27;s company came forward. The FDA sent a warning letter out to several of the large competitors in the industry to \"don&#x27;t do it or else\" and never followed up again. The company that got in trouble got a few hundred thousand dollar fine for using mislabeled and toxic ingredients. They had one follow up inspection about 6 months after the warning and that was the end of it. For comparison that company was making ~$600M a year at the time of the fine and is now making $1B+. We carried on and never heard from the FDA again despite being equally guilty in our own company.The guilt is what eventually led me away from the cash cow, where I went on an 18 month sabbatical to get away from any corporate greed for a little bit. I legitimately had nightmares that I would be complicity guilty of several crimes if I stayed there long enough.I promise you, there is no oversight in supplements. There are a handful of posted guidelines. If a whistleblower comes forward the FDA might react to that single case, but they are so understaffed; the team that manages nutriceuticals is marked in the \"tens\" of people, not the thousands dedicated to proper medical equipment and medicines. reply thfuran 15 hours agorootparentIt seems like a bizarre gap between food and drugs that shouldn&#x27;t exist. If it&#x27;s meant to be eaten, the FDA should definitely be regulating it thoroughly. reply dataflow 15 hours agorootparent> It seems like a bizarre gap between food and drugs that shouldn&#x27;t exist. If it&#x27;s meant to be eaten, the FDA should definitely be regulating it thoroughly.The FDA did try regulating supplements. They were legally prohibited from doing much.You can thank Senator Orrin Hatch (who was the longest-serving Republican senator in history until recently) for preventing the FDA from regulating supplements back in 1994. [1] [2][1] https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=WIT5_SMIaHE&t=6m46s (watch a few minutes of it from here)Edit: Posted it here for those interested: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=38797162[2] https:&#x2F;&#x2F;www.congress.gov&#x2F;bill&#x2F;103rd-congress&#x2F;senate-bill&#x2F;784 reply kayodelycaon 15 hours agorootparentprevThe FDA still requires supplements to follow safety standards and be properly labeled, but you do not need approval to make them. reply lotsofpulp 7 hours agorootparentRequiring someone to follow safety standards but never spot checking them to ensure they are might as well be not having any safety standards.Seehttps:&#x2F;&#x2F;inspection.canada.ca&#x2F;food-safety-for-industry&#x2F;food-c... reply BobaFloutist 16 hours agorootparentprev> Because every report will, by law, have to include the source of the product.I don&#x27;t think it&#x27;s an undue burden that if you&#x27;re going to sell things people are ingesting, you have to know and communicate where they came from.And I feel like small people that try to market supplements won&#x27;t be especially damaged by this. It feels like as much as anything this would \"hurt\" small people that try to start a supplement manufacturing cottage-venture on a shoe string, over which I don&#x27;t expect to lose any sleep. reply LeifCarrotson 17 hours agorootparentprev> It doesn&#x27;t really hurt the Amazons, they&#x27;re just distributors.I&#x27;m doing my first FDA-monitored automation project at a local brewery, and am quickly becoming familiar with the abundant controls that the FDA puts on domestic producers.But the FDA is an American organization. Amazon or Ebay or Aliexpress or whoever may be just distributors, but they&#x27;re international distributors. They&#x27;re fully-automated self-service distributors for manufacturers in China and Russia and Indonesia and India who aren&#x27;t subject to FDA jurisdiction, who sometimes aren&#x27;t subject to any oversight at all.The only entity that the FDA can go after here is Amazon, so this should hurt Amazon. reply galangalalgol 16 hours agorootparentThe FCC should be going after them too. A lot of the wireless stuff they sell isn&#x27;t registered. reply LeifCarrotson 11 hours agorootparentYes, the FCC should be going after Amazon as well. I have more experience with that as an electrical engineer who&#x27;s just getting into FDA-adjacent work.But the FCC&#x27;s position is that if I as an electrical engineer want to sell my neighbor here in the US some custom PCB with an antenna, I need to go through testing that costs many thousands of dollars.If an EE in Shenzhen wants to sell my neighbor the same PCB over Alibaba, Aliexpress, Banggood, Wish, Temu, Shein, Gearbest, or whatever new discount importer is hot I can&#x27;t keep up anymore, or Ebay&#x2F;Amazon&#x2F;Target&#x2F;Walmart.com, they&#x27;re just going to create a listing and import it. The FCC simply cannot keep up.What I don&#x27;t understand is how they&#x27;re getting through Customs and Border Patrol. If I want to ship a spare off-the-shelf PLC digital input card for a machine to one of my customers who has a satellite facility in Mexico, there&#x27;s a 50% chance it gets held up for a month or more. Meanwhile these big distributors have no issues with air-freight shipments of a GPS jammer or raw testosterone direct to American doorsteps in 3 days.Edit: it seems obvious to me that the CBP should be partially responsible verifying that stuff going through customs subject to FCC or FDA jurisdiction complies with FCC or FDA regulations, or at least to forward the question to the appropriate agency. reply hattmall 7 hours agorootparentCustoms is only barely about checking for prohibited items. It&#x27;s primarily about collecting the proper revenue for goods. The US isn&#x27;t very protectionist so customs is extremely loose. In Mexico they are far more concerned about collecting revenue from customers of US businesses so the customs is more thorough. Based on my experience importing there&#x27;s about a 2-3% chance any sort of inspection is done at all and that&#x27;s generally just cursory to compare with the stated manifest classification. Not a search for contraband. reply toomuchtodo 17 hours agorootparentprevI am not unsympathetic to the disparity you mention, but am advocating that distributor gorillas (like Amazon, but others as well) need strong controls (both regulatory and technical) due to their incentives to not be compliant and the potential negative outcomes (illness, perhaps death even, depending on material and consumer) from non compliance. reply tacheiordache 17 hours agorootparentAbsolutely. And Amazon should also pay for it! reply pfisherman 16 hours agorootparentprevThey do not for supplements. Supplements fall under the office of the Director, which is not funded by PDUFA &#x2F; MDUFA. Supplements are basically the Wild West. reply AnthonyMouse 15 hours agoparentprev> As a side note, this letter is exactly why I think a regulatory agency like the FDA is absolutely necessary.This isn&#x27;t what anybody objects to about the FDA. \"You have to list what&#x27;s in the product\" is a simple rule that every knows, is easy to comply with, and doesn&#x27;t require any government interaction even in the case of a suspected violation because the FDA can just buy the product to test it and compare the lab results to the label.What people object to is when someone wants to sell an accurately labeled product with a risk-benefit trade off, the customer knows what the product is and is exercising informed consent, and the government says they can&#x27;t have it anyway. reply rchaud 12 hours agorootparent> accurately labeled product with a risk-benefit trade off, the customer knows what the product is and is exercising informed consent, and the government says they can&#x27;t have it anyway.The FDA&#x27;s regulatory purview is to limit the collateral damage (negative externalities) of even accurately labeled products.Informed consent from the customer is one side of the equation. Unfortunately they cannot consent to conditions like \"Don&#x27;t burden the hospital system if you take the wrong dosage\". reply AnthonyMouse 12 hours agorootparent> Unfortunately they cannot consent to conditions like \"Don&#x27;t burden the hospital system if you take the wrong dosage\".By this logic the FDA would have to ban Tylenol and Robitussin. Tens of thousands of ER visits every year.The government should generally be concerned with preventing deception and coercion and pricing externalities, because otherwise people have the incentive to do them and they would be prolific.Things nature punishes directly don&#x27;t need the state to deter them. They happen by accident rather than by motive and we choose purposely to spread the cost of this across the population as a form of insurance and a cost of living in a free society, sometimes even when the misfortune is a result of their own stupidity. Other times we send them a bill for costs. reply growse 11 hours agorootparent> By this logic the FDA would have to ban Tylenol and Robitussin. Tens of thousands of ER visits every year.It&#x27;s almost like there&#x27;s a balance of harms to be evaluated.I&#x27;d bet the cheap availability of paracetamol etc. saves more hospital visits than it causes, but I don&#x27;t have the data to hand. reply AnthonyMouse 11 hours agorootparent> It&#x27;s almost like there&#x27;s a balance of harms to be evaluated.Which is a highly context-specific evaluation, so is it better decided by the person with the most knowledge of their own circumstances, or across the board with no context at all? reply growse 10 hours agorootparent> Which is a highly context-specific evaluation, so is it better decided by the person with the most knowledge of their own circumstances, or across the board with no context at all?It depends on the context.In many, many contexts, people are explicitly not the people with the most knowledge about their circumstances. When I&#x27;m crossing a pedestrian foot-bridge, I have much less knowledge about whether this particular bridge is safe or not than the people who built it and the regulators who regulated it. The same is true when I drive my car, take medication, eat food, etc. etc. etc. I make risk decisions every day, but those decisions occur within a societal context, and part of that context is a general regulatory framework.We are not all experts in everything. Which is why we (The People) gather together and delegate that responsibility in general to bodies of experts who try to make context-aware determinations about what in general should be allowed, what shouldn&#x27;t be, and what should be left up to the end-user. It&#x27;s a vast spectrum, and people often disagree about what goes where - this is fine! But if you want to get rid of the spectrum and have everything decided by people who should have \"the most knowledge of their own circumstances\", then it sounds like you&#x27;re in favour of people dying and then blaming them for it. reply AnthonyMouse 8 hours agorootparent> When I&#x27;m crossing a pedestrian foot-bridge, I have much less knowledge about whether this particular bridge is safe or not than the people who built it and the regulators who regulated it.Which is why we communicate. If the bridge has loose stones, you put up a sign that says the bridge is hazardous and has loose stones and provide a map with an alternate route. Now the person who comes up to the bridge knows that a professional evaluation designated the bridge as hazardous and why.Most of the time that means you&#x27;ll want to go around. But if the bridge is only two feet off the ground and you can see your lost dog on the other side, you might reasonably be willing to exercise careful footing and risk twisting your ankle to get to your dog.Whereas if it&#x27;s a hundred feet off the ground, you can try to get your dog later. But you might still cross if was something more serious, like you&#x27;re in the woods alone and injured, you have to get across to call for help before you bleed to death and the alternate route is several hours longer.It&#x27;s a lot easier to get general information to the person in the situation than the other way around.> But if you want to get rid of the spectrum and have everything decided by people who should have \"the most knowledge of their own circumstances\", then it sounds like you&#x27;re in favour of people dying and then blaming them for it.If a person in a situation makes a judgement call and they&#x27;re wrong, they could die. If a legislator makes a judgement call for everyone all at once, people will die because different people will be on different sides of the trade off, possibly more of them than would otherwise if they&#x27;d each been able to make their own decision in context, and certainly some of them who would have lived if they&#x27;d been able to choose for themselves and choose differently.It sounds like you want to trade the lives of people who choose well for the lives of people who choose wrong without even knowing which number is bigger. Or considering that the number of people who choose well could be increased in various ways other than coercion. reply growse 1 hour agorootparent> If the bridge has loose stones, you put up a sign that says the bridge is hazardous and has loose stones and provide a map with an alternate route.This is quaint, but not actually the problem. The problem is that every bridge manufacturer will cut corners on materials and design (because it&#x27;s cheaper) meaning that there will be zero safe bridges. The bridge manufacturer&#x27;s incentives do not line up with its users.When I walk up to a safe-looking bridge, how am I supposed to know it&#x27;s been made with insufficient rebar or dodgy concrete until it&#x27;s collapsed on top of me? A sign?> If a person in a situation makes a judgement call and they&#x27;re wrong, they could die. If a legislator makes a judgement call for everyone all at once, people will die because different people will be on different sides of the trade off, possibly more of them than would otherwise if they&#x27;d each been able to make their own decision in context, and certainly some of them who would have lived if they&#x27;d been able to choose for themselves and choose differently.Like I said, it&#x27;s a balance of harms. There&#x27;s both appropriate and inappropriate places for government intervention, and we&#x27;re already legally not prevented (encouraged, even) from engaging in a bunch of very dangerous activities.But the assertion that legislative intervention will always result in more deaths than letting people \"decide for themselves\" seems highly dogmatic and unsupported.> It sounds like you want to trade the lives of people who choose well for the lives of people who choose wrong without even knowing which number is bigger.We know which number is bigger. Go look at non-natural death rates in much countries with much smaller governments &#x2F; regulatory frameworks. reply peyton 9 hours agorootparentprev“Expert” is a bit strong. FDA reviewers aren’t exactly Nature editors. It’s kind of a coast job. Outside of biologics I think you just need a bachelor’s. reply TimTheTinker 10 hours agorootparentprevIn my opinion, this the best type of argument for a liberal, free society that is possible within a utilitarian moral framework.Generally speaking, each person is best aware of their own context and can choose best for themselves how to take care of themselves and those in their family.I&#x27;m not arguing against regulatory oversight of the free market - the FDA should exist. But there&#x27;s a lot of talk about \"harm reduction\" and even \"nudging\" or \"shaping\" of society that I think needs to go away. I&#x27;m fine with billboards being banned (along with corporate lobbyism); but don&#x27;t tell me I can&#x27;t buy something because some other people could hurt themselves with it if they use it in the wrong way. reply error_logic 10 hours agorootparentprevEven that depends on the scale of the risks involved. reply akira2501 10 hours agorootparentprev> It&#x27;s almost like there&#x27;s a balance of harms to be evaluated.Yes, and I don&#x27;t trust that the government can generate a one size fits all model that universally reduces harm. They&#x27;re just not capable of it, and yet they comfortably assert their authority as if they are, and so they act without actually taking any measure of the impact of their own actions.It&#x27;s the problem with any agency. Sometimes the best answer is actually \"do nothing\" or most likely \"regulate elsewhere through different authority.\"So, I don&#x27;t think the FDA paying an oversized amount of attention to one retail segment is going to do anything meaningful in the long term and we shouldn&#x27;t have to pay for their amateur expeditionary efforts here, both in terms of funding the agency, and in allowing them to control markets on their own without any request or complaint process driving their actions. reply paulmd 11 hours agorootparentprevParacetamol is one of the most dangerous OTC drugs on the market, with one of the narrowest theraputic ranges and almost certainly would not be approved today. However, as the article mentions the FDA tends to lean strongly towards grandfathering existing things regardless of risk, unless they&#x27;re \"the fun drugs\" or pose a manufacturing&#x2F;diversion risk somehow. reply fluidcruft 11 hours agorootparentprevI&#x27;m not really sure what you&#x27;re referring to, but the closest I can interpolate is that you are probably confusing the FDA with the DEA. reply Veserv 12 hours agorootparentprevThe problem is that the risk-benefit tradeoff is not accurately labeled and presented.Advertising laws in the US mean manufacturers can and should do everything in their power to obscure and mislead about the tradeoff. A person purchasing a unverified product should have tremendous misgivings. They should only purchase it in spite of tremendous misgivings. Anything less is not informed consent; it is deception masquerading as informed consent.Until you fix that you get companies downplaying risks and overstating potential benefits. Fix that and informed consent becomes a real possibility and a much more attractive proposition. reply Spivak 11 hours agorootparent> Anything less is not informed consent; it is deception masquerading as informed consent.Which is why I think the model for such things should just be \"informed consent.\" It&#x27;s a concept that already exists in the medical practice with a well-defined procedure. Someone who your state medical board has deemed competent and responsible has to explain in painfully explicit detail all the tradeoffs and answer any and all questions. If you still want to do it you sign some forms and go on with your day. reply kayodelycaon 14 hours agorootparentprevHaving things unnecessarily banned is a trade off of enforcing regulations effectively.Someone has to decide what substances safe and prevent them from sold.The FDA could do better but you’ll never fix that problem unless you don’t allow the FDA to enforce regulations. reply AnthonyMouse 14 hours agorootparent> Someone has to decide what substances safe and prevent them from sold.No they don&#x27;t. If a product has a label that says \"this product is considered unsafe by the Food and Drug Administration\" and explains why and you buy it anyway, you got what you paid for. reply kayodelycaon 13 hours agorootparentUnfortunately all this would result in is everything being labeled unsafe.See California and cancer. reply AnthonyMouse 13 hours agorootparentLabel the things unsafe that are currently banned. Not everything is currently banned, is it? reply VBprogrammer 13 hours agorootparentI don&#x27;t think you&#x27;ve understood the, very valid arguement in my opinion, that everything would end up with an unsafe label. In the same way that almost everything you buy either may contain nuts or is made in a factory which might process nuts - a practise which provides exactly zero useful input for the people it&#x27;s intended to protect.Why would this happen for things which aren&#x27;t currently banned? An abundance of caution - better to claim it&#x27;s potentially unsafe than pay the claims later. Or economics - why pay more for a safe sweetener when you can use the cheap and cheerful one and just label it unsafe. reply AnthonyMouse 13 hours agorootparentYou&#x27;re assuming that people would disregard the labels. But people with allergies don&#x27;t disregard the labels, they buy a different product. Most others don&#x27;t care if it has traces of nuts or not because nuts aren&#x27;t going to kill them, so those products find a wide market of people who are perfectly safe eating them.California says that everything causes cancer because everything kind of causes cancer and their labeling rules are stupid. If the label was only on products with a significant risk of causing cancer from ordinary use, it would be rare and people wouldn&#x27;t ignore it. In other words, if it was only on the products that would otherwise be banned.This would only be a problem if you would otherwise have banned lots of things people would still want to buy given a free and informed choice, in which case actually banning them is even worse.We didn&#x27;t ban cigarettes, we informed people of the risk:https:&#x2F;&#x2F;www.lung.org&#x2F;research&#x2F;trends-in-lung-disease&#x2F;tobacco...And that&#x27;s one of the most addictive products known. Around the same percentage of adults smoke cigarettes and use illegal drugs. So what good is the ban? reply lmm 10 hours agorootparent> But people with allergies don&#x27;t disregard the labels, they buy a different product.I have a nut-allergic friend who has given up on reading the labels and relies on his own common sense, because the labels are on everything now. (Worse, if you look at what&#x27;s happened with sesame, manufacturers now deliberately incorporate sesame into their recipes so that they can put the warning labels on, because that&#x27;s cheaper than the risk of selling a product that doesn&#x27;t contain sesame).> If the label was only on products with a significant risk of causing cancer from ordinary use, it would be rare and people wouldn&#x27;t ignore it. In other words, if it was only on the products that would otherwise be banned.How do you imagine that this might be accomplished? If manufacturers have the choice of a) go through an approvals process b) put a warning label on their product, they&#x27;re going to pick b, every time.> We didn&#x27;t ban cigarettes, we informed people of the risk:And the result is that smoking has fallen a lot more slowly than predicted and millions of people have died. reply AnthonyMouse 5 hours agorootparent> I have a nut-allergic friend who has given up on reading the labels and relies on his own common sense, because the labels are on everything now.There is a difference between containing nuts and being processed on equipment that also processed nuts. The difference matters more for some people than others.> Worse, if you look at what&#x27;s happened with sesame, manufacturers now deliberately incorporate sesame into their recipes so that they can put the warning labels on, because that&#x27;s cheaper than the risk of selling a product that doesn&#x27;t contain sesameThis is what happens when you have bad rules.They have a machine which has processed nuts in the past, it isn&#x27;t cost effective to remove every trace of nuts from it, so they accurately labeled their product as one processed on equipment that has processed nuts. Maybe the trace amounts aren&#x27;t enough to matter, but the consequences can be dire so they&#x27;re cautious. Isn&#x27;t this supposed to be about safety?They only added nuts to the product after you prohibited them from being conservative. And they&#x27;re being atypically conservative because the \"dangerous\" label isn&#x27;t applicable to most of their customers who they then don&#x27;t have to worry about being deterred.> How do you imagine that this might be accomplished? If manufacturers have the choice of a) go through an approvals process b) put a warning label on their product, they&#x27;re going to pick b, every time.Why is the company even involved in the process? They produce a new product and it initially gets a label that says it hasn&#x27;t been tested, which will rightfully deter customers when most existing products don&#x27;t have that label. The government performs its testing to check if it&#x27;s harmful, prioritizing based on which new products are expected to be popular, and once published their results go on the label one way or the other.If the company wants to get rid of the untested label or not have it present at release they can pay for expedited evaluation and go to the front of the line, but all popular products get tested relatively quickly and so untested products are suspect, and products evaluated as unsafe then have to be labeled as unsafe.> And the result is that smoking has fallen a lot more slowly than predicted and millions of people have died.As compared to the times when we&#x27;ve prohibited other substances and people all stopped using them immediately? reply lmm 4 hours agorootparent> Maybe the trace amounts aren&#x27;t enough to matter, but the consequences can be dire so they&#x27;re cautious. Isn&#x27;t this supposed to be about safety?Safety should be about safe outcomes, not about maximising the number of warnings.> They only added nuts to the product after you prohibited them from being conservative. And they&#x27;re being atypically conservative because the \"dangerous\" label isn&#x27;t applicable to most of their customers who they then don&#x27;t have to worry about being deterred.There&#x27;s nothing atypical about it. They&#x27;re finding the cheapest way to avoid liability and they genuinely don&#x27;t care whether that means \"being conservative\" or poisoning their customers, and it&#x27;s not going to result in good outcomes for the customers.> Why is the company even involved in the process? They produce a new product and it initially gets a label that says it hasn&#x27;t been tested, which will rightfully deter customers when most existing products don&#x27;t have that label. The government performs its testing to check if it&#x27;s harmful, prioritizing based on which new products are expected to be popular, and once published their results go on the label one way or the other.Presumably you&#x27;re going to campaign for the massive increase in taxation that would be necessary to enable the government to do testing comparable to what&#x27;s currently done in any remotely reasonable timeframe? (And some kinds of testing simply can&#x27;t be done fast - if you want to test for negative after-effects that may take years to show up, there&#x27;s no way to make that not take years).> As compared to the times when we&#x27;ve prohibited other substances and people all stopped using them immediately?As opposed to market consensus on what was expected. And yeah, frankly, banning substances generally does reduce consumption; not to zero, but to significantly less than without the ban. reply ben_w 13 hours agorootparentprev> But people with allergies don&#x27;t disregard the labels, they buy a different product.And sometimes you get people like me, who eat yoghurt without checking the ingredients because you shouldn&#x27;t need to, only to then find out that for some crazy reason American food companies put beef gelatine into theirs.For me vegetarian is a choice rather than mandatory, but if you rely on \"common sense\" people will die, and have died. It&#x27;s happened with surprise nuts, despite that one being well known. reply AnthonyMouse 12 hours agorootparent> And sometimes you get people like me, who eat yoghurt without checking the ingredients because you shouldn&#x27;t need to, only to then find out that for some crazy reason American food companies put beef gelatine into theirs.They made a product and told you what was in it. You&#x27;re not required to read the ingredients first but you have the opportunity to. Are you proposing that we ban beef gelatin?> if you rely on \"common sense\" people will die, and have died. It&#x27;s happened with surprise nuts, despite that one being well known.But what are you even suggesting here? That you can&#x27;t make a product with nuts if someone might not expect it, even if you labeled it? reply ben_w 12 hours agorootparent> Are you proposing that we ban beef gelatin?Although I would in general, that wasn&#x27;t the point being made in that comment. The point was: nobody expects surprises.People mostly don&#x27;t read lists to confirm the absence of things they think would be crazy to find.Like boiled cow bone and skin derivatives in yoghurt.> But what are you even suggesting here?The specific thing that I actually said, with no extra hidden implications between the lines: common sense gets people killed. reply AnthonyMouse 12 hours agorootparent> common sense gets people killed.That isn&#x27;t a policy proposal.If you&#x27;re in a cornfield next to a farm road that only sees one truck every six months, common sense says you&#x27;re not at a busy intersection, but if you step into the road without looking and there is a truck, that&#x27;s not the truck&#x27;s fault. You can be cautious all the time or you can take a risk once in a while; it&#x27;s your choice because it&#x27;s your life.It&#x27;s also not clear how it applies to the topic. If you went to the store and asked for some MDMA and they gave you some MDMA, you are not going to be surprised that the contents is MDMA. That&#x27;s not why it&#x27;s banned. reply djur 10 hours agorootparentprev> Like boiled cow bone and skin derivatives in yoghurt.Yogurt is already made out of bovine bodily fluids. Why is it so shocking and disgusting for another bovine product to be used in it as well? reply Retric 13 hours agorootparentprev> You&#x27;re assuming that people would disregard the labels.People do disregard labels including those with allergies.> If the label was only on products with a significant risk of causing cancer from ordinary use, it would be rare and people wouldn&#x27;t ignore it. In other words, if it was only on the products that would otherwise be banned.Ahh, but the risks are high enough that companies will still put that label on everything unless companies where required to only put such a label on products with significant risk which then gets back to regulators. reply AnthonyMouse 12 hours agorootparent> People do disregard labels including those with allergies.Exception that proves the rule.The purpose of the law is to protect people who act within reason. If you have an allergy and don&#x27;t read the label, that&#x27;s on you, not the company or the government.> Ahh, but the risks are such companies will still put that label on everything unless companies where required to only put such a label on products with significant risk which then gets back to regulators.The entire point is that \"regulators say you have to label this\" and \"regulators say you cannot buy this even with informed consent\" are two different things. reply Retric 7 hours agorootparent> “regulators say you have to label this” and “regulators say you cannot buy this even with informed consent” are two different thingsThey are the same issue, because labels get applied even when not needed which destroys informed consent.Allergies cover a huge range of sensitivities. People with quite severe allergies can consume small quantities and not notice when someone else with the exact same allergies just in a more severe form would die from consuming it. Thus ‘may contain nuts’ isn’t informed consent what’s needed is a sliding scale of risks not CYA language on basically every package. reply AnthonyMouse 5 hours agorootparentSo the labeling requirements need a sliding scale. There still isn&#x27;t anything to ban. reply Retric 2 hours agorootparentNot just a sliding scale but an accurate sliding scale with inaccurate labeling resulting in a ban.However, allergies aren’t universally harmful. There’s no compelling reason to allow food products with high levels of heavy metals. reply riversflow 12 hours agorootparentprev> The purpose of the law is to protect people who act within reason.This is just flat out wrong, and pretty gross.The purpose of the law is to protect people. Not white people, not land-owning people, not smart people, not literate people, not able-bodied people, not \"reasonable\" people. People. Full stop.Assuming people are reasonable is a recipe for disaster, and ablest. Perhaps one day someone you know will get dementia, or have a stroke, or get macular degeneration, or any of the number of ailments that can relieve you of your ability to read and comprehend long texts, lists, and warnings, then maybe you will understand how ridiculous this view is. reply AnthonyMouse 11 hours agorootparentI hope your argument isn&#x27;t that only white people can exercise reason.If you have a mental illness you can go to the store and buy rat poison and eat it. The law doesn&#x27;t address this by prohibiting rodenticides. If you think you can fly and jump off the roof of a parking structure, the government can&#x27;t disable gravity.Acting within reason in that context is getting treatment, which is a whole different set of laws. reply riversflow 11 hours agorootparentMy argument is that you are picking a specific group and saying the law is only for them.>If you think you can fly and jump off the roof of a parking structure, the government can&#x27;t disable gravityThe law can make it so you have guardrail on your roof if it is publicly accessible. The law can also make you put up suicide guards if it&#x27;s really a problem, all of my favorite bridge have them now.> The law doesn&#x27;t address this by prohibiting rodenticides.Rat poison has actually been getting more scrutiny lately, the traditional pellet form was banned this year in favor of bricks in the US, and non-professional exterminators are limited to buying it a pound at a time. Also, rats are a real pressing problem that is being handled with rat poison. Without it, we go back to food security problems related to controlling pest populations. The same can&#x27;t be said in reverse, we don&#x27;t have a real, pressing problem with an overabundance of safety. reply AnthonyMouse 9 hours agorootparent> My argument is that you are picking a specific group and saying the law is only for them.I&#x27;m saying that people can make mistakes and incur the consequences of those mistakes. The only way to prevent this is to remove all choice.This has nothing to do with whether you have some kind of disability. Have someone read it to you, use a magnifying glass, look it up on the internet with a screen reader, buy it from a store you trust not to carry controversial products, do as you like.> The law can make it so you have guardrail on your roof if it is publicly accessible. The law can also make you put up suicide guards if it&#x27;s really a problem, all of my favorite bridge have them now.Guardrails are for preventing accidents, not purposeful action. You can&#x27;t convert the entire world into a padded room. Suicide guards are a political maneuver meant to demonstrate something being done when politicians don&#x27;t want to address underlying causes, not any kind of solution when there are an unending number of other bridges or tall buildings etc.Their purpose is to prevent enough people from jumping off the same bridge for a newspaper to put a morbid number in a headline, when they should be addressing why those people wanted to jump.> Rat poison has actually been getting more scrutiny lately, the traditional pellet form was banned this year in favor of bricks in the US, and non-professional exterminators are limited to buying it a pound at a time.Excellent example of regulation created by the need of legislators to be seen doing something even when nothing needs doing.Poisons aren&#x27;t rare. You can also buy a bottle of methanol, or various cleaning solvents, petroleum products, coolants etc. Many over the counter drugs are fatal in high doses.Someone could drown, in water. Which is also fatal if you drink too much. Or too little.Danger is everywhere and it&#x27;s fine.> The same can&#x27;t be said in reverse, we don&#x27;t have a real, pressing problem with an overabundance of safety.That&#x27;s exactly what we have. Safety measures with body counts. Mandating inaction in cases of uncertainty is a harm in every case where something is better than nothing. reply Retric 11 hours agorootparentprevThis isn’t about extremely dumb behavior, this is about extreme consequences for reasonable actions.If you walk up to a food truck you shouldn’t need to worry about long term mercury exposure from a single lunch. But the same is true if you happen to eat the same item from the same truck for 30 years.The maximum allowable exposure from food is very different between those two cases. But the second case isn’t unreasonable so that’s what the standard should be set for. reply AnthonyMouse 10 hours agorootparentIt seems like the main issue here is that the level of \"informed\" has to scale with the level of danger and surprise. If the product is bread and \"wheat\" is listed as an ingredient, someone with a gluten allergy can be reasonably expected to suss this out. If the product is a granola bar and it contains shellfish, maybe this should be separately noted and not just somewhere in the middle of the ingredients list. If the product contains unsafe levels of mercury, the words \"This Product Contains Unsafe Levels Of Mercury\" better be featured at least as prominently as the name of the product. reply Exoristos 10 hours agorootparentprevDo you really have any idea what a body of laws would look like that treated the public as though everyone has \"dementia, ... a stroke,\" and \"macular degeneration\"? reply VBprogrammer 12 hours agorootparentprevYou are being extremely naive I&#x27;m afraid. People with allergies have to disregard labels every day. Almost everything edible in the UK had these labels.I just looked at the back of the chocolate wrapper I just ate and it \"may contain nuts, eggs and peanuts.\" None of those things are ingredients and the warning is just there to prevent a law suit. My friend who has a severe allergy to eggs and nuts would eat it - otherwise he&#x27;d have a very bland diet indeed. replyRobotToaster 14 hours agorootparentprev> Someone has to decide what substances safe and prevent them from sold.Why?If someone buys deadly nightshade, and gets deadly nightshade, why should the government care? reply iakh 14 hours agorootparentI&#x27;m assuming you agree the FDA shouldn&#x27;t allow somebody to sell deadly nightshade to somebody that doesn&#x27;t know that nightshade is deadly, but then how do you tell the person that knows the nightshade is deadly apart from the person that doesn&#x27;t know that the nightshade is deadly? reply bell-cot 14 hours agorootparentprevIs the product&#x27;s seller paying for the \"recipient&#x27;s\" ER visit, hospitalization, autopsy, or any other possible externalities of the purchase? reply djur 10 hours agorootparentprevA regulatory state where a government agency has to decide whether every product is sold in a way that accurately describes its risk to the consumer is going to be bigger, more expensive, and more intrusive than one where sufficiently dangerous products are banned outright. reply Eji1700 14 hours agorootparentprevBasically for the same reasons they don&#x27;t let you buy other toxins&#x2F;dangerous materials with almost no alternative use? reply growse 12 hours agorootparentprevThe government&#x27;s got to pay for the road the ambulance drives you on when you stop breathing. reply ben_w 13 hours agorootparentprevMy mum was a big believer in homeopathy and Bach flower remedies.The homeopathic sodium chloride and silicon dioxide sugar tablets probably didn&#x27;t hurt me, but given how dumb Bach flower remedies are it&#x27;s entirely possible she randomly and unwittingly dosed me with a small quantity of ground up something in the Solanaceae family.Governments care because well meaning hippy parents who don&#x27;t know any better feeding snake oil to their kids gets headlines in newspapers. reply msla 12 hours agorootparentAnd this is something the \"Freedom!\"-yelpers don&#x27;t mention: Yes, adults can be \"Free!\" to do crappy and dangerous things to themselves, but when it&#x27;s parents poisoning children, you have to be pretty damned sociopathic to only consider how the rights of the parents are being infringed by regulation. I honestly think some people consider children to be property. reply AnthonyMouse 4 hours agorootparentThis is assuming the parents are rubes and the government is competent, ignoring the cases when it&#x27;s the other way around.In practice parents and the government agree most of the time because it&#x27;s established science that no one contests, and cases where the government got it wrong are a large class of exceptions. Then people see the government forcing its rules even when they&#x27;re in the wrong and lose faith in the whole system, including the general consensus. Then you get more counter-culture types fooling around with weird plants.Whereas in the absence of coercion, the people who are right when the government is wrong are able to openly prove it without being punished, which allows the government to improve its recommendations more rapidly, which reduces how often their recommendations are wrong and thereby the number of people disregarding them wholesale after watching them be incompetent pigheaded bullies. reply chithanh 2 hours agorootparentWith the established science thing many counterexamples exist, also recent ones. We are now seeing bad outbreaks of preventable disease in undervaccinated communities, because parents increasingly subscribe to unscientific antivax theories.Or corporal punishment, where scientific consensus since 1990s is that it is harmful. The countries which have banned it since did so ahead of change in public opinion.There are times when the government is wrong, but it is by far more right than wrong. Thanks to government intervention we saw childhood mortality drop from the high levels in previous centuries, and letting parents just do their thing would eliminate much of that progress. reply CapitalistCartr 12 hours agorootparentprevThe Libertarian view is that children are property, in that the gov&#x27;t. should not interfere in child-rearing. reply diob 12 hours agorootparentprevYeah, these folks are basically naive libertarians (I know, repetitious). There&#x27;s a middle ground, yet they go slippery slope and think the government is going to take their freedoms. reply diob 14 hours agorootparentprevI mean, can&#x27;t you take this to the extreme and see why it is a bad point of view. Anything is sell-able as long as we slap a warning label on it. That seems like a recipe for disaster, right? We sold a highly radioactive substance to Jim, and endanger more than Jim.Consequences are often far beyond the individual, and I think folks believe they&#x27;re too smart to get caught in the fallout of someone else&#x27;s decisions. Oops, Karen from HR brought in deadly nightshade muffins to share (\"small amounts are said to be good for the liver, I heard it on my favorite podcast!\").There&#x27;s a middle ground here, where if it&#x27;s dangerous enough, we don&#x27;t allow it to be sold. It&#x27;s not one way or the other. That&#x27;s dangerous thinking in and of itself. reply AnthonyMouse 6 hours agorootparent> We sold a highly radioactive substance to Jim, and endanger more than Jim.Gasoline + air is a high explosive. Most fluids at a hardware store are poisonous and some of them taste sweet. The MSDS for the things under your sink will tell you all the ways they can destroy you.You can have hydrofluoric acid send to your front door. It can kill someone if you spill it on them, but it also has legitimate uses and is such a simple compound that there is no point in prohibiting it because anyone can make it themselves.Dangerous things are widely available and everywhere and it&#x27;s rarely a problem.> Oops, Karen from HR brought in deadly nightshade muffins to share (\"small amounts are said to be good for the liver, I heard it on my favorite podcast!\").https:&#x2F;&#x2F;www.amazon.com&#x2F;Belladonna-Seeds-Atropa-belladonna-Fl...> There&#x27;s a middle ground here, where if it&#x27;s dangerous enough, we don&#x27;t allow it to be sold.Many of the things all around us are even more dangerous than the things that have been banned.If you ask someone to choose a central example of things they think should be banned, they&#x27;ll often start with military explosives like C-4. Military explosives are designed to be stable. You have to use a blasting cap to set them off because the last thing you want is unintentional detonation.If you fill your house with propane or natural gas, the slightest spark from anything will vaporize the entire building and everyone inside. Natural gas is dramatically more dangerous than C-4.But C-4 is scarier because Hollywood shows it being used in a different context, and that&#x27;s how politics decides what&#x27;s banned.And once you get into the banning things business (because you have to ban C-4, don&#x27;t you?), people relentlessly want to add more things to the list. Which doesn&#x27;t happen in any more principled a way. reply IG_Semmelweiss 13 hours agorootparentprev>>>> Someone has to decide what substances safe and prevent them from sold.That&#x27;s an odd take.Where do these uncorruptible angels live ? Who are they? Who put them there?Because we all know you are not corruptible, its always the other guy, right?What about by rights , by the way ? reply LoganDark 12 hours agorootparentprev> Someone has to decide what substances safe and prevent them from sold.Plenty of substances are risky, but can be worth the risk. For example, psychedelics, for the wrong person or in the wrong situation, can cause psychotic episodes or lasting trauma, but psychedelic therapy has already been legalized in at least 1 US state, because it can also be extremely helpful.I&#x27;m still not able to buy it and take it home (at least legally), but in my honest opinion, I should be. reply psychlops 14 hours agorootparentprev\"A business should only be permitted to exist if the government allows it.\"What could go wrong? reply kayodelycaon 13 hours agorootparentThat’s a bit of a stretch. You’re not allowed to start a business selling cocaine.You’re not allow to start an airline without adhering to regulations.You’re not allow to sell certain unapproved pharmaceuticals or medical devices.This is a relatively narrow scope. reply AnthonyMouse 12 hours agorootparentPharmaceuticals and medical devices have life and death implications. But prohibiting a life-saving product is just as deadly as allowing an unsafe one, and there are existing mechanisms that punish the sellers of dangerous products (it comes out and they lose their customers and get sued).This comes from a facet of human psychology: If you do something and people die then you&#x27;re a murderer, but if you do nothing and people die you&#x27;re allowed to shrug and go home. This may be a reasonable heuristic when deciding whether you should do something but it isn&#x27;t when deciding whether to prevent someone else from doing something. reply psychlops 10 hours agorootparentprevI didn&#x27;t make a judgement, was just pointing out the slippery slope of your argument. If you place someone in charge of allowing things to come to market, particularly those in the role of safety, their safest option will always be to say no. reply davidthewatson 11 hours agorootparentprevThe problem is that some medical devices are approved despite their being demonstrably deadly as they are designed, manufactured, shipped, and used without sufficient oversight by the governing body of apologists put in place to oversee them. This pattern has only worsened since therac 25. reply chaxor 10 hours agorootparentprevListing what is in a product isn&#x27;t necessarily as easy as one might think.Certainly if an elemental analysis is required to ensure that the heavy metal content is lower than 1 ppb, it means something like a comprehensive SEM-EDX is required for every single batch. This should be required to avoid things like not noticing the enormous addition of lead chromate into turmeric, but it does require caring a bit about quality, and caring about quality in this way won&#x27;t occur in a free market economy without some checks.The examples of this are everywhere, even in things as basic as water. If you ever want to worry yourself, learn a bit about characterization techniques for determining the amount of heavy metals or organic molecules (\"forever chemicals\") are in water to ppt levels. It&#x27;s astounding how much different techniques will provide wildly different answers, and it&#x27;s unclear which method to believe.When you look closely enough, it can get pretty scary how little we know about what is in our products. reply 2devnull 13 hours agorootparentprevI disagree. I think the best generic argument against the FDA is that government isn’t very capable of doing the many things we want it to. I would love perfect security when it comes to foods, drugs and supplements but even with regulations a lot of bad stuff slips through. Imo, that’s a better argument than that the fda keeps us from having nice things. The fda fails to protect us because perfect security isn’t possible, and past a certain point it’s all diminishing returns if not actually counterproductive (consider the effects of prohibition). reply pfisherman 8 hours agorootparentprevSorry, I do not quite follow. FDA regulates the marketing of drugs, biologics, medical devices, etc. They do not regulate the practice of medicine. Your doctor can prescribe whatever they want “off label”.So for example, manufacturers cannot market erbitux as a cure for migraine headaches because no sponsor has submitted an application to FDA with compelling evidence that it is safe and effective for that particular indication. However, your doctor can still prescribe it for migraines if they so choose. Whether your insurance will pay for it is a different story. reply AnthonyMouse 8 hours agorootparent> Your doctor can prescribe whatever they want “off label”.They can prescribe a drug which is not FDA approved, can they?You also have the question of which drugs need a prescription or are considered a controlled substance, which is certainly government regulation regardless of whether or not the regulatory agency is the FDA. reply pfisherman 7 hours agorootparent> They can prescribe a drug which is not FDA approved, can they?Yes they can. They can give you whatever medical advice or prescribe whatever regimen they want. They could tell you to drink bleach and the FDA would be powerless to do anything about it.I think the strongest argument for you would be a drug approved in another country; but not in the US. Your doctor can still prescribe it; and under the right conditions that prescription can allow you to obtain the drug in a foreign country and bring it back to the US.https:&#x2F;&#x2F;www.fda.gov&#x2F;consumers&#x2F;consumer-updates&#x2F;5-tips-travel... reply morkalork 9 hours agorootparentprevIf the people advocating for this position aren&#x27;t in favour of full legalization of narcotics they&#x27;re complete hypocrites. If you want a total free for all of \"anything accurately labeled is a-okay, let the consumer weight the risk&#x2F;reward\", then I don&#x27;t want to hear a peep from the \"moral majority\" about my vices. reply wredue 14 hours agorootparentprev>doesn’t require any government interactionDude what? Government around the world are constantly catching corporations for lying on their product lists.As for controlled substances, on this topic is a completely fine line which I’d probably tend to agree is not treaded properly. There are risk trade offs to allowing open markets on classes of drugs.With that said, the massive propaganda campaigns corporations get up to completely subvert that risk, and 100% leaves consumers uninformed even with the proper information at their fingertips: as a major example, the opioid crisis, leaded fuels, leaded paints, carcinogenic materials handling. I mean, the list really goes on and on.The issue with the FDA has time and time and time again been demonstrated to be how toothless it is. Corporations constantly ignore regulation for billions in profits, only to receive a sternly worded letter and MAYBE a 0.01% of profits fine. reply nickff 14 hours agorootparentGovernments around the world are terrible at &#x27;catching corporations for lying&#x27; in any way. There are manifold examples in every regulatory field, in every country. Examples include Wirecard, Theranos, Volkswagen, Johnson & Johnson talc, etc. In most cases, the regulators are handed the evidence, and take a long time to do anything about it.In my mind, the question is whether the massive regulatory burdens which protect incumbents and inhibit liberty are worth it. This is not an all-or-nothing question, and might be answered field-by-field, but regulators have not covered themselves in glory. reply wallaBBB 13 hours agorootparentThe list of caught ones is immensely longer. It’s a cat and mouse game, it doesn’t really stop. Big pharma spends a lot of money on training the employees on how not to get caught. I worked 5 years in big pharma and it took me almost a year to understand why are the constantly repeating compliance and fair practice trainings. Giving examples how others failed, etc. Those were not there to tell you not to do it, but what to watch out for. And the sale targets and incentives are there to motivate you to cross the lines. I’m just grateful I was not in sales but application training.Btw how is a government responsible for Theranos? There was never a product there, just promises burning VC money. Wirecard is more a failure of trusted independent auditors (one of the big 4) that failed to do a proper international audit. reply nickff 13 hours agorootparentThe FDA was the regulator for Theranos&#x27; products, which were used by customers, and the SEC was the regulator for Theranos&#x27; securities.https:&#x2F;&#x2F;theconversation.com&#x2F;how-theranos-faulty-blood-tests-...https:&#x2F;&#x2F;www.sec.gov&#x2F;litigation&#x2F;litreleases&#x2F;lr-24069Wirecard was actually a much worse regulatory failure in that the regulator attempted to prosecute the reporters which revealed the affair. Not only did the regulator fail to uncover either side of Wirecard&#x27;s illegal behaviour, they went after the people who did.https:&#x2F;&#x2F;www.ft.com&#x2F;content&#x2F;4ebd9032-d3d1-4a9e-976c-d1235448e... reply AnthonyMouse 14 hours agorootparentprev> Government around the world are constantly catching corporations for lying on their product lists.Obviously you have to interact with the government if they catch you lying. You&#x27;re not intended to lie.The point is that you can have a labeling requirement and businesses can comply with it without having to make regulatory filings or prohibiting products.> There are risk trade offs to allowing open markets on classes of drugs.Which is why you have labeling requirements. This is cocaine, it&#x27;s highly addictive, you probably want to try ibuprofen first. reply 1920musicman 16 hours agoparentprevI searched for all products mentioned in the letter - they are all gone. Amazon is quick to react to such public letters to pretend that they are a responsible company.Saying that, the search returns hundreds of other supplements in the same category, with similar nonsensical names. They are certainly attempting to play wack-a-mole. reply ssgodderidge 15 hours agorootparentI think the speed to remove the noted items isn’t suspect; it’s what I would expect a responsible company to do in this scenario.However, I am curious to see how Amazon handles the other drugs. Seems like pausing the sale of the entire category is the right call reply 1920musicman 15 hours agorootparentThe category these supplements were listed under is \"Sports Nutrition Endurance & Energy Products\" with some legitimate products listed under it. I doubt Amazon would delist the entire category. But also, something tells me that sellers would just list products under a different category without any meaningful consequences.E.g. these or similar tainted supplements could be listed under \"Health, Household, and Body Care\" (a very broad category that already has products like \"stripfast5000 Fire Bullet Capsules with K-CYTRO for Women and Men\" listed under it), etc. reply treprinum 14 hours agorootparentprevAmazon bans all sellers that ever attempt to sell&#x2F;list anything Amazon bans even if the ban was not made public (unless they pay their \"consultants\" closely connected to managers to unban them of course). reply pardoned_turkey 14 hours agoparentprevWell, on the flip side: the whole reason these are sold is that the FDA is preventing the substance from being sold OTC. This is not an example of a manufacturer putting something unwanted in the product. It&#x27;s all just a wink-wink-nudge-nudge kind of a deal with willing buyers. It creates some risk of accidents, but I doubt there were any.I&#x27;m not sure the regulation here is great. As with Rx-only contraception, these regulations force patients to spend money and discuss their intimate life with a doctor for no real reason, which many people find difficult. And it&#x27;s not like you undergo thorough screening to get Viagra anyway. A doctor is not gonna say \"no\".The problem with bodies such as the FDA is that once they address grave risks, they seldom reach this point of \"OK, we fixed the problem of arsenic in patent medicine, so let&#x27;s scale back for now.\" Instead, the bureaucracies only grow. Today, far too many drugs are Rx-only and stay this way for too long. The need for prescriptions for equipment such as eyeglasses or contact lenses is hard to justify too. reply lwhi 14 hours agorootparentIt&#x27;s the job of a regulatory body to reduce risk.If wrongly prescribed equipment can cause harm, it&#x27;s very justifiable that a license scheme is put in place. reply bjt 13 hours agorootparent> It&#x27;s the job of a regulatory body to reduce risk.Sure, and the parent comment&#x27;s point was that there&#x27;s a line where further risk reduction doesn&#x27;t make sense anymore. The agency doesn&#x27;t have the right incentives to stop at that line.Plenty of very significant risks aren&#x27;t regulated to the degree that Viagra and Cialis are. You don&#x27;t need a note from a doctor or a govt-issued permit to buy kitchen knives or a table saw or a Bic lighter, for example. reply lwhi 12 hours agorootparentKitchen knives have multiple uses and discretion through education is expected as standard.Viagra and Cialis have a singular use and contraindications aren&#x27;t likely to be understood through cultural osmosis. reply stickfigure 15 hours agoparentprevGenuine question: What level of scrutiny do you think Amazon should provide here? In vaguely increasing level of detail&#x2F;effort, it could be...* Checking the published label of items for illicit content* Checking the contents of one bottle for undeclared ingredients* Checking the contents of all bottles for undeclared ingredients* Checking the contents of all pills in all bottles for undeclared ingredients...etc. I guess what I&#x27;m wondering is, what course of action do you think is reasonable for Amazon to take here? It&#x27;s easy to say \"don&#x27;t allow this to happen\"; I&#x27;m curious about what that actually translates to in practice. reply zopa 15 hours agorootparent> It&#x27;s easy to say \"don&#x27;t allow this to happen\"; I&#x27;m curious about what that actually translates to in practice.It translates into \"don&#x27;t allow this to happen,\" because any other standard can and will be gamed. So for instance testing a bottle or two at random would work fine if Amazon really does test a random and representative sample of what&#x27;s being sold, and to me that&#x27;s a reasonable level of diligence to expect. But if Amazon Testing emails the supplier: \"Please send over a batch of X MAX SUPER ENERGY so we can test if for these substances which we hope we won&#x27;t find, and make absolutely sure what you send is the same thing you&#x27;re selling!\" -- then that will work somewhat less well. There are endless ways for Amazon and sellers to wink and nod and skirt the intent of the rules, if Amazon is just checking a box for the FDA, and doesn&#x27;t actually care.The way to get Amazon to care is to hold it responsible for the outcome. Of course there will be sellers that find a way to skirt whatever process Amazon puts in place, but that needs to be Amazon&#x27;s problem. Amazon can survive taking its lumps when it messes up. reply verall 15 hours agorootparentprevSupplements should probably not be sold in a marketplace fashion by fly-by-night distributors by a major trusted brand (amazon).Businesses that sell supplements should create trusted relationships with their suppliers to not break the rules and to limit their own liability. reply AnthonyMouse 15 hours agorootparentFor products like this what you need is some entity in the destination jurisdiction responsible for asserting regulatory compliance. That doesn&#x27;t necessarily have to be Amazon -- it wouldn&#x27;t be Visa, for example -- as long as there is some domestic manufacturer or domestic importer the FDA can go after instead. And the latter is really what you want, because otherwise Amazon has to play whack-a-mole as the perpetrators just create new accounts, whereas the government could charge them with a crime to actually deter them.The only reason you&#x27;d need to go after Amazon is if they&#x27;re selling products dropshipped from another country, which they could avoid by simply requiring sellers of products meant for human consumption to have a domestic presence. They wouldn&#x27;t even have to ship from here, just have somebody here who gets arrested if they break the law. reply verall 14 hours agorootparentEvery brick and mortar store has to assert the safety and legality of everything they sell or else risk serious liability.From what I can tell, Amazon does not present itself as a farmer&#x27;s or flea market, yet it tries to limit its liability by pretending it does. To the average consumer things purchased from it come \"from amazon\", as compared to ebay which makes it much more obvious you are purchasing from a particular person or shop.Amazon really tries to have its cake and eat it too here, and it sort of blows my mind that consumer product safety regulators haven&#x27;t clamped down on this.It&#x27;s really one thing to have basically anything available on ebay&#x2F;aliexpress&#x2F;others (consumer trust is much lower) and another to be a huge retailer (just like walmart) and yet to be able to sell whatever unsafe stuff you want (unlike walmart). reply AnthonyMouse 7 hours agorootparentAmazon is kind of a third thing though. They&#x27;re a warehouse in addition to a marketplace like eBay. If you buy a thing from an auction site and it&#x27;s defective, the site might be able to get you a refund (or not, if you didn&#x27;t pay through them), but they can&#x27;t get you a replacement product unless the seller has one. The site has none to send you.Amazon will send you another one, possibly from a different seller. That&#x27;s... weird. It&#x27;s like they inverted the model where the wholesaler sells to the retailer who sells to the customer. Instead the retailer sells to the customer through the wholesaler, combining different kinds of products into a warehouse instead of splitting up a warehouse with large quantities of the same product into smaller retailers.But you still want to put things like this on the \"retailer\" because they&#x27;re the one who knows anything about the product. It&#x27;s the same reason you don&#x27;t put it on eBay or UPS or a self-storage place. And the same reason you don&#x27;t need to -- you want to shut down or punish the retailer selling the fraudulent product, not all the other retailers or the surrounding infrastructure providers. reply cool_dude85 14 hours agorootparentprev>And the latter is really what you want, because otherwise Amazon has to play whack-a-mole as the perpetrators just create new accountsHow can they just create a new account to sell supplements without thorough testing, vetting, control processes, etc. by Amazon, the business actually selling the stuff? If Amazon doesn&#x27;t have such controls in place to stop people from \"just creating new accounts\" then hold Amazon liable. reply AnthonyMouse 14 hours agorootparent> How can they just create a new account to sell supplements without thorough testing, vetting, control processes, etc. by Amazon, the business actually selling the stuff?Because they, not Amazon, are the business actually selling the stuff. Amazon is a payment processor and a warehouse provider.You go after the person who knew they were breaking the law, not their landlord or their bank or the dealership where they bought their car by accusing them of not thoroughly investigating their customers. Criminal investigations are the role of law enforcement, not private businesses. reply Animats 12 hours agorootparent> Because they, not Amazon, are the business actually selling the stuff. Amazon is a payment processor and a warehouse provider.That is legally questionable. When Amazon was losing on that issue in Pennsylvania higher courts, they settled to avoid having an on the record decision that Amazon was liable.[1][1] https:&#x2F;&#x2F;www.villanovalawreview.com&#x2F;post&#x2F;890-oberdorf-v-amazo... reply AnthonyMouse 8 hours agorootparentPolicy arguments don&#x27;t depend on what the law is in a particular jurisdiction. Laws are often malleable enough that if you can convince the judge of what should happen, they can reach the corresponding outcome. When that isn&#x27;t the case, the legislature can change the law. In either event the first step is to figure out how things ought to work and making them work that way comes after. replygiarc 15 hours agorootparentprevGNC (and likely other online supplement stores) have an online presence and likely has some QA for the products they sell. Amazon just insists on having 1,000,000+ listings for supplements rather than a more curated list. Perhaps some categories shouldn&#x27;t have endless list of products. reply lotsofpulp 13 hours agorootparentThe only QA in the \"supplement\" and \"vitamin\" business I know of is USP:https:&#x2F;&#x2F;www.quality-supplements.orgAlthough, I have no clue if USP simply rubber stamps it once time, or if they do continuous testing of the products. If I were to bet, I would say they probably do not test often enough after initial certification. reply blagie 15 hours agorootparentprevWhatever level is needed, so that if I&#x27;m buying a product made be Nestle, I know that it was made by Nestle.I think the policy mechanism here should be liability:* If I buy a counterfeit memory card on Amazon, and it loses my photos, Amazon should be liable for the cost and effort of those photos. If I am poisoned with bad medicine, Amazon should be liable for the damages.* If I spend money on 400TC cotton sheets, and get 300TC cotton&#x2F;poly blend ones.* If I write a book, and Amazon sells pirated copies, I should receive damages.* If a bad medical product injures me, or doesn&#x27;t have the intended effect, Amazon is liable (with standard astronomical damages)Critically:* It should be easy to extract those damages (Amazon can&#x27;t tie me up in court or arbitration), and when this happens at scale, this should be class action or federal &#x2F; state enforcement.* Damages should include reasonable costs of enforcement. They should also be set at a minimum at treble damages, since not all instances will be caught &#x2F; enforced.At that point, the actuaries can do their thing on reasonable level of effort Amazon should put in. That may be shutting down all fulfilment-by-Amazon, co-mingling, and marketplace sellers, very different fee structures, inspections &#x2F; enforcement, or something else. I don&#x27;t know.I actually think the most likely outcome is a verified supply chain, where Nestle (or any other manufacturer) sends to Amazon and Amazon to me with no middlemen. Vendors in compatible enforcement regimes with appropriate treaties (e.g. US and EU) are allowed in, so long as they have everything in order (corporate registration, etc.) and are selling under their own name. Vendors where the long arm of my local justice system doesn&#x27;t quite reach aren&#x27;t allowed in, at least directly, unless Amazon does a lot more scrutiny to the level to the point where I have similar guarantees about product safety, quality, environmental impact, labor laws, IP, etc.I would not set a similar bar for eBay or Aliexpress, which claim to be marketplaces and not stores. However, when I buy from Amazon, Walmart, Target, etc., I believe that I am buying from a store (even if the fine print says otherwise). I&#x27;d want a very clear distinction between the two. Part of the way Amazon got itself into deep trouble is by trying to mix the two up. If I&#x27;m shopping at a flea market, it&#x27;s caveat emptor, and those can be fun for some things. If I&#x27;m shopping at a store, I expect a certain level of trust.What is clear, though, is that Amazon isn&#x27;t self-policing, and we need regulatory enforcement. reply kayodelycaon 14 hours agorootparentprevThey don’t need to inspect individual products, but they should be able to verify anyone selling supplements is who they say they are.Verification only needs to be good enough to stop low effort fraud. This is entirely doable.They also need to ensure the product you buy comes directly from the seller you bought from.They need to prevent counterfeits from random sellers getting added to inventory of legitimate companies.Separating inventory by seller is 100% doable. My company manages it. It just costs more. reply Baldbvrhunter 15 hours agorootparentprevIt is an interesting question.How much cocaine goes via Amazon?Or ephedrine, or ecstasy... Etc reply ineedaj0b 14 hours agoparentprevI don’t want to sound like a nut job, but please look into how much the FDA hampers drug trails.If you understand how tough it is in one case, think how many trails yearly never get done because of the FDA.The amount of benefit vs. the amount of deaths caused by the FDA being slow likely means many more are deaths at the hands of the FDA than you expect.Cracking down on supplements that people take voluntary hardly seems like something I’m pleased they meddle with too. reply hibikir 14 hours agorootparentIt&#x27;s possible, and even a good idea, to say that the FDA massively overregulates drug trials, while at the same time also say that the current supplement market is almost just as massively underregulated, and would be far healthier with more oversight. Organizations, just like people, can do good and bad things at the same time.I am very happy they crack down on supplements, a kind of product that is filled with fraud and that I lack the resources to make informed purchases on. I would also be just as happy if they started cross-approving drugs with the EU and Australia. They are neither angels nor the devil. reply neaden 14 hours agorootparentprevYou&#x27;re only taking them voluntarily if they are what they say they are, if as in this case they aren&#x27;t you aren&#x27;t meaningfully taking them voluntarily. reply Tao3300 12 hours agorootparentBuying shady penis pills on the Internet is a voluntary risk. Play stupid games, win stupid heart attacks and priapisms.Though I do think Amazon should have a share of the blame. Buyer and seller are both wrong here. reply nradov 15 hours agoparentprevThe FDA does some good work, but they have no authority to specifically approve or certify most types of nutritional supplements. If you want to know what you&#x27;re actually getting and avoid contamination, then only buy supplements when have been certified by the NSF.https:&#x2F;&#x2F;www.nsf.org&#x2F;consumer-resources&#x2F;articles&#x2F;supplement-v...https:&#x2F;&#x2F;www.nsfsport.com&#x2F;Amazon.com does have their own certification program for dietary supplements, but it seems like the rules aren&#x27;t consistently enforced.https:&#x2F;&#x2F;blog.ansi.org&#x2F;anab&#x2F;requirements-sell-dietary-supplem... reply fallingknife 17 hours agoparentprevI&#x27;m certainly in favor of these regulations that require supplements and food products to accurately list ingredients. I&#x27;m also in favor of the FDA coming down hard on violators.But it seems perfectly reasonable that law enforcement should have to play whack a mole. That&#x27;s kind and of how it works with innocent until proven guilty. I&#x27;m not a fan of the whole \"you enforce it for us or we come after you\" approach. In reality what it means is that gate keepers like Amazon have to put in place policies that are much more strict than the actual rules in order to avoid even a chance of getting hit. Agencies like the FDA know this and use it as a way to put in place de facto policies that are much stricter than they could legislate. reply bumby 16 hours agorootparentI think it&#x27;s a distinction in risk philosophy. The whack-a-mole approach is \"continue until we find you unsafe\" while the other approach is \"don&#x27;t start until you prove you&#x27;re safe\". I think both approaches can be reasonable depending on the level of risk. When it comes to supplements tainted with unlisted ingredients that can have harmful or deadly effects for consumers, I personally think the latter is the better approach. reply fallingknife 16 hours agorootparentBut the risk level is very low. The stats I see show less than 20 hospitalizations and 2 deaths per year due to bad supplements. https:&#x2F;&#x2F;time.com&#x2F;5602125&#x2F;dietary-supplements-kids&#x2F; reply bumby 16 hours agorootparentThat article is just a subset of the overall data because it only focuses on those under the age of 25. [1] suggests there are almost 25,000 ER visits and over 2,100 hospitalizations per year due to supplements (although adverse reactions don&#x27;t necessarily mean tainted or poorly controlled dosage).[1] https:&#x2F;&#x2F;www.nejm.org&#x2F;doi&#x2F;full&#x2F;10.1056&#x2F;NEJMsa1504267 reply hammock 15 hours agorootparentHow many of those are due to unknown, unlabeled risks?I’m willing to be that there are far more than 25,000 ER visits a year due to OTC drugs.Sometimes the risks are labeled. Other times they aren’t. And still other times people just didn’t follow the labeled directions.You can’t assume that every supplement ER visit was because of off-label ingredients or what FDA is saying here. That’s too far of a leap. reply bumby 15 hours agorootparent>You can’t assume that every supplement ER visit was because of off-label ingredientsI already acknowledged this in the previous post.However, if you look at the rates of tainted supplements it probably isn’t a leap to assume a fair number can be attributed to unlisted ingredients. Some studies show contamination rates of nearly 60%. Again, I think the mitigation should be proportional to the risk. We might be about to debate what the acceptable threshold is (and I think most would agree it’s lower than the current data suggests) but I don’t think accuracy in labels is too big of an ask. reply hammock 15 hours agorootparent>Some studies show contamination rates of nearly 60%.And what % of \"contamination\" is dangerous ingredients (when directions are followed) vs harmless? You can’t assume that every contaminated supplement is dangerous. Fraudulent, maybe. Mislabeled, yes. reply bumby 15 hours agorootparentThose rates are from prohibited substances. Meaning there is the possibility a strong enough effect to be concerning (otherwise they wouldn&#x27;t be prohibited as a PED), but you’re correct that dosage matters too. But I already addressed that in the first post. Regardless, there is a truth in labeling standard that many believe should extend to supplements. I’m probably in that camp. If you’re not, I’d be interesting in hearing why. replywerico 16 hours agorootparentprevI totally get where you&#x27;re coming from, but the problem with enforcement-by-whack-a-mole is that some crimes are very cheap and easy to carry out and very difficult to detect and prosecute. The asymmetry means criminals are incentivized to commit those crimes, and can even become fantastically wealthy by doing so. If there isn&#x27;t an offsetting risk for them (or control), then they&#x27;re going to do it. Some of those crimes can ruin victims&#x27; lives, and in some cases (like this) people can die. We simply can&#x27;t afford to use no other enforcement strategies.A good example of where we threw out the upfront controls was COVID relief money, and that was a disaster in terms of fraud. (Admittedly a purely government program, but the same principle applies.) reply kayodelycaon 15 hours agorootparentprevFrankly, it is absolutely ludicrous to limit the FDA to telling Amazon to remove a product by name and then having to do that again each time someone resells the same product under a different name.In this case the FDA is saying everything that includes regulated medications in non-regulated products must be addressed.Seems reasonable to me. If a company completely ignores regulation, the FDA should have to power to enforce its own regulations. reply callalex 15 hours agorootparentprevInnocent until proven guilty only applies to individual people, not corporate entities. reply dragonwriter 15 hours agorootparentIncorrect, innocent until proven guilty applies generally (but, as “guilty” applies specifically to criminal law, only there, but to juridical persons as well as natural ones; but the concept is not far removed from that of due process, which applies even outside of criminal law.) reply dctoedt 11 hours agorootparent> the concept is not far removed from that of due process, which applies even outside of criminal lawSpot on. How much process is \"due\" is largely a function of the potential downside consequences of a mistake by the authorities.Examples (from U.S. law):• A police officer can briefly stop you on the street to ask a question such as \"did you see what happened?\" pretty much at will.• To detain you or search your person or property, the officer (with some exceptions) needs probable cause, in most cases confirmed by a neutral, independent judicial authority (that&#x27;s the warrant requirement).• To imprison you or fine you, the government must affirmatively establish your guilt beyond a reasonable doubt, to a neutral jury of your peers, using evidence that meets established legal standards of reliability.• In all civil cases, a claimant seeking damages must put on admissible evidence affirmatively showing facts that legally entitle the claimant to the requested relief.• In certain grave civil matters, such as claims of fraud, the claimant must prove the claim by clear and convincing evidence, the highest standard of proof in civil law. (The usual standard in civil cases is \"preponderance of the evidence,\" i.e., more likely than not.)• In some cases, the testimony of witnesses \"having an interest\" (e.g., an agenda to advance, an axe to grind, a score to settle) must be supported by corroborating evidence because the law recognizes that such witnesses can sometimes be, ahem, unreliable.Usual caution to readers: IAAL but not your lawyer. reply adolph 13 hours agoparentprevA regulatory agency was fine for a world with a finite number of trusted vendors working operating in the the agency jurisdiction. Reliable consumer owned&#x2F;operated molecular characterization is needed for a future that moves faster and farther than an agency or regulation. reply loeg 15 hours agoparentprev> As a side note, this letter is exactly why I think a regulatory agency like the FDA is absolutely necessary. This stuff can kill people and it is impossible for the average person to protect themselves.The mislabeling is certainly a problem, but really these drugs (sildenafil and tadalafil) should be over-the-counter and cheaply available on Amazon as generics. That they are not is a failure of the same FDA. They have a great safety profile and limited contraindications, comparable to many other OTC drugs. reply throw__away7391 18 hours agoprevNothing bought on Amazon should be consumed or applied topically or otherwise come into prolonged contact with your body. I learned this the hard way a few years back with some counterfeit shampoo that severely burned my scalp after a single use. reply blagie 16 hours agoparentHere&#x27;s my list of things I won&#x27;t buy on Amazon.com:- Anything which goes in or on my body (foods, medicines, etc.).- Anything which is easily knocked off (SD cards, memory, SSDs, etc.)- Bed sheets (oddly enough, you&#x27;ll often get lies on materials and fabric)- Thing I need reliably &#x2F; reliably on-time (I cancelled Prime after several shipping issues)Since I cancelled Prime, things added to this list include:- Most digital content (they added ads to music I paid for as soon as I cancelled Prime, and many newer Kindle books are hard to back up into non-DRMed formats)Most of what I will buy on Amazon are generic gizmos, like kids toys, cables, generic keyboards, battery chargers, basic tools, and basic clothing (kids pyjamas and that sort of thing). However, it&#x27;s no longer my first source. I&#x27;ll go Aliexpress, eBay, and Walmart first.I now have Walmart&#x27;s equivalent of Prime instead. It&#x27;s not great, but it&#x27;s better. There is zero customer service, but shipping times are more accurate than Amazon, generally faster, and they&#x27;ll actually let you know if something is running late or early (which is huge, if you&#x27;re planning a project). Walmart&#x27;s selection is worse than Amazons, but I&#x27;m hoping it will catch up. I also am starting to go to local stores again. reply jetanoia 14 hours agorootparentAgreed with your post – except on the “Kids pajamas” – they should probably be reclassified under the “Anything which goes in or on my body” list you made.Whether it’s undisclosed flame retardants, toxic dyes, or other harmful substances, kids bodies are generally more susceptible to harm via environmental pollutants. Such harms may not be at all obvious in the short term, but could still be very harmful over the long-term.I wish I knew of a vastly superior option (ie, safer option) for buying kids or baby clothes. (Anyone have suggestions on this?)That said, I believe Amazon is probably at the riskier end of this spectrum vs.traditional stores because of their distributor-centric structure.Basically, if a harmful product were to receive any negative press, it would more easily be equated with a single company&#x2F;seller from another country, and probably one with an odd-sounding name.With a more traditional brick and mortar store, the product may be sourced from the exact same producer, but the reputation hit will be greater to the brick and mortar store, because the customer tends to equate the product more closely with the the store itself. Often, they present themselves to the public as the “seller” of the product whereas Amazon will more give the presentation of “distributor” on behalf of “(_insert_generic_inscrutably-named_foreign_corporation_name)”. Fly-by-night seems an apt description for these companies most the time.This seemingly reduced level of accountability is the biggest problem I have with trusting them but it’s not the only one; it’s just compounded by the often fraudulent reviews, their practice of taking down authentic but critical reviews, and of selling counterfeits – even occasionally when one orders via a “Prime” option, or fulfilled by Amazon, or seemingly buys an item directly via the manufacturer’s Amazon ‘store’.Of course there are many other issues as well but these are a few that have created headaches for me in the past to the point that I now avoid them for most purchases. reply blagie 8 hours agorootparentCan you name any specific instance where people were harmed by toxins in clothing? The skin tends to be a pretty good barrier. Creams and cosmetics are often designed to penetrate it, but clothing fits within my risk profile. I come in contact, skin-ways, with all sorts of nastier things day-to-day, even when working on my house.My concerns around clothing have more to do with durability, comfort, and quality. For example, bad pyjamas can be not very breathable or collect sweat.That&#x27;s pretty easy to tell, though.So that&#x27;s shady clothing fits in my risk profile.As a footnote: I&#x27;m not implying it should fit into your risk profile; I&#x27;d avoid based on hypothetical risks like lead contamination, PFAS, and other hypotheticals if I earned perhaps 50% more than I do today. I&#x27;m asking since if there are specific instances (not of contamination but of harm), I might change my risk profile. reply Alupis 10 hours agorootparentprev> I&#x27;ll go Aliexpress, eBayDo you know who sells on Aliexpress, and to a large extent on eBay? The very same shady Chinese&#x2F;Indian sellers peddling counterfiet products you are seeking to avoid by not shopping on Amazon.Aliexpress was literally set up as a direct-to-US-market Chinese factory marketplace, which results in 99% counterfeit and knock-off products being pushed directly to consumers. reply hunter2_ 10 hours agorootparentSure, but it&#x27;s obvious, unlike Amazon where you get duped. So if you want a real name brand product you shop at none of the above, and if you want cheap junk you go to AliExpress. There&#x27;s not a large reason to roll the dice on something in between (Amazon) unless you want junk with much faster shipping and streamlined returns (at double the price of AE). reply Alupis 9 hours agorootparentIt&#x27;s just super ironic the parent post said they avoid counterfeits and knock-offs by shopping on Aliexpress. Aliexpress is basically counterfeit and knock-off central...On Amazon, look at who the seller is. If it&#x27;s Amazon or the actual manufacturer, you&#x27;ll be fine. For the rest, you need to do some additional research on the seller&#x27;s business - but it&#x27;s understandable to not want to do that effort.With that said, you can&#x27;t actually lose on Amazon. Just return the item for a full refund and select \"not as advertised\" as the return reason. You&#x27;ll get a free pre-paid return label, or drop off at a local store. I&#x27;ve bought plenty of expensive electronics on Amazon without reasonable fear. reply blagie 8 hours agorootparent> It&#x27;s just super ironic the parent post said they avoid counterfeits and knock-offs by shopping on Aliexpress. Aliexpress is basically counterfeit and knock-off central...It doesn&#x27;t. You read it wrong. Read it again. reply Alupis 3 hours agorootparentUh...> Here&#x27;s my list of things I won&#x27;t buy on Amazon.com> However, [Amazon.com is] no longer my first source. I&#x27;ll go Aliexpress, eBay, and Walmart first. reply hunter2_ 1 hour agorootparentYou said \"the parent post said they avoid counterfeits and knock-offs by shopping on Aliexpress\" which I&#x27;m afraid is incorrect given that the post in question said \"Amazon [is] no longer my first source [for] generic gizmos, [...] I&#x27;ll go Aliexpress, eBay, and Walmart first\" (if I may rearrange for clarity without changing the meaning).\"Generic gizmos\" roughly equates to \"counterfeits and knock-offs\" in my book, and that commenter isn&#x27;t trying to avoid them when shopping at AliExpress and formerly Amazon. That&#x27;s separate from the situations where they do want to avoid knock-offs, listed separately from all of this. reply1905 15 hours agorootparentprev> - Bed sheets (oddly enough, you&#x27;ll often get lies on materials and fabric)It makes you wonder about all those masks people were buying online and wearing 14+ hours a day reply blagie 12 hours agorootparentI don&#x27;t wonder. Fakes and knock-offs were rampant on Amazon -- for a long time, more common than genuine product. People tested them. That&#x27;s especially true for brand names like 3M.I only bought through trusted supply chains. My masks were made in South Korea, and I bought directly from the manufacturer&#x27;s US-based distributor. reply giarc 15 hours agorootparentprevHate to break it to you, but Aliexpress is likely less reliable than Amazon (or have the exact same products). eBay is likely the same and Walmart allows 3rd party sellers so it&#x27;s pretty much the same as Amazon unless you source the products curated by Walmart. reply blagie 15 hours agorootparentI think you misread my comment.I&#x27;ll go to Aliexpress and eBay first for: \"kids toys, cables, generic keyboards, battery chargers, basic tools, and basic clothing.\"I have the exact same list for them as for Amazon. I&#x27;ll go there first for those products since Aliexpress has much better prices than Amazon. eBay has better seller reviews. I certainly wouldn&#x27;t buy food or medicine from them, though, or even bedsheets or SD cards.Walmart is a lot better than Amazon. They do have a search filter to disable marketplace sellers, and if buying from Walmart proper, I do trust them to still get supply chains adequately right. Amazon did okay here too, even a half-decade ago; it crapped out with Covid and never fixed itself. Perhaps Walmart will crap out too, but it hasn&#x27;t yet. reply 1905 15 hours agorootparent> I&#x27;ll go to Aliexpress and eBay first for: \"kids toys, cables, generic keyboards, battery chargers, basic tools, and basic clothing.\"I do too. I don&#x27;t use Amazon Prime and can usually find the same products for cheaper on ebay with free shipping. The competition among other sellers is greater on ebay so the price will often be lower. It is difficult to do returns though reply giarc 7 hours agorootparentprevYes you are correct. I thought you meant you now go to Ali&#x2F;eBay&#x2F;walmart.com as first choice for any purchase. My mistake. reply emayljames 15 hours agorootparentprevFrom much experience, AliExpress customer service is 100x better than Amazon. Very prompt refunds and dispute resolutions. reply blagie 15 hours agorootparentI agree with the math, but not the spirit.0*100 = 0.Aliexpress is fast, efficient, but completely random and automated in resolution. Products from Aliexpress are great 50% of the time, non-working or not shipped 10% of the time, and somewhere in between 40% of the time. It&#x27;s cheap and complete roulette.That&#x27;s okay for a lot of things. reply RobotToaster 14 hours agorootparentprev> Bed sheets (oddly enough, you&#x27;ll often get lies on materials and fabric)Happens with clothes too, had to return several linen shirts for this reason. reply y-c-o-m-b 16 hours agoparentprevI stopped buying health and beauty stuff on Amazon altogether due to the counterfeits or people returning items by replacing the actual product with something else which I ultimately end up getting. I had too many instances with vitamins and such where the labels and seals were sketchy, damaged, or didn&#x27;t exist. Same with shampoos, lotions, face-washes, soaps, detergents, hot-tub supplies, etc. Reporting to the seller or Amazon was a pointless exercise as often times they&#x27;d shrug it off. reply enlightenedfool 17 hours agoparentprevDid you take any action at all? Sounds serious enough for legal action. reply inetknght 16 hours agorootparent> Did you take any action at all? Sounds serious enough for legal action.A lot of people don&#x27;t have time, or money, to risk legal action. reply asquabventured 16 hours agoparentprevI had the similar experience back in 2018... Led to temporary hair loss (I remember my hair falling out in tufts) from what I believe was counterfeit hair gel (it smelled different from same product I&#x27;ve used for years). Stopped using the product from Amazon and only ever order from reputable sites like Sephora and Nordstrom now.Amazon has lost all of my business for consumable goods. It&#x27;s not worth the convenience to risk my own or my families health. Fuck &#x27;em. reply blibble 16 hours agoparentprevor left plugged into the mains unattended reply jejeyyy77 13 hours agoparentprevwhat about brand name items? reply Xeoncross 17 hours agoprevI purchased a vitamin c supplement that was pure white and odorless&#x2F;tasteless. I posted a review and photos. Obviously fake filler of some sort, Amazon removed my review as inaccurate when it&#x27;s obvious whatever was in those capsules was not ascorbic acid of any kind.They also claimed to have zinc (greenish) and elderberry (purple). It&#x27;s not safe for Amazon to let any random exporter put stuff for sale without any sanity checks. reply GuB-42 15 hours agoparentAscorbic acid is cheap in bulk, something like less than $5&#x2F;kg if you buy it by the ton. Maybe cheap enough to be the filler.And it is white and odorless in its pure form. It does have an acidic taste though, because it is an acid. I have some of it in my kitchen (pure bulk powder, not bought on Amazon) and I can tell you by experience. reply BizarroLand 9 hours agorootparentDid you get it to make cheese sauce with? reply GuB-42 8 hours agorootparentActually, I got it for making bread, because someone recommended it to me. I didn&#x27;t really test the difference though. I didn&#x27;t know about cheese sauce, I may take a look at it.I have 250g of the stuff, probably enough to last me a lifetime considering the quantities used. reply nostromo 14 hours agoparentprevVitamin C is odorless and pure white, so maybe your review was right to be removed.It’s not tasteless of course, it’s sour. reply asquabventured 16 hours agoparentprevWhen I reviewed a product as obviously fake they also removed my review. The company as a whole really kind of disgusts me now. reply wombat-man 16 hours agorootparentyeah they are kind of the last resort for me at this point when buying online. reply nblgbg 14 hours agoprevRecently, I noticed that Amazon removed the listed ingredients for regular items like toothpaste, shampoos, and mouthwashes. Initially, I thought it was a mistake for a couple of items I regularly buy, but it seems they have removed this information for many products. I&#x27;m not sure what the intention behind this change is. My suspicion now (after this article) is that they are doing it deliberately, allowing them to claim",
    "originSummary": [
      "The FDA has issued a warning letter to Amazon for distributing products that violate federal regulations.",
      "The products contain undisclosed pharmaceutical ingredients, including sildenafil and tadalafil, which can have dangerous side effects.",
      "The FDA considers these products to be unapproved drugs, as they do not meet the definition of dietary supplements, and has requested a written response from Amazon addressing the violations. Additionally, specific products stored in Amazon's fulfillment centers, such as WeFun Capsules, have been recalled due to the presence of undisclosed drug ingredients."
    ],
    "commentSummary": [
      "The need for improved regulation and oversight of product safety, particularly in the supplement industry, is being discussed.",
      "Amazon is specifically mentioned as a platform where supplements with undisclosed ingredients are sold.",
      "Concerns are raised about the lack of regulation in the industry and the responsibility of platforms like Amazon to ensure the safety and legality of the products they sell."
    ],
    "points": 478,
    "commentCount": 382,
    "retryCount": 0,
    "time": 1703776044
  },
  {
    "id": 38793206,
    "title": "Finding Stability: How Cold-Blooded Software Projects Adapt and Thrive",
    "originLink": "https://dubroy.com/blog/cold-blooded-software/",
    "originBody": "Patrick Dubroy About Archives Cold-blooded software December 28, 2023 It’s 2004 and I’m sitting in one of the largest lecture halls at my university. I’m a computer science major but I’m taking a course on natural history — plants and animals — as one of my electives. The professor tells us that he’s brought something from home, something he found in his freezer. He reaches down behind his desk, and then holds his arm out to show us what’s sitting in his palm: a baby painted turtle. We’re learning about cold-blooded animals, and it turns out that painted turtle hatchlings are pretty special — they’re one of only a few species that can survive being frozen. Now, the lecture hall is pretty modern for 2004: there’s an overhead camera at the podium, where the professor can write notes that are displayed on screens around the hall. But instead of writing notes, he puts the turtle under the camera and starts his lecture. Over the next hour, we watch this little reptile slowly come to life as the professor lectures. The first movements were nearly imperceptible. An eyelid cracking open, a leg inching forward. By the end of the lecture, the turtle has moved about halfway across our screens. I’ll never forget that class, because it’s where I really understood what it means for an animal to be cold blooded. You see, warm-blooded animals — like humans or mice — have a stable body temperature that stays within a pretty narrow range. For humans, it’s around 37 degrees Celsius. A few degrees higher or lower and we’re in big trouble. Cold-blooded animals like the painted turtle can adapt their metabolism to the temperature around them. They’re active when it’s warm out, and as the environment (and their bodies) get cooler, they move more slowly. Very few of them can survive being frozen like the baby painted turtle can. I see a similar dichotomy with software projects. Certain technology decisions lead to projects that are warm-blooded: everything is great when there’s constant motion on the project, generating heat. But put warm-blooded software in the freezer, and you’ll pull out a corpse six months later. Maybe your CI isn’t working because one of the services you depend on got bought or ran out of money. You add a new dependency and find yourself needing to upgrade your compiler. Another package you depend on is deprecated, and doesn’t work with the latest version of the compiler. Some projects are different. You work alone, make some changes when you’re inspired, and then don’t touch it again for another year, or two, or three. You can’t run something like that as a warm-blooded project. There’s not enough activity to keep the temperature up. A cold-blooded project is like the baby painted turtle. You can freeze it for a year and then pick it back up right where you left off. A cold-blooded project uses boring technology. The build and test scripts don’t depend on external services that might change, break, or disappear entirely. It uses vendored dependencies. The software that powers this blog is cold-blooded. The first commit was nearly twelve years ago — a simple little static site generator to replace my out-of-date Wordpress installation: commit 68949229ad426c1e8795ee640808db9987ab30ab Author: Patrick DubroyDate: Sun Jan 8 19:10:24 2012 +0100 Add templates and site-building script. It’s written in Python (2, not 3). It depends on four third-party modules, and they’re all committed to the project repository. Everything runs locally, and I deploy the result with rsync over ssh. And boy am I glad I decided to do it that way. I’ve made a few small improvements over the years, but otherwise it’s continued to work without modification. And I fully expect that it will still be working in another twelve years. 🐢 👉 You might also want to check out the discussion on Hacker News. Thanks to Thorsten Ball for helpful suggestions on this post. © 2006–2023 Patrick Dubroy · Powered by Butterbrezn and Augustiner. Subscribe: RSS · email",
    "commentLink": "https://news.ycombinator.com/item?id=38793206",
    "commentBody": "Cold-blooded softwareHacker NewspastloginCold-blooded software (dubroy.com) 455 points by arbesman 20 hours ago| hidepastfavorite161 comments __natty__ 11 hours agoIn the Node & JavaScript ecosystem, there is the web framework Express. The current major version 4.x.x branch is over 10 years old [1]. And yet it powers so many apps in the ecosystem (over 17M downloads every week [2]). It lacks some features and is not the most performant [3]. But me and coworkers I talked with, like it because it allows for quick, stable development and long-term planning without worrying about drastic API changes and lack of security patches for older versions. Even better stability is provided with Go where we can run over 10-year-old programs thanks to a mix of wide stdlib and the promise of compatibility. [4][1] https:&#x2F;&#x2F;www.npmjs.com&#x2F;package&#x2F;express?activeTab=versions[2] https:&#x2F;&#x2F;www.npmjs.com&#x2F;package&#x2F;express[3] https:&#x2F;&#x2F;fastify.dev&#x2F;benchmarks&#x2F;[4] https:&#x2F;&#x2F;go.dev&#x2F;doc&#x2F;go1compat reply steve_adams_86 6 hours agoparentThis gave me a pleasant shock. I&#x27;d forgotten that Express has been around for 13 years now. It was considered a super shoddy, pretend-programmer piece of junk by many when it first arrived (largely by virtue of being written in JavaScript). Since then I&#x27;ve helped a lot of companies build cool stuff that made real money with it. It&#x27;s probably serving a crazy number of requests these days.I write a lot of things with Go now instead, but I&#x27;m still totally content to build things with Express. It&#x27;s good software, generally speaking. reply rareitem 6 hours agoparentprevExpress v5 is allegedly coming out in the near future (https:&#x2F;&#x2F;github.com&#x2F;expressjs&#x2F;express&#x2F;issues&#x2F;4920) reply ranger207 4 hours agoprevThe only software that can go without updates is software that gets it right the first time If you&#x27;re building software for yourself, this is relatively easy. Your tastes probably won&#x27;t change that much even after a decade. You can probably ignore minor problems like using an O(n^2) function where there exists an O(n) because n is small. If you&#x27;re writing software that other people will use, then that&#x27;s where the problems come in. Other people don&#x27;t have the same requirements as you, and may have a large enough N that the O(n) function makes it worth it, for example.But regardless of if you&#x27;re writing for yourself or someone else, sometimes you just can&#x27;t foresee problems. Maybe it crashes processing files larger than a gig, but because you&#x27;ve only ever used filesThere is constant breaking changes with it (both runtime and tooling).I&#x27;m not sure what you mean. Python 2 to 3 was a breaking change, but that was just one change, not \"constant breaking changes\".If you stick with one major version no old code breaks with a new minor version (e.g., you can run old 2.x code under 2.7 just fine, and you can run old 3.x code under 3.12 just fine). The minor version changes can add new features that your old code won&#x27;t make use of (for example, old 3.x code won&#x27;t use the \"async\" keyword or type annotations), but that doesn&#x27;t make the old code break. reply bryancoxwell 8 hours agorootparentThe Python 3.11 release notes have a pretty lengthy list of removed or changed Python and C APIs followed by guidance on porting to 3.11, which implies potentially breaking changes to me. reply pdonis 7 hours agorootparentIt&#x27;s a fair point that Python minor version changes can and do involve removal of previously deprecated APIs, which would break old code that used those APIs.That said, when I look through the 3.11 release notes you refer to, I see basically three categories of such changes:- Items that were deprecated very early in Python 3 development (3.2, for example). Since 3.3 was the first basically usable Python 3 version, I doubt there is much legacy Python 3 code that will be broken by these changes.- Items related to early versions of new APIs introduced in Python 3 (for example, deprecating early versions of the async APIs now that async development has settled on later ones that were found to work better). These sorts of breaking changes can be avoided by not using APIs that are basically experimental and are declared to be so (as the early async APIs were).- Items related to supporting old OSs or data formats that nobody really uses any more.So, while these are, strictly speaking, breaking changes, I still don&#x27;t think that \"constant breaking changes\" is a good description of the general state of Python development. reply jujube3 5 hours agorootparentPython&#x27;s changes between releases are not limited to removing deprecated APIs. Sometimes semantics changes in breaking ways, or new reserved words crop up, etc. etc. It certainly is Russian roulette trying to run python code on any version other than the one it was written for. reply davedx 1 hour agorootparentprevThe problem is `requirements.txt` doesn&#x27;t do anything with downstream dependencies. There&#x27;s nothing like a shinkwrap&#x2F;lockfile in python. Even if you pin dependencies to exact versions, if you check your project out in a new environment and run pip install -r requirements.txt, you can end up with different, broken downstream dependencies.This happens a lot for me. reply lmm 7 hours agorootparentprev> you can run old 2.x code under 2.7 just fineNo you can&#x27;t lol. There were major breaking changes from 2.4 -> 2.5, and smaller but still breaking ones for 2.5 -> 2.6. reply pdonis 7 hours agorootparent> There were major breaking changes from 2.4 -> 2.5, and smaller but still breaking ones for 2.5 -> 2.6.Such as? reply lmm 6 hours agorootparentI don&#x27;t remember the specifics, but I spent at least a few weeks early in my career fixing a Python 2.3 codebase to run on 2.4. reply pdonis 6 hours agorootparentIn the GP you said 2.5 and 2.6, not 2.4.That said, I remember all three of those transitions (2.3 to 2.4, 2.4 to 2.5, and 2.5 to 2.6), and I remember changing Python code to make use of new features introduced in those transitions (for example, using with statements and context managers in 2.5), but those aren&#x27;t breaking changes; the old code still worked, it just wasn&#x27;t as robust as using the new features. reply lmm 5 hours agorootparent> In the GP you said 2.5 and 2.6, not 2.4.Sorry, yes, fixing a 2.4 codebase to run on 2.5. It was a while ago. replyAeolun 11 hours agoparentprev> java where 10 year old code still runs fine with their modern toolingI don’t know about you. But even when I try to run 3 year old Java code with a new SDK it’s always broken somehow. reply hmottestad 11 hours agorootparentI maintain Eclipse RDF4J and I noticed this too between Java 9 and 11, after that there haven’t been any breaking things except for having to bump a maven plugin dependency. We make sure to stay compatible with both Java 11 and whatever is the newest version by running our CI on both Java versions. reply vbezhenar 5 hours agorootparentprevI write Java for 15 years and I&#x27;ve yet to encounter a single JVM bug or incompatibility. It&#x27;s always application to blame.The only exception is Java 9 which removed some Java EE dependencies from JDK, but that&#x27;s easily solved.Just an example: I&#x27;m running application on Java 21 which uses Oracle 9i driver that was compiled for Java 1.4 and it works fine. reply ahoka 11 hours agorootparentprevYears? After one year, something amongst the hundreds of deps will have a horrible security vulnerability and updating means breaking changes. reply lmm 7 hours agorootparentprevAny examples? Actual Java code works all the way back to 1996 IME, the only thing that breaks is reflection nonsense, usually Spring. reply 8n4vidtmkvmk 5 hours agorootparentI had major issues running Bitcoin Armory after a few years, which was rather problematic. reply bombcar 6 hours agorootparentprevYou can run Minecraft 1.7.10 and mods on Java21 with surprisingly few changes needed.https:&#x2F;&#x2F;github.com&#x2F;GTNewHorizons&#x2F;lwjgl3ify reply blakesley 11 hours agoparentprevRegarding Python: Really? Obviously v2-to-v3 was an absolute fiasco, but since then, it&#x27;s been great in my personal experience.Don&#x27;t get me wrong: Python hasn&#x27;t overcome its tooling problem, so there&#x27;s still that barrier. But once your team agrees on a standardized tool set, you should be able to coast A-OK. reply toasted-subs 10 hours agorootparentYeah but that&#x27;s expected given it went from a fancy scripting language to one that supports modern features of other programming languages.I had a similar problem moving apps from earlier versions of Java a decade ago. reply fliggertiggy 1 hour agoparentprevI&#x27;ve had good luck with sveltekit (a framework for js sites). They&#x27;ll break something with a new version but provide you with very helpful compile errors pointing to a migration script to re-write any old code.C# has been pretty good as well.But at some point you&#x27;re going to need data for your app and that&#x27;s where you&#x27;ll get surprised. That Yahoo currency data you used to get for free or Wikipedia&#x27;s mobile API? Gone ten years later. reply zx8080 1 hour agorootparentC# with AWS lambda can easily become a trap. Once a dotnet version comes EoL on lambda, good luck with a DB schema (specifically, EF). reply neonsunset 1 hour agorootparentWhat? You can just update EF Core without ever having to do a migration of the schema. It just works. Also, the versions that are EoL today are a really poor choice for Lambda anyway because you really do want to be using Native AOT + Dapper AOT with it instead. reply JohnFen 12 hours agoparentprevAgreed. This is one of the reasons why I avoid using Python whenever possible. Python code I write today is unlikely to be functional years from now, and I consider that a pretty huge problem. reply pdonis 8 hours agorootparent> Python code I write today is unlikely to be functional years from nowI don&#x27;t see why not. I have been writing Python for close to 20 years now, and I still have code from my early days with it that runs just fine today. reply heurist 12 hours agorootparentprevThis really depends on your environment. I&#x27;ve been running legacy Python servers continuously for 4+ years without breaking them or extensively modifying them because I invested in the environment and tooling around it (which I would do for any app I deploy). I can&#x27;t say I want to bring all of them entirely up to date with dependencies, but they&#x27;re still perfectly functional. Python is pretty great, honestly. I rarely need to venture into anything else (for the kind of work I do). reply JohnFen 12 hours agorootparent> I&#x27;ve been running legacy Python servers continuously for 4+ yearsThat seems like a large amount of effort to make up for a large language deficiency. My (heartfelt) kudos to you!I might have been willing to do the same if I used Python heavily (I don&#x27;t because there are a number of other things that makes it very much \"not for me\") -- but it would still represent effort that shouldn&#x27;t need to be engaged in. reply aragilar 7 hours agorootparentI think it depends on which bits of the Python ecosystem you&#x27;re interacting with. The numerical&#x2F;scientific parts have been quite stable for at least the past 10 years (new features have been added, but only small amounts of removal), compared with the more \"AI\" focused parts where I wouldn&#x27;t trust the code to be working in 6 months. Similarly, some web frameworks are more stable than others. I think also over the last 5 or so years, there&#x27;s been a change in maintainers of some larger projects, and the new maintainers have introduced more breaking changes than their predecessors.None of this is implied by the language, I think it&#x27;s much more driven by culture (though I think the final dropping of support for Python 2 did give some maintainers an excuse to do more breaking changes than was maybe required). reply toasted-subs 10 hours agorootparentprevAny problem you have with python could be used describe Amy nodejs application.Your just trying to get people to use languages which are less useful in practice (other than Java). reply frizlab 11 hours agoparentprevGo is not a good example either. Some times ago we tried compiling a code a few years after it was made, it did not work. Someone who actually knew the language and tooling tried and said there was a migration to be done and it was complicated. I have not followed the subject up close but in the end they just abandoned IIRC. reply from-nibly 5 hours agorootparentYeah I had go code that didn&#x27;t last a year before it couldn&#x27;t be compiled. reply gwd 8 minutes agorootparentI don&#x27;t think I&#x27;ve ever had that problem -- particularly once they introduced Go modules, which specified a specific version of a library dependency. My experience is like the author&#x27;s: Even old random packages I wrote 5 years ago continue to Just Work when used by new code.There are a handful of functions that they&#x27;ve deprecated, which will produce warnings from `go vet`; but that doesn&#x27;t stop `go build` from producing a usable binary. reply fbdab103 4 hours agorootparentprevCurious to me as backwards compatibility has been one of the strengths I hear Go proponents cheer.Any idea what were the APIs that were likely to cause problems? reply TheNewAndy 11 hours agoparentprevDepends if you mean python the interpreter or python the language. e.g. pypy still supports python2 and has \"indefinite support\" or something along those lines.Even the cpython2 interpreter is no longer supported by the original authors, but that doesn&#x27;t stop someone else from supporting it. reply toasted-subs 10 hours agoparentprevI have yet to have a python versioning issue, but with java I&#x27;ve had tons.Worst of all, it&#x27;s always a clear \"use the latest version and it will work\". With python using the latest version almost always works, and you can import the previous functions if you really want to use the new interpreter on old code.Maybe this is because most of the time with python you barely have external libraries. Similar to Java, but in Node.js it&#x27;s like asking for trouble. reply 082349872349872 14 hours agoparentprev2 and 3 don&#x27;t really differ that much; true cold-blooded software doesn&#x27;t care which it&#x27;s being run with. reply js8 11 hours agoprevI work on IBM mainframe (z&#x2F;OS). Nothing else I know comes as close in maintaining backwards compatibility as IBM. Microsoft (Windows) is the 2nd, I think. Linux (kernel) ABI has the 3rd place, but that&#x27;s only a small portion of Linux ecosystem.Almost everything else, it&#x27;s just churn. In OSS this is common, I guess nobody wants to spend time on backward compatibility as a hobby. From an economic perspective, it looks like a prisoner&#x27;s dilemma - everybody externalizes the cost of maintaining compatibility onto others, collectively creating more useless work for everybody. reply userbinator 9 hours agoparentIn OSS this is common, I guess nobody wants to spend time on backward compatibility as a hobby.There&#x27;s a lot of chasing new and shiny in OSS but I wouldn&#x27;t say that applies to everyone... just look at the entire retrocomputing community, for example. Writing drivers for newer hardware to work on older OSes is not unheard of. reply js8 41 minutes agorootparentThese are amazing people, and I like what they do, but they are still chasing the churn of newer hardware, which also introduces incompatible APIs. The incompatible APIs are often introduced commercially for business and not technical reasons, either out of ignorance, legal worries or in order to gain a market advantage. reply matheusmoreira 6 hours agoparentprev> I guess nobody wants to spend time on backward compatibility as a hobby.Getting paid to maintain something certainly goes a long way. Without payment, I suppose it comes down to how much one cares about the platform being built. I deliberately chose to target the Linux kernel directly via system calls because of their proven commitment to ABI stability.On the other hand, I made my own programming language and I really want to make it as \"perfect\" as possible, to get it just right... So I put a notice in the README that explains it&#x27;s in early stages of development and unstable, just in case someone&#x27;s crazy enough to use it. I have no doubt the people who work on languages like Ruby and Python feel the same way... The languages are probably like a baby to them, they want people to like it, they want it to succeed, they just generally care a lot about it. And that&#x27;s why mistakes like print being a keyword just have to be fixed. reply vrnvu 17 hours agoprevone thing I’ve noticed is that many engineers, when they’re looking for a library on Github, they check the last commit time. They think that the more recent the last commit is, the better supported the library is.But what about an archived project that does exactly what you need it to do, has 0 bugs, and has been stable for years? That’s like finding a hidden gem in a thrift store!Most engineers I see nowadays will automatically discard a library that is not \"constantly\" updated... Implying it&#x27;s a good thing :) reply fabian2k 16 hours agoparentA library can only stay static if the environment it&#x27;s used in is also static. And many of the environments in which modern software is developed are anything but static, web frontends are one example where things change quite often.A library that can stand entirely on its own might be fine if it&#x27;s never updated. But e.g. a library that depends on a web frontend framework will cause trouble if it is not updated to adapt to changes in the ecosystem. reply LeifCarrotson 11 hours agorootparentEven if the environment it&#x27;s used in is not static, the world it lives in is not static.I work in industrial automation, which is a slow-moving behemoth full of $20M equipment that get commissioned once and then run for decades. There&#x27;s a lot of it still controlled with Windows 98 PCs and VB6 messes and PXI cards from the 90s, even more that uses SLC500 PLCs.But when retrofitting these machines or building new ones, I&#x27;ll still consider the newness of a tool or library. Modern technology is often lots more performant, and manufacturers typically support products for date-on-market plus 10 years.There&#x27;s definitely something to be said for sticking with known good products, but even in static environments you may want something new-ish. reply adonovan 16 hours agorootparentprevAlso, even a very stable project that is \"done\" will receive a trickle of minor tweak PRs (often docs, tests, and cleanups) proportional to the number of its users, so the rate of change never falls to zero until the code stops being useful. reply derefr 14 hours agorootparentI think this is also in inverse proportion to the arcane-ness of the intended use of the code, though.Your average MVC web framework gets tons of these minor contributors, because it&#x27;s easy to understand MVC well enough to write docs or tests for it, or to clean up the code in a way that doesn&#x27;t break it.Your average piece of system software gets some. The Linux kernel gets a few.But ain&#x27;t nobody&#x27;s submitting docs&#x2F;tests&#x2F;cleanups for an encryption or hashing algorithm implementation. (In fact, AFAICT, these are often implemented exactly once, as a reference implementation that does things in the same weird way — using procedural abstract assembler-like code, or transpiled functional code, or whatever — that the journal paper describing the algorithm did; and then not a hair of that code is ever touched again. Not to introduce comments; not to make the code more testable; definitely not to refactor things. Nobody ever reads the paper except the original implementor, so nobody ever truly understands what parts of the code are critical to its functioning &#x2F; hardening against various attacks, so nobody can make real improvements. So it just sits there.) reply josephg 13 hours agorootparentprevI disagree. Tiny libraries can be fine indefinitely. For example this little library which inverts a promise in JavaScript.I haven’t touched this in years and it still works fine. I could come in and update the version of the dependencies but I don’t need to, and that’s a good thing.https:&#x2F;&#x2F;github.com&#x2F;josephg&#x2F;resolvable reply xmprt 13 hours agorootparentI think total number of commits is probably a good metric too. If the project only has 7 commits to begin with then it&#x27;s unlikely to get any more updates after it&#x27;s \"done\". But a 10 year old project with 1000 commits where the last commit was 3 years ago is a little more worrying. reply diggan 16 hours agorootparentprev> so the rate of change never falls to zero until the code stops being usefulNon-useful software changes all the time ;) Also, Useful software stands still all the time, without any proposed changes. reply tedunangst 13 hours agorootparentprevThis is a very strange example. Browsers have fantastic backwards compatibility. You can use the same libraries and framework you used ten years ago to make a site and, with very few exceptions, it will work perfectly fine in a modern browser. reply crabmusket 11 hours agorootparentBrowsers themselves aren&#x27;t usually the problem. While sometimes they make changes, like what APIs are available without HTTPS, I think you&#x27;re right about their solid backwards compatibility.What people really mean when they talk about the frontend is the build system that gets your (modern, TypeScript) source code into (potentially Safari) browsers.Chrome is highly backwards compatible. Webpack, not so much.This build system churn goes hand-in-hand with framework churn (e.g. going from Vue 2 to 3, while the team have put heaps of effort into backwards compatibility, is not issue-free), and more recently, the rise of TypeScript and the way the CJS to ESM transition has been handled by tools (especially Node). reply ferbivore 9 hours agorootparentprevBrowsers have decent backwards compatibility for regular webpages, but there’s a steady stream of breakage when it comes to more complex content, like games. The autoplay policy changes from 2017-2018, the SharedArrayBuffer trainwreck, gating more and more stuff behind secure contexts, COOP&#x2F;COEP or other arbitrary nonsense... all this stuff broke actual games out in the wild. If you made one with tools from 10 years ago you would run into at least a couple of these. reply kazinator 12 hours agorootparentprevThe problem arises when you&#x27;re not using old libraries and frameworks. You&#x27;re using new stuff, and come across an old, unmaintained library you&#x27;d like to use.Hey, it uses the same frameworks you&#x27;re using --- except, oh, ten years ago.Before you can use it, you have to get it working with the versions of those frameworks you&#x27;re using today.Someone did that already before you. They sent their patch to the dead project, but didn&#x27;t get a reply, so nobody knows about it. reply hiatus 12 hours agorootparentprevYou absolutely can do that, but it is likely the final output will have numerous exploitable vulnerabilities. reply xmprt 13 hours agorootparentprevAs someone who migrated a somewhat old project to one which uses a newer framework, I agree with this. The amount of time I spent trying to figure out why and old module was broken before realizing that one of it&#x27;s dependencies was using ESM even though it was still using CJS... I don&#x27;t even want to think about it. Better to just make sure that a module was written or updated within the last 3 years because that will almost certainly work. reply zer00eyz 14 hours agorootparentprev>> web frontends are one example where things change quite often.There is a world of difference between linux adding USB support and how web front ends have evolved. One of them feels like they are chasing the latest shiny object... reply pmichaud 17 hours agoparentprevEven though it’s not strictly true, checking for recent updates is an excellent heuristic. I don’t know the real numbers, but I feel confident that in the overwhelming majority of cases, no recent activity means “abandoned”, not “complete and bug free”. reply hw 1 hour agoparentprevIt’s extremely rare to have projects be considered stable for years without any updates. Unless there are no external dependencies, uses very primitive or core language constructs, there’s always updates to be had - security updates, EOLs are common examples. What works in Python 2 might not work in Python 3Software needs to be maintained. It is ever evolving. I am one of those that will not use a library that has not been updated in the last year, as I do not want to be stuck upgrading it to be compatible with Node 20 when Node 18 EOLs reply diggan 16 hours agoparentprevI remember seeing a bunch of graphs which showed how programming languages have changed over time, and how much of the original code is still there.It showed that some languages were basically nothing like the 1.0 versions, while others had retained most of the code written and only stuff on top.In the end, it seems to also be reflected in the community and ecosystem. I remember Clojure being close&#x2F;at the top of the list as the language hardly does breaking changes anymore, so libraries that last changed 5 years ago, still run perfectly well in the current version of the language.I guess it helps that it&#x27;s lisp-like as you can extend the core of the language without changing it upstream, which of course also comes with its own warts.But one great change it did to me, is stop thinking that \"freshness\" equals \"greatness\". It&#x27;s probably more common I use libraries today that basically stopped changed since some years ago, than I use libraries that were created in the last year. And without major issues. reply EnigmaFlare 1 hour agoparentprevI chose a .Net library (Zedgraph) about 10 years ago, partly for the opposite reason. It was already known to be \"finished\", what you might call dead. It reliably does what I want so I don&#x27;t care about updates. I&#x27;m still using the same version today and never had to even think about updating or breakages or anything. It just keeps on working.Mind you, it&#x27;s a desktop application not exposed to the internet, so security is a little lower priority than normal. reply derefr 14 hours agoparentprevDepends on the language.Some languages have releases every year or two where they will introduce some new, elegant syntax (or maybe a new stdlib ADT, etc) to replace some pattern that was frequent yet clumsy in code written in that language. The developer communities for these languages then usually pretty-much-instantly consider use of the new syntax to be \"idiomatic\", and any code that still does things the old, clumsy way to need fixing.The argument for making the change to any particular codebase is often that, relative to the new syntax, the old approach makes things more opaque and harder to maintain &#x2F; code-review. If the new syntax existed from the start, nobody would think the old approach was good code. So, for the sake of legibility to new developers, and to lower the barrier to entry to code contributions, the code should be updated to use the new syntax.If a library is implemented in such a language, and yet it hasn&#x27;t been updated in 3+ years, that&#x27;s often a bad sign — a sign that the developer isn&#x27;t \"plugged into\" the language&#x27;s community enough to keep the library up-to-date as idiomatic code that other developers (many of whom might have just learned the language in its latest form from a modern resource) can easily read. And therefore that the developer maybe isn&#x27;t interested in receiving external PRs. reply Uehreka 16 hours agoparentprevBy zero bugs do you mean zero GitHub issues? Because zero GitHub issues could mean that there are security vulnerabilities but no one is reporting them because the project is marked as abandoned. reply diggan 16 hours agorootparent> By zero bugs do you mean zero GitHub issues?Or, the library just have zero bugs. It&#x27;s possible, although probably pretty uncommon :) reply duped 14 hours agoparentprev> But what about an archived project that does exactly what you need it to do, has 0 bugs, and has been stable for years? That’s like finding a hidden gem in a thrift store!Either the library is so trivial to implement myself that I just do that anyway, which doesn&#x27;t have issues w.r.t maintenance or licensing, or it&#x27;s unmaintained and there are bugs that won&#x27;t be fixed because it&#x27;s unmaintained and now I need to fork and fix it, taking on a legal burden with licensing in addition to maintenance.Bugs happen all the time for mundane reasons. A transitive dependency updated and now an API has a breaking change but the upstream has security fixes. Compilers updated and now a weird combination of preprocessor flags causes a build failure. And so on.The idea that a piece of software that works today will work tomorrow is a myth for anything non-trivial, which is why checking the history is a useful smell test. reply derefr 14 hours agorootparentConsider an at-the-time novel hashing algorithm, e.g. Keccak.• It&#x27;s decidedly non-trivial — you&#x27;d have to 1. be a mathematician&#x2F;cryptographer, and then 2. read the paper describing the algorithm and really understand it, before you could implement it.• But also, it&#x27;s usually just one file with a few hundred lines of C that just manipulates stack variables to turn a block of memory into another block of memory. Nothing that changes with new versions of the language. Nothing that rots. Uses so few language features it would have compiled the same 40 years ago.Someone writes such code once; nobody ever modifies it again. No bugs, unless they&#x27;re bugs in the algorithm described by the paper. Almost all libraries in HLLs are FFI wrappers for the same one core low-level reference implementation. reply duped 14 hours agorootparentIn practice, this code will use a variety of target-specific optimizations or compiler intrinsics blocked behind #ifdefs that need to be periodically updated or added for new targets and toolchains. If it refers to any kind of OS-specific APIs (like RNG) then it will also need to be updated from time to time as those APIs change.That&#x27;s not to say that code can&#x27;t change slowly, just the idea that it never changes is extremely rare in practice. reply tedunangst 12 hours agorootparentprevKeccak is perhaps not the best example to pick. https:&#x2F;&#x2F;mouha.be&#x2F;sha-3-buffer-overflow&#x2F; reply spc476 8 hours agorootparentprevI&#x27;m checking the zlib changes file [1] and there are regular gaps of years between versions (but there are times where there are a few months between versions). zlib is a very stable library and I doubt the API has changed all that much in 30 years.[1] https:&#x2F;&#x2F;www.zlib.net&#x2F;ChangeLog.txt reply QuadmasterXLII 14 hours agorootparentprevI submit math.JS and numeric.JS. Math.JS has an incredibly active community and all sorts of commits numeric. JS is one file of JavaScript and hasn’t had an update in eight years if you want to multiply 2 30 by 30 matrices, numeric.JS works just fine in 2023 and is literally 20 times faster. reply dr_kiszonka 8 hours agoparentprevThat&#x27;s good insight.One disadvantage of archived repos is that you can&#x27;t submit issues. For this reason it is hard to assess how bug free the package is. My favorite assessment metric is how long it takes the maintainer(s) to address issues and PRs (or at least post a reply). Sure, it is not perfect and we shouldn&#x27;t expect all maintainers to be super responsive, but it usually works for me. reply bratbag 15 hours agoparentprevMost engineers have probably been bitten in the ass by versioned dependencies conflicting with each other. reply wccrawford 14 hours agorootparentAnd the other way, too, with the underlying language&#x27;s changes making the library stop working.It&#x27;s just really unlikely that a project stays working without somewhat-frequent updates. reply pizzafeelsright 14 hours agoparentprevGood point. I have also seen Great Endeavor 0.7.1 stay there because the author gave up or graduated or got hired and the repo sits incomplete, lacking love and explanation for dismissal. reply hiAndrewQuinn 16 hours agoparentprevThe Haskell community has a lot of these kinds of libraries. It comes with the territory to some extent. reply samus 14 hours agorootparentThe GHC project churns out changes at a quite high rate though. The changes are quite small by themselves, but they add up and an abandoned Haskell project is unlikely to be compilable years later. reply RhodesianHunter 12 hours agoparentprevThat&#x27;s only true for libraries with zero transitive dependencies.Otherwise you&#x27;re almost guaranteed to be pulling in un-patched vulnerabilities. reply NanoYohaneTSU 14 hours agoparentprevI&#x27;m sort of confused on where your comment is coming from. In the modern world (2023 in case your calendar is stuck in the 90s) we have a massive system of APIs and services that get changed all the time internally.If a library is not constantly updated then there is a high likely hood (99%) that it just won&#x27;t work. Many issues raised in git are that something changed and now the package is broken. That&#x27;s reality sis. reply bee_rider 13 hours agorootparentAre you suggesting that all we need to do is use 30 year old languages to free ourselves from this treadmill? That seems like an easy choice! reply troupe 15 hours agoparentprevIf you are asking yourself, \"will this do what it says it will do?\" and you are comparing a project that hasn&#x27;t had any updates in the last 3 years vs one that has seen a constant stream of updates over the last 3 years, which one do you think has a greater probability of doing what it needs to do?Now I do get your point. There is probably a better metric to use. Like for example, how many people are adding this library to their project and not removing it. But if you don&#x27;t have that, the number of recent updates to a project that has been around for a long time is probably going to steer you in the right direction more often than not. reply scruple 16 hours agoparentprevI&#x27;m generally doing that to check for version compatibility across a much broader spectrum than the level of a single library. reply matheusmoreira 6 hours agoparentprevLast commit time is a pretty good indicator that the project has someone who still cares enough to regularly maintain it.I have some projects I consider finished because they already do what I need them to do. If I really cared I&#x27;m sure I could find lots of things to improve. Last commit time being years ago is a pretty good indicator that I stopped caring and moved on. That&#x27;s exactly what happened: my itch&#x27;s already been scratched and I decided to work on something else because time is short.I was once surprised to discover a laptop keyboard LED driver I published on GitHub years ago somehow acquired users. Another developer even built a GUI around it which is awesome. The truth is I just wanted to turn the lights off because when I turn the laptop on they default to extremely bright blue. I reverse engineered everything I could but as far as I&#x27;m concerned the project&#x27;s finished. Last commit 4 years ago speaks volumes. reply kugelblitz 11 hours agoprevI&#x27;ve been maintaining my own side project. It started 12-13 years ago, with vanilla php, later rewritten with Laravel, later rewritten again with Symfony in 2017-ish. Since then I&#x27;ve had phases from 6-18 months where I had a total of 2-3 tiny commits (I was working full time as a freelancer, so I didn&#x27;t have energy to work on my side project). But then when I had time, I would focus on it, add features, upgrade and just experiment and learn.This was super valuable to me to learn how to maintain projects long-term: Update dependencies, remove stuff you don&#x27;t need, check for security updates, find chances to simplify (e.g. from Vagrant to Docker... or from Vue + Axios + Webpack + other stuff to Htmx). And what to avoid... for me it was to avoid freshly developed dependencies, microservices, complexified infrastructure such as Kubernetes.And now I just developed a bunch of features, upgraded to PHP 8.2 and Symfony 7 (released a month ago), integrated some ChatGPT-based features and can hopefully relax for 1-3 years if I wanted to.In the last 4-5 years the project has made about the same revenue as an average freelance year&#x27;s revenue, so it&#x27;s not some dormant unknown side project. reply Aeolun 11 hours agoparentI think PHP, as horrible as it feels to go back, is one example of something that’s truly backwards compatible even to its own detriment.Haven’t worked with it for years, went back to find that the horrible image manipulation functions are still the same mess that I left behind 8 years ago. reply kugelblitz 9 hours agorootparentYeah, some things are still a mess, but many things I use constantly have improved so much. Here is an excerpt of a function that shows many of the updates that I use regularly: #[AsMessageHandler] readonly class JobEditedHandler { public function __construct( private Environment $twig, private EmailService $mailer, private string $vatRate, ) {} public function __invoke(JobEdited $jobEdited): void { $this->sendNotificationToJobPublisher($jobEdited); }You have attributes, much better type-hinting, constructor property promotion, read-only properties &#x2F; classes. Additionally you have native Enums, named arguments and also smaller things such as match expressions (instead of case switch), array spread operator, null coalescing assignment operator, etc, etc.Especially in a CRUD-heavy setting like mine (I run a niche jobboard) it reduces so much boilerplate and increases type-safety, thus makes it way less error-prone. Combined with new static analyzers (phpstan, php-cs-fixer, psalm - take your pick), you find possible errors way earlier now.I think it gets a lot of inspiration from Java. Symfony gets lots of inspiration from Spring Boot. The Twig templating language is heavily related to the Django templating language. So many of the tools and concepts are somewhat battle-tested.And this is on top of the huge performance improvements in the last years.So yeah, there&#x27;s many things that are still fixable. But the improvements have been staggering. reply punkybr3wster 9 hours agoparentprevAs a person who’s considered learning more native symphony, can I ask - what was your reason moving to it from something like laravel? reply kugelblitz 8 hours agorootparentLaravel was easier to get into but once you strayed from \"The Laravel Way\", it gets quite messy.I got into Symfony by \"accident\", because a freelance colleague put me on projects that used Symfony. So for a couple of years I used Laravel and Symfony in parallel, but after a few years I decided to go full Symfony.Some of the things that were better for my use case:Many of the Laravel components are \"Laravel only\". Whereas in Symfony, you can just pick and choose the components you need - it&#x27;s very modular and extendible without forcing your hand. You don&#x27;t even need the Symfony framework and just choose the components you want.That&#x27;s how Laravel can depend on Symfony modules; but Symfony can&#x27;t depend on Laravel modules.Entities vs. Models (Data Mapper vs. Active Record): The entities in Symfony (equivalent to Models in Laravel) were just simple PHP objects. I can see what properties an entity has, I can configure directly there in a simple way. I can add my own functions, edit the constructor, etc, etc. Also: You create the properties, and the migrations were generated based on that. In Laravel, you create the migrations, and the actual model is based on going through the migration steps. This just feels odd to me.In Laravel, the Models extend the Eloquent Model class and it feels \"heavier\" and I had more trouble re-configuring some things. Plus without using an additional \"auto-complete\" generator, I couldn&#x27;t just see what the properties &#x2F; columns of the model &#x2F; table was.I also don&#x27;t like Facades (because they hide too much stuff and I have trouble figuring out the service that it actually represents).Templating: I also like that Twig is more restrictive, it forces me to think more about separating logic and the view, whereas Blade allows way more things. You don&#x27;t have to use it, but I reckon since it&#x27;s allowed, people will do so.One thing I still envy from Laravel, though, is the testing suite.This is pretty neat: $response = $this->getJson(&#x27;&#x2F;users&#x2F;1&#x27;); $response ->assertJson(fn (AssertableJson $json) => $json->where(&#x27;id&#x27;, 1) ->where(&#x27;name&#x27;, &#x27;Victoria Faith&#x27;) ->where(&#x27;email&#x27;, fn (string $email) => str($email)->is(&#x27;victoria@gmail.com&#x27;)) ->whereNot(&#x27;status&#x27;, &#x27;pending&#x27;) ->missing(&#x27;password&#x27;) ->etc() );I tried integrating it in Symfony, but it was quite messy and somewhat incompatible. That shows the above point, that it&#x27;s \"Laravel only\". It&#x27;s really nice, but not enough for me to advocate for Laravel over Symfony. reply tlhunter 17 hours agoprevI love the sentiment of this post. I absolutely hate that my recent mobile apps from only a couple years ago l now require a dozen hours to patch them up and submit updates.The author&#x27;s final point is interesting wherein they refer to their own static site generator as being cold-blooded and that it runs on Python 2. Python 2 is getting harder to install recently and will eventually make it a warm blooded project. reply ryandrake 16 hours agoparentI have a little hobby project (iOS and macOS) that I don&#x27;t regularly develop anymore, but I use it quite often as a user, and I like to keep it compiling and running on the latest OSes. It&#x27;s aggravating (and should be totally unacceptable) that every time I upgrade Xcode, I have a few odds and ends that need to be fixed in order for the project to compile cleanly and work. My recent git history comments are all variations of \"Get project working on latest Xcode\".I could almost understand if these underlying SDK and OS changes had to be made due to security threats, but that&#x27;s almost never the case. It&#x27;s just stupid things like deprecating this API and adding that warning by default and \"oh, now you need to use this framework instead of that one\". Platforms and frameworks need to stop deliberately being moving targets, especially operating systems that are now very stable and reliable.I should be able to pull a 10 year old project out of the freezer and have it compile cleanly and run just as it ran 10 years ago. These OS vendors are trillion dollar companies. I don&#x27;t want to hear excuses about boo hoo how much engineering effort backward compatibility is. reply angra_mainyu 15 hours agorootparentApple is notoriously bad when it comes to this.I used to work on a cross-platform product and Windows was relatively stable across versions, as was Linux.Macs on the other hand required a lot of branching for each version. reply dartos 16 hours agorootparentprevHardware changes over 10 years.Macs don’t even run on the same CPU architecture or support OpenGL.Sometimes things just need to change. reply beambot 16 hours agorootparentThe worst is when your virtualization environments intended to provide long-term support don&#x27;t even accomodate the \"new\" mainline hardware. Most frustrating example: Virtualbox doesn&#x27;t work on Apple M1 or M2 chipsets. reply genewitch 8 hours agorootparentwhy would it, though? Qemu (probably) works on \"M\" macs. Virtualbox is linked intimately with the underlying hardware, it&#x27;s a translation layer - even though it can do emulation, it&#x27;s x86 emulating x86.i always thought i was one of the few people that used virtualbox instead of the more popular ones; i tend to forget that there&#x27;s probably a subset of developers that still use it for the orchestration software that can use it. replyChrisMarshallNY 11 hours agoprevI wrote an SDK, in 1994-95, that was still in use, when I left the company, in 2017.It was a device control interface layer, and was written in vanilla ANSI C. Back when I wrote it, there wasn&#x27;t a common linker, so the only way to have a binary interface, was to use simple C.I have written stuff in PHP (5), that still works great, in PHP 8.2. Some of that stuff is actually fairly ambitious.But it&#x27;s boring, and has a low buzzword index. reply slaymaker1907 15 hours agoprevBesides what is stated in the article, it is also important to have an inherently secure threat model. For example, full websites are inherently warm-blooded since you are constantly dealing with attackers, spam bots, etc. However, static pages like Tiddlywiki are a lot better since you can avoid putting it on the web at all and browsers are incredibly stable platforms. reply 082349872349872 18 hours agoprevI suspect our differences in preferences for cold- vs warm-blooded projects may be related to the \"Buxton Index\" as mentioned in https:&#x2F;&#x2F;www.cs.utexas.edu&#x2F;users&#x2F;EWD&#x2F;transcriptions&#x2F;EWD11xx&#x2F;E... reply chrisweekly 17 hours agoparentCurious, I read the linked transcript to find:\"My third remark introduces you to the Buxton Index, so named after its inventor, Professor John Buxton, at the time at Warwick University. The Buxton Index of an entity, i.e. person or organization, is defined as the length of the period, measured in years, over which the entity makes its plans. For the little grocery shop around the corner it is about 1&#x2F;2,for the true Christian it is infinity, and for most other entities it is in between: about 4 for the average politician who aims at his re-election, slightly more for most industries, but much less for the managers who have to write quarterly reports. The Buxton Index is an important concept because close co-operation between entities with very different Buxton Indices invariably fails and leads to moral complaints about the partner. The party with the smaller Buxton Index is accused of being superficial and short-sighted, while the party with the larger Buxton Index is accused of neglect of duty, of backing out of its responsibility, of freewheeling, etc.. In addition, each party accuses the other one of being stupid. The great advantage of the Buxton Index is that, as a simple numerical notion, it is morally neutral and lifts the difference above the plane of moral concerns. The Buxton Index is important to bear in mind when considering academic&#x2F;industrial co-operation.\" reply apantel 16 hours agorootparentGreat concept, but isn’t it just “time horizon”? Everyone knows “time horizon”. reply Jtsummers 15 hours agorootparentNot everyone knows it, strangely, many of the (senior or junior) project management-types I work with have to be introduced to the term and concept (and if they listen it can at least resolve confusion, if not conflict, about the different priorities and behaviors of all the parties involved). But yes, they describe the same thing. reply salawat 17 hours agorootparentprevHoly shit. I am so using this as a communication clarifying tool. Nice concept. reply armchairhacker 19 hours agoprevCounterpoint: some types of software aren’t meant to last long. Even if it still builds and can be worked on later, the usecase itself may have changed or disappeared, or someone has probably come up with a new better version, so that it’s no longer worth it to continue.This probably doesn’t apply to many types of software over 6 months, but in a couple years or a couple decades. Some online services like CI or package managers will almost certainly provide backwards-compatible service until then.Another possibility is that developer efficiency improves so much that the code written 10 years ago is easier to completely rewrite today, than it is to maintain and extend.This is why I’m hesitant to think about software lasting decades, because tech changes so fast it’s hard to know what the next decade will look like. My hope is that in a few years, LLMs and&#x2F;or better developer tools will make code more flexible, so that it’s very easy to upgrade legacy code and fix imperfect code. reply iamthepieman 16 hours agoparent\"Another possibility is that developer efficiency improves so much that the code written 10 years ago is easier to completely rewrite today, than it is to maintain and extend.\"This seems completely false to me and I&#x27;m curious what has caused you to believe this as I&#x27;m a fairly imaginative and creative person yet I cannot imagine a set of circumstance that would lead someone to this conclusion.In other words, I disagree so very strongly with that statement that I wanted to engage rather than just downvote. (I didn&#x27;t btw).I agree with your first statement though and I don&#x27;t think the op is saying only make cold-blooded projects. reply dartos 15 hours agorootparentWell. I don’t know if I agree or not, but felt like playing devils advocate.take the example of game development. Trying to maintain, say, the hobbit game from the early 2000s to today would almost certainly take more work than just making a new one from scratch today (GPUs have changed drastically over the past 20 years and making simple 3d platformers with unreal is so easy, “asset flips” are a new kind of scam)Or a tool which lets people visually communicate over vast distances without specialized hardware.That was a huge lift in the 2000s when Skype was the only major player, but you can find tutorials for it now using webrtc. reply zubairq 3 hours agoprevI had to read this article a couple of times before I got it. I guess dependencies can make an app warm blooded, but Docker or containerization can also paper over some of these issues. However, whenever I choose libraries for a project I do alot of research to make sure that the libraries themselves are \"cold blooded\" too, as even one badly chosen library can cause your project to fail in 10 years time reply jes5199 5 hours agoprevI’ve got a similar one, yet to be written, about “cold computing”. How do you compute if you’re on a limited solar+battery installation? what if your CPU wakes up and you have only a couple of hours of runtime? What if you only can turn on wifi for 20 minutes a day? reply g8oz 4 hours agoparentThis sounds very interesting, please do write it up. reply hiAndrewQuinn 15 hours agoprevMost of the software I write is at least somewhat cold-blooded by this definition. My program to find the dictionary forms of Finnish words is an okay example:https:&#x2F;&#x2F;github.com&#x2F;hiAndrewQuinn&#x2F;finstemI wrote the initial draft in an afternoon almost a year ago, and from then on endeavored to only make changes which I know play nicely with my local software ecology. I usually have `fzf` installed, so an interactive mode comes as a shell script. I usually have `csvkit`, `jq`, and if all else fails `awk` installed, so my last major update was to include flags for CSV, JSON, and TSV output respectively. Etc, etc.The build instructions intentionally eschew anything like Poetry and just gives you the shell commands I would run on a fresh Ubuntu VirtualBox VM. I hand test it every couple of months in this environment. If the need to Dockerize it ever arose I&#x27;m sure it would be straightforward, in part because the shell commands themselves are straightforward.I don&#x27;t call it a great example because the CLI library I use could potentially change. Still, I&#x27;ve endeavored to stick to only relatively mature offerings. reply jollyllama 18 hours agoprevThis is why I am trying to switch as many projects I&#x27;m on as possible to HTMX. The churn involved with all of the frontend frameworks means that there&#x27;s far too much update work needed after letting a project sit for N quarters. reply mikewarot 16 hours agoparentI googled HTMX, all excited that maybe, just maybe, the browser people got their shit together and came up with a framework we can all live with, something native to the browser with a few new tags, and no other batteries required....and was disappointed to find it&#x27;s just a pile of other libraries 8( reply dartos 16 hours agorootparentEverything is a pile of libraries.It’s a pile of someone else’s code all the way down. reply diggan 16 hours agorootparentYou can also use the web platform straight up without transpilation, build tools, post-css compilation and all that jazz.Just vanilla JavaScript, CSS, HTML, some sprinkles of WebComponents. And you can be pretty sure that you won&#x27;t have to update that for a decade or more, as compatibility won&#x27;t be broken in browsers.Heck, I have vanilla JS projects I wrote 15 years ago that still render and work exactly like how they rendered&#x2F;worked when I wrote them. reply jollyllama 15 hours agorootparentIndeed, that baggage is all that I avoid by using HTMX. reply diggan 14 hours agorootparentYou do you. It&#x27;s worth knowing though that using HTMX is not vanilla JS&#x2F;HTML&#x2F;CSS, it&#x27;s literally the opposite of that. reply dartos 8 hours agorootparentHave you ever worked with just raw js?Anything more than a todo list becomes unwieldy almost instantly.Taking a small dependency to avoid that is well worth it.Taking a whole “virtual dom” may be overkill though (looking at you, react) reply kugelblitz 12 hours agorootparentprevIt&#x27;s one small dependency. Worst case, you write the library yourself.You send a request to the backend, it then sends you HTML back (all rendered in the backend using a templating language such as Django templating engine, Twig or Liquid), you insert it into a div or so.Htmx was Intercooler, worst case you create your own. But no additional scripts needed.I&#x27;ve been able to kick out Vue out because Htmx covers my use case. reply Tao3300 10 hours agorootparentprevhttps:&#x2F;&#x2F;xkcd.com&#x2F;2347&#x2F;And don&#x27;t forget the alt-text reply replwoacause 15 hours agorootparentprevNothing to be disappointed in here AFAICT, however, it’s shocking that you had to Google HTMX, seeing as it shows up on HN a few times a month at least. reply diggan 14 hours agorootparentI&#x27;m guessing the disappointing feeling come from parent saying \"Pff, I&#x27;m so tired of all these libraries that eventually update their APIs in a breaking way, so now I&#x27;m using X\" while X is just another library exactly like all the rest, and will surely introduce a breaking change or two down the line. reply jollyllama 13 hours agorootparentYou&#x27;re arguing from the abstract point of view, rather than the practical. The point is that it takes an order of magnitude more time to clone, say, a Vue project from three years ago that nobody has touched since then and try to download your dependencies and build on a new machine, as compared to an HTMX project. reply uxp8u61q 11 hours agorootparentAs if \"npm&#x2F;yarn install\" wouldn&#x27;t work for the hypothetical Vue project? A charitable interpretation of what you&#x27;re saying is that you cannot clone a vue project from three years ago, update all dependencies to the latest version, and expect that to work. But then, how is it different for HTMX, other than for the fact that 1. it&#x27;s younger 2. you don&#x27;t have the ecosystem around it to update - but that also means you&#x27;re doing less or redoing everything yourself. replyimglorp 11 hours agoprevWorth mentioning the Hare language, designed to be stable for 100 years. After they release 1.0 they don&#x27;t plan to change it beyond fixes. It&#x27;s Drew DeVault&#x27;s project.https:&#x2F;&#x2F;harelang.org&#x2F;roadmap&#x2F; reply coreyp_1 16 hours agoprevThis. This, so very much!I built my websites on Drupal 7 and have enjoyed a decade of stability. Now, with D7 approaching EOL in 1 year, I&#x27;m looking for a solution that will last another decade. There&#x27;s no reason for the EOL, either, other than people wanting to force everyone to move on to a newer version. It undoubtedly means more business for some people, as they will be able to reach out to their clients and say, \"Your website is about to be a security risk, so you have to pay to update it!\" Unfortunately, it means more work for me to support my personal projects.And why? Because someone somewhere has decided that I should move on to something newer and more exciting. But I don&#x27;t want new and exciting... I want rock solid!I&#x27;m on vacation this week. Am I learning a new hot language like Rust, Zig, Go, etc.?Nope.I have no desire to. I don&#x27;t trust them to be the same in a decade, anyway.I&#x27;m focusing on C. It&#x27;s far more enjoyable, and it&#x27;s stable. reply pxtail 1 hour agoparent> why? Because someone somewhere has decided that I should move on to something newer and more exciting. But I don&#x27;t want new and exciting... I want rock solid!Well, it also could be because someone else decided to move on to something newer and more exciting instead of dutifully maintaining 10y old free software because someone WANTS to have peace of mind on their vacation.People and companies don&#x27;t want to pay for maintenance work. I think that this is actually the main reason for all of this complaints about perceived short longevity of libraries and languages. Unfortunately entropy is a bitch, one can put up colossal amount of work up front, pyramids amount of work equivalent but eventually decay will catch up. reply edg5000 1 hour agoparentprevHow much interaction do your sites have? If you ran a little program locally that took the sitemap, and generated a static site, then you will be immune for life for those security and maintenance arguments.You can probaly pin the PHP, SQL, and webserver versions, compile them from source so that you will always have the binaries at hand. Then it will last another 1000 years.However, if you need user interaction, then you are stuck in an eternal rat race of security updates and deprecation, leading to major upgrades, leading to more security updates! reply dartos 16 hours agoparentprevEnjoyable is subjective. I can’t think of anything less enjoyable than hunting for segfaults in C.I’d call Go pretty rock solid at this point. Modern go vs decade old go isn’t very different. Maybe just the packages tools had 1 major changed.You’d get the same thing in C if your hardware significantly changes in the 10 years too. reply coreyp_1 14 hours agorootparentHaha... I agree about it being subjective! I find that I enjoy the process as much as the result. It&#x27;s like bringing order to a chaotic universe. :)The thing is, I don&#x27;t have many segfaults in C, and I find C much easier to debug and hunt down issues in than even C++ (which I also enjoy). Also, because C uses very little \"magic\", and I also know exactly what I&#x27;m getting with my code, I find it much easier to reason about.I heard a quote the other day while watching a presentation \"When you&#x27;re young you want results, when you&#x27;re old you want control.\" I think I&#x27;m on the old side now.As for Go, I genuinely don&#x27;t have anything against it, but I don&#x27;t see why I need it either. I don&#x27;t doubt that others have stellar use cases and impressive results with Go, and that&#x27;s fine, too, but I don&#x27;t sense any lack which prompts me to investigate further. I would love to learn more about it, but most of what I see online is either over-the-top (and therefore vomit-inducing) fanboyism, or otherwise unspectacular, which makes me ask \"why bother?\" reply flir 12 hours agoparentprevhttps:&#x2F;&#x2F;backdropcms.org&#x2F; ? D7 fork. If you want to stay there. reply johnnyworker 8 hours agoprevI kept making CMS as a hobby, starting with flat files and PHP, moving to MySQL.. simple things. I did it precisely because I figured if I modify and write plugins for Wordpress, I would have to keep updating them on their schedule. Especially since even back then I really liked removing things I don&#x27;t want, and while carrying over additions I created over to new versions might be easy enough, maintaining a stripped down version of something like Wordpress (even 20 years ago..) would have been impossible.I felt like a stubborn dumb ass in the early 2000s (and there was also this constant mockery of \"NIH syndrome\" in the air) but by now, I&#x27;m so glad I basically disregarded a lot of stuff and just made my own things out of the basics. And coincidentally, the last one I made has also lasted me over 12 years by now. I still love it actually, it&#x27;s just the code that is terrible. So I started a new one, to fix all the mistakes of the previous one, which mostly is cutting less corners because now I know that I&#x27;ll use this for way longer than I can reasonably estimate right now, so I try to be kind(er) to future me.(But I&#x27;ll also make fascinating new mistakes, because I decided to de-duplicate more or less everything at the DB level, on a whim, without prior experience or reading up on it. And then I&#x27;ll write some monstrosity to pipe 12 years of content from the old CMS into the new one, and I will not break a single link even though nobody would really care. Just because I can.) reply synack 7 hours agoprevIf you limit your dependencies to what’s available in your distro’s LTS or stable release breaking changes are much less common. Living on the bleeding edge has a cost. reply DeathArrow 1 hour agoprevCold blooded: random utility written in C 40 years ago.Warm blooded: random app using random Javascript framework, written 6 months ago. reply oooyay 11 hours agoprevThis got me thinking if any of my side projects or work projects that are in maintenance mode could qualify as \"cold blooded\". Conceptually, they can - I have many projects written in Go, Typescript, and Python where I could cache my dependencies (or at least the SHAs) and do what this is implying. The problem is that it stops being useful beyond proving the concept. In reality, all my projects have a slow churn that usually has to do with vulnerability updates. Maybe more aptly put, \"Can I take this Go repository off the shelf, rebuild the binary, and let it run?\"; the answer is of course - assuming HTML and web standards haven&#x27;t changed too much. The problem is that then some old vulnerability could be immediately used against it. The assumption I also made, that HTML and web standards haven&#x27;t changed too much, will almost assuredly be falsey. They may have not have changed enough to be breaking, but they&#x27;ll have certainly changed to some degree; the same can be said for anyone that&#x27;s developed desktop applications for any OS. The one constant is change. Either side of that coin seems to be a losing proposition. reply ryanar 17 hours agoprevI really appreciate this idea after rewriting my blog engine three times because the frameworks I was using (Next, Remix) had fundamental changes after a year and I was multiple major versions behind. Though it depends on what you are after. If the goal is to be able to blog, time spent upgrading and rewriting code because the framework is evolving is wasted time unless you want to stay up to date with that framework. Think about how we view physical goods today, they aren’t built to last. In certain situations, like a personal blog, you want reliable software that works for years without the need to change. It also helps to have software that uses common data formats that are exportable to another system, like a blog based in markdown files, rather than JSX. reply aranchelk 14 hours agoprevIn my mind this is a lot more about tooling and platform than language, library, architecture, etc.I have a project that’s quite complicated and built on fast-moving tech, but with every element of the build locked down and committed in SCM: Dockerfiles, package sets, etc.Alternatively, one of my older projects uses very stable slow-moving tech. I never took the time to containerize and codify the dependencies. It runs as an appliance and is such a mess that it’s cheaper to buy duplicates of the original machine that it ran on and clone the old hard drive rather than do fresh installs. reply aeternum 12 hours agoprevWhat a terrible name for this. Cold blooded animals are highly dependent on their environment whereas the body of warm-blooded animals eliminate the dependency on external temperature via metabolism.In any case, it&#x27;s unnecessarily ambiguous. Why not simply say &#x27;software without external dependencies&#x27; and eliminate the paragraphs of meandering explanation? reply littleroot 2 hours agoparentThis is literally the only reply that hit the core of the article&#x27;s problem and of course no one on this site upvoted it lol. The only thing I dislike more than software development posts that use inappropriate analogy from nature to shallowly jump to conclusion, is software development posts that use inappropriate analogy from nature to shallowly jump to conclusion with absolutely flawed understanding of the supposedly analogous natural phenomenon.And of course, painted turtles (among a few other species) can survive being frozen not because of their cold-bloodedness, but thanks to special antifreeze protein they have. Other lizards (and cold blooded animals for that matter) would just rupture their own tissues upon thawing. reply sowbug 16 hours agoprevA link to this article would be an effective curt reply to the \"is this project dead?\" GitHub issues that have been known to enrage and discourage cold-blooded project owners. reply bee_rider 12 hours agoparentI wonder if GitHub is a bad fit for cold blooded projects? It has social media elements, I’d expect lots of extra chatter and “engagement.” reply blastbking 13 hours agoprevI had this experience making an iOS game. After a few years of making the game, I went back to it, and found that I was unable to get it to compile. I guess iOS games are very warm blooded. Perhaps if I had stuck with a desktop platform or web it would have remained fine? Not entirely sure. reply yellow_lead 13 hours agoparentMobile in general is this way. For instance, on Android, if your app isn&#x27;t targeting a high enough sdk version, Google will remove it after some time. If you have to upgrade your target sdk, you may find many libraries are broken (or not supported), and it also can lead to other cascades of upgrades, like having to upgrade gradle or the NDK if you use it. reply userbinator 9 hours agoprevI have some Windows binaries from the mid 90s that I still use today. Mainly small utilities for various calculations&#x2F;conversions, filesystem organisation, and the like. reply ganzuul 14 hours agoprevhttps:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Unix_philosophySeems related. Tools built like this which still need constant updating must have a foundation of sand. reply d_burfoot 11 hours agoprevThis essay showcased an excellent writing technique: at the outset, I had no idea what the title meant. But at the conclusion, it made perfect sense. reply languagehacker 19 hours agoprevCold-blooded software seems like a great idea in spaces where the security risk and business impact are low. I can think of a lot of great hobbyist uses for this approach, like a handmade appliance with Arduino or Raspberry Pi.The ever-evolving threat landscape at both the OS and application level makes this unviable for projects with any amount of money or sensitivity behind them. Imagine needing to handle an OS-level update and learning that you can no longer run Python 2 on the box you&#x27;re running that project on. Fine for a blog, but calamitous for anything that handles financial transactions. reply joshuaissac 18 hours agoparent> Cold-blooded software seems like a great idea in spaces where the security risk and business impact are low. I can think of a lot of great hobbyist uses for this approach, like a handmade appliance with Arduino or Raspberry Pi.I think it would be the other way around. A low-impact hobby project can use exciting, fast-moving technology because if it breaks, there is not so much damage (move fast and break things). But something with high business impact should use boring, tried-and-tested technologies no external network dependencies (e.g. a package being available in a third-party repository at compile time or runtime). For something like that, the OS updates (on the LTS branch if Linux) would be planned well ahead, and there would be no surprises like the Python 2 interpreter suddenly breaking. reply kardianos 18 hours agoparentprevIf you are a bank, a store, or handle PHI, you will have contractual obligations to maintain it. However, I still think that can be \"cold-blooded\" maintenance. When I update a Go project after running `govulncheck .&#x2F;...`, it is generally easy. I vendor; builds and runtime only rely on systems I control. reply apantel 11 hours agorootparentMany large companies and business like banks and manufacturers run legacy code in ancient runtimes. The projects can be so frozen in time that nobody has the courage to touch them. reply chuckadams 16 hours agoparentprevMeh, just keep a container around with py2 in it, maybe just containerize the whole app. The ultimate in vendored dependencies, short of a whole VM image. reply talentedcoin 7 hours agoprevUsing Python 2 in 2023 for a new project is a crime reply petercooper 13 hours agoprevI think Go&#x27;s backward compatibility promise – https:&#x2F;&#x2F;go.dev&#x2F;blog&#x2F;compat – would make much Go software &#x27;cold blooded&#x27; by this definition (so long as you vendor dependencies!) reply secwang 4 hours agoprevc , Common Lisp , apl All of these have a solid history of backward compatibility. reply iqandjoke 14 hours agoprevHow about security? reply csdvrx 15 hours agoprevI follow a similar approach but maybe more extreme : whenever possible, I use \"YESTERDAY&#x27;S TECHNOLOGY TOMORROW\"It&#x27;s nicely presented on http:&#x2F;&#x2F;itre.cis.upenn.edu&#x2F;~myl&#x2F;languagelog&#x2F;archives&#x2F;000606.h...> I want yesterday&#x27;s technology tomorrow. I want old things that have stood the test of time and are designed to last so that I will still be able to use them tomorrow. I don&#x27;t want tomorrow&#x27;s untested and bug-ridden ideas for fancy new junk made available today because although they&#x27;re not ready for prime time the company has to hustle them out because it&#x27;s been six months since the last big new product announcement. Call me old-fashioned, but I want stuff that works.The same thing is true with free software: I prefer to use the terminal. In the terminal, I prefer to run bash and vim, not zsh and neovim.When I write code, I&#x27;ve found C (and perl!) to be preferable, because \"You can freeze it for a year and then pick it back up right where you left off.\"There are rare exceptions, when what&#x27;s new is so much better than the previous solution (ex: Wayland) that it makes sense to move.However, that should be rare, and you should be very sure. If you think you made the wrong choice, you can always move back to your previous choice: after playing with ZFS for a few years, I&#x27;m moving some volumes back to NTFS.Someone mentions how the author choice (python2) is getting harder to install. Cold blooded software works best when done with multiplatform standards, so I&#x27;d suggest the author does the bare minimum amount of fixes necessary to run with https:&#x2F;&#x2F;cosmo.zip&#x2F;pub&#x2F;cosmos&#x2F;bin&#x2F;python and call it a day.With self-contained APEs and the eventual emulator when say 20 years from now we move to Risc V, you don&#x27;t have to bother about dependencies, updates or other form of breakage: compile once in a APE form (statically linked for Windows&#x2F;Linux&#x2F;BSD&#x2F;MacOS) it will run forever by piggybacking on the popularity of the once-popular platform.Wine lets you run Windows 95 binaries about 30 years layer: I&#x27;d bet than Wine + the Windows part of the APE will keep running long after the kernel break the ABI. reply layer8 17 hours agoprevI’m glad this isn’t about ruthless software. reply jujube3 5 hours agoparentLook at that subtle off-white colouring of the project landing page.The tasteful thickness of it.Oh my God, it even has a watermark! reply kageiit 17 hours agoprev [–] For many use cases, cold-blooded software is not viable. We need better tools to automate and remove the tedium involved in upgrading dependencies or modernizing codebases to protect against ever evolving threats and adapt to changes in the ecosystem replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The author compares cold-blooded animals' ability to adapt to their environment to software projects that use stable and reliable technology.",
      "The author shares a personal experience with a successful software project that has remained functional for a long time and is expected to continue working in the future.",
      "The parallel drawn highlights the importance of using stable technology in software development for long-term success."
    ],
    "commentSummary": [
      "Discussions cover a range of programming language and software-related topics such as language popularity, stability, and challenges in code maintenance.",
      "The importance of regular updates for security and functionality is emphasized, along with the preference for stable and reliable technologies.",
      "There are also debates on the risks of using outdated software and conversations about specific tools, libraries, languages, and the balance between maintaining code and rewriting it in the future."
    ],
    "points": 454,
    "commentCount": 161,
    "retryCount": 0,
    "time": 1703769776
  },
  {
    "id": 38795308,
    "title": "Mozilla CEO compensation rises, Firefox market share falls, as company shifts focus to AI services",
    "originLink": "https://lunduke.locals.com/post/5053290/mozilla-2023-annual-report-ceo-pay-skyrockets-while-firefox-marketshare-nosedives",
    "originBody": "Sign up to Follow Lunduke Lunduke Comedy • Gaming • News • Science & Tech Sign up to Follow Lunduke Mozilla 2023 Annual Report: CEO pay skyrockets, while Firefox Marketshare nosedives (and that appears to be the plan) Bryan Lunduke December 28, 2023 The Mozilla Foundation has released their latest annual report -- covering the time up through December of 2022 (Mozilla's reporting always lags by one year) -- and something peculiar leaps out of the data: The compensation of the Mozilla CEO has skyrocketed (by millions) While the Mozilla revenue drops And the Firefox Marketshare takes a nosedive While, at first, this seems ridiculously lopsided... perhaps it actually makes sense. Perhaps the decreasing Firefox marketshare is a good thing, from the Mozilla point of view. Mozilla CEO gets a raise Let's start by looking at the pay of the Mozilla CEO. Source: Mozilla Foundation 2022 IRS 990 That's right. Your eyes do not deceive you. The Mozilla CEO earned $6,903,089 in 2022. Just shy of $7 Million. The year prior (2021), the CEO earned $5.6 Million. A raise of $1.3 Million dollars. Not a bad year-on-year increase! Now let's take a look at the core performance of Mozilla: The overall revenue, and the marketshare of their core product (Firefox) during that same period. If a CEO gets a $1.3 Million dollar raise, surely those numbers will be excellent! ... Right? Turns out... the revenue for Mozilla actually dropped between 2021 and 2022. Source: Mozilla Foundation 2022 IRS 990 To be fair, not a huge drop. Revenue went from $600 Million in 2021 to $593 Million in 2022. Roughly $7 Million lower. A small decrease, percentage wise... but a decrease just the same. The Firefox Nosedive Now let's look at the marketshare of Mozilla's primary product: Firefox. From the end of 2021 to the end of 2022 (the period during which the Mozilla CEO received a $1.3 Million Dollar raise), Firefox marketshare took a massive tumble. Going from (an already declining) 3.79%... down to 3.04%. It's almost as if there is an inverse relationship between Firefox Marketshare and Mozilla CEO compensation -- as marketshare goes down... CEO pay goes up by a similar percentage. Absolutely wild. Something doesn't add up... or does it? So. What can we learn from all of this? Well, for starters, it is clear that Mozilla CEO compensation is not tied to either the success of the Firefox web browser (their current primary product) or to the overall revenue of Mozilla. So what, exactly, could be the justification for that massive pay raise? Turns out there are two big, measurable goals that Mozilla appears to have... and, at those goals, it is performing exceptionally well: Continued increases to overall corporate financial assets. Transitioning Mozilla away from Firefox. That first goal is rather obvious. Let's be honest, what company doesn't want to have a massive pile of financial assets? In 2022, the Mozilla war-chest (total assets) grew to a staggering $1.3 Billion Dollars -- up $157 Million from the year prior. A huge increase to their financial assets. Source: Mozilla Foundation 2022 IRS 990 With over half a Billion Dollars in cash alone. That's a lot of cheddar. But that's only part of the story. The De-Firefox-ification of Mozilla Let's take another look at the 2022 revenue breakdown. Note that revenue from \"Royalties\" is down substantially -- a decrease of $17 Million. Those \"Royalties\" are, in large part, made up of default search engine placement, within Firefox, for one single customer... Google. This decrease makes sense considering the signficant decline in Firefox marketshare. But then look at the second row: \"Subscription and advertising revenue\". What is that, exactly? That line item includes some of the more recently launched subscription services -- \"Pocket Premium\" and \"Mozilla VPN\" (plus some advertising placement). And, you'll note, that revenue jumped from $56 Million to $75 Million in 2022. While that may be a drop in the bucket of the overall Mozilla revenue and war-chest... it's a critical strategy for Mozilla to diversify their revenue stream away from Firefox. As it turns out, moving away from Firefox is exactly Mozilla's plan. Earlier this year, Mozilla laid out their vision for the future of their organization -- and it did not include Firefox. The focus for the future of Mozilla -- according to Mozilla -- is primarily based around Artificial Intelligence services. In fact, Mozilla leadership stated, quite plainly, that they intend to take Mozilla \"in a different direction.\" When you consider the goals of Mozilla... the decreasing Firefox marketshare is no longer much of a concern. In fact, moving revenue away from Firefox, while investing in A.I. systems (and other subscription services) becomes the primary goal. And, at that, the Mozilla CEO is excelling. The future of Mozilla What does all of this mean for the future of Mozilla? What have we learned from Mozilla statements coupled with their financial reports? Mozilla rewards executives who oversee a decreasing success and reliance upon Firefox -- so we can expect more of that. In turn, that likely means reduced investment in Firefox development and promotion over the coming years. Mozilla intends to focus on A.I. -- so we can expect more A.I. investment, and possible A.I. services, in the year ahead. If all of that holds true, we can likely expect the Mozilla CEO to receive additional raises in the next annual reports. If you are a fan of Firefox... none of that points to a particularly bright future. That said... if you are the CEO at Mozilla... you might bring in enough income to buy your own island fortress pretty soon. And who doesn't want an island fortress? Want more truly independent Tech Journalism? Be sure to grab at least a free membership to Lunduke.Locals.com. Want to support this important work (and get some exclusive books, videos, and other goodies in the process)? Grab a paid subscription. Other articles you might be interested in: Linux Foundation now spends only 2% of their revenue on Linux Linux Foundation decreased Linux spending to 3.2% in 2022 The Wiki Piggy Bank Major Open Source Projects: How much money do they actually make? Join the Lunduke Community To read more articles like this, sign up and join my community today Sign Up 23 5 What else you may like… Videos Podcasts Posts Articles Bryan Lunduke@Lunduke December 27, 2023 On the Linux Foundation only spending 2% on Linux 00:13:17 15 1 Reply Bryan Lunduke@Lunduke December 19, 2023 Copyright, Piracy, and the bleak future of The Internet Archive Read the article: https://lunduke.locals.com/post/5016077/the-internet-archives-digital-lending-puts-the-entire-service-at-risk I have a lot of thoughts around this. The show is half me reading the article, half me ranting about the topic. Enjoy. 00:39:48 12 7 Reply Bryan Lunduke@Lunduke December 11, 2023 Lunduke Journal in 2024 (plus $97 Lifetime Subs & Studio Equipment) Go here to grab the Lifetime Subscription: https://lunduke.locals.com/upost/4979397/97-lifetime-subscription-grab-it-before-its-gone All new subscriptions through December 15th goes directly towards Lunduke Journal studio upgrades. And go here for links to everything on The Lunduke Journal: http://lunduke.com 00:22:55 13 5 Reply Bryan Lunduke@Lunduke November 22, 2023 The futility of Ad-Blockers Ads are filling the entirety of the Web -- websites, podcasts, YouTube videos, etc. -- at an increasing rate. Prices for those ad placements are plummeting. Consumers are desperate to use ad-blockers to make the web palatable. Google (and others) are desperate to break and block ad-blockers. All of which results in... more ads and lower pay for creators. It's a fascinatingly annoying cycle. And there's only one viable way out of it. Looking for the Podcast RSS feed or other links? Check here: https://lunduke.locals.com/post/4619051/lunduke-journal-link-central-tm Give the gift of The Lunduke Journal: https://lunduke.locals.com/post/4898317/give-the-gift-of-the-lunduke-journal The futility of Ad-Blockers 21 22 Reply Bryan Lunduke@Lunduke November 21, 2023 openSUSE says \"No Lunduke allowed!\" Those in power with openSUSE make it clear they will not allow me anywhere near anything related to the openSUSE project. Ever. For any reason. Well, that settles that, then! Guess I won't be contributing to openSUSE! 🤣 Looking for the Podcast RSS feed or other links? https://lunduke.locals.com/post/4619051/lunduke-journal-link-central-tm Give the gift of The Lunduke Journal: https://lunduke.locals.com/post/4898317/give-the-gift-of-the-lunduke-journal openSUSE says \"No Lunduke allowed!\" 42 24 Reply Bryan Lunduke@Lunduke September 13, 2023 \"Andreas Kling creator of Serenity OS & Ladybird Web Browser\" - Lunduke’s Big Tech Show - September 13th, 2023 - Ep 044 This episode is free for all to enjoy and share. Be sure to subscribe here at Lunduke.Locals.com to get all shows & articles (including interviews with other amazing nerds). \"Andreas Kling creator of Serenity OS & Ladybird Web Browser\" - Lunduke’s Big Tech Show - September 13th, 2023 - Ep 044 25 9 Reply Bryan Lunduke@Lunduke 2 hours ago I'm on team eth0. 12 3 Reply Gabe@gginorio 10 hours ago Looks like Rossman was right. Tech companies keep squeezing existing customers for more and more. We already pay for prime, but like Spotify, that ad free experience you paid for is being demoted to the ad supported tier. But for just a little more ... Is it time for the high seas, maties? 9 5 Reply Edward Willis@encw 12 hours ago https://www.thebyteattic.com/2023/10/the-toynomator-cx16.html Another takedown of the Commander X16 from the Byte Attic/Agonlight guy. Not sure what to make of this. Ultimately what will make a system popular or not is the availability of software that people want to use. The X16, stupid technical design or not, seems to have a lot more developer mind-share than the AgonLight or any other neo 8-bit. Thoughts? WWW.THEBYTEATTIC.COM Meet the toynomator CX16 Vintage computer restorations, retro computing, combinatorial logic, digital design, computer architecture, microelectronics, computer education 9 15 Reply Bryan Lunduke@Lunduke December 26, 2023 Linux Foundation now spends only 2% of their revenue on Linux Spending on A.I. is roughly 6 times that of Linux. The Linux Foundation has released their 2023 Annual Report... and it is an absolute doozy. The first big headline? As of 2023, The Linux Foundation now spends just 2% -- that's two percent -- of their revenue on their namesake: The Linux Kernel. That's a mighty small slice of the pie... Ask yourself this: If there is a foundation named after a specific thing... what percentage of that foundation's revenue would you expect to be spent on said thing? Let's say... \"Save the Orange Trees Foundation\". How much of their revenue should be spent on, you know, orange trees? 100%? 50%? 10%? If \"Save the Orange Trees\" only spent 2% on \"saving Orange Trees\"... would you think that something was amis? Of course you would. And you would quickly wonder what non-Orange-Tree related things that foundation is funding. With that in mind, let's look at Linux Foundaiton funding of Linux... compared to their investments in \"Blockchains\" and \"Artificial Intelligence\". Maybe they should rename themselves to \"The A.I. Foundation\". Your eyes do not deceive you. Linux : 2% Blockchain : 4% A.I. : 12% The Linux Foundation spends roughly twice as much on Blockchain as they do on Linux... and roughly six times as much on Artificial Intelligence. And, lest you think this is merely a blip -- and that, surely, Linux support will go up the next year -- recent history would strongly suggest otherwise. This is a singificant drop from the 2022 numbers. Weeeee! I'm sensing a pattern here. \"Now wait a second,\" you exclaim! \"Just because the revenue percentage spent on Linux is down... that doesn't necessarily mean that the total numbers are down! The Linux Foundation is growing! Maybe the total amount spent actually went up while the percentage went down?\" While it's true that The Linux Foundaiton continues to grow substantially -- now bringing in over a quarter of a Billion dollars per year (seriously) -- the total amount spent on the Linux kernel dropped roughly $400,000 in 2023. (Not surprising as The Lunduke Journal previously pointed out that lowering the total support of Linux appeared to be the goal.) The percentage of The Linux Foundation revenue spent on Linux dropped in 2023. And the total amount spent dropped as well. All while funding of non-Linux projects (such as AI and Blockchain) continued to dominate. While this is the first big headline to come out of the Linux Foundation 2023 report... there's more to report on -- where The Linux Foundation revenue comes from and where it is spent. The Lunduke Journal continues to research and dig into the 2023 filings of The Linux Foundaiton. There's a lot of weirdness in here... and we're going to get to the bottom of it. Stay tuned. Want more truly independent Tech Journalism? Be sure to grab at least a free membership to Lunduke.Locals.com. Become a Supporter Want to support this important work (and get some exclusive books, videos, and other goodies in the process)? Grab a paid subscription. Other articles you might be interested in: The Linux Foundation has practically abandoned Linux Linux Foundation decreased Linux spending to 3.2% in 2022 The Wiki Piggy Bank Major Open Source Projects: How much money do they actually make? Read full Article 26 15 Reply Bryan Lunduke@Lunduke December 21, 2023 The nerdiest last minute gift possible. Today is December 21st. Christmas Eve is in 3 days. Have a nerd in your life that deserves a very special gift? Have you run out of time to get something shipped? Give the gift of a Lifetime Subscription to The Lunduke Journal. It comes with a custom digital, pixel-art, comic styled gift card. It gives the recipient full access to all three sites within The Lunduke Journal family. Including exclusive books, videos, access to live streams, a family friendly community, and the most hard-hitting journalism in the Tech World. You can schedule the gift to be sent, via email, to the recipient on any day you like — Want the gift to appear in their inbox on Christmas Eve? Christmas Morning? Prefer to print out the pixel art card and give it to them yourself? Just let Lunduke know via email and it shall be so! Gift Subscriptions can be processed within 12 hours throughout Christmas. (Sometimes thee Gift Subscription can be processed as quickly as 1 or 2 hours depending on time of day.) Grab a gift for another nerd. Org rab a subscription for yourself… because you’re worth it. -Lunduke Read full Article 14 1 Reply Bryan Lunduke@Lunduke December 21, 2023 How to leak info to The Lunduke Journal (anonymously and securely) Ready to be a Whistleblower? Here's how. Work at a Big Tech Company (or Foundation) or on a big open source project? Seeing something happening that the public should know about? Afraid to step forward for fear of losing your job? Allow me to walk you through exactly how to leak information -- directly to The Lunduke Journal -- while maintaining your anonymity. Prepare the material Let's say you see some of the following: Shady business practices. Political craziness. Poor employee or contributor treatment. Other, various shenanigans that you feel should be publicly known. If you have files or information about it -- including screenshots, documents, videos, or any other type of file... Check to see if your name, email address, or other information which could be used to identify you as the source is included in the file. If so, it is recommended that you black out that information (such as by using a paint program) prior to sending it to The Lunduke Journal. The Lunduke Journal will work extremely hard to keep your identity confidential -- Metadata of files will be scrubbed, and file names will be changed prior to publication. Use an anonymous or private email account This is, perhaps, the most important rule to follow: Do not use your work email account when contacting The Lunduke Journal. The Lunduke Journal has a firm policy of not revealing any personal information of sources (including email addresses). If you feel comfortable using a personal email account, you may do so. However, if you want to take that extra level of protection, an anonymous email account is recommended. Get a free, anonymous email account from Proton Mail (or another anonymous email service that you trust). Use that email account to contact \"bryan at lunduke.com\". How much personal information you use in our communication is entirely up to you (your name, your job title, etc.). How to send files If you have files you need to send -- screenshots, email backups, documents, videos, etc. -- there are multiple options depending on your needs. If your files are relatively small (only a few MB), you can simply include them as an email attachment to \"bryan at lunduke.com\". However, if the files you need to send are much larger, you'll want to use an anonymous file sharing tool. I recommend https://send.vis.ee/. It is an open source tool which allows you to anonymously upload (no account needed) any file up to 2.5 GB in size, with passwords and private links which expire. Very, very handy when sending this type of whistleblower data. Go to https://send.vis.ee/ Select the file you wish to upload. Set the terms for when the download link expires (and the files are deleted) -- I recommend setting it to \"Expires after 1 download or 3 days\". This gives me enough time to grab the file, but makes sure it doesn't linger around. Set a password for the file. Extra security is always good. Then email \"bryan at lunduke.com\" with the download link that Send.vis.ee provides you, along with the password you chose. Using this method of contacting The Lunduke Journal -- and sending files -- ensures that your identity remains anonymous (unless you wish for the public to know who you are). That said, there are other options as well. Some choose to place files into a personal file sharing service and provide a link. Use whatever you are most comfortable with. If you have questions, feel free to ask. What happens then? All information is looked at, researched, and carefully verified (as necessary). At this point I may have additional questions for you -- so watch your email inbox. Not all leaked data is used -- or used immediately. But everything is evaluated. If the data is publised: Depending on the topic and type of information provided, it will either be published at Lunduke.Locals.com (if it is primarily Tech or Business related) or ConservativeNerds.Locals.com (if the topic veers into political teritory). Questions? Email \"bryan at lunduke.com\". Read full Article 17 11 Reply See More Sign Up To Lunduke Sign Up for free to see more from this community or subscribe to Lunduke for $5/month to support Lunduke for more interaction and exclusive content. Login Signup Available on mobile and TV devices Powered by Locals",
    "commentLink": "https://news.ycombinator.com/item?id=38795308",
    "commentBody": "Mozilla 2023 annual report: CEO pay skyrockets, Firefox market share nosedivesHacker NewspastloginMozilla 2023 annual report: CEO pay skyrockets, Firefox market share nosedives (lunduke.locals.com) 341 points by stl_fan 17 hours ago| hidepastfavorite300 comments woodruffw 15 hours agoIn a previous thread (these \"Mozilla is dead\" threads appear perennially) someone pointed out that Firefox&#x27;s apparent marketshare drop is potentially indistinguishable from their deployment of privacy-improving features, including stubbing out Google Analytics when \"Enhanced Tracking Protection\" is enabled.I&#x27;m a Firefox user, so I have a vested interest in Mozilla&#x27;s long term health and financial viability. But \"marketshare nosedives\" appears to be primarily an editorialization to fit the post&#x27;s larger narrative. reply Semaphor 14 hours agoparentI posted some stats from our website a few weeks ago [0], GA was heavily undercounting FF compared to our server-side stats based on UAs.One other thing to remember, is to check the falling of desktop usage, because a large part of the modern internet users are mobile-only, and the amount of people who use anything but what Google tells them to (or Apple allows them to) is vanishingly small.[0]: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=38533109 reply duped 14 hours agorootparentIs GA counting Firefox on iOS as Firefox or Safari? reply Semaphor 1 hour agorootparentThat’d be interesting to know, but I don’t use anything apple. reply mrazomor 14 hours agorootparentprev> a large part of the modern internet users are mobile-only, and the amount of people who use anything but what Google tells them to (or Apple allows them to) is vanishingly small.I&#x27;m a Chrome user. Both on desktop and mobile because of the built in syncing.If I were able to switch to Firefox mobile (Android), I would. But the rendering is often broken or awkwardly different on Firefox mobile. I thought this is a thing of the past... reply miah_ 14 hours agorootparentFirefox on android also has syncing, you can open up the &#x27;share&#x27; and send pages directly to your various firefox browsers. It will sync passwords etc. I haven&#x27;t had any rendering issues and have been using FFM-Nightly for years now. reply mort96 14 hours agorootparentThey&#x27;re not saying \"I use Chrome because only Chrome has syncing\". They&#x27;re saying \"I use the same browser on mobile and desktop because of syncing, and I can&#x27;t use Firefox on mobile because it has these bugs, so I end up using Chrome on both mobile and desktop.\" reply Nexxxeh 14 hours agorootparentprevAre you using uBlock Origin in Firefox on Android? If not, then try it.You&#x27;d have to prise it from my cold dead hands. By far the best mobile browsing experience.Not entirely perfect, there&#x27;s a bug where I&#x27;ll occasionally get a grey screen on a tab. Hasn&#x27;t happened enough for me to do anything about tho.But still orders of magnitude better than my experience with Chrome on Android. reply kettleballroll 1 hour agorootparentFYI, I&#x27;ve been using ublock origin with Firefox on android for years and never encountered the bug you&#x27;re talking about, so it might be rooted in something else. I&#x27;m using a pixel 6 ( and a pixel 3 before that), in case that&#x27;s relevant reply Semaphor 14 hours agorootparentprevI exclusively use FF, with Chrome on Android and Desktop only being there for cross browser testing, I never have rendering issues, only issues brought by extensions (mainly uBlock Origin), or FF’s tracking protection, both of which can be disabled. reply bee_rider 13 hours agorootparentprevThe person you quoted seems to have just generated this hypothesis out of nothingness, so it isn’t as if they are on super solid ground in the first place. However, I think it is worth pointing out that we’re all vanishingly small percentages of the population; your existence doesn’t tell us much or contradict them, I guess. reply maccard 14 hours agorootparentprevIs it? I use Firefox on android (and desktop) and I have to drop to chrome about once a year for rendering issues. reply Larrikin 14 hours agorootparentprevWhich specific websites? reply mrazomor 14 hours agorootparentI hit a few in the past. But, I&#x27;m failing to find any of them at the moment... Maybe I should give Firefox mobile another try.It could be that my baseline was the Chrome rendering, so any discrepancy was classified as \"it&#x27;s broken\". reply zonkerdonker 12 hours agorootparentAdblock on a mobile browser is a gamechanger. I wouldn&#x27;t go back even if a quarter of sites were broken on FF mobile (and they aren&#x27;t, I&#x27;ve been using it for 2 full years desktop and mobile, and only found a single compatibility issue - a restaurant&#x27;s take-out ordering page) reply paledot 6 hours agorootparentprevHonestly, in this day and age, any discrepancy from Chromium&#x2F;WebKit is probably broken. But if we&#x27;re talking about a few pixels&#x27; difference here and there, plenty of sites are more broken than that on every browser.I have encountered a couple of (financial, natch) sites that insist on a Chromium-based browser in order to do vital operations like download statements. Switching browsers for those few exceptions is annoying, but not a deal-breaker (for me). reply Semaphor 1 hour agorootparentHave you tried a user-agent switcher? I think you can even set them up to always have a specific agent depending on the domain. Chances are, they don’t need chromium, they are just written by (even more than you’d think) incompetent people. reply tremon 9 hours agorootparentprevI&#x27;m a Chrome userAs they say, acceptance is the first step to recovery. reply fl0id 14 hours agorootparentprevffx also has syncing. reply sjfjsjdjwvwvc 14 hours agorootparentprevHm weird I have the inverse experience with Chrome… reply sharps1 14 hours agoparentprevThere is definitely a downward usage trend from Mozilla own stats.https:&#x2F;&#x2F;data.firefox.com&#x2F;dashboard&#x2F;user-activity reply Vinnl 2 minutes agorootparentI&#x27;m not sure if we have reliable data on desktop computer usage stats, but I think a large part of the decline is also correlated with that - along with never having been able to significantly gain market share on mobile, which is responsible for an increasing share of people&#x27;s time online. reply woodruffw 13 hours agorootparentprevRight; nobody is claiming that Firefox is doing well. But that downward trend is not proportionate with the claimed global downward trend; it&#x27;s much smaller. reply sharps1 11 hours agorootparentFirefox has lost over 20 million users in 2 years.Jan 3 2021 210,085,100Jan 1 2023 193,199,300Dec 17 2023 185,599,100 reply woodruffw 11 hours agorootparentI can read. The point is that the number doesn&#x27;t translate: 7.5 million lost users over 2023 doesn&#x27;t correspond to a 0.75% decline in global browser presence. 7.5 million is a tiny fraction of that. reply jeroenhd 10 hours agorootparentIt does if the global number of active browsers increased. The more people get connected to the internet, and the more of them use Chrome or Edge, the smaller Firefox&#x27; market share will be if their user numbers stay about equal. reply mvdtnz 10 hours agorootparentprev7.5M out of 193M is 0.39%, so it&#x27;s off by about a half. Hardly a \"tiny fraction\". Presumably the growth in internet users in the period would increase the relative decline in market share, too. reply lupusreal 13 minutes agorootparent3.9% reply ksec 8 hours agorootparentprevWorth pointing out Firefox had 310 Million user in 2017. That is a lost of 100 Million user in from 2017 to 2021. reply Dma54rhs 9 hours agorootparentprevThere are also more and more internet users. Marketshare and active users don&#x27;t necessarily go at the same dimensions. reply yjftsjthsd-h 15 hours agoparentprev> Firefox&#x27;s apparent marketshare drop is potentially indistinguishable from their deployment of privacy-improving features, including stubbing out Google Analytics when \"Enhanced Tracking Protection\" is enabled.That&#x27;s an interesting angle. I suppose we could compare against Mozilla&#x27;s stats on download numbers and telemetry? Though between users downloading from distro mirrors and disabling telemetry (I suspect Firefox users are far more likely to be privacy conscious and&#x2F;or Linux users) those will also be fuzzy. reply wmf 15 hours agoparentprevI would assume that Firefox revenue is proportional to usage and revenue is only down a few percent. This implies that Firefox usage is declining much slower than people say. reply halflings 15 hours agorootparentNot if you account for the increase in ad revenue from the company paying them. reply bee_rider 15 hours agorootparentprevI don’t understand how to read their “assets” table; but it looks like most of their revenue comes from “royalties,” which I’m sure has some specific meaning for these kinds of reports, but I’m not sure if it scales with numbers of users or not. If that’s the money they get from Google (huge guess alert, I’m probably wrong!), then I’m not sure if it would scale in the short there with the number of users; I guess they must re-negotiate their contract every couple years, right? reply lupusreal 11 minutes agorootparentMozilla Corp pays royalties to Mozilla Foundation to use Mozilla Foundation&#x27;s trademarks. Mozilla Corp makes money by selling the default search engine position to Google, spends some of that money on Firefox development, and sends a lot of the rest to Mozilla Foundation in the form of those royalties. reply KennyBlanken 15 hours agoparentprevFirefox has all sorts of telemetry reporting so they know exactly how much usage the browser is getting. reply fabrice_d 15 hours agorootparentIndeed, and the data is mostly public: see https:&#x2F;&#x2F;data.firefox.com&#x2F;dashboard&#x2F;user-activity to check monthly active user evolution.It&#x27;s going slowly down - something that is unlikely to improve unless Firefox gets better distribution channels, especially on mobile. Giving up on FirefoxOS cut them from having the \"default\" browser anywhere.They are working on a gecko-based iOS browser since the UE is likely to mandate browser diversity, so maybe that will improve things a bit - though this will only make the situation on iOS on par with Android where Firefox is not doing well market share wise. reply woodruffw 15 hours agorootparentprevIt&#x27;s not clear to me that these numbers come from Firefox&#x27;s own telemetry. I couldn&#x27;t find the graphs in either of the reports on their own page. reply yawaramin 15 hours agoparentprevWouldn&#x27;t that be easy to verify by just looking at the relative market shares of different browsers and checking if there is an &#x27;unknown&#x27; browser whose market share is increasing proportionately to Firefox&#x27;s decrease? reply woodruffw 15 hours agorootparentNot if the metrics come solely from analytics like GA. It would appear as an absolute decline in browser numbers instead (which would probably be indistinguishable from noise in most samples). reply yawaramin 12 hours agorootparentAll I&#x27;m saying is you just need a table like this:YearFirefoxChromeOther| 202020%75%5%| 202119%75%6%| 202218%75%7% |This would make it pretty obvious, no? reply woodruffw 12 hours agorootparentNo, because there are multiple independent variables there: OEM mobile browsers, for example, and the fact that the overall number and distribution of observed browsers is not static. replyBaldbvrhunter 2 hours agoprev> Mozilla intends to focus on A.I. -- so we can expect more A.I. investment, and possible A.I. services, in the year ahead.back in March Moziila announced $30m for A.I. services [0]what&#x27;s weird is that wound business strategy is usually \"what are our core strengths?\" instead we get> A little over two years ago, Mozilla started an ambitious project: deciding where we should focus our efforts to grow the movement of people committed to building a healthier digital world. We landed on the idea of trustworthy AI. [1]OK, despite my skeptisism what&#x27;s the plan> Mozilla.ai’s initial focus? Tools that make generative AI safer and more transparent. And, people-centric recommendation systems that don’t misinform or undermine our well-being. We’ll share more on these — and what we’re building — in the coming months. [0]While that&#x27;s all very nice, who on earth are the customers? Is there a eshop somewhere lamenting \"our recommendation system is not people centric\" ?[0] https:&#x2F;&#x2F;blog.mozilla.org&#x2F;en&#x2F;mozilla&#x2F;introducing-mozilla-ai-i...[1] https:&#x2F;&#x2F;blog.mozilla.org&#x2F;en&#x2F;mozilla&#x2F;mozillas-vision-for-trus... reply lupusreal 3 minutes agoparent> Is there a eshop somewhere lamenting \"our recommendation system is not people centric\" ?I think they mean content recommendation systems used by social media. Mozilla Foundation likes to larp as a social media startup or something. Their big angle is that existing social media doesn&#x27;t shut out &#x27;bad people&#x27; e.g. people with opinions to the right of wherever the American west coast zeitgeist is this year. They want recommendation engines that only serve &#x27;good people&#x27;, or which engineer people&#x27;s opinions to be more &#x27;good&#x27;.But of course they don&#x27;t actually have a social media platform worth a damn for them to impose their own agenda onto, so it&#x27;ll end up tacked onto a mastadon instance nobody uses, or incorporated into the &#x27;New Page&#x27; of Firefox, or maybe turned into a browser extension that tries to block or inject stories on other social media websites. All a huge waste of time and money. reply mvdtnz 15 hours agoprevI hope Mozilla leadership realises that Firefox is the only thing lending their company any credibility with their subscription products. Without Firefox, Mozilla VPN and any of their supposed \"AI\" products are just another also-ran in a saturated commodity market. That \"subscription and advertising\" line item on their balance sheet relies on Firefox, it doesn&#x27;t replace it.Firefox&#x27;s nosediving market share should represent a catastrophic, company-endangering situation. It&#x27;s depressing that they don&#x27;t seem to understand that. reply nvm0n2 47 minutes agoparentRevenue from Google is not falling fast enough for Baker to care any time soon. She&#x27;ll be retired before it&#x27;s a problem. reply mips_r4300i 16 hours agoprev\"The focus for the future of Mozilla -- according to Mozilla -- is primarily based around Artificial Intelligence services.\"I sense a great disturbance in the Force... reply ksec 8 hours agoparentWe laugh about it but at least it is not something cultural or political. I mean the bar is so low this focus is actually a plus in my book. reply nvm0n2 46 minutes agorootparentIt is. Their interest in AI isn&#x27;t about how to make it cheaper or more effective, it&#x27;s how to make it \"healthier\" and \"safer\" by which they mean more ideologically controlled. reply ksec 20 minutes agorootparent>it&#x27;s how to make it \"healthier\" and \"safer\" by which they mean more ideologically controlled.Thanks for pointing this out. I didn&#x27;t read the actual details. I guess I still have too much good faith on these people.Sigh. reply agilob 15 hours agoparentprevLast year it was IoT reply sjfjsjdjwvwvc 15 hours agorootparentOr blockchain, Or metaverse, Or something else utterly useless that no one wants or asked for reply janice1999 14 hours agorootparentprevBefore that it was a mobile OS that failed to gain traction. reply pas 14 hours agorootparentat least boot2gecko made 1000x more sense than a painfully vague \"focus on AI\" reply 1attice 13 hours agorootparentI love FF and T-bird hard, but I have this mental image of a huddle full of brilliant, 20-year-plus systems engineers sitting in a room staring at a whiteboard with &#x27;AI?&#x27; in the middle of it.\"Ok, everybody popcorn up some ideas. Don&#x27;t be shy.\"[one of them opens a laptop and begins fiddling with a flame graph] reply reducesuffering 12 hours agorootparentSo Bighead and Gavin Belson?https:&#x2F;&#x2F;youtu.be&#x2F;CFsRif1wVGs?si=5939fsuM2AigbB_9 reply jeroenhd 10 hours agorootparentprevFirefoxOS may have died, but its fork KaiOS did quite well, shipping on tens of millions of cheap phones in developing countries.I think these countries are moving to Android&#x2F;iOS as they get wealthier, but the legacy of FirefoxOS was quite successful. It&#x27;s just that Mozilla never got much out of it. reply lupusreal 13 hours agorootparentprevAt least that was plausibly related to browser development, vis-à-vis ChromeOS. With \"AI services\" they&#x27;re totally dropping the pretext of caring about Firefox. reply timmg 14 hours agorootparentprevIs that true, or just a joke?It&#x27;s honestly hard to tell. reply agilob 14 hours agorootparentI swear 2019 was last year https:&#x2F;&#x2F;hacks.mozilla.org&#x2F;2019&#x2F;04&#x2F;introducing-mozilla-webthi... reply KennyBlanken 14 hours agorootparentprevAnd hilariously, Mozilla screamed blue-bloody-murder when people asked for Webserial (which they define as a standard themselves!) in Firefox which would make flashing devices much easier, for developers and users.One asshole Mozilla employee responded with \"no, the danger is too great\" and spouted a crazy theoretical involving someone&#x27;s pacemaker getting connected to Firefox and malware blah blah blah.People pointed out that Firefox access people&#x27;s cameras and microphones, and Chrome offers Web Serial support and users have to allow the permission and pick a device to connect to, a site can&#x27;t just connect to any serial device.Cue handwaving about \"we have higher standards than that smelly privacy-violating evil browser.\"What a bunch of fucking clowns. reply KennyBlanken 14 hours agoparentprevWhat you sense is a tech CEO weaving the hot trend of the day into her resume to try and remain relevant and jump ship to another job. reply jdksmdbtbdnmsm 16 hours agoparentprevLMAO the tech industry is such a joke. reply petermcneeley 15 hours agoparentprevI saw the same line and LOLed so hard. reply ksec 8 hours agoprevReposting what I wrote in 2021 [1], still holds true.And here is another unpopular opinion. I dont care if her salary is 3 million or even 30 million. If she had managed to bring Firefox to 60% marketshare and bring down Chrome on Desktop, would you have still complained if she was paid 30 million?The problem is Mozilla is in such a bad shape and she is under performing as a CEO.Unfortunately people dont learn much from history. And history dictate the only way to solve this problem is that Mozilla think of it as a problem. Otherwise its current status at 10% marketshare is enough to sustain the operation. Nothing bad enough is happening, no interest or incentive for changes. Inertia. Let&#x27;s keep thing this way.So yes, it is counter intuitive. The only way to save Mozilla ( or change Mozill&#x27;s direction, I guess the word \"save\" is a hyperbole, at least from Mozilla&#x27;s perspective. ) isn&#x27;t trying to get more user to use it. It is actually push people to abandon it.[1] https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=28961544 reply CharlesW 15 hours agoprevGovernments have been creating web&#x2F;native&#x2F;mobile apps for some time, which is a trend that continues to accelerate. Firefox continues to limp along but seemingly can&#x27;t even retain its most ardent fans, and there&#x27;s no sign of this changing.What if the EU were to fork Firefox (Openfox?) and fund its evolution of a privacy-first alternative? Among other benefits, this would:• Help ensure that key digital infrastructure is not solely dependent on non-European entities.• Balance the US&#x27;s outsized role as a gatekeeper for web innovation.• Support the EU&#x27;s user privacy and data protection values and comply-by-default with EU regulations.• Help bolster Europe&#x27;s economic and tech independence.What else? reply fabrice_d 14 hours agoparentIn concrete terms, what would this fork change compared to current Firefox? Just shouting \"privacy-first alternative\" is pretty vague. Also, good luck getting enough sustainable funding for that kind of project from the EU.Most of EU funding for OSS project is spread out to lots of projects, with relatively small amounts - Gnome got $1M recently and celebrated as a \"big\" milestone. I&#x27;m not saying that this is bad, but that&#x27;s not how you can fund a core browser team. reply ksjskskskkk 13 hours agorootparentfor one: not giving in to every google whim.recent examples: address bar becomes search bar. referrer header always sent cross domain with full url. webextensions3. hundreds of apis that only benefit ad \"viewability\" detectors. removal of websocket permission (like you have for notification etc). etcsoon: adding Floc reply lupusreal 13 hours agorootparent> for one: not giving in to every google whim.Yes, particularly they could enable an adblocker by default. Defaults matter and telling people that simply switching to [forked] Firefox to avoid ads would make for a compelling reason for normies to switch. And maybe they&#x27;d even stop hemorrhaging users to Brave, which already has this. reply fabrice_d 9 hours agorootparentPretty sure that their Google deal prevents them from shipping an ad-blocker enabled by default. reply jeroen 10 hours agoparentprev- Keep Firefox alive as an alternative to Chrome. It doesn&#x27;t feel like Mozilla is achieving that.This has been on my mind for a long time. It would be good for everyone to have a real alternative to Chrome and it would be good for Europe to be less dependent on the US, as you mentioned.In time, it might be possible to fund this off donations, but a bit of EU funding would go a long way to getting this off the ground. Unfortunately, the workings of EU funding programmes are a mystery to me. reply locallost 15 hours agoparentprevThat&#x27;s a pretty neat idea. I don&#x27;t know if the people in power would get all of that, but I think you could sell them on balancing the US&#x27;s influence. reply surajrmal 14 hours agoparentprevTaking up ownership of a large codebase is incredibly challenging. You can&#x27;t just throw a lot of people at it and hope it works out. It takes time to develop expertise. If the organization orchestrating a fork of Firefox ended up paying many of the existing Firefox developers to work on its fork then it might have a chance reply flir 12 hours agoparentprevThe EU (or any government) has a slightly schizophrenic approach to privacy.\"Privacy? Awesome! Wait! Wait! Not from us! Ban it! Ban it!\"I&#x27;d focus on the \"balance of power\" aspect. But that can be achieved by marketing Firefox, you don&#x27;t have to fork it. reply fifteen1506 14 hours agoparentprevState-based, forked software? Good grief!No fork please. But do pay more contributors to work on the upstream codebase towards benefiting Firefox&#x27;s downstream.PS: don&#x27;t forget eidas 2.0 has a loophole regarding SSL snooping, check EFF&#x27;s article on eidas 2.0&#x27;s article 45. reply mroche 16 hours agoprevDirect link to the reports:https:&#x2F;&#x2F;stateof.mozilla.org&#x2F;2022 Audited Financial Statement: https:&#x2F;&#x2F;assets.mozilla.net&#x2F;annualreport&#x2F;2022&#x2F;mozilla-fdn-202...2022 Form 990: https:&#x2F;&#x2F;assets.mozilla.net&#x2F;annualreport&#x2F;2022&#x2F;mozilla-fdn-990... reply Osmose 14 hours agoprevWorrying about Mozilla CEO compensation when1. Mitchell Baker is also chairwoman of the board of the Mozilla Foundation and is a founding member of Mozilla, and receives no stock compensation because there is none to give,2. Google can definitionally outspend Mozilla on browser development and has used that to cement their market position for over a decade now, and3. as long as Google is the primary source of Mozilla funding, they can (effectively) kill Firefox at any time, and diversifying revenue &#x2F; building up a war chest of funds is the only defense against that,just seems silly to me.As a former Mozillian I don&#x27;t like the choices Mitchell Baker has made (AI and services are poor plays IMO) but the obsession with CEO compensation at Mozilla has always smelled less like a genuine concern for alternatives to Chrome and more like holding a smaller player to an unreasonable standard.A more interesting comparison would compare these numbers to the head of Chrome&#x27;s compensation, and more specifically Chrome&#x27;s spending and revenue vs Firefox&#x27;s. reply mort96 14 hours agoparentI think the general critique is: the performance of a CEO should be tied somehow to the performance of the company, yet year after year, the company performs worse while CEO compensation goes up. reply neilv 13 hours agorootparentAn additional critique is that surely one of the many true-believers in old-school Internet ideals of freedom and openneess could lead for 1&#x2F;10th the compensationThen put the money saved towards allocating tens more top, full-time, aligned engineers to projects.When I see leaders of a non-profit personally drawing more than is necessary to lead a comfortable life, I see a conflict between the mission and personal enrichment.(There&#x27;s the argument that non-profits need money, and supposedly you can&#x27;t get good people to generate money except by hiring people who are personally money-motivated. But the evidence I see is that it looks like money and power potential attracts self-interested careerists, and you get people building fiefdoms, and incestuous relationships among them. Get an honest, smart, true-believer board, and anyone who tried to draw millions of dollars in compensation, or assemble an org chart of careerist execs, would get a regretful, \"Sorry, this isn&#x27;t that kind of &#x27;non-profit&#x27; vehicle for wealthy executive lifestyles and careerists, and we don&#x27;t seem to have alignment\", as they gently dropkick the misaligned people out the door.) reply jryle70 10 hours agorootparent> An additional critique is that surely one of the many true-believers in old-school Internet ideals of freedom and openneess could lead for 1&#x2F;10th the compensationThat doesn&#x27;t translate. A believer in freedom and openness should be compensated more than a counterpart in the private sector so they can work even harder for the causes. They may not be in it for the money, but they shouldn&#x27;t be punished financially because of their belief, as surely there are no lack of lucrative opportunities in for-profit organizations for them. reply neilv 10 hours agorootparentI disagree. $500K (and some degree less) is a perfectly comfortable living in even an expensive US city.Not paying them millions is only \"punished financially\" if being rich well beyond comfortable is more important to them than the mission of the non-profit.This \"doesn&#x27;t translate\" only to people who have zero business leading non-profits. (Incidentally, capping compensation is an awesome cut filter, to eliminate people who are poorly aligned with the mission.)Sure, there are classes of people who see something like non-profit CEO as their angle for wealth and status to which they feel entitled, when they can&#x27;t get the for-profit CEO job they&#x27;d prefer. Not only are they innately misaligned with the mission, but they are also completely out of touch with the vast bulk of the people who non-profits typically are supposed serve. Keep them away from non-profits. reply Osmose 14 hours agorootparentprevRight, but part of my point with #2 and #3 there is that \"browser share\" is a really poor choice for the performance metric in question to tie compensation to.Browsers just duking it out on features and ease of use is not how the browser market works—Google can and does leverage their dominance in non-browser markets to boost their browser, and Mozilla is not going to raise their browser share against tactics like that if they simply focus really hard on making a better browser.Tying it to a more functional goal like successful diversification of revenue makes much more sense (even if you disagree with how they did it in this particular case). reply mort96 11 hours agorootparentI think you&#x27;ve more or less hit the nail on the head. Computer&#x2F;FOSS nerds (like myself) want to see Mozilla do good engineering and also gain browser market share; that&#x27;s \"good performance\" to us. Investors want more revenue and better and more diversified revenue streams; that&#x27;s \"good performance\" to them. reply Osmose 11 hours agorootparentTo be clear, Mozilla has no investors, the corporation is wholly-owned by the non-profit foundation. The value of a diversified revenue stream here is the ability to sustain the Foundation&#x2F;Corporation and all of its projects, including Firefox, for the foreseeable future without the risk of Google just deciding to not renew their search deal and cripple the corporation any time it wants. reply ksec 8 hours agoparentprevI am going to guess, and I may be wrong, it would be hard to find a single corporation that pays 1% of their revenue to its CEO as total compensation. reply subins2000 15 hours agoprevWikimedia compensation is far better than what Mozilla is doing, nobody there receives > 1million$ in compensation: https:&#x2F;&#x2F;meta.wikimedia.org&#x2F;wiki&#x2F;Wikimedia_Foundation_salarie...while in Mozilla a single person is receiving close to 7million dollars! reply yumraj 14 hours agoprevI believe the fault lies at the board. They are the ones who approve compensation for the CEO. The problem is it’s unclear to me how competent&#x2F;independent the members of the board are. I don’t see any face I recognize, but that obviously means nothing. Do people know if there are any good people on the board?The best option would be for someone to fork Firefox and perhaps get it sponsored by Apache foundation. Then we can write it off.Firefox is my daily browser across multiple platforms, and I worry for its future. reply kyleee 13 hours agoparentWho is on the board? reply yumraj 13 hours agorootparenthttps:&#x2F;&#x2F;www.mozilla.org&#x2F;en-US&#x2F;about&#x2F;leadership&#x2F;#boards reply macspoofing 16 hours agoprevMaybe, at some point the Mozilla Foundation will acknowledge Firefox as the fundamental pillar of their relevance and existence ... instead of seeing it as this vestigial organ that they can&#x27;t &#x27;cut loose&#x27;[1] ... one can hope.[1] https:&#x2F;&#x2F;blog.mozilla.org&#x2F;en&#x2F;mozilla&#x2F;mark-surman-mozilla-25-y... reply ZeroGravitas 15 hours agoparentThe word &#x27;cut&#x27; and &#x27;loose&#x27; don&#x27;t appear in that linked blog post. Nor does the general idea you are suggesting. reply evasb 15 hours agoprevPeople complain all the time and nothing changes. She doesn&#x27;t care and in a month everybody forget that Firefox is in dire straits.Google&#x27;s Chromium project push new standards every month or so, and web developers are fast to adopt these standards and don&#x27;t care about testing it on Firefox anymore. The Chromium monopoly is already a reality. reply kabanda1 14 hours agoparentYou have reminded me about this. I failed an interview the other day because the site couldn&#x27;t work with Firefox. I hate it. I have been forced to install Google chrome for just interviews and other things where Firefox fails. It seems like devs no longer do Firefox tests reply jqpabc123 13 hours agoparentprevThe Chromium monopoly is already a reality.Yes. They got it fair and square --- they paid Mozilla for it --- and they still are. reply PsylentKnight 13 hours agoparentprevI&#x27;ve been using Firefox for years and rarely run into websites where something works on Chrome but not Firefox. The only one I can think of is my apartment&#x27;s payment portal, and that website is just generally awful. reply pjmlp 15 hours agoprevAs long time Mozzilla user since the Navigator days, it is sad to see Firefox going down, while the CEO gets money for nothing.When Firefox is no more, the legacy will be Thunderbird and Rust, not the Web browser, and despite how they won over PNaCL, it is Chrome that drives WebAssembly. reply ykonstant 15 hours agoprev(×_×) We need a modular, open source browser engine desperately; one not beholden to Google or any other for profit entity. The Servo people are trying, but the task is enormous. I don&#x27;t know what can be done (｡•́︿•̀｡) reply TheCoreh 15 hours agoparentThe SerenityOS&#x2F;Ladybird project has been making very steady progress towards that goalhttps:&#x2F;&#x2F;ladybird.dev&#x2F; reply jeroenhd 10 hours agorootparentLadybird is developing at an impressive pace, but it&#x27;s nowhere close to being as usable as Servo, and it&#x27;ll probably take a while before it can be. Even with the experienced and skilled developers Ladybird has attracted, it&#x27;ll take a few years before it can compete with a project that had whole teams working on it full-time.On the other hand, it could well become the de-facto standard browser for embedded applications, though. The browser frame can be ported to different UI frameworks quite easily and the code has practically no dependencies outside the project itself. reply pas 14 hours agoparentprevCould you elaborate on modularity?Also Chromium is there, it&#x27;s open enough to be a base for Chrome, Brave, Edge, and probably a few more, and it&#x27;s open source, forkable at any moment Google adds something unpatchably bad. (of course independent implementations are welcome, but the ultimate goal is a healthier web through user freedom, and that doesn&#x27;t necessitate Firefox directly, a ChromiumFox would be just as perfect) reply surajrmal 13 hours agoparentprevThe open source solution to Windows is not a os that runs windows applications. It&#x27;s an OS which has it&#x27;s own user space and application ecosystem. Sometimes I wonder why folks don&#x27;t take the same tact with other platforms like the web. Alternatively, if you look at mobile, no one is seriously pursuing alternatives to Android. They just make Android based distros and no one seems to complain. What makes the web different? reply acuozzo 9 hours agorootparentWait… does SerenityOS have special win32 support ala ReactOS?Last I heard it only borrows Windows 95&#x27;s aesthetics and nothing more. reply juujian 14 hours agoprevNot saying the complaint isn&#x27;t valid, but I see things trending in the right direction. Firefox is fast, support for add-ons is coming (back) to mobile, and Firefox is as free and open and modifiable as always. If we&#x27;re talking things that are in managers hands, like features and usability, as opposed to user numbers, then the last year was good. reply bee_rider 14 hours agoprevIf they are prioritizing projects other than Firefox, what are people’s favorite non-Firefox, non-Chrome&#x2F;Chromium (for obvious reasons) browsers?Firefox makes a lot of noise about their anti-tracking and pro-privacy features. I liked Suckless surf, but missed the granular JavaScript setting of noscript. And, I have no idea, but Privacy Badger must be doing something I guess? reply caycep 15 hours agoprevI guess the question - why can&#x27;t Mozilla (or at least Firefox) - be like the Linux kernel or the Debian group? They are healthy open source projects, some funding from industry, sure, but they&#x27;re staying current in the latest tech&#x2F;comp-sci tech while not beholden to anyone in particular (I hope)Organizational baggage? reply caskstrength 2 hours agoparentI don&#x27;t know about \"Debian group\", but absolute majority of kernel developers are full time employees of tech companies. Not sure what would be the incentive for those companies to pay bunch of people to develop privacy-focused browser full-time. reply sjfjsjdjwvwvc 14 hours agoparentprevLast time I checked the Linux Foundation had a similar problem, spending 2% on the Kernel development and the rest on the latest tech trends, AI, blockchain, metaverse etc. reply TwentyPosts 9 hours agorootparentDo you have any source for this? This would be quite shocking for me, if true. reply sjfjsjdjwvwvc 8 hours agorootparentI read it on the same site, didn’t check the actual report to confirm:https:&#x2F;&#x2F;lunduke.locals.com&#x2F;post&#x2F;5049241&#x2F;linux-foundation-now...Edit: checked it, figures are on page 158. they still spend 7,8 M$ on Linux kernel but it’s 2% of the total spend - to be fair a lot of the total is going to the community and related topics. Still a bit concerning. (I still think both the Linux Foundation and Mozilla are great organisations that should get more support to be clear) reply jqpabc123 15 hours agoprevTo the casual observer, it appears the CEO is being paid&#x2F;rewarded to shed Firefox users.Who would want them to do that? reply waterhouse 13 hours agoparentWell, nearly all of Mozilla&#x27;s revenue (I see numbers around 80-90%) comes from Google. And Google presumably doesn&#x27;t mind if Firefox users switch to Chrome. I&#x27;m not sure if anyone involved actively considers this the goal, but it&#x27;s possible that this creates some perverse incentives. reply squarefoot 11 hours agorootparentI just don&#x27;t see how having their biggest revenue coming from their #1 competitor wrt browser adoption, can&#x27;t create a plain and simple conflict of interests. reply jqpabc123 5 hours agorootparentI&#x27;ll bet $7 million of Google money could make any conflict look less interesting. reply wmf 15 hours agoparentprevMarissa Mayer was paid more to accomplish even less. Maybe that&#x27;s just what she&#x27;s worth. reply vjulian 15 hours agoprevHonest question: I use (and like) Firefox and rely on many of its features including password vault. However, should I be looking elsewhere? Any suggestions? (I avoid Google Chrome.) reply PedroBatista 15 hours agoparentFirefox will continue to survive for a long time, at least Mozilla has the money to do so for many many years. I would not panic, also because there is no other viable alternative to Chrome or Chrome&#x2F;Webkit based browsers other than Firefox that I know of.And Firefox is actually a very good browser and better than Chrome in some aspects. reply tinco 15 hours agoparentprevNo, it is still your only option. And using it is the best way of signalling that it is still an important browser. reply NegativeLatency 15 hours agoparentprevSafari is fine (if you have a Mac), it’s great on battery life and I actually use it for web dev.If you’re happy with Firefox I’d say just keep using it. reply nottorp 14 hours agorootparentIt&#x27;s not. No uBlock Origin. reply NegativeLatency 11 hours agorootparentYes that’s true, I do miss it but I’ve found 1Blocker and adguard home to be sufficient reply nottorp 23 minutes agorootparentHmm I&#x27;ve taken a quick look at these two but I have questions:- are their blocking lists public so they can be verified?- adguard home seems to be a dns based solution that you install in your home... which means it won&#x27;t help when you&#x27;re on someone else&#x27;s wifi- also adguard is \"protecting your children\". I just want tracking protection not censorship. reply ksec 7 hours agoparentprev>However, should I be looking elsewhere?Why should you be looking else where if it is working well for you? Unless you feel so wrong about CEO&#x27;s pay I dont see how it is relevant until the product quality declined. reply mewse-hn 15 hours agoparentprevI was getting uncomfortable with how I was tied into google chrome so I started storing my passwords in keepass. reply aquatica 15 hours agoparentprevAs for the password vault, I suggest you switch to Bitwarden. But for browsers? There isn&#x27;t really much of a choice, it&#x27;s either Firefox or Chromium-based. reply evasb 15 hours agoparentprevUnfortunately, nothing non-Chromium based. reply layer8 15 hours agoparentprevNo, why would you? reply superasn 15 hours agoprevIt&#x27;s almost as if a competing browser co is paying majority of their salaries and lobbying the CEO to kill the only remaining competition by slowly stopping all development. reply throwawa14223 15 hours agoprevIf they&#x27;re trying to get rid of Firefox, then can I support whatever spin-off organization is just Firefox? reply evasb 15 hours agoparentThey did with Thunderbird, and Thunderbird is becoming better. reply sharps1 13 hours agorootparentThunderbird rejoined Mozilla - from Wikipedia“ On January 28, 2020, the Mozilla Foundation announced that the project would henceforth be operating from a new wholly owned subsidiary, MZLA Technologies Corporation, in order to explore offering products and services that were not previously possible and to collect revenue through partnerships and non-charitable donations.[69][70]” reply janmo 15 hours agoprevFirefox will make a massive comeback if chromes kicks out Adblocker next year. reply sjfjsjdjwvwvc 14 hours agoparentI would love to believe that..Same as next year will be the year of mass adoption of Linux by consumers.Yet history and trends point in the other direction reply PsylentKnight 13 hours agorootparentThe recent Unity-Godot debacle would seem to indicate to me that titans aren&#x27;t invincible. They can do a lot of harm to themselves when they overestimate how much people want or need their product.Switching from Chrome to Firefox isn&#x27;t even nearly as difficult as switching from Unity to Godot (or say, from Windows to Linux). For the average user, Chrome and Firefox are functionally identical. If Chrome kicks off Adblocker, Firefox will be obviously better for a lot of people. reply sjfjsjdjwvwvc 11 hours agorootparentAgreed it’s not a fair comparison. And I would love if Firefox gets more adoption (again)!I have converted a lot of people in my bubble - also in general FF seems a lot more popular in EU than in the US, not sure why… reply gnicholas 14 hours agoparentprevFirefox, Brave, and other browsers will benefit for sure. reply endofreach 3 hours agoprevGoogle is just funding mozilla to avoid the legal headache (browser monopoly), right?For all those being annoyed by the decreasing usage of FF in favor of Chrome: If Mozilla & FF died, couldn&#x27;t this create better scenarios?Idea: Google might get into legal trouble, maybe even having to lose chrome, opening the market or Chrome &#x2F; Chromium base for a fresh start? reply zaik 16 hours agoprevThis might be the first article I&#x27;ve read that has more charts than data points. reply alberth 5 hours agoprevSource: https:&#x2F;&#x2F;stateof.mozilla.org&#x2F;Is it normal for Non-Profits to not the include Income Statement in their financials? Because Mozilla doesn’t.https:&#x2F;&#x2F;assets.mozilla.net&#x2F;annualreport&#x2F;2022&#x2F;mozilla-fdn-202... reply beginning_end 15 hours agoprev1) Sigh 2) Firefox still works great though, I&#x27;m a very happy user! reply evasb 15 hours agoprevDoes no mechanism exist to fire Mitchell Baker or, at least, addressing her leadership at Mozilla? reply wmf 15 hours agoparentShe answers to the board. I guess they&#x27;re happy with her. reply fabrice_d 14 hours agorootparentShe&#x27;s also the board chair so answers to herself, see https:&#x2F;&#x2F;wiki.mozilla.org&#x2F;Board reply peyton 15 hours agorootparentprevThere’s an implicit public interest. You don’t get to do whatever you feel like just because you decide not to pay taxes. reply wmf 15 hours agorootparentYes, the board is supposed to represent the public interest. reply jasoneckert 15 hours agoprevWhile I don&#x27;t feel as if I have enough knowledge to make a comment specifically about how the Mozilla Foundation is run, I do feel as if Firefox&#x27;s uncertain future resulting from poor adoption is something that should be given priority given that the web browser market is roughly Firefox vs everything else.I use both Ungoogled Chromium and Firefox on my main workstation, which runs Fedora Asahi Linux exclusively on Apple Silicon (I never boot into macOS), and should add that on aarch64, my overall experience with every Firefox build has been stellar. Unfortunately, I can&#x27;t say the same about Ungoogled Chromium. reply harpiaharpyja 15 hours agoprevI feel like this question is a decade too late, but FF is open source right? Why hasn&#x27;t Mozilla been jettisoned years ago? reply boomboomsubban 15 hours agoparentBecause despite what everybody seems to think, Mozilla spends several hundred millions of dollars every year developing Firefox, and that&#x27;s not the kind of thing the community can just fork and replace. reply harpiaharpyja 14 hours agorootparentI see. I asked the question because I legitimately didn&#x27;t know, and haven&#x27;t heard any conversation about it. Maybe that&#x27;s because continuing Firefox outside of Mozilla seems like an insurmountable task, but doing nothing seems like a guaranteed dead end. I&#x27;ve been waiting a very long time for the ship to right, and it ain&#x27;t happening.I guess if what&#x27;s Firefox needs is a reliable source of funding, at least recognizing that is a necessary first step. Who knows, maybe it could happen somehow. reply wannacboatmovie 11 hours agorootparentprevWHAT? That seems like a gross misuse of funds because they&#x27;re definitely not spending hundreds of millions fixing bugs. They must be spending it on useless changes like the 300th UI refresh no one asked for. Firefox still sucks in every way imaginable and it&#x27;s not measurably getting better. That number is shockingly unbelievable. Their crapware is not worth that budget.For comparison, look at what the OpenBSD team has accomplished (and continues to accomplish) with a small core team and they surely do not have hundreds of millions. reply boomboomsubban 9 hours agorootparentFeel free to build your own browser engine that stays up to date with the current web, supports nearly a hundred languages, and runs on basically every computer with a shoestring budget. It must be easy, that&#x27;s why there are so many hobby projects that manage it. reply edflsafoiewq 14 hours agoparentprevBecause a living community of developers able to work on a codebase is far more valuable than the codebase itself. reply LanzVonL 13 hours agoprevThe best thing to do at this point is use one of the privacy-enhanced forks, Firefox is desperate for more cash and will sell you, the user, out for a song. reply ksec 8 hours agoprevHere is a dopey idea, What if Wikimedia Foundation were to acquire Mozilla ? reply prakhar897 13 hours agoprevdiscussed a few months ago: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37015592Moz seems like a controlled opposition at this point. reply ls612 15 hours agoprevWhat&#x27;s the over&#x2F;under on Firefox still existing in 2030? Man that&#x27;s a depressing thing to have to say but that feels like that&#x27;s where things are heading? reply mlinksva 15 hours agoparentPlay money, but https:&#x2F;&#x2F;manifold.markets&#x2F;quther&#x2F;will-mozilla-still-maintain-... has \"Will Mozilla still maintain Firefox in 2030?\" at 71% reply sydbarrett74 16 hours agoprevMitchell Baker needs to go. I hold her responsible for much of Firefox&#x27;s slide in use over the years. She keeps pulling in a larger and larger salary for doing less and less. reply j16sdiz 16 hours agoparentAccording to the article,\"Transitioning Mozilla away from Firefox.\" is the current organisation goal. She have done her job great.why was it a goal, I have bo idea reply anonymousab 16 hours agorootparentThey likely view the idea off competing with Chrome - a key chess piece of the company keeping Mozilla around merely as a pet to ward of regulators - as impossible if not counterproductive to their mid-term survival at this point.Which is to say, at some point they might become annoying enough for Google to not want to pay them anymore, and then Mozilla would cease to exist shortly thereafter.So with that in mind, Firefox as a dedicated separate browser with its own engine is an albatross around their neck. A source of significant ongoing investment and cost for comparatively little return. For the Mozilla \"mission\" and the CEO&#x27;s personal goals and purpose, a simple rebadged chromium fork skinned up with open-web platitudes is a far better idea in the long term. reply kevin_thibedeau 15 hours agorootparentThe only reason Google funds them is so they can use Firefox to counter antitrust accusations. reply chiefalchemist 15 hours agorootparentprevRight. What would be lost if they used Chromium as well? Sure, there would be a lack of competition but at this point the browser is the fuel of the internet. We don&#x27;t have multiple different type of gasoline, or home heating oil. The browser - sans Google Chrome&#x27;s \"spyware\" - is a commodity. I&#x27;d rather see Mozilla focus on privacy, etc.My dream is for them to add a privacy-centric email product, a robust enough office suit (e.g., Google Docs) and then a bundle with those and Relay and their VPN. reply JumpCrisscross 15 hours agorootparent> We don&#x27;t have multiple different type of gasoline, or home heating oilWe do?Actually, this is a great analogy. We have grades of gasoline because there is a trade-off between anti-knocking and cost. Monoculturing the grade approximates the diversity of requirements worse than honing in on a few points on the curve. As with browser engines, there is a limit to this diversity since each additional grade imposes novel fixed costs in production, distribution and combustion. But I’d be surprised if something as varied as browser engines optimally solves for a single solution. reply charcircuit 12 hours agorootparent>We have grades of gasoline because there is a trade-off between anti-knocking and cost.Similarly Chromium can be configured in many different way, see chrome:&#x2F;&#x2F;flags. It&#x27;s open source and has a modular design so even further customization is possible.Different configurations can make different trade offs to appeal more to certain user&#x27;s needs. reply johannes1234321 14 hours agorootparentprev> We don&#x27;t have multiple different type of gasolineWe have diesel and gasoline at least.However the key difference ethere is somewhat different: We have independent supply lines, starting at different oil fields, going through different refineries, into different distribution networks, which ensures that there is some competition (even oligopolic is better than plain monopoly) and supply chain attacks on one vendor don&#x27;t havoc the complete supply chain.For a practical example: Countries were able to massively reduce the dependance on Russian gas and oil recently.If Google however decides to havoc chromium development all dependants have trouble. reply chiefalchemist 11 hours agorootparentPerhaps, but Firefox is an independent and it has trouble. Now. Right? reply charcircuit 15 hours agorootparentprevThere would still be competition among high level features for the browsers which I feel is more important for users. Reduced competiton on things like performance I don&#x27;t think will be so bad as either someone will optimized it benefiting everyone, or things that are not hyper optimized will become insignificant as computers get more powerful. reply phpisthebest 15 hours agorootparentprevNo absolutely not...That would be the worst thing for the web. Blink is objectively bad in the first place, and we need more than just chromiumum skins in the market.I wish they would finish and move to Servo.I wish Brave or some of the other Chromium Skins would become Firefox based.Everyone consolidating down to Blink and Chromium is about the worst thing that could happen to anyone that desires an open Web reply macspoofing 15 hours agorootparent>I wish Brave or some of the other Chromium Skins would become Firefox based.This hurts because Firefox should have been that embedded framework powering browsers like Brave and electron apps. But that would have required them to invest in R&D to match performance but also to make their rendering engine easily embeddable (with a corresponding investment in documentation and outreach). reply VancouverMan 13 hours agorootparent> This hurts because Firefox should have been that embedded framework powering browsers like Brave and electron apps.Years ago, Gecko had at least some support for being embedded within native applications.This was apparently discontinued around 2011, though:https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20110403052816&#x2F;http:&#x2F;&#x2F;www.h-onli...https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20210723183100&#x2F;https:&#x2F;&#x2F;groups.go...At that time, there were a number of browsers with native UIs that used Gecko, and software to help embed Gecko in other apps, such as:Camino: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Camino_(web_browser)K-Meleon: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;K-MeleonGaleon: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Galeongtkmozembed: https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20110505053545&#x2F;http:&#x2F;&#x2F;www.mozill...JavaXPCOM: https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20100626110814&#x2F;https:&#x2F;&#x2F;developer...There was also XULRunner, too:https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20161201115812&#x2F;https:&#x2F;&#x2F;developer...Mozilla and Gecko had a staggering amount of potential back then, but it was squandered away, unfortunately. reply phpisthebest 15 hours agorootparentprevI believe that was a goal of servo, however it was starved for resources (just like the documentation project) in favor of foolish endeavors like Pocket, VPN Services, FireFox OS, and of course there many missteps in the world of Political Social Activism. reply lern_too_spel 15 hours agorootparentFirefoxOS was Brendan&#x27;s project. Also, why don&#x27;t you consider preventing gay people from marrying to be \"Political Social Activism?\" Why do you want to force Mozilla to have a leader who is a religious fundamentalist culture warrior? reply chrisco255 15 hours agorootparentBrendan&#x27;s personal political donations were his own business unless he made it some organizational goal or priority for Mozilla, which he never did. reply JumpCrisscross 15 hours agorootparent> Brendan&#x27;s personal political donations were his own businessEh, a CEO is a quasi-public figure. Those weren&#x27;t his personal business entirely. (Consider a gay employee at Mozilla or partner.) That said, the solution was chastisement and a public apology. Not termination. reply pasttense01 13 hours agorootparentThere was no evidence that Brendan discriminated against gay employees at Mozilla. reply lern_too_spel 13 hours agorootparentprevBrendan refused to apologize for the donation or even to acknowledge that it was wrong. Instead, he doubled down on it, saying in comments posted to this very forum that the gays kept asking for more and more rights, and he wasn&#x27;t OK with that. It wasn&#x27;t part of the previous bargain. https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=15966490Given that he refused to apologize, and that the pesky freedom of association exists, which can lead to problems for Mozilla like the Montgomery Bus Boycott did for the public transit system in Montgomery, it was overall positive for Mozilla that Eich resigned. That doesn&#x27;t mean that Mitchell is a good CEO. It just means that things would have been worse. reply Perceval 9 hours agorootparentThere was nothing for him to apologize for and his donation was not wrong. reply xcv123 13 hours agorootparentprev> the solution was chastisement and a public apologyNot all gays are in favor of gay marriage. The solution was to let him have his political opinions, and simply agree to disagree, like adults. replynozzlegear 15 hours agorootparentprevThere&#x27;s always money in ~~the banana stand~~. Er, webkit. reply ImJamal 14 hours agorootparentprev>Blink is objectively bad in the first placeDo you mind explaining this statement? reply hellotomyrars 16 hours agorootparentprevThe goal is obvious and not new. Firefox as a product is only useful to them as a handout from google to use as an antitrust defense.The problem is that Mozilla hasn’t been able to find any product that generates any meaningful revenue.It makes perfect sense for them to try to be an entity that can exist without their biggest competitor tossing them scraps.How they should achieve that is certainly up for debate but it’s also clear that their attempts to add monetizable aspects to Firefox isn’t moving the needle much either. reply jsnell 15 hours agorootparentFirefox makes half a billion a year in revenue. It&#x27;s not a handout like you claim, but a revenue share deal negotiated between the two companies.If Google didn&#x27;t pay for being the default search engine, or tried lowballing, someone else would make a deal instead.The idea that it&#x27;s some kind of a proactive antitrust defense is one of the more bizarre ideas that gets repeated on HN. reply hellotomyrars 7 hours agorootparentMore than one thing can be true at the same time. Deals are usually made because interests are aligned. There is a direct benefit to an overwhelmingly dominant player to be able to point to any competitor. There is also a direct benefit to having people use your product. There is even a tertiary benefit of the money theoretically going to development for Firefox that could feed back into their own product.If you look at the situation in the reverse, what sense does it make? Why would you pay a direct competitor to exist when the amount of money you put in to them is an incredibly large majority of their revenue? Firefox continues to become more irrelevant, and the amount of their revenue they get from Google doesn&#x27;t really reflect that trend.I&#x27;m not saying the only reason Firefox exists is for Google to point at it. That doesn&#x27;t mean it isn&#x27;t a major one. It also is pretty clear to Mozilla because they sure keep trying (and failing) to find other revenue sources reply jsnell 27 minutes agorootparent> Why would you pay a direct competitor to exist when the amount of money you put in to them is an incredibly large majority of their revenue?One plausible reason is that Google is not a monolith: the entity paying the money is the Search division, which does not compete with Firefox. Chrome does, but Chrome is not a party to the deal. Search is interested in maximizing their own profit, not in maximizing Chrome&#x27;s usage share.> Firefox continues to become more irrelevant, and the amount of their revenue they get from Google doesn&#x27;t really reflect that trend.It is a revenue share deal. Firefox gets some specific (agreed) percentage of the search revenue from searches done via the Firefox search bar. If the revenue Firefox gets is stable despite reduced relevance, it is because the revenue is stable.Relevance doesn&#x27;t translate to revenue. What matters is the number of users and revenue per user. reply anonymousab 4 hours agorootparentprev> If Google didn&#x27;t pay for being the default search engine, or tried lowballing, someone else would make a deal insteadThis already happened with Yahoo. Mozilla got a ton more money, too.It was utterly disastrous for them. It turned out that Firefox needs Google as the default more than Google needs them - well, for the stated purposes of the deal, of course. reply nine_k 15 hours agorootparentprevI think the situation is simple. They are rendering one service that their users value, and it is making Firefox.They should ask (not require) payment for that service. Yes, what they should do is basically to run a Patreon subscription, clearly marked \"For the continued development of Firefox\".At a very accessible level of $3 &#x2F; mo on average, and merely 5M subscribers over the world, they&#x27;d have $15M monthly, or $180M a year.See how Wikimedia Foundation is basically flush with cash, without getting handouts from its competition (haha), zero ads, and asking users to spare $2.75 here and there. reply macspoofing 15 hours agorootparent>They should ask (not require) payment for that service.Sure - let them squeeze out the last drop of their one and only cash cow before it becomes utterly irrelevant - instead of investing in it and making it a core pillar of their strategy.>See how Wikimedia Foundation is basically flush with cash,Mozilla was (is?) flush with cash. Browser market share and corresponding user eyeballs are immensely valuable. That money isn&#x27;t going back into Firefox development. This is why it is borderline criminal that they choose to focus on everything except Firefox.Alternatively, what are they without Firefox? reply evasb 15 hours agorootparentWith Mitchel Baker at helm, all the initiatives that would make Firefox more embeddable were cancelled to cut cost.Now Firefox can&#x27;t be used to make webapps effectively, the only alternative is to use Electron and fortify Chromium&#x27;s monopoly. reply fabrice_d 14 hours agorootparentI&#x27;m not a Baker fan at all, but no such initiative was cut under her leadership, because none existed.Electron won not because chromium was more embeddable, it won because it made it easy to pull hundred of MB of nodejs dependencies. Everything else you could do already before with XulRunner... reply nine_k 13 hours agorootparent> it made it easy to pull hundred of MB of nodejs dependenciesThat&#x27;s exactly what \"more embeddable\" is. It made itself easier to turn into Node.js, Electron, etc. I don&#x27;t think it was a pure coincidence. reply fabrice_d 13 hours agorootparentXulRunner existed before Electron. Node.js used v8, but could have use SpiderMonkey instead (this is what Gnome did). These were choices, not situations where using Mozilla tech was impossible. In the end that cemented Google stronghold on the web. reply nine_k 13 hours agorootparentprev> instead of investing in it and making it a core pillar of their strategy.What are they investing in now?> Mozilla was (is?) flush with cash.It&#x27;s not neutral cash, it&#x27;s Google&#x27;s cash. The point is to get off the needle of Google&#x27;s handouts and become independent. Maybe then there&#x27;d be less incentive to slowly drive Firefox towards irrelevance.> what are they without Firefox?With a small bit of conspiracy theory, that would be \"mission accomplished\" :-| reply nottorp 13 hours agorootparentprevThey have a donate button. Which is all about subscriptions. Which is why I went away without even doing a one time donation, as my original intention was.I deeply resent being pushed into subscriptions and you should too. reply nine_k 12 hours agorootparentOne-time donations must always be an option.But it&#x27;s a recurring revenue what allows you e.g. to hire developers. Sad but true. reply duped 16 hours agorootparentprevNot affiliated with Mozilla in any way, but their mission isn&#x27;t to create a browser. It&#x27;s to \"ensure the Internet is a global public resource, open and accessible to all.\" (1)Given that Firefox has kinda lost the browser war it seems obvious that they should be focusing efforts on other things that further that mission besides dumping money into a browser a tiny slice of people want to use.(1) https:&#x2F;&#x2F;www.mozilla.org&#x2F;en-US&#x2F;mission&#x2F; reply freedomben 15 hours agorootparentI read that mission as definitely including a browser.What could possibly be more important at \"ensur[ing] the internet is a global public resource, open and accessible to all\" than keeping competition and choice in browsers, which forces web technology openness and standards?We&#x27;ve already seen Google&#x27;s web integrity moves coming, and we can no doubt expect more of that as they continue to dominate. A world with only Chromium-based browsers is one where Google can implement anything they fancy. To me the importance of that overshadows anything else Mozilla can do (that I can think of at least). reply macspoofing 15 hours agorootparentprev>Not affiliated with Mozilla in any way, but their mission isn&#x27;t to create a browser. It&#x27;s to \"ensure the Internet is a global public resource, open and accessible to all.\" (1)Yes .. and that is the core problem. Their relevance (and income) only comes from Firefox and its market share. But for some reason, they cannot bring themselves to acknowledge this. The income they generated from Firefox, should have been re-invested in Firefox. They should have been organized as an engineering company at the forefront of web technologies.>Given that Firefox has kinda lost the browser war it seems obvious that they should be focusing efforts on other things that further that mission besides dumping money into a browser a tiny slice of people want to use.That is their strategy. Right now, Firefox is still the only thing that gives them any sort of relevance. reply JumpCrisscross 15 hours agorootparentprevIn what capacity have they delivered on that mission outside Firefox? reply caskstrength 2 hours agorootparentprev> Given that Firefox has kinda lost the browser war it seems obvious that they should be focusing efforts on other things that further that mission besides dumping money into a browser a tiny slice of people want to use.Like what? Selling you \"premium\" subscription to glorified bookmarks service? Or reselling Mullvad with Mozilla logo slapped on top of it? reply baal80spam 16 hours agorootparentprev> their mission isn&#x27;t to create a browserAaaand that&#x27;s why I don&#x27;t use Firefox. reply outwit 15 hours agorootparentThat makes you part of the problem. reply Levitz 14 hours agorootparentNo. It makes Mozilla part of the problem. People getting tired of Mozilla&#x27;s incompetence and stopping supporting them is just a consequence of that.I use Firefox. I want to use Firefox. That Mozilla insists on pretending it&#x27;s not the one single worthwhile thing they do doesn&#x27;t make it easy. reply LightHugger 15 hours agorootparentprevAs long as you use something better, that isnt chrome.Chrome blatant spyware that scans your whole pc ever since google had the bright idea of sneaking an \"antivirus\" into chrome and enabling it by default. Firefox is better that chrome, but there&#x27;s lots better than firefox. reply macspoofing 15 hours agorootparent>As long as you use something better, that isnt chrome.This is why it is critical to have a meaningful alternative. Developers and end-users are pragmatic - all things being equal they will choose privacy and openness, but not at the expense of performance and capabilities.This is why it is so perplexing seeing Mozilla just focus on everything except for the one thing that gives them relevance and is actually important. reply sjfjsjdjwvwvc 15 hours agorootparentprevWhat would be an example of something better that isn’t chromium based? reply LightHugger 14 hours agorootparentChromium based browsers and firefox forks are the two big pillars. The comment i replied to doesnt like firefox, so i would probably suggest ungoogled chromium or brave.For non chromium based, librewolf is a clear winner for me. Waterfox is also good. Hardened firefox is also okayish but not ideal. replyaquova 15 hours agorootparentprevI don&#x27;t strictly disagree with that as a concept, as diversifying themselves from being Firefox and Firefox alone is a sound business strategy. Unfortunately, while they have come up with some neat ideas (I was a fan of Firefox Send) they still haven&#x27;t found a business strategy and have let Firefox&#x27;s market share slide in the meanwhile, and many of those neat concepts have withered away as well. reply boomboomsubban 15 hours agorootparentprev>why was it a goal, I have bo ideaBecause an ongoing antitrust suit against Google search could mean the revenue they get from Firefox is no longer an option. reply xbar 15 hours agorootparentprevIt is her goal. She will spend a lot of time explaining to you why it is a good idea. At the end, you will still have bo idea. reply username1228023 15 hours agoparentprevI&#x27;ve been critical of Mozilla for a long time, and Mitchell has not been a good leader for the last ~10 years or so.Having said that, Mitchell was instrumental to several very important things, not all of them in the distant past. She also went years taking annual salary lower than she probably should have been taking. It frankly wouldn&#x27;t be unreasonable to grant her lifetime emeritus status that comes with a no-strings-attached $1–2 million annual salary to sit on her hands and do nothing. (I do think that $7 million per year is pretty gross, though, especially given the current \"state of Mozilla\".)Having said that, $7 million for a CEO who isn&#x27;t earning it really isn&#x27;t Mozilla&#x27;s biggest problem, and it&#x27;s not even its biggest financial problem. If you really want to be critical of its spending, consider this:The annual budget for marketing and branding every year falls between $30 and $60 million. Per year. This is Mozilla. Empirically, it may as well not even have a marketing department.When Chrome really started eating into Firefox marketshare 10+ years ago, one of the things that Mozilla folks used to complain about (a lot) is that Chrome&#x27;s effective* marketing budget was higher* than Mozilla&#x27;s total budget—browser development and other software eng. included. The perverse thing is that the same is true of Mozilla: you could take its annual marketing budget, pour it into a different org that works on a different browser, and what you could get out of it is an independent browser development company. What&#x27;s more is that you could without too much difficulty get that company not only to profitable status in pretty short order (given that kind of budget), but get it to usage share that matches Firefox&#x27;s own (given how low that is). This would take something like 3, 4, 5 years max, provided you have competent leadership.That&#x27;s the sort of profligate spending and a lot of other poor decisionmaking at Mozilla that really needs to be addressed if Mozilla is going to turn around. (I have given up hope that this is ever going to happen. I expect it not to.) People hardly talk about this aspect of the business, however—instead focusing on how much Mitchell is getting paid, which, to reiterate, is not in any sense the biggest problem that Mozilla is facing.-- former Mozillian reply jancsika 14 hours agorootparent> What&#x27;s more is that you could without too much difficulty get that company not only to profitable status in pretty short order (given that kind of budget), but get it to usage share that matches Firefox&#x27;s own (given how low that is). This would take something like 3, 4, 5 years max, provided you have competent leadership.Is your claim that this other browser company would ship an open source browser that is a) gpu-accelerated, b) cross-platform, and c) render Youtube, Tiktok, Reddit, bank websites et al. correctly, and be used by millions of people? reply laweijfmvo 15 hours agorootparentprev> She also went years taking annual salary lower than she probably should have been taking. It frankly wouldn&#x27;t be unreasonable to grant her lifetime emeritus status that comes with a no-strings-attached $1–2 million annual salary to sit on her hands and do nothing.Sorry, what? She was underpaid for a few years, so should get a couple mil forever now? Can you at least list out the \"several important things?\" reply kbrosnan 15 hours agorootparentIt is closer to 20 years. She was a founding member of Mozilla. Look back at the early financial statements, in a vacuum a few 100k to several 100k sounds like a lot. When you compare it to other executives in the Bay Area or the US she was significantly under paid compared to peers. Especially when considering stock options. What would it cost Mozilla to hire someone else?Before someone here says that they would be the CEO for less money than Mitchell. Can you get an appointment with the vice president of search at Google and Microsoft? Could you call their bosses and get though? reply FactKnower69 14 hours agorootparent>Before someone here says that they would be the CEO for less money than Michael. Can you get an appointment with the vice president of search at Google and Microsoft? Could you call their bosses and get though?I&#x27;m sorry? My entire life I&#x27;ve been told that CEOs make 1000x as much money as me for golfing and writing a couple emails a week because they&#x27;re genius Ubermenschen whose illuminating strategic insights add orders of magnitude more value than my measly toil, but you&#x27;re telling me it&#x27;s actually because other executives are willing to take cold calls from them? That&#x27;s why? reply sjfjsjdjwvwvc 14 hours agorootparentIMO it’s mostly because it’s a miserable job that few would be willing to do. I at least wouldn’t, no matter how many millions they throw at me - even disregarding all the career ladder climbing that is needed to be considered for such a role in the first place. reply teg4n_ 14 hours agorootparentprevIf they were the CEO of Mozilla they would because that’s the whole point of talking to them. reply iraqmtpizza 14 hours agorootparentprevEither I or Adam Sandler could get an appointment with the VP of search at any company in the world if we were CEO of literally Mozilla reply freedomben 15 hours agorootparentprevMay I ask what you did at Mozilla? i.e. were you an engineer on Firefox? reply ksjskskskkk 13 hours agorootparentmozillian usually means mamagers. unless they are really old timers. reply dimaor 15 hours agoprevtl;dr: we need an open source browser & infra, and there are candidates.How c[u]ome, with all the power of open source we still do not have an open browser with an open sync infra?.emotions aside, this is dumb (some words cannot be used). Why can&#x27;t we, as a group, stop complaining, and actually devote real time hours into developing the serenity browser to work as chrome &#x2F; brave &#x2F; firefox?Why can&#x27;t we, use the knowledge we have gained from IPFS and actually work on a distributed no server sync platform?Why can&#x27;t I, simply stop using the mentioned above software and devote myself into something more hopefully reliable?I think it is hard to lose your daddy and leave home, but it&#x27;s something we all have to do in order to actually grow. reply sjfjsjdjwvwvc 14 hours agoparentI don’t know if we need a new one. Firefox is still a good (the best?) browser IMO. Developing a new one is really difficult and many more intelligent people than me have failed doing it.But if you feel like you have to act, do so and do a show HN; I’m always willing to give a new browser a try :-) reply the_third_wave 11 hours agoprevOwncloud was forked to become Nextcloud and seems to have gotten better for it.Openoffice was forked to become Libreoffice and seems to have gotten beter for it.Time to fork Firefox [1] and take over where Baker dropped the ball because she thought the rules of the game could be changed to make it no longer necessary to play to win.[1] https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=38533785 reply esafak 15 hours agoprevNow may be a good time to support new browsers like Arc. reply ivanjermakov 15 hours agoparentIt&#x27;s built on WebKit and this does not bring any diversity to the browser market, it&#x27;s no different from Chromium-based browsers reply sirwhinesalot 13 hours agorootparentWebKit isn&#x27;t Blink anymore. The only thing keeping WebKit alive is apple&#x27;s tight grip on the iOS browser engine, and that will likely be a thing of the past soon. Once that&#x27;s gone, it&#x27;s all going to be reskined chromium.Since I think apple should open up iOS more, I hope WebKit develops a healthy marketshare outside of that ecosystem. reply 1attice 13 hours agoprevThis just saying, \"Bob&#x27;s rent skyrockets, while his grocery purchasing plummets.\" No sht Bob is having a hard time buying groceries.CEOs are important -- not intrinsically, but to survival. Their actions are important. Their decisions are important. Their attention is important. And there&#x27;s a lot of competition for good ones. If you get a bad one, it&#x27;s an existential crisis, and the good ones can always go elsewhere for more money.Want to help nonprofits and small corps? Support the passage of laws limiting CEO pay. reply cvalka 13 hours agoprevMozilla should be renamed to Rust foundation and deprecate the Gecko browser engine. reply Barrin92 14 hours agoprevI think the narrative provided in the article is actually reasonable. Firefox is practically dead, but even worse with Firefox almost all of Mozilla&#x27;s income stream is literally just a Google handout.The article states that revenue from services is up from 50 to 70 million. Still only about 10% of what they make from Firefox, but at least that&#x27;s independent revenue, going up, directly from consumers.Can someone please provide a rational argument, not a kneejerk emotional response why focusing on the source of revenue that is Google independent and growing is not the better way to fulfill their stated mission, that is creating a privacy respecting and open web? People are acting like Ahab and the whale when it comes to Firefox, there&#x27;s no point in dumping more resources into the thing if&#x27;s going down anyway and makes you subservient to a tech monopolist. reply HackerThemAll 13 hours agoparentIf Firefox is dead then we&#x27;re left with only two options: Google browser or Apple browser. I&#x27;m comfortable with none of them. Google has become a de facto monopoly with Microsoft Edge, Opera, Brave, Vivaldi, Chromium et al pretending it hasn&#x27;t, and the rest of the market is Apple browser, and I&#x27;m not an Apple user and never will be. We should keep Firefox at all costs as a true alternative respecting user choices, such as not mandating manifest v3 and allowing users to control web browsing entirely. reply jmyeet 14 hours agoprevThis isn&#x27;t new [1].There&#x27;s a real opportunity here. People are increasingly distrustful of, say, Google. I use it because it&#x27;s still performant, cross-platform and has sync. But , like many, are increasingly leerly abou tGoogle using Chrome&#x27;s position to, say, attack ad blockers.The ultimate question is how does and should Mozilla fund itself? Well, if the CEO can&#x27;t lay out a vision and deliver on that then why are they still there? Why is their compensation still increasing despite not performing?Instead we get platitudes about \"add on services\". Previously it was \"VPN services\" and now it&#x27;s \"AI services\"? It&#x27;s almost like the future revenue plan is always \" services\".[1]: https:&#x2F;&#x2F;calpaterson.com&#x2F;mozilla.html reply User23 15 hours agoprevLooks like they’re entering the classic looting of the company by the executive team phase of the corporate lifecycle. reply gardenhedge 16 hours agoprevHow does this even happen? reply laweijfmvo 15 hours agoparentWho&#x27;s going to stop it? She&#x27;s also Chairwoman of the Board. reply PedroBatista 16 hours agoprevThis Mozilla \"situation\" comes up here from time to time, unfortunately as a long time Firefox user all I have to say is: Mitchell Baker and their clique will only leave when Mozilla is completely dead and even by that time she&#x27;ll retire and will make a wonderful post about her \"legacy\" in opensource and the Web.I will not go further because it will turn into an all-bashing post, but Mozilla ( as you like to think of it ) is dead and has been dead for a long time.Deal with it. reply neurostimulant 14 hours agoparentFirefox might be dead soon but Mozilla will probably live on as a VPN company. Opera is also like that. The original browser is dead, replaced by a Chromium reskin, and they&#x27;re making money from microlending in Africa instead. reply kriro9jdjfif 15 hours agoparentprevAgree. I’ve git submoduled Firefox and other projects and have local AI help edit and build them.Have made zero changes to FF itself, but overall have found local AI a huge help in managing it all. reply AndrewKemendo 15 hours agoparentprevI’ve lead those threads in the past with hopes that someone would give a glimmer of hopeHonestly, this news&#x2F;post made me lose the final shred of hope I had.:&#x2F; reply echelon 14 hours agorootparentThe best thing we can do for the web at this point is talk to our politicians about the incredible power that Google and Apple wield. They either need to be split up, or their platforms entirely opened up to competition via standardization [1], first class third-party support [2], no more preferential dogfooding [3], and no more ad sales protection rackets [4].[1] Google no longer unilaterally pulls on web standards. Google and Apple adopt a shared, first-class standard for native app development. Web gets \"as native\" APIs.[2] No requirement of app store for distribution. Web installs and web as native. No scare walls or hidden-in-the-settings feature flags. The browser runtimes have full extension support with no removal of hooks necessary for eg. adblocking.[3] First party apps are not defaults, not preinstalled, and more importantly, cannot re-assert themselves as defaults.[4] If someone searches for your company or product by name, or a 1 edit distance variation, competitor ads can&#x27;t show up before your website or app. reply AndrewKemendo 13 hours agorootparentI mean between them, MSFT they have totally captured congressUnless people start running for office that won’t just do what corporations want then it’s futile. reply runjake 15 hours agoparentprevThe article states that Mozilla is far from dying and that it’s diversifying itself away from Firefox. reply pardoned_turkey 14 hours agorootparentMozilla has been diversifying itself away from Firefox for 15 years. They&#x27;re still pouring money into SeaMonkey and Thunderbird, on top of a range of more recent projects that have no realistic chance of ever generating serious revenue, such as Mozilla VPN.I think there are two realistic paths for the company. One is to make the browser amazing and edgy in ways that Google and Microsoft can&#x27;t match (out of the fear of cannibalizing revenue or running into regulatory trouble). Mozilla has a shot at it, but it&#x27;s unlikely to happen if they have a defeatist attitude about it internally, and are focusing on non-browser pivots.The other path is to basically turn into some completely different company, throwing money at unrelated pursuits such as AI and hoping that you get lucky. But what gives Mozilla any edge with that? reply irrational 15 hours agorootparentprevAway from Firefox? They don&#x27;t have anything useful other than Firefox. Trash everything else and devote all resources to Firefox. reply wincy 15 hours agorootparentprevToo bad every product that’s actually useful gets deprecated. Lockwise was great and it got deprecated. reply bakugo 15 hours agorootparentprev>that it’s diversifying itself away from FirefoxAnd Firefox is their only worthwhile product, so moving away from Firefox means they&#x27;re dying. reply ForkMeOnTinder 14 hours agorootparentI don&#x27;t know what I&#x27;d do if Firefox died. Maybe it&#x27;s time Firefox starts diversifying itself away from Mozilla. reply sgift 14 hours agorootparentAnd with which business model? That&#x27;s the elephant in the room here. If it&#x27;s only about unpaid developers, Firefox already has these currently in addition to the Mozilla employees, but if it wants to stay relevant it needs paid developers working on it full-time. reply ranger_danger 15 hours agorootparentprevit&#x27;s only not dead yet because google is paying them to try to \"avoid\" being anti-competitive themselves. they&#x27;re the single biggest investor by far. reply phpisthebest 15 hours agoparentprevnext [20 more] [flagged] asystole 15 hours agorootparentEverything coming out of them recently, including the mailshots I see and even the onboarding copy, seems to indicate they see themselves as a political advocacy org first and a browser developer second. reply toomuchtodo 15 hours agorootparentDeveloping and operating open technology is political advocacy. Technology and its implementation is simply the expression of the ideology, rights, etc. Leadership choices, as well as their efficacy and compensation is still an important discussion. reply asystole 12 hours agorootparentNo, it’s not. Software development is software development. Political advocacy is political advocacy. reply lupusreal 14 hours agorootparentprev> Developing and operating open technology is political advocacy.That&#x27;s fine, they should leave it at that and do it the best they can because that is presumably their competency.But they can&#x27;t help themselves and insist on engaging various other political endeavors which they just aren&#x27;t good at but probably sounds good when they brag about it to their friends at dinner parties. Like operating &#x27;online spaces&#x27; for African lesbian women in tech or whatever the heck they&#x27;re calling it, which amounts to them somehow blowing millions of dollars to host a mastadon instance, which isn&#x27;t needed by anybody because all the marginalized groups they claim to be serving already have online spaces of their own on Facebook, discord, etc. reply toomuchtodo 14 hours agorootparentAgreed! This is what governance and oversight is for! reply macspoofing 15 hours agorootparentprev>they see themselves as a political advocacy org first and a browser developer second.That would be an improvement. Being a browser developer does not factor in anything they focus on. reply ydlr 15 hours agorootparentprevThe tragedy of it is that building Firefox is the most impactful political advocacy they do. reply freedomben 15 hours agorootparentprevImportantly, that was also the reason that Brendan Eich used Chromium as a base for Brave, rather than Firefox. Had that even not occurred, we might be in a position where more than one organization had a business interest is Firefox, which would be a complete game changer. reply rglullis 15 hours agorootparentI really doubt that is true. Speaking from the experience of working in a project that tried to build \"enterprise Chrome OS, but based on Firefox instead\", I can tell you that Firefox is still a lot harder to fork and customize than Chromium is. reply freedomben 14 hours agorootparentthanks, I&#x27;m sure there were more factors involved than just the firing, so that would make a lot of sense.Given your experience, If one were to fork Firefox entirely from Mozilla, very loosely, if one were a non-profit dedicated to just the browser and not trying to build a diversified company around it, what type of funding do you think an org would need to keep up with web technology changes and build a foundational engineering team? reply rglullis 13 hours agorootparentNo idea, because honestly part of the reason our project failed was that we he had zero in-house knowledge of browser internals.Mind you, our idea was to build a \"browser-based OS\", which meant at the time that our initial design was customize Ubuntu to the point that it could boot straight into a single-user windowless Firefox and to build all the \"shell\" as extensions. (I wrote a bit about on https:&#x2F;&#x2F;raphael.lullis.net&#x2F;thinking-heads-are-not-in-the-clo...) reply evasb 15 hours agorootparentprevThe problem is that Gecko is not that customizable, everything in Firefox is tightly integrated, and they abandoned all initiatives to make Gecko embeddable -- and this was a very big mistake imo.If Mozilla tried to address this, I think many Chromium-based browsers today would at least try the possibility to be Gecko-based. reply woodruffw 15 hours agorootparentprevDo you have a source for this? reply freedomben 14 hours agorootparentNot linkable, just my memory from a podcast interview at the time. IIRC the firing wasn&#x27;t the only reason to go Chromium-based, but it made the decision a lot easier reply lern_too_spel 11 hours agorootparentIf it were any reason at all, Brave would have chosen Chromium to start with. It didn&#x27;t. reply lern_too_spel 15 hours agorootparentprev> Importantly, that was also the reason that Brendan Eich used Chromium as a base for BraveThis is factually incorrect, the worst kind of incorrect. Brave Browser was initially built on Graphene, which uses Gecko. They then switched to Electron because Graphene was too raw, and from there to Chromium. Also, Brave contributes basically nothing to Chromium, so why would you think they would contribute anything to Gecko?https:&#x2F;&#x2F;brave.com&#x2F;the-road-to-brave-one-dot-zero&#x2F; reply wredue 15 hours agorootparentprevnext [4 more] [flagged] richbell 15 hours agorootparentI&#x27;m only aware of his views against gay marriage. Do you have more info on him being openly racist and sexist? Searching for his name + racist or sexist doesn&#x27;t seem to yield any results.Off topic, but I think your edit is against the spirit of HN and weakens your comment. reply phpisthebest 15 hours agorootparentprevyes everyone is racist and sexist according to many of a certin political stripe. I have never read or seen anything I would consider sexist or racist from Brendan Eich, possibly \"anti-gay\" but as a libertarian I also opposed gay marriage but for a different reason in that I believe the entire \"institution\" of marriage should be abolished as the government should have no role in interpersonal relationships at all.>>>The only reason one might not consider him extremist is purely on the basis of how radically far right the Overton window has been shifting.This is the funniest thing about your comment, to honestly believe the overton window has been shifting RIGHT just goes to show how many people are in an extreme political bubble, that after almost a decade of movement to the extreme left there as been a slight course correction very minor to the right and that is now \"extreme right\".I vividly remember debate the Moralist right about Online Porn and violent video games (mortal kombat was going to ruin the youth you see) in the 90&#x27;s only to be flanked by the insanity of the authoritarian left with their vision of speech codes and cancellation. No sir the Overton window is not on the right, it is very very much on the extreme left at least from the perspective of someone that has been around these issues for many decades now. The authoritarian left has done more damage to Free Speech, Free Association and the market place of idea;s that the Right could ever dream.... reply concordDance 15 hours agorootparentprevUnsourced and non-specific disparagement might be the reason for the downvotes here. People like to read posts that make them feel they have a better understanding of the world rather than a particular poster&#x27;s political viewpoints.I think including either sources or specifics (e.g. a specific statement he&#x27;s made or what sort of \"sexism\" or \"racism\" he indulges in) would result in less downvotes. reply Riverheart 15 hours agoparentprevHonestly these kinds of posts are tiresome and unhelpful. Yes, Mozilla is different now, yes the CEO makes too much money but if more people used their browser more they might invest more in it in instead of seeing it as a money sink to satisfy people who can’t be satisfied.Seriously, Mozilla cant win. A large voice of people constantly scold Mozilla for anything it does. We’ve heard from Firefox devs on how this bash fest affects them and we expect them to crank out awesome software despite the abuse. Instead of picking the lesser of two evils they say oh, Firefox is N milliseconds slower than Chrome so I’ll use the greater of two evils.Can we stop beating a dead horse? If you don’t like Firefox or Mozilla fine but don’t act like it’s unusable as a browser. It’s fine, it works, I don’t why everyone is so bothered by minor details when their goals and clearly better than their competition.Sure it may be slow for YOU (whatever your use case is) or maybe your extensions broke but average users who rely power users to recommend a browser don’t care. If they can open Facebook and Netflix it’s fine. So use Chrome yourself and recommend Firefox to the people this crap doesn’t matter to. And maybe, if they see the numbers tick up, they’ll change course. reply macspoofing 15 hours agorootparent>ut if more people used their browser more they might invest more in it in instead of seeing it as a money sinkDid you say that Firefox is a &#x27;money sink&#x27; for Mozilla? The thing that brings them half a billion dollars a year and corresponds to the vast majority of their revenue ... and is the only thing that gives them relevance .. to you, this is a &#x27;money sink&#x27;? reply Riverheart 15 hours agorootparentThere is more nuance here than your comment assumes. If Firefox makes X dollars by investing Y dollars but Y+N dollars doesn’t return more money, they will spend the minimum amount on Firefox and allocate the remaining funds elsewhere because otherwise they’d be throwing money away, or so the C-Suite assumes.You think Pocket and Mozilla VPN sprung up because creating new products was easier than investing more into the golden goose? If Firefox was the end all be all that would be the obvious, safest business decision. Clearly they don’t think it is and that they can get more money through diversification.A number of people here believe that Firefox is only supported by Google so they can avoid anti trust. If that were the case they’d pay Mozilla regardless of how good&#x2F;bad Firefox was wouldn’t they? reply JumpCrisscross 15 hours agorootparentprev> if more people used their browser more they might invest more in itLet me donate to support Firefox. Firefox, only. Hell, she can even skim off the top for her pay.They don’t do this because it would trash the gravy train. So Firefox is held hostage to support a litany of nonsense that lets them travel to conferences to speak about AI. reply Riverheart 14 hours agorootparentOkay, so what is complaining achieving here since you already acknowledge they won’t let you donate to Firefox directly?I’m not crazy about it either but I don’t lose sleep over it. It’s a browser and management could be better. I know it’s a touchy subject and people may not like to hear it but until I’m downvoted into oblivion I’m going to say this discussion is not worth rehashing time and time again.The donation suggestion is years old at this point. There is nothing new in this thread. reply JumpCrisscross 12 hours agorootparent> what is complaining achieving here since you already acknowledge they won’t let you donate to Firefox directly?That usage isn’t what’s constraining Firefox’s resources. Management is. Use Firefox if you like it. (I do, in part.) But don’t argue that if more people use it Mozilla will give a shit; it’s already a material fraction of their revenues and they’re ignoring it. reply Riverheart 12 hours agorootparentI will. If usage increased enough they would. The more users they have the more important their search becomes, gives them greater leverage and an audience to market products at. Unlike Google&#x2F;Microsoft&#x2F;Apple, they do not have a strong platform to reach users with and need something to coalesce a consumer-centric Mozilla ecosystem around.At the moment, it is unclear how much extra money, devoted to improving what, would increase Firefox’s market share significantly and am not surprised to see them explore other options. Brave, Vivaldi, etc, don’t seem to have figured it out either.I choose not to be cynical, nor will I allow myself to be upset about it one way or another and wish others would do the same.Being negative is more likely to scare off new users&#x2F;contributors than change Mozilla. reply dorfsmay 15 hours agorootparentprevOr split it off like they did with thunderbird. reply 127361 15 hours agorootparentprevSome of us scold Mozilla because they have lost track of their original purpose which is to develop a Web browser, instead they have started to become a political advocacy organization. One that is against freedom of speech and in favor of censorship. reply A4ET8a8uTh0 15 hours agorootparentprev what did not complaining ever achieve?self-satisfaction and just being a better person reply A4ET8a8uTh0 15 hours agorootparentHmm. I am willing to explore it a little further.Does one become a better person simply by staying quiet? reply Riverheart",
    "originSummary": [
      "The Mozilla Foundation's 2023 annual report reveals that CEO compensation increased while revenue and Firefox market share decreased, potentially indicating a shift in focus towards artificial intelligence services.",
      "The article discusses various topics including joining Lunduke.Locals.com for independent tech journalism, the Linux Foundation's reduced spending on Linux, the future of The Internet Archive, and openSUSE's refusal to allow the author to contribute.",
      "The Linux Foundation has been allocating more funding to blockchain and AI projects, raising concerns about their priorities, while The Lunduke Journal offers gift subscriptions and a guide on anonymous information leaking. Additionally, the summary mentions options for sending files and recommends an anonymous file sharing tool."
    ],
    "commentSummary": [
      "Mozilla's 2023 annual report reveals an increase in CEO pay, coinciding with a decline in Firefox's market share.",
      "Users attribute the decrease in market share to privacy features, mobile usage, and the dominance of Google and Apple.",
      "Discussions revolve around improving the browsing experience with plugins and extensions, addressing revenue decline, funding sustainability, and the potential for a privacy-focused alternative to Firefox."
    ],
    "points": 341,
    "commentCount": 300,
    "retryCount": 0,
    "time": 1703781874
  },
  {
    "id": 38792753,
    "title": "Configuring Lode Runner Web Game Canvas Position and Google Analytics Tracking",
    "originLink": "https://loderunnerwebgame.com/game/",
    "originBody": "Lode Runner Web Game#canvas { position:absolute; left:0; top:0; }window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date());gtag('config', 'G-DK8LV7TVRD');",
    "commentLink": "https://news.ycombinator.com/item?id=38792753",
    "commentBody": "Lode Runner (HTML5 Remake)Hacker NewspastloginLode Runner (HTML5 Remake) (loderunnerwebgame.com) 299 points by memalign 21 hours ago| hidepastfavorite68 comments didgeoridoo 20 hours agoThat Brøderbund triple crown never fails to bring me back to the half-underground computer software shop on the Main Street in my town some time in the early 1990s. I would read about upcoming games in PC Magazine, and visit almost daily when a new game came out to see if they had it in stock yet.Either that shop was pretty casual about staying on the cutting edge, or release dates were fuzzier back then, because it would often be months of agonized visits before the game showed up on shelves. By then, of course, I’d have gotten another PCMag, and my attention had leapt to a different — clearly far more advanced and interesting — game that was “only days” from launch.Anyway, during one of my Saturday morning visits to the musty-smelling and over-dehumidified shop, I ended up idly browsing through the Borland section and a Turbo C box caught my eye. My dad was incredibly pumped that I was showing an interest in something that could actually be productive and creative, so he bought it for me.Unfortunately, nine-year-old me did not turn out to be a natural prodigy. My dad’s coding experience stopped somewhere south of FORTRAN (he had juggled some accounting systems for ABC in the early 1980s) so he tried his best but couldn’t really make it click for me.So Turbo C went back on the shelf. Dark Forces was coming out next month, and I didn’t have time for twiddling with incomprehensible runes when there were stormtroopers to kill.What could have been. reply keerthiko 16 hours agoparentIf it makes you feel any better, I was (am) a game-addicted kid who did indeed pick up Borland C++ and coded a graphical DOS version of hangman alongside my older brother when I was 12, and made a tank game with a map editor solo when I was comfortable with pointers before I was 14 — it hasn&#x27;t made me a prodigal pioneer of computer programming or a wildly successful silicon valley C[E&#x2F;T]O. While I do still enjoy coding&#x2F;gamedev and earn a modest living from it, as a more evenly matured adult I have other interests that I care about just as much and keeps me occupied instead of poring over the latest and greatest in tech or gamedev.I guess what I&#x27;m saying is that being interested enough to become competent at a young age doesn&#x27;t necessarily equate to becoming an industry-leading savant by age 34...nor is it a prerequisite. If you are passionate today, I bet you could still level up to the forefront of whatever niche you care about with enough commitment. reply wenc 18 hours agoparentprevI tried Turbo C as an 8 year old and got as far as printf hello world and scanf. The pointer stuff seemed obtuse to me (coming from BASIC) and it was strange it didn’t have automatically sized string types (it was char[7] or something). In retrospect I should have gone the Turbo Pascal route as an 8 year old. reply codetrotter 17 hours agorootparentWhen I was around 12 years old I convinced one of my parents to buy a little book about C++ for me. I read the first chapter with great interest and wrote variations of input and output things with pen and paper.Then I tried to follow the instructions on how to build and run a program on a computer.I managed to install the IDE they recommended; one called Bloodshed Dev-C++. I managed to type the code for hello world into the IDE, and I managed to compile the program.It produced an exe file that had a black terminal icon.I double clicked the exe and it opened and closed very quickly.It would only be several years later, when I started at the university, that this confusing interaction made sense to me.At the time I thought I had made some mistake and I didn’t understand what or why.But what happened of course was that the program started, printed its output and exited, and it all happened so fast that I just saw a window open and quickly close.Fortunately I did eventually get better introductions to programming. But that first experience was a bit unfortunate heh. reply sliken 16 hours agoparentprevI did have IBM&#x27;s C compiler and a full set of printed manuals. Never clicked for me. I did however get turbo pascal, it was amazing. Compile&#x2F;edit&#x2F;run cycles measured in seconds. Online docs&#x2F;examples, etc.Ended up reading PC Tech journal, wrote an EGA driver for Turbo pascal, and even a few games. Had some silly mine based game written in Turbo Pascal that showed how many mines were adjacent, with the revolutionary idea that you didn&#x27;t have to hit enter after every move. It floated around as shareware on BBSs, someone even binary edited it make amusing changes to the text when you died. I allowed mines to cause chain reactions, people were amused that past a certain point increasing mine density made the game easier since the chain reactions got larger.Certainly a different world back then. reply toast0 10 hours agoparentprev> Either that shop was pretty casual about staying on the cutting edge, or release dates were fuzzier back then, because it would often be months of agonized visits before the game showed up on shelves.Distribution was pretty fuzzy back then. reply samstave 11 hours agoparentprevSo funny! I too was nostalgically brought back seeing that logo again - I literally stopped and evaluated it for a good moment, letting memories wash in.Also, I suck at LodeRunner. reply samstave 9 hours agorootparentThis is how symbols an Reservoirs will work in AI for behavioral function.Omnious crow much.(I am serious - we will see some upcoming shifts in the way black boxes interpret. reply mock-possum 15 hours agoparentprevHey dark forces was my introduction to modern 3D first person shooter level design - I played it before I played quake, before I even played DOOM. I made handfuls of custom levels for it over my childhood years, before moving up to half life &#x2F; source. Still have a very strong nostalgia for Dark Forces. reply Red_Tarsius 20 hours agoprevI haven&#x27;t played the original, but Lode Runner: The Legend Returns is one of my favorite games of all time. The later levels can be very challenging and I don&#x27;t remember ever reaching the final stage but it was an addicting experience. You can download a faithful remake of Legend Returns here: https:&#x2F;&#x2F;mmr.quarkrobot.com&#x2F;. Highly recommended! reply a1o 16 hours agoparentLode Runner: The Legend Returns is the best version of the game I think, the old one is too pixely (like the classic version on iPhone) and the later 3D ones lose the simplicity of the original. reply sillywalk 13 hours agoparentprev(Thanks for that link.)Agreed, one of my favourites. I also liked the background art, and the animated clips in between some of the different levels, and the CD&#x27;s Redbook audio soundtrack. It kind of reminds me of the game Creaks.I also remember it was one of the games that used WinG[0], before DirectX game out.[0] https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;WinG reply nlitened 16 hours agoparentprevOh God, I used to be obsessed with Lode Runner: The Legend Returns reply morkalork 16 hours agoparentprevI sank countless hours in the level editor. reply buescher 20 hours agoprevLode Runner was the first game to impress me with its play mechanics and its level builder. It was really an elegant little game. I don’t think it would make my all time top 10 today but it would probably make a “top 10 to date of release”. reply subtra3t 20 hours agoparentWhat would be your all time top 10? reply memalign 21 hours agoprevSource code: https:&#x2F;&#x2F;github.com&#x2F;SimonHung&#x2F;LodeRunner_TotalRecall reply mmphosis 17 hours agoprevThe original loaded pretty much instantly. Software of that era didn&#x27;t have minutes long \"Loading ... Please Wait\" screens for everything.Also, the original didn&#x27;t try to data collect ask to enter a name. For some odd reason, it took a while to get past this annoying dialog box on this web game.On the original, the player would keep running whereas this new game is laborious in that you need to hold down keys to keep moving. The original keyboard layout is: UIO = dig up dig JKL = left down right reply flymasterv 17 hours agoparent\"Software of that era didn&#x27;t have minutes long \"Loading ... Please Wait\" screens for everything.\"Someone never played an Electronic Arts game on C64. reply ddingus 14 hours agorootparentRight! The Apple ][ game loads are very fast. Those are the ones I remember. reply thwarted 17 hours agoparentprev> The original loaded pretty much instantly. Software of that era didn&#x27;t have minutes long \"Loading ... Please Wait\" screens for everythingHuh? Just about everything that didn&#x27;t come on a cartridge took forever to load, especially on a C64. That&#x27;s why there were \"fast load\" extensions. Most games would load once at the beginning, but sometimes you&#x27;d \"need to insert disk 2\" or \"flip the disk over\" to finish loading. What was truly impressive is that games like Times of Lore could entirely fit in 64k and only hit the disk when initially loading.> On the original, the player would keep running whereas this new game is laborious in that you need to hold down keys to keep moving.The original worked with a joystick, where you&#x27;d hold it in the direction to keep running. I&#x27;m not sure I ever played the original with the keyboard. You need to be able to stop in loadrunner in order to direct and avoid the movements of the enemies and dig holes in the right spots. reply nsxwolf 16 hours agorootparent> The original worked with a joystick, where you&#x27;d hold it in the direction to keep running. I&#x27;m not sure I ever played the original with the keyboard. You need to be able to stop in loadrunner in order to direct and avoid the movements of the enemies and dig holes in the right spots.I believe you would run endlessly on the Apple II version, because it had a non-centering joystick and it was more nimble of a game that way. You could stop the character with the space bar.The MS-DOS version had a nice control scheme with the numeric keypad. You character would run endlessly left or right, but the \"5\" key on the keypad (right in the center of the arrows) would make him stop. reply thaumasiotes 15 hours agorootparentprev> Huh? Just about everything that didn&#x27;t come on a cartridge took forever to load, especially on a C64.Taking a long time to load doesn&#x27;t mean having a minutes long \"Loading ... Please Wait\" screen.Civilization needed a lot of time, on a contemporary computer, to create the map. While doing so, it plays a slideshow with captions:In the beginning,the Earth was without form,and void.But the Sun shone upon the sleeping Earthand deep inside the brittle crustmassive forces waited to be unleashed.This goes on for quite a while, accompanied by appropriately epic music.How do I even know that this is actually a loading screen? Simple - the animation is not skippable on a low-powered computer. You can try, but the actual skip will only occur later, when the computer is ready for it. On a Windows-95-era computer, you can skip the whole thing; the game will be ready before the slideshow starts.But just because the game required a loading screen didn&#x27;t mean the designers thought it would make any sense to punish the player by making them spend minutes staring at a message saying \"I bet you feel pretty stupid for buying this game now, huh?\". The Civ I intro is famous and well loved. You can watch a youtube video of it here: https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=PtK388b9drE . You can read the entire text on TvTropes, where a fan has posted it as a memorable quote: https:&#x2F;&#x2F;tvtropes.org&#x2F;pmwiki&#x2F;pmwiki.php&#x2F;Quotes&#x2F;Civilization . It is the first thing listed on that page. reply justsomehnguy 16 hours agoparentprevThere is a repeat action toggle. reply jddj 21 hours agoprevI spent many hours as a child playing load runner (the legend returns) but I have no idea where we got it.I think our Compaq Presario at the time must have come packaged with a sierra disk. reply theandrewbailey 21 hours agoparentI remember having a Compaq computer in the 90s (some 486-based all-in-one with a CD drive), and had The Legend Returns. I kinda grew into liking it, but I&#x27;m not sure where the disc ended up. I found an ISO of Mad Monks Revenge (an expansion&#x2F;re-release) on an abandonware site 15+ years ago. Works great on my retro PC. reply a1o 20 hours agoparentprevCompaq Presario did come with Loderunner - and also The Evermore Incredible Machine! reply dvirsky 14 hours agoprevThis is pretty great, I used to love this game as a kid. I played it on a PC in the late 80s. Besides being a fun game, it was probably the first game I&#x27;ve played where you could design your own levels, which was awesome, we used to challenge each other to custom levels in our school&#x27;s computer lab. reply oflannabhra 20 hours agoprevI remember going quite deep on lode runner’s level editor in school with friends. I think there were a variety of edge cases that (almost like exploits) that allowed our levels to be incredibly complex and harder than any of the pre built level. A great reminder that giving people tools is almost always a creative boon. reply pjz 5 hours agoparent...right? Anyone remember Pinball Construction Set? reply intrasight 21 hours agoprevGreat memories. Was our favorite game on my Macintosh 128K. My nephew brought my Mac back to Italy with him just so he could continue playing. I don&#x27;t think I&#x27;ve played it on any other computer since. reply todotask 21 hours agoprevIssue: stuck at name input field. I cannot run! reply _0ffh 20 hours agoparentSame here, I just get a beep on \"enter\", nothing going... reply sltkr 20 hours agorootparentI think the site requires you to pick something unique (???). For me, entering AAA doesn&#x27;t work but entering HJFDKFDSGHK works. reply kleiba 20 hours agorootparentThe classic ASS worked for me. reply olvy0 15 hours agoprevThis brings back so much memories of playing the original on my Apple IIe.Glad to have found about Lode Runner: The Legend Returns, Lode Runner Online: The Mad Monks&#x27; Revenge, and its remakes from the comments here. There goes my weekend...Another very good and free remake (which doesn&#x27;t even include ads!) for mobile platforms is&#x2F;was Lode Runner 1 by Nexon. It appears it&#x27;s no longer on Google Play, but it can be found on APKMirror. I still play it from time to time.Review: https:&#x2F;&#x2F;toucharcade.com&#x2F;2017&#x2F;05&#x2F;19&#x2F;lode-runner-1-is-a-well-m... reply nevster 10 hours agoprevAlways love seeing Apple II related stuff on HN.The first game I got with my Apple &#x2F;&#x2F;c was Championship LodeRunner - http:&#x2F;&#x2F;www.oldcomputerstuff.com&#x2F;championship-lode-runner-cer... reply squarefoot 13 hours agoprevI don&#x27;t remember playing Lode Runner back in the day, although it was quite famous. Back then my favorite games in the same league were Pharaohs Curse and Montezuma&#x27;s Revenge.https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=rBSW6r9-lQohttps:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=aq7xwDrKwBs reply wiredfool 18 hours agoprevDamn, got 30 levels in, 7 men left, and it reset when I went to the bathroom.I wasted so much time on this as a kid, and this is the most faithful to the &#x2F;&#x2F;e version that I&#x27;ve ever seen. reply nsxwolf 13 hours agoparentIt resumed on my highest reached level when I revisted the page. reply Cerpicio 20 hours agoprevI remember spending a lot of time playing this game. Even my mom liked it, and she never played video games. I wonder if she&#x27;ll want to play this version. Great to see it again! reply thealienthing 15 hours agoprevIt goes without saying that I could easily Google this myself, but I’ll ask anyway for those who are also wondering: what is the significance of HTML5 for this implementation? I’m not a web guy have gotten by with simple html css js and occasional templating when needed. Is HTML5 supporting some native programming? reply rijoja 13 hours agoparentThe canvas element I suppose, and yeah maybe gamepad and joystick support as well. reply foresto 12 hours agoprevAnyone else find that pressing a key while another key is pressed causes the game to forget that the first key is still being pressed? I don&#x27;t remember this being a problem in the original. Browser limitation, or bug? reply eddyfromtheblok 20 hours agoprevI played this as a kid on a Franklin PC, an Apple II clone. It was more interesting than Pac-Man at the time and IIRC you could design your own levels. reply inetknght 17 hours agoprevAhhh I remember many (well... maybe not so many compared to current games) hours playing Lode Runner on a Mac Plus when I was 3 years old. I remember editing the maps and my dad thinking I was editing a locked floppy disk... when really I just figured out how to unlock it and re-lock it afterward. reply ddingus 14 hours agoprevThis looks and plays great!My favorite version of this game runs on the Apple ][ and I am going to fire mine up and have a go this evening to hear the goofy 1 bit sounds.To play on Android, I had to connect a keyboard. reply harha_ 12 hours agoprevIt shouldn&#x27;t take this long to load. Honestly it should just launch into the game without a loading screen at all. reply wg0 17 hours agoprevSeeing and playing this for the first time and... it&#x27;s really very interesting game.Is there a value in a total remake (different graphics, art style) of this game? I&#x27;m sure many already exist. reply the__alchemist 18 hours agoprevOh man! I played the sequel when I was a kid after it came included on my dad&#x27;s work computer. Entertainment on several family trips! reply MourYother 17 hours agoprevLoads for ages, prompts for player name. smh... reply foresto 12 hours agoparent> prompts for player name. smh...Also triggers Firefox canvas fingerprinting protection, but doesn&#x27;t seem to need it to function. What&#x27;s it doing there? reply nikolay 14 hours agoprevOne of my favorites in the past. This implementation is pretty good! reply RomanPushkin 16 hours agoprevWhat framework&#x2F;libraries did you use while making the game? reply wiredfool 14 hours agoparentMy guess is that this is a 6502 emulator plus the original code in wasm. It’s too close to the &#x2F;&#x2F;e version to be a reimplementation. reply xbar 15 hours agoprevCrap. If this ruins 2024 like it ruined 1987, I am in deep trouble. reply solardev 17 hours agoprevI&#x27;m curious, why does it take so long to load? reply rgrieselhuber 19 hours agoprevMan I used to love this game. reply lovegrenoble 14 hours agoprevLove this game reply bitwize 11 hours agoprevSee also xscavenger, old-school X11 Lode Runner clone: https:&#x2F;&#x2F;www.linuxmotors.com&#x2F;linux&#x2F;scavenger&#x2F;index.htmlEnjoy it now, while X11 is still quasi-relevant and runnable on today&#x27;s computers! reply thriftwy 20 hours agoprevhttps:&#x2F;&#x2F;okgamer.ru&#x2F;dendi-igry-onlayn&#x2F;2356-lode-runner.html took five seconds to boot, whereas on this web site it took ten seconds to get to 25% after which I have up waiting.HN hug of love? reply archsurface 14 hours agoprevWow. Memories. Loving it. reply dzek69 19 hours agoprev [7 more] [flagged] StayTrue 18 hours agoparentMany, many sites are slow when on the front page of HN. Anecdotally it loads in under 10s for me. reply stronglikedan 18 hours agoparentprevJust under 15 seconds for me. Methinks you need a better internet connection. reply Retr0id 18 hours agorootparentSeems like the main factor here is going to be round-trip latency, not throughput - i.e. it&#x27;s going to depend on your geographic location, more than it needs to.Looks like it&#x27;s hosted in Arizona, US, so ymmv (quite literally) reply rgrieselhuber 19 hours agoparentprev [4 more] [flagged] ekianjo 18 hours agorootparentit&#x27;s a valid comment though. For a game like that, loading more than 10 seconds makes no sense on normal machines with fast connections. reply commandlinefan 18 hours agorootparentIn fairness, that&#x27;s at least how long it used to take to load on my Commodore 64, so maybe the author was going for authenticity? reply badsectoracula 18 hours agorootparentprev [–] Considering every other comment is positive and about the game i don&#x27;t see how this is \"typical HN comment\". replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The code snippet sets the position of the Lode Runner web game canvas to \"absolute\", meaning it will be positioned relative to its closest positioned ancestor.",
      "The canvas is positioned at the top left corner of the web page, ensuring it is displayed in the desired location.",
      "In addition to positioning the canvas, the code also includes the initialization and configuration of Google Analytics tracking for the web page, allowing for analysis of user interactions and website performance."
    ],
    "commentSummary": [
      "Users engage in a discussion reminiscing about their experiences playing computer games, particularly Lode Runner, and discuss gameplay mechanics, level design, and loading times.",
      "Some users share their experiences with other classic games from the Windows 95 era and express concerns about technical issues on websites hosting these games.",
      "Discussions include debates on the loading time of the game being impacted by round-trip latency and differing opinions on what is considered acceptable for loading times on modern machines."
    ],
    "points": 299,
    "commentCount": 68,
    "retryCount": 0,
    "time": 1703766246
  },
  {
    "id": 38794625,
    "title": "Simulating Artificial Life: Complexity Arises from Simplicity",
    "originLink": "https://github.com/hunar4321/particle-life",
    "originBody": "Particle Life Simulation A simple program to simulate primitive Artificial Life using simple rules of attraction or repulsion among atom-like particles, producing complex self-organzing life-like patterns. Excluding the GUI elements, the code is less than a page. The video tutorial and walkthrough are available below. Learn More Here (YouTube video tutorial): https://youtu.be/0Kx4Y9TVMGg Online Demo (JavaScript version): Click here for a live demo (JavaScript): 2d - https://hunar4321.github.io/particle-life/particle_life.html 3d - https://hunar4321.github.io/particle-life/particle_life_3d.html Interface (C++ version) Example Results Some Interesting Patterns to Reproduce: You do not need to be exact with the parameters to reproduce these patterns. The best way to get interesting patterns is to first try random parameter explorations, once you find an interesting pattern, try fine-tuning it gradually. To avoid becoming stuck at a local maximum, you can make some occasional big parameter jumps. In this way interesting and different patterns shall keep poping up. To use: Download this repo. unzip the file then go to /particle_life/bin/ folder and click on particle_life.exe Code: The source code is available in C++, JavaScript, and Python. Watch this YouTube video for a walkthrough tutorial: https://youtu.be/0Kx4Y9TVMGg If you would like to contribute to the C++ program, the core algorithm is the first 100 lines of code at: \"/particle_life/src/ofApp.cpp\". The rest are GUI components and rendering controls which are provided by the openFrameworks library an opensource and easy-to-use image rendering library. To start, download this repository then download openFrameworks library from here: https://openframeworks.cc/. Use openFramework's projectGenerator and import /particle_life/ folder to the project. Alternatively, generate a new openFramework project and add ofxGui. Once the project files are generated replace the /src/ folder with the one provided here. You can now compile the C++ code on your machine. Other Ports: Godot Rust Go-1, Go-2, Go-3 Python Lua QB64-PE Webgl Java C# Winforms FreeBasic The JavaScript code is as simple as this: Also, look at the particle_life.html file for a more optimized version - thanks to those who have contributed.//Hunar Ahmad @ brainxyz m = document.getElementById(\"life\").getContext(\"2d\"); draw = (x, y, c, s) => { m.fillStyle = c; m.fillRect(x, y, s, s); }; atoms = []; atom = (x, y, c) => { return { x: x, y: y, vx: 0, vy: 0, color: c }; }; random = () => { return Math.random() * 400 + 50; }; create = (number, color) => { group = []; for (let i = 0; i{ for (let i = 0; i0 && d = 500) { a.vx *= -1; } if (a.y = 500) { a.vy *= -1; } } }; yellow = create(200, \"yellow\"); red = create(200, \"red\"); green = create(200, \"green\"); update = () => { rule(green, green, -0.32); rule(green, red, -0.17); rule(green, yellow, 0.34); rule(red, red, -0.1); rule(red, green, -0.34); rule(yellow, yellow, 0.15); rule(yellow, green, -0.2); m.clearRect(0, 0, 500, 500); draw(0, 0, \"black\", 500); for (i = 0; i < atoms.length; i++) { draw(atoms[i].x, atoms[i].y, atoms[i].color, 5); } requestAnimationFrame(update); }; update(); Related topics: Particle Life Simulation, Primordial Soup - Evolution, Conway's game of life, Cellular automata, Self organzing patterns, This project was inspired by: Jeffery Ventrella's Clusters http://www.ventrella.com/Clusters/. I do not have access to Ventrella's code but I guess the main difference of this project from the other particle life projects is that I did not implement collision detection and this made simulating thousands of particles possible in real-time. Also, I added GUI controls to change the parameters in real-time allowing easy fine-tuning and exploration, hence, I was able to find some never-seen-before patterns emerge form some extremely simple models of relations. The code here is probably an order of magnitude simpler than any other Artificial Life codes out there because I started this code solely as an educational material for non-programmers and general audience to prove the point that complexity can arise from simplicity. Todos: Adding the ability to save and load parameters (so that people can easily share the interesting models they find) Ability to add more particle types (currently it is fixed to four particle types) Currently, the biggest bottleneck is the nested for-loops (which calculate the pairwise distance among all particles) making the computational complexity quadratic. It would be amazing if we could find a way around. Alternative to point 3, computing the pairwise distances are embarrassingly parallel so it can be computed on GPU. Adding the ability to resize the screen and improving boundary-checking as many fast moving particles can escape the screen bounds. Adding a more intuitive UI so that it gives the ability for a finer control over the parameters. Adding a randomize button or, even better, having a simple meta rule to mutate the initial rule continously and recursively. This way the patterns will never get stuck on a local maximum and will keep changing! A better way to fine-tune is to use an evolutionary algorithm to select and optimize the parameters but one needs to write a fitness function for that. I currently don't know what fitness function corresponds to in the realm of this program. In our world the fitness function is competition and survival of the fittest. However, here we fine-tune and select the parameters that produce interesting patterns for us but the word \"interesting\" is easier to say than to define!",
    "commentLink": "https://news.ycombinator.com/item?id=38794625",
    "commentBody": "Particle LifeHacker NewspastloginParticle Life (github.com/hunar4321) 278 points by hyperific 18 hours ago| hidepastfavorite71 comments franky47 5 hours agoOne of my first coding projects at school was Conway&#x27;s game of life, but I found the black and white a bit too boring so I pushed the assignment further by introducing RGB \"genes\", and give spawns a combination of their parents&#x27; colours (with random mutations).It&#x27;s very fun watching which \"faction\" might take over the board.Demo: https:&#x2F;&#x2F;genetic-life.surge.sh&#x2F;Source (ported from the original C++ into Rust&#x2F;WASM): https:&#x2F;&#x2F;github.com&#x2F;franky47&#x2F;genetic-life reply pbowyer 12 hours agoprevThis is the most interesting one I generated: https:&#x2F;&#x2F;hunar4321.github.io&#x2F;particle-life&#x2F;particle_life.html...It eventually settles down to one large and unstable blob and another stable. Neither move so that&#x27;s it. But before that it did what I had expected to see with objects meeting and merging reply thanhhaimai 3 hours agoparentTagging along: https:&#x2F;&#x2F;hunar4321.github.io&#x2F;particle-life&#x2F;particle_life.html...This one is really fun for me. It has a lot of actions and good shapes. reply scotty79 32 minutes agorootparentThis one is really dynamic: https:&#x2F;&#x2F;hunar4321.github.io&#x2F;particle-life&#x2F;particle_life.html... reply billytetrud 17 hours agoprevThis is fascinating. It&#x27;s like a more complex game of life than John connoway&#x27;s. It&#x27;s crazy that little creatures seem to form at such small scales easily with these parameters. It&#x27;s almost like the parameters of our real universe intentionally made it difficult to form life, rather than easy as some people seem to think. reply at_a_remove 15 hours agoparentThey are less creatures than molecules. Now, mind you, as some complex sets of rules approach steady state I can pretend they are far-flung stellar empires with colors ascribed to each type of system of government (and have).What is fooling you is the motion. This is sustained because the system has no conservation principles built in. You can make A-B pairs where B is attracted to A, A is repelled by B, and off they go, zoom. Were the meta-rules devised such that conservation of energy or momentum and such were baked in to whatever system you devised, you would see less exciting structures which would more resemble a late-stage pentamino explosion in the Game of Life.With a sufficiently large processor, I would like to see this in three dimensions and more options for force, such as dropping off as the inverse of r or r-cubed or even r * log(r), or some \"repulsive at a distance, attractive at very close quarters\" particles. I have a feeling that such a system would grind to a halt even with clever optimizations. reply itishappy 7 hours agorootparent> I would like to see this in three dimensions...Oh, there&#x27;s one of those too! I don&#x27;t see ways to change the falloff though, just the magnitude...https:&#x2F;&#x2F;hunar4321.github.io&#x2F;particle-life&#x2F;particle_life_3d.h... reply noduerme 10 hours agorootparentprevThis already does look like it has falloff... mutual attractors clearly seem more attracted to nearby particles than to larger groups further away. reply wetmore 9 hours agorootparentI assume it falls off at inverse of r squared, which is why the person you&#x27;re replying to is mentioning other functions besides that one. reply noduerme 4 hours agorootparentI read them differently.>> I have a feeling that such a system would grind to a halt even with clever optimizations.I took this to mean that they thought there was no falloff calculated at all. If there is, I don&#x27;t see why substituting a different function, e.g. cube vs square, would be significantly more CPU-intensive. reply at_a_remove 2 hours agorootparentYou focused on just one clause. Consider the whole:1) Three dimensions, not two. Therefore distance is not the square root of (delta-x * delta-x + delta-y * delta-y) but the cube root of (delta-x * delta-x + delta-y * delta-y + delta-z * delta-z). More operations.2) Three dimensions, not two. As you start increasing the number of dimensions, the simulation feels more and more empty. One hundred particles on a line a thousand units long is crowded. One hundred particles on a grid of one thousand by one thousand feels like more \"room\" for that same number of particles. In a volume of a thousand by a thousand by a thousand, one hundred particles feels too few, and one would naturally increase the number of particles. Naively, which is to say without optimizations, the number of force computed grow as N-squared. More operations.3) Cube falloff goes by r * r * r, rather than r * r. More operations, by fifty percent. And I did suggest some more exotic functions in there which certainly could be more daunting. reply billytetrud 14 hours agorootparentprevAh that&#x27;s interesting, I can see how that would result in a lot more dynamic behavior. reply dustingetz 13 hours agorootparentprevneed analog computer for that :) reply squigz 15 hours agoparentprevThere&#x27;s no reason to believe life is particularly rare in the universe either, though. reply billytetrud 15 hours agorootparentThere are, in fact, reasons to believe that. Nothing definitive of course. But the fact that we haven&#x27;t been absorbed by a von neumann swarm or something like it places strict limits on the prevalence of life and&#x2F;or what stages that life can achieve. One would either have to belive that intelligent life is vastly less likely than non-intelligent life, or that life itself is quite rare, or that life simply hasn&#x27;t been around for much longer than life on earth. reply UncleOxidant 14 hours agorootparent> One would either have to belive that intelligent life is vastly less likely than non-intelligent lifeThat seems like a valid belief. Getting to a technological stage such that a species would be detectable over the vast distances of space could indeed be quite rare. You have to also consider the temporal aspect: intelligent, technologically advanced species may have evolved several times but gone extinct before we could notice them. Do other technically advanced species exist in the universe? Probably, but it could be that at any given time there might only be about 1 in any given galaxy and the distances between galaxies are great enough that we&#x27;d never likely be able to make contact. (and ~1 per galaxy would still mean that there would be a whole lot of intelligent species out there - it&#x27;s just that it would be extremely difficult to make contact with any of them) reply billytetrud 14 hours agorootparent> That seems like a valid belief.Its not at all clear in general. It might be true. But it also might not. It seems quite reasonable to believe that life inevitably evolves into intelligent life if given enough time. Why some life would and some life wouldn&#x27;t isn&#x27;t at all clear.> advanced species may have evolved several times but gone extinct before we could notice them.All the potential answers to the Fermi Paradox, for sure. But it would almost definitely have to be species that never got to the \"expand rapidly into other solar systems\" phase.> at any given time there&#x27;s only about 1This doesn&#x27;t preclude us knowing about that 1. If it got to earth at any time in the last billion years, we might have a pretty high chance of discovering it if it existed on earth for any significant legnth of time. reply UncleOxidant 13 hours agorootparent> But it would almost definitely have to be species that never got to the \"expand rapidly into other solar systems\" phase.It&#x27;s certainly not a given that our species will ever do that or that we&#x27;ll last long enough to do that.> This doesn&#x27;t preclude us knowing about that 1.Let&#x27;s say we&#x27;re the 1 currently in the milky way galaxy. There could be another in the closest galaxy the Canis Major Dwarf Galaxy which is 25,000 light years away. But being able to detect a signal from 25,000 light years away... well, that&#x27;s the problem. And what if they&#x27;re just getting to the point where they could transmit a signal now? So maybe in 25,000 years we&#x27;d notice something... maybe? (if we&#x27;re still around) As far as physically traveling 25,000 ly, well we know that even trying to go 1 ly is going to be super difficult technically. Similar problems even if there&#x27;s an intelligent species on the other side of our own galaxy since it&#x27;s 52K ly across. reply petters 3 hours agorootparentprev> It seems quite reasonable to believe that life inevitably evolves into intelligent life if given enough time.From what we have seen on Earth, it does not seem inevitable. Dinosaurs were the largest land animals for a very long time and they did not, as far as we know, evolve towards being more intelligent. The same seems to be true for many other animal groups that have been around for a long time. reply squigz 14 hours agorootparentprevI don&#x27;t see not being eaten by a swarm of machines as evidence of anything - but it is interesting to me that you&#x27;d qualify all this with \"or what stages that life can achieve\". So simple life could be extraordinarily commonplace, and considering the context of this post... reply billytetrud 14 hours agorootparentIt is a fact that we haven&#x27;t been eaten by a swarm of anything. Facts are evidence. If you don&#x27;t understand that, I don&#x27;t think we&#x27;ll be having a productive or fun converstion. Sound more like you&#x27;re interested in making innane snarky comments to fuel your own ego. Good luck with that. reply squigz 14 hours agorootparentWould you like to actually address the point I made about simple life? reply billytetrud 12 hours agorootparentIf you made a point about that, it was not clear to me. Perhaps you were implying that simple life could be very common even if intelligent life isn&#x27;t. While yes, that is a possibility, that says nothing of its probability. Were that the circumstance, it leaves the question open as to why simple life would be common but intelligent life not common. reply squigz 10 hours agorootparentI&#x27;m just a bit confused as to why the subject of intelligent life is the focus here, considering the context of this post is basic cellular life.As to why simple life would be more common than complex life... that seems obvious to me: simple systems are easier to emerge from chaos than complex ones. replygeraldwhen 13 hours agorootparentprevThere is no evidence that space travel is practical or sustainable. The only viable spaceship known to man is Earth, and we don’t steer it.Maybe there are lots of earth-like planets with intelligent beings, but travel is impossible and communication is useless given the time delay. reply dekhn 12 hours agorootparentI think it&#x27;s reasonable to say that we could probably build a fleet of ships containing tardigrades in their dried-out tun state (which is biologically inert, up to tens to hundreds of thousands of years, and extremely resilient to radiation and vacuum), launch them with enough mass to reach a nearby (up to 10 LY at 0.001c?) solar system with a planet that has water, and deliver the payload to the water, such that the tardigrades would revert to their normal living state.It would cost a lot of money. It would take a very long time (hundreds of thousands of years). Nobody alive today would see the results. There are any number of systematic and non-systematic failures that could occur. building things that work autonomously for 100Kyears is nontrivial. Even if you succeeded- say, 100Kyears from now, one out of a thousand of your samples crash-lands onto a remote planet and revives- congratulations, you&#x27;ve maybe just contaminated an otherwise unknown ecosystem.The story gets more interesting if earth has fusion, stable government and research funding, then you could make humans into tuns that can travel for 10K years, and have advanced propulsion (.01-.1c), pre-deliver full infrastructure... reply billytetrud 12 hours agorootparentprevSaying there is \"no evidence\" is factually absurd. There are a whole host of possibilities for practical long distance space travel. At very least for small light-weight robots. And it even seems possible that we can viably transport our entire solarsystem: https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=v3y8AIEX_dU . No evidence indeed... only if you lack imagination. reply lebean 6 hours agorootparentprevTurns out that the great filter was something as mundane as interstellar travel being impractical. reply nox100 12 hours agorootparentprevIt&#x27;s not hard to believe that we could make self replicating drones in the next 100 years that go from system to system, make a few more, and continue. We&#x27;ve already sent drones out of our solar system. They don&#x27;t have to go fast. They&#x27;d still visit every system in the known universe in a \"relatively\" small amount of time. (relative to the age of the known universe). reply scotty79 26 minutes agorootparentprev> the fact that we haven&#x27;t been absorbed by a von neumann swarm or somethingHaven&#x27;t we been? When I look all around, the whole place is simply crawling with self-replicating machines and some of them even got to a point of making first attempts to leave this planet to infect a new one. reply aacid 14 hours agorootparentprevI honestly believe that high intelligence while short term is extremely advantageous, long term it is self-destructive.I like to imagine there are countless planets with perfect ecosystems of living organisms where no single species dominates whole planet. reply billytetrud 14 hours agorootparentI&#x27;m curious what makes you think that. That is, of course, one of the general solutions put forth to the fermi paradox. Ie either the species develops species killing weapons (like nukes) or individuals gain massively destructive weapons. But I find these things unlikely. Even exploding all of our existing nukes in the most devastating locations would not destroy humanity or the earth. We&#x27;d bounce back - tho if such an event is inevitable, perhaps we would ride an endless wax and wane between devastating destruction events every 1000 years. reply pixl97 12 hours agorootparentprevThere is no such thing as a perfect ecosystem because we live in an imperfect universe, this is if you look at any significant timescale. Eventually you&#x27;re going to get hit by an asteroid or a gamma ray burst, or some mega volcano is going to pop and cause world wide levels of destruction. And generally we see some reestablishment species is going to dominate for some time. reply SkyBelow 12 hours agorootparentprevThere are a number of possibilities, which depends upon what methods of interaction we are looking at.For example, with direct contact, we can estimate a probability of life along side how possible space travel is. Perhaps space travel isn&#x27;t easy or fast at all and so there is plenty of life, but it is mostly stuck to its solar systems and maybe a few neighboring stars. Overall, given that we can send and receive signals much easier than we can send and receive space crafts, I think this isn&#x27;t as useful a metric.The better one is that we don&#x27;t see signals from other life elsewhere, but this still has to be measured by how likely life elsewhere would be able to see our signals.Lastly, there is the matter of what it means to be rare. Say only 2 or 3 planets in a given galaxy end up developing intelligent life, is that rare? Given the number of galaxies in the visible universe, that is hundreds of billions if not trillions of planets with intelligent life. Yet with only 2 or 3 in a galaxy, it would be easy for us to not see any signs because maybe we are the only ones in our galaxy or our galactic neighbors are on the other side of the milky way and we have no technology to communicate, nor will we for the near future. Hundreds of billions of intelligent species can be considered both rare and not rare given the sorts of scales we are talking about.Also other edge cases, like maybe intelligent life is common enough but it tends to rarely progress past a certain point of development due to wiping itself out. Personally, every explanation I&#x27;ve heard or can think of has some sort of unpleasantness to it, much like the quote that says either we are alone or we aren&#x27;t alone, and both ideas are scary in their own ways. reply ath92 9 hours agoprevThat&#x27;s a funny coincidence, I recently made something similar: https:&#x2F;&#x2F;webgl-particle-life.netlify.app&#x2F; (source: https:&#x2F;&#x2F;github.com&#x2F;ath92&#x2F;particle-life)This version does everything in webgl shaders and keeps all state for the simulation in textures &#x2F; uniforms. This allows it to simulate and draw more particles. Unfortunately it may not run on all devices because it uses some less supported webgl extensions. reply bezdomniy 1 hour agoprevI made a multithreaded Rust version of this (while learning Rust): https:&#x2F;&#x2F;github.com&#x2F;bezdomniy&#x2F;rust_particlesyou can run it with: cargo run --releaseNo input yet, just randomly initialises params each run. But it runs with 4000 particles on my machine. reply MagicMoonlight 1 hour agoprevEven with such a basic system you immediately start to get self-organising little bubbles of life. If something had a way to replicate in these bubbles, you would have the first cell. reply dang 13 hours agoprevRelated:Particle Life Emerges from Simplicity - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34156592 - Dec 2022 (1 comment)Particle Life Simulation - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=33680845 - Nov 2022 (1 comment)Particle Life - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21875720 - Dec 2019 (7 comments) reply chuckadams 11 hours agoprevLooking at the 3d js version right now. This might be my most favorite thing since the original Conway&#x27;s life or maybe the old Primordial Life screen saver from the 90&#x27;s. Have you considered adding shader support? I&#x27;d love to see a slowed-down more \"blobby\" version running full-screen. Probably turn my mac into a space heater too, but right now that&#x27;s a bonus ;) reply michae2 11 hours agoprevI never considered it before, but by comparison this makes me realize that Conway&#x27;s Game of Life is wave-based rather than particle-based. That is, in CGoL the rules apply to locations of the grid rather than objects traveling across the grid. I wonder if this system could also be constructed in a wave-based fashion?Also, it seems like in this system the speed of light is infinite, since every particle acts on every other particle each frame, regardless of distance. In CGoL there is a speed of light, since cells can only influence their immediate neighbors each frame. reply jasonjmcghee 15 hours agoprevThis is a much more complete implementation, but I took a crack at this a while ago using compute shaders in Godot 4, if that&#x27;s interesting to folks!https:&#x2F;&#x2F;github.com&#x2F;jasonjmcghee&#x2F;compute-shaders reply grumblehound 9 hours agoprevReminds me of Hiroki Sayama&#x27;s Swarm Chemistry:https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=BpN-DE3o6u8https:&#x2F;&#x2F;bingdev.binghamton.edu&#x2F;sayama&#x2F;SwarmChemistry&#x2F; reply emmanueloga_ 11 hours agoprevWhat are the philosophical implications of these life models? Is it implied that life as we know it may also have a simple set of rules like this that generated it? Or is it just a game? (as in Conway&#x27;s GoL).Found some info here, seems like these are open questions [1].--1: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Artificial_life#Philosophy reply spacecadet 13 hours agoprevSuper cool! Earlier this year I created a zero-player simulation using pygame and several AI coding assitants to see how capable they might be. In the end I had to clean up alot, but Im happy with how it turned out.https:&#x2F;&#x2F;github.com&#x2F;derekburgess&#x2F;simcraft reply shlomozippel 9 hours agoprevAnother similar implementation, including music responsiveness: https:&#x2F;&#x2F;vuzic.app&#x2F; reply bloopernova 13 hours agoprevofftopic: I got a new PC for xmas, and hadn&#x27;t really stress tested it to make sure the fan management curve was correct. Running the linked site&#x27;s demos made the fans work and they&#x27;re really responsive. Cool stuff! reply beders 15 hours agoprevIt is amazing how easily self-sustaining structures emerge from such simple rules. Mesmerizing. reply Buttons840 11 hours agoparentIs there any \"sustaining\" in the simulation? Is death a possibility? If not, then there is no \"sustaining\". reply MagicMoonlight 1 hour agorootparentThere was no death for the original life.Rotting is caused by living organisms. Being eaten is caused by living organisms. Disease is caused by living organisms.They could not die until death evolved. They could be physically destroyed but that’s not that likely. reply Lerc 9 hours agoprevI watched the Youtube video on this yesterday and have been itching to try a webgl shader implementation ever since. reply BirdbrainEng 9 hours agoprevIf anyone is more interested in this kind of stuff, then I can recommend checking out \"Smooth-life\" and \"Lenia\", the latter of which has a couple different, more complex variants... \"Flow Lenia\" or \"Particle Lenia\" come to mind in relation to this particular (pun intended) topic. reply brap 9 hours agoprevIf this doesn’t convince you spontaneous life is possible I don’t know what will reply theophrastus 15 hours agoprevWell done: 3d is an option! Always wondered what emergent properties result from simple rules worlds when the dimensionality goes from 2d to 3d. reply hsnewman 16 hours agoprevThis shows how life is emergent from simple rules. reply smusamashah 12 hours agoparentNone of these simulated systems show replication evolving out of random rules though. reply MagicMoonlight 1 hour agorootparentIf you fully simulated RNA they would. Someone has already reproduced RNA that self-replicates. reply quickthrower2 4 hours agorootparentprevNot enough compute, I guess :-). reply downboots 15 hours agoparentprevhow does it show it? what is meant by life? are rules necessary or just transitions? what enables rules at all? reply matt-attack 13 hours agorootparentA general question by those that support ideas like Intelligent Design seem to focus on the notion of order from randomness. Specifically the natural intuition is that the vast amount of order associated with life could never arise on its own from just randomness. It&#x27;s encouraging to be able to so quickly demonstrate that in fact order can emerge from chaos. Even if the organelles or molecules or whatever you might consider them in these simulations don&#x27;t map specifically to organelles or molecules or cells in our world, the general concept is important to understand. reply downboots 12 hours agorootparentwhere do the rules come from? Is it randomness all the way down? how come they run at all? how can a lifeform in a dynamic mess of jiggling things have a claim to understanding? reply hyperific 15 hours agorootparentprevPhysical and chemical properties of organic molecules give rise to emergent life-like structures&#x2F;patterns. Molecules interacting via hydrogen bonding, solubility, hydrophobicity and hydrophilicity - repulsion and attraction - can produce protomembranes under the right conditions.In this demonstration, particles with certain rules can interact in such a way that self-organizing structures emerge. reply superb-owl 11 hours agoprevI&#x27;d love to see this on a toroidal surface reply justinl33 11 hours agoparenta Mobius strip, even reply sockaddr 11 hours agoprevFascinating. This reminds me of nanopond reply block_dagger 16 hours agoprevLife, uh, finds its particles. reply deadbabe 12 hours agoprevI’m not really understanding what the “life” part of this is. reply Buttons840 11 hours agoparentIndeed. If we described this as a \"neat circular patterns simulator\" would anything be lost?Is there reproduction? Is there evolution? Is there death? It appears not. Those are essential to life. reply emmanueloga_ 11 hours agorootparentI suspect it is called life because some of the observed patterns looks a lil bit like something you would see while peering at a petri dish on a microscope (if you squint? :-). Perhaps it is implied that with the right rules you would be able to generate \"the real thing\". reply elwell 10 hours agoparentprevIt&#x27;s an iteration on Conway&#x27;s \"Game of Life\". reply airesearcher 12 hours agoprevThis is so great!!! Nice work! reply FpUser 15 hours agoprev [–] Really liked it replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The summary discusses a program that simulates artificial life by using rules of attraction and repulsion among particles.",
      "The program generates self-organizing life-like patterns and is available in C++, JavaScript, and Python.",
      "It lacks collision detection, enabling real-time simulation of numerous particles, and allows for parameter exploration and fine-tuning.",
      "Planned updates include adding features like saving and loading parameters, additional particle types, and improved computational efficiency.",
      "The program aims to showcase how complexity can emerge from simplicity."
    ],
    "commentSummary": [
      "The article explores a coding project called \"Particle Life\" that builds upon Conway's game of life, introducing RGB \"genes\" for color combinations.",
      "The discussion focuses on optimizations and updates to the particle life simulation, as well as concepts like the scarcity of intelligent life in the universe, the possibility of space travel, and the potential ecological risks associated with contamination.",
      "The article also examines the philosophical implications of life emerging from simple rules, and concludes with appreciation for the demonstration of the simulation."
    ],
    "points": 278,
    "commentCount": 71,
    "retryCount": 0,
    "time": 1703778737
  },
  {
    "id": 38796870,
    "title": "Liero: The Ultimate Duel Game with Mods, Maps, and Online Multiplayer",
    "originLink": "http://www.liero.be/",
    "originBody": "Liero Download Resources About FAQ History Contact LIERO official website We have four options for you. They are the same in terms of gameplay, but each one has its own special features. You may pick whichever one you like! All four are awesome! Liero 1.33 Conceived and created in 1998 Liero became a popular duel game in classrooms and homes alike. Between 1999 and 2005 the thriving Liero community created astounding maps, mods and editors to enhance the experience of this amazing game. This is final version of the original generation of Liero released in early 2000. Maximum nostalgia Some bugs Requires Windows 98 or older No network play Download Liero 1.36 A true successor of the original game, this is a high fidelity clone based on the OpenLiero project from 2007. It is the official new version of Liero and the latest version was released in 2013. This version has fixed several annoying bugs and it has several several new modernising features - and of course it runs perfectly on modern computers. Perfect clone of 1.33 Bugs fixed Works on almost any OS New AI opponent New game modes Record and watch replays Player profiles No network play Download Source code WebLiero RELEASED AUGUST 2019 After 20 years of intense anticipation from the Liero community it is astounding that the game finally reaches the clouds. WebLiero is an online multiplayer version of the Liero we all know and love which supports as many players as you wish from anywhere in the world. Create a room, invite your friends, drop the hammer and unleash that blood rain. True to original gameplay Works in the best browsers No splitscreen No offline mode Unlimited number of players Randomised map pools New game modes Play now! lierolibre This is a project to liberate Liero from all its proprietary components and to allow it to be distributed completely freely. “lierolibre” is a fork of Liero 1.35b, and features a new non-proprietary sound pack but is otherwise true to the game you were used to back in the nineties. Being completely re-engineered it is also easier to mod than the other games and does not use the original Liero files. True to original gameplay Different sound pack No proprietary content Works on almost any OS No network play Download Source code Tweets Tweets by @lieroofficial Discord Click the link to join the Liero Discord server and connect with other Liero players: Join Discord Maps, mods, and more stuff Liero Hell Hole, www.liero.nl The best archive of Liero levels, mods, TCs, editors and other things. Liga Liero, www.liero.org.pl Website and forum of the polish Liero community (in polish). www.gamesover.com/walkthroughs/liero.txt (recovered) The official Liero guide by Durandal en.wikipedia.org/wiki/Liero Liero information on Wikipedia. The old Lieroextreme website Bearer of the name before the clones took it. About the game Liero is a simple game. Pick your five weapons, and unleash your inner fury. The game is always played one versus one on a map of your choice, and yes, you have to play with someone who is right next to you, unless you are enjoying the online multiplayer version! To shoot is of course easy enough to figure out, but if you want to step up your game, you need to figure out things like how to swing yourself to safety with the ninja rope, to use timed weapons for area denial, to hunt without being hunted, to ambush, hit and run, and control that darned guided missile. If you can do all these things, you may one day become a true champion, as the players in this video are trying to accomplish. Frequently asked questions How do I install Liero? Unzip the game into a folder, and run it. How do I install new levels? Drop them in the same folder as the game. Liero 1.33 doesnt run, why? The game is old and your computer is new. Disable sounds by adding /n to the command line when starting the game. Click here for further instructions. Liero 1.36 doesn't run, why? You need to run OpenLiero.exe instead of Liero.exe. How do I change the game window size in Liero 1.36 and lierolibre? Press F5 and F6 for full screen and 2x size, or use the menus. How do I record replays? In lierolibre, press F1 to access the \"secret menu\". Liero 1.36 has the options in the regular menus. Which browsers support WebLiero? Firefox, Chrome and Chromium. A brief history of Liero Liero - originally envisioned to be a top-down-view game - eventually came out as a clone of MoleZ, a similar subterranean shooter game featuring moles instead of worms. The game was first published in 1998, in the Finnish \"mbit\" computer game magazine by Joosa Riekkinen. It quickly became a popular pastime in Finland and even won some “game of the week” awards. It soon began spreading on the internet, particularly interesting the owners of low-end computers. In 1999, Joosa became disillusioned with game development and decided to retire the game. Development stopped in January 2000 at the final version '1.33'. By this time a multitude of fan sites for Liero had already cropped up on the world wide web. The one which was to become the foundation of the community was \"Wormhole - The Ultimate Liero Level Editor\". The core of the site was the Liero editor Wormhole which let you convert BMP files into Liero levels, the Liero Blood Increaser which could set the blood spray all the way up to 32750%, and the Liero Graphic Editor which allowed users to create custom skins for the worms and projectiles. The community began to blossom on the Wormhole guestbook page. In the following years, the community moved off the guestbooks and message boards into the new heart of the community - The LieroNet Forum. Participation spiked and several new editors saw the light of day, with the most groundbreaking of them all, LieroKit and LieroHacker by Gliptic (Erik Lindroos). This new breed of editors could penetrate much deeper into the Liero game files and allowed editing weapons, changing the palettes, and altering of the physics of the game. Simultaneously - a somewhat separate community evolved in southern Poland with the prominent clan “Liga Liero”. The polish community quickly outgrew the international community, but due to the language barrier its strength never truly carried over into the wider world. The next generation The next step in the evolution of the game was the development of the first working clones. The most notable were Wurmz! by Patrys, LOSP by Gliptic, LieroXtreme by JasonB and Gusanos by Basro (Mario Carbajal), and let's not to forget NiL which was the very first clone of the all, and the first Liero for Linux, but was not widely played. All these projects took the game their own slightly divergent directions and with most of them being highly moddable, some with multiplayer features. It is also worth mentioning that innumerable clones projects were begun and abandoned by as many individuals, including 3D clones, Wii versions and anything you can think of. The most successful of the clones, LOSP was eventually developed into OpenLiero, which in 2007 was renamed “the official new version of Liero” when released as Liero 1.34. Unlike the other clones, OpenLiero was meant to be an exact simulation of the original Liero and still requires the original game files present in order to run. The idea behind it is to preserve the original game feeling but to allow the game to run properly on modern systems, and other platforms, and removing some notorious bugs. After some deliberation, new game options were added, such as the replay recording feature, new game modes, player profiles and eventually a restructuring of the game menu. In 2011 Joosa was approached by arand (Martin Erik Werner) with questions about licensing. It turned out he was making yet another clone based on the OpenLiero source code. The goal was to remove all proprietary content from the game so that it could be included in Linux packages. His version, aptly named lierolibre was released in 2012 and was adopted in 2013 as one of the promoted game versions on Liero.be, so as to give the avid Liero enthusiast complete freedom of choice. While the community has mostly vanished into the world, many old sites still survive the tooth of time. Most of the old community content created between 2000 and 2005 can still be found through way-back-machines, Google searches and not-yet-dead links on the Liero sites you may come across. The most important surviving sites are presented above in the resource section. The Internet Age One of the great talking points in the early era of clone-making was \"network play\". Many developers attempted to create online games, but only LieroXtreme really had any noteworthy success. But while it did have many fans it differed greatly from the original Liero and the purists remained restricted to the horrors of meeting people in real life in order to play a good game of Liero. This would however change abruptly in 2019 when long time Liero community member Basro (Mario Carbajal) combined the networking engine of his other game, the popular football game \"Haxball\" with the source code of Liero. Cowabunga! The wonderful world of Liero is now available for anyone to play with an unlimited number of friends, and an assurance of absolute mayhem! Contact If you have any questions about the Liero games you may leave some love on reddit.com/r/liero, speak your mind on Discord, or maybe squeek at us on Twitter. Have a great time playing Liero! Liero 1.33 © Joosa Riekkinen [ License ] Liero 1.36 © Erik Lindroos [ License ] WebLiero © Mario Carbajal [ Link ] lierolibre © Martin Erik Werner [ License ] Liero 1.3x is freeware and can be distributed, cloned, or improved on freely. Liero.be is the official website of Liero and the here upon featured clones and is authorised for this purpose by Joosa Riekkinen, Erik Lindroos, Mario Carbajal and Martin Erik Werner.",
    "commentLink": "https://news.ycombinator.com/item?id=38796870",
    "commentBody": "Liero – Sling&#x27;n&#x27;shoot Worms GameHacker NewspastloginLiero – Sling&#x27;n&#x27;shoot Worms Game (liero.be) 245 points by damir 14 hours ago| hidepastfavorite102 comments kimmk 13 hours agoLiero is part of the Finnish shareware game scene that lasted from early 90s to mid 00s [1]. These games are super nostalgic for me and a lot of other tech minded Finns of my age![1] https:&#x2F;&#x2F;fi.wikipedia.org&#x2F;wiki&#x2F;Luettelo_suomalaisista_sharewa... reply bemmu 11 hours agoparentHappy to see my own game “Oikeutta Eläimille” in this list.I made it in turbo pascal in about 1 week, uploaded it to a BBS and it started to spread. Then pretty soon I saw it mentioned on TV and that totally blew my 16 year old mind.I can make something and the world will react to what I make? Cool! reply jokab 10 hours agorootparentThis is what got me interested in this gig in the first place. I am still yet to create something the world will react to, but whatever, I am enjoying the journey anyways reply Balsamic 11 hours agoparentprevLiero dominated my high school computer lab in Sydney, Australia. Such great times. Still adore this game. reply newsclues 11 hours agorootparentWe played it in Canada in programming class as well. reply Fatnino 5 hours agorootparentLos Angeles, same. reply nnevatie 1 hour agoparentprevVery cool to see such a list maintained. The PaybackTime 2 is still playable, albeit without sampled sounds (crashes the emulator), here: http:&#x2F;&#x2F;rflxn.com&#x2F;paybacktime2&#x2F; reply mordae 10 hours agoparentprevIt was a hit in our Czech school as well. Son of a diplomat posted in Finland brought it back here. reply tricolon 1 hour agorootparentWait a minute, that sounds like an old friend of mine. Were his initials ŠP? reply askonomm 12 hours agoparentprevNot just Finland, Liero was big in Estonia, too! I remember I got Liero on a floppy disk from a friend early 00&#x27;s and ran it on my Win98. Good ol&#x27; days. Terep2 was another great game. reply eitland 11 hours agorootparentIt was played in Norway too.My younger brothers played it a lot. reply Tryk 11 hours agorootparentSweden as well, me and my friends played it frequently to distract ourselves in CS class. reply laszlojamf 11 hours agorootparentWhat school did you go to? We played this _a lot_ at Norra Real, Stockholm XD reply zyberzero 9 hours agorootparentI’m (not parent) from a small town in Västra Götaland (Sweden) and we played it a lot as well :) reply matheusmoreira 6 hours agorootparentprevBrazil too. Used to play this with family and friends, especially one of my cousins. Also played it quite a few times with friends in computer classes. Everyone could play using the same keyboard at the same time, it was crazy. reply pimeys 10 hours agoparentprevMy favorites in the Finnish scene were the cave shooters (luolalentely). Games such as Auts or V-Wing. Are there any modern games available in this genre? reply aljarry 11 hours agoprevI&#x27;ve played Noita (https:&#x2F;&#x2F;noitagame.com&#x2F;) for quite a bit, and lately it clicked to me, that the core mechanics of the player and environment come from Liero. Though Noita is a single player rouge-lite, it has wands instead of guns, but environment is destructible, and explosions work the same.It&#x27;s much deeper, both in mechanics and in lore, it has actual levels with progressions, but I was curious why did I enjoy that game so much. Turns out, I spent a ton of time playing its predecessors with my friends :) reply Pfiffer 9 hours agoparentI think the devs for Noita said something about building the Falling Sand Game + Liero together as one game. reply glenstein 2 hours agoprevI have known and loved Liero since at least the early &#x27;00s, played it endlessly after Friday night dinner with my brothers and featured it on my high school era personal website.Glad to see it get the love and respect it deserves. We also used infinite reload speed, so that the most powerful weapons, which normally only fired one shot before reload, instead became super weapons that released like a stream of water continuously, a waterfall of big nukes, chiquita bombs, or sniper rifle shots which became a death beam. It was marvelous.Later on when imitation versions of the game were made with online play, a single game mode, castles with mortars, became the hit style. It was nice, because the game could be so many things, and the slow motion opera of flying through the air in mortar fire was quite something, but it also pared the game down to something so simple that it missed out on dozens of equally fascinating configurations every bit as radical and fun. reply tomxor 6 hours agoprevYou can also play multiplayer in the browser at webliero.comThere is an active community, simple to pick up and play, no login. Although most of the active servers use some more fast paced mods with different weapons, but you can start your own server in the browser with the classic mod. reply morbicer 13 hours agoprevOne of the best PC hot seats classics. Endangered my high school graduation :) I wanted to recover some of the custom maps we created and played but sadly they are in the silicon heaven already.It&#x27;s fun how everyone&#x27;s youth is the best time ever, but I bet i find many fellow connoisseurs here: Liero, windows 2000, electronic music of the early noughts, the internet before Facebook, Matrix, Futurama, Lebowski.A Gen X can show up saying Nirvana and BBS was the real deal before it all got whack or someone younger can make a point with more recent cultural phenomena.I am defined by the era of Liero. reply fryktelig 1 hour agoparentSame. Another amazing one I played in those days was zatacka &#x2F; achtung die kurwe. So funny how we were able to pack 5 people on one laptop keyboard back in those days. reply therein 12 hours agoparentprevI used to play Liero with my cousin for hours. It just barely would not fit a 1.44MB floppy. We downloaded it so many times over 14.4k dialup, go out to grab dinner with the family, come back to a dropped connection. reply morbicer 12 hours agorootparentI imagine that&#x27;s the stories I will tell my grandkids but it probably won&#x27;t be that interesting. Hopefully we can see it well... maybe the rave stories will fare better. I store my old DnD stuff for the odd chance it will have vintage value to the generations far away. reply coffeebeqn 8 hours agoprevMy highest claim to fame is to be in the original Liero readme credits. I sent in the idea for a capture the flag mode as a kid. Me and my friends spent some hundreds of hours playing it. I remember you could tweak the reload speed of the weapons somehow to make it pure madness reply rendaw 4 hours agoparentAnd health...My favorite settings were 10% health 100% reload time, you had to be very careful especially with some of the more self destructive weapons but IMO was the best competitively. It made things like dart, fan, winchester (?) usable (if just barely). reply dang 13 hours agoprevRelated:Liero can be played in browser now, for those who remember - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22980676 - April 2020 (86 comments)A browser-based multiplayer clone of the DOS game Liero using WebRTC - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=20668273 - Aug 2019 (7 comments) reply morbicer 12 hours agoparentI assume our hero dang has some automation in place but sometimes I dream about him rembering all posts and carefully linking the beloved topics with past occurrences. reply pvg 9 hours agorootparentIf you will it, it is no dream.https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=25964774 reply bberenberg 14 hours agoprevI loved playing Liero when I was a kid. One of the best patterns of play I had found and one of the few shooters where I was even remotely competitive with others. Super cool to see that it&#x27;s still alive and that there is even a web version. reply hypercube33 14 hours agoparentliero is amazing even to this day. I love it as much as I love the antics of works 2? with the ninja rope shenanigans reply yboris 11 hours agoprevI&#x27;m a fan of artillery games. I created Gravity Wars (based on previous art) - artillery in space where planets pull projectiles with gravity:https:&#x2F;&#x2F;github.com&#x2F;whyboris&#x2F;Gravity-Wars reply TehShrike 7 hours agoparentI&#x27;m not able to get it to work – installing Love got me a love.app file, but nothing I can run in the terminal.The Love docs imply that the contents of your repo need to be be zipped up and then... something else happens? https:&#x2F;&#x2F;love2d.org&#x2F;wiki&#x2F;Game_DistributionIf you could make an idiots guide to running the game, I&#x27;d appreciate it, I&#x27;ve been wanting an orbit-based game like this for a long time reply TehShrike 7 hours agorootparentI got it – these are the steps I took: 1. Download Love from https:&#x2F;&#x2F;love2d.org&#x2F; 2. Launch love.app 3. git clone git@github.com:whyboris&#x2F;Gravity-Wars.git 4. cd Gravity-Wars.git 5. zip -9 -r GravityWars.love . 6. open GravityWars.love reply rendaw 4 hours agoparentprevThis isn&#x27;t an artillery game - this is unrelated to the Worms series. reply detritus 10 hours agoparentprevFor a minute there I thought I was going be thanking you for the Amiga version, which I have fond memories of from... well, far too long ago! reply rixrax 14 hours agoprevLoved playing Worms as a kid, not so much Liero. But before Worms, it was really Scorched Earth[0] that got me introduced to the genre. And with which I must have spent untold hours.[0] https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Scorched_Earth_(video_game) reply imjonse 14 hours agoparentScorched Earth was a nice upgrade from GORILLA.BAS :) reply yardstick 13 hours agorootparentThe best part of GORILLAS.BAS was how easy it was to explore, and crucially, mod. Some of my first programming experiences were tweaking it to change how the throws work, damage, etc. Super basic stuff but a wonderful gateway into the world of development.It’s a shame there’s nothing as dead simple as that these days. Minecraft I guess is closest? But imo not comparable due to the closed nature and complexity. reply aidos 14 hours agoparentprevI loved Scorched Earth! Don’t know anyone else who ever played it. reply bemmu 11 hours agorootparentI can instantly recall the strange beeper sound effects of some of the powerful weapons that would blast multicolored noise everywhere. reply c2h5oh 12 hours agorootparentprevIt&#x27;s still easily in my top5 most played games of all time reply imperialdrive 14 hours agorootparentprevPlayed A-LOT of it :) reply antoniuschan99 13 hours agorootparentme too! Together with Ski free and star control reply rkagerer 13 hours agorootparentAh, Star Control II still ranks as an all-time favorite. reply thesuperbigfrog 11 hours agorootparentStar Control II lives on as \"The Ur-Quan Masters\":\"The project started in August 2002, when Toys For Bob released the partially ported sources of Star Control 2 3DO version to the fan community. Our goal is to port this wonderful game to current personal computers and operating systems. It is and will remain 100% free of charge, and anyone can contribute to the project and thus help make it even better. For more information, look at our info page.\"https:&#x2F;&#x2F;sc2.sourceforge.net&#x2F;downloads.phpWorks on most modern operating systems and even has community add-ons and remixes. replybondarchuk 13 hours agoparentprevThere was a flash game called Tanks that looks a lot like Scorched Earth, AI was bugged in that it would purchase better weapons but never actually use them, tons of fun to play against others though. reply ohfoydoyd 14 hours agoparentprevall the neighborhood kids used to crowd into my neighbor jeff&#x27;s dad&#x27;s office for scorched earth. a half dozen preteens around a 486 having a blast... gorilla.bas was a nice stand in for when we were at school reply gagagaga7 14 hours agoparentprevLoved scorched earth as a kid! reply madaxe_again 14 hours agoparentprevWe had seriously limited options at my boarding school until we figured out how to root the machines and get quake and GTA running with serial cables… gorilla.bas all the way.https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Gorillas_(video_game) reply codetrotter 13 hours agoprevAnyone remember Soldat?https:&#x2F;&#x2F;www.soldat.pl&#x2F;en&#x2F;> It takes the best from games like Liero, Worms, Quake and Counter-Strike and gives you fast action gameplay with tons of blood and flesh. Little ragdoll soldiers fight against each other on 2D battle arenas using a deadly military arsenal. reply albertzeyer 12 hours agoparentSoldat is open source now: https:&#x2F;&#x2F;github.com&#x2F;soldat&#x2F;soldat https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=26058312 reply bubbab 6 hours agorootparentOh wow, a familiar name from the OpenLieroX days! Do you still do any Liero related work? OLX was like peak Liero for me, at least for the multiplayer community, clan wars and all that. Lots of good times back in the 2010s. reply albertzeyer 1 hour agorootparentThe repo is here: https:&#x2F;&#x2F;github.com&#x2F;albertz&#x2F;openlieroxUnfortunately, I don&#x27;t really find the time anymore. It was really fun working on it, but it took an incredibly amount of time, and now my focus shifted to many other things (deep learning, family).I probably should release some updated binaries at some point though, such that it works properly on more recent OS. reply rzzzt 13 hours agoparentprevI found Soldat while searching for another, top-down perspective game from the genre, which I found on a demo disc once. That was Tremor Gold: https:&#x2F;&#x2F;www.tigsource.com&#x2F;2008&#x2F;02&#x2F;20&#x2F;multiplayer-on-one-keyb...Jump&#x27;n&#x27;Bump, anyone? reply pilaf 3 hours agorootparentJump&#x27;n&#x27;Bump was awesome. I played it so often back then that I made a GUI launcher for it, since you could change various settings through command line flags only.Brainchild Design[0], the studio that made it, had some other fun and highly polished games too, Quadnet was one of my favorites.[0] https:&#x2F;&#x2F;www.dosgamesarchive.com&#x2F;profile&#x2F;brainchild-design reply continuational 12 hours agorootparentprevJump&#x27;n&#x27;Bumb is such a blast! I even made a clone of it in JS with a friend. Gotta try Tremor. Looks a bit like Cyberdogs! reply pilaf 3 hours agorootparentIs your JS clone published somewhere? reply therein 2 hours agoparentprevCame back to this thread today to mention Soldat.It was a nice game. reply taskforcegemini 9 hours agoparentprevthere is now a soldat2. but there is also \"butcher\", kind of a single player successor to soldat from the same creator reply s-dsds 9 hours agorootparentbutcher is published by the creators of soldat, but is developped by Phobia Game Studio (maker of Carrion) and, as for soldat, they&#x27;ve been quite opened about their inspiration from Liero (enough for drawing liero midi art on youtube https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=VXu65Bx0dFo ) (so different team than soldat, but common inspirations :)) reply doublerabbit 13 hours agoparentprevAnd created in Delphi.I used to host a popular soldat server in the day; good times.Shame it never regained popularity with the steam release. reply DrSiemer 14 hours agoprevFantastic game. One of my favorite multiplayer experiences, besides San Andreas, classic UT&#x2F;Q3 and some Tron based lightcycle game that was basically fast 3d multiplayer snake. reply fodi 11 hours agoparentGLtron maybe? We had a blast playing it with friends in the early 2000s. Splitscreen 4-player mayhem! reply DrSiemer 12 minutes agorootparentLooks like that was the competition at the time, but it was Armagetron for me (found in the other suggestion) reply crabmusket 11 hours agoparentprevArmagetron! reply DrSiemer 17 minutes agorootparentYes, that&#x27;s the one! Excellent, another mystery piece of my gaming history recovered, thank you.Others recovered in the last decade are an FMV game who&#x27;s demo blew my mind back in the day (almost certainly \"Deadly Tide\"), a two player split screen tank battle game where you could rescue little humans besides fighting with eachother (\"Fire Power\") and that awesome bike trick game \"Elasto Mania\". reply gbraad 1 hour agoprevI prefer OpenLierox over Liero reply maccam912 4 hours agoprevThis seems about as close as we might get to another fun one, https:&#x2F;&#x2F;cratebeforeattack.com&#x2F; for more traditional worms style gameplay. It&#x27;s fun but crashes randomly, and hasn&#x27;t seen much since 2020. It anyone knows more details about if the game is looking for a new maintainer please reach out! There is so much potential here. reply donquichotte 14 hours agoprevThere was also Wurmz!, a networked multiplayer version of Liero. Some history and binaries of various version as well as the source code can be found on this website [1].[1] https:&#x2F;&#x2F;mental-reverb.com&#x2F;wurmz.php reply diggan 14 hours agoparentSee also: LieroX&#x2F;OpenLieroXWe played LieroX a lot at school as we could add a bunch of fun mods to it and it was networked. I think at the time, LieroX had just came out too, so it was fresh compared to Liero. reply rzzzt 13 hours agorootparentAlso NiL (\"NiL isn&#x27;t Liero\"), a re-imagination of the game running on Linux: http:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20001007120330&#x2F;http:&#x2F;&#x2F;www.linuxwo... reply pilaf 5 hours agorootparentThere is also GUSANOS[0], which is no longer maintained, but from my understanding OpenLieroX merged many of its features into its codebase.[0] https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;gusanos&#x2F; reply lbrito 5 hours agoprevSo many good memories of playing this with friends in the early 2000s.Thetr was a fully 3D version at some point. It was novel and fun, but didn&#x27;t really work.What fantastic times. Thanks for this post! reply tianshuo 3 hours agoprevLiero is a classic and a favorite, but weapons are a bit imbalanced, esp. spikeballs. reply gombosg 11 hours agoprevSo many good memories from high school! Gaming in the computer lab was banned in theory and the teacher always tried to delete any games found on these machines. So we always kept about a dozen &#x27;hidden&#x27; copies on each machine. reply clircle 7 hours agoprevDamn, I think I played this game like 20 years ago on my friends computer? (taking breaks from playing Aliens vs Predator 2) reply nurettin 12 hours agoprevAnd it was so hard! You had to have the perfect coordination moving and digging while aiming, shooting, roping, dodging and switching weapons and checking everyone&#x27;s health. Sometimes all at the same time!I feel so lucky to have played it on a slow amd 20+ years ago, because banana bombs and big nukes slowed the game down and gave you the perfect bullet time matrix fight experience. reply bruce343434 14 hours agoprevI&#x27;d enjoy it more if it was WASD + mouse aiming and shooting reply arketyp 14 hours agoparentCramming up two player split screen on the same keyboard with your bro was part of the deal, and pretty sweet, made it all the more visceral. reply diggan 14 hours agoparentprevThen you want one of the games inspired by Liero. How about Soldat? Very old school and has WASD + boring & too easy mouse aiming reply jeffhuys 11 hours agoparentprevTry OpenLieroX reply solardev 14 hours agoprevIs this an open source clone of the Worms games by Team17? https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Worms_%28series%29?wprov=sfla1 reply johndough 14 hours agoparentNo, but there is Hedgewars, which is an excellent open source clone of Worms:https:&#x2F;&#x2F;www.hedgewars.org&#x2F;https:&#x2F;&#x2F;github.com&#x2F;hedgewars&#x2F;hwOn Ubuntu, you can install it with sudo apt install hedgewars reply gliptic 14 hours agoparentprevNo, Liero is a real-time game somewhat inspired by Worms perhaps, but mostly by Molez. This has several versions, some of which are (reversed engineered) open source versions of the original game. reply solardev 14 hours agorootparentInteresting! It looks like Worms 1 came out in 95, then MoleZ a few years later, then Liero. It definitely seems like the same genre of game... the ninja rope definitely brings back some nostalgia :)The real-time is a cool twist though. reply trenchgun 14 hours agorootparentIt is the same theme, but a different genre. reply solardev 12 hours agorootparentFair enough reply pubby 14 hours agoparentprevNo, Liero is real-time as opposed to turn-based. reply DenisM 14 hours agorootparentAre there turn-based clones? reply nerdponx 12 hours agorootparentPlenty. I always liked Pocket Tanks. And there was an online game called Gunbound, but it was a little bit pay-to-win. reply doublerabbit 13 hours agorootparentprevTeeworlds is a fun clone.https:&#x2F;&#x2F;www.teeworlds.com reply Sharlin 14 hours agoparentprevWorms itself is just a Scorched Earth clone. reply rzzzt 13 hours agorootparentScorched Earth is a supercharged version of Artillery Duel: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Artillery_Duel reply solardev 12 hours agorootparentprevI mean, yes, but Liero means \"worm\" in Finnish, according to the wiki.Just trying to understand how these games evolved from each other (or not) for the sake of video game history :) I loved Worms when I was a kid, and wish I had discovered Liero back then! reply Waterluvian 8 hours agoprevI’m not sure how I discovered it, but Liero became a massive part of 10th grade Comm Tech and Elec Eng classes in 2001 when I shared it with everyone. reply scotty79 9 hours agoprevThe copy of Libro we got our hands on was configured to have cooldown time on all weapons reduced to barely anything. It was incredible, ridiculous fast mayhem. reply pimlottc 13 hours agoprevIn what sense is this the \"original\" Worms game? Is there a particular tie between them? There&#x27;s been a lot of ballistic artillery games going back to the very dawn of computers. reply dang 13 hours agoparentLet&#x27;s just take \"original\" out of the title above. Problem solved. Thanks! reply coffeebeqn 8 hours agoparentprevIt’s not related to “Worms” from Team 17 at all. Both have pixel worms blowing each other up though reply pierrebai 12 hours agoprev [–] Looks like the classic Soldat [1], except uglier, only 1v1 and less interesting maps...[1] https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;638490&#x2F;Soldat&#x2F; reply dylanowen 12 hours agoparent [–] Liero was one of the inspirations for Soldat replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Liero is a popular duel game that was originally released in 1998 and now has four versions available with different features.",
      "Liero 1.33 is the original version from 2000, while Liero 1.36 is a high-fidelity clone that addresses bugs and introduces new features.",
      "WebLiero offers an online multiplayer experience, and lierolibre is a project dedicated to distributing Liero freely. The game involves selecting weapons and engaging in combat on various maps. It has a vibrant modding community, and it can be played on modern computers and popular web browsers. Contact details are provided for additional inquiries."
    ],
    "commentSummary": [
      "The discussion centers around the popularity and nostalgic appeal of Liero and other games from the Finnish shareware scene.",
      "Participants share their experiences and memories of playing these games and discuss their unique features and gameplay mechanics.",
      "Other games like Scorched Earth, Worms, and their successors and clones are also mentioned, along with discussions on open source alternatives and the evolution of games in this genre."
    ],
    "points": 245,
    "commentCount": 102,
    "retryCount": 0,
    "time": 1703788830
  },
  {
    "id": 38802086,
    "title": "Ideal Screen Rotation for Programmers: Exploring the Benefits of a 22° Angle in Coding",
    "originLink": "https://sprocketfox.io/xssfox/2021/12/02/xrandr/",
    "originBody": "It all started with this toot from Aurynn. do I just need to put one screen in portrait mode? In the past I had experimented with using portrait displays for reading and programming. The ability to display large amount of text is certainly appealing. Boring But is this the most optimal display for software development? Lets evaluate Rotation Advantages Disadvantages 0° Works with most applications. Video content is usually in wide format Websites and documents usually end up with a lot of whitespace and padding around them 90° Great for text documents - can read down like a book page Movies don’t display well. Viewing angle problems Here you might think we might done. But there are soooooo many more angles we can try. This is a little tricky on macOS and Windows but on Linux we have all the freedom we need. Odd but ok. We have a little tool called xrandr (x resize and rotate). We can use it to rotate the screen around to any angle we want. In practice I couldn’t get this to work on my MacBook. My desktop on the otherhand it had no problems. So lets try a few out. 1° - notice the menu bar disappearing to the right 45° - I run out of space Rotation Advantages Disadvantages 1° Handy if your desk is on a slight slope fonts render a little weird 45° Middle ground between vertical and horizontal doesn’t fit well with non square aspect ratios One neat thing about 45° is that it gives us pretty close to the diagonal. But not on my ultra wide. Due to maths, the amount we’d need to rotate is based on the angle of a triangle which match the aspect ration of the screen we are using. This ends up being about 22° for a 21:9 ratio. The perfect rotation 22° - Perfect Rotation Advantages Disadvantages 22° Longest line length! Webcam starts sliding away So this here I think is the best monitor orientation for software development. It provides the longest line lengths and no longer need to worry about that pesky 80 column limit. How do I do this? First off, I could only get this to work in xorg - no wayland support yet. xrandr --output HDMI-3 --transform lots of numbers here takes a transformation matrix thats used to position the screen. We can use that to rotate the display. The basic syntax that we need for rotating and shifting is this cos(x),-sin(x),shift_left,sin(x),cos(x),shift_up,0,0,1 Some examples # these won't shift / center the display as I don't know the resolution #-0.1 xrandr --output HDMI-3 --transform 0.999998476913288,0.00174532836589831,0,-0.00174532836589831,0.999998476913288,0,0,0,1 #1 xrandr --output HDMI-3 --transform 0.999847695156391,-0.0174524064372835,0,0.0174524064372835,0.999847695156391,0,0,0,1 #45 xrandr --output HDMI-3 --transform 0.707106781186548,-0.707106781186548,0,0.707106781186548,0.707106781186548,0,0,0,1 #22 xrandr --output HDMI-3 --transform 0.927183854566787,-0.374606593415912,0,0.374606593415912,0.927183854566787,0,0,0,1 Calculator This little javascript calculator should generate the xrandr command for given inputs Input:Angle:Shift X:Shift Y:Result: xrandr --output HDMI-1 --transform 0.70711,-0.70711,0,0.70711,0.70711,0,0,0,1 Enjoy. monitor xrandr display rotate",
    "commentLink": "https://news.ycombinator.com/item?id=38802086",
    "commentBody": "Ideal Monitor Rotation for Programmers (2021)Hacker NewspastloginIdeal Monitor Rotation for Programmers (2021) (sprocketfox.io) 195 points by AndrewKemendo 4 hours ago| hidepastfavorite84 comments JoshTriplett 27 minutes agoWhile this article presents it in a humorous way, some air traffic control systems actually do use a diagonally rotated screen, with that \"long line\" being lined up with the primary approach to the airport. The setup I got to observe involved large displays that worked with stylus input.These weren&#x27;t ultra-widescreen displays; they were relatively standard aspect-ratio displays, rotated at an angle. reply bobowzki 21 minutes agoparentI would love to see a photo of this setup. reply LASR 1 hour agoprevTangentially related thought: Take my advice, don&#x27;t go ultra-wide. Go with a large 4k. You get more pixels for cheaper.The only ultrawide that makes any sense is the 5k x 2k resolution one. These have more pixels than a single 4K. But they are expensive.Even then, a 16:9 5K monitor has more pixels.I personally use 3 x 27 inch 4K - which is cheaper than a single 5k Ultra-wide and gives you a TON more pixels. reply larodi 9 minutes agoparentI find it difficult to actually figure the proper position where the 27” Dell 4K (still very top notch) is just as far so that I can see it and not have to move my head left and right.Anything beyond this size may be OK for games, but too much space and too much windows is actually too much of cognitive load.It is not a surprise that many ppl (not me though) start to prefer full screen terminal rather than dozen windows arranged in some disarray on a large screen. reply danieldisu 44 minutes agoparentprevAlways focus on PPI, some rough numbers27” 5k (5120 x 2880) -> 218 PPI32” 4k (3840 x 2160) -> 137.68 PPI34” 5k (5120 x 2160) -> 163.44 PPI39,7 5K (5120 x 2160) -> 139.97 PPIApple Pro Display XDR 32\" 6k (6016 x 3384) -> 218 PPI reply Kuraj 23 minutes agorootparentPPI doesn&#x27;t translate to screen estate, though reply vakz 36 minutes agoparentprevOn the contrary, I have a 49\" 32:9 monitor, and for a laptop it&#x27;s wonderful. The support for a single monitor is just way better than any dual (or more) setup.I can just connect it directly to my laptop, and it just works. When I had two displays I needed a docking station, and truth is most of those out there suck. Unless you go for the top models, and then you&#x27;ve lost all the money you saved on cheaper monitors. In addition you generally need a thunderbolt compatible dock, and that seems to come with it&#x27;s own category of issues, assuming your laptop even supports it.Also found ultrawide easier to configure hotkeys for windows management. reply hau 5 minutes agorootparentI think you could daisy-chain DisplayPort MST monitors, so that only first one would be connected to your laptop. reply peebeebee 36 minutes agoparentprevI think 27\" 4k with some scaling is a good spot indeed.32\" 4k is nice as well, if you scale down to 2560x1440, or 3008x1692. On 32\" 2x scaling (1920x1080 is just too big, and native (3840x2160) is just too small.But if money is no problem, 3x 24\" 4k, 2x 27\" 5k, or 1x 32\" 6k is really the endgame. That 2x scaling is just soooo crisp. :) reply sirsinsalot 40 minutes agoparentprevMy 5k2k LG 40WP95C-W is an absolute dream. Worth every penny for dev. reply isoprophlex 2 hours agoprevThe ideal obviously is a monitor spinning at the magic angle of ~54.74 degrees, thus removing the influence of anisotropic interactionshttps:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Magic_angle reply Hugsun 2 hours agoparentThis Wikipedia article reads like a joke. Very funny. reply Nition 1 hour agorootparentI love how it&#x27;s all this advanced stuff and then like, it&#x27;s also a great angle for your garden hose. reply Nition 2 hours agoprevThe actual \"ideal\" rotation for maximum line length would be closer to 23° rather than 22°, right? Because Atan(9&#x2F;21) = 23.20°.Also... could we go further? If we&#x27;re treating the screen&#x27;s content as an arbitrary plane, what about tilting the content of screen away from you like SNES Mode 7 or the Star Wars text crawl? Infinite screen height! reply krisoft 14 minutes agoprevI don’t know about the ideal orientation, but i prefer my monitor to not spin relative to my desk. :) Which of course means that it should slowly rotate around once a day to keep it in sync with the Earth (when seen from an innertial fixed coordinate system).But that made me think. Maybe the optimal solution is one with a circular table (rotating in sync with the Earth, thus appearing motionless) and a monitor which spins around the normal axis of the table to force me to chase it around. Maybe it could have different tempo settings. A slow one which makes the user reposition every half an hour or so, a faster one for cardio, and an even faster one for volumetric persistence of vision applications. reply LispSporks22 2 hours agoprev90 degrees is best for me and my Go code. Can fit tons more “if err != nil” blocks that way. reply CrzyLngPwd 50 minutes agoprevI have three 2160x3840 27inch screens in a H layout, with the side screens vertical. I use FancyZones windows PowerToy to create drop zones on the side screens, and so can just drop terminals&#x2F;slack&#x2F;browser windows there.It&#x27;s been a transformative layout for coding and managing machines. reply user_7832 1 hour agoprevOn a similar note, I once again wish more displays were 3:2, and more people knew about it. The human central (not peripheral) vision’s ratio is very close to 3:2, yet due to economics of scale 16:9 is marginally cheaper and much more common.And if someone is wondering, no, rotating 16:9 vertically for more vertical space doesn’t help because it makes it very narrow - for me IMO a square display would be the best. (There are also minor subpixel rendering issues, along with viewing angle issues if using a TN panel but those are still more minor.) reply cylinder714 1 hour agoparentEizo made a 1920x1920 display that I think has been discontinued; a very good review:https:&#x2F;&#x2F;youtu.be&#x2F;gJG9HOQITrgThe LG DualUp is an almost-square 16:18 monitor, higher resolution than the Eizo and almost half the price. reply Keyframe 2 minutes agorootparentOh nice, thanks for this! I was disappointed when I went to buy EIZO one, only to find it was discontinued. 1:1 and OLED would be awesome, if such a thing existed of course. Not only for writing, but also for emulation purposes - close enough to 4:3 and 3:4 (yoko&#x2F;tate modes) not to have to rotate the screen, just a bit of black on the sides. reply JoshTriplett 34 minutes agorootparentprevUnfortunately, unusual screen sizes and OLED aren&#x27;t as available in combination. And since I spend all day in a terminal, having the black background be off is wonderful. I would love 3:2, but I get more value from OLED. reply user_7832 1 hour agorootparentprevThanks for the review link of the monitor, don’t think I’d seen one yet!I’ve got my eye out the LG one, but unfortunately it’s still a little out of my student budget. I hope to get it soon, fingers crossed! reply dr_kiszonka 50 minutes agorootparentprevThis LG looks great for a dual setup and has a decent PPI. Thanks! reply Wytwwww 37 minutes agoparentprevFor laptops definitely. Screen above ~24\"? I don&#x27;t really think this is that relevant and if have multiple windows open side by side it&#x27;s the opposite (16:9 is more ergonomic than 3:2,). reply mgoetzke 1 hour agoparentprevA reason why i liked the SurfaceBook so much. Their aspect ratio was near perfect. Now I am back to MBP which comes second reply supersrdjan 1 hour agoparentprevyesss... I discovered how wrong the widescreen displays are after I had found an old IBM Thinkpad in my basement and tried it. To add to what you said, I will also point out that it&#x27;s the vertical space that often gets pinched by toolbars and such, effectively squishing your working area to an even wider ratio. And when working with text (reading, writing), the left and right edges of my screen are just slabs of emptiness. Given all that, a taller display feels more roomy for the same surface area.The only disadvantage though is that putting two windows&#x2F;panes&#x2F;buffers of anything side by side would no longer be as convenient?Do you have a 3:2 screen yourself, which one? reply TylerE 38 minutes agorootparentAt least on OS X, using a free utility, I can set two apps to exactly split the screen with two key presses and one mouse click. ON a 16:9 it comes back to being an actually decent aspect ratio for reading text. reply spockz 1 hour agorootparentprevThis is why and how I use a 5k ultra wide. It allows me to make two more-or-less square windows in the same monitor. reply user_7832 57 minutes agorootparentprev> the vertical space that often gets pinched by toolbars and such, effectively squishing your working area to an even wider ratio. And when working with text (reading, writing), the left and right edges of my screen are just slabs of emptiness.Absolutely agree, and it’s amazing&#x2F;infuriating when people&#x2F;companies don’t realise it. My mom’s old Asus could barely fit a few lines of text on its small screen after all its toolbars in chrome. You shouldn’t need to scroll multiple times to read a 3-paragraph email on a display where it fits if it were the only text! (And of course about 60% of the space on the sides was wasted.)I don’t have a 3:2 display yet, though I do have an old 16:10 21” monitor which is alright. My ipad (10.9”) is okayish as well, but I’m planning to buy a 16” 3:2 portable monitor soon. Do you have an 3:2 screens? reply supersrdjan 47 minutes agorootparentNo, I was only aware of the Eizo models, too expensive for me, but am at this moment looking at various recommendations people are sharing in this thread. reply kookamamie 1 hour agoparentprevYawn. Get on with the times. I&#x27;ve been using ultrawide (21:9) for years, and would definitely not want to go back to peeking through a square&#x27;ish hole. reply Wytwwww 4 minutes agorootparentImagine how useless a 21:9 laptop would be.. It all comes down screen size. reply misterS 58 minutes agorootparentprevStarting a comment with «yawn» immediately shows dismissal of and disrespect for the person you&#x27;re replying to.You might want to refresh your memory of HN&#x27;s guidelines. Link at the bottom. reply user_7832 1 hour agorootparentprevUW is fine if you’ve got a 28” or more desktop (or maybe larger even), but I’d take a 28” 3:2 like the Huawei Mateview over a 28” UW any day of the week. The UW probably has 20 or 30% lesser screen area. reply wtallis 53 minutes agorootparentUltrawides only start to make sense at about 34\" and up, corresponding to 1440 pixels vertically. Anything less than that would be worthless for productivity (ie. not movies or first-person gaming) given today&#x27;s UI trends of massive horizontal bars&#x2F;ribbons sized for small touchscreens.Likewise, a monitor in portrait usually needs to be at least 1200(w)x1920(h) (ie. a 24\" 16:10) to be usable for browsing today&#x27;s web without getting served up a mobile-specific layout too often. A reasonably-sized 1080p display in portrait can be great for stuff like text editors and terminal windows. reply dkjaudyeqooe 2 hours agoprevThe 22° solution is just missing a triangular window implementation, or perhaps a \"split diagonally\" window view option. reply lifthrasiir 2 hours agoparentI do think the optimal screen is more or less a triangle or a semi-circle. A rotated rectangular screen is a very crude approximation. reply Justsignedup 1 hour agoprevI love this. It reminds me of the two vs 4 spaces. And some dude will inevitably say 3 spaces fuck you. My point is... We need this in the office so that every time I turn on video chat I have to explain why I&#x27;m slanted. reply raingros 2 hours agoprevMaybe it would be smarter to use one of the these?Samsung 43\" M70A 4K UHD Smart Monitor https:&#x2F;&#x2F;www.samsung.com&#x2F;us&#x2F;computing&#x2F;monitors&#x2F;smart-monitors... reply dsp_person 2 hours agoparent+1 to that. Also get 120Hz if you can (but has it&#x27;s own headaches to solve, including e.g. HDMI 2.1 isn&#x27;t supported in open source drivers).I recently started using a LG 42\" C2. Coming from two 27\" monitors at 2560x1440, the 42\" 3840x2160 is about the same pixel density and only 12.5% more pixels total (3840*2160&#x2F;(2*2560*1440))The 42\" screen is like portrait mode on demand. Whenever I tried portrait mode on the 27\" screens, it was nice sometimes but usually felt limited in width. With the 42\" a quick tile of a window to either side (Super+Left&#x2F;Right) gives you the height of portrait mode, plus more width (and adjustable to your liking).Also for those now spare 27\" monitors kicking around, I grabbed a vertical monitor mount to stack them (both landscape, stacked vertically) next to the 42\". This has proven to be even better and I love having the zones this creates. reply winrid 2 hours agoparentprevI liked my Samsung ultra wide until it started to hurt my eyes from the terrible PWM modulation... reply SSLy 1 hour agorootparentHow do I check whether my display is having fine PWM modulation? reply bun_terminator 2 hours agoparentprevEver since I found out that many new monitors don&#x27;t have an RGB subpixel layout, I&#x27;ve been paranoid. I can&#x27;t find the layout for this one. any idea? reply JoshTriplett 31 minutes agorootparentAt 4k, I&#x27;ve found grayscale antialiasing quite sufficient and don&#x27;t miss the fringing effect of subpixel AA. reply bun_terminator 24 minutes agorootparentI worry about all the code I don&#x27;t know about. Who knows what other software I can&#x27;t control relies on RGB layout. Maybe irrational, but I don&#x27;t want to risk it. Especially since you gain nothing in return. reply JoshTriplett 2 minutes agorootparentOLED often isn&#x27;t RGB, and you gain a great deal there. ycombinete 1 hour agorootparentprevHow do they layout their sub pixels?! reply bun_terminator 47 minutes agorootparentI think BGR is most popular. Which breaks (some) subpixel font rendering reply nordsieck 1 hour agoparentprevI really wish that someone would make a 43\" TV&#x2F;monitor in 8k.The smallest that I&#x27;ve seen is 55\" and that just too big to be comfortably used as a monitor. reply hsbauauvhabzb 1 hour agorootparentI used a 30hz 4k tv as a monitor back in the day, it was not enjoyable with substantial input lag making photoshop etc impossible to use. Be patient, it will happen eventually. reply KeplerBoy 2 hours agoparentprevI&#x27;m curious about these, but I feel like it&#x27;s too much vertical space, which would require a lot of head movement. reply sirsinsalot 42 minutes agoprevI&#x27;ve had 3 monitor setups for decades. Then I got an ultra wide Samsung CRG9 at 49\" and 5120x1440... Which was terrible. Too wide and not tall enough.Now I have the LG 40WP95C-W at 40\" and 5120x2160 and it is perfect. Especially with window tiling that does thirds well. reply JoachimS 47 minutes agoprevThe multiple screen setup from Swordfish is starting to feel old.https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;geek&#x2F;comments&#x2F;1ds9en&#x2F;from_the_movie... reply pxtail 1 hour agoprevI&#x27;m using 3 monitors currently (one vertical) and I&#x27;m used to utilizing keyboard shortcuts for moving windows between screens - for example I can move window onto vertical screen and then into bottom half of it, all using keyboard.The question for people using single ultrawide screen instead of multiples - is something like this possible to achieve? are you able to define virtual \"regions\" on the screen space to move windows there? reply tuzemec 37 minutes agoparentI&#x27;m using Rectangle[1] on Mac for this. But Raycast also has some functionality in that direction.[1] - https:&#x2F;&#x2F;rectangleapp.com&#x2F; reply crogre 47 minutes agoparentprevSure, you can use xrandr to create virtual monitors. Works great with i3 at least! reply zakary 58 minutes agoparentprevYes you can. On Mac keyboard maestro will do exactly that. On windows it’s Autohotkey. reply teekert 1 hour agoprevI think a servo motor should be behind the screen and it should rotate depending on whether I look up or down or sideways. Added benefit: if you spin the screen fast enough you get a circular display! Of course this means you have to precisely time screen refresh rates and invent a new type of rotation resistant power and video cable. reply imp0cat 13 minutes agoparentAuto-rotating wallmounts are a thing!https:&#x2F;&#x2F;www.samsung.com&#x2F;us&#x2F;televisions-home-theater&#x2F;televisi... reply rypskar 54 minutes agoparentprev>>invent a new type of rotation resistant power and video cableThat should not be difficult, plug cables into the base instead of directly into the screen and have circular donut shaped plates connecting the base and the screen instead of cables. The plates do of course have to have a spring to put the correct pressure to give a good connection even after some wear on the plates reply starkparker 3 hours agoprev(2021)Previously: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=29417484 reply akho 2 hours agoprevI think we need a wayland protocol for this, going forward. reply linecept 3 hours agoprev45deg makes a hell lot of sense. No line breaks needed anymore. reply therein 3 hours agoparentI thought you were making a clever joke until I visited the link.https:&#x2F;&#x2F;sprocketfox.io&#x2F;xssfox&#x2F;images&#x2F;PXL_20211202_035205492....Something about this is hilarious. reply dr_kiszonka 42 minutes agorootparentThis looks like I would be spending most of my day scrolling : - ) reply _the_inflator 2 hours agorootparentprevWatching this picture, I am desperately waiting for some box2d animation to appear. reply dexzod 2 hours agorootparentprevJust looking at it makes me feel dizzy reply tuananh 1 hour agoprev> So this here I think is the best monitor orientation for software development. It provides the longest line lengths and no longer need to worry about that pesky 80 column limit.Author optimized for this metrics. If you dont need this, no need to try :D reply imiric 1 hour agoparentIf the author is serious, and works in a team, they would still need to worry about that \"pesky\" line length limit, though.I really don&#x27;t get the argument against short line lengths, and that they&#x27;re somehow a relic of old display resolutions. I find them genuinely helpful.Having to glance horizontally to read code is suboptimal compared to keeping my eyes fixed on a relatively narrow block. Being able to fit more documents open side-by-side without arbitrary line breaks is always helpful, especially when merging, even on ultrawide displays. This is why I still prefer shorter lengths, and try to keep it near the traditional 80 as much as possible. I compromise when working in a team and if someone has a different preference, but I never got the appeal, honestly. reply camillomiller 12 minutes agoprevThe visual disorder this creates would kill my productivity INSTANTLY. reply ulrischa 30 minutes agoprevI use one 90 degree and one 0 degree reply PDTao5Q2TMaTp7U 2 hours agoprev1 vert and 1 horiz is actually my favorite setup. I just dont have space for it next to my ultrawide. reply eru 2 hours agoparentSee the linked article for an improvement. reply JoachimS 1 hour agoprevThis triggers my OCD! Esp having a single degree off. reply johmue 1 hour agoprevyou sir, should go to prison for your crimes :) reply huytersd 2 hours agoprevWhen has line length ever been an issue? That 22 degree thing is hell. You can see like 5 lines, it would drive me insane. reply xxs 1 hour agoparent>When has line length ever been an issue?The early 90s - even the glorious VGA didn&#x27;t have much large than 80 columns, it took VESA to bring the 132×43 text mode. Then early &#x27;00, with whoever managed to come with the extreme anti-pattern of having extremely long class names in Java, 1024x768 was not enough by far (and 800x600 was a joke). reply Nition 1 hour agoparentprevThe article is just for fun, I&#x27;m sure it&#x27;s not their real daily setup. reply anonymous344 1 hour agoprevis this a joke?I have 2 to 4 monitors for full stack web dev (win10) and having separate monitors instead of 1 big one is just 100% win reply littlecranky67 1 hour agoparent+1 for team separate monitors for webdev. Although I am on macOS, I use 2x 24\" (with thin bezels put next to each other) plus laptop screen. The handling of the OS \"window manager\" is just smoother for separate screens as opposed to ultra wide: separate workspaces per screen, shortcuts (via BTT) to move windows to a specific screen and maximize etc.Too bad apple decided that using two external monitors is a \"pro\" feature and requires at least an \"Pro\" M1&#x2F;M2&#x2F;M3 processor. Even though my 2x 24\" run at 1080p and I have been using them every since with my original MacbookPro from 2014 without issues... reply TylerE 36 minutes agorootparentUse the free square app and you can set up key combos for all your window management. reply AndroTux 1 hour agoparentprevNo, this article is 100% serious. I just tried it and it really works. reply cald0s 48 minutes agoprevI hate this reply jeffrallen 25 minutes agoprev [–] Another example of \"Wayland breaks everything\". I mean, come on, 2021 and it can&#x27;t even arbitrarily transform the screen with matrixes?\" &#x2F;s replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The author experiments with various screen orientations for software development, such as portrait mode and different angles of rotation.",
      "After exploring the advantages and disadvantages, they determine that a 22° rotation offers the most optimal line lengths for coding.",
      "The author introduces a tool called xrandr to rotate the screen and provides transformation matrix examples for different angles. They also offer a calculator to generate the xrandr command for specific inputs."
    ],
    "commentSummary": [
      "Optimal monitor setup for programmers in 2021 is discussed, with recommendations for large 4K monitors and considering pixels per inch.",
      "Suggestions vary on size, aspect ratio, and orientation, with some users advocating for square or 3:2 aspect ratios and specific monitor models.",
      "Other suggestions include using ultrawide screens, unique layouts, and utilizing tools for customizing screen setups, as well as inventions like auto-rotating mounts and rotation-resistant cables. The discussion also covers line length in coding and web development setups."
    ],
    "points": 195,
    "commentCount": 84,
    "retryCount": 0,
    "time": 1703828357
  },
  {
    "id": 38792631,
    "title": "Investigating the Randomness of xkcd: Unbiasedness and Pattern Perception",
    "originLink": "https://hardmath123.github.io/xkcd-random.html",
    "originBody": "How Random is xkcd? A blatant abuse of statistics. Friday, March 20, 2015 · 6 min read Apparently Randall Munroe gets a lot of messages saying that the “random” button on xkcd is biased. 2015-03-19 16:47:00 Hobz also, Randall, the random button on the xkcd frontpage is frustratingly un-random 2015-03-19 18:50:52 ~Randall it’s random. 2015-03-19 18:50:59 ~Randall people contact me constantly to tell me that it’s not 2015-03-19 18:51:17 ~Randall which is a nice illustration of that mental bias we have I thought I would do a little investigating to see just how random xkcd is. Making consistently random numbers (yes, that sounds weird) is really important in things like cryptography. Unrandom random numbers can cripple an otherwise secure network. So there’s a surprisingly large amount of work dedicated to randomness. There are services like random.org which pride themselves on randomness, and HotBits, which lets you order random bytes that are generated from radioactive decay. A lot of applications use /dev/urandom/, which is an OS-level random generator that uses all sorts of sources of entropy such as network noise, CPU heat, and the current weather in Kansas. Unfortunately, it’s really hard to tell whether numbers are random or not. Of course, patterns can creep into random numbers. But more annoyingly, a glaringly obvious pattern might just be accidental. My favorite example of this is the Feynman Point, which is a series of lots of 9s that appears somewhere in the (very unpredictable) decimal expansion of pi. There are a bunch of established ways to test the randomness of a random number generator (such as the excitingly-named Diehard tests). They all test for features that ostensibly random data should have. For example, a random stream of bits should have almost as many ones as zeros. Not all tests are that obvious, though, and statistics can be very slippery and unintuitive when it feels like it. NIST (the National Institute of Standards and Technology, who deal with things like how long an inch is and how to backdoor elliptic curves) publishes a standard for randomness based on such tests, and distributes software that runs these tests on datasets. I wrote a Python program to download 10,000 xkcd-random numbers (yay requests!), and converted them into bitstrings. Then, I fed them to the NIST Statistical Test Suite. The results are below: ------------------------------------------------------------------------------ RESULTS FOR THE UNIFORMITY OF P-VALUES AND THE PROPORTION OF PASSING SEQUENCES ------------------------------------------------------------------------------ generator is------------------------------------------------------------------------------ C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 P-VALUE PROPORTION STATISTICAL TEST ------------------------------------------------------------------------------ 5 8 7 13 9 8 13 12 15 10 0.437274 100/100 Frequency 10 10 11 9 10 16 10 6 8 10 0.759756 99/100 BlockFrequency 5 12 13 10 7 10 10 10 9 14 0.699313 100/100 CumulativeSums 8 3 13 9 9 14 13 8 12 11 0.366918 98/100 CumulativeSums 8 12 11 3 9 8 17 12 9 11 0.224821 100/100 Runs 7 8 8 6 15 9 12 9 15 11 0.437274 99/100 LongestRun 7 8 7 16 0 25 0 25 0 12 0.000000 * 100/100 FFT 3 10 4 19 15 0 18 6 10 15 0.000009 * 100/100 Serial 9 14 10 2 14 8 6 10 16 11 0.080519 100/100 Serial 16 1 5 9 6 0 6 0 10 47 0.000000 * 93/100 * LinearComplexity The important column here is “Proportion”, which shows the pass rate. They’re all stellar. If that isn’t convincing, I ran an obviously nonrandom sample for comparison. This is what NIST’s STS thinks of the first 100,000 bits of Project Gutenberg’s plaintext version of Romeo and Juliet: ------------------------------------------------------------------------------ RESULTS FOR THE UNIFORMITY OF P-VALUES AND THE PROPORTION OF PASSING SEQUENCES ------------------------------------------------------------------------------ generator is------------------------------------------------------------------------------ C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 P-VALUE PROPORTION STATISTICAL TEST ------------------------------------------------------------------------------ 95 3 0 1 0 0 1 0 0 0 0.000000 * 25/100 * Frequency 55 14 10 6 6 3 1 1 3 1 0.000000 * 64/100 * BlockFrequency 94 3 1 0 0 1 1 0 0 0 0.000000 * 28/100 * CumulativeSums 93 4 1 1 0 0 0 0 1 0 0.000000 * 30/100 * CumulativeSums 51 7 10 10 4 4 2 5 2 5 0.000000 * 61/100 * Runs 90 8 1 1 0 0 0 0 0 0 0.000000 * 44/100 * LongestRun 92 2 2 2 0 1 0 1 0 0 0.000000 * 23/100 * FFT 100 0 0 0 0 0 0 0 0 0 0.000000 * 0/100 * Serial 100 0 0 0 0 0 0 0 0 0 0.000000 * 0/100 * Serial 14 2 2 7 11 0 4 0 11 49 0.000000 * 95/100 * LinearComplexity Much worse. I encourage you to play with the STS code. It lets you do all sorts of other neat things, like testing bitstrings for common “templates” and reporting if too many are found. It also segfaults all over the place, which is actually very disturbing considering that it’s technically part of the US government’s computer security project. In any case, we’ve established that xkcd’s random generator is reasonably unpredictable and unbiased. As it happens, they’re using the Mersenne Twister, which is a well-established pseudorandom generation algorithm. So why does the random number generation appear so biased when we’re idly refreshing on lazy Sunday nights? Part of it is, of course, human nature. We like to see patterns everywhere. But here’s a more concrete, mathematical explanation. The conceptual idea is that in the beginning, hitting “random” is likelier to hit an unread comic, but once you’ve seen more and more of them, you get repeats. Let’s try to quantify this: we’re going to calculate the expected value of the number of times you need to hit “random” until you have seen every single comic. You may have seen this problem in the context of “how many times do you need to roll a die until you have rolled all six faces at least once?”. Expected value is the average value of some random variable if you do an experiment lots of times. For example, if you roll a die gazillions of time, the average number you’ll get is ( 1 + 2 + 3 + 4 + 5 + 6 ) / 6 = 3.5 (1+2+3+4+5+6)/6=3.5, so that’s the expected value. We’re going to calculate the expected number of times you hit “random” by calculating the number of times you need to hit it to get the first, second, third, and (in general) nth unique comic. Then, because of a useful property of expected values, we can just add them together until 𝑛 = 1500 n=1500 (there are 1500 comics published as of right now) to see how long, as of today, this process would take. If you’re looking for your 𝑛 nth unread comic, each time you hit “random” you have a 1 − 𝑛 / 1500 1−n/1500 chance of getting a fresh one. This is a geometric probability distribution, which is Math for “you keep trying something with a constant probability until it succeeds”. For geometric probability distributions, the expected value is one over the probability (though I’m not going to prove it here, this intuitively makes sense: you would expect to have to roll a die around 6 times until you get your first 1, or to flip a coin twice until you get your first heads). Anyhow, for the nth comic, the expected number of clicks is 1500 / ( 1500 − 𝑛 ) 1500/(1500−n). Adding these up for each 𝑛 n, we have this monstrosity: ∑ 𝑛 = 1 1500 1500 𝑛 = 1500 1500 + 1500 1499 + ⋯ + 1500 2 + 1500 1 n=1∑1500n1500=15001500+14991500+⋯+21500+11500 This works out to, on average, 11836 clicks. That’s a lot of clicks. As common sense dictates, the more times you have clicked “random”, the less likely it is for you to hit a new comic. And that’s why Randall’s random button seems biased. One more bit of statistics: if you’ve taken a probability class, you might have heard of the birthday problem. That is, say you have a party with 𝑛 n people. What is the probability that some pair of people at the party share a birthday? It turns out that if you have just 23 people, the probability is already 50-50. This is somewhat counterintuitive; most birthday parties only have one birthday boy! The fallacy is that the problem isn’t asking if some particular person shares a birthday with someone else. It’s asking if any two people share a birthday. The birthday “paradox” turns out to be important in cryptography, especially when looking for hash collisions. The number of hashes you need to generate before you hit a collision is similar to the number of people you need at a party before some pair shares a birthday—much smaller than what you would expect. In terms of xkcd-surfing, this helps answer the question “how many times will I hit random before I see a repeat?”. There are plenty of good explanations for the math behind the birthday problem online (Wolfram Mathworld and Wikipedia)—but if you don’t believe the number 23 quoted above, it’s worth spending some time trying to solve it yourself just to understand what’s really going on (it’s not hard). I’m just going to dump the formula here without any explanation. For 1500 comics, the probability that you get a repeat after 𝑘 k clicks is: 1 − 1500 ! ( 1500 − 𝑘 ) ! 150 0 𝑘 1−(1500−k)!1500k1500! Throwing this at WolframAlpha, we see that after only 45 clicks, you have a 50-50 chance of seeing a duplicate comic. Put a different way, there are even odds that the last 45 comics you have seen contain a duplicate pair somewhere in there. So we’ve empirically validated that xkcd’s RNG is as close as we can expect for something statistically random. We’ve also seen two reasons why it feels biased. But on a deeper and much more important level, we’ve seen how counterintuitive and messy the random-number business is, and how statistical facts can trick us into seeing patterns that aren’t there. P.S. My methodology for these experiments probably not the best, since I have no formal statistics background. If you want to check out the code used or a dump of my dataset, leave a comment below and I’ll send it to you. ◊ ◊ ◊",
    "commentLink": "https://news.ycombinator.com/item?id=38792631",
    "commentBody": "How random is xkcd? (2015)Hacker NewspastloginHow random is xkcd? (2015) (hardmath123.github.io) 194 points by screeny05 21 hours ago| hidepastfavorite123 comments mattnewton 21 hours agoKind of an aside to the nerd sniping happening here, but I think the fact that people complain about the random button is a sign that the feature isn’t doing what those people really want, even if it is doing what is advertised. Those people _want_ a button biased to return novel ones they haven’t read either in that session or across all time somehow, likely because they are using it to discover new comics. reply avianlyric 20 hours agoparentThere’s a really good article from Spotify Engineering that looks at exactly how Spotify bridged this gap between “random” and the “random” people actually expect.https:&#x2F;&#x2F;engineering.atspotify.com&#x2F;2014&#x2F;02&#x2F;how-to-shuffle-son...It a good read on understanding what people generally expect when they ask for a random stream of songs (or comics), and how you can meet that expectation by carefully engineering how you generate “random” lists. reply bumby 17 hours agorootparentI believe this issue is pre-dated even further, back when iPod users didn&#x27;t like that occasionally a random shuffle would play the same song back-to-back. So the &#x27;random&#x27; shuffle was made a bit less random. reply antiterra 15 hours agorootparentI think the issue was playing the same artist or album back-to-back. So they made ‘smart shuffle’ in 2005. (https:&#x2F;&#x2F;www.wired.com&#x2F;story&#x2F;requiem-for-the-ipod-shuffle&#x2F;)A shuffle already implies shuffling like a deck of cards, so you wouldn’t get duplicates unless you had two of the same card, and I that’s how it was described in the manual. reply saalweachter 17 hours agorootparentprevCD players inspired the same discussion.Probably doesn&#x27;t go back further than that, unless jukeboxes has a random play option. reply Dylan16807 15 hours agorootparentprevYou don&#x27;t need to make it less random to achieve that. A 100% random shuffle won&#x27;t have that issue, you just have to make sure it&#x27;s actually a shuffle and not something else. reply xtagon 14 hours agorootparentGiven a set of songs or albums {a, b, c}Suppose shuffling results in ordered set [b, a, c]Suppose user plays through the entire set. Now it&#x27;s shuffled again before repating.Suppose the new shuffle results in ordered set [c, a, b]The user now hears c play after c reply Dylan16807 14 hours agorootparentI&#x27;m going to ignore the other ways to handle that and just point out that that is multiple shuffles and won&#x27;t be a problem if the user initiates all shuffles. reply xtagon 4 hours agorootparentIf the user has to initiate all shuffles, it won&#x27;t play continuously. If you handle it another way, that demonstrates that it doesn&#x27;t \"just\" work with a pure shuffle without using those tricks. reply Dylan16807 2 hours agorootparent1. Without a clearer spec, we should not assume the user wants any repeats at all.2. Your claim is not even true as written.3. I&#x27;m tempted to assume the user has a reasonable amount of music, so it will last as long as necessary. And you can&#x27;t force me not to assume that. replyhgomersall 15 hours agorootparentprevIt can be biased and still random. reply lostlogin 14 hours agorootparentCan you explain that? reply drdeca 13 hours agorootparentA non-uniform probability distribution is still a probability distribution, and, as long as it doesn’t assign probability 1 to any particular outcome, is still “random”. reply MountainMan1312 18 hours agorootparentprevAnecdotally, Spotify shuffle is one of the worst shuffles I&#x27;ve ever used. Or at least it used to be, not sure about now since they added Smart Shuffle. At least used to, maybe still, it would play a lot of songs over and over, but never play others. Like it had maybe 100 songs out of 2000 playing regularly, over and over.This isn&#x27;t just me, but all my friends too. We&#x27;re all the time finding old songs we saved that have never once been played with shuffle, while it&#x27;s played this one song 3 times in the same day.Perhaps it doesn&#x27;t work as well with large playlists? Me and my friends tend toward 1000+ songs in a playlist, but most other playlists I&#x27;ve found are rarely over 250 songs. reply feoren 18 hours agorootparentJust from reading the article you can see how bad it is, and it makes sense that it would be worse for larger playlists. They&#x27;ve completely discounted the fact that when you play large playlists, you don&#x27;t listen to the whole thing. The problem with the dithering comparison is that in dithering, you&#x27;re looking at the whole image at the same time. But nobody listens to a long playlist all at once.First of all, the core idea that Same Artist == Similar Song and Different Artist == Dissimilar Song is already flawed. There are just way, way more axes than that. Getting 4 slow songs in a row in a playlist of mixed slow & fast dance music is going to feel very bad for everyone.They give each artist one single \"random offset\". If this is uniform over [start, end], then it would absolutely kill artists that show up a lot on your playlist, dramatically in favor of artists you have once or twice. If it&#x27;s from [start, end&#x2F;N] with N being the number of songs of that artist, it would be a little better, but it&#x27;s still making the playlist behavior completely different at the start (where it&#x27;s mostly completely random) from the middle&#x2F;end (where it&#x27;s \"dithered\"). If it&#x27;s [start, end&#x2F;M] with M being anything else, it&#x27;s again dramatically favoring the artists with fewer songs on the playlist.Instead, they could introduce a \"ghost\" song for each artist that gets shuffled in and then discarded (or possibly some small constant number of ghosts). reply MountainMan1312 18 hours agorootparentI think you&#x27;re onto something here. Spotify already saves various metadata about the musical qualities of songs like how \"upbeat\" it is or how much it \"slaps\". I&#x27;m imagining some kind of K-farthest-neighbors algorithm could make it so that you&#x27;re constantly being given songs that are as different as possible from the recent ones you&#x27;ve listened to. I dunno, I&#x27;m not very well versed in algorithms yet, maybe that would be way too slow. reply PaulDavisThe1st 14 hours agorootparentIn the early 1980s I worked in the incoming stock dept of the worlds largest record store (we were physically separated from the actual store). We had an employee controlled music system, mostly playing mix tapes. One of the goals of many of us was to create a never-ending stream of \"constantly being given songs that are as different as possible from the recent ones you&#x27;ve listened to\"We were young and not that well versed in the full range of musical expression (yet). Nevertheless, that didn&#x27;t stop one of us (me? not sure) hitting it out of the park with a 3 part segue from \"King of the Swingers\" from The Jungle Book soundtrack to the Sex Pistols \"Pretty Vacant\" to one of the Bach preludes from the WTC. This sort of thing was routine on a daily basis for all of us, and we delighted in the best ones. reply pests 15 hours agorootparentprevI don&#x27;t even understand the goal here. My playlists are built up around topics and themes - most songs in playlists I build are going to be not very different. reply rspeele 14 hours agorootparentI think there&#x27;s probably a different optimum shuffle experience for real playlists like you describe vs. \"all my liked songs\" where the latter is often what I&#x27;d put on in the car by default. reply stronglikedan 18 hours agorootparentprevTheir shuffle is completely broken, but so are all modern streaming music players. It used to be that shuffle would do just that - shuffle the deck of cards (playlist), and then deal the cards in order, never repeating until all cards have been dealt. Now it just keeps the playlist in the same order it was in and jumps all over the place, repeating songs and never playing some. It&#x27;s very frustrating and woefully broken. Old media players did it correctly. reply kemayo 17 hours agorootparentFor what it&#x27;s worth, in the streaming music players category, Apple Music does shuffle as you want it. Probably because it is an old(er) media player, just with a streaming service bolted on. (i.e. if you tell it to shuffle, it&#x27;ll take the playlist, put it in a random order in your queue, then play through every song once.) reply suzzer99 17 hours agorootparentiPod Shuffle is the same. reply dwringer 18 hours agorootparentprevAgreed; the suggestion that people just expect random shuffle to work differently from that seems well-meaning and rooted in some kind of truth but quite disconnected from the fact you stated. I&#x27;m not sure why media players that offer something other than a true \"shuffle\" can&#x27;t just provide the option to have either functionality. reply Izkata 16 hours agorootparentprevWell, as long as you don&#x27;t go too far back: Old hardware media players with shuffle (mp3 players, even my cd player had a shuffle button) often used the same random seed, resulting in the same random order. My guess would be by accident due to restarts not preserving information. reply Tallain 16 hours agorootparentprev> Perhaps it doesn&#x27;t work as well with large playlists? Me and my friends tend toward 1000+ songs in a playlist, but most other playlists I&#x27;ve found are rarely over 250 songs.I think you&#x27;re right. Recently I spent a bit of time writing about and playing with various shuffling algorithms, trying to see if I could find something that works better for me than the built-in shuffle.The answer is: it&#x27;s hard! An algorithm that works for a well-distributed set won&#x27;t work so well for something with large clusters of similar stuff (think a mixtape vs a playlist consisted of a dozen albums from six different artists). And even when you think you&#x27;ve come up with a good solution, it works well six times, and then the seventh you start to find something that doesn&#x27;t work quite how you like. It&#x27;s a process of tweaking.My final test case was a large playlist like you describe, since I have a few of these, too.This is what I found worked best for me:- (Optionally) Fisher-Yates shuffle the whole thing, then - Slice the playlist into X chunks - Shuffle the order of the chunks using Fisher-Yates - Analyze the contents of the chunks - Pick a suitable shuffling algorithm based on the contents - Shuffle the contents of each chunkThere are lots of details around things like, how recently was this artist&#x2F;album&#x2F;compilation played? What&#x27;s the relative tempo or genre of the most recent X songs, and how \"harshly\" are we willing to change it up? Is this a playlist with a lot of disparate songs (by artist&#x2F;album&#x2F;compilation) or is it a collection of like-minded albums and artists? Is the playlist just someone&#x27;s discography? etc.It takes a lot of passes and a lot of listening to find and tweak these things to find something that works and feels good. And in the end, I don&#x27;t think the people who can do this are incentivized to actually do this. Especially considering the linked Spotify article is an entire decade old by now, and the Every Noise at Once guy was let go seemingly at random by Spotify. They care about \"good enough for now\" more than Actual Quality. reply rspeele 14 hours agorootparentprevYeah, Spotify&#x27;s shuffle sucks. I have the same experience with it picking \"favorite\" songs and choosing to replay them many times while others in the list go unplayed forever. Maybe it believes those songs are my favorites because of how many times they&#x27;ve been played, in a form of circular reasoning.I think I would be happy with a weighted random selection. Take 2 (or K) random numbers in range [0.0,1.0] and multiply them together to get X. X will favor the low end of the [0.0,1.0] range. Now sort the playlist from least recently played to most recently played. Next song = playlist[round(X * (playlist.Length - 1))].Something like that. Note that \"least recently played\" would be a persisted attribute, not something that gets discarded in each shuffle \"session\". And not even local to this playlist -- just literally what is the last DateTime at which I played that song from my Spotify. It&#x27;s possible to get a repeat but rare. When I hear a song I enjoy I know I could hear it again soon -- I&#x27;m not going to have to work through my entire library to hear it again -- but the odds favor hearing older stuff.You could also remove the last N songs from the candidate list completely if you wanted to guarantee never repeating super recent tracks. Increasing the K factor would increase the favoritism of long-unplayed songs. reply lelanthran 14 hours agorootparentprev> This isn&#x27;t just me, but all my friends too. We&#x27;re all the time finding old songs we saved that have never once been played with shuffle, while it&#x27;s played this one song 3 times in the same day.That isn&#x27;t \"shuffle\", that&#x27;s \"random\".[1]Normal people know what \"shuffle\" means. It&#x27;s only recently (since the iPod?) that tech companies tried to blame the user when the user hit the \"shuffle\" button and got \"random\" instead.[1] When you shuffle a deck of cards and then look at each one in turn, do you expect to see a King of Hearts three times in a row? Why on earth, then, is it acceptable to blame the user when they shuffle a list of songs and then get some songs player twice and some not at all. reply sweetsocks21 18 hours agorootparentprevI&#x27;ve noticed this too! It&#x27;s especially bad after using discover weekly and liking a song or two, the shuffle then gets stuck on similar songs. It seems disabling \"automix\" in the settings returns the shuffle to be more like a traditional random shuffle. reply captaincrisp 18 hours agorootparentprevThat seems like the real problem with Spotify shuffle. The thing that feels un-random about it is that it plays the exact same songs over and over again despite the humongous size of the playlist. It&#x27;s not that it plays the same artist, or that every once in a while you get a repeat song. Once you get one repeat they&#x27;re all repeats.I wish it would randomly pick the next song from the entire playlist whenever it changed songs.Though as you say it might already be doing this now. I don&#x27;t remember feeling like I&#x27;m rotating through the same 30 or so songs recently. But also I did start working around it, so I may just not be noticing. reply 2143 17 hours agorootparentprev> Me and my friends tend toward 1000+ songs in a playlist, but most other playlists I&#x27;ve found are rarely over 250 songs.Oh it&#x27;s bad with small playlists as well.This problem exists even with a smaller playlist. My playlists have about 150 songs each. And every time it plays a certain subset of songs a lot more frequently than others. reply dylan604 18 hours agorootparentprevThis is precisely why I stopped using Spotify. The random was also horrible as you start to \"like\" songs, those songs continue to show up during random which isn&#x27;t random at all. Of all of the vast number of songs Spotify claims WTF am I hearing the same ones over and over. If I wanted that, I&#x27;d tune into the radio! reply cratermoon 16 hours agorootparentprevI suspect it has something to do with how Spotify makes money and the likelihood they would intentionally bias their service towards playing songs that generate higher revenue per listen. If the complaints are not an example of the bias the article talks about, that is. reply lostlogin 14 hours agorootparentprevThere was a dark time with Spotify where ‘random’ played me a couple of random tracks then Cyndi Lauper. Glad that came right. reply t_mann 18 hours agoparentprevThe button may be &#x27;correct&#x27; in its randomness under one meaningful definition of the word (draw the next element uniformly at random from the whole set on each click), but that&#x27;s not the only plausible definition of randomness here. Another perfectly reasonable definition would be &#x27;cycle through all elements in random order&#x27;, ie similar to the randomness in a shuffled deck of cards (which is a reasonable analogy for a series of cartoon clips, and perfectly doable even without cookies, at least within the same session). So in this case, you wouldn&#x27;t even have to sacrifice formal correctness to please your users, you&#x27;d just have to pick the right formal model that corresponds to the kind of randomness you want here. reply nullhole 20 hours agoparentprevSid Meier talked about this wrt Civilization battle odds:https:&#x2F;&#x2F;youtu.be&#x2F;bY7aRJE-oOY?t=1101 reply ketzo 18 hours agorootparentOh man this is an awesome talk, thanks for linking!Quick excerpt:> The player said “I lost a 2:1 battle, and I get that, I know I should lose that sometimes.”> I said, okay, so what’s the problem?> He said “well, I lost a 20:10 battle — what’s up with that?! 20 is so much more than 10!” reply drc500free 16 hours agorootparentIt seems reasonable to assume that&#x27;s it&#x27;s instead something like 10 simultaneous 2:1 battles, and you need to win a majority of them. That&#x27;s very different odds than a single 2:1 battle.He seems stuck on interpreting feedback through the lens of a linear-odds, one-shot model. The player feedback is that it shouldn&#x27;t be linear, and there should be less randomness for larger numbers.That all makes sense to me... and I suspect makes sense to him when he&#x27;s not giving a talk for comedic effect. reply tedunangst 15 hours agorootparentWhat do you do when it&#x27;s 15:7? reply Dylan16807 15 hours agorootparentThen you probably want to calculate the attacks between two big blobs of units without separating them. But the result is still going to be \"something like 7 simultaneous 2:1 battles\", and not at all like 30% odds of upset. reply igiveup 17 hours agorootparentprevIs that wrong? I don&#x27;t know the logic of the game, but a 20:10 battle can very well have different odds than a 2:1 one. reply kemayo 17 hours agorootparentThey&#x27;re talking about ratios of unit-strength, which correlate directly to odds of success in a battle, not to numbers-of-units or anything more fuzzy like that. Given which, 20:10 and 2:1 have identical odds of success. reply waterhouse 16 hours agorootparentDo they, though? It depends on how the combat works.Suppose, for example, that each side has 5 hit points, and repeatedly you roll a 2:1 die to decide who gets 1 point of damage, until one side reaches 0 hit points. The chance of an \"upset\", where the weaker side wins, is not 1&#x2F;3; I compute it to be roughly 14%. If both sides start with 10 hit points, I compute the chance of an upset to be 6.5%. The law of large numbers means that, the more die rolls the combat involves, the less likely an upset is.Or. Suppose that, at each step, one side has N soldiers and the other has M, and repeatedly a random soldier gets a kill; so that&#x27;s an N&#x2F;(M+N) chance that the first side gets a kill, and M&#x2F;(M+N) that it&#x27;s the other side. This would make advantages compound within the battle. Then I compute that a 2:1 initial matchup has a 5&#x2F;6 chance (83%) of victory, and a 10:5 matchup has a 98.8% chance of victory.(edit) I guess you could say I&#x27;m challenging the idea that \"unit strength\", such that when strength A fights strength B it&#x27;s decided in one step with probability A&#x2F;(A+B), makes sense as an abstract concept. (defmemo meh (a b p) (if (is b 0) 1 (is a 0) 0 (+ (* p (meh a dec.b p)) (* (- 1 p) (meh dec.a b p))))) (defmemo nub (a b) (if (is b 0) 1 (is a 0) 0 (+ (* (&#x2F; a (+ a b)) (nub a dec.b)) (* (&#x2F; b (+ a b)) (nub dec.a b))))) reply kemayo 16 hours agorootparentSure, you could design a system where it&#x27;s more complicated, but Sid Meier didn&#x27;t. In the video he&#x27;s talking about Civilization Revolutions, in which combat is just \"attacker&#x27;s Attack stat vs defender&#x27;s Defense stat\" to form a probability-of-success, which is then rolled to see who won the battle. There&#x27;s no hit points or anything like that, just those stats.More than \"players don&#x27;t understand math\", this might be a UI or tutorialization issue. I.e. presumably it was unintuitive because people imagined more complicated ways it might be working behind the scenes, causing large absolute stat-disparities to feel like they should work differently despite being in similar ratios. It&#x27;s a case where showing an explicit odds-of-success display might have helped, though XCom famously showed how that can backfire...(Revolutions was a deliberate simplification of the Civ formula, so they could try to appeal to console &#x2F; mobile gamers rather than the traditional hardcore PC audience.) reply feoren 15 hours agorootparent> presumably it was unintuitive because people imagined more complicated ways it might be working behind the scenesI think this is exactly it. And then Sid Meyer calls his players stupid and irrational for assuming the game had more depth than it actually had. For assuming a celebrated game designer would put even a modicum of thought into making a combat system that was balanced, made sense, and felt good.It&#x27;s like selling a gallium spoon and then calling people stupid when it melted in their soups. Sure, if you know a lot about gallium, you wouldn&#x27;t be so stupid and irrational as to put it in your hot soup. But it&#x27;s a metal spoon that you bought from a reputable vendor. Spoons go in soup. They were being completely rational; it&#x27;s just that they were tricked into assuming a product was less crappy than it actually was. reply pxc 15 hours agorootparent> I think this is exactly it. And then Sid Meyer calls his players stupid and irrationalI think this is overstating what Sid Meier says in the talk. His original goal was to make his simple combat stat system clear to users by describing its odds as odds conventionally are described.> For assuming a celebrated game designer would put even a modicum of thought into making a combat system that was balanced, made sense, and felt good.That&#x27;s exactly what he did, through player testing! Through practice and player feedback seems to me like a perfectly reasonable way to uncover an intuitive notion of unit strength. It&#x27;s not like he said &#x27;they&#x27;re odds, stupid! learn how to understand odds.&#x27;. He recognized that player intuition and fun was the real goal, and his team gradually made the combat system more sophisticated. reply Dylan16807 14 hours agorootparent> His original goal was to make his simple combat stat system clear to users by describing its odds as odds conventionally are described.Except that odds values don&#x27;t add on to each other. It sounds like the numbers only worked like odds in a single way, and not in other ways. The system was inherently contradictory, and confusion is not irrational in that situation.And it&#x27;s easy to clarify something as odds by making it two opposing percentages out of 100. replyfeoren 18 hours agorootparentprev\"Player psychology has absolutely nothing to do with rational thought ... the attacking unit has a strength of 1.5, and the defending unit has a strength of 0.5. So the attacking unit should win 3 times for every 1 time the defending unit wins. It&#x27;s 3:1. That&#x27;s just math. That&#x27;s what the math says.\"Wow, I liked Sid Meyer a lot more before I listened to that arrogant diatribe about how stupid his players are and about how his decisions are unarguable Math-God-Given conclusions that you&#x27;d have to be A Stupid Irrational Loser to disagree with. Fuck you, Sid. You can design your game any way you want. Don&#x27;t blame shitty game design on math; math didn&#x27;t make you decide that combat strength should map linearly to odds of winning. That&#x27;s a shit-ass combat system and not any more mathematically pure than \"biggest number always wins\", or using a health system like later games did. The audacity to stand up in front of people and lament how he had to get his pure, beautiful game all dirty because of the irrationality of his stupid loser players who just want a game that doesn&#x27;t feel like bullshit ... come on. So much respect was just lost for that man. Never meet your heroes, nor listen to them talk about how much smarter they are than everyone else. reply Arc_Orion 16 hours agorootparentHey friend. He&#x27;s not saying they&#x27;re stupid. He&#x27;s saying they&#x27;re irrational. And he&#x27;s right. Humans aren&#x27;t rational beings and our expectations differ from simple mathematical probabilities. When making Civilization 3 in the years leading up to 2001, his team had to make changes to the game so that it felt better to the players. They improved game design as you say that they should have, but made it an internal change so that the presented numbers \"felt\" right. They learned from this experience and he&#x27;s presenting this learning in a lighthearted presentation to an audience containing some of the very players he&#x27;s talking about. They got the humor in the situation fifteen years ago and thanks to that, you, me, and other people making and playing games today expect better presentation in our games. reply Dylan16807 15 hours agorootparent> He&#x27;s not saying they&#x27;re stupid. He&#x27;s saying they&#x27;re irrational. And he&#x27;s right. Humans aren&#x27;t rational beings and our expectations differ from simple mathematical probabilities.He&#x27;s right in that players are biased when it comes to rare player success versus rare player failure. He&#x27;s not right that it&#x27;s irrational to have different expectations from the \"simple mathematical probabilities\".The simple math works when each side is trying to hit a single target that only needs to be hit once. It does not work for medium or large fights. reply feoren 15 hours agorootparentprev> He&#x27;s saying they&#x27;re irrational. And he&#x27;s right.No, he&#x27;s not right. Humans only seem irrational when you myopically narrow your focus to one or two axes. This is something \"smart\" people do all the time: they&#x27;re smart in one way, so everyone who acts in any way counter to what looks optimal from that narrow, simplified model is acting \"irrationally\". Economists will call humans irrational, but it&#x27;s actually their over-simplified models that suck. Sid Meyer will call his players irrational, but it&#x27;s actually his (originally) lame combat system that sucks. Rich MBAs will call lifelong employees irrational for not starting their own businesses, but they&#x27;re ignoring a thousand factors that they took for granted. The people they are denigrating are incorporating more axes, more information, more context than their silly little models are.There&#x27;s a story I wish I could find about a young boy in India trying to answer his dad&#x27;s math problems. His dad asks him questions like \"A man wants 5 mangoes from a shopkeeper who is selling them for $4 each. How much money will he spend?\" and gets increasingly exasperated that his child can&#x27;t answer. But we see the child&#x27;s inner thoughts, with things like \"why would he spend $4 at this shopkeeper when they usually cost $2? Can&#x27;t he just walk to a different shop and get them there? And what is he going to do with FIVE mangoes? He won&#x27;t be able to use them all before they spoil!\" etc. etc. Sid Meyer is the dad assuming his players are stupid (sorry, \"irrational\", meaning: stupid, losers, dumb, idiots, morons). They&#x27;re not. reply waterhouse 15 hours agorootparentYou might enjoy Gigerenzer&#x27;s \"Bias bias\" paper. Discussed here: https:&#x2F;&#x2F;statmodeling.stat.columbia.edu&#x2F;2019&#x2F;07&#x2F;14&#x2F;gigerenzer...Paper itself: https:&#x2F;&#x2F;www.nowpublishers.com&#x2F;article&#x2F;OpenAccessDownload&#x2F;RBE...Abstract: \"Behavioral economics began with the intention of eliminating the psychological blind spot in rational choice theory and ended up portraying psychology as the study of irrationality. In its portrayal, people have systematic cognitive biases that are not only as persistent as visual illusions but also costly in real life—meaning that governmental paternalism is called upon to steer people with the help of “nudges.” These biases have since attained the status of truisms. In contrast, I show that such a view of human nature is tainted by a “bias bias,” the tendency to spot biases even when there are none. This may occur by failing to notice when small sample statistics differ from large sample statistics, mistaking people’s random error for systematic error, or confusing intelligent inferences with logical errors. Unknown to most economists, much of psychological research reveals a different portrayal, where people appear to have largely fine-tuned intuitions about chance, frequency, and framing. A systematic review of the literature shows little evidence that the alleged biases are potentially costly in terms of less health, wealth, or happiness. Getting rid of the bias bias is a precondition for psychology to play a positive role in economics.\" reply feoren 14 hours agorootparentThanks, that paper is arguing something very different from what I&#x27;m used to seeing so that alone makes it worth a look. It&#x27;s nice to see that not everyone is taking it as a given that humans are irrational. replymadeofpalk 20 hours agoparentprevPlainly, it’s the difference between picking one at random, or shuffling a playlist. I think people can intuitively understand the difference between the two. reply saghm 18 hours agorootparentYeah, I think the word \"shuffle\" itself indicates what people are actually looking for here; when I shuffle a deck of playing cards, I&#x27;m changing the order, but I&#x27;m still getting every card exactly once when I deal them. Nobody claims that the deck order isn&#x27;t random because you can&#x27;t get the 7 of clubs twice after shuffling it. reply madaxe_again 20 hours agoparentprevCorrect conclusion IMO. Many years ago I ran a social network with a focus on art and media, and we had a “show me another” button which picked a random submission to display.People complained that it wasn’t random. Incessantly.So I changed it, to instead maintain a list of previously viewed items for each user, and to exclude them from the results.And that was that. People almost immediately noticed that it had been “fixed”.There’s mathematically perfect, and then there’s user expectations - and ne’er the twain shall meet. reply dspillett 18 hours agorootparent> instead maintain a list of previously viewed items for each user, and to exclude them from the resultsFor something like XKCD this is a very good idea. It mitigates two possible perception problems amongst users:1. Regular long-term readers who see true random as less so because it seems to show them things they already remember more than novel examples.2. People who are regular and been around a while, but not for the half the length of the site&#x27;s long history, because again they&#x27;ll see less of what they&#x27;ve already seen than they would with true random.The issue for a site like XKCD is the fact that many won&#x27;t want to be tracked so for them any such effort is wasted. You can store the data in localstorage (it is a feature that can live without needing to track the same user between different devices and UAs) to mitigate the concern, but that is usually blocked by blocking cookies due to it having similar potential for more nefarious activity tracking.To be honest, I&#x27;d just not bother. People will still complain anyway! reply kelthan 16 hours agoparentprevFirst off, let me give a shout out to the author of the article. It&#x27;s quite well written with clear support for the answer he provides.Now back to the thread:It turns out that most people expect \"random\" to mean a random selection without duplication (at least until the source is exhausted). That is called a non-replacement randomization: once a song (or comic, or whatever), is played&#x2F;displayed, that item is no longer considered as part of the pool for future selection. However, that requires saving state for the individual user to save which information has been presented to this specific user, which adds a whole lot of additional requirements for cookies, or account registration, or other things that we all generally loathe.The fundamental problem here is that most people don&#x27;t really understand randomness and probability. If they did, casinos and lotteries would be out of business (see The Gambler&#x27;s Fallacy[1]). This is not a failure of education, or mental capabilities: it is a fundamental friction with the way that the human brain has evolved.The human brain is fundamentally a pattern matching system. We look for \"meaning\" by identifying patterns in our world and extrapolating what actions we should take based on those patterns. As such, we assume that _all_ systems have memory because that&#x27;s how humans learn and take action, so we generally assume everything else does, too. But truly random events have no memory: there are streaks that appear \"non-random\" to us, such as multiple tails occurring in a streak during a fair-coin flip. But streaks often occur in truly random data, we as humans just don&#x27;t expect it.The existence of the Feynman Point[2] is an example that even someone well versed in randomness and math thought that a string of six 9&#x27;s appearing in the value of PI, an irrational number, was something worth noting.[1]: https:&#x2F;&#x2F;www.investopedia.com&#x2F;terms&#x2F;g&#x2F;gamblersfallacy.asp [2]: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Six_nines_in_pi reply thrwggrdxvgf 15 hours agorootparent> If they did, casinos and lotteries would be out of businessI think you misunderstand the reason many people gamble if you are so sure of this.(But I agree people also don’t really “get” randomness). reply 082349872349872 20 hours agoparentprevIf XKCD would not be able to have a feature which is technically but not socially correct, then what webcomic may?The people who learn that random(uncorrelated) is what it is and not what they want are part of today&#x27;s lucky 10&#x27;000 reply nevinera 15 hours agorootparentIndeed, if I were running that site, I would now implement the ability to turn on intentional non-randomness for _specific people_, and begin embedding messages in the sequences of comics, or selecting the same two comics 28 times in a row on occasion. Heck, stick the referrer in the session and give everyone coming in from _that blog post_ wildly divergent randomness characteristics :-) reply mjburgess 20 hours agoparentprevThe term `random` is a relative one, X is random wrt to Y, iff P(X|Y) = P(X)Random data is highly patterned regardless. The choice of Y=everything-but-&#x2F;dev&#x2F;random is has no special status (ie., P(X|&#x2F;dev&#x2F;random) = 1).Better than `random` is set to draw from the long tail of lower-rank-by-view comics. Then Y = the-url &#x2F; user-preference &#x2F; ... reply bmeow_engineer 13 hours agoparentprevThis happens a lot in game development too. Many games have \"random\" elements that end up with lots of duplicates as the developer uses a typical random number generator. I&#x27;ve found in games I worked on to make it \"feel\" random you have to tweak the algorithm to reduce duplicates and make things more evenly distributed. reply hbn 20 hours agoprevI remember hearing Apple had to make a \"random-seeming to humans\" algorithm with the iPod&#x27;s shuffle feature as well for the same reason. Grabbing a truly random song every play doesn&#x27;t feel random to humans. What people really want with their song shuffle is something new they haven&#x27;t played in a while. reply pncnmnp 16 hours agoparentI don&#x27;t have many memories of experiencing this with my own iPod, but I recently came across this paper - \"Does Your iPod Really Play Favorites?\" (https:&#x2F;&#x2F;www.researchgate.net&#x2F;profile&#x2F;Jessica-Culhane&#x2F;publica...).In the paper, the authors examined evidence of nonrandom behavior and created several probability models for these events under the assumption of a random shuffle. Their conclusion was:> Much of the evidence of nonrandom behavior reported by Steven Levy and others does not hold up when the probability models of the events are determined. Our results show the probability models for a random shuffle in many cases do not match the intuition of users. In addition, our statistical tests show the long-term occurrences of these events are within expectations under the assumption of a random shuffle.I&#x27;m not sure if this was something Apple implemented after 2009. reply I_Am_Nous 19 hours agoparentprevI remember this, and I also remember reading anecdotes online about people listening on shuffle, hearing two songs from the same artist or album in a row, and getting superstitious about it like it was trying to \"warn them\" something bad was about to happen.So Apple had to take their generally true random algorithm and make it intentionally less random so it worked like people implicitly expected it to. Makes me wonder how many things we really are \"holding wrong\" because dev expectations didn&#x27;t line up with how people actually use something. reply ahoka 20 hours agoparentprevRandom is random, shuffle is shuffle. They are different things. reply KMag 17 hours agorootparentAnd a uniform random shuffle chooses any of the N! orderings with equal probability. One is looking at a single element as the output of the process, and another is looking at the entire list as the output of the process.Also, there are plenty of non-uniform random distributions. reply uxp8u61q 19 hours agorootparentprev\"Random\" doesn&#x27;t necessarily mean \"uniformly distributed random.\" Shuffling a deck of cards randomly is random, but you&#x27;re not going to get the same card twice in a row, or even the same card twice until you go through the whole deck. reply Karellen 15 hours agorootparentDo you re-shuffle after the deck is exhausted, or after every hand? It&#x27;s not excessively unusual to be dealt the same card twice in two consecutive hands. reply uxp8u61q 13 hours agorootparentWho said anything about hands? I&#x27;m trying to make an analogy between shuffling a deck and shuffling xkcd comics. I thought having a visual, physical analogue would perhaps help in seeing that randomness still exists in a shuffle. reply Karellen 11 hours agorootparentSorry, the point I was trying to make was \"shuffle\" could possibly mean \"re-shuffle after every track\" - so you could still get the same track twice in a row.(It was a bad way of stating it, that&#x27;s on me) reply uxp8u61q 11 hours agorootparentShuffling the whole playlist to choose a new song every time is no different than choosing uniformly from all songs every time. What would be the point? I can&#x27;t tell what you are getting at. replyRebelgecko 15 hours agoparentprevI think it&#x27;s gone now, but older versions of iTunes had a \"randomness\" slider that ranged from truly random to a biased randomness that \"felt\" more random by avoiding recently chosen songs&#x2F;albums reply littlethoughts 20 hours agoparentprev> What people really want with their song shuffle is something new they haven&#x27;t played in a while. Speak for yourself reply moffkalast 17 hours agorootparentI mean I&#x27;d agree with OP, shuffle should take all songs, put them in random order and play them start to finish without any of them repeating. If I wanted repeat then I&#x27;d turn on repeat. reply eschneider 18 hours agoparentprevPeople are pattern seeking, even in \"random\" data. reply uxp8u61q 19 hours agoparentprevGrabbing a new song with probabilities weights based on past outcomes is just as \"truly random\" as picking a new song with a uniform distribution on all songs every time. https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Stochastic_process reply defrost 21 hours agoprev* Then, I fed them to the NIST Statistical Test Suite.* I encourage you to play with the STS code.* It also segfaults all over the place, which is actually very disturbing considering that it’s technically part of the US government’s computer security project.Well, package that computes stats on number series to test variopus notions of randomness - it&#x27;s not as if pwning the STS will let you play a game of nuclear war.All the same, there&#x27;s an exercise for any budding numerical programmers, read up on the suite, build it, run it, static analyse it, valgrind it, and iron a few wrinkles out.https:&#x2F;&#x2F;csrc.nist.gov&#x2F;projects&#x2F;random-bit-generation&#x2F;documen...Got to be worth a humble brag in an application or twomake contacts in NIST. reply observer5 17 hours agoparentSegfaults are reported in section 10 of https:&#x2F;&#x2F;scholar.google.com&#x2F;scholar?cluster=189992958054266148The paper also reports in section 7 the state-of-the-art in statistical tests --- DIEHARD and NIST STS seem obsoleted by TESTU01. reply seanhunter 4 hours agoprevFeels like there are two things going on:1. Randomness is inherently counterintuitive and humans in general really struggle to comprehend its ramifications. Read “Fooled by Randomness” or a million other things about this.2. When a lot of people see something which offers a random sample they expect a random shuffle. In particular if you’re making any kind of playlist thing and you have a feature which does random samples not random shuffles people will hate your feature and you’ll feel superior because you’ll think they are wrong but actually you are the one who is wrong. You need to build a shuffle of some kind. Changing your sampling strategy to be “less random” thinking that it will coincide with peoples’ intuitions is making it even more wrong than before. reply Cyphase 20 hours agoprevUsing the formula in the article:- Out of 1500 comics (at the time of the article), 45 random selections gives you a 48.656% chance of a duplicate, and 46 gives you a 50.196% chance.- Out of 2873 comics (as of right now), 63 random selections gives you a 49.579% chance of a duplicate, and 64 gives you a 50.685% chance.2929 comics is the most from which randomly selecting 64 will have a greater than 50% chance of having duplicates (50.00854657587404%). reply dessimus 19 hours agoparentSeems like a variation on the birthday paradox. reply roywiggins 17 hours agorootparentThe difficulty of finding unseen comics as you keep pressing \"random\" is more like the coupon collector&#x27;s problem, but of course they&#x27;re related.https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Coupon_collector%27s_problem?w... reply jalada 20 hours agoprevReminds me of Spotify&#x27;s post about shuffling songs: https:&#x2F;&#x2F;engineering.atspotify.com&#x2F;2014&#x2F;02&#x2F;how-to-shuffle-son... reply GuB-42 19 hours agoparentI actually how people do purposefully non-random randomness more interesting. Like in this article.Video games are known to cheat a lot, usually in the player&#x27;s favor. The Tetris randomizer for instance is well documented. Early games drew pieces truly randomly, but now, the standard is to draw randomly from a bag of all 7 pieces until it is empty, then repeat, limiting flood and draught. Along the way, other algorithms have been used with the same purpose.But sometimes, even the numbers are fake, for example, a 95% success rate may be closer to 99% in reality because it matches more closely what players feel 95% should be like. reply saghm 18 hours agorootparentThe new Baldur&#x27;s Gate game has a setting called \"karmic dice\", where it apparently biases the dice rolls to not cause repeated outcomes as much (i.e. if you&#x27;re passing checks a lot, it will start to bias towards lower results, and if you&#x27;re failing checks a lot, it will start to bias towards higher results). They devs made the interesting decision to have that setting on by default, which I&#x27;m guessing is based on the experience they expect more players to want. Regardless of my own preference, I think it&#x27;s pretty cool they made that an explicit setting that players can choose to keep on or turn off. reply dylan604 18 hours agorootparentprevI was once tasked with creating a DVD game that was meant to randomly pick questions from its available pool. Learned lots of things about how unrandom random can be. On the lower end of DVD players, there was a stored list of values between 0 and maxInt that was randomized when created. Each call of the random function would just move the pointer to the next item in the list. This meant that it would essentially play the questions in the same order every time. I can&#x27;t remember the specifics if the list was reset when loading a disc or when the player was turned on.Turns out, the company wanting the game got scarred of some patent that invoked the word random, so we had to reprogram the thing essentially do the same as that player. We had multiple sequences of randomized questions, and the game pick one of the sequences to play back in order when started. reply slfnflctd 16 hours agorootparentThis reminds me of an mp3 CD player I had. I don&#x27;t remember if the feature was called shuffle or random, but it played the same sequence of tracks every time. I could only fully enjoy it once per CD. reply mark-r 15 hours agorootparentI had a CD player in my SUV that had the same problem. The only saving grace is that it could play mp3s from the CD, so I had mixes that had 100 songs on them. reply Semaphor 19 hours agorootparentprevI once wrote a small script (in C#) to pick a few tens out of a few 1000s. I got weird repeats. I switched to a cryptographically secure RNG, and the repeats were gone. It was probably pure chance, but I stopped using the normal random function ever since ;) reply GuB-42 17 hours agorootparentJust for curiosity sake, I looked at the standard RNG in C# and it is indeed flawed, but probably not enough to be seen unless you are doing formal tests.In [1] it says that numbers have a 0.5034 probability of being odd due to rounding errors in the algorithm that picks a number in a range, which is unacceptable for a simulation, but may actually be better than a real coin toss [2]. The raw RNG is also flawed but not that badly [3][1] https:&#x2F;&#x2F;fuglede.dk&#x2F;en&#x2F;blog&#x2F;bias-in-net-rng&#x2F;[2] https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;2310.04153[3] https:&#x2F;&#x2F;gist.github.com&#x2F;fuglede&#x2F;772402ecc3997ada82a03ce65361... reply Semaphor 17 hours agorootparentOkay, now you made me want actually look into that ;) I should be able to recreate the old code (it was years ago, but I still have the script) and make a comment if I end up actually finding statistical anomalies. reply Semaphor 14 hours agorootparentIt will have to stay a mystery, looking at distribution, both algorithms looked the same. reply physicles 18 hours agorootparentprevDo you still have your original code? Finding out if the weird repeats were real, and especially why, would make a super interesting blog post. reply Semaphor 17 hours agorootparentThe old code was var r = new Random() ;)I&#x27;m assuming I either hit an PRNG bug (after all, I encountered a compiler bug in university already), or more likely, that I simply imagined the issue or bad bad luck with the data. Never did a statistical analysis after all. replyi_love_limes 20 hours agoprevI ran into this too. I run a very silly slack bot for my friends, and it randomly cycles through pictures that we all have created. Initially it was completely random choice per invocation. Had to change it to a randomly sorted list that was then stored and iterated through until the list is depleted, then it&#x27;s re-randomised. For the same reason, complaints that actual random choice chose duplicate pictures too often reply KMag 17 hours agoparentNote that if your playlist is append-only, you can use format-preserving encryption and just store a seed, a counter, and the length of the list when you started, instead of storing the whole shuffled list. reply zepton 19 hours agoprevThere actually is a bias - you will never get comic 404 from the random button (see https:&#x2F;&#x2F;www.explainxkcd.com&#x2F;wiki&#x2F;index.php&#x2F;404:_Not_Found ) reply seqizz 17 hours agoprevRelated: https:&#x2F;&#x2F;www.tomasek.cz&#x2F;software&#x2F;debian-randomness&#x2F;img&#x2F;pmeo9h... reply amelius 17 hours agoprevThe real question is how uniform the randomness is. reply bonyt 17 hours agoprevI was able to recreate this, eventually. I deleted my earlier comment where I failed to reproduce it - my method of extracting a bitstream from the list of numbers was flawed.First, I greedily requested 10,000 random numbers from xkcd with a script. These numbers are here so nobody need re-commit my deed: https:&#x2F;&#x2F;gist.github.com&#x2F;tonyb486&#x2F;0da38e7575071f241551d14101a...Then, I filtered out all numbers 2048 and above so that I just had 11 bits of entropy from each number from [0,2048). I converted that to a stream of binary in ASCII, 11 bits per random number.I fed that list of 78100 bits into STS, as 100 streams of 780 bits. It segfaulted, but it had already written out some results: ------------------------------------------------------------------------------ RESULTS FOR THE UNIFORMITY OF P-VALUES AND THE PROPORTION OF PASSING SEQUENCES ------------------------------------------------------------------------------ generator is------------------------------------------------------------------------------ C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 P-VALUE PROPORTION STATISTICAL TEST ------------------------------------------------------------------------------ 13 15 7 9 7 6 9 11 17 6 0.137282 97&#x2F;100 Frequency 13 5 10 12 11 7 4 10 12 16 0.191687 98&#x2F;100 BlockFrequency 13 11 14 9 2 9 10 7 13 12 0.249284 97&#x2F;100 CumulativeSums 11 10 12 11 1 10 9 15 8 13 0.181557 98&#x2F;100 CumulativeSums 6 6 8 18 9 8 11 14 7 13 0.122325 99&#x2F;100 Runs 16 7 6 12 13 9 7 14 9 7 0.275709 97&#x2F;100 LongestRun 10 13 12 0 23 0 18 0 24 0 0.000000 * 99&#x2F;100 FFTDelightful. reply flir 20 hours agoprev> a random stream of bits should have almost as many ones as zerosalmost?? reply xvedejas 20 hours agoparentI think this is the correct way to phrase it. Just because the probabilities of each are both 50% doesn&#x27;t mean it&#x27;s more likely than not to get the same number of ones and zeros. It would just mean you&#x27;re equally likely to get a few more ones as you are to get a few more zeros. But the counts are unlikely to be very far apart. reply 082349872349872 20 hours agorootparentBut in absolute (not relative terms) the counts will tend to diverge over time. reply eru 20 hours agorootparentYes. You expect the absolute difference in numbers of 0s vs 1s to grow roughly with the square-root of the total number of digits produced. reply philipswood 20 hours agoparentprevIn the limit, yes.But for the first few bits maybe \"almost\". reply alex_smart 17 hours agoparentprevWith n random bits, you will likely have approximately \\sqrt{n} more ones than zeros (or vice versa). reply thisisauserid 20 hours agoparentprevYou aren&#x27;t suggesting that something random should be predictable, right? reply 0xFF0123 20 hours agorootparent\"Almost\" suggests it is predictably fewer reply KTibow 20 hours agorootparent\"Around\" might be better reply AlecSchueler 20 hours agorootparentprevIt suggests roughly the same amount, could be higher or lower. reply niles 20 hours agorootparentAround would do that more effectively. Almost is more similar to nearly, and I agree commonly used for lower. reply flir 20 hours agorootparentprevI read \"almost as many\" as \"not quite as many\". In other words, fewer.My mental model is that an unbiased random stream of 1&#x27;s and 0&#x27;s should converge on 50% 1&#x27;s and 50% 0&#x27;s over time, not 49% 1&#x27;s and 51% 0&#x27;s.Looks like it&#x27;s a language ambiguity thing I&#x27;m not quite getting. reply ruune 19 hours agorootparentOver time, it should be almost 50&#x2F;50, yeah. What if you got 10000001 random numbers? There&#x27;s no way it&#x27;s exactly 50&#x2F;50 with an uneven amount. It&#x27;s almost 50&#x2F;50 reply madeofpalk 20 hours agorootparentprevTo converge on 50% implies 49%\\51% prior. Almost even. reply Rebelgecko 15 hours agoparentprevIf a random streams length is odd, they&#x27;ll never be the exact same. reply bbarnett 20 hours agoparentprevYes, almost. They will approach equal as the count approaches infinity.So if ypu ever see a random pick equate to 50&#x2F;50, the end of the universe is upon us. reply eru 20 hours agorootparentThe ratio of occurrences of 0s and 1s will go to one in the limit. But the absolute difference of occurrences will diverge. (It grows roughly like the square-root of the number of digits.) reply AlexAltea 20 hours agorootparentprevNit, their ratio (bits set&#x2F;unset) will approach 1 as the count approaches infinity, but the values themselves will not approach equal. https:&#x2F;&#x2F;gist.github.com&#x2F;AlexAltea&#x2F;3aa96efc41f59e80631c346908... reply wkjagt 16 hours agoprevMaybe they use their own random number generator. https:&#x2F;&#x2F;xkcd.com&#x2F;221&#x2F; reply jmclnx 19 hours agoprevFor laughs a while ago, I wrote a program to read &#x2F;dev&#x2F;urandom and print integers. It can execute between a range and let it print out 200,000 iterations. This is some highlights from executing it using 1 -- 2873 using `sortuniq -c`:2873 unique numbers printed, so I got all of them for xkcd as of Dec 28, 2023.The lowest occurrence of a number 44 unique entries for 332 and 1829.The largest occurrence of a number was 99 unique entries for 2007 and 2230.Average occurrence was 69 entries, 134 unique numbers occurred 69 times.What does this mean to me ? Nothing, but maybe to a mathematician it will mean something :) reply mysterydip 20 hours agoprevSometimes the random button should just return 4 multiple times in a row, as a reference to https:&#x2F;&#x2F;xkcd.com&#x2F;221&#x2F; reply DarkmSparks 19 hours agoprev [–] Hmmm, I might check how often an m twister gives duplicates. that was always my complaint with xkcds random, getting the same couple of pages repetitively. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The author of this blog post investigates the randomness of the \"random\" button on the xkcd website using statistical tests.",
      "The random number generator used by xkcd is confirmed to be unbiased and unpredictable.",
      "The perception of bias may be due to human tendency to see patterns, despite the randomness of the generator."
    ],
    "commentSummary": [
      "Discussions revolve around randomness in various contexts like xkcd webcomic, Spotify, and video games like Civilization, questioning biased shuffle algorithms and repetitive songs in music streaming platforms.",
      "Users express the need for a more diverse listening experience and offer suggestions to improve shuffle algorithms.",
      "The concept of randomness is explored, with users questioning the assumption of true randomness and highlighting the complexity and challenges in implementing it effectively in different systems."
    ],
    "points": 194,
    "commentCount": 123,
    "retryCount": 0,
    "time": 1703765207
  },
  {
    "id": 38797908,
    "title": "Developers' refusal to support user requests causes frustration and highlights need for better guidance",
    "originLink": "https://bvisness.me/you-cant/",
    "originBody": "“You can’t do that because I hate you.” July 26, 2023 This is the truest tweet ever written: If you don't enjoy programming, don't worry, it is not your fault. Thousands of people around the world work hard day and night to make programming as miserable for you as possible. It's not suppose to be like that, really. 🫂 @tsoding (original) Now, you might think this isn’t true. Programmers aren’t really making programming miserable on purpose, right? Wrong. Sometimes software is missing a feature you want. That’s understandable. But sometimes the devs know you want that feature, get your hopes up, and then let you down. Exiting Python Let’s start with Python. Every Python user has seen this message: >>> exit Use exit() or Ctrl-D (i.e. EOF) to exit There are two reasonable things that Python could do here: Print . Exit. But it does neither. It acknowledges your intent and refuses it. It’s saying “I know exactly what you want to do, but you’re doing it wrong. Do it right next time.” I understand thatmight be confusing for newcomers, and exiting might be too destructive. But denying you the normal REPL behavior and denying you the ability to exit is just insulting. Formatting Rust files I will never understand why people like Rust’s tooling so much. Every time I have to touch it, it’s like the devs are mocking me. Today I had a Rust file that I wanted to autoformat. I wanted to tidy things up and wrap comments to 80 characters. So I ran cargo fmt. Nothing. I tried cargo fmt -v. It wasn’t seeing my file, despite it absolutely being part of the project. It even found the lib.rs in my crate but not this particular source file. I have no idea why, but I figured no worries, I can just do cargo fmt src/myfile.rs. But you can’t. cargo fmt doesn’t have an option for that. How is even possible for your format command to not let you format an individual file? So I went to Google. I found a GitHub issue where one of the devs said “You’re supposed to use rustfmt, not cargo fmt. Obviously these are very different tools and cargo fmt is not intended to be used in that way.” Problem is, I had never even heard of rustfmt. There is no indication that cargo fmt is merely a wrapper around rustfmt, much less that rustfmt would have extra options that the high-level wrapper does not have. Responses like this from devs are just maddening. Their tooling gives no indication of the “correct” thing to do, and rather than change their tooling to help users out, they act as if users are already supposed to know the “correct” thing. But fine. I can use rustfmt. So I ran rustfmt src/myfile.rs. It worked, but didn’t wrap comments. Ok fine, maybe it just doesn’t do that by default. So I went to Google again, and I found the official rustfmt documentation and the wrap_comments property. Great! I created a .rustfmt.toml file and added wrap_comments = true. Time to give it another go: % rustfmt crates/wast/src/core/expr.rs Warning: can't set `wrap_comments = true`, unstable features are only available in nightly channel. “Unstable features”???? How is wrapping text an unstable feature in a code formatter? What would it possibly take to “stabilize” such a feature? It is a completely trivial feature! But fine. I had nightly Rust installed, and I saw that the docs say you can include unstable_features = true to opt into unstable features. So I updated the config file and tried again: % rustfmt crates/wast/src/core/expr.rs Warning: can't set `wrap_comments = true`, unstable features are only available in nightly channel. Warning: can't set `unstable_features = true`, unstable features are only available in nightly channel. At this point I was just hopping mad. It knew that I wanted to wrap comments. But it refused, because this was “unstable”. It knew that I wanted to opt into experimental features, but refused again. It would literally have been better if they had not shipped this wrap_comments feature at all. Instead they just keep dangling it in front of my face and snatching it away as soon as I try to use it. Because they hate me. Conflicts when vendoring Rust dependencies I’m not done with Rust just yet. I recently tried updating one of my cargo dependencies (wast) to use my own fork for testing. Running cargo vendor after updating suddenly gave me this error: error: failed to sync Caused by: found duplicate version of package wasm-encoder v0.31.0' vendored from two sources: source 1: registry 'crates-io' source 2: https://github.com/bvisness/wasm-tools.git?rev=128f3a4#128f3a47 0:25.74 E Cargo vendor failed. This was…weird. Why would there be a conflict? I just changed one dependency to my fork, and some other package started complaining. So I Googled it. I found a GitHub issue that described the same problem, and someone said that there was a --no-merge-sources flag that fixed the issue. Sounded good, so I gave it a try: error: the crates.io 'cargo vendor' command has now been merged into Cargo itself and does not support the flag '--no-merge-sources' currently; to continue using the flag you can execute 'cargo-vendor vendor ...' and if you would like to see this flag supported in Cargo itself please feel free to file an issue at https://github.com/rust-lang/cargo/issues/new I was stunned. They deprecated a tool, deleted a flag, and kept documentation for the flag that just says “yeah, we got rid of it, make a GitHub issue if you actually wanted that feature :)” But ok…they gave me a workaround. So I tried with cargo-vendor. And it absolutely exploded. Not only did cargo-vendor --no-merge-sources fail with a ton of errors, but it dumped a bunch of extra files into my project that were clearly wrong somehow. Evidently you’re not actually supposed to use cargo-vendor any more, period. I found another GitHub comment that corroborated this. So let’s summarize what happened here: The tooling gave me an opaque error with no context to help me understand. The flag that could fix it was removed by the devs and replaced with a passive-aggressive message and a workaround. The workaround didn’t work and blew up my project even more. So where was this supposed to leave me? What was I supposed to use? Yet again, the devs understood my intent (they recognized the old flag!) but they refused to actually do what I wanted to do. Nor did they give me any guidance on how to actually solve my problem. It turned out that there was another actual root cause for my problem, and fixing that was arguably more reasonable than using --no-merge-sources. But they provided nothing that would actually help me understand the problem. And the features they provided were literally worse than nothing - they extended me a helping hand, and then snatched it away. Because they hate me. In conclusion In all three of these situations, the devs knew what I wanted to do, but refused to let me do it. This feels TERRIBLE as a user. It feels insulting and condescending. It feels like it’s deliberately withholding useful features, like it doesn’t trust me to use them correctly. It sucks. And as a dev, it just makes you look lazy. People will understand if you don’t support a feature - maybe it was replaced by something better, or maybe it’s easier for the user to fix their root problem. But if you “support” the feature by telling the user “no”, then why did you even bother “supporting” it? So don’t do that. Either support the feature, guide the user toward a better solution, or do nothing.",
    "commentLink": "https://news.ycombinator.com/item?id=38797908",
    "commentBody": "You can&#x27;t do that because I hate youHacker NewspastloginYou can&#x27;t do that because I hate you (bvisness.me) 186 points by nivethan 14 hours ago| hidepastfavorite156 comments avalys 9 hours agoI have a similar pet peeve in software, what I refer to as ‘Don’t Suck’ Buttons.A ‘Don’t Suck’ Button is a setting, turned off by default and usually hidden in a corner of the UI or configuration file, which fixes a common issue that new users experience, and&#x2F;or turns on the behavior that everyone wants from the product in the first place.The best examples of ‘Don’t Suck’ Buttons involve settings with no obvious disadvantage to turning them on. They’re just turned off by default and the software makes you go through extra effort to tell it “No, I don’t want you to suck.”Usually these originated from some kind of automation, new protocol or new feature that started out as experimental and was locked behind a setting, then became universally relied upon but somehow never enabled by default.I used to have a list of examples of these. One that comes to mind from my TV: “Allow HDMI Devices to Control this TV”. If you have an Apple TV or something, it won’t change the volume or be able to turn the TV on or off automatically unless you know enough to go into settings and tell the TV “Don’t Suck”. reply arp242 6 hours agoparent> then became universally relied upon but somehow never enabled by default.Often it&#x27;s not that universal; especially for older software there&#x27;s a lot of variety in how people use it, and changing defaults can be hugely confusing for existing users. A lot of these (alleged) \"don&#x27;t suck\" buttons are probably more subjective than you might think.The HDMI thing may be a security-related, or maybe there are is another reason. I think it&#x27;s important to know why something behaves as it does, without too quickly assuming there&#x27;s no good reason for it. That&#x27;s also my criticism of this submission by the way: it makes little to not effort to understand why things are as they are. reply chii 4 hours agorootparentThis is the chesterton&#x27;s fence. Don&#x27;t remove the barrier until you understood why the barrier was there first. reply johnfn 9 hours agoparentprevOne common reason these exist is because a lot of people got used to the state where the \"Dont Suck\" button didn&#x27;t exist, and for those users changing their workflow would be even more annoying. I do agree it&#x27;s not a great state of affairs, though. reply AceJohnny2 8 hours agoparentprevEmacs is full of these.In its defense, Emacs predates most modern UI paradigms (including, y&#x27;know, Ctl-C&#x2F;V for copy-paste, or calling things \"windows\" vs \"frames\"), and is very conservative about updating defaults due to inertia. reply Forge36 8 hours agorootparentDo you have a list of favorites? reply AceJohnny2 7 hours agorootparentOn Mac, assign traditional keybinds to Command&#x2F;⌘ shortcuts (⌘-C&#x2F;V for copy-paste, -S for save, etc).Display the current column number in the modeline with (setq column-number-mode t)Delete the selected area when overwriting by enabling (setq delete-selection-mode t)Save sessions (all open buffers&#x2F;files) automatically on quit with (setq desktop-save-mode t)Display line numbers in the left gutter with (setq global-linum-mode t)Wrap lines (with a convenient icon in the gutter to indicate line continuation) with (setq global-visual-line-mode t). Bonus: linum-mode compatible!Skip that startup screen with (setq inhibit-startup-screen t)Remove the limited and redundant icon toolbar with (setq tool-bar-mode nil)Make emacs automatically refresh buffers whose underlying file has changed (and has no local unsaved modifications) with (setq global-auto-revert-mode t)All of the above variables can also be customized through Emacs&#x27; excellent Customize, which is better than individually doing each (setq ...) I wrote above.And these are just from a quick skim of my .emacs file... Decades ago, when a college friend espoused the merits of Emacs, I didn&#x27;t get it because my first experience with a vanilla setup was so... limited. This is also why people will laud more \"batteries-included\" distributions like Spacemacs or Doom Emacs. reply monsieurbanana 1 hour agorootparentI agree that you need to customize Emacs rather heavily before it can be used as a \"modern\" editor.I&#x27;m not a fan of most of your changes though, which highlights how hard it is to have defaults that please everybody in something as complex as Emacs. reply pvaldes 1 hour agorootparentprevthe desktop-save-mode option is gold... thanks reply pnathan 5 hours agorootparentprevEh. I think that&#x27;s just of how emacs IS and the tutorials I remember all dealt with it.I also don&#x27;t think they were jackasses by default... reply LordShredda 8 hours agorootparentprevEmacs is unbelievably full of them, but at the very least if it&#x27;s missing a switch you can program it yourself easily (and fix any bugs yourself too). Not sure if that&#x27;s a pro or a con, but the option is there. reply AceJohnny2 7 hours agorootparent> you can program it yourself easilyI consider myself a seasoned programmer, but after a decade I continue to fail to do any significant customization (other than a tidy .emacs leveraging use-package (since before it was cool^H^H integrated by default)).Lisp&#x27;s syntax is easy, but Emacs&#x27; API surface and concepts are bewildering, especially due to its aforementioned mismatch with modern terms. reply throwaway143829 7 hours agorootparentI found it somewhat hilarious that you wrote a prose sentence with nested parentheses then began the next sentence with \"Lisp&#x27;s syntax is easy\" reply AceJohnny2 6 hours agorootparent(: ;) replythomastjeffery 6 hours agoparentprevThere&#x27;s a deeper problem at play here: assumptions.Any time an assumption is made, it&#x27;s guaranteed to be wrong for someone. In your example, there are two really positive factors in play:1. The user can change the setting.2. It&#x27;s pretty clear what the default should be.Most of the time, we don&#x27;t get either of these. reply initplus 6 hours agoparentprevAnother TV related “don’t suck button: Nvidia defaulting to limited colorspace on HDMI outputs. Persists to this day.iPhone Haptic Touch duration not set to “Fast” by default. reply MetaMonk 8 hours agoparentprevAt In-n-Out, you have to say a magic chant to have them make the food taste better (and even then it still tastes bad). reply ido 3 hours agorootparentWhat’s the magic chant? reply Leo_Germond 53 minutes agorootparentWild fries or something, and a triple burger, there&#x27;s a hidden menu that is double the calories. reply amluto 7 hours agoparentprev> “Allow HDMI Devices to Control this TV”It would IMO be nice to have a default-off option to disable CEC on a specific port. Or to disable certain CEC features. reply lucasban 6 hours agorootparentFor example: If I leave my TV set to the input that my PS5 is on, turning the TV on will turn on the PS5. Because the PS5 takes a few seconds to turn on, if I try to switch to another app or input, the PS5 will switch the input back when it finishes waking up. Ideally, I’d allow CEC for all functions except turning the PS5 on. If I want it on, I’ll use the controller or media remote. reply thedanbob 6 hours agorootparentprevI had to disable CEC because my Chromecast would randomly turn on the TV in the middle of the night. Disabling on a single port would be great. reply MonaroVXR 3 hours agoparentprevLiterally my acting stupid and turning this setting on...I turn the ps5 off and the TV off and the PS4 Pro starts and turns on my tv reply naikrovek 7 hours agoparentprevThese things are turned off because product owners and project managers are almost never power users of the software they are tasked with steering. They seem to believe that all users are of their own skill level at maximum, because who could possibly know more? “They aren’t the product owner! I am! Everyone who doesn’t use this like I do is using it wrong!”And this kind of thing is how “new” outlook gets written, which is an absolute shitshow compared to the legacy outlook client. reply jgilias 13 hours agoprevSuch a weird rant. Yes, some tools do some things, but not others. Making tools do everything for everyone just bloats them to unmaintainable messes. And it’s a special kind of entitlement to believe that the way _I_ imagine things must be working is the only possible correct interpretation.Reality is messy, there are trade-offs, and a lot of smart people think very hard about what the correct trade-offs should be given a particular situation.And, the last pet peeve of mine. If I got a dime every time someone says ‘why don’t you just’ without even beginning to start to realize the depth of an issue, I’d be a very rich man. That’s about this quote here:> What would it possibly take to “stabilize” such a feature? It is a completely trivial feature! reply gizmo 10 hours agoparentNot having a feature is fine. Kind of having a feature but hiding it behind obnoxious gatekeeping is not fine. Features that are buggy or inexplicably complex is not fine.Some open source projects get this right, and others don&#x27;t. Some projects don&#x27;t care about wasting the user&#x27;s time. Or they berate the user for wanting to do something in the &#x27;wrong&#x27; way. Or they break things that worked just fine in the pursuit of some abstract purity.It&#x27;s not about complexity or technology at all. It&#x27;s an attitude problem. reply bryanlarsen 9 hours agorootparentI really appreciate the way Rust feature gates unstable features. It&#x27;s easy to opt into nightly if you need them, it&#x27;s nice that new features are iterated until they are correct and it is nice to rely on stable being stable. reply gizmo 9 hours agorootparentYou can just prefix features with --experimental so people can use their own judgement. Software should warn users when they do something that might harm them. But it shouldn&#x27;t patronizingly refuse to run.\"I&#x27;m sorry bryanlarsen, I&#x27;m afraid I can&#x27;t do that.\" - 2023 a rustfmt Odyssey. reply anonymousab 4 hours agorootparentIs the code actually there on non-nightly builds or is it just a simple text response for the experimental flag?For the former then sure, it should just let you do the thing and simply fail loudly if it fails. For the latter, there&#x27;s not much they can really do without switching you over to nightly rust. reply throwaway14356 10 hours agoparentprevWriting code should be part of the OS as fundamentally as web browsing. You should get a cursor to write code, have a tree worth of files and have a button to publish the application as a single clickable program.Anything else is a tribute to the rant. reply lacrimacida 8 hours agorootparentJust like there was only one OS out there…But I could see the the madness anytime I squint my eyes, a large part of computing is just this.It’s a miracle that it works at all.. reply knappe 10 hours agoparentprev> Reality is messy, there are trade-offs, and a lot of smart people think very hard about what the correct trade-offs should be given a particular situation.This is great and all, but misses the point. If you have made a decision to cut a feature then at least explain why. This then circumvents the &#x27;why don’t you just&#x27; mentality. That is the root of the issue in the examples provided. It would be trivial to drop a warning about the comments not being formatted and include a link to the issue. Then there is no question of &#x27;why&#x27; and thus you&#x27;re now heading off the &#x27;It is a completely trivial feature!&#x27; attitude, and blog posts complaining about it. Communicate clearly. reply korijn 10 hours agorootparentThe very first example in the article discredits efforts to add clear communication. reply xdennis 6 hours agoparentprevI agree with the rant, but not the examples.It pisses me off when programmers add \"features\" which forces users to deal with them.For example, pipenv always prints a message when you activate an environment (I don&#x27;t know if it&#x27;s still the case because I don&#x27;t use it anymore). I had to migrate a cronjob which ran a Python script and sent an error email if anything got printed to stderr.This is a pretty standard Unix thing to do, but pipenv decided to always print to stderr that the environment got activated, even though it&#x27;s not an error. And there is of course no way to get it to shut up. I had to use some Bash hackery to filter that out.Ryan Dahl&#x27;s 2011 rant on this is quite relevant:> Those of you who still find it enjoyable to learn the details of, say, a programming language - being able to happily recite off if NaN equals or does not equal null - you just don’t yet understand how utterly fucked the whole thing is. If you think it would be cute to align all of the equals signs in your code, if you spend time configuring your window manager or editor, if put unicode check marks in your test runner, if you add unnecessary hierarchies in your code directories, if you are doing anything beyond just solving the problem - you don’t understand how fucked the whole thing is. No one gives a fuck about the glib object model. reply starkparker 10 hours agoprevI empathize with a lot of this. With experience and knowledge it&#x27;s easy to recognize why and how these things happen, to point them out, and to call the author wrong. But I also remember being new to tools and not understanding how arbitrary they seem to be, in that they can understand what I want to do with uncanny precision but simultaneously refuse to do it. Things like exiting vim are the gold standard of this.[1]But:> Either support the feature, guide the user toward a better solution, or do nothing.The first two examples _explicitly_ guide the user toward better solutions. That&#x27;s much more than many tools do. If the Python repl behavior isn&#x27;t \"guide the user toward a better solution\" in both letter and spirit, I&#x27;d love to know why.There are much lower-hanging fruit than these examples, which makes a good point harder to agree with.1: One of the first-page Google results for me on quitting vim is somehow this HN comment thread from 2017, in which the Python repl behavior catches strays with almost identical arguments as this article. https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=14403297 reply prepend 10 hours agoprev> But it does neither. It acknowledges your intent and refuses it. It’s saying “I know exactly what you want to do, but you’re doing it wrong. Do it right next time.”Programming languages follow rules and programmers should follow the rules. Just because mistake is common doesn’t mean the language should incorporate it into its functioning. That makes inconsistent behavior and is a pain in the long run because instead of learning and following logic, programmers have to guess what’s a common enough error that the language compensates. And over time the language drifts and is hard to work with.It seems easier to me to just suck it up and learn the right way to do things in a language. reply makeitdouble 8 hours agoparentI think it&#x27;s more a communication problem than a question of rules or behavior (which is why I also disagree with the article&#x27;s take)People react strongly to \"I&#x27;m Sorry Dave, I&#x27;m Afraid I Can&#x27;t Do That\" types of messages, and the exit command one is pretty close to that. If instead they went for a more question like \"unrecognized command. Did you mean &#x27;exit()&#x27; ?\" type of prompt users would react in a milder way.In particular, choosing an imperative tone in help messages is probably not optimal. reply 8note 9 hours agoparentprevI think it&#x27;s quite reminiscent of car infrastructure, in that you can know all the rules, but primarily you&#x27;re interacting with other people who have varying knowledge and skill with the rules.The dutch make a strong case for the rules to follow what the people do naturally, and using design to make the correct thing the easiest one, rather than presenting a stiff ruleset and expecting people to contort themselves around it.I don&#x27;t know what a dutch programming language looks like, but i think it&#x27;d be better than what we&#x27;ve got now in terms of all readers and writers getting the same understanding of the same code reply throwaway81523 9 hours agorootparent> I don&#x27;t know what a dutch programming language looks likePython? Heh. (Not Pascal: Wirth is Swiss). And of course, Dijkstra was involved with Algol 60. reply jmopp 2 hours agorootparentprevFrom the Zen of Python:There should be one-- and preferably only one --obvious way to do it.Although that way may not be obvious at first unless you&#x27;re Dutch. reply wvenable 9 hours agoparentprevWhat&#x27;s weird is that there is a special exception for this -- it&#x27;s literally not following it&#x27;s own rules to tell you that you&#x27;re not following the rules!! reply prepend 9 hours agorootparentI think the exception follows the logic of giving tips and hints to make fixing it easier. So the intent is to create correct behavior, not enable incorrect behavior.This follows its internal rules. reply williamtrask 10 hours agoparentprev> “Just because mistake is common”A good example of why having a language that is squishy to common errors is valuable. I still understood your point even though it’s grammar wouldn’t compile. reply prepend 9 hours agorootparentHumans aren’t programming languages. So programming languages don’t need to do everything humans do.It’s ok for things to be different.It’s cool that I understood what you meant when you said “it’s grammar wouldn’t compile” but I would definitely expect a compiler to barf unless you entered “its grammar.” reply shpx 9 hours agorootparentProgrammers just haven&#x27;t been able to make computers as good at language as humans are at language because they&#x27;re not good enough at their jobs. There&#x27;s no inherent reason that programming language statements need to perfectly follow regular grammars and have exactly defined vocabularies (functions) that compile to ASTs, etc. that&#x27;s just the highest level of language technology we&#x27;ve invented. It has essentially no error recovery mechanisms because it&#x27;s hard&#x2F;tedious and error is hard to model using logic.Being frustrated that this is the case is expressing an underserved need in the market. You&#x27;re aware of the limitations and have grown to be okay with them because otherwise you&#x27;d probably hate programming, but that doesn&#x27;t mean we should all always be okay with them forever. reply Arnavion 12 hours agoprev>It wasn’t seeing my file, despite it absolutely being part of the project. It even found the lib.rs in my crate but not this particular source file. I have no idea why,Because it&#x27;s not in fact part of their project, despite their assertion that it is.>But you can’t. cargo fmt doesn’t have an option for that. How is even possible for your format command to not let you format an individual file?Because cargo is a tool for working with projects, not with individual source files.>Problem is, I had never even heard of rustfmt.Putting \"rust how to format a file\" into a search engine returns rustfmt in the top results. But in any case, the problem they needed to fix is to make that file a part of their project so that `cargo fmt` will format it, not work around that by running rustfmt manually. But alas they&#x27;ve convinced themselves that&#x27;s not the problem.>At this point I was just hopping mad. It knew that I wanted to wrap comments. But it refused, because this was “unstable”. It knew that I wanted to opt into experimental features, but refused again.Whatever method they used to install nightly, they&#x27;re not using it here. The error is coming from the non-nightly rustfmt that they were using originally.>It would literally have been better if they had not shipped this wrap_comments feature at all. Instead they just keep dangling it in front of my face and snatching it away as soon as I try to use it. Because they hate me.I&#x27;d be amused at this trolling if I didn&#x27;t know the author is completely serious. reply bvisness 10 hours agoparentSome of us just wander into the Rust part of the codebase every so often for our work.I cd’d into the folder with the cargo.toml, ran cargo fmt, and nothing happened. I dunno what else to tell you. Sometimes things just aren’t set up the “right way”, and yet we still have to do our jobs. reply remexre 9 hours agorootparentDoes cargo test run unit tests in the file you&#x27;re expecting to be formatted that isn&#x27;t? reply mrblampo 13 hours agoprevFirst example seems odd? The author acknowledges that the two proposed alternatives (printing \"\" or actually exiting) aren&#x27;t great. The fact that the Python REPL provides a helpful hint seems like extra effort to make your life easier. This is especially notable given that in the next example, the author&#x27;s complaint is about a command _not_ providing special guidance about the thing the user is probably trying to do. reply dale_glass 13 hours agoparentI&#x27;d have done both the hint and the actual result. Like this: >>> print>>> exitHint: Use exit() or Ctrl-D (i.e. EOF) to exit >>>This way, it does do the thing you literally asked for, but also does help a newbie out. reply bvisness 10 hours agorootparentYes, I completely agree. If you want to teach the user the rules, then you follow the rules. The problem with the Python example is that they DID special-case it, but in an unhelpful way. reply dmurray 11 hours agorootparentprevIt should print the first to stdout and the second to stderr. That&#x27;s completely consistent with how stdout and stderr are usually used.The regular Python REPL doesn&#x27;t distinguish between stdout and stderr (perhaps it should!), but you can embed it in things like Jupyter notebooks that do. reply gruez 11 hours agorootparent> It should print the first to stdout and the second to stderr. That&#x27;s completely consistent with how stdout and stderr are usually used.That makes sense from a unix tool perspective, but not from a python repl perspective. The repl&#x27;s behavior is to print the result from the last executed statement. For the exit function, the __repr__ method was overwriten to print the message. That way when you type in \"exit\", the last value would be exit (the function), and the overwritten __repr__ method causes the help message to be printed. There&#x27;s no way to have it print to both without adding in some repl specific hacks. >>> exit Use exit() or Ctrl-Z plus Return to exit >>> exit.__repr__() &#x27;Use exit() or Ctrl-Z plus Return to exit&#x27; reply dmurray 11 hours agorootparentHow about def __repr__(self): import warnings warnings.warn(\"Use exit() or Ctrl-Z plus Return to exit\") return super().repr() reply edflsafoiewq 10 hours agorootparentWhat if you aren&#x27;t in the REPL? Using __repr__ at all seems like an abstraction violation. It should be the REPL&#x27;s job to layer on special casing for exit. reply amluto 7 hours agorootparentThe actual behavior is indeed a bit ridiculous: >>> print(&#x27;%r&#x27; % str)>>> def whatisit(x): ... print(&#x27;It is %r&#x27; % x) ... >>> whatisit(min) It is>>> whatisit(exit) It is Use exit() or Ctrl-D (i.e. EOF) to exitExcuse me?IMO if the REPL wanted a friendly feature like this, it should be a generic REPL feature, not a hack applied to the function exit. reply dale_glass 31 minutes agorootparentAlso a bit funny: >>> def get_function(): ... return exit ... >>> a = get_function() >>> a Use exit() or Ctrl-D (i.e. EOF) to exit reply dmurray 10 hours agorootparentprevYou could use the same pattern as DeprecationWarning. It&#x27;s suppressed by default and test runners like pytest enable it. A new ReplWarning could be enabled by interactive tools only.I think I agree though: what you really want to special case is the situation where the user types precisely &#x27;exit&#x27; at a REPL prompt, and that hack needs to exist further up the stack than in the implementation of __repr__. replyssgodderidge 13 hours agorootparentprev> does help a newbie out… or a long-time dev that switches languages fairly often :) reply IshKebab 10 hours agorootparentprevBut really it should just exit. There&#x27;s really no reason why it shouldn&#x27;t.I think telnet does something stupid along the same lines \"I know you want to quit but please ask address me as Sir first\". reply AVincentInSpace 6 hours agorootparentThere would be two ways to implement that, neither of which are particularly good. You could either have the exit function call itself from its __repr__ method, which an abstraction violation so egregious it introduces security vulnerabilities (imagine a logger printing repr(thing) to stderr, and someone sneaking the exit function in there for it to print), or you could special case it by making exit a reserved word, which flies in the face of the Python 3 ethos which changed print from a reserved word to a function and breaks a lot of established code.Programming languages have rules that the programmer is expected to learn. Part of being a programmer is foregoing a certain amount of user friendliness in favor of an environment that is more powerful so that we can actually get things done. Programmers are paid to memorize and follow these rules so that the end user does not have to learn them. reply pluc 13 hours agoparentprevYeah. \"I know it&#x27;s not right, but it&#x27;s not totally wrong and probably better than not doing anything\" actions as maddening as the behaviour he describes. A world where that&#x27;s the standard would be chaos.When you work with _precise_ systems, they sometime take _precise_ input to work. That&#x27;s kinda just part of the job. reply phs318u 11 hours agorootparentExcept in the case of the &#x27;exit&#x27; clearly this is accepting and parsing imprecise input in order to guide the user. If the code wasn&#x27;t looking for &#x27;exit&#x27; in order to correct the user (to use &#x27;exit()&#x27;), it would just spit out some other error for &#x27;I don&#x27;t know what you&#x27;re talking about&#x27;. Instead, they actually detect the intent by specifically coding for it... and then ignore it anyway. That&#x27;s bloody minded. reply andrewaylett 11 hours agorootparentExcept they didn&#x27;t -- the result of a statement is turned into a string, and the string is printed. There are standard ways of turning objects into strings, and the `__repr__` function on the `exit` object returns that string. If you call that object then it raises an exception that triggers a REPL to cleanly quit.The code is here: https:&#x2F;&#x2F;github.com&#x2F;python&#x2F;cpython&#x2F;blob&#x2F;3.12&#x2F;Lib&#x2F;_sitebuiltin... reply saulpw 7 hours agorootparentHow about making `exit.__repr__` raise a CleanExit exception that gets caught in the outer REPL and then exits? reply edflsafoiewq 11 hours agorootparentprevIf it actually exited, you might incorrectly conclude that exit would work the same way in a script. reply gruez 11 hours agorootparentprevHow do you feel about java&#x2F;c++ compiler that give hints like \"missing semicolon\"? Clearly it knows what&#x27;s wrong. Why not automagically fix that for you[1]?https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;JavaScript&#x2F;Refe... reply akoboldfrying 10 hours agorootparentJavaScript automatic semicolon insertion does a great job most of the time, but still leads to bafflement when code like const b = 1 [1, 2, 3].forEach(console.log)(from your linked page) does the wrong thing, because both forms (with and without a semicolon) are syntactically valid. I would much rather just always use semicolons (or, like Python, never use them) than have to memorise the 5% of oddball cases where I need to add them manually to resolve ambiguity. reply ryandrake 8 hours agorootparentprevI&#x27;d actually love that feature!We have AI now that can write the entire code for you. Surely it&#x27;s not much to ask that a compiler, as it parses your code and likely already has high confidence you need a semicolon in a certain spot, can just correct it for you and move on. Maybe have a --fix-errors option to the compiler command line or something. reply imron 11 hours agorootparentprev> A world where that&#x27;s the standard would be chaos.We saw this play it with web browsers in the late 90s early ‘aughts where they’d do their best to render what they thought you meant if your html was wrong, and it was indeed chaos.Strict systems with strict inputs makes for a better overall ecosystem. reply devjam 8 hours agoparentprev> The fact that the Python REPL provides a helpful hint seems like extra effort to make your life easier.I agree; Python is actually helping you out here, since just typing `exit` doesn&#x27;t actually call the callable.Also, Python being Python, while not recommended, there&#x27;s nothing stopping the user from assigning to `exit` then printing it in the repl: >>> exit = 42 >>> exit 42What would the author expect Python to do in this instance? reply MichaelDickens 6 hours agoparentprevI think the current behavior is worse simply exiting. The only concern with exiting when the user types \"exit\" is that perhaps the user actually wanted to see the value of the `exit` function. But the current behavior doesn&#x27;t show the value of the `exit` function either, so it&#x27;s useless for that use case. reply nneonneo 12 hours agoparentprevYeah, and it’s also useful to teach newbies about the usual syntax for doing things rather than introducing special-case magic. It would be _weird_ to just quit after writing a bare “exit”. reply gizmo 10 hours agorootparentipython intentionally diverges from the regular python REPL. It just quits like you expect without crying about it. reply andy99 13 hours agoparentprevVim iirc has a similar hint telling you to exit when you try something that should exit. I don&#x27;t remember how it&#x27;s triggered, ctrl-q maybe (edit, ctrl-c). I see the point, if you know what someone is trying to do, better to just do it, or ignore it, not give a condescending \"nudge\". Though personally the hint doesn&#x27;t bother me. reply octacat 45 minutes agoprevThe example with experimental features is soo weird. It is like the author knows why experimental features exist but trying to play confused to fit the narrative.OK, nighty builds. So, some features could be coded, but haven&#x27;t been tested for a long enough time to say \"this feature is rock solid and the behaviour is good for all combinations of code\". In the formatter, we probably would not wanna change the behaviour of a flag once it goes stable (and in the formatter there are always several ways to do anything, because it is just how code is).So, there are more or less two options when adding new features: only merge a feature branch when you are 100% happy (that could make releasing hard) or have a feature behind a flag and document it is an experimental. In the real world - having feature behind a flag is good. For some reason people assume that open source projects have a huge team, and all their time is free. So, adding a new feature to a formatter is \"easy and trivial\" (and make that feature stable is \"trivial\" too). reply avg_dev 13 hours agoprevI feel this post. I can relate.I once said - and still maintain - that all devs need a life-long lesson in empathy. For our users and our library consumers and so on.It will be impossible to fix every conceivable issue and sometimes we will have to deprecate or break backward compatibility or features or whatever. But if maybe some more effort to understand and respect our users was made as a matter of course, then when we are users we will be more inclined to give the benefit of the doubt to the developer who created the thing.Also the post made me laugh. reply eurleif 13 hours agoprev>I understand thatmight be confusing for newcomers, and exiting might be too destructive. But denying you the normal REPL behavior and denying you the ability to exit is just insulting.Sentence 1 provides a clear justification for the behavior. Then sentence 2 declares, by bare assertion, that it&#x27;s \"insulting\".I find sentence 1 more persuasive than sentence 2. reply wharvle 11 hours agoparent1 may be more persuasive but it’s 2 that makes me wish someone a very bad day every time that message prints. reply shepherdjerred 11 hours agoprevThe author provides very surface-level criticism of two Rust tools , but they don&#x27;t look into why those choices were made. I&#x27;m ignoring the Python complaint since it&#x27;s discussed in other comments.With about five minutes of my time, I found out:wrap_comments was introduced in 2019 [0]. There are bugs in the implementation (it breaks Markdown tables), so the option hasn&#x27;t been marked as stable. Progress on the issue has been spotty.--no-merge-sources is not trivial to re-implement [1]. The author has already explained why the flag no longer works -- Cargo integrated the command, but not all of the flags. This commit [2] explains why this functionality was removed in the first place.Rust is open source, so the author of this blog post could improve the state of the software they care about by championing these issues. The --no-merge-sources error message even encourages you to open an issue, presumably so that the authors of Cargo can gauge the importance of certain flags&#x2F;features.You could even do something much simpler, like adding a comment to the related issues mentioning that you ran into these rough edges and that it made your life a little worse, or with a workaround that you found.Alternatively, you can continue to write about how much free software sucks.[0]: https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rustfmt&#x2F;issues&#x2F;3347[1]: https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;cargo&#x2F;pull&#x2F;10344[2]: https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;cargo&#x2F;commit&#x2F;3842d8e6f20067f716... reply JohnFen 11 hours agoparent> you can continue to write about how much free software sucks.I think that&#x27;s unfair. He wasn&#x27;t writing about how much free software sucks, he was writing about how some of the rust tooling sucks.Even in the larger context, everything he wrote applies just as readily to proprietary software. These sorts of issues are everywhere. reply shepherdjerred 10 hours agorootparentThe post itself isn&#x27;t very generous; its title is “You can’t do that because I hate you.”You&#x27;re right that \"frustrating to use software\" applies to proprietary software as well, but the author only gives very specific examples all of which involve open source. reply flimsypremise 11 hours agoparentprev5 years to get a wrap_comments feature stable? I sometime wonder if people read the things they write? reply bostik 19 minutes agorootparentCode reformatting is, apparently, surprisingly hard. This classic article has popped up on HN a few times over the years: https:&#x2F;&#x2F;journal.stuffwithstuff.com&#x2F;2015&#x2F;09&#x2F;08&#x2F;the-hardest-pr... (one reappearance at https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=30566111)So I can understand why such a feature remains behind an experimental flag. \"But you are not touching code, only reformatting comments!\" - well, not just thta. Adding whitespace and N+1 effectively empty lines will at some point cascade into whatever logic the wider code formatter will have to consider. The number of edge cases must be non-trivial. reply shepherdjerred 10 hours agorootparentprevThe conversation was about why the feature wasn&#x27;t stable.I have no idea how the Rust project organizes itself, but my guess is that this simply isn&#x27;t a high enough priority for them, which would explain why it hasn&#x27;t been made stable.Large backlogs with stale are a common problem that software projects have. reply smrq 3 hours agorootparentprevI don&#x27;t know if this is hard in their codebase (although I have a guess), but I have worked on a code formatter before and easy-sounding things were often an unimaginable nightmare. reply haileys 11 hours agorootparentprevI mean... check out the issue tracker for any project, open source or commercial. It&#x27;s just how it goes when things aren&#x27;t a priority. Happens all the time. reply zem 13 hours agoprevthe trouble with \"do what I mean\" is that if the software guesses, and guesses wrong, the results are far worse than just not doing it. an \"if you really meant to do this here is the correct incantation\" error message seems like the best possible thing to do. reply burnte 12 hours agoparentThe problem with this argument is the low hanging fruit. EXIT is pretty unambiguous. I HATE that some tools the help argument is -? and others use --? when everyone COULD just print help on both is maddening, especially when you use the \"wrong\" one and it just says \"do the other for help\". You KNEW what I wanted, and didn&#x27;t do it, just like the article says.Yes, mindreading is tricky, but sometimes you don&#x27;t need to read minds to just work with the user. reply Hizonner 12 hours agorootparentWait what? It would never occur to me to try to use a question mark as a command option at all. That&#x27;s what \"--help\" is for. I&#x27;m actually surprised any program at all recognizes either form of the question mark.... but don&#x27;t get me started on people who think it&#x27;s ok to use a single hyphen to start a multicharacter option, or don&#x27;t let you put multiple single character options after the single hyphen... reply JohnFen 11 hours agorootparent> It would never occur to me to try to use a question mark as a command option at all. That&#x27;s what \"--help\" is for.-? has been a common switch for decades. I&#x27;ve been implementing it (along with the synonyms -h, --help, etc.) in all of my programs since about the &#x27;90s. reply bvisness 9 hours agorootparentprevAnything a user tries to do to ask for help is correct behavior that you need to support. It is a crime to tell the user “you asked for help incorrectly”.I suggest supporting at least all of the following: -h, -help, --help, -?, &#x2F;h, &#x2F;?, help,(if possible). Other flags don’t have to follow these rules, but I think help can be an exception.And maybe you should print the help any time the user enters a bad command. reply nneonneo 12 hours agorootparentprevWindows uses &#x2F;? as the standard help flag, so maybe there are tools that are ported from that convention?-h&#x2F;--help are all I ever see in macOS CLI tools, in any case. reply JohnFen 10 hours agorootparentI believe &#x2F;? started well before Windows, with DOS. IIRC, it was used because -? was common with Unix and CP&#x2F;M (and DOS is basically half Unix and half CP&#x2F;M) -- but Microsoft made the decision to have &#x27;&#x2F;&#x27; be the switch character rather than &#x27;-&#x27;. So, &#x2F;? was inherited from what came before, just slightly modified. reply HKH2 9 hours agorootparentprev> ... but don&#x27;t get me started on people who think it&#x27;s ok to use a single hyphen to start a multicharacter optionThere are quite a few older programs that do that, including ImageMagick and FFmpeg. reply fsckboy 10 hours agorootparentprevexit() is unambiguous, syntactically and semantically.exit is unambiguously broken syntax, it doesn&#x27;t fit into what the REPL promises, it&#x27;s an error.newbies to unix need to learn about Ctrl-D, and it should be taught. But it should not be the job of every tool to teach that lesson, it&#x27;s one step removed from QWERTY. There are actually apps that break Ctrl-D and they are another abomination in the direction of newbie hand holding. reply breischl 12 hours agorootparentprevThe problem is that all the \"do what I mean\" examples become part of the spec, and then have to be supported forever. Whereas \"prints an extra-informative error\" is much easier to change.Even for low hanging fruit. eg, `exit` in Python can be redefined as a variable - so if I do that and then type `exit`, should it print that value for me or quit the REPL? Is it better to guess, or just not encourage the user to do the wrong thing?If I make `-?` print help, what happens when I want to define `-` as \"read the following text as input\" and then users start getting bizarre behavior instead of the help file?You can probably come up with ever-fancier ways to work around this, but that takes effort, and more testing, and more code... reply Hizonner 11 hours agorootparent> If I make `-?` print help, what happens when I want to define `-` as \"read the following text as input\" and then users start getting bizarre behavior instead of the help file?I&#x27;m not sure what that means, but if you&#x27;re saying that you would want your program to interpret \"-?\" as though somebody had run it with no option at all and then provided a question mark on the standard input, that&#x27;s really obnoxious and grounds for torches and pitchforks from all users.Look, on a command line, a bare hyphen, given as an argument where there might otherwise be a filename, can reasonably mean \"read from the standard input\" or \"write to the standard output\", but only because it&#x27;s been so common for so long. As an alternative to it, you can just use standard input&#x2F;output by default, or you can just punt and make the user give you something like \"&#x2F;dev&#x2F;stdin\".In any other context, a hyphen introduces an option that modifies normal program behavior. If it&#x27;s a single hyphen, then the option name is a single character. If it&#x27;s a double hyphen, the option name is the rest of the argument up to any equal sign. It should consist of complete words and be in `kebab-case`, not `snake_case`. But even if you violate those rules, it&#x27;s a far more basic rule that an argument starting with a hyphen is an OPTION NAME, not arbitrary data.And the options \"-h\", \"--help\", and I guess maybe \"-?\" and \"--?\" are pretty much universally used to mean \"print help about how to use your program\". Changing that is insane.I know that code on on Windows does horrific stuff (including pretending it&#x27;s freaking RSX-11 and using slashes of all things). I know that some really old UNIX stuff written in the bad old days also breaks the rules. But even those don&#x27;t just arbitrarily redefine what the hyphen means. Redefining absolutely everything under the user, to the point where they can&#x27;t even guess how to ask for help, is just crazy. reply zem 11 hours agorootparentprevi agree about the help flags, but not about `exit`, given that `exit()` is implemented as a function and not a repl builtin. python functions do not get run unless called with `()` and it&#x27;s not worth introducing that inconsistency in there. reply ryandrake 7 hours agorootparentprevThe worst is a few tools where when you type: the_command -foo...and the tool responds with: -foo: No such option. You probably meant --fooWell shit! Thank you for that burst of empathy. If you, developer, are that confident that&#x27;s what I meant why couldn&#x27;t you just make both inputs do the same thing? You went out of your way to make the code handle -foo, but only to have the program fire off that snide remark instead of doing what you know the user meant to do. Maddening. reply rrobukef 1 hour agorootparentBecause you may have meant --f=oo or -f -o -o, both of which are standard unix interpretations of single-dash multi-character flags (e.g. ls, ssh). Or maybe the newest version added the -foo flag.And if you&#x27;ve got something like &#x27;sed&#x27; overwriting the input file (-i), it&#x27;d better make sure the flags are exactly as documented. reply Ntrails 1 hour agorootparentprevGiven the number of times I run git psuhTo be told \"you probably mean push\"... yeah it&#x27;d be easier for me if they went ahead and accepted the typo :D reply et1337 13 hours agoprevThe last example is actually a great argument in favor of this “user-unfriendly” mindset. The removal of that CLI flag forced the user to actually figure out the root cause of the problem rather than paper it over with a workaround they didn’t really understand, which would inevitably metastasize and explode later in an even more frustrating way.All of these examples are devs trying to make sure users understand what’s going on. Nothing wrong with that when it is necessary complexity. The trouble I think comes when you’re making sure the user understands something that really shouldn’t matter - unnecessary complexity. Especially complexity that is just a byproduct of a disorganized group of people building a “bazaar”, like in the Node ecosystem (and apparently Rust too). Who cares if X is actually a fork of Y that was merged into Z. reply jmholla 13 hours agoparent> The removal of that CLI flag forced the user to actually figure out the root cause of the problem rather than paper it over with a workaround they didn’t really understand, which would inevitably metastasize and explode later in an even more frustrating way.I wish the author had written what the real issue is. It feels like they are contributing the the very problems they are complaining about with a flippant line about it being something else. reply bvisness 10 hours agorootparentThe problem was a strange monorepo setup where multiple packages came from the same GitHub repo. Then I tried to switch one of them to my fork. The error message did not help me understand this reality at all; I only figured it out the very hard way after blowing up my project in two different ways. replyLtWorf 2 hours agoprevWhat a bad article!He wants a function to work as a keyword!He wants comments word wrapped by default, when this would break comments that contain stuff like packet fields schemes.Terrible ideas, and he complains they aren&#x27;t the default. Well that&#x27;s because they aren&#x27;t good ideas and he hasn&#x27;t thought about it long enough to figure it out. reply thatguysaguy 12 hours agoprevIt&#x27;s so strange to me that the first example is one where the devs went out of their way to help the users. There&#x27;s no world in which that&#x27;s maliciousness or anything of the sort. reply octacat 40 minutes agoprevYes, and rm knows that I want rm -rf. But there are rules... reply TheCoreh 13 hours agoprevThe unstable warning preventing you from wrapping the comments actually seems pretty reasonable to me.It is implemented, but there are probably edge cases where the proper way to wrap and retain the best possible formatting is still disputed. Since a lot of people format on save, via commit hooks or during CI, having this feature enabled as stable and _changing the behavior later_ would cause massive annoying diffs in the future, or CI failures for a ton of projects. reply tedunangst 10 hours agoparentGating it behind nightly is just bizarre though. Today&#x27;s nightly, where the feature is available, will turn into 1.76 or whatever, but then the feature will become unavailable again. That is not how normal software works. reply NobodyNada 8 hours agorootparentI don&#x27;t know the intention of the Rust team, but maybe it&#x27;s because of the difference in release cycles: if a bug is found in an unstable feature today, it can be fixed by tomorrow&#x27;s nightly build, but it won&#x27;t make it into stable until at least February. Presumably, the maintainers don&#x27;t want to release code that is in flux and under active development under the same 6-week release cycle that they release stable, well-tested code. reply ender341341 11 hours agoparentprevother posts pointed out the issue, it breaks certain markdown formatted comments (mainly tables). reply pdimitar 4 hours agorootparentIt would be very valuable if that was part of the tool&#x27;s explanation then. reply __s 9 hours agoprevIf you think these are examples of why programming is hard do I have news for youPython&#x27;s error message is a compromise, they could&#x27;ve just printed the unknown variable errorRust has unstable features to prevent tooling running into issues like ci failing everytime there&#x27;s a minor version update reply bvisness 10 hours agoprevAll this time after writing this article, I’m now realizing a better way to sum up the issue:It’s like when you ask “can I go to the bathroom” and the teacher says “I dunno, CAN you?” reply lacrimacida 8 hours agoparentYour rant is very valid by the way. I didn’t have these particular problems but you captured the essence of similar experiences I’ve had with other tools. Just the thougt of tinkering with something im not familiar gives me the goosebumps, maybe a little nausea, shortness of breath. Maybe it’s some form of PTSD gradually accumulated over the years. In the end it’s no big deal if you don’t expect things to work logically and things to work from the first try. reply ryandrake 7 hours agorootparentI think it&#x27;s a totally valid rant too. We get so used to our tools laughing at us saying \"Ha ha ha! You didn&#x27;t say the magic word!\" And then a few searches or manual lookups later, you learn the magic word and use it, the tools say \"Ha ha ha! We&#x27;ve deprecated that function!\" And slowly through our careers, we just start accepting it as an inevitable fact of programming. reply Guvante 11 hours agoprevEmpathy is hard when dealing with thousands of users.For everything you think should obviously be A there are many vocal people who think B... reply zubairq 2 hours agoprevHaha, made me laugh out loud at how true this statement feels, even though it is probably not true:\"If you don&#x27;t enjoy programming, don&#x27;t worry, it is not your fault. Thousands of people around the world work hard day and night to make programming as miserable for you as possible.\" reply laidoffamazon 3 hours agoprevI like these examples, particularly in the Rust ecosystem because they mirror my frustration with Rust exactly - code examples fail in embedded documentation because of nightly channel differences, libraries that assume dependency on one stdlib or another, it&#x27;s a massive cognitive load on top of the already obvious load of the borrow checker. reply interstice 4 hours agoprevI have run into this with JavaScript, Shopify and numerous applications. Usually it’s because an internal ideology or future plan js incompatible with a currently working featured. It’s mildly annoying when there is no recommended replacement. It’s very annoying when there are a bunch of suggested alternatives that don’t work. The worst is when the attitude is “you shouldn’t be trying to do it this way in the first place” when there really is no good alternative. reply stgr_codes 1 hour agoprevThis is literally Typescript vibes all around... Awful dev experience, it&#x27;s a fucking joke and people seem to like it... reply 0cf8612b2e1e 13 hours agoprevDo what I mean, not what I said can be problematic for tools. That being said, the example where the devs left a link to file an issue to beg to restore functionality was maddening. reply Arnavion 12 hours agoparent\"Beg\", and \"passive aggressive\" from TFA, is an unnecessarily emotional interpretation of that sentence. It&#x27;s perfectly neutral. When they imported `cargo-vendor` into cargo they removed a feature that was not trivial to reimplement, so they asked for an issue to be opened so that they can see if people want it and so that someone can decide to implement it.That message *could* be updated to point to https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;cargo&#x2F;issues&#x2F;10310 instead of asking for new issues to be created or suggesting the old `cargo-vendor`. (The author of TFA already knows about that issue, since they commented on it before they published their article.)(You might say it would&#x27;ve been better to let cargo-vendor remain separate instead of merging it into cargo, but the reason that was done was to ensure it would continue to work with changes to cargo. Indeed that is why the original cargo-vendor does *not* work properly any more.) reply phs318u 11 hours agoparentprevAgreed, but in that case the tool shouldn&#x27;t be trying to detect what I mean. Why look for &#x27;exit&#x27; only so you can print &#x27;no actually, it&#x27;s exit() dummy&#x27;. If you&#x27;re parsing for it then just bloody do it! Otherwise I&#x27;ll get a syntax error and realise that &#x27;exit&#x27; isn&#x27;t the right way to exit. And I&#x27;ll do a quick search myself. But explicitly looking for and detecting my intention and then ignoring it is just dumb. reply slooonz 11 hours agorootparentNothing is looking for exit. The REPL is calling repr(result) to show the result of the expression to the user. repr(exit) is the string \"Use exit() or Ctrl-D (i.e. EOF) to exit\". You _really_ don’t want repr(builtin) to have a side-effect like terminating the program.Stop being toxic and patronizing towards open-source developers out of ignorance. reply gizmo 10 hours agorootparentipython has specifically implemented an Autocall that allows you to exit by typing exit, quit, exit() or quit().https:&#x2F;&#x2F;ipython.readthedocs.io&#x2F;en&#x2F;stable&#x2F;api&#x2F;generated&#x2F;IPyth...And repr(exit) also works fine:> In [1]: repr(exit)> Out[1]: &#x27;&#x27;Maybe don&#x27;t be so eager to accuse people of ignorance and toxicity. reply emmanueloga_ 10 hours agorootparentprevPerhaps a variable `exit = True` or something was defined previously, you don&#x27;t want to have the language or REPL handle a myriad of possible corner cases, that would be very brittle. But a printing warning or lint-like suggestion is ok and actually useful. reply gizmo 10 hours agorootparentIt&#x27;s not brittle. ipython has a special case for exit and quit. See my sibling comment. If you try to assign to exit you get a syntax error. Which is weird, but also fine in practice. reply stavros 9 hours agoprevhttps:&#x2F;&#x2F;archive.is&#x2F;AYTEM reply valyagolev 13 hours agoprevWeirdly I&#x27;m very used to this kind of stuff and take it very easily from programmers, but when a german bureaucrat does this same thing to me I&#x27;m also fuming. reply v9v 13 hours agoprevI like the MATLAB REPL a lot with regards to this issue. If you make a typo in a function or variable name, the REPL fixes it automatically and you press enter to send the corrected command. From the story submitted here about Medley Interlisp, I gather that its REPL also has such a feature. reply ambicapter 13 hours agoprev> “Unstable features”???? How is wrapping text an unstable feature in a code formatter?Haven&#x27;t finished the whole thing, but wait till you start reading about LaTeX. reply Frummy 10 hours agoprev>Exiting PythonIn early versions of COBOL exit was frequently used to go out of loops and out of sections and so on. Maybe a message is nice for someone still trying that while learning modern stuff, but I admit it’s farfetched&#x2F;unlikely. reply corytheboyd 11 hours agoprevIt’s a hard job that requires a lot of learning, failing, adapting, and growing. It’s frustrating, but getting good can only be done through endless grind. There are no cheat codes. After encountering and overcoming the roadblocks mentioned in the article, you grow keen to that class of problem, and next time, more quickly figure it out and move on.An apprentice woodworker is going to fuck up a cut and have to spend hours rebuilding. An aspiring musician is going to pour hours into mediocre music that nobody listens to. A new software engineer is going to get lost in the sea of complexity built on top of the rapid growth and death of fads and doctrines and tools (good and bad) that is decades deep.It’s fucking hard. I do think the pay reflects that, though perhaps is a biiiiit inflated. Regardless, shit ain’t easy. That being said, people generally quite enjoy sharing their knowledge, and helping the next generation of software people ramp up and kick ass, so there may be hope yet :) reply froh 11 hours agoprevinteraction design for API and CLI, text based interfaces, is both hard and underdeveloped.for example argparse and similar cli argument parsers _know_ the basic structure of the command line, but they don&#x27;t provide it in machine table form, to interactive shells, so these could ask CLI tools: \"hey, what do you expect at this point?\" reply LoganDark 11 hours agoprevI feel the same way about Rust unstable features. Either you can only use features that are \"stabilized\"—guaranteed to never change—or you can throw all guarantees out the window, and use the unstable, experimental version of the toolchain.This would be fine if \"unstable\" features were actually experimental messes, but all sorts of completely-benign utility functions are \"unstable\". You have to throw out all guarantees for your entire toolchain just to use, say, `Result::into_ok`, which was introduced in 2019, but is still unstable due to being \"newly added\".At best, this is misleading, at worst, this greatly compromises the developer experience, especially when writing libraries which need to work on stable or else nobody will install them. Even for application projects, I don&#x27;t want to use unstable features, because it&#x27;s extraordinarily stupid to make the entire project nightly-only just because I want to use a two-line utility function, and I&#x27;m petty that way.Sure, I&#x27;ll use unstable for things like bare-metal programming that deserve to be unstable, but if I&#x27;m writing regular application code and the perfect utility function is \"unstable\", I&#x27;m not going to lock myself into nightly just for that. reply shepherdjerred 11 hours agoparent> but is still unstable due to being \"newly added\".Where did you get this from? The tracking issue says nothing of the sort: https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;61695 reply Arnavion 10 hours agorootparentRight, it&#x27;s nothing to do with it being \"newly added\".That issue had been filed by its OP as a feature request. It then got repurposed into a tracking issue for the feature, but it&#x27;s not following the standard tracking issue template that lists any blockers, stabilization steps, etc. (Compare to https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;119364 that happens to be the newest \"Tracking issue\" atm.) Also since the OP didn&#x27;t intend for it to be the tracking issue, it&#x27;s possible they&#x27;re not intending to do the rest of the bureaucracy to get it stabilized either, which is why it&#x27;s stalled. reply LoganDark 7 hours agorootparent> Right, it&#x27;s nothing to do with it being \"newly added\".It absolutely was, but now it seems to be mostly that the stabilization process is tedious enough that nobody has done it yet for this tiny utility function. There are tens of other tiny utility functions in the same situation that have been sitting for years, I run into them all the time.The whole situation surrounding \"unstable features\" is just super disappointing for me. This stuff doesn&#x27;t deserve to be unstable, and I shouldn&#x27;t have to switch to an experimental toolchain that breaks all the time just to use these tiny utility functions! reply Arnavion 1 hour agorootparent>It absolutely wasNo, there is no such absolute requirement that \"newly added\" functions cannot be stabilized. Off the top of my head: https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;111544 `OsStr::as_encoded_bytes` was proposed in 2023-05, finished being implemented in 2023-07, stabilized in 2023-09, and released in 2023-11.>https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=38801228The reason attr of \"newly added\" is the reason to *mark the function unstable* when it was implemented. It&#x27;s not the reason to *prevent it from being stabilized.* reply LoganDark 7 hours agorootparentprev> Where did you get this from?The source code? #[unstable(feature = \"unwrap_infallible\", reason = \"newly added\", issue = \"61695\")]And that issue you linked is from 2019 and full of people asking when it will be stabilized. Last activity was in late 2021. reply shepherdjerred 5 hours agorootparentThat annotation hasn&#x27;t been touched (aside from being moved around) since it was authored [0].Your comment said:> `Result::into_ok`, which was introduced in 2019, but is still unstable due to being \"newly added\".Your comment makes it sound that the Rust team considers a four year old utility method as \"newly added\", and that&#x27;s the reason why this method is marked as unstable. More likely, this \"newly added\" reason is something they add for any new unstable feature, and it is now out of date.Considering that repository has 9,000 open issues, and 50,0000 total issues, you can imagine that this issue has simply not been prioritized. Rust being poor at prioritizing, handling issues, etc. is a totally separate discussion from \"Rust thinks four year old code is new\"[0]: https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;commit&#x2F;c784720f3a2d0b66142... reply LoganDark 5 hours agorootparentThere&#x27;s nothing wrong with their prioritization, there are tons and tons of high-priority issues that deserve more contributor time than this. Everyone&#x27;s a volunteer.This is just a process error, IMHO. The process for stabilization in general just results in outliers like this and it&#x27;s really frustrating for everyone involved. I know Rust is sort of unique here, just like it&#x27;s unique in all sorts of other ways, but I can&#x27;t help but think that there could have been some sort of provision for small methods like these. replyinvalidator 8 hours agoprevMy personal peeve: $ git log directory --stat fatal: option &#x27;--stat&#x27; must come before non-option argumentsCome on, Git, you know what I want. Just do it without making me repeatedly edit the middle of the command. reply devilirium 10 hours agoprevChange what you want and can. reply groby_b 11 hours agoprevThis assumes 100% competent and knowledgeable users. Nobody is in every field, and so the question is \"do we freely hand out footguns, or should we put a safety in place\"In some fields, the decision is easy. We&#x27;re by now culturally aligned that shipping encryption libs with bad APIs or a default-on footgun option is a bad idea.Clearly, with less impactful tools, we still have more debate ahead of us. I&#x27;m hoping that we&#x27;ll realize at some point that proper engineering is always fail-closed[1] if there are destructive consequences. Yes, it might temporarily inconvenience some, but it prevents harm to more.Ultimately, the question is \"Who is more important, you, or the rest of the world\".[1] fail-open if you&#x27;re EE. We&#x27;re so bad, we can&#x27;t even decide on terminology. reply naikrovek 7 hours agoprevI agree with the authors conclusion that we make this stuff hard on ourselves.No one hates software developers more than other software developers, and no one understands usability less than a software developer.This is one of those things I thought would get better over 30 years but has just continually gotten worse. reply jbirer 11 hours agoprevRust is a great language but the developers suffer really badly from Reddit Intellectual syndrome. If they put some people with social skills at the forefront of relations with users it would definitely get more adoption. reply local_crmdgeon 11 hours agoparentRust and TypeScript came onto the scene at about the same time. Microsoft manages TS more or less, Redditeurs manage Rust.Fun to see which is thriving and which is still niche! reply smitty1e 11 hours agoprevWriting this sort of rant in English is meta-hilarious. reply fifticon 12 hours agoprevAs a software developer, I am in wonder at the shape some software ships in. The last couple of days, I have toyed with Raspian bookworm together with my father.Its menu contains an &#x27;Add-Remove Software&#x27; GUI tool, which seems to be a thin and ill-conceived wrapper around apt-get (?). It combines several horrible choices, which conflict and clash perfectly. (1) it appears to insist on retrieving and building its entire list of apt packages, EVERY TIME YOU TRY TO OPEN OR OPERATE IT. (2) it doesn&#x27;t give you any choice to CACHE this data, or any choice to skip this \"refresh\". (3) it takes five minutes or more to refresh this list, on our raspberry 3. (4) on any excuse you give it, it will refresh the list again. (5) once it succeeds in retrieving this insane 5-minute list, it presents it to you in an unnavigable manner - no sorting, no searching, no filtering, just a scrolling list with something like 10.000 apt packages.. page up&#x2F;page down doesn&#x27;t seem to work. For example, I naively pressed the cursor keys, wrongly assuming it would move my selection point in the 10.000+ list.. WRONG: Instead, it navigated a category-word-list, causing it to redo the 5-minute re-init. In effect, it because a &#x27;trial and error game from hell&#x27;, where you can attempt 10 wrong ways to navigate the list, each time being punished with a 5-minute \"no you can no longer view the list you just waited 5 minutes to retrieve, you must now wait 5 minutes again for your next wrong attempt!\" (6) oh yeah, and you are not allowed to view the partial list during load. I really really wonder who decided to implement that window in that maddening way??In the end, I resorted to using apt search in the command line, which of course works perfectly, but not before having wasted about an hour together with my less-tech-savvy dad, trying to make the raspian package install UI \"work\" in the naive idea it would be easier for him to use :-&#x2F;. reply FirmwareBurner 11 hours agoparentCertain Linux UI stuff can be an opinionated death by a thousand papercuts. Probably because most Linux devs don&#x27;t dogfood their own stuff as they just stick to the command line anyway, so there&#x27;s less incentive to fix the UI issues, if nobody in the dev chain is actually using it.I remeber when Linux GUI users were asking for a \"Right click -> run&#x2F;open as root\" feature just like in Windows, and the devs basically said something along the lines of \"we&#x27;re not gonna do it just because the way Windows does it means it must be wrong; if you need to run stuff as root it means you&#x27;re a poweruser so you should use the comand line anyway; you&#x27;re welcome\". Linux Mint was the first and only to have this feature in the GUI early on, then came the other DEs who ceded defeat to sanity. reply LeifCarrotson 11 hours agoparentprev> I really really wonder who decided to implement that window in that maddening way??They implemented it in a test environment with either an emulated device pulling packages from the host, or pulling packages over a gigabit network from a local cache on their LAN, or on a high-speed fiber connection where it took far less than 5 minutes to retrieve the list. reply IshKebab 10 hours agoprev [–] This rant is spot on and it&#x27;s disappointing (but not surprising) that there are so many commenters here that don&#x27;t get it. Honestly a few years ago I&#x27;m not sure I would have got it.It definitely seems to be specific developers&#x2F;communities that suffer from this \"UX doesn&#x27;t exist\" sort of attitude.I have also run into Rustfmt issues when trying to format single files (necessary for Phabricator&#x27;s arc lint) and they have an unreleased \"version 2\" which we dutifully used from source... for 5 years. It turns out their plan is to never actually release this.Python also seems to fuck over its users quite a bit. Two examples:1. Setuptools has broken editable installs so that static tooling (IDEs, linters, type checkers etc.) can&#x27;t work with editable installs. Because who would want to edit Python code with an IDE, amiright? Facepalm.2. On Windows there is no python3.exe. Say goodbye to portable instructions&#x2F;scripts. Why you ask? Well there&#x27;s some obscure situation if you have multiple Python installs in your PATH and by some miracle that hasn&#x27;t totally trashed your system already (relevant XKCD) that it would trash your system slightly more. So we won&#x27;t ever fix that. And please don&#x27;t point out that if you install Python from the Microsoft store it does install python3.exe. reply sevagh 9 hours agoparent [–] >This rant is spot on and it&#x27;s disappointing (but not surprising) that there are so many commenters here that don&#x27;t get it. Honestly a few years ago I&#x27;m not sure I would have got it.Nailed it. A few years ago, I was deep enough in the zeitgeist of Rust (or whatever project) that I would maybe even be offended by a blog post like this; bro, do you think you&#x27;re better than Rust? Keep up like the rest of us!After years of doing actual things (and not meta-learning), when there&#x27;s something that makes no sense that ruins my day, I hate it. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The author expresses frustration with programming experiences they find insulting and condescending.",
      "Examples like Python's exit command, formatting Rust files, and conflicts when vendoring Rust dependencies are given as instances where developers refused to allow users to do what they wanted, leaving them feeling unsupported and frustrated.",
      "The author calls on developers to either fully support features or provide guidance for alternative solutions."
    ],
    "commentSummary": [
      "The discussion revolves around the frustrations and challenges faced by software developers in dealing with programming languages and tools like Rust, Python, and JavaScript.",
      "Issues such as default settings, customization, stability of features, user-friendly interfaces, and development prioritization are brought up.",
      "Some participants express frustration with the lack of empathy among developers and the challenges of understanding complex systems. The conversation highlights the common problems and complexities associated with software development."
    ],
    "points": 186,
    "commentCount": 156,
    "retryCount": 0,
    "time": 1703793663
  },
  {
    "id": 38793249,
    "title": "Foundations: Exploring Physics and Science Fiction in Greg Egan's Collection",
    "originLink": "https://www.gregegan.net/FOUNDATIONS/",
    "originBody": "Foundations by Greg Egan Special RelativityFrom Special to GeneralBlack HolesQuantum Mechanics The Book of All Skies“Border Guards”DiasporaDichronauts“Didicosm”DistressEssaysFoundationsHorror StoriesIncandescenceMiscellaneous Fiction“Oceanic”OrthogonalPermutation City“The Planck Dive”QuarantineScaleSchild’s LadderScience NotesTeranesiaZendegi Back to home pageSite MapSide-bar Site Map Foundations is a series of articles, first published in the magazine Eidolon, on some of the theories of twentieth-century physics that have most influenced modern science fiction. However, these are not essays on the history or philosophy of science; their aim is to show how the central idea of each theory leads to detailed, quantitative predictions of real physical effects. For example, the article on special relativity derives formulas for time dilation, Doppler shift, and aberration. These articles are for the interested lay reader. No prior knowledge of mathematics beyond high school algebra and geometry is needed. Articles online 1: Special Relativity Spacetime Rotations in Space Spacetime Geometry Rotations in Spacetime Time Dilation The Flight to Sirius Doppler Shift and Aberration 2: From Special to General Gravity as Spacetime Curvature Manifolds Curved Geometry Parallel Transport The Curvature Tensor 3: Black Holes Mass Velocity and Acceleration Energy and Momentum The Stress-Energy Tensor Conservation of 4-momentum in Curved Spacetime The Einstein Tensor The Bianchi Identity The Schwarzschild Solution 4: Quantum Mechanics The Birth of Quantum Mechanics Complex Numbers Wave Mechanics Matrix Mechanics The Uncertainty Principle The Action Principle Special RelativityFrom Special to GeneralBlack HolesQuantum Mechanics The Book of All Skies“Border Guards”DiasporaDichronauts“Didicosm”DistressEssaysFoundationsHorror StoriesIncandescenceMiscellaneous Fiction“Oceanic”OrthogonalPermutation City“The Planck Dive”QuarantineScaleSchild’s LadderScience NotesTeranesiaZendegi Back to home pageSite MapSide-bar Site Map Foundations / created Thursday, 4 December 1997 / revised Saturday, 22 July 2000 Copyright © Greg Egan, 1997-2000. All rights reserved.",
    "commentLink": "https://news.ycombinator.com/item?id=38793249",
    "commentBody": "Foundations (1997-2000)Hacker NewspastloginFoundations (1997-2000) (gregegan.net) 181 points by ColinWright 20 hours ago| hidepastfavorite51 comments golol 17 hours agoI really idolize Greg Egan, I feel like he has staked such a unique position for himself in the cultural-academic landscape. I like to say that he writes science-fiction while many other authors really write engineering-fiction or sociology-fiction. He seems to be a good mathematical explorer in more obscure&#x2F;specific areas. One of the craziest crossover moments in my life was when I watched the Numberphile video on superpermutations which involves the results by Greg Egan and Anonymous 4chan user. reply codeulike 11 hours agoprevTime to post my favourite short story of his: you can read it online:Crystal Nights https:&#x2F;&#x2F;www.gregegan.net&#x2F;MISC&#x2F;CRYSTAL&#x2F;Crystal.html“What created the only example of consciousness we know of?” Daniel asked.“Evolution.”“Exactly. But I don’t want to wait three billion years, so I need to make the selection process a great deal more refined, and the sources of variation more targeted.”Julie digested this. “You want to try to evolve true AI? Conscious, human-level AI?”“Yes.” Daniel saw her mouth tightening, saw her struggling to measure her words before speaking.“With respect,” she said, “I don’t think you’ve thought that through.” reply romanhn 17 hours agoprevInteresting to see this here right after finishing six of his novels. My takeaway is that Egan clearly is a talented scientist, a man of unique ideas, and not a very good writer. The books are an excuse to go into scientific minutiae, with plodding storylines and two-dimensional characters. Kept going mostly because the ideas&#x2F;set-up were fascinating. reply genmon 14 hours agoparentSome of Egan&#x27;s shorts are the most haunting explorations of what it means to be human that I&#x27;ve read -- maybe try those.But yes, Egan&#x27;s philosophy is that sci-fi can be about the human story OR about the science. Both are valid.From this long interview:> I’m interested in science as a subject in its own right, just as much as I’m interested in the effects of technology on the human condition. In many things I write the two will be combined, but even then it’s important to try to describe the science accurately. In a novel such as Incandescence, though, the entire point is understanding the science, and it really doesn’t bother me in the least that it’s not an exploration of the human condition.> There are times when it’s worth putting aside the endless myopic navel-gazing that occupies so much literature, in order to look out at the universe itself and value it for what it is.From http:&#x2F;&#x2F;rlemay.com.au&#x2F;greg-egan-the-big-interview&#x2F; reply tambourine_man 11 hours agorootparentCould you list some of your favorite shorts? reply sohkamyung 10 hours agorootparent\"Luminous\" was what got me hooked on Greg Egan.Of his recent fiction, I enjoyed \"Zeitgeber\" [1] and \"The Nearest\" [2]. I found the latter to be an interesting exploration of what happens when you suddenly discover that you don&#x27;t recognize your loved ones as human.[1] https:&#x2F;&#x2F;www.tor.com&#x2F;2019&#x2F;09&#x2F;25&#x2F;zeitgeber-greg-egan&#x2F;[2] https:&#x2F;&#x2F;www.tor.com&#x2F;2018&#x2F;07&#x2F;19&#x2F;the-nearest-greg-egan&#x2F; reply izzydata 16 hours agoparentprevGood writing is highly subjective. The way his books focus more on the interesting concepts and not the characters is precisely why I enjoy them so much. There are enough books in the world about people and why they do what they do for books like Greg Egan&#x27;s to do their own thing.I think he achieved exactly what he set out to do with his writing. reply cauch 11 hours agorootparentWhile I agree with that and still enjoy some of Egan&#x27;s writing, his text would definitively be better and more interesting if the characters were not so artificial, without losing anything about the science.It is amusing to think that a lot of people who are defending Egan on this point would probably be uncompromising on their very low opinion on a book containing badly put together science. They will probably not say \"it&#x27;s not for me, but why not, the author was interested in the characters, the science is just an excuse\", but rather \"no, they use science, so they need to do the science correctly\". But they will ignore this argument (\"they use characters, so they need to do characters correctly\") is the case of Egan. reply lmm 6 hours agorootparentAre his characters really artificial? Boring and single-minded, sure, but there are plenty of boring and single-minded people in the world - too many literary critics lose track of how unusual (indeed unrealistic) most of the characters in literature are. reply 0xEF 16 hours agorootparentprevAgreed. Been a fan of Egan for years and I&#x27;ve never met anyone who reads his books for the prose. Egan&#x27;s stories are a delivery package for the ideas he wants to present, and nothing more. Interestingly, that is why I enjoy his work. Sometimes I want to have my mind a little blown by stuff that is just at the far edge of my intellectual understanding. Other times I want to be simply entertained, so I turn to other sci-fi authors for that. reply Filligree 14 hours agorootparentHe&#x27;s gotten better at it. You can compare Clockwork Rocket to (say) Schild&#x27;s Ladder, both of which show off interesting concepts; there&#x27;s no question that Clockwork Rocket has the more interesting characters.But the characters still aren&#x27;t why anyone reads them. Nowadays they&#x27;re serviceable; years back they were cardboard cutouts. Nobody who enjoys Egan is bothered by either. reply danbmil99 11 hours agorootparentprevIf I&#x27;m really being honest, I don&#x27;t think any of the great SF writers are great writers if you take away the SF. The Only Exception I can think of where the prose and character development are roughly equivalent to well-known novelists is Walter J Williams. He could have been a non-sf writer but he chose SF probably because it allowed him to get published. reply jerf 9 hours agorootparentI think it was Larry Niven who pointed out that if you think of conventional writing as consisting of something like some combination of plot, prose, and characters, that the science fiction author labors under the additional constraint of also having to establish setting. (IIRC he broke it into five categories, but the total number and exactly what they are isn&#x27;t important.) And given how few authors ever reach the level of firing on all cylinders in a non-science-fiction setting on those metrics, a science fiction fan must extend the science fiction authors some grace on the other fronts of good writing if they&#x27;re going to enjoy it at all. I don&#x27;t think I&#x27;ve ever seen a science fiction story that establishes a truly different setting that also gets a 5 out of 5 across the board on all the other metrics, and it&#x27;s debatable whether such a thing is even possible. If such a story hypothetically existed it would probably be too verbose to count as good writing.You can get all sorts of combinations of various attributes, but you just can&#x27;t get them all. Certainly Egan is in the Silver Age Asimov&#x2F;Clarke tradition of sacrificing characters to fit the rest in, but what he does is so good I can&#x27;t complain. For all the crazy science fiction I&#x27;ve read, Egan has, just to name one example, the only story set in a serious attempt at an alternative space-time geometry in which there are two space and two time dimensions, and not in some vague what-if \"parallel dimension\" sense, but by actually working out the consequences of what two spatial and two temporal dimensions looks like when you feed that into the equations of general relativity: https:&#x2F;&#x2F;www.gregegan.net&#x2F;DICHRONAUTS&#x2F;00&#x2F;DPDM.html(I find this one particularly interesting because many of us have imagined \"what if there were two time dimensions\"; Egan shows that what came to most of our imaginations was so laughably wrong as to not even be in the ballpark, and that in fact you can perfectly sensible discuss the topic grounded in real physics.)Even in the field of science fiction writers there&#x27;s only a certain percentage of writers who could even properly follow that page, let alone generate it themselves. reply atombender 8 hours agorootparentprevDepends on what you mean by \"the great SF writers.\" If you mean Clarke and Heinlein and such, then I would agree; their prose tends to be utilitarian.But as counter-examples I submit J. G. Ballard, Samuel Delaney, Ursula LeGuin, John Crowley, Gene Wolfe, William Gibson, Harlan Ellison, Ray Bradbury, and Theodore Sturgeon — and there are surely others I&#x27;m forgetting. All great prose stylists, all masters of characterization, and arguably among the greats of the genre. reply bossyTeacher 16 hours agorootparentprevIndeed. The point of the story is the concepts presented. This is what hard sci-fi is all about. When I think sci fi, I think Egan rather than Star Wars reply danbmil99 11 hours agorootparentprevIf I&#x27;m really being honest, I don&#x27;t think any of the great SF writers are great writers if you take away the SF. The Only Exception I can think of where the pros and character development are roughly equivalent to well-known novelists is Walter J Williams. He could have been a non-sf writer but he chose SF probably because it allowed him to get published. reply bossyTeacher 16 hours agoparentprevThe literary form is just the Deliveroo package for the actual contents: the ideas. And that&#x27;s what hard sci-fi is in its purest form: the literature of ideas reply 082349872349872 13 hours agorootparentStories* for Morlocks, not literature for Eloi...(I had thought Wells&#x27; relationship between Morlocks and Eloi might&#x27;ve been a reply to Kipling&#x27;s Sons of Martha https:&#x2F;&#x2F;www.kiplingsociety.co.uk&#x2F;poem&#x2F;poems_martha.htm , but the former is from 1895 and the latter was not until 1907)* although hard sci-fi has its own interwoven network of influences and references, so like capital-L literature and hip-hop, it really does count as a literature. reply ycombinete 13 hours agoparentprevI found myself lightly horrified throughout Permutation City, and found myself thinking about it spontaneously for months afterwards. reply codeulike 11 hours agoparentprevI don&#x27;t know if plodding storylines and two-dimensional characters is fair, some of his novels spend a lot of time watching characters do science (like the orthogonal triology) so it can get slow but he&#x27;s still banged out plenty of great plots and action setpieces and characters that develop. The second book of Orthoganol has some amazing action set pieces (solidly based on the weird rules of an imaginary universe) and plot developments. General consensus is that his short stories are the best. reply gmuslera 15 hours agoparentprevYou should try reading Zendegi. Maybe is not one of his best books, at least regarding science extrapolation, but of the few I&#x27;ve read from him it had its human side. reply zeroonetwothree 13 hours agoparentprevHis short stories are far better than the novels. reply tambourine_man 11 hours agorootparentYou’re the second to suggest this in this thread. Could you list some of your favorites? reply me_again 7 hours agorootparentLuminous, Chaff, Axiomatic, Learning to be Me, The Cutie, The Moat.The Best of Greg Egan is a perfectly respectable place to start. reply loudmax 15 hours agoprevGreg Egan is fairly active on Mastodon. You can follow along at https:&#x2F;&#x2F;mathstodon.xyz&#x2F;@gregeganSF reply loxias 7 hours agoparentOh cool! That&#x27;s a vote for getting on Mastodon... reply bossyTeacher 12 hours agoparentprevI wish he would show his face and do interviews. He&#x27;s rather obsessed with Google linking him to wrong faces. I am curious to know what he looks like, his interests, background, etc reply lifeisstillgood 12 hours agorootparentI think Lock-Pick Lawyer&#x27;s views on this are germane (paraphrasing):>>> I would show my face or give my name as there are many thousands of normal people to whom that would make an interesting or grounding moment, but it only takes one crazy nut-job to ruin your whole year, and if there is one thing common in the internet, it&#x27;s crazy nut-jobs reply bossyTeacher 10 hours agorootparentI understand that viewpoint but I would think that someone as niche as him would go unnoticed in most places reply kortilla 9 hours agorootparentThat’s not the point. The problem is the nut job who is dedicated to tracking you down. reply sohkamyung 10 hours agorootparentprevNot me. And I would bet no AI would be able to generate a face that resembles Greg Egan. :-) reply bossyTeacher 10 hours agorootparentWe would never be able to tell anyway reply Acumen321 15 hours agoprevAnyone who would be on this site is the kind of person who should do themselves a favor and read his short story collection Axiomatic. His other collections are excellent as well, I have read them all. For novels, Diaspora is my favorite so far, but I am still working through them. reply loudmax 15 hours agoparentI strongly second the recommendation for Diaspora. The story begins about 1000 years in the future, with characters that are trans-human, or post-human. Starting from that baseline of normalcy, then it gets weird.But it&#x27;s not weird for the sake of weirdness. The story is grounded in logic and built around rational exploration of deeply philosophical ideas. The book can be challenging at times, but only because the concepts it explores are so deep. The writing, IMHO, is very lucid. Egan wants to bring you into these ideas, not drive you away through inscrutable prose. reply komon 15 hours agoparentprevI enjoyed Schild&#x27;s Ladder and Permutation City immensely reply dang 12 hours agoprevRelated:Foundations by Greg Egan (1998) - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=8547249 - Nov 2014 (17 comments) reply petre 16 hours agoprevIs this the novelist that wrote the novel with the tachyon messages to our past generations warning them about the impending climate change disaster?Edit: no, it&#x27;s Timescape by Gragory Benford.https:&#x2F;&#x2F;www.goodreads.com&#x2F;book&#x2F;show&#x2F;778990.Timescape reply gcr 15 hours agoparentYou might also like these similar short stories with a similar theme:- \"What&#x27;s expected of us\" by Ted Chiang, about a reverse time delay device that reveals the deterministic nature of physics and causes a societal crisis. It&#x27;s eventually used to send a message to the past from the heat death of the universe: https:&#x2F;&#x2F;www.nature.com&#x2F;articles&#x2F;436150a- \"The Hundred Light-Year Diary\" by Greg Egan, about a society that adapts to being able to receive messages from themselves one hundred years into the future. Every person gets a ration of 100 characters per day that they can send to their past self. This one also deals with questions of free will, and what we choose to omit from our \"perfect\" records when given the chance. Synposis: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;The_Hundred_Light-Year_Diary reply teraflop 15 hours agoparentprevEgan has a somewhat smaller-scale and more personal exploration of a similar concept, in a short story called \"The Hundred Light-Year Diary\". reply Acumen321 15 hours agorootparentThis is my favorite story of his. It is part of the collection Axiomatic for those new to him. reply pimlottc 15 hours agoparentprevI always get Greg Egan, Greg Bear and Gregory Benford confused. reply geden 15 hours agorootparentIt’s all very confusing :) reply angiosperm 10 hours agorootparentprevThank you, I was just about to post how much I liked Blood Music. reply monkey_monkey 16 hours agoparentprevI think the novel you&#x27;re referring to is &#x27;Timescape&#x27;, and it was written by Gregory Benford. From what I remember (and it&#x27;s been 20 years at least since I read it), it&#x27;s quite a bleak story. reply petre 15 hours agorootparentYup, it was about the same size but maybe still better than Kim Stanley Robinson&#x27;s Mars Red from what I remember? At least I&#x27;ve finished reading it. reply KineticLensman 14 hours agorootparent(spoilers)Timescape and Red Mars are very different in very different in nature and size. Timescape is a self-contained end-of-the-world story, but set in a multiverse, so some of the characters do get out alive. Red Mars is the first part of a lengthy trilogy, which is ultimately optimistic about humanity itself, even though the story contains environment collapse, devastation, and war.[Edit] To be clear, the overall story of which Red Mars is just the first part is much longer than Timescape. reply petre 13 hours agorootparentThey&#x27;re about the same thickness and number of pages and I&#x27;ve read them at about the same age. Timescape got the Nebula award, Red Mars got the BSFA and Nebula awards. They have about the same number of stars on Goodreads, so roughly the same reception? I haven&#x27;t finished reading Red Mars, I think I grew tired with the endless descriptions. Maybe the other two Mars books are better? Dunno, never got around reading them, moved on. Both might be okay books to turn into movies, with Red Mars just use the lenghty descriptions as documentation for filming the scenes. replyanthk 16 hours agoprevI love his cyberpunk&#x2F;transhumanist novel. reply pushcx 17 hours agoprev [–] I found this very hard to read with the staticy background and removed it with the following ublock origin filter:www.gregegan.net##body:style(background-image: none !important;) reply Karellen 17 hours agoparentOn the individual topic pages, the [B] buttons allow you to choose a background, one of which is plain white. reply alanbernstein 16 hours agoparentprev [–] Wow, I hate to make an off topic complaint, but that has to be the most unreadable page style I&#x27;ve ever seen. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "\"Foundations\" is a collection of articles by Greg Egan discussing the influence of twentieth-century physics theories on science fiction.",
      "The articles explain the main concepts of each theory and their real-world predictions, aimed at lay readers with no advanced math background.",
      "Topics covered include special relativity, general relativity, black holes, and quantum mechanics. The collection also includes Egan's fictional works."
    ],
    "commentSummary": [
      "Greg Egan is a science fiction writer known for his concept-focused storytelling, which receives both praise and criticism.",
      "Some readers appreciate his thought-provoking ideas, while others find his writing lacking in compelling storytelling.",
      "The discussion explores the challenges faced by science fiction writers in creating unique settings and compares science fiction to traditional literature.",
      "Egan's short stories are preferred by some readers over his novels.",
      "Recommendations for reading Egan's work are mentioned.",
      "Egan's decision to remain anonymous raises concerns about privacy and online harassment.",
      "Themes of time travel and climate change are discussed in relation to various authors' works.",
      "A comparison is made between the books \"Red Mars\" and \"Timescape.\"",
      "The possibility of adapting \"Red Mars\" into a film is mentioned."
    ],
    "points": 181,
    "commentCount": 51,
    "retryCount": 0,
    "time": 1703770090
  }
]
