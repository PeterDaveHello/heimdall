[
  {
    "id": 37408196,
    "title": "UK pulls back from clash with Big Tech over private messaging",
    "originLink": "https://www.ft.com/content/770e58b1-a299-4b7b-a129-bded8649a43b",
    "originBody": "Accessibility help Skip to navigation Skip to content Skip to footer OPEN SIDE NAVIGATION MENU OPEN SEARCH BAR Subscribe Sign In HOME WORLD US COMPANIES TECH MARKETS CLIMATE OPINION WORK & CAREERS LIFE & ARTS HTSI MENU SEARCH HOME WORLD US COMPANIES TECH MARKETS CLIMATE OPINION WORK & CAREERS LIFE & ARTS HTSI Subscribe Sign In UK pulls back from clash with Big Tech over private messaging Keep abreast of significant corporate, financial and political developments around the world. Stay informed and spot emerging risks and opportunities with independent global reporting, expert commentary and analysis you can trust. Subscribe to unlock this article Try unlimited access Only $1 for 4 weeks Then $69 per month New customers only Cancel anytime during your trial Keep reading for $1 Purchase a Trial subscription for $1 for 4 weeks You will be billed $69 per month after the trial ends See more details about the trial Explore our subscriptions Individual Find the plan that suits you best. Digital ePaper Professional Premium access for businesses and educational institutions. Get Started Check if your university or organisation offers FT membership to read for free. Cookies on FT Sites We use cookies and other data for a number of reasons, such as keeping FT Sites reliable and secure, personalising content and ads, providing social media features and to analyse how our Sites are used. Accept cookies Manage cookies Feedback Useful links Support View Site Tips Help Centre Contact Us About Us Accessibility myFT Tour Careers Legal & Privacy Terms & Conditions Privacy Policy Cookies Copyright Slavery Statement & Policies Services Share News Tips Securely Individual Subscriptions Professional Subscriptions Republishing Executive Job Search Advertise with the FT FT Channels Follow the FT on X FT Schools Tools Portfolio Today’s Newspaper (FT Digital Edition) Alerts Hub Business School Rankings Enterprise Tools News feed Newsletters Currency Converter Community & Events FT Community FT Live Events FT Forums FT Board Director Board Director Programme More from the FT Group Markets data delayed by at least 15 minutes. © THE FINANCIAL TIMES LTD 2023. FT and ‘Financial Times’ are trademarks of The Financial Times Ltd. The Financial Times and its journalism are subject to a self-regulation regime under the FT Editorial Code of Practice.",
    "commentLink": "https://news.ycombinator.com/item?id=37408196",
    "commentBody": "UK pulls back from clash with Big Tech over private messagingHacker NewspastloginUK pulls back from clash with Big Tech over private messaging (ft.com) 713 points by alwillis 22 hours ago| hidepastfavorite283 comments neonate 18 hours agohttps:&#x2F;&#x2F;archive.ph&#x2F;HDnUa Arathorn 7 hours agoprevThis article is completely wrong, and almost sabotages the fight against the UK Online Safety Bill, given it claims a victory that simply doesn&#x27;t exist, and so lures everyone into a false sense of complacency. The UK govt must be ecstatic that they have changed nothing and yet the tech industry seems to believe that they&#x27;ve won something.All the govt said was \"we&#x27;ll only force scanning when it&#x27;s \"technically feasible\" to do so\" - i.e. when someone believes the CSAM scanning quality is high enough beyond some given threshold. It&#x27;s still scanning though, and still fundamentally undermines encryption; it&#x27;s just potentialy delaying the implementation a bit... having enabled it in law. The thing we should be fighting is enabling it in law.Politico just published an article which nailed it: https:&#x2F;&#x2F;www.politico.eu&#x2F;article&#x2F;whatsapp-signal-meta-faceboo...> \"On Wednesday, Whittaker and other privacy campaigners falsely claimed that London was pulling back from its bid to access encrypted messages\"Likewise, the Government has spelt out very clearly that they consider absolutely nothing to have changed: https:&#x2F;&#x2F;www.bbc.co.uk&#x2F;news&#x2F;technology-66716502dang: it&#x27;s almost worth flagging this thread as being based on entirely incorrect data. For whatever reason, the desire to make progress on this issue means that folks have jumped the gun and are prematurely celebrating a win which is not a win, and thus undermining the whole campaign to protect encryption. reply stephen_g 7 hours agoparentBasically all of the secure messaging platforms have indicated that they will pull out of the UK rather than weaken the security model, if or when they are instructed to. That hasn’t changed either. What this may be politically is a way of the Government saying they won’t actually do it, while pretending that nothing has changed to make it look like it’s not a U-turn and pretending they’re not backing down. Hence their eagerness to pretend nothing is different.As long as the messaging platforms don’t change their commitment then celebrating a small acknowledgement from the Government that the bill is basically unworkable is not a huge issue. reply Arathorn 6 hours agorootparent> What this may be politically is a way of the Government saying they won’t actually do itBut this is the problem: the Government is NOT saying they won&#x27;t actually do it. They&#x27;re saying \"we&#x27;ll do it (when we consider it technically feasible)\". The ability to force 3rd party scanning software is STILL going into law, and that&#x27;s the catastrophic bit!It&#x27;s terrifying that this story has been perceived as a victory, and therefore we can take the pressure off. The OSB is STILL on track to go into law giving the government the right to tell Signal or WhatsApp or Element etc that they either need to do compulsory scanning or they are breaking the law.I am literally receiving emails from Element customers and suppliers which begin:> Saw that the government backed down from their plans last night and immediately thought of Element – you must be pleased!...which just leaves me speechless. I&#x27;m almost wondering if there&#x27;s a deliberate misinformation campaign here to prematurely claim victory in order to derail the attempt to protect encryption in the bill. reply Arathorn 6 hours agorootparentand another datapoint at https:&#x2F;&#x2F;www.reuters.com&#x2F;technology&#x2F;uk-minister-says-position...> \"We haven&#x27;t changed the bill at all,\" she told Times Radio.> \"If there was a situation where the mitigations that the social media providers are taking are not enough, and if after further work with the regulator they still can&#x27;t demonstrate that they can meet the requirements within the bill, then the conversation about technology around encryption takes place,\" she said. reply pg_1234 7 hours agoparentprevWith the way the law is going the UK could demand that Tech providers provide backdoors into end-to-end encryption.The providers can refuse.The UK can then demand that such apps are not available in the UK.HOWEVER ... the providers can build WASM equivalents that run in the phones browser. These can be available elsewhere in the world, and there is no way to stop UK residents from installing them. If there is no other way to have end-to-end encrypted messaging, some provider WILL offer this ... and they&#x27;ll make it pretty slick. You can try prosecute each user (not much chance of success).Legislation that fights well implemented secrecy will always eventually loose, as the government becomes just one more hostile actor, which the tech is already set up to protect against.If the government pushes too hard, all that happens is that encrypted messaging moves out of app stores into the open internet ... and then, not only can they not see the content, they can barely see who is using it. reply nonrandomstring 5 hours agorootparent> Legislation that fights well implemented secrecy will always eventually loose, as the government becomes just one more hostile actor, which the tech is already set up to protect against. If the government pushes too hard, all that happens is that encrypted messaging moves out of app stores into the open internet ... and then, not only can they not see the content, they can barely see who is using it.This is insightful. The mistake the UK government is making lies in it&#x27;s naked aggression.It&#x27;s become sandwiched in hostility toward Big Tech, and the people. And it&#x27;s a no win situation.It literally wants to get in the middle, and that seems a sign of great fear of losing power in the digital age.Fundamentally our government lack the humility to engage in meaningful, evidence-based, debate with all parties, which would be extremely difficult but necessary.Of course encrypted messaging is already out on the open internet. It&#x27;s just used for social messaging by a relative minority. The reason governments love (read: awkwardly tolerate) big platforms is they concentrate use, where they hope it can be \"kept an eye on\".For me this is \"Police and thieves in the street, fighting the nation with their guns and ammunition\"It&#x27;s a three way fight in which the most important group - the people - are unarmed, indeed entirely excluded.What we tried to do on https:&#x2F;&#x2F;cybershow.uk is to present some accessible banter that helps the main stakeholders - children and vulnerable people - get a better fix on the issues, and have a voice. reply ajb 22 hours agoprevIt&#x27;s a little unclear, but my reading of this is that the power to do it will still be in the law, requiring at most secondary legislation to put into effect (perhaps not even that) if they think they ever have enough leverage over messaging providers, or are willing to spend the political capital. Not a great place to be in really, but better than it actually being deployed. reply makingstuffs 20 hours agoparentI’d bet my life we start to see a massive influx of bad press aimed at messaging providers, focusing on how criminals are using their services, over the next few years.When the general sentiment of the average Dave is ‘encryption === bad’ this BS will rear its head again.Seems to have been the standard play for governments of this country for decades now. reply monksy 18 hours agorootparentGreat examplehttps:&#x2F;&#x2F;www.wired.com&#x2F;story&#x2F;apple-csam-scanning-heat-initiat...Heat initiative is basically non existent on Google. Not much of said about how they&#x27;re funded or who is apart of itTheir website is protectchildrennotabuse.orgHas a CEO with experience in running charitable orgsThey&#x27;re explicitly focused on client side scanning and reporting on the iPhone.Honestly if you&#x27;re reading this archive the website and I think that&#x27;s a smoking gunArchived http:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20230000000000*&#x2F;https:&#x2F;&#x2F;protectch... reply ThePowerOfFuet 10 hours agorootparentheatinitiative.org was registered 2023-08-23... so the paint is barely dry. Their privacy policy also turns up nothing. reply chimen 16 hours agorootparentprevIt&#x27;s either terrorism or child pornography. In my country (Romania) they use to call football hooligans whenever a protest is being made on a bigger scale just so they can put us all in the same boat and have an excuse to use armed forces and disperse everyone on the basis that the event was not peacefully done.Most of the people I talk to are brainwashed anyway and will happily accept it - just give it time. The discussions over privacy always end-up with something like \"I have nothing to hide anyway\". reply lo_zamoyski 15 hours agorootparent> \"I have nothing to hide anyway\".People who make that argument should be forced to have high def webcams installed in their bedrooms and bathrooms. reply heavyset_go 14 hours agorootparentThis would make the most sense if the goal was to actually stop child abuse, given that the majority of it happens in the home. reply fbdab103 13 hours agorootparentBy the people they know. More likely to be assaulted by family than a stranger. reply ChrisRR 7 hours agorootparentprevPeople who make that argument should give us their credit card numbers reply andrepd 10 hours agorootparentprevNot even that: just say sure, give me your phone and pin, and let me read your messages and view your photos.Guaranteed not 1 person will take you up on that. reply jiveturkey 20 hours agorootparentprevYes, so much so that there&#x27;s a term for this: manufactured consent. reply phero_cnstrcts 18 hours agorootparentProblem, reaction, solution. reply edandersen 17 hours agorootparentprevMaybe they&#x27;ll get the nudge unit out for another round. reply LMYahooTFY 11 hours agorootparentprevI agree. And they&#x27;re intelligent (pun intended), so they&#x27;ll select demographics from those of us who opposed them and illustrate extremist scapegoats most outrageous to us.I think this is too often not understood or forgotten. reply pydry 20 hours agorootparentprevThey already deployed M&C Saatchi against it:https:&#x2F;&#x2F;www.techdirt.com&#x2F;2022&#x2F;01&#x2F;19&#x2F;uk-has-voyeuristic-new-p...https:&#x2F;&#x2F;www.rollingstone.com&#x2F;culture&#x2F;culture-news&#x2F;revealed-u...All about saving the children. From everybody except Prince Andrew, it seems. reply _bohm 18 hours agorootparentSome anonymous entity has been putting up posters in my neighborhood decrying Apple for \"allowing\" CSAM to be stored on iCloud. Very creepy propaganda campaign. reply callalex 15 hours agorootparentThose posters are almost certainly plastered up by someone who genuinely believes in the cause. They have been manipulated by corrupt media, but it is a tactical error to assume that a political party is directly paying for such poster campaigns. reply heavyset_go 14 hours agorootparentIt&#x27;s also guerilla marketing 101, and they wouldn&#x27;t be the first company, interest group or marketing agency that used those tactics to promote their products, interests, etc. reply blowski 19 hours agorootparentprevI don’t remember seeing this campaign. Are there any links? reply rentnorove 17 hours agorootparentThis isn&#x27;t the same ad as described in the article, but is a government funded Saatchi one from around the same time: https:&#x2F;&#x2F;www.noplacetohide.org.uk&#x2F; > The campaign is funded by the UK Government and has been developed by a steering group of child safety organisations with support from M&C Saatchi. reply pydry 17 hours agorootparentI think that was the website displayed on the adverts. reply ChrisRR 7 hours agorootparentprevJust look at how much they attacked encryption after the 7&#x2F;7 bombings, despite being organised via plain SMS reply csomar 10 hours agorootparentprevTheir problem is that they lost a lot of influencing power. Only old people are still watching the TV or trusting the old media. And although they do vote more, their days are numbered. reply staplers 12 hours agorootparentprevBitcoin is an example of this already played out.News cycle perpetuates bitcoin == bad so everyone you know just repeats \"scam\" and points to criminals.Meanwhile the largest institutions and richest people are investing heavily due to its revolutionary nature. Just look at all the ETFs coming out (Blackrock, Fidelity, etc).Once they are fully setup you&#x27;ll see the news cycle change sentiment. Rinse, repeat, with any technology. reply re-thc 12 hours agorootparent> Meanwhile the largest institutions and richest people are investing heavily due to its revolutionary nature.Is that why are they investing? Do investors care if it&#x27;s revolutionary or that they just get high returns?E.g. a lot of \"coins\" have promised high returns that were obviously not sustainable. reply staplers 9 hours agorootparentFeel free to reply what makes bitcoin bad in a way any different from other high tech. reply r_hoods_ghost 8 hours agorootparentNot the patent but... incredibly environmentally destructive by design. Utterly privacy violating as you&#x27;re publishing every transaction you make for the world to see on a public ledger so now your neighbour (and government) get to know about your badger fetish. Non reversible transactions are an invitation to fraud and theft and make routine errors like overpayments and payments to the wrong address potentially disastrous. Not to mention the \"problems\" it claims to fix like instant, fee free transactions and easy international transfers have been fixed for many years in countries with modern banking systems (i.e. not the USA) Etc. Etc. Etc. reply andybak 10 hours agorootparentprevNice try. reply staplers 9 hours agorootparentFeel free to reply what makes bitcoin bad in a way any different from other high tech. reply worik 10 hours agorootparentprevJust because \"they\" say it&#x27;s bad, does not make it goodBitcoin is bad.Even a broken clock is right twice a day.... reply onion2k 9 hours agorootparentEven a broken clock is right twice a day...That would depend on how it&#x27;s broken. reply worik 8 hours agorootparent...hmmmA broken clock can be right twice a day reply staplers 9 hours agorootparentprevFeel free to reply what makes bitcoin bad in a way any different from other high tech. reply worik 8 hours agorootparentIt is too volatile to be a useful store of valueTransaction costs are too high to be useful medium of exchangeThe waste it generates, as its central operation to have artificial scarcity is definitely bad.Bitcoin is very bad reply thefurdrake 3 hours agorootparentprevOutcome. replyhalJordan 21 hours agoparentprevYeah that was my reading as well. The legislation isn&#x27;t being changed. The statement even says \"We know you can develop [the methods to access], and we still have the authority to order it.\"The only relevant part of from op is the govt acknowledging that 2+2 = 4. But it fails to acknowledge that if they want to get 5, they can still order the equation to be 3+2. reply nonrandomstring 21 hours agorootparentThrough most of history government always has the power, but the question is whether it has the legitimacy.In this case it has the legitimacy, but lacks the power.This is an unusual turn.We need online safety for kids. The aims of this bill should obtain widespread support from everyone.But instead of carefully researching and implementing difficult ideas, framing it properly and obtaining permission from the people - a remit to empower us to embrace online safety on our own terms - it&#x27;s taken a strictly 20th Century \"Mother knows best, think of the children\" approach and made this a battle with Big Tech.It is laughably \"Yes, Prime-Minister\" in its clumsiness. We have anachronistic throwbacks in charge. reply thereddaikon 21 hours agorootparentPeople might be more receptive if the UK government had shown any real intention of going after pedos before this. But the number of scandals and coverups indicate they dont. And this is little more than an excuse to make it easier to spy on their subjects. reply andrepd 10 hours agorootparentIndeed. From Jimmy Saville to Prince Andrew to Rochdale gangs. Nobody in charge seems to be much inclined to protected savagely abused children. reply ChrisKnott 20 hours agorootparentprevThis comment could only be made by someone who gets all their information second-hand from internet comments, and has never worked in child protection. reply generationP 20 hours agorootparentThe UK has a recent history of sweeping child abuse under the rug when it involves minorities or famous personalities. See https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Rotherham_child_sexual_exploit... or https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Jimmy_Savile_sexual_abuse_scan... for two examples. reply vinay427 15 hours agorootparentIt also has a recent history of racial discrimination targeting minorities as a result of false accusations of child abuse, so it&#x27;s worth making sure there isn&#x27;t an overcorrection particularly in a society where people sometimes still attribute random individuals together based on perceived ethnic origin. See https:&#x2F;&#x2F;www.theguardian.com&#x2F;uk-news&#x2F;2023&#x2F;jan&#x2F;04&#x2F;how-eleanor-... for one example. reply ChrisKnott 9 hours agorootparentprevYou&#x27;ve sleight-of-handed out \"government\" for \"the UK\" and linked two stories which don&#x27;t really involve the UK government.Furthermore if you read your own links, you will see that the \"recent history\" of the Rotherham offending is that there is an enormous police investigation costing tens of millions of pounds and a large number of people have been convicted, and the \"recent history\" of the fallout from Jimmy Saville is that another extremely well-funded enquiry was conducted (IICSA).The general idea that the UK is particularly accomodating to paedophiles, or that an unusual number of powerful people in the UK are paedophiles, is not supported by evidence.This meme mainly comes from a serial liar, Carl Beech, who&#x27;s lies were credulously reported by people who should have known better. reply generationP 8 hours agorootparentLocal police is a part of the government as far as the laws in question are concerned; it&#x27;s them who will be using or abusing the surveillance powers granted by the law. And the Rotherham scandal took two decades to be addressed, due not least to fierce political interference. reply ChrisKnott 7 hours agorootparentWhat surveillance powers? Granted by what law? reply PawgerZ 2 hours agorootparentDon&#x27;t be dense. Look at the thread you&#x27;re in reply ChrisKnott 39 minutes agorootparentThe Online Safety Bill doesn&#x27;t grant any surveillance powers, as far as I&#x27;m aware...? replybasisword 19 hours agorootparentprevJust yesterday it became clear the foreign office will not release files relating to Prince Andrew until 2065 - long after he&#x27;s dead. Seems like a pretty obvious cover up. reply ChrisKnott 9 hours agorootparentIt seems like \"a pretty obvious coverup\" to you because you are conspiratorially minded. It&#x27;s actually just the FCDO explaining what the law has always been.Should the law be changed? Yes. Is this evidence of a \"cover-up\"? No. reply callalex 15 hours agorootparentprevThis is not a useful or constructive statement. I haven’t worked in child protection, is there something you’d like to teach me? reply MattPalmer1086 19 hours agorootparentprevWhat has the UK government done to protect children recently? In the last decade, say. reply ChrisKnott 10 hours agorootparentThis question is really too broad to answer. What sort of thing are you looking for? For a general overview of the whole system, this strategy is the best place to start.https:&#x2F;&#x2F;assets.publishing.service.gov.uk&#x2F;government&#x2F;uploads&#x2F;... reply MattPalmer1086 8 hours agorootparentThanks. I guess I meant either new primary legislation that improves something tangible, but more importantly, provided more resource.As far as I can see, it&#x27;s still funded from local authority budgets.I worked briefly in children&#x27;s homes a long time ago. Kids were placed in assessment centers where they were supposed to be evaluated and sent on to an appropriate home. But there were no places for them, and they stayed in this temporary place for years.Not sure if much has improved in the last decade. reply ChrisKnott 7 hours agorootparentFor example, the offence of \"Sexual communication with a child\" aka \"grooming\" was created in 2017 (by Serious Crime Act). Enforcing this law is one of the main causes of the arguments over the OSB. replyjackjeff 9 hours agorootparentprevWe need road safety. But no genius in gouvernement has created a law that’s says it’s illegal to sell cars that CAN have accident. Generally the government goes after bad drivers instead of car companies.I really don’t understand why Big Tech should magically stop every crime on earth: child abuse, racism, harassment, etc…I think the supreme Zuck is a dick, but pulling out of the UK market was the right move. reply whatshisface 21 hours agorootparentprevI already have a remit to embrace online safety on my own terms - I can install a local filtering system if I choose to. reply nonrandomstring 20 hours agorootparentOf curse, but it&#x27;s not terribly easy for the average person to put sophisticated filters into multiple content pipelines on every child&#x27;s device (imagine having 4 or 5 kids of different ages and needs).So a solution I think we brainstormed on the show was mandating open interoperable APIs that allow easy insertion of (presumably commercial or open source) plugins into the system, within the user&#x27;s end-to-end digital estate, under the control of the user (parent) and completely rejecting the MITM and endpoint compromise via back-doors that the government naively proposed.In many ways that would take a much bigger stick to Big Tech,It also transitions the definition of \"online harms\" to those defined by the guardian&#x2F;parent rather than problematically allowing the State to define harms and control the selectors.What that says to me is that the government are dishonest about the real aims of the bill.And further, as a consequence, it crushes my belief that the government even truly care out child safety except as a vehicle to greater tyranny. reply duskwuff 13 hours agorootparent> So a solution I think we brainstormed on the show was mandating open interoperable APIs that allow easy insertion of (presumably commercial or open source) plugins into the system, within the user&#x27;s end-to-end digital estate, under the control of the user (parent) and completely rejecting the MITM and endpoint compromise via back-doors that the government naively proposed.What you&#x27;re proposing would likely enable the creation of some fairly invasive stalkerware. Don&#x27;t forget that 1) just because a feature says it&#x27;s for use by a parent on their child&#x27;s device doesn&#x27;t mean that it can only be used in that context, nor that 2) not all parents have their children&#x27;s best interests in mind. reply robertlagrant 20 hours agorootparentprev> on every child&#x27;s deviceDevices only in public areas in the house. Dumbphones for emergencies. reply Jigsy 21 hours agorootparentprevOnline safety for kids begins at home. The problem is most parents are just too lazy. reply anonymous_sorry 20 hours agorootparentOr too busy? In plenty of families both parents have to work hard to make ends meet.Not helped by the fact that children are growing up in a completely different environment to the one their parents remember. Familiarizing myself with TikTok or whatever the kids are into these days would fill me with dread. And the way platforms work means my experience of them would differ dramatically from a child&#x27;s anyway. reply basisword 19 hours agorootparent>> Familiarizing myself with TikTok or whatever the kids are into these days would fill me with dread.You don&#x27;t need to. Don&#x27;t give them devices until they&#x27;re 16, and then implement the built in parental controls that come on every smartphone. When they are 18 and can buy their own, they can do what they want. I&#x27;m guessing your actual issue isn&#x27;t familiarizing yourself with TikTok etc, but is instead facing conflict. I&#x27;m not saying it would be easy but pretending the above isn&#x27;t a workable solution is self-deception. reply anonymous_sorry 18 hours agorootparentNo, I&#x27;m just trying to empathise with busy parents rather than write off parents who struggle with this stuff as lazy.I know some parents give their children devices for safety reasons. For others, I guess they don&#x27;t want their children to be socially isolated if all the other 14 year olds are chatting on messenger.My only point was that it can be hard, and that not everyone who fails at it is lazy. It sounds like we are mostly in agreement. reply basisword 3 hours agorootparentOh yeah I get that. My point was more that there is a simple solution that requires almost no time investment (i.e. a good option for busy parents). It might not be for everyone but it’s a solution that is to easily dismissed very often. reply hackncheese 20 hours agorootparentprevWish I could upvote this harder lol. Parents really dont have enough time&#x2F;energy to do this better than people who are trained in software&#x2F;legislation. Especially if they have more than 2 kids&#x2F;are single parents reply SpaghettiCthulu 15 hours agorootparentSounds like we need a cultural shift away from governments involving themselves in parenting to governments ensuring parents have adequate time to parent. reply scarface_74 16 hours agorootparentprevSo you trust the competence and the ethics of the government? reply callalex 15 hours agorootparentprevModern devices are chock full of features that will work hard for parents while they aren’t even thinking about it. If the can’t be bothered to turn those features on, they shouldn’t be providing the devices in the first place. reply Hermitian909 20 hours agorootparentprevThis is just as lazy a take as the UK government though.Many societal problems would be trivial if you could get perfect compliance from the population. You can&#x27;t, so if you&#x27;re interested in solving problems you need to be willing to grapple with the world as it is. So far as I can tell online safety has not meaningfully improved since the late 90s - \"enforce safety at home\" has been the advice for all of that time and it has never worked.I don&#x27;t have a solution but \"blame the parents\" seems to be a very clear non-answer without some plan for how to make creating safety at home more easily actionable. reply Jigsy 20 hours agorootparentIt isn&#x27;t, though. I&#x27;d say it&#x27;s 50&#x2F;50.I started using the Internet in 1998, and the only advice my parents gave me was \"Don&#x27;t reveal anything about yourself online.\" (Thankfully I heeded their warning and still to this day I&#x27;m very guarded about disclosing any form of PII.)Whilst admittedly a lot has changed in the last 25 years, I&#x27;d say only half the parents will actually try to keep their kids safe online.The other half will sit around watching crappy reality TV shows getting angry at their five-year-old children finding porn on their own personal smartphone* because they don&#x27;t want to look up how to prevent them from doing that, and instead absolve that responsibility to the gov&#x27;t......who in turn use that as an excuse to censor the Internet.*not entirely sure why a five-year-old needs a smartphone, but anyway. reply Hermitian909 10 hours agorootparent> I&#x27;d say only half the parents will actually try to keep their kids safe onlineOk, so is our answer then to abandon safety for the remaining 50% of families? Do we think that&#x27;s fine, or tragic? I&#x27;m going with the latter. replytimenova 16 hours agoparentprevThey said its technically unfeasible right now. A backdoor key is really not feasible for E2E Encryption. So, that would mean it would only become technically feasible when they ask companies to send over all encrypted packets and break the encryption themselves.Maybe that&#x27;s why they want to keep a provision for it in the law, but develop the technology to break (current) public-key encryption schemes themselves?But then they&#x27;ll always be chasing, as the world moves to post-quantum encryption and they won&#x27;t be able to break it anymore. So it&#x27;ll always remain technically unfeasible.Its likely that from a political standpoint, it was easier to deem the bill as technically unfeasible now rather than kill it completely. reply cookiengineer 10 hours agoparentprevSetting my personal opinion on this law proposal aside, I think that the UK legislation lost its teeth with Brexit. It&#x27;s just loud barking for the sole purpose of getting CEOs on the table.Imagine their influence if they would have stayed in the EU, and if France would have joined them (which they usually do when it comes to more governmental oversight of the executive branches of the government).What scares me a little now is that there was a loss of balance, which is important for any democracy to make progress. And if Big Tech&#x27;s reaction is always \"well then we just pull out of your market(s)\" then it&#x27;s gonna be an empty threat after the third time.I don&#x27;t know how the reactions to these events will be like, but most likely we&#x27;ll see an increase of propaganda press statements on \"how bad secure messaging\" is, trying to push the narrative into a different direction. reply disgruntledphd2 9 hours agorootparentNah, this nonsense popped up at EU level also and got slapped down by the Parliament and Council suggesting that enough politicos understand why this is important, for now at least. reply ciwolsey 15 hours agoparentprevCorrect, there&#x27;s been no ammendment to the bill, only promises it&#x27;s not going to be used. reply Mindwipe 18 hours agoparentprevThe wording has not been changed at all, so it&#x27;s still being deployed. They just seem to have made a clumsy fudge statement at a meeting about it. reply cryptonector 19 hours agoparentprevThat&#x27;s always the situation. reply tremorscript 10 hours agoprevI don&#x27;t really like the headline, it makes it sound negative.Big Tech tends to have negative connotations, nowadays. So, here the FT is trying to say that a democratically elected government is living in fear of private firms.While it may be true that our government are now living in fear of not just Big Tech but all types of Big whatever, the fight was way beyond just big tech. Sure Big Tech helped but it still is a badly written and badly thought out think-about-the-children type law that was being fought by everyone not just big tech.I didn&#x27;t bother to read the article. Headlines are important There are other things to rage about Big Tech, this is not the one. reply p-e-w 10 hours agoparentYou&#x27;re making it sound as if the headline was poorly written, perhaps by accident or by a poor writer.I can assure you that isn&#x27;t the case. Whoever wrote that headline is a copywriting genius. The headline conveys almost the exact opposite of what really happened, without being factually wrong.That doesn&#x27;t happen by accident. reply shawabawa3 9 hours agorootparentDoes it?For me the headline conveyed exactly what happened... reply zo1 8 hours agorootparentprevCurious what you would say the opposite is? reply Terretta 3 hours agorootparent> Curious what you would say the opposite is?“UK has not backed down in tech encryption row, minister says”https:&#x2F;&#x2F;www.reuters.com&#x2F;technology&#x2F;uk-minister-says-position... reply esperent 8 hours agorootparentprevCan you give an example of what you think a better headline would be in this case? reply j0ej0ej0e 9 hours agoparentprevlol the uk gov has more negative connotations than bigtech.Also not quite democratic when the uk electorate last voted for a gov in 2019 but we have had 3 prime ministers since all with vastly different strategies, where the last 2 were chosen by anyone who wants to pay for a membership to the tory party, including fake identities made by journalists who registered from france.If you had some context, bigtech are actually fighting to keep encryption alive and are the goodies in this story.Context is important, so is reading. But thanks for your insight in the article you didn&#x27;t read. reply jabradoodle 9 hours agorootparentI think you misunderstood OP. Their point is the article headline sounds like democracy loosing out to evil big tech; they, like you, don&#x27;t see it that way. reply shawabawa3 8 hours agorootparentTo anyone vaguely familiar with the story, or the UK government, the headline doesn&#x27;t sound like that at all reply dewclin 8 hours agoparentprevSimilar story (no pun intended) in The Guardian [1]:> UK ministers seek to allay WhatsApp and Signal concerns in encryption rowNothing to see here folks, just a minor dispute between the Gov and two companies ...[1] https:&#x2F;&#x2F;www.theguardian.com&#x2F;media&#x2F;2023&#x2F;sep&#x2F;06&#x2F;whatsapp-signa... reply simonjgreen 10 hours agoparentprevFT is a conservative-centre aligned news outlet, so stands to reason they&#x27;d favour their preferred party reply creativenolo 9 hours agorootparentDo you read it regularly? It is centre aligned but as a reader, I wouldn’t say it was Conservative aligned. It certainly is a mile off its alignment with the “Tory press” that typically set the new agenda. reply frereubu 9 hours agorootparentI&#x27;m a subscriber and I&#x27;d say it is small-c conservative (which I&#x27;m not really, I just appreciate that it&#x27;s relatively open about its biases and enjoy the quality of writing), but it isn&#x27;t aligned with the Conservative Party, which has become almost entirely unmoored from reality. reply ftreader4350 8 hours agorootparentUsually I would tend to agree that the articles are well written and well researched, however after reading this steaming pile of surface level dross on a subject I have technical knowledge of, I might be less trusting of their editorial slant and quality of journalism in future. reply ycombinete 8 hours agorootparentThis is called Knolls Law of Media Accuracy:“everything you read in the newspapers is absolutely true, except for the rare story of which you happen to have firsthand knowledge”Edit: actually I was thinking of the Gell-Mann Amnesia Effect. They both work though.Both discussed in this thread:https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=13624175 replyascorbic 21 hours agoprevThe whole UK government is run via WhatsApp. The threat to withdraw service should have concentrated minds. reply bodge5000 13 hours agoparentThat was certainly true for Boris, I can only imagine if he was in on it a lot of the other senior tories would have been as well.That&#x27;s obviously not a good thing at all, and also I would think illegal, but I guess at least it&#x27;s encrypted. The irony. reply eastbound 9 hours agorootparentWasn’t Boris russian-backed and therefore using Signal? reply hn_throwaway_99 21 hours agoparentprevThis isn&#x27;t true, is it? If so that&#x27;s slightly terrifying. reply giobox 20 hours agorootparentI think its increasingly true of several countries, not just the UK. Any State with strong Freedom of Information legislation not surprisingly creates incentives for certain political operatives to want to avoid exposure by use of unofficial channels further out of reach of FoI - private WhatsApp groups etc etc. I don&#x27;t see this as any different than the instances of private email service mischief that has occurred in a lot of States too over the last decade (avoiding use of official email accounts for contentious discussions). reply rollcat 17 hours agorootparentI think that if you hold a position in the government, all of your communication (including private email, chats, etc) should be subject to public scrutiny. A government official should be defined not as someone who is holding power, but as an elected representative of the people. reply iamdelirium 14 hours agorootparentDid you even think out this train of thought? Does this cover medical communications, military secrets, private chat between family members, etc? reply rollcat 7 hours agorootparent> Did you even think out this train of thought?Of course not, I&#x27;m just a random person on the Internet ;)The problem here is that a basic loophole is being abused to defeat the spirit of the law, thus making the operation of the government less transparent. The consequences should ramp up in proportion with the level of the abuse. You&#x27;re using private WhatsApp to conduct state business? Your WhatsApp chat logs should be subject to FoI. If you want to keep family chat private, then move it to Telegram, and DON&#x27;T use Telegram to conduct state business, because otherwise your Telegram chat logs are next up to be scrutinized. I don&#x27;t think the \"spirit\" of this idea is going too far?> military secretsThere already are established procedures and laws for dealing with state secrets, including strategic information such as submarine designs, locations, nuke launch codes, etc. Whatever FoI&#x2F;transparency laws are in place, they need to respect the need for protecting state secrets - that should be pretty obvious. reply moritonal 8 hours agorootparentprev\"should\" being the operative word here. reply midasuni 20 hours agorootparentprevThe political communications are done with WhatsApp. This is illegal of course.There has been no discussion of the obvious national security risk.https:&#x2F;&#x2F;www.theguardian.com&#x2F;law&#x2F;2022&#x2F;mar&#x2F;22&#x2F;uk-ministers-acc... reply kmeisthax 14 hours agorootparentThis isn&#x27;t even limited to the UK. In the US, we have presidents, vice presidents, and presidential candidates all under investigation for mishandling records by running their own e-mail servers. The most charitable explanation being that they don&#x27;t want to have to deal with separate personal and work devices; the less charitable explanation being \"fuck records laws\". reply jiqiren 13 hours agorootparentI was a federal contractor for NASA and let me tell you about government email: quota of 250MB of storage (2010-2012).I spent every morning moving emails with attachments to local folders on my Mac (which had no backups) to keep from going over quota. If I went on a 2 week vacation emails would start to bounce to me.After that fiasco I understood why Colin Powell told Hillary Clinton to just run her own email server (for non-classified communication). reply midoridensha 9 hours agorootparentSo what was keeping the President from just issuing an Executive Order increasing the email storage quota? reply anticensor 7 hours agorootparentThat would require increase in the backing storage. replyafandian 20 hours agorootparentprevThe rules don&#x27;t apply to them.https:&#x2F;&#x2F;www.bbc.co.uk&#x2F;news&#x2F;uk-politics-66165001 reply BookhouseGames 19 hours agorootparentThe rules never apply to them. reply amiga-workbench 20 hours agorootparentprevIt&#x27;s not completely untrue, there was a whole hoo-hah over getting Boris Johnsons WhatsApp messages. They use it to get around the requirement that official communications be logged and available for later scrutiny, much like a bank has to retain communications in case of an audit. reply gridspy 20 hours agorootparentAssuming that is true, it&#x27;s amusing that the politicians are trying to strip communications privacy from the masses while desiring it themselves. reply mcjiggerlog 18 hours agorootparentYou also need to understand the context that in the UK, and most of the west other than the US, WhatsApp is just the default communication channel for messaging. If you text someone, it&#x27;s just assumed it&#x27;s via WhatsApp. reply RegW 17 hours agorootparentI don&#x27;t think so. When you text somebody it&#x27;s assumed it&#x27;s SMS, but if your friendship circle is on Android then in actual fact it&#x27;s Google Messages.All the same benefits: end-to-end encryption and data mining. reply jonp888 11 hours agorootparentNo. I have lived in the UK for 35 years and I didn&#x27;t even know Google Messages existed until you mentioned it. WhatsApp is the default and I would only use SMS in the rare case that someone did not use WhatsApp.There is no automatic integration on Android phones between SMS and another network the way iMessage is automatic. reply RegW 3 hours agorootparent> I have lived in the UK for 35 years and I didn&#x27;t even know Google Messages existed until you mentioned it.Exactly, even though it is the default messaging app on Android and receives their SMS texts for them, most users don&#x27;t realise they are using it or that when they \"send a text\" to another Android user it is actually sending the message over data.Anyway my understanding is that a text is a SMS text, and a whatsapp is a whatsapp message. I know that Google Messages hides itself by sending SMS texts when the number isn&#x27;t known to Messages, and I guess Whatsapp does this too. I also live in the UK and occupy a space within multiple different communities which insist on different messaging apps. May be I just don&#x27;t the option to be so vague. reply 0xFEE1DEAD 8 hours agorootparentprevGermany chiming in to agree.WhatsApp is the default reply vore 9 hours agorootparentprevI think what the parent meant was that if someone wants you to \"text\" them, they actually mean to send a message on WhatsApp and nothing to do with whatever texting on a given platform is.Also, how are you data mining end-to-end encrypted messages? How can you get data out of messages you can&#x27;t even see the contents of? reply RegW 3 hours agorootparentWell I assume that the end-to-end encryption is honoured, and the message is not parsed in any way at either end. I also assume that the end-to-end reference is between your phone and the phone of the intended recipient, and not between your phone and the server routing the message. I don&#x27;t have access to the source so I don&#x27;t have any way to prove that, but with the objections by Facebook&#x2F;Whatsapp&#x2F;Meta to breaking the encryption this seems to be the case.No, the data-mining with these apps is in your list of contacts. Whatsapp takes these and builds you into a network. Its not what you say, it is who you are talking to and when. That is valuable.When you sign up, you up load your contacts to Whatsapp. If you try to prevent it, it will insist and not work until you do. You can try to clear down your contacts and sign up without any. However, it will still take your number and look it up in the contacts of all those who have your number. It now has your name and any details your contacts have chosen to keep about you. replyjlokier 14 hours agorootparentprevAlso worth a note that Boris Johnson (former prime minister for those far from the UK) himself said he was happy to share all those WhatsApp messages on his phone with the investigation team, and it was a government department that stepped in to refuse access to those messages, repeatedly. They considered the WhatsApp messages too sensitive for an official investigation to read. reply jlokier 1 hour agorootparentI think the replies and downvoter may have missed my intended point, which is that WhatsApp seems to be simultaneously treated as not an official channel and yet also treated as containing officially sensitive messages.Whether Boris was telling the truth or not was irrelevant to my intended point. reply paledot 13 hours agorootparentprevWell, if Boris Johnson said it, it must be true. It was his radical honesty that cost him the Prime Ministership, after all. reply 3np 12 hours agorootparentThis does not reflect my experience at all. 3&#x2F;5 would not vote again. reply lozenge 8 hours agorootparentprevHe wanted to share messages from mid 2021 onwards, not covering the onset of covid. reply sigwinch28 16 hours agorootparentprevI don’t think it’s as much official government discussion as it is party chatter. See lockdown party scandal, Forde report, typical CCHQ party lines. reply nlitened 11 hours agorootparentprevWhat they would use instead? Plain-text emails? Plain-text SMS? Paper mail? reply fisian 9 hours agorootparentFrance has their own version of Matrixhttps:&#x2F;&#x2F;joinup.ec.europa.eu&#x2F;collection&#x2F;open-source-observato... reply thefurdrake 3 hours agorootparentprevThis question confuses me. Are we really in a year where people don&#x27;t know you can securely encrypt email within an organization? This is a solved problem, and it&#x27;s been solved for decades.It&#x27;s confusing because you nailed \"Plain-text emails\" but completely ignored signed, encrypted emails for some reason. reply lozenge 8 hours agorootparentprevEmail using a secured mail server so that it doesn&#x27;t go across the Internet? reply fulafel 11 hours agorootparentprevSignal? reply tailspin2019 20 hours agorootparentprevIt does seem to be slightly true reply borissk 16 hours agoparentprevDid Mr Johnson provide his WhatsApp message history to the government? reply Jigsy 21 hours agoprevI&#x27;m not sure why people are assuming they&#x27;ve abandoned the idea. They&#x27;ve simply said it&#x27;s not technically feasible.Which implies that later - through the power of delusions of grandeur - that it will become feasible. reply glitchc 21 hours agoparentNot technically feasible is akin to abandonment in government circles.To revive this, they would have to find an expert to attest that it is technically feasible to have security with a backdoor that government can access, but at the same time is impossible for malicious entities to access.Ergo, this is technically dead, which is the best form of dead. reply orlp 21 hours agorootparent> To revive this, they would have to find an expert to attest that it is technically feasible to have security with a backdoor that government can access, but at the same time is impossible for malicious entities to access.> Ergo, this is technically dead, which is the best form of dead.Except it&#x27;s not. There exist such cryptographic trapdoor constructions that are perfectly secure, if the government backdoor key is kept safe.The problem is keeping the government backdoor key safe. But that&#x27;s not a literal impossible technical problem. It&#x27;s much more a social problem.Don&#x27;t get me wrong, I really, really wish what you said was true and we could kill this garbage forever by nature of technical argument. But it isn&#x27;t, so we must keep fighting against it for the real reason: we simply don&#x27;t want this. reply glitchc 20 hours agorootparentwell, by definition if the key is to be used, and to be used more than once, it cannot be kept safe. The key has to go through multiple hands on its way from the senior government official responsible for its safekeeping to the peon assigned to unlock a specific phone at a specific point in time. It could be copied at any one of those points. No amount of technology or cryptography can solve the master key problem. The social problem is the technical problem, they aren&#x27;t distinct. reply ChrisKnott 20 hours agorootparentDoesn&#x27;t this problem exist throughout the tech industry though?Microsoft, Google, Apple etc are keeping the keys that allow you to push updates secret, aren&#x27;t they? reply owlbite 10 hours agorootparentIf a software signing key is compromised it can be revoked and a few weeks later the risk is only to people who don&#x27;t keep their OS up to date. Further, exploited compromises are detectable, especially if exploited at scale.If the backdoor crypto key is compromised, sure they can revoke it (assuming they manage to design a competent system), but all the sensitive information up that point is now available to whoever possesses the backdoor key. Unlike the software signing case, exploitation of the compromise is likely undetectable unless the attacker reveals their knowledge somehow. reply ChrisKnott 6 hours agorootparentThe same is true of SSL traffic to a bank though isn&#x27;t it? If a crime group is intercepted encrypted traffic and saving it, then the keys are stolen, they can decrypt that data.But opponents of the OSB claim it will make communication with your bank less secure - how? reply sebzim4500 19 hours agorootparentprevYeah, but if we&#x27;re honest all three of those companies are more competent than the UK goverment.Source: sometimes interact with the UK government reply Spivak 12 hours agorootparentSo you just make the three companies keep the keys then. People are out here like \"a secure backdoor to encryption is impossible\" and then don&#x27;t even blink for the keys for root CAs which is the basis for the world&#x27;s online security. Or the AWS managed S3 encryption keys.There&#x27;s a lot of of hopium in this thread for people who I think want it to be more impossible in practice than it really is. reply ChrisKnott 6 hours agorootparentIt was never even suggested that the government would have encryption keys. The government do not have access to SSL traffic, but companies are responsible for CSAM uploaded over SSL. reply JimDabell 9 hours agorootparentprev> Microsoft, Google, Apple etc are keeping the keys that allow you to push updates secret, aren&#x27;t they?From yesterday:> the China-Based threat actor, Storm-0558, used an acquired Microsoft account (MSA) consumer key to forge tokens to access OWA and Outlook.com. Upon identifying that the threat actor had acquired the consumer key, Microsoft performed a comprehensive technical investigation into the acquisition of the Microsoft account consumer signing key, including how it was used to access enterprise email.— https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37408776I think Microsoft’s handling of keys is almost certainly far, far more secure than anything the British government would care to achieve. reply skydhash 17 hours agorootparentprev> Microsoft, Google, Apple etc are keeping the keys that allow you to push updates secretGovernments can provide immunity, which companies can&#x27;t do. Companies try not to do these kinds of stealing, governments don&#x27;t care. reply aae42 15 hours agorootparentprevAlso public key certificate authorities reply dwaite 17 hours agorootparentprev> There exist such cryptographic trapdoor constructions that are perfectly secure, if the government backdoor key is kept safe.A big problem with this statement is the term “the government”. If you give the private key to the UK - the US, India and China will want a copy as well.The UK might want to spy on foreign nationals only in the country and only for CSAM, but that doesn’t mean other nations won’t use it for more traditional espionage. reply SpaghettiCthulu 14 hours agorootparentAnd don&#x27;t be naive. The UK absolutely wants it so that it can surveil both it&#x27;s citizens and everyone else (including within other governments) around the world. reply 1letterunixname 15 hours agorootparentprevThe ostensible reasoning is \"think of the children\" horseshit, but history proves such a powerful capability will be abused for unrestrained spying.Key escrow for the entire US and world was floated with the Clipper chip (1993-1996). That was strangled in its crib because trusting thousands of people at NSA or GCHQ to just not stalk people is sheer fantasy, just as the Snowden leaks revealed.iMessage stores the e2ee key in iCloud by default, which effectively makes all of a user&#x27;s communications decryptable by governments and Apple at any time.To offer a centralized service with actual privacy without zero knowledge p2p constructions, then it falls victim to the Lavabit problem. If you want security and plausible anonymity across your own devices, not metadata, then use a fork of Signal such as Session. (Signal is irreparably broken by being tied to phone number, which is a universal tracking device. The only people who use Signal are drug dealers and software engineers who don&#x27;t know any better.)https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Clipper_chiphttps:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Lavabit reply Cyphase 13 hours agorootparentWhy is Signal \"irreparably\" broken? What makes the phone number issue \"irreparable\"? As I understand it usernames and phone number privacy are in the pipeline.I&#x27;m a software engineer who does know; I&#x27;m aware that Signal is currently tied to phone numbers, and I&#x27;d love for it not to be, but I still use it, because it&#x27;s E2EE and easy for non-technical people to use.When there&#x27;s something that&#x27;s easy to use like Signal that uses decentralized cryptographic identifiers and onion routes all traffic, I&#x27;ll start trying to get people to use that. I&#x27;d be happy to hear any recommendations. reply 1letterunixname 5 hours agorootparentIf you have a mobile phone number, the domestic intelligence agency knows exactly where you are at all times and any LEO (without a warrant) can also find you. In addition, there have been numerous CCC presentations showing how insecure the global (excluding US) and (separately) US carriers are guilty of promiscuous metadata trafficking ($$) and insecure SS7 setups. As a consequence, for low $, you can go to any one of several shady websites and find the last location of almost any phone number (person unique ID) globally. There are additional varying exploitable vulnerabilities depending on the exact combination of {handset x carrier x country} to impersonate them, tap their line, reveal their exact location, and redirect their phone number through a third-party handset or even a PBX. These are more expensive and some capabilities are forbidden for all but a few selective intelligence uses.Session (Signal fork) doesn&#x27;t use phone numbers. It&#x27;s pretty well-designed overall and uses an onion routing approach. It&#x27;s already a superset of Signal except it doesn&#x27;t use phone numbers. https:&#x2F;&#x2F;getsession.orgAlso look interesting:* (unproven) https:&#x2F;&#x2F;www.olvid.io&#x2F;technology* (unproven) https:&#x2F;&#x2F;simplex.chatPS: Using regular TOR on home broadband or cloud servers is relatively risky and inefficient. Sybil attacks on it are common. And to network operators and security agencies it gives an easy \"flow tag\" of your uplink and exit node data traffic as automatically suspicious. reply Jigsy 20 hours agorootparentprev> The problem is keeping the government backdoor key safe.Not a problem. Just change the locks every week. [tapping head] reply rightbyte 20 hours agorootparentprevYe I find it somewhat amusing that sharing a private key with the government is technically impossible. I guess you could be philosophical about whether it is private though, in that case.Anyway, I am gladly surprised they seem to back off. reply ncallaway 17 hours agorootparentThe part that&#x27;s technically impossible is _keeping that key secure_.https:&#x2F;&#x2F;www.pcmag.com&#x2F;news&#x2F;master-key-for-tsa-approved-locks...More importantly, the thing that&#x27;s technically impossible is a scheme to detect that the key has become compromised before it is used maliciously. reply rtkwe 2 hours agorootparentprevMake no mistake this is going to come back around again. Fundamentally the state security apparatus will always want ways to peer into messages and break encryption despite the damages that will inevitably cause when their control mechanisms slip. It&#x27;s been explained a dozen times to a dozen different administrations and they always come back asking for access. reply robertlagrant 20 hours agorootparentprev> Ergo, this is technically dead, which is the best form of dead.It&#x27;s an older reference, sir, but it checks out. reply tjmc 14 hours agoparentprevSo excuse what may be my profound ignorance, but aren&#x27;t there 2 unencrypted points in every communication that they could intercept?Very roughly, I assume every Whatsapp message follows something along the lines of:1. Unencrypted input2. Encryption3. Encrypted transmission4. Decryption5. Unencrypted stream to display handlerTechnically - what&#x27;s to stop them from compelling Apple and Google into putting a software keyboard logger inbetween 1 & 2 and another output logger between 4 & 5?Edit: I&#x27;m not saying this backdoor would be secure btw. Of course it wouldn&#x27;t. But that seems to me a separate issue than \"breaking encryption\" reply Havoc 8 hours agoprevSummer break. The “think of the children” and security will be back shortly in a tweaked version reply jll29 16 hours agoprev> A planned statement to the House of Lords on Wednesday afternoon will mark an eleventh-hour effort by ministers to end a stand-off with tech companies, including WhatsApp, that have threatened to pull their services from the UKDear FT, WhatsApp is not a company, the owner of the WhatsApp service is Meta Inc., also the owner of Facebook and Instagram. (It is misleading to citizens that companies can hide behind the names of their acquisitions.) reply greybox 21 hours agoprevThe government are denying the &#x27;U-Turn&#x27; which of course, as always, confirms it :P https:&#x2F;&#x2F;www.bbc.com&#x2F;news&#x2F;technology-66716502 reply simonjgreen 18 hours agoprevWhen privacy is criminalised only criminals will have privacy reply dfawcus 19 hours agoprevThe real question is will Signal, WhatsApp, Apples, etc stick to their principals and withdraw UK service if the Bill passes in its current form?Or will they decide to believe that the powers will not be used, and keep their service in operation? reply nojvek 16 hours agoparentGoogle pulled from China, but Microsoft bowed down.It’s really upto a few execs at tech giants betting how much money is at risk.For UK and Canada, the state isn’t competent at building a clone of social networks with wide adoption.China can throw insane money, regulation and Human Resources until they get what they want. reply nonethewiser 16 hours agoparentprevCan you elaborate? The article is paywalled. In what sense did they “back down” if not by backing down from the legislation that would violate privacy? reply SKarasu 8 hours agorootparenthttps:&#x2F;&#x2F;archive.ph&#x2F;HDnUa reply arichard123 20 hours agoprevTheir purposes have been served. Values have been signalled. Implementation was never going to be possible, which made it all the better a choice, as it means you don&#x27;t have to actually do anything except blame tech companies when it doesn&#x27;t happen. Job done. reply happytiger 19 hours agoprevIt’s time that encryption rights become human rights. reply owlbite 10 hours agoparentThis is a right-wing Tory government. The same people who initiated the Brexit mess mainly because they wanted to opt out of human rights (sorry I mean \"reclaim their sovereignty\"). reply b800h 21 hours agoprevThat bit isn&#x27;t as bad as the part that says you can&#x27;t run an interactive service without age verification though.... reply seabass-labrax 18 hours agoparentWhat&#x27;s weird about that is how it has leapfrogged law in &#x27;real-life&#x27;. Minors aren&#x27;t prohibited from talking to adults face-to-face, and you don&#x27;t need to show proof of age before starting a conversation with someone! This new bill would turn the internet from an environment where nothing is age-restricted (in practice, if not in law) to one where everything is^.^ Again, in practice if not in law: since no service provider could fully identify and restrict all &#x27;adult&#x27; material in real-time, they will be effectively unable to serve any interactive content to minors. Only if the penalties for non-compliance were low enough would the largest of companies take that risk. reply dmje 21 hours agoparentprevThis is the bit that is scaring me, as someone who manages website for clients.. reply b800h 20 hours agorootparentIt blows a hole in all sorts of internet activities. We&#x27;re going to have to rework a lot from scratch when it goes through.And of course the big internet companies won&#x27;t complain about it because it gives them legislative capture of the web. reply codeptualize 20 hours agoprevYou see this time and time again, some initiative to \"just introduce some backdoors, what could go wrong\", and then it takes some time for people who understand what it actually means to convince them that it is in fact a really bad idea and it would be a giant disaster. reply Clamchop 19 hours agoparentUnfortunately I suspect they will just keep trying it out over and over until the public gets too exhausted to rally against it anymore. reply Nifty3929 16 hours agorootparentOr until the voters wise up and start electing people that believe and espouse imperfect freedom rather than perfect control. reply codeptualize 10 hours agorootparentprevI’m not too worried about that as I assume it’s not (just) the public but also lobby groups and industries who have an interest in this.It’s not that hard to explain what would happen and any politician will understand doing something like this would be quite bad for their career.I do agree that they will keep trying, but the chance of it happening seems slim, as there is just no way to implement this. reply exodust 12 hours agorootparentprev> until the public gets too exhaustedI see this theory pop up around here every few months. Where does it come from? I suspect it&#x27;s a meme without basis.Can you please name one time in history where the public gets \"exhausted\", and as a consequence unwanted legislation is passed? reply developer93 19 hours agorootparentprevAs they have been, at least since Tony Blair reply markhahn 18 hours agoprevunbelievable how pols never seem to get it. the purpose of making new laws is to further protect the public - not damage the public to make LEO jobs easier.sure, it sucks that they can&#x27;t sit in their office and wiretap anyone, or might seize a phone that they can&#x27;t crack. all it does mean they have to get off their asses and investigate at point-of-crime, possibly in person.to society, the great thing about that is that direct investigation is not scalable, which means that collateral damage will be less common among the innocent and bystanders. reply thinkingemote 21 hours agoprevSo it seems from the news that it was industry that forced this, but do we know how effective our campaigning and emails to MPs were? Or just some un-noteworthy political cog wheel action?How could we find out? Do the reasons get leaked unofficially usually? reply traceroute66 20 hours agoparent> do we know how effective our campaigning and emails to MPs were?Campaigning to your MP is and always has been a waste of time.In addition, the \"safer\" their seat, the more of a waste of space the MP is because they know their constituents would vote for a pig if the right coloured rosette pinned to it.Most of the time they don&#x27;t bother replying, and then if they do reply, you get a two-page party political broadcast, followed by a generic paragraph about \"how they understand your concern blah blah blah\" but never addressing the point at hand. reply aembleton 19 hours agorootparentDepends on the mp, but I&#x27;ve had success emailing them after getting all that standard blurb. They actual seen human then. reply seabass-labrax 18 hours agorootparentI know someone who writes very frequently to her MP with very reasonable criticisms of government activities. The MP always takes the time to respond, despite not actually changing her position in Parliament on any topic. Poor women to have to endure that - both of them! reply nonrandomstring 21 hours agoparentprevMaybe don&#x27;t over-rate the influence of the industry.The Conservative party&#x27;s own members tore it to shreds.From: https:&#x2F;&#x2F;cybershow.uk&#x2F;media&#x2F;episodes&#x2F;OSB1_r2_2023-08-27.mp3 *\"The source of the bill itself, the UK Conservative Party, has a significant number of its own critics calling it \"fundamentally misdesigned\" David Davis said its well-intentioned attempts may constitute \"the biggest accidental curtailment of free speech in modern history.\"(* sadly my other sincere comment has been buried by people who apparently can&#x27;t read past the first line) reply midasuni 20 hours agorootparentDavid Davis is somewhat unusual - he actually resigned as MP to protest against an erosion of civil liberties (and stood on a civil liberty platform)Westminster will be a worse place when he goes, which I assume will be in next year’s election. reply developer93 19 hours agorootparentHe knew he would get reelected though, it was more about publicity for the cause than principal. reply midasuni 18 hours agorootparentOh no someone championing civil libertiesYou don’t get many MPs doing that - especially Tory ones. reply lozf 19 hours agoparentprevWe&#x27;d probably need to decrypt MP&#x27;s WhatsApp messages to find out! reply tempodox 20 hours agoprev> the tech regulator would only require companies to scan their networks when a technology is developed that is capable of doing so.IOW, as soon as backdoors are implemented. And we only have to lose this battle once. reply layer8 6 hours agoprevThe UK does not pull back it seems: https:&#x2F;&#x2F;www.reuters.com&#x2F;technology&#x2F;uk-minister-says-position... reply gorgoiler 10 hours agoprev[The law] will only require companies to scan their networks when a technology is developed that is capable of doing so […] experts believe it could be years before any such technology is developedWhat do they mean? Image recognition via homomorphic encryption? “Years” feels like an understatement! reply sys_64738 17 hours agoprevI’d like to see social media companies taking the opportunity to cut off all services to this country. Use them as an example so other nations don’t get any wild ideas. reply tjpnz 5 hours agoparentGiven all of the societal ills caused by social media it could backfire. reply untitaker_ 17 hours agoparentprevbrilliant idea. let those governments know who really rules the world. we already have a bunch of dictatorships censoring the internet on purpose, so let&#x27;s do their job for countries whose democratic processes can&#x27;t do it for them. reply drumhead 8 hours agoprevMPs got worried they&#x27;d lose access to WhatsApp and Signal which most of them use for private communication, so they had to back out of the changes. reply hosteur 19 hours agoprevThey will try again. And again and again. reply merpnderp 21 hours agoprevThe real question is why did they want this? Is the UK suffering some giant crime wave or are the powers that be just really intent on making sure people are using Bad Think in their private chats? reply tomatocracy 20 hours agoparentThis bill (the Online Safety Bill) has a long and politically complicated history. It was originally motivated by the Cameron government&#x27;s fairly limited desire to mandate that public WiFi had porn filters in place and then seems to have grown over many years to include a huge number of pet projects and power grabs from various career bureaucrats.I don&#x27;t think politicians set out to do this but it&#x27;s been around in some form or other in Whitehall for so long that there&#x27;s no real responsibility anywhere and it was low priority enough that noone ever thought to properly kill it.It&#x27;s very British in that sense. reply stephen_g 12 hours agoparentprevNo, they just see that the citizens will have access to greater privacy and security than before (to protect everyone&#x27;s private information from criminal hackers, foreign states, etc.) and fear losing access to surveillance.That this will lead to a significant amount of crime is simply assumed, and not from any basis in reality. They also misuse statistics to try and make issues look larger than they are, which does a disservice when these are actually really serious issues. Like with CSAM, they always talk about so many millions of reports, without mentioning that reports are only suspected content, and the vast majority turn out not to actually be illegal (something like 70-80% of reports are discarded by law enforcement in the first pass - but it&#x27;s understandable that platforms have to be extremely conservative and report anything that even looks a little like it could possibly be CSAM). Then there are massive amounts of duplication and things like that. But it is a serious issue, so it does my head in that they misuse the &#x27;big, impressive reports number&#x27; when they know only a fraction lead to investigations, because that just gives critics a basis to show that they&#x27;re massively exaggerating which could lead people to minimise the issues.Of course, at the end of the day, you can&#x27;t surveil your way to safety and these problems are best solved at the source. But that would require things like fighting poverty (oh no, welfare spending!) and deploying large numbers of social workers to help support people in marginalised communities. reply daveoc64 18 hours agoparentprevThe bill covers a wide range of topics including cyber bullying, online scams and fraud, hate speech, content moderation, terrorism.The basic premise is that online platforms like Facebook and X will have more legal responsibility and requirements to follow particular UK law and guidance on content that their platforms host.This is very popular with the press and enjoys widespread public support in polling. All major political parties support it.The encryption and scanning aspects of it are just one part of the bill. reply globular-toast 8 hours agoparentprevBecause there&#x27;s a bunch of incompetent people being paid to do bullshit jobs like coming up with this crap. It doesn&#x27;t matter what it is, someone will make it their thing to make it happen because even having a negative impact is having an impact. reply aaomidi 21 hours agoparentprev“Eco terrorism” is on the rise.As we progress with climate change and climate disaster, it’s clear that eco terrorism is going to be increasing. This has been especially highlighted in UK.I put it in quotes because honestly it’s just fighting for survival at this point, but the ones in charge have decided to add the word terror to make it scarier. reply seabass-labrax 19 hours agorootparentI had to read through your comment a few times to try to understand it. I think what you&#x27;re saying is that ecological campaigning groups (particularly, I would guess, those such as XE without a formal hierarchy) are perceived by the current British government to be a threat to the establishment and so they want to prohibit these groups&#x27; use of encrypted group chats.Personally, I don&#x27;t think this is a particularly legitimate concern (and by extension, not one which I would assume the government has), since the whole point of revolutions is that they don&#x27;t need to be planned; they are a groundswell of popular opinion turned violent. Even if encrypted group chats were necessary for ecological campaigning groups, I don&#x27;t believe they are popular enough among the British public or violent enough to make even a minor dent in the Britain establishment. reply developer93 19 hours agorootparentprevAnd I question how much terror stopping traffic generates, generally more just irritation. reply colinsane 18 hours agorootparentpretty sure “eco terrorism” includes things like sabotaging pipelines and such too.though to your point, that form’s more of an economic weapon than it is terror. reply msla 13 hours agoprevThis is framed wrong: It isn&#x27;t UK against \"Big Tech\" it&#x27;s the UK government against privacy and, to some extent, basic logic. That is, the UK government demanded something that&#x27;s impossible to deliver, and would have ruined the privacy rights of its own citizens had it been able to force companies to deliver the next closest thing which actually got the government its core demands of the police being able to snoop on everyone&#x27;s messages. reply GEBBL 20 hours agoprevWould this have impacted on e2e encryption with SaaS apps or mTLS between one micro service to another? reply lwhi 19 hours agoprevThese messages are backed up regularly using third party servers.Does this affect security? reply shmerl 19 hours agoprevSo they idiotically put into the law something like \"wait for technology to be developed to allow snooping without compromising security\"? Such lawmakers shouldn&#x27;t allowed anywhere near making laws. reply developer93 19 hours agoparentThe entire Tory party shouldn&#x27;t be allowed anywhere near making laws... reply javajosh 21 hours agoprevWhy ban e2ee when you could just pass a law giving LEO&#x27;s the right to passively turn on any mic or camera or look through photos and messages on any smartphone at any time? I mean, how can they keep people safe without that access? Think of the children! reply unnouinceput 10 hours agoprevI really wish this was a thing. No encryption, or a weak one, or backdoor with government keys that gets leaked (they always leak). Then use those to really spy and watch a firestorm of publicly washed clothes scandals. I really want that. Then, maybe then, the idiots idiots in parliaments around the world will stop this idiocy once and for all.Imagine nuclear secrets being accessed by every grandma on the planet, that would be laughable. Or the politicians payments to their who...i mean deluxe escorts. reply outside1234 17 hours agoprevLet&#x27;s start with Prince Andrew&#x27;s messages! reply lost_tourist 19 hours agoprevI&#x27;ve found people usually don&#x27;t understand encryption enough, once you explain to them it&#x27;s pretty much all or nothing and the ramifications, they usually come around to the common sense version of \"we indeed do need encryption\" reply mfDjB 20 hours agoprevI wonder where does this end? I do feel like nearly once a year some country in western world tries to ban encryption. Can we just make it a right to encrypt communications and be done with this endless debate? reply brobinson 20 hours agoparentYup, see you guys in the thread next year. reply stainablesteel 19 hours agoparentprevlet&#x27;s let the UK do itthey&#x27;ve become the biggest laughing stock in multiple other avenues anyways, you need an example for people to learn fromone look at san fransisco and people start funding their police departments again reply sebzim4500 19 hours agorootparentDid anyone ever actually cut their police budget? I was under the impression that the problems in SF were a combination of the police having their feelings hurt (and therefore refusing to do their jobs), and prosecutors refusing to actually prosecute anyone. reply yreg 19 hours agorootparentprevNo one relevant wants to leave EU anymore either. reply colinsane 18 hours agoparentprevlegislate all you want but enshrining it as a right won’t magically fix that your government is antagonistic to your privacy. the US has its fourth amendment for 200+ years but that’s never stopped it from wiretapping its own citizens despite that being a pretty unambiguous violation of the text.if you want to “be done with the endless debate” then perhaps use (and contribute to) protocols&#x2F;infrastructure which aren’t so easily governed. reply DubiousPusher 20 hours agoparentprevIt should be a fundamental human right to have and communicate secrets. That&#x27;s the end of the story for me.There should be things the state simply cannot touch not just things which it should not touch. reply lapetitejort 19 hours agorootparentTake a step back from communicating secrets. It should be a fundamental human right to perform math. That&#x27;s what they&#x27;re trying to ban. Some equations are apparently too powerful to be performed by lowly humans. reply gdcbe 19 hours agorootparentMath isn’t the same as what you do with Math though. Math is the science of patterns. As such following your reason you could apply the same to anything that is a crime today and say it’s your way to express your relationship with Math.Just to be clear I’m all for encryption and our right to do so, but I feel that equating this to our defence for math is a couple bridges too far? reply midoridensha 8 hours agorootparentprev>It should be a fundamental human right to perform math.Why?What if society could be destroyed by performing math? Should it still be a fundamental right? What if the entire universe could be destroyed by doing math?This reminds me of a couple episodes of The Twilight Zone and The Outer Limits. In one (\"Need to Know\"), there&#x27;s some secret; when person A tells person B the secret, person B goes insane (and then tries to tell others the secret). Should a verbally-communicated secret be illegal? In the other, a disgruntled college student figures out how to build a small fusion bomb, and uses it for terrorism and threatens to detonate much larger versions of the bomb. At the end, he&#x27;s killed and takes his secret with him, but the implication is that the principles aren&#x27;t really that difficult, and sooner or later some other angry person will figure out how to make such bombs and humanity will be doomed. reply blowski 19 hours agorootparentprevPlaying devil’s advocate, under this legislation, you can have secrets and you can communicate them secretly - just not via some channels. reply JoshTriplett 22 hours agoprev\"abandons\" seems overstated; \"The UK government has conceded it will not use controversial powers\" does not mean it doesn&#x27;t claim to have those powers based on the legislation. reply tomatocracy 22 hours agoparentI wouldn&#x27;t be surprised if this is a political attempt to stop the legislation being amended to remove the powers. I would hope that it fails. reply fmajid 19 hours agoprevIt’s not science or logic that convinced the UK government, one of the most determined enemies of the Internet. It’s that Meta showed it will follow up on threats when it removed all links to news sites in Canada.UK politicians love WhatsApp’s end to end encryption as it allows them to evade public records laws (as well as snooping by UK spooks who have not hesitated to wiretap British Prime Ministers like Harold Wilson). Boris Johnson’s extensive use of WhatsApp specifically was in the news during the Covid inquiry.It’s perfectly OK for the proles to lose encryption, but not for politicians. reply phoe-krk 22 hours agoprev> The UK government has conceded it will not use controversial powers in the online safety bill to scan messaging apps for harmful content until it is “technically feasible” to do so (...)That would be waiting for a quantum computer and quietly hoping that a) nobody develops a strong enough post-quantum scheme and b) there is still civilization after RSA and ECC are broken? Correct me if I&#x27;m wrong. reply toyg 22 hours agoparentOh no. That \"technically feasible\" translates to \"when the government will be able to pass the practical parts of this legislation without too many people asking too many questions\". reply paxys 22 hours agoparentprev\"Strong enough post-quantum schemes\" already exist, and every single mainstream communications platform will update to become quantum-proof overnight if&#x2F;when quantum computers approach that level of capability. Quantum computers cracking encryption is really not a concern on anyone&#x27;s mind, at least no more than, say, modern processors cracking SHA-1 etc. reply phoe-krk 21 hours agorootparentTIL! Which ones? I&#x27;ve only seen ones that were proclaimed to be secure, only to be broken in some simple&#x2F;clever ways not much later. reply tux3 21 hours agorootparentThere were a lot of pqcrypto candidates, and several of them were indeed thoroughly broken, prey to the fearsome cryptanalyst&#x27;s laptop left running over a weekendNIST standardized Kyber and Dilithium, and for now at least, they seem to be holding up. I&#x27;d still want to do hybrid (ECC+PQ) asymmetric crypto for the time being, but we&#x27;re (slowly) starting to gain a modicum of confidence in the new standards, enough for deployment reply sweis 21 hours agorootparentprevNIST post-quantum standards resulted from a 8+ year process and public competition: https:&#x2F;&#x2F;csrc.nist.gov&#x2F;projects&#x2F;post-quantum-cryptography reply mrguyorama 21 hours agorootparentprevYou can basically just make the numbers bigger. Quantum computers aren&#x27;t magic, and are still limited in what and how they can process within normal informational theories. reply xkcd-sucks 21 hours agoparentprev\"I promise I will not stab you until I acquire a knife\" reply jmilosze 21 hours agoparentprevIt&#x27;s already perfectly feasible to do. Meta&#x2F;Apple etc. can just deploy a client that decrypts the message, scans it, re-encrypts (with a different key) and sends it to their storage where they can store it forever and decrypt if needed. This way they could even have different clients in different regions still being compatible. It&#x27;s just that it would suck and would not be secure any more. reply monero-xmr 22 hours agoparentprevQuantum computing doesn’t matter. Nothing in the universe can break a one time pad. reply contact9879 22 hours agorootparentOnce again, every cryptographic problem reduces to a key distribution problem :) reply Sohcahtoa82 18 hours agorootparentprevThis isn&#x27;t the first time I&#x27;ve seen someone on HN act like one-time pads are the solution to all of the problems of cryptography.It&#x27;s like people read that OTPs are the only encryption method that has been proven to be completely unbreakable (when used correctly) and stop reading there, and then completely miss all the things OTPs don&#x27;t solve (ie, guaranteeing authenticity), not to mention their massive glaring limitation: How do you transfer the encryption key? reply maxbond 22 hours agorootparentprevIs quantum computing relevant to symmetric encryption like OTP? GP was talking about asymmetric encryption. My limited understanding is that quantum computing is a threat to asymmetric encryption.There&#x27;s also the question of, if you can distribute a key which is at least the same size as your message over a secure channel - why not just distribute your message over that channel in the first place? reply hgomersall 20 hours agorootparentBecause with QKD you can distribute a random key knowing that there were no observers but you cannot distribute a message with the same guarantees. Specifically, any given bit exchanged might be observed, but that is detectable so the bit can be discarded.I read some years ago about a non quantum technique to achieve the same based on (I think) noise in a coupled electronic system. I wonder if that has been tested further. reply aetherson 21 hours agorootparentprevOne-time pads are obviously not a serious widespread cryptography proposal.But the question of, \"Why not just send the message instead of the pad\" is pretty straightforward: when you have the opportunity to safely deliver the pad, you don&#x27;t know what the message will be. When you do know what the message will be, you don&#x27;t have the opportunity to safely deliver the pad. reply karmanyaahm 22 hours agorootparentprev> why not just distribute your message over that channel in the first placeLatency? You can hand deliver a password ahead of time, but not messages. reply ianburrell 22 hours agorootparentOne-time pad isn&#x27;t a password. It is a flash drive or hard drive full of random bits. reply InitialLastName 21 hours agorootparentThe difference between those is just one of scale and storage.You still have to reliably move a chunk of out-of-band information in a way such that it gets to (and only gets to) the person you want to have it. reply ianburrell 20 hours agorootparentThe difference between one-time pad and stream cipher is provable, absolute secrecy, and really good secrecy. If don&#x27;t care about that, there is zero point to one-time pad.Also, it isn&#x27;t just a \"chunk\", for one-time pad it has to be the same length as the messages. Which is fine if just short messages but a lot harder if lots of data.If can exchange lots of data, better off using them as keys for stream cipher. replyphoe-krk 22 hours agorootparentprevAnd nothing in the post-quantum universe seems to reliably solve the problem of transmitting a one-time pad. reply grotorea 22 hours agorootparentprevDoing some armchair navel gazing cryptanalysis, but isn&#x27;t that only true if you assume the OTP has access to true randomness? What if the attacker breaks your CSPRNG? Or what if the universe is deterministic and therefore a true RNG is impossible? reply maxbond 21 hours agorootparentSimilarly relaxing in my armchair, a deterministic universe is compatible with a CSPRNG as long as the information required to recover it&#x27;s internal state is too diffuse to recover, or is outside the light cone of your adversary.Eg, rolling a dice is deterministic, and I imagine an algorithm exists that could recover the value of a dice throw from a recording of the sound of it rolling and it&#x27;s initial position. But once that sound has turned into heat, and that heat has conducted itself about the walls and into the air, I don&#x27;t think it&#x27;s possible to recover the sound.See also:\"Is flipping a coin random?\" (Numberphile)https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=AYnJv68T3MM [8m] reply jamiek88 21 hours agorootparentIt’s possible. As in physics says it can be done. But it isn’t technically feasible, probably ever.There’s nothing in the laws of physics that prohibits us turning burned paper smoke back into a document and recover the information. reply maxbond 21 hours agorootparentI&#x27;m not sure physics really does say that. Physicists seem to believe that information is never lost - but that doesn&#x27;t mean the information can be retrieved. If it&#x27;s in a fragile state, then the act of measuring it might change it. Eg an electron has both a position and a momentum, but that doesn&#x27;t mean you can measure it&#x27;s velocity.When you burn a document, all the matter might be transferred into the smoke, but you&#x27;ve rendered it into a stream of particles which is small enough to be effected by Brownian motion. Reversing the process (figuring out the initial position of each soot particle) involves knowing the position and momentum of the air molecules impacting the soot particles. In principle, you could take the current position and momentum of those particles and extrapolate backwards - but you can&#x27;t actually measure that, not even in theory. reply macawfish 22 hours agorootparentprevUnderappreciated fact reply numpad0 22 hours agorootparentprevBut quantum computing can put the ciphertext in a quantum superposition between solved and unsolved state. Only problem to remain will be simple matter of determining what the plaintext is to be. reply 24 more comments... GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The UK government has decided to withdraw from its conflict with Big Tech companies regarding access to private messaging.",
      "This decision follows their proposed regulations meant to protect children from harmful online content, highlighting a potential clash between safety and privacy concerns.",
      "The government's backtracking reflects concerns about potential impacts on end-to-end encryption and message privacy."
    ],
    "commentSummary": [
      "The UK government has been criticized for allegedly misrepresenting its stance on accessing encrypted messages, with critics arguing the proposed Online Safety Bill undermines encryption. This is proposing some secure messaging platforms to consider leaving the UK in order to preserve their security measures.",
      "The government denies retreating in the encryption dispute, insisting it is dedicated to child safety. However, this has sparked debates on client-side scanning, privacy implications, data mining, end-to-end encryption, and backdoor access.",
      "The government's plan to delay the scanning of messaging applications for harmful content until it becomes technically feasible is met with criticism. The potential impact of quantum computing on encryption, and vulnerabilities of different encryption methods, are also contentious topics amongst the public."
    ],
    "points": 713,
    "commentCount": 283,
    "retryCount": 0,
    "time": 1694021305
  },
  {
    "id": 37408150,
    "title": "Host a Website in the URL",
    "originLink": "https://smolsite.zip/UEsDBBQAAgAIAMYVIVfaTMb/VQIAANwDAAAKAAAAaW5kZXguaHRtbHVTUW+bMBB+Lr/ilq1i0wo4BGghJA/t9lBpk6Zpm6Y91cEOeAPMbCeEbv3vO0OjZdIK4mTuvvt8+vw5r0xTr5284pStc22Gmq+djWQD/HI2tPhRKrlrmVfIWqoMnm/HZ3laEg0teQY7Vb+cMWpoNiYCvS9fH5r64nxxg0voBTPVyp2HLlRclJXBdeLCXvD+Wh5WLgEC8xBsDrtavXIrY7osCPq+9/uFL1UZhIQQy+ueL94ibUdNBWzlvo/AT9MbjFEUQ4QxQrIYSOHHcWh5sRLbmKb7yCfhTQIxluIxJoB/kBTeBPbmHoJtTNMv+N03CVwVBKtRYpltHsbqE+QFAYv1LBhz3lj5H/mVZXdhK+p65Z6HC3bJYkanhCc7WggzoC5+9JhSu5qvXL7nrWTMDSYNrBy4mr1aOlvZGm9LG1EPGWjaak9zJfCsGqpK0WYo71V3WDoPTsFbwxUe8FlHGRNteVLrFLeFv+eLhx4S+y6ds6MLLol9lyf9IbHtZ4YfzNErU+rByYPJVXkweszJrbus4+brW+NqoKAbWWth+DOEzNeOk3frT5XQ0Fey5mArqIDRIFotGAdTcfj88R2iu0ewhEpqA4PcKY1O1BOmkE1D0aC1aNGf3c4AiqcGU+HEyIUbf7v9YLXlF3BNsSmJgLeFxC2EuQBsBYMy4A/QrRVsZi2p0ZPHgf170QWz7DiIwqvzAjAH3puv33+moGXDjzjckfGDb68bNEMtS+l3bYl4XlTyCeq7gpp/SX7DBifFQT2vV7QDcjdDgced82ASFhfTnXb+AFBLAQIeAxQAAgAIAMYVIVfaTMb/VQIAANwDAAAKAAAAAAAAAAEAAACkgQAAAABpbmRleC5odG1sUEsFBgAAAAABAAEAOAAAAH0CAAAAAA==",
    "originBody": "I wrote this silly thing a couple of weeks ago. It&#x27;s absolutely useless but it&#x27;s a fun tech demo for my web server library. Enjoy!",
    "commentLink": "https://news.ycombinator.com/item?id=37408150",
    "commentBody": "Host a Website in the URLHacker NewspastloginHost a Website in the URL (smolsite.zip) 520 points by acidx 22 hours ago| hidepastfavorite163 comments I wrote this silly thing a couple of weeks ago. It&#x27;s absolutely useless but it&#x27;s a fun tech demo for my web server library. Enjoy! Lerc 18 hours agoNeathttps:&#x2F;&#x2F;smolsite.zip&#x2F;UEsDBBQAAgAIAFtLJ1daaE7RlwIAAN4EAAAKAAA... reply selcuka 13 hours agoparentNeat. You can then let TinyURL host your web site:https:&#x2F;&#x2F;tinyurl.com&#x2F;dmk9e4m2 reply Zuiii 12 hours agorootparentCongratulations, you&#x27;ve turned tinyurl into a free web hosting service. reply pluijzer 5 hours agoparentprevI made a QR code from this link. It really isn&#x27;t anything crazy. Isn&#x27;t that cool, we can host websites from QR codes! reply yonatan8070 3 hours agorootparentHosting a website without a computer is quite cool if you ask me reply prox 4 hours agorootparentprevWow, this is just crazy cool. I can imagine this growing into a thing. reply 6th 18 hours agoparentprevI love the way the smoke seems to be coming off the top of it.Just a second. I&#x27;m late for golf! reply louthy 15 hours agorootparentIf it gets out of hand, make sure you know the new number for the security services:0118999881999119725 ...3And yes, I have that memorised! reply seanthemon 17 hours agorootparentprevOf course! Made in Britain reply 7ewis 17 hours agoparentprevI was fully expecting to see Rick Astley! reply SLWW 9 hours agoparentprevand now my Thinkpad is rethinking it&#x27;s lack of resources. reply acidx 18 hours agoparentprevI love this! reply geonnave 19 hours agoprevOn the subject of weird stuff on a URL, here is a prime dog: https:&#x2F;&#x2F;geonnave.github.io&#x2F;primg&#x2F;#17976931348623159077293051... reply teacpde 14 hours agoparentThis one is amazing, even just the fact that someone thought about representing images with binary format of prime number reply userbinator 11 hours agorootparentI suspect it was partly inspired by https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Illegal_number#Illegal_primes reply dmurray 6 hours agorootparentThe first version of this I saw came from the webcomic in this reddit thread about a prime number that looks like a giraffe.After one commenter showed off this technique, someone else found a minimal prime giraffe: 7.[0] https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;math&#x2F;comments&#x2F;7qpfls&#x2F;does_there_exi... reply geonnave 2 hours agorootparentprimg is, indeed, inspired by the prime giraffe :) replydmazzoni 19 hours agoprevJust in case anyone doesn&#x27;t already know, you can do that with a data uri as well:data:text&#x2F;html,My%20small%20websiteLook,%20it&#x27;s%20real!You can use a data uri generator to base64-encode it, if you want.Advantages of smolsite:- Zip might let you fit a bit more than a data uri- Some JS APIs would work on a smolsite url, but wouldn&#x27;t work in a data uri reply maxbond 10 hours agoparentYou can use this trick to get a handy notepad. data:text&#x2F;html,I keep it on my bookmarks toolbar. reply loueed 7 hours agorootparentI also have a bookmarklet for quick notes.> data:text&#x2F;html,New NoteI added some basic styles so I can screenshare :DAlso in most browsers, CTRL + B, I and U work in contenteditable divs. reply undebuggable 9 hours agorootparentprevDuh, one can load preconfigured ACE editor with syntax highlighting with it. reply pcthrowaway 11 hours agoparentprev> Some JS APIs would work on a smolsite url, but wouldn&#x27;t work in a data uriIn before someone writes a smolsite to install a service worker on the domain that sends analytics for all other smolsites to their own server reply undebuggable 9 hours agoparentprev(Un)fortunately web browsers [1] and URL shorteners block opening and redirecting to data URLs so they are useful mostly as bookmarks in the web browser.[1] https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;HTTP&#x2F;Basics_of_... reply rpastuszak 17 hours agoparentprevI&#x27;m using Base64 + gzip (IIRC) which allows me to store ca 5kb of text in a single Tweet: https:&#x2F;&#x2F;sonnet.io&#x2F;projects#:~:text=Laconic!%20(a%20Twitter%2... reply acheong08 13 hours agorootparentI use https:&#x2F;&#x2F;github.com&#x2F;qntm&#x2F;base2048 reply rpastuszak 7 hours agorootparentThis is amazing, thanks reply gvx 2 hours agorootparentShameless self-promotion: https:&#x2F;&#x2F;github.com&#x2F;gvx&#x2F;base116676 replywgx 10 hours agoprevMy response in a URL:https:&#x2F;&#x2F;wgx.github.io&#x2F;anypage&#x2F;?eyJoMSI6IkhlbGxvIEhOISIsImgyI... reply chrisvxd 24 minutes agoprevAbsolutely useless fun tech demos are the best kind of demoshttps:&#x2F;&#x2F;github.com&#x2F;lpereira&#x2F;lwan - presume this is the web server library you&#x27;re referring to? Very cool. reply SushiHippie 18 hours agoprevNice, reminds me of nopaste [0], which is a pastebin that stores the text in the url compressed with lzma and encoded with base64.[0] https:&#x2F;&#x2F;nopaste.boris.sh&#x2F; reply debarshri 19 hours agoprevthis is really cool and I think it feel like how show HN should be instead of marketing ploy for other orgs pushing their product. reply hsbauauvhabzb 18 hours agoparentI love this type of stuff too, but be aware ycombinator is a start up incubator - people showing off there wares is presumably encouraged, up to a point. reply yellow_lead 10 hours agorootparentIt is and the leaders of yc even give instructions on how to best do their \"launch hn.\" reply debarshri 5 hours agorootparentLaunch and Show HN are different I think. reply matheusmoreira 8 hours agoparentprevI don&#x27;t think it qualifies as advertising. People come to Hacker News to see what hackers are working on. It&#x27;s certainly a major reason why I come here.Every Show HN post I&#x27;ve seen was interesting. Motivated me to start my own projects and polish them so I can show them here. It&#x27;s a really good feeling when someone else submits your work and you get to talk about it. reply Sponge5 7 hours agorootparent> It&#x27;s a really good feeling when someone else submits your work and you get to talk about it.You may only \"Show HN\" something you&#x27;ve made yourself.https:&#x2F;&#x2F;news.ycombinator.com&#x2F;showhn.html reply matheusmoreira 6 hours agorootparentI know, I&#x27;ve never made a Show HN post myself. I meant to say other people independently submitted my project here once. reply mathgeek 18 hours agoparentprevDo you get the impression that novel shows are pushed out by the more corporate ones? reply debarshri 16 hours agorootparentIf you see here [1], many of them are building by orgs trying to sell some services. They may or may not violate the guidelines though.[1] https:&#x2F;&#x2F;news.ycombinator.com&#x2F;show reply fouc 12 hours agoparentprevyeah and that&#x27;s why interesting show HNs get upvoted reply dspillett 17 hours agoprevThat will send the content to the server for unpacking. A slightly more convoluted option might be to put the zip in the anchor part instead and have the response serve code to unpack it from there client side. Though now the server can&#x27;t scan for damaging content being sent via it, even if it wanted to, as the anchor part does not get sent to the server. reply cnity 7 hours agoparentI thought the same thing (though you could do it without anchors as long as the static content server used a glob for routing all traffic to the same web page). It would really simplify hosting. reply alpb 20 hours agoprevPreviously posted similar workhttps:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34312546https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=2464213 reply joe5150 19 hours agoparentThe comment in the first link about Yahoo embedding a giant b64-encoded JSON object in the URL reminds me of something horrible I did in a previous job.To get around paying our website vendor (think locked-down hosted CMS) for an overpriced event calendar module, I coded a public page that would build a calendar using a base64-encoded basic JSON \"events\" schema embedded in a \"data-events\" attribute. Staff would use a non-public page that would pull the existing events data from the public page to prepopulate the calendar builder, which they could then use to edit the calendar and spit out a new code snippet to put on the public page. And so on.It basically worked! But I think they eventually did just fork over the money for the calendar add-on. reply rpastuszak 17 hours agoparentprevCan&#x27;t find the HN link now, but here&#x27;s the \"Twitter CDN\" project I posted a few years back (base64+gzip data URIs):https:&#x2F;&#x2F;sonnet.io&#x2F;projects#:~:text=Laconic!%20(a%20Twitter%2... reply SoulMan 1 hour agoprevI sometimes use this https:&#x2F;&#x2F;github.com&#x2F;topaz&#x2F;paste reply GMoromisato 20 hours agoprevI had an idea once to implement Borges&#x27;s Library of Babel just like this: all the text is in the URL. With more sophisticated encoding, you can optimize English words. Then hook it up to a \"search system\" so you can search for your own name, clips of text, etc.Eventually you&#x27;d hit the URL size limit, of course, but maybe we add a layer on top for curators to bundle sets of URLs together to produce larger texts. Maybe add some LLM magic to generate the bundles.You&#x27;d end up with a library that has, not just every book ever written, but every book that could ever be written.[Just kidding, of course: I know this is like saying that Notepad already has every book in existence--you just have to type them in.] reply ossopite 18 hours agoparentThis reminds me rather of https:&#x2F;&#x2F;libraryofbabel.info&#x2F; reply GMoromisato 17 hours agorootparentNice! That&#x27;s exactly what I had in mind.As usual, no idea is unique--it&#x27;s all about who executes first! reply tintedfireglass 11 hours agorootparentNo idea is unique, because the library of babel has all of the ideas humans can ever think of ;) reply mk12345 10 hours agoparentprevNice, I had a similar idea a while ago! I wanted to support other media types, such as images, audio and webpages. It was a really fun experiment!https:&#x2F;&#x2F;mkaandorp.github.io&#x2F;hdd-of-babel&#x2F; reply ihaveajob 22 hours agoprevThis is hilarious, but I think it may have some practical applications. Watch out for hackers though. reply grepfru_it 21 hours agoparentI immediately thought this is a great way to ship malicious payloads to an unexpected party. A good WAF would block it as sus, but a few tricks could probably get around that as well reply anamexis 20 hours agorootparentHow is it different from any webpage in that regard? reply misterbwong 20 hours agorootparentThe difference is that the contents of this website can be crafted by the attacker directly via the URL without having to do anything to the host. reply anamexis 20 hours agorootparentHow is that a meaningful attack vector, unique from webpages in general? reply ddtaylor 16 hours agorootparentIn this exact context it&#x27;s likely not a problem, but essentially this is a ready to go XSS attack. As far as I can tell there is no CORS or domain level protections, so an \"attacker\" here could easily do anything else with any client-side data being used by any other \"site\" on the domain.Let&#x27;s say I make a little chat app that stores some history or some other data in local browser storage or cookies. Any other site can just as easily access all of that information. An \"attacker\" could link you to a modified version of the chat site that relays all of your messages to their server while still making it otherwise look like it&#x27;s just the normal chat. It would also retain any client side information you had previously entered like your nick name or chat history, since it&#x27;s stored in local storage.Most of the time sanitizing input, like ensuring users don&#x27;t have HTML in their names or comments, combined with domain-level separation and CORS policies ensures that one site can&#x27;t do things that \"leak\" into another. It&#x27;s the reason most of the time no matter how bad people mess things up Facebook getting hacked in your browser doesn&#x27;t compromise your Google account. reply rainonmoon 12 hours agorootparentIntrepid web developers reading this comment, please note that CORS is not, in fact, a protection mechanism. It&#x27;s a way to relax the Same Origin Policy which is actually the protection relevant here. You don&#x27;t need a CORS policy to protect a site from cross-site attacks, you need no CORS policy. Go ahead and make your little chat app, you&#x27;re not at risk of having your messages stolen because of a lack of CORS headers. reply todd3834 10 hours agorootparentPerhaps they meant CSP reply rmbyrro 6 hours agorootparentprevBut then the attacker URL will be different.That doesn&#x27;t look like a new attack vector, this is called phishing, isn&#x27;t it?XSS means you can inject and persist code in a webpage maintaining the same URL accessed by other users.If you create a bigbank-fake.com and copy a manipulated version of bigbank.com&#x27;s HTML, this is not XSS. reply Syntaf 20 hours agorootparentprev1. Find existing smol being shared around2. Modify the parameters to hijack any relevant content3. Reshare the smol site with your changes under the guise it’s the original link reply anamexis 20 hours agorootparentThat’s not novel. You could say the same thing for a GitHub Pages page, or a Code Sandbox, or an S3 static site, or really anything.The only reason that would be a threat is if you implicitly trusted smolsite.zip, which would be an odd thing to do. reply pcthrowaway 11 hours agorootparentGithub pages uses a unique domain per page to prevent sites from loading each others&#x27; cookies, localstorage, service workers, etc. reply ncruces 17 hours agorootparentprevThe difference is that if GitHub is found distributing malware on GitHub pages, you can notify them, they verify it, take it down, and open a process to eventually ban the offender.They expend enough effort in this as to ensure the vast majority of content on GitHub pages is not malware, and avoid getting blankedly flagged as such.It&#x27;s not clear if smolsite.zip can successfully set up a similar process, given that they&#x27;ll serve just any zip that&#x27;s in the URL, and they won&#x27;t have the manpower to verify takedown requests. reply anamexis 17 hours agorootparentIf your security model relies on arbitrary hosts on the internet proactively taking down malicious URLs, you&#x27;re in for a bad time. reply rmbyrro 6 hours agorootparentprevThat&#x27;s a known attack vector called phishing, no? Any website can be phished, not just smolsites replymazokum 21 hours agoprevReminded me of a site from the creator of Advent of Code to share solutions of the puzzles (or any plaintext for that matter).https:&#x2F;&#x2F;github.com&#x2F;topaz&#x2F;paste reply MattyRad 3 hours agoprevVery cool! I have a similar project that uses DNS instead of a path parameter https:&#x2F;&#x2F;serv.from.zone but smolsite is much simpler. reply senseiV 18 hours agoprevNice!I remember seeing this for the first time on HN with urlpages, inspired me to build my own version of thesehttps:&#x2F;&#x2F;js-labs.js.org&#x2F; reply grimgrin 18 hours agoprevexcellent!and my website _is_ already in a zip hehe https:&#x2F;&#x2F;redbean.dev reply high_byte 4 hours agoprevyou could save yourself from serving all the websites (and server costs) with just one character! pass the base64 in the hash field by simply prepending # to it. also it seems the URL length limits do not include the hash, so maybe notsosmolsite.zip? ;) reply danpalmer 3 hours agoprevThis is a fun hack, nice one.Thinking of reasons to not do this though, it&#x27;s effectively impossible to content moderate, at least not without building a database of all the content you don&#x27;t want to host. reply johnnyworker 1 hour agoparentMake it purely client side JS and use URL fragments -> host (and receive) nothing. reply danpalmer 32 minutes agorootparentThat&#x27;s even worse. The issue is not that you have the bytes, it&#x27;s that users see the content on your site. The less control you have the more difficult it would be to meet legal obligations surrounding user generated content.The deal made years ago in law in the US (and followed around the world) is that websites are not liable for the user generated content that they make available, as long as they remove it if requested for legitimate reasons. These two components go hand in hand. If a website is unable to remove content, it&#x27;s effectively liable for that content. This basically breaks the web as we know it today. reply masukomi 1 hour agoprevcool. alas, i&#x27;ve got all .zip domains blocked because the vast majority of them are used by malware people trying to trick someone into \"downloading a zip file\"(this was so predictable) reply Ndymium 20 hours agoprevCool little project! I did a similar thing recently, I wrote a pastebin that puts the file contents in the URL with brotli. [0]It works quite well, but I&#x27;ll need to update the syntax highlighting soon as at least Gleam is out of date (boy that language moves fast), and sometimes brotli-wasm throws a memory allocation error for some reason. I guess that&#x27;s one cool thing that WASM brought to the table, memory handling issues.[0] https:&#x2F;&#x2F;nicd.gitlab.io&#x2F;t&#x2F; reply Helmut10001 9 hours agoprevI wonder what happens about the liability for content on these URL-websites. Is the liability now on the one who shares the URL, or on those who serves it? reply Raed667 9 hours agoparentSince (from my understanding) unzipping the content happens on the server, then the server in my opinion is still responsible for the content. reply bandergirl 8 hours agorootparentEven if it happens in the browser, the content is being shown on your domain, so good luck explaining that.The fun part: any report will include the content in full, so any report will itself be reportable. reply cnity 7 hours agoparentprevRelated: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Illegal_number reply netcraft 20 hours agoprevThis reminds me of this project: http:&#x2F;&#x2F;ephemeralp2p.durazo.us&#x2F;2bbbf21959178ef2f935e90fc60e5b...Myself and two other people have literally kept this page alive for many years - the github repo says 2017. reply dang 18 hours agoparenthttps:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37410630 is fun but it&#x27;s too much of a follow-up* to the current thread. If you get in touch with us at hn@ycombinator.com after some time (say a month or two, to flush the hivemind caches), we&#x27;ll send you a repost invite.* https:&#x2F;&#x2F;hn.algolia.com&#x2F;?dateRange=all&page=0&prefix=true&que... reply netcraft 18 hours agorootparentOk, cool. I&#x27;m not sure I understand the issue though, this thread reminded me of that page, so I thought other people might be interested in it too, and there wasn&#x27;t much conversation here and felt like this was somewhat offtopic on this page anyway. reply dang 17 hours agorootparentYou didn&#x27;t do anything wrong! It&#x27;s just that if you consider two principles: (1) frontpage space is by far the scarcest resource HN has; and (2) repetition isn&#x27;t good for curiosity, it follows that we need to try to keep a fair amount of time and space between similar-ish topics.It&#x27;s also in the interest of the follow-up post because then community interest in that-type-of-thing can focus on it specifically instead of getting split between semantically-overlapping threads.I hope that makes sense!https:&#x2F;&#x2F;hn.algolia.com&#x2F;?dateRange=all&page=0&prefix=true&que...https:&#x2F;&#x2F;hn.algolia.com&#x2F;?dateRange=all&page=0&prefix=false&so... reply hattmall 14 hours agoparentprevIt&#x27;s neat but it&#x27;s like P2P but doubling the bandwidth. reply acidx 20 hours agoparentprevOh, this is a cool experiment! reply netcraft 20 hours agorootparentIts been very interesting over the years. Myself and these other folks have this connection, but no way to communicate or even know who they are. reply sweetjuly 11 hours agorootparentIt doesn&#x27;t seem like the client actually verifies that the content it got back matches the SHA256 it requested, so in theory if you really wanted to meet them you could start sending an update website with details to get in contact with you. Though, that&#x27;d ruin the magic of it I&#x27;d bet :) reply Tade0 7 hours agoprevI still have control over the domain I bought a few years ago to implement something similar.What ultimately stopped me is that on a site of this type you can&#x27;t really include links to other sites made the same way, because your URL length is going to balloon. reply resonious 3 hours agoprevI see this a lot. Some unsolicited advice: you don&#x27;t need cat for this kind of command: echo \"https:&#x2F;&#x2F;smolsite.zip&#x2F;`cat somesite.zipbase64 --wrap 0`\"can become echo \"https:&#x2F;&#x2F;smolsite.zip&#x2F;`base64 --wrap 0copy image address will result in \"data:image&#x2F;jpeg;base64,&#x2F;...&#x2F;\" instead of the website&#x27;s image. Presumably to limit server cost &#x2F; make the browser render? It&#x27;s not for all sites, so perhaps more common sites (Walmart for example) it gives the correct image URL.Pepsi can image from:[1] https:&#x2F;&#x2F;crescentmarket.shop&#x2F; data:image&#x2F;jpeg;base64,&#x2F;9j&#x2F;4AAQSkZJRgABAQAAAQABAAD&#x2F;2...&#x2F;&#x2F;9k=[2] But when you click through: https:&#x2F;&#x2F;encrypted-tbn0.gstatic.com&#x2F;images?q=tbn:ANd9GcQwXbLG...[3] Paperpunchplus.com shows the correct image URL https:&#x2F;&#x2F;www.paperpunchplus.com&#x2F;https:&#x2F;&#x2F;cdn3.evostore.io&#x2F;prod... reply jstarfish 18 hours agoparentSpecifically for a gallery page of search results, I&#x27;d guess that it&#x27;s to provide a more-consistent experience.When you load that results page, you&#x27;d be reaching out to ~100+ different domains that will respond and render the images at different rates (and some will fail to load at all). Base64-encoding lets you shove binary content into caches like Redis, retrieval and embedding of which would be preferable to hotlinking to a slow site. Then most of the page gets rendered at the same time client-side. reply expertentipp 10 hours agoprevHow do I get a salaried job doing cool hackery stuff like this? reply matheusmoreira 8 hours agoparentLet us know if you find out the answer. Closest I can think of is to try to be so impossibly awesome that you get sponsors at GitHub. reply xxdesmus 11 hours agoprevI look forward to the phishinhg. Hopefully you can block known bad hashes. reply klntsky 17 hours agoprevWould it be possible to fit webtorrent in? reply mcjiggerlog 5 hours agoparentI _kind of_ built something like that a few years ago - https:&#x2F;&#x2F;github.com&#x2F;tom-james-watson&#x2F;wtp-extThe bad news is it required firefox nightly and honestly I&#x27;d be surprised if it even still works because Mozilla laid off the people who were working on libdweb. reply lwansbrough 11 hours agoprevLike pastebin, but instead of text it’s a 0-day! reply markburns 10 hours agoprevNeeds to support DMCA takedown notices reply giuliomagnifico 22 hours agoprevThis is very cool, thanks for sharing! reply lagniappe 21 hours agoprevhow does it react to a zip bomb? reply pmarreck 20 hours agoparent\"Compression bombs that use the zip format must cope with the fact that DEFLATE, the compression algorithm most commonly supported by zip parsers, cannot achieve a compression ratio greater than 1032. For this reason, zip bombs typically rely on recursive decompression, nesting zip files within zip files to get an extra factor of 1032 with each layer. But the trick only works on implementations that unzip recursively, and most do not.\"https:&#x2F;&#x2F;www.bamsoftware.com&#x2F;hacks&#x2F;zipbomb&#x2F; reply whoomp12342 21 hours agoparentprev2000 bytes limit reply pcthrowaway 11 hours agorootparentWhich is enough to store any content (unzipped it just needs to contain a link to the next chunk) reply DriverDaily 21 hours agorootparentprevPlenty of room for a recursive function with no base case reply grepfru_it 21 hours agorootparentYou&#x27;re not getting very far on 2k bytes. A 10k file expands to 10MB and will likely timeout if the author&#x27;s webhost configured proper limits reply acidx 21 hours agorootparentFiles are not decompressed in the server: it sends the unmodified deflate stream back to the user. reply pmarreck 20 hours agorootparentSee my comment about this upstream, here: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37410473 reply DriverDaily 19 hours agorootparentprevWouldn&#x27;t infinitely spawning web workers do the same thing as a zip bomb?``` const workerBlob = new Blob([&#x27; while (true) { console.log(\"this is a worker that will never stop\") } &#x27;], { type: &#x27;application&#x2F;javascript&#x27; }) const workerBlobURL = URL.createObjectURL(workerBlob) while (true) { new Worker(workerBlobURL) }``` reply gitgud 18 hours agorootparentThe zip file is decompressed on the server, whereas that HTML&#x2F;JS will be executed on the client reply DriverDaily 18 hours agorootparentI see, I misunderstood replynvr219 16 hours agoprevgeez allowing the .zip tld was such a bad idea reply mcosta 5 hours agoparentWhy? reply klntsky 20 hours agoprevBase64 is far from being efficient for this use case reply pmarreck 20 hours agoparentBase122 or whatever the other option is (and I&#x27;m sure there are others), which tries to take advantage of the whole UTF-8 space, and probably wouldn&#x27;t even work on URLs, is only something like 15% denser. Obviously, you&#x27;re limited to printable characters, here. reply 4RealFreedom 16 hours agoprevThis is so much fun! Great idea! reply Modified3019 15 hours agoprevBut can it fit DOOM? reply ShakirWorks 16 hours agoprevGod bless internet reply meiraleal 14 hours agoprevIt is not useless, it is very cool. But the website is hosted at HN server, not in the URL. reply Theodores 17 hours agoprevImaginably this can be done with Brotli too.I like embedding external resources such as bitmap images in SVG in CSS in HTML so that a document is truly portable and can be sent by email or messenger services. So I don&#x27;t need a URL. The whole document has to be shared, not just a link to it.I also found the favicon can be encoded in this way.I don&#x27;t do scripts, but a lot of fun can be had with HTML when you start doing unusual things with it. For CSS I also use my own units, just for fun. So no pixels, ems or points, but something else... CSS variables make this possible. I like to use full semantic elements and have minimal classes, styling the elements. This should confuse the front end developer more used to the &#x27;painting by numbers&#x27; approach of typical website frontend work. reply Y_Y 17 hours agoparentSounds cool, can you link an example? reply Theodores 10 hours agorootparentSoon...I just work from the HTML specs and go my own way. There is something I am working on that &#x27;needs&#x27; this stuff. I see HTML as a creative medium and I wanted to solve problems such as internal document navigation - rather than hundreds of web pages, compile the lot into one.The PWA takes an entirely different approach to what I am trying to do. I like the PWA approach but I want one file that can be moved or emailed, to be available offline.I found that making all the images inline worked for me. I got best results with webp rather than avif but don&#x27;t care about losing the size benefits with base64 encoding - once zipped those compress nicely. reply py4 21 hours agoprevPretty cool! reply MoElmredi 21 hours agoprevisn&#x27;t there a size limit? reply grepfru_it 21 hours agoparentYes[0]. Assume 2000 bytes (I believe chrome or safari only supports 2k bytes). RFC states 8000 bytes. Firefox supports 65k bytes.[0] https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;417142&#x2F;what-is-the-maxim... reply chrismorgan 14 hours agorootparentYour citation says Chrome supports 32779 and Safari >64k. I think it’s fair to say that, as a user (disregarding potential search engine aspects), 8000-character URLs are 100% fine these days. reply kristopolous 20 hours agorootparentprevAlso known as HTTP Status Code 414 reply MoElmredi 21 hours agorootparentprevThank you! reply matt3210 20 hours agoprevSo smol!! reply m00dy 18 hours agoprevwould be useful with url shortener. reply thih9 18 hours agoparentYou can use an external one.In which case it would be also your hosting provider. reply rpastuszak 17 hours agoprevNice! I did something similar a few years back too!I called it the Twitter CDN™ [1]Here&#x27;s Pong and The Epic of Gilgamesh, in a Tweet: https:&#x2F;&#x2F;twitter.com&#x2F;rafalpast&#x2F;status&#x2F;1316836397903474688Here&#x27;s the editor: https:&#x2F;&#x2F;laconic.sonnet.io&#x2F;editor.htmlAnd here&#x27;s the article explaining how it works: https:&#x2F;&#x2F;laconic-mu.vercel.app&#x2F;index.html?c=eJylWOuS27YV%2Fu%...[1] all thanks to the fact that Twitter applies a different char limit to URLs. We wouldn&#x27;t want to lose those delicious tracking params, would we? reply porsager 20 hours agoprevYeah, I had exactly that, but in my opinion better, with fullscreen mode on https:&#x2F;&#x2F;flems.io. Right up until hackers found it was a great place to host their phishing sites... reply mattbgates 20 hours agoparentI created a website years ago that let anyone come and just \"post\" something online anonymously, quick notes or whatever, but have since had to add a registration process and record ip addresses, as the website was overrun by what looked like russian hackers and the dark web in general looking for a place for uh... post links to child... well anyways, took me almost a month to track down all my own website links, as everything was encrypted and growing faster than i could delete it. def sucks to know that even though i took down the means for a place for them to &#x27;conduct business&#x27;, they will continue to find other websites. reply acidx 20 hours agoparentprevThat&#x27;s why we can&#x27;t have nice things. :( reply fouc 13 hours agoparentprevOh so you basically prevent fullscreen mode? Not bad! The average user of flems probably doesn&#x27;t need fullscreen after all. reply rtcode_io 20 hours agoprevWe host the full https:&#x2F;&#x2F;RTCode.io playground state in the hash, deploy it to https:&#x2F;&#x2F;RTEdge.net and serve the output at &#x2F; and the playground at &#x2F;?-output-playgroundFor more information: https:&#x2F;&#x2F;efn.kr reply pmarreck 20 hours agoparentwow, this is some interesting web voodoo! What about auth? reply rtcode_io 17 hours agorootparentAuth is handled in the playground. We offer \"Sign in with GitHub, Google, Microsoft, Facebook, and Apple\". Anyone can see the code with &#x2F;? but only the owner(s) can (re-)deploy it.---There is also service worker support which deploys as a Cloudflare Worker!See-> https:&#x2F;&#x2F;sw.rt.ht reply madacol 18 hours agoprevIf the author decides to use the URL hash instead, he can avoid users sending that zip to his serveri.e. https:&#x2F;&#x2F;smolsite.zip&#x2F;#UEsDBB... reply mholt 18 hours agoparentI&#x27;m guessing the code to read the zip file is server-side, but I guess JS could do it too. reply madacol 18 hours agorootparentYeah, server-side is much easier to code. But it should be doable with JSI&#x27;ve already built a website that read zip files client-side with JS here: https:&#x2F;&#x2F;madacol.github.io&#x2F;ozempic-dicom-viewer&#x2F; . It will read the zip file and search for MRI&#x2F;CT scan images to displayWhere I have doubts is how to reference external files from the main `index.html` file. I know you can load files as blobs and get a URL (I did that in my website above), but I am not sure if that will work as references in thereply acidx 18 hours agoparentprevThen it would require JavaScript and wouldn&#x27;t be a nice demonstration for my web server library. :) reply madacol 18 hours agorootparentYou told in another comment that the files are not decompressed on the server. Then if you don&#x27;t require JS, where is the decompression happening? reply acidx 17 hours agorootparentOn the client.Data is already stored in the ZIP file deflated, so I can just send whatever is inside the ZIP file back to the client if they accept that encoding (which is pretty much always the case, given how ubiquitous deflate is).The server parses the ZIP file and stores that information in a hash table for quicker lookup but it&#x27;s otherwise not decompressing anything. This hash table is kept for a few minutes to avoid having to decode the base64-encoded data and parse the ZIP file for every request. reply madacol 6 hours agorootparentThat&#x27;s nice!So decompression is happening on the client, but not at the JS level, instead you are taking advantage of browser&#x27;s ability to accept zip-encoded content from the server, hence decompression is done the by browser&#x27;s own behavior when it receives a \"content-encoding: gzip\" stream or something like that. reply globalise83 18 hours agoparentprevUse hash and avoid unnecessary work - good advice dude! reply gildas 20 hours agoprevAlternatively, when formatted \"properly\", you can also simply host your zip file. See https:&#x2F;&#x2F;gildas-lormeau.github.io&#x2F; for example. reply rswskg 21 hours agoprev [–] Literally designed around XSS reply Minor49er 20 hours agoparent [–] Not quite. Some resources don&#x27;t automatically runhttps:&#x2F;&#x2F;smolsite.zip&#x2F;UEsDBBQAAgAIAPtxJlepozjzcAAAAIgAAAAKAAA... reply halter73 13 hours agorootparentThe iframe&#x27;s sandbox attribute is doing a lot of work. I tried to change the parent window location to remove the footer, but the sandbox thwarted me since it didn&#x27;t include \"allow-same-origin\".https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;HTML&#x2F;Element&#x2F;if...Of course, you can just link directly to the URL the iframe points to. In the case of your video, you can simply visit https:&#x2F;&#x2F;smolsite.zip&#x2F;s&#x2F;57fe209faf4e6c0316ad32d7eeb792dfb571e... to have it autoplay while getting rid of the footer. I&#x27;m not sure how long the &#x2F;s&#x2F; URL stays around before getting garbage collected by the server, but I bet you could regenerate it by sending a GET request to https:&#x2F;&#x2F;smolsite.zip&#x2F;UEsDBBQAAgAIAPtxJlepozjzcAAAAIgAAAAKAAA... again. reply acidx 11 hours agorootparentIt&#x27;s collected after 15min, give or take. The hash isn&#x27;t random, it&#x27;s the SHA-1 hash of the base64-encoded data, so it&#x27;s predictable -- if something keeps accessing the base-64 encoded URL, the &#x2F;s&#x2F;... URL won&#x27;t vanish.I tried making it more strict (by checking the Sec-Fetch-Site and Sec-Fetch-Dest headers), but not all browsers send that. reply mattbgates 20 hours agorootparentprev [–] got me har har reply 4RealFreedom 17 hours agorootparent [–] me too replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The author has recently developed a technology demonstration - commonly known as a 'tech demo' - for their web server library, described as entertaining yet functionally pointless."
    ],
    "commentSummary": [
      "The discussion encompasses various projects and ideas for website hosting and content sharing through URLs, including web server libraries, TinyURL, data URIs, gzip compression, base64 encoding, and zip files.",
      "It touches on the pros and cons of these methods, addressing issues such as commercialization, security risks, file size limits, and liability for shared content.",
      "Numerous techniques and examples illustrate the innovative potential of these methods, highlighting the shared insights from those in the comment section."
    ],
    "points": 519,
    "commentCount": 163,
    "retryCount": 0,
    "time": 1694021041
  },
  {
    "id": 37412698,
    "title": "jq 1.7",
    "originLink": "https://github.com/jqlang/jq/releases/tag/jq-1.7",
    "originBody": "Skip to content Product Solutions Open Source Pricing Search or jump to... Sign in Sign up jqlang / jq Public Notifications Fork 1.5k Star 26.1k Code Issues 392 Pull requests 66 Actions Wiki Security Insights Releases jq-1.7 jq 1.7 Latest Compare github-actions released this · 1 commit to master since this release jq-1.7 11c528d After a five year hiatus we're back with a GitHub organization, with new admins and new maintainers who have brought a great deal of energy to make a long-awaited and long-needed new release. We're very grateful for all the new owners, admins, and maintainers. Special thanks go to Owen Ou (@owenthereal) for pushing to set up a new GitHub organization for jq, Stephen Dolan (@stedolan) for transferring the jq repository to the new organization, @itchyny for doing a great deal of work to get the release done, Mattias Wadman (@wader) and Emanuele Torre (@emanuele6) for many PRs and code reviews. Many others also contributed PRs, issues, and code reviews as well, and you can find their contributions in the Git log and on the closed issues and PRs page. What's Changed Since the last stable release many things have happened: jq now lives at https://github.com/jqlang New maintainers, admins, and owners have been recruited. A list of current maintainers NEWS file is replaced by NEWS.md with Markdown format. @wader #2599 CI, scan builds, release, website builds etc now use GitHub actions. @owenthereal @wader @itchyny #2596 #2603 #2620 #2723 Lots of documentation improvements and fixes. Website updated with new section search box, better section ids for linking, dark mode, etc. @itchyny #2628 Release builds for: Linux amd64, arm64, armel, armhf, i386, mips, mips64, mips64el, mips64r6, mips64r6el, mipsel, mipsr6, mipsr6el, powerpc, ppc64el, riscv64 and s390x macOS amd64 and arm64 Windows i386 and amd64 Docker linux/386, linux/amd64, linux/arm64, linux/mips64le, linux/ppc64le, linux/riscv64 and linux/s390x More details see @owenthereal #2665 Docker images are now available from ghcr.io/jqlang/jq instead of Docker Hub. @itchyny #2652 #2686 OSS-fuzz. @DavidKorczynski #2760 #2762 Full commit log can be found at jq-1.6...jq-1.7 but here are some highlights: CLI changes Make object key color configurable using JQ_COLORS environment variable. @itchyny @haguenau @ericpruitt #2703 # this would make \"field\" bold yellow (`1;33`, the last value) $ JQ_COLORS=\"0;90:0;37:0;37:0;37:0;32:1;37:1;37:1;33\" ./jq -n '{field: 123}' { \"field\": 123 } Change the default color of null to Bright Black. @itchyny #2824 Respect NO_COLOR environment variable to disable color output. See https://no-color.org for details. @itchyny #2728 Improved --help output. Now mentions all options and nicer order. @itchyny @wader #2747 #2766 #2799 Fix multiple issues of exit code using --exit-code/-e option. @ryo1kato #1697 # true-ish last output value exits with zero $ jq -ne true ; echo $? true 0 # false-ish last output value (false and null) exits with 1 $ jq -ne false ; echo $? false 1 # no output value exists with 4 $ jq -ne empty ; echo $? 4 Add --binary/-b on Windows for binary output. To get \\n instead of \\r\\n line endings. @nicowilliams 0dab2b1 Add --raw-output0 for NUL (zero byte) separated output. @asottile @pabs3 @itchyny #1990 #2235 #2684 # will output a zero byte after each output $ jq -n --raw-output0 '1,2,3'xxd 00000000: 3100 3200 3300 1.2.3. # can be used with xargs -0 $ jq -n --raw-output0 '\"a\",\"b\",\"c\"'xargs -0 -n1 a b c $ jq -n --raw-output0 '\"a b c\", \"d\\ne\\nf\"'xargs -0 printf '[%s]\\n' [a b c] [d e f] # can be used with read -d '' $ while IFS= read -r -d '' json; do > jq '.name'done ): Cannot dump a string containing NUL with --raw-output0 option Fix assert crash and validate JSON for --jsonarg. @wader #2658 Remove deprecated --argfile option. @itchyny #2768 Enable stack protection. @nicowilliams #2801 Language changes Use decimal number literals to preserve precision. Comparison operations respects precision but arithmetic operations might truncate. @leonid-s-usov #1752 # precision is preserved $ echo '100000000000000000'jq . 100000000000000000 # comparison respects precision (this is false in JavaScript) $ jq -n '100000000000000000 = 2)) |= empty' <<< '[1,5,3,0,7]' [1,0] Allow keywords to be used as binding name in more places. @emanuele6 #2681 Allow using nan as NaN in JSON. @emanuele6 #2712 Expose a module's function names in modulemeta. @mrwilson #2837 Fix contains/1 to handle strings with NUL. @nicowilliams 61cd6db Fix stderr/0 to output raw text without any decoration. @itchyny #2751 Fix nth/2 to emit empty on index out of range. @itchyny #2674 Fix implode to not assert and instead replace invalid unicode codepoints. @wader #2646 Fix indices/1 and rindex/1 in case of overlapping matches in strings. @emanuele6 #2718 Fix sub/3 to resolve issues involving global search-and-replace (gsub) operations. @pkoppstein #2641 Fix significand/0, gamma/0 and drem/2 to be available on macOS. @itchyny #2756 #2775 Fix empty regular expression matches. @itchyny #2677 Fix overflow exception of the modulo operator. @itchyny #2629 Fix string multiplication by 0 (and less than 1) to emit empty string. @itchyny #2142 Fix segfault when using libjq and threads. @thalman #2546 Fix constant folding of division and reminder with zero divisor. @itchyny #2797 Fix error/0, error/1 to throw null error. @emanuele6 #2823 Simpler and faster transpose. @pkoppstein #2758 Simple and efficient implementation of walk/1. @pkoppstein #2795 Remove deprecated filters leaf_paths, recurse_down. @itchyny #2666 Full Changelog: jq-1.7rc2...jq-1.7 Contributors stedolan, owenthereal, and 16 other contributors Assets 31 👍 51 🎉 76 ❤ 47 🚀 45 👀 1 151 people reacted Footer © 2023 GitHub, Inc. Footer navigation Terms Privacy Security Status Docs Contact GitHub Pricing API Training Blog About",
    "commentLink": "https://news.ycombinator.com/item?id=37412698",
    "commentBody": "jq 1.7Hacker Newspastloginjq 1.7 (github.com/jqlang) 385 points by wwader 17 hours ago| hidepastfavorite184 comments d_t_w 15 hours agoThis is great, JQ is brilliant.I love JQ so much we implemented a subset of JQ in Clojure so that our users could use it to munge&#x2F;filter data in our product (JVM and browser based Kafka tooling). One of the most fun coding pieces I&#x27;ve done, though I am a bit odd and I love writing grammars (big shoutout to Instaparse![1]).I learned through my implementation that JQ is a LISP-2[2] which surprised me as it didn&#x27;t feel obvious from the grammar.[1] https:&#x2F;&#x2F;github.com&#x2F;Engelberg&#x2F;instaparse[2] https:&#x2F;&#x2F;github.com&#x2F;jqlang&#x2F;jq&#x2F;wiki&#x2F;jq-Language-Description#:~.... reply chatmasta 14 hours agoparentI can&#x27;t stand jq. I realize this is an unpopular opinion, and our codebase at work has plenty of jq in the bash scripts, some of it even code that I wrote. I begrudgingly use it when it&#x27;s the best option for me. But something about it rubs me the wrong way - I think it&#x27;s the unintuitive query syntax and the need to search for every minute step of what I&#x27;m trying to do, and the frequency with which that leads to cryptic answers that I can only decipher if I am some sort of jq expert. But I have this instinctive reaction to all DSL languages that embed themselves into strings, like htmx and tailwind (both embedded in attribute string values). I realize some people like it, and it&#x27;s a well-made piece of software, and I will even admit that sometimes there is no better choice. But I guess I just hate that it&#x27;s necessary? I guess I could also admit it&#x27;s the least-bad option, in the sense that it&#x27;s a vast improvement over various sed&#x2F;awk&#x2F;cut monstrosities when it comes to parsing JSON in bash. Certainly once you find the right incantation, it&#x27;s perfect - it transforms some raw stdin into parsed JSON that you can manipulate into exactly what you need. But for me, it ranks right next to regex in terms of \"things I (don&#x27;t) want to see in my code.\" I hate that the jq command is always some indecipherable string in the middle of the script. The only real alternative I&#x27;ve ever used is piping to a Python program that I define inline in a heredoc, but that ends up being at least as nasty as the JQ script. reply hn92726819 13 hours agorootparent> I hate that the jq command is always some indecipherable string in the middle of the scriptIt might be worthwhile to just learn how jq works. At the end of the day, you need to learn some language to parse json. I hate DSLs too, but I cannot think of anything as useful and concise as jq.> but that ends up being at least as nasty as the JQ scriptThat&#x27;s exaxtly why jq is so nice. Nice alternatives just don&#x27;t exist reply p-e-w 10 hours agorootparent> That&#x27;s exaxtly why jq is so nice. Nice alternatives just don&#x27;t existWrite a simple Python script, parse JSON into native objects, manipulate those objects as desired with standard Python code, then serialize back into JSON if necessary. Voila, you have a readable, maintainable, straightforward solution, and the only dependency (the Python interpreter) is already preinstalled on almost every modern system.Sure, you may need a few more lines of code than what would be possible with a tailor-made DSL like jq, but this isn&#x27;t code golf. Good code targets humans, not \"least possible number of bytes, arranged in the cleverest possible way\". reply darkwater 8 hours agorootparentThe simple existence of DSL tools like jq is the testament to the fact that people don&#x27;t want to go to a generic language to solve every kind of problem. I&#x27;m also convinced that a big subset of \"use generic language for everything\" do it because they want to use their shiny hammer on that nail as well. reply hnben 9 hours agorootparentprev> Sure, you may need a few more lines of code than ...jQ integrates very nicely into bash script. Especially in between pipes a short&simple jq-snippet can work wonders for readability of the overall script.On the other hand, if the bash script becomes too complex it may be a good idea to replace the entire bash script with python (instead of just the json-parsing-part) reply p-e-w 8 hours agorootparent> a short&simple jq-snippet can work wonders for readability of the overall script.... if the reader happens to be familiar with the niche language \"jq\".Otherwise, you may as well have put some Akkadian cuneiform in there. reply Ekaros 5 hours agorootparentSo awk or sed or maybe even grep?jq seems slightly better than those... reply cryptonector 2 hours agorootparentCertainly for JSON. reply viraptor 9 hours agorootparentprev> Especially in between pipes a short&simple jq-snippetMany of them are not short and simple though. And each time you do a some transformation, you pretty much need to go in&#x2F;out of jq at each step of it want to make some decisions or get multiple types of results without processing the original multiple times. reply ianleeclark 8 hours agorootparentprevThe point in my career at which I used jq the most was when I was doing a lot of work with Elasticsearch doing exploratory work on indexed data and search results. Doing things such as trying to figure out what sort of values `key` might have, grabbing ids returned, etc.Second to this, I&#x27;ve mostly used jq to look at OpenAPI&#x2F;swagger files, again just doing one-off tasks, such as listing all api routes, listing similarly named schemas, etc.From what I&#x27;ve seen in the companies I&#x27;ve worked for, this is fairly consistent, but naturally I can&#x27;t speak for everyone&#x27;s use-cases. At the end of the day, I don&#x27;t think most people use jq in places where readable or maintainable would be most appropriate. reply datatrashfire 1 hour agorootparentprevYea except the python solution is probably going to be several hundred lines, instead of a few.Python is often not installed in server environments unless it&#x27;s a runtime environment for Python.Want to use a non standard library? Now your coworkers are suddenly in Python dependency hell. Better hope anyone else that wants to use this is either familiar with the ecosystem, or just happens to have an identical runtime environment as you.Or someone could just curl&#x2F;apt&#x2F;dnf a jq binary to use your 3 line query, instead of maintaining all of this + 200 lines of Python. reply wwader 1 hour agorootparentprevI do lots of exploratory work in various structure data, in my case often debugging media filea via https:&#x2F;&#x2F;github.com&#x2F;wader&#x2F;fq, which mean doing lots of use-once-queries on the command line or REPL. In those cases jq line-friendly and composable syntax and generators really shine. reply rwmj 8 hours agorootparentprevjq is very practical compared to writing python programs. It is the workhorse of many of our tests, eg:https:&#x2F;&#x2F;gitlab.com&#x2F;nbdkit&#x2F;libnbd&#x2F;-&#x2F;blob&#x2F;master&#x2F;info&#x2F;info-jso... https:&#x2F;&#x2F;gitlab.com&#x2F;nbdkit&#x2F;libnbd&#x2F;-&#x2F;blob&#x2F;master&#x2F;info&#x2F;info-map... https:&#x2F;&#x2F;gitlab.com&#x2F;nbdkit&#x2F;nbdkit&#x2F;-&#x2F;blob&#x2F;master&#x2F;tests&#x2F;test-ex... https:&#x2F;&#x2F;gitlab.com&#x2F;nbdkit&#x2F;nbdkit&#x2F;-&#x2F;blob&#x2F;master&#x2F;tests&#x2F;test-ta...(I picked a few completely at random from dozens and dozens) reply comprev 7 hours agorootparentprevjq can be easily downloaded, unpacked, executed and deleted in one line of bash.It&#x27;s beauty is the simplicity and portability. reply jordibc 1 hour agorootparentprevI really like jq, but I think there is at least one nice alternative to it: jet [1].It is also a single executable, written in clojure and fast. Among other niceties, you don&#x27;t have to learn any DSL in this case -- at least not if you already know clojure![1] https:&#x2F;&#x2F;github.com&#x2F;borkdude&#x2F;jet reply speed_spread 12 hours agorootparentprevSomething not having alternatives doesn&#x27;t make it necessarily nice. It&#x27;s okay to wish for better even if you have something that works. reply ustolemyname 10 hours agorootparentI think in this case \"better\" reduces to convincing the upstream data source to not use json.Putting that frustration on jq seems like a case of transference. reply Nullabillity 3 hours agorootparentAnd now you&#x27;ve turned a JSON traversal problem into a parsing problem.. congratulations? reply spion 4 hours agorootparentprevOr maybe jq does have some design flaws. reply ahoka 5 hours agorootparentprevWhat about JSONPath? reply mdaniel 8 minutes agorootparentIt may be fine for hello-world stuff, but how would one JSONPath this? echo &#x27;[{\"name\":\"_skip\"},{\"name\":\"alpha\"},{\"name\":\"_other\"}&#x27;\\ jq &#x27;[ .[]select(.name|test(\"^_.*\")|not). ]&#x27;The same is roughly true for JMESPath, also, although at least it does actually try to allow projections and some limited functions reply yoz 42 minutes agorootparentprevThe responses to this comment seem to miss a vital point that the comment is making: languages executed within a different primary language are usually opaque to the tools in use. Those tools are usually aimed purely at the primary language, not any secondary languages used within it. Tools for the secondary language are now much harder to use because they (usually) have to be invoked and used via the primary language.If I’m working on a Python script which has some jq embedded in it, then these problems probably exist:- My editor will only syntax colour the Python, and treat jq code as a uniform string with no structure - My linter will only consider Python problems, not jq problems - My compiler, which is able to show parsing errors at compile time rather than runtime, will not give me any parsing errors for jq until execution hits it (yes, Python has a compilation step) - jq error messages that show a line number will give me a relative line number for the jq code, rather than the real line number for where that code lives in the Python file - My debugger will only let me pause and inspect Python, and treat the jq execution as a black box of I&#x2F;OI’m discussing this as a jq problem, but this happens far more commonly with SQL inside any host language. No wonder ORMs are so popular: their value isn’t just about hiding&#x2F;abstracting SQL, it’s about wrangling SQL as a secondary language inside a different primary one.- Microsoft’s LINQ for C# - Webdev-focused IDEs which aim to correctly handle HTML and Javascript inside server-side languages (e.g. PHP) - what else? reply matthewtse 13 hours agorootparentprevI love and hate it.For simple things like navigating down one key, or one array entry, I know by heart, and it&#x27;s incredibly useful. But anything more complicated, and I&#x27;m too lazy to lookup the documentation.jq will fall into the bucket along with sed&#x2F;awk of \"tools I once wished to become an expert on, but will never do so because ChatGPT came along\".Would also put regex into that bucket, but they&#x27;re so ubiquitous that I&#x27;ve already learned regexes. I wonder if the new wave of coders learning coding via ChatGPT will think of regexes the same way I think of sed&#x2F;awk. reply magarnicle 12 hours agorootparentsed became easy for me when I realised it&#x27;s essentially the the :s[ubstitute] command in Vim. reply slaymaker1907 13 hours agorootparentprevI think these very terse languages are precisely the ones you shouldn&#x27;t unleash ChatGPT on. It needs to be really exact and if it is wrong, you can easily end up with something that is an infinite loop or takes exponential time with respect to the input. reply FredrikMeyer 8 hours agorootparentMy way of using ChatGPT is just to ask it to give me some complicated sed&#x2F;awk command, and then I can usually understand easily if the command is correct, or easily look it up. So it is very good for learning. reply zimpenfish 7 hours agorootparentOk but if \"[you] can usually understand easily if the command is correct\" or \"easily look it up\", what do you even need the ChatGPT step for there? reply gugagore 5 hours agorootparentmany problems seem to have the property that it&#x27;s easier to verify a solution than to come up with one. If someone provides a filled-out sudoku puzzle, it&#x27;s relatively straightforward to check if they&#x27;ve followed the rules and completed it correctly. However, actually solving the puzzle from scratch requires a different kind of thinking and might take more time. reply matthewtse 3 hours agorootparentYes exactly.I&#x27;ve also found that learning by \"ask ChatGPT, paste, verify\" is so much faster and more fun than banging my head against concrete to deeply read documentation to reason about something new.I&#x27;ve started doing this for new programming languages and frameworks as well, and it shortens the learning curve from months down to days. reply zimpenfish 4 hours agorootparentprevA fair point. replylarodi 8 hours agorootparentprevIn my opinion (potentially nor popular) JQ has this appeal to nerds the same way that stuff like Perl does. I say this as someone who did Perl for 20years but now prefers python or JS…For many people regexes are as bad as the jq queries… and vice versa. I would not recommend to write python script instead of regexp, but indeed it may work the same for small data and be more readable.I love régex and been mastering it since 1999. So much that in 2013 I used it in production to parse binary protocol with dynamic sized fields. I believe the project is still talking 10k plus devices. Google must’ve just released protocol buffers… I would love to finally see regexes which can work over custom flow of objects and also on trees.I also loved XPath which is very powerful and very comprehensible, then there is CSS1&#x2F;2&#x2F;3 which are again for queries to structures tree like data.The prospect of now learning jq does not appeal me that much even though I appreciate its ingenuity. I may recommend it to dev&#x2F;ops colleagues now and then, but for me this syntax is a lot of additional cognitive pressure which does not necessarily pay up. Of course if there is large amount of JSON data - it is the Swiss knife.But nowadays I’ll likely use some LLm to generate the jq query for me. Also would joke with my bash-diehard colleagues who would love one more DSL… reply cryptonector 1 hour agorootparent> For many people regexes are as bad as the jq queries… and vice versaThat&#x27;s almost certainly because both have pervasive generators&#x2F;backtracking. reply wwader 1 hour agorootparentjq support regex so now you can mix! reply cpuguy83 2 hours agorootparentprev\"Indecipherable string\" to me means you likely don&#x27;t understand the language or how it works. The language itself works very well for what it needs to do.It does not work the same way as something like parsing an object and manipulating it in python. It is a query language. You are building up a result not manipulating objects.Definitely unintuitive if you are coming from a programming language. Once learned it makes a lot more sense and is even preferable depending on your needs. reply bfung 13 hours agorootparentprevAgree - by the time I need more than grep and reach for json parsing, it’s already complicated enough for a Python script. stdin pipped to json.loads ain’t that bad.Def. seen jq thrown into sed&#x2F;awk scripts where a readable programming language was the right move. People spend hrs finding the right syntax to these things ~ not always well spent. reply viraptor 9 hours agorootparentprevI&#x27;ve got similar feelings about it and recently I started experimenting with writing scripts in Nushell rather than bash + jq. I get the json object as a proper type in the script, get reasonable operations available on it and don&#x27;t have to think of weird escaping for either the contents or the jq script. It cuts down the size my scripts by about a half and I&#x27;m very happy with the results. reply dygd 9 hours agorootparentprevAlso not a big fan, but I hate it for a very specific reason: echo 12345678901234567890|jq 12345678901234567000 reply L3viathan 9 hours agorootparentSounds like this is fixed in 1.7 reply dygd 9 hours agorootparentIndeed, just tested it and it is fixed. Thanks! reply cryptonector 14 hours agorootparentprevPython is so much harder to process JSON data in than jq, that that is how I got into working with and on jq almost a decade ago. reply chatmasta 14 hours agorootparentYeah, Python is like 10-20x the number of lines required to do the same thing as jq (especially with the boilerplate of consuming stdin), but that&#x27;s also why it&#x27;s more readable. But generally I agree - I would choose jq over some weird bash&#x2F;python hybrid most of the time. I just wish it was more immediately readable. reply cryptonector 14 hours agorootparentSimple jq programs are easy to read because simple jq programs are just path expressions, and the jq language is optimized to make path expressions easy to read. Path expressions like .[].commitselect(.author == \"Tom Hudson\")which basically says \"find all commits by Tom Hudson\" in the input.`.[]` iterates all the values in its input (whether the input be an array or an object). `.commit` gets the value of the \"commit\" key in the input object. You concatenate path expressions with `|`, and array&#x2F;object index expressions you can just concatenate w&#x2F;o `|`, so `.[]` and `.commit` can be `.[].commit` and also `.[].commit`. Calls to functions like `select()` whose bodies are path expressions are.. also path expressions.Perhaps the most brilliant thing about jq is that you can assign to arbitrarily complex path expressions, so you can: (.[].commitselect(.author == \"Tom Hudson\")) = \"Anon\"The syntax is strange probably because of this trying to make path expressions so trivial and readable.jq programs get hard to read mainly when you go beyond path expressions, especially when you start doing reductions. The problem is that it resembles point free programming in Haskell, which is really not for everyone.The other thing is that jq is very much a functional programming language, and that takes getting used to. reply wrs 13 hours agorootparentAlso, here’s something that seems not widely appreciated: You can write super clever unreadable one-long-line jq programs embedded in bash scripts (I hear you on the point-free thing), or you can write jq programs that live in their own files, with multiple lines, indentation, comments, and intermediate assignments to variables with readable names. I recommend the latter! reply flakes 13 hours agorootparentWait, really? I had no idea you could do that. Might have to try that next time Im tempted to break out python or node for a bash script. reply wrs 13 hours agorootparentI found a random example on GitHub for you. Search `path:jq$` for more.https:&#x2F;&#x2F;github.com&#x2F;flox&#x2F;flox&#x2F;blob&#x2F;019095f8bc40e49abc8e5cd0b1... reply rtpg 13 hours agorootparentprevdata = json.load(sys.stdin)commits = [elt.commit for elt in data if elt.commit.author = \"Tom Hudson\"]json.dump(commits, sys.stdout)Definitely not as straightforward... would be nice to have a bit more affordances for path expressions in Python. reply dragonwriter 13 hours agorootparentThat doesn’t quite work, because JSON objects are parsed to Python dicts, not Python objects with properties, so it would be: data = json.load(sys.stdin) commits = [ e[\"commit\"] for e in data if e[\"commit\"][\"author\"] == \"Tom Hudson\" ] json.dump(commits, sys.stdout) reply taway1237 6 hours agorootparentThis also won&#x27;t work since it&#x27;ll crash on missing fields. e.get(\"commit\", {}).get(\"author\", \"\") maybe (ignoring the corner case of non-list top level object). reply fodkodrasz 9 hours agorootparentprevThis is a non-problem solved by the jq example. Clearly nobody sane writes (or consumes) APIs which sometimes produce array of object, sometimes produce singular objects of the same shape... Or maybe I&#x27;m spoiled from using typed languages and cannot see the ingenuity of the python&#x2F;javascript&#x2F;other-untyped-hyped-lang api authors that it solves? reply dragonwriter 2 hours agorootparent> Clearly nobody sane writes (or consumes) APIs which sometimes produce array of object, sometimes produce singular objects of the same shape...Has nothing to do with arrays, it has to do with the fact that Python dicts with string indexes and Python objects with properties are different things, unlike JS where member and index access are just different ways of accessing object properties.> Or maybe I&#x27;m spoiled from using typed languages and cannot see the ingenuity of the python&#x2F;javascript&#x2F;other-untyped-hyped-lang api authors that it solves?This isn&#x27;t an untyped thing, this is a JavaScript (and thus JSON) and Python have type systems (even if they usually don&#x27;t statically declare them) and those type systems and thus the syntax around objects are different between the two. reply fodkodrasz 1 hour agorootparentI see. I am spoiled, I think. :) reply rtpg 13 hours agorootparentprevOops, yep totally. Even more futzy! Think if I was doing this a lot I&#x27;d totally pull out one of those \"dict wrappers that allow for attr-based access\" that lots of projects end up writing for whatever reason reply Spivak 12 hours agorootparentprevjmespath is your friend for this import jmespath import json doc = json.load(sys.stdin) print(jmespath.search(\"[?commit.author == `Tom Hudson`].commit\", doc))I wish it had won over jq because JMESPath is a spec with multiple implementations and a test suite where jq is... well jq and languages have bindings not independent implementations. reply cryptonector 11 hours agorootparent`import jmespath` is a lot like importing jq...> I wish it had won over jq because JMESPath is a spec with multiple implementations and a test suite where jq is... well jq and languages have bindings not independent implementations.jq has multiple implementations too! In Go, Rust, Java, and... in jq itself. reply Spivak 2 hours agorootparentSo just picking Java https:&#x2F;&#x2F;github.com&#x2F;eiiches&#x2F;jackson-jq> jackson-jq aims to be a compatible jq implementation. However, not every feature is available; some are intentionally omitted because thay are not relevant as a Java library; some may be incomplete, have bugs or are yet to be implemented.Where JMESPath has fully compliant 1st party implementations in Python, Go, Lua, JS, PHP, Ruby, and Rust and fully compliant 3rd party implementations in C++, Java, .NET, Elixer, and TS.Having a spec and a test suite means that a all valid JMESPath programs will work and work the same anywhere you use it. I think jq could get there but it doesn&#x27;t seem to be the project&#x27;s priority. reply HelloNurse 4 hours agorootparentprevRepeating an identifier like this is inelegant, it should be (untested) commit|[?author == `Tom Hudson`] reply rtpg 10 hours agorootparentprevjmespath does look like an interesting thing. Wish it weren&#x27;t stringly-typed but that is a bit unavoidable. reply lathiat 14 hours agorootparentprevI&#x27;ve found Ruby much nicer for writing dirty parsing logic like this in a \"real\" language, it lets you be more terse and \"DRY\" than Python. Which in bigger software projects doesn&#x27;t hurt me as much but when I&#x27;m primarily trying to write something that otherwise would be well handled by SQL or JQ I found Ruby the better middleground for me. reply irjustin 9 hours agorootparentprev> But for me, it ranks right next to regex in terms of \"things I (don&#x27;t) want to see in my code.\"Yeah if you don&#x27;t like jq you likely won&#x27;t like Regex, xpath, etc. Any syntax that is incredibly terse and complex.Like Regex though, jq is too powerful to ignore and many times the best tool to use. reply wwader 7 hours agorootparentjq has regex support! :) reply spion 4 hours agorootparentprevThe main problem is treating one-thing and many-things the same way. Its not a great PL design choice (and its why we can&#x27;t have slurp as a filter). If streams (not arrays) were also first-class, we would easily have `smap`, `sselect` etc and the code would look like a functional programming language whereis the pipeline operator.Otherwise, its fine if you try to keep the thought \"everything is a &#x27;filter&#x27; or a composition of filters, and a &#x27;filter&#x27; is a function that either maps, flatMaps or filters things\" in your mind at all times reply mrzool 7 hours agorootparentprevI understand where you&#x27;re coming from and often feel the same, but I&#x27;m also afraid that this is a clear case of inherent complexity: querying JSON is just a complex problem and requires a complex query language, regardless of how well a piece of software implementing it is designed. The same is valid for regexes of course. reply kybernetikos 4 hours agorootparentprevMaybe you&#x27;d like the nushell approach more, have the structured data understanding and extraction tools built into the shell language. reply 1vuio0pswjnm7 5 hours agorootparentprev\"I can&#x27;t stand jq.\"jq is way too much for what I need. I hacked together a filter in C to reformat JSON and I like it better than every JSON library&#x2F;utility I have tried. For simple reformatting, jq is slow and brittle by comparison. Also, I can extract JSON from web pages and other mixed input. All the JSON utilities I have tried expect perfectly-formed JSON and nothing else. reply nikau 13 hours agorootparentprevUse gron for adhoc, then jq to script once you know what you need to do. reply leonim 21 minutes agorootparentI also find VisiData is useful for adhoc exploring of JSON data. You can also use it to explore multiple other formats. I find it really helpful, plus it gives that little burst of adrenaline from its responsive TUI, similar to fx and jless mentioned.For my toolbox I include jq, gron, miller, VisiData, in addition to classics like sed, awk, and perl.- https:&#x2F;&#x2F;github.com&#x2F;saulpw&#x2F;visidata - http:&#x2F;&#x2F;visidata.org&#x2F;Also there is a great introduction: - https:&#x2F;&#x2F;jsvine.github.io&#x2F;intro-to-visidata&#x2F; \"Intro to VisiData Tutorial\" by Jeremy Singer-Vine reply goku12 11 hours agorootparentprevI&#x27;m going to leave a mention of jless [1] as well here. The purpose should be obvious from the name.[1] https:&#x2F;&#x2F;jless.io&#x2F; reply medv 7 hours agorootparentprevAlso https:&#x2F;&#x2F;fx.wtf reply hnlmorg 6 hours agorootparentprev`jq` solves the problem of JSON in legacy shells. But I think the real problem is that the world is stuck using Bash rather than a more modern shell that can parse JSON (as well as other data structures) as natively as raw byte streams. reply adolph 3 hours agorootparentprev> it&#x27;s the unintuitive query syntax and the need to search for every minute stepI love jq as a power tool and have the same challenges. I think the best path would have been for JavaScript to adopt something akin to JsonPath, although I more often reach to jq out of familiarity than use it in kubectl.https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;kubectl&#x2F;jsonpath&#x2F; reply cryptonector 1 hour agorootparentMaybe Kubernetes should make use of libjq (or gojq or...) reply adolph 34 minutes agorootparentI hadn&#x27;t looked into JsonPath as a standard, and on closer inspection, it looks to be stalled out. Maybe I&#x27;ll keep piping kubectl get-ojsonjq &#x27;&#x27;.https:&#x2F;&#x2F;github.com&#x2F;jsonpath-standardhttps:&#x2F;&#x2F;datatracker.ietf.org&#x2F;wg&#x2F;jsonpath&#x2F;about&#x2F; reply alexvitkov 11 hours agorootparentprevThe fact that you have to learn a new language to parse JSON is frankly insulting. If you&#x27;ve gotten to the point you&#x27;re parsing JSON with a shell script, you should&#x27;ve switched to a real language a week ago.Some people are weird and awe at the ellegance of piping 8 obscure commands, but if I&#x27;m given this shit and have to keep it working, I&#x27;m rewriting it on the spot. reply cwalv 9 hours agorootparentAre you rewriting it in the first language you learned?Sometimes less general tools are nice. If they fit the problem space well, they can be very expressive without feeling unwieldy. And in some contexts reducing the power&#x2F;expressivity is actually a good thing (e.g. not using a C interpreter to make your program and your config file use the same &#x27;language&#x27;) reply papichulo2023 13 hours agorootparentprevCommunity refuses to admit that powershell is much better alternative to bash&#x2F;python combo and here we are stuck in this mess.CI&#x2F;CD scripts spaguetti is usually the most unstable piece of code in a company. reply dragonwriter 13 hours agorootparent> Community refuses to admit that powershell is much better alternative to bash&#x2F;python comboBecause its not.Powershell is very nice as a glue language for .NET components, and its better as a general purpose shell&#x2F;scripting language than the old DOS-inspired Windows Command Prompt, for sure. reply chrnola 13 hours agorootparentprevYeah agreed, especially now that PowerShell is available cross-platform.Nushell[1] also seems like a promising alternative, but I haven’t had a chance to play with it yet.[1]: https:&#x2F;&#x2F;www.nushell.sh&#x2F; reply MassiveBonk51 13 hours agorootparentprevWhy does it have to be bash+python? I&#x27;m finding myself using node.js scripts glued together by bash ones these days unless I&#x27;m working on a lot of data. Doing that means you can work with json natively. reply rtpg 13 hours agorootparent`json.loads` in Python exists, and Python does the intuitive thing when you do `{\"a\": 1} == {\"a\": 1}`, at least for most purposes (you want the other option? `is` is right there!). Stuff like argparse is not the easiest thing to use but it&#x27;s in the standard library and relatively easy to use as well.Not going to outright say that node.js scripts are the worst thing ever (they&#x27;re not), but out-of-the-box Python is totally underrated (except on MacOS where `urllib` fails with some opaque errors untill you run some random script to deal with certs) reply peferron 6 hours agorootparentI haven&#x27;t had a great experience dealing with JSON in Python, but maybe I&#x27;m doing it wrong. What would be the Python equivalent of this JS code? JSON.parse().foo?.[0]?.barBasically just return the `bar` field of the the first element of `foo`, or None&#x2F;undefined if it doesn&#x27;t exist. reply PurpleRamen 4 hours agorootparentAssumingwill be a key-value-object aka dict, it would be something like this: import json data = json.loads(&#x27;&#x27;) bar = None if foo:=data.get(&#x27;foo&#x27;): bar = foo[0].bar print(bar)If you can&#x27;t be sure to get a dict, another type-check would be necessary. If you read from a file or file-like-object (like sys.stdin), json.load should be used. reply claytongulick 13 hours agorootparentprevI love nodejs, it&#x27;s my go-to language for server side stuff.Even with that bias though, I have to admit that it&#x27;s awful for typical command line script stuff.Dealing with async and streams and stuff for parsing csv files is miserable (I just wrote some stuff to parse and process hundreds of gigs of files in node, and it wasn&#x27;t fun).Python is the right tool for that job IMHO.Also, weirdly, maybe golang? I just came across this [1] and it has one of my eyebrows cocked.[1] https:&#x2F;&#x2F;bitfieldconsulting.com&#x2F;golang&#x2F;scripting reply avarun 9 hours agorootparentRuby is the clear answer here. The fact that more people don&#x27;t use it for this purpose (its intended purpose!) is a travesty. reply majkinetor 8 hours agorootparentprevAny not-designed-specifically-for-shell language will suck for shell, more or less. Ruby, python, node, whatever, they all have the same problem - you write stuff too much and care about stuff you shouldn&#x27;t care while in shell. reply MassiveBonk51 12 hours agorootparentprevYou&#x27;re probably right. I just wish there was an easier way to handle json on the command line that didn&#x27;t turn into its own dsl. The golang scripting seems interesting, might be what motivates me to learn the language. reply majkinetor 8 hours agorootparentprevApparently, the old community need to literary die with their old habits for new to take place. There is no amount of good argumentation that can be fruitful here. And there is tone of it, pwsh is simply on another level then existing combos. reply claytongulick 13 hours agorootparentprevI&#x27;m not going to defend my opinion on powershell, because it&#x27;s indefensible and arbitrary.I just can&#x27;t stand title case, and Microsoft&#x2F;.net absolutely love it. Everything in power shell is DoSomethingLikeThis.Powershell is a great piece of tech that I just can&#x27;t use because I&#x27;m old and grumpy and like snake or kebob casing.I&#x27;ve never tried it on Linux though, so maybe it&#x27;s different there? reply haltcase 10 hours agorootparentIn this case, you might be glad to learn that PowerShell is case-insensitive, even for CLR methods. reply cryptonector 1 hour agorootparentI greatly dislike case-insensitivity. It&#x27;s a source of many problems for users and implementors.For implementors case-insensitivity means the need for full Unicode support is urgent, while Unicode canonical equivalence does not often make the need for full Unicode support urgent. In practice one often sees case-insensitivity for ASCII, and later when full Unicode support is added you either have to have a backwards compatibility break or new functions&#x2F;operators&#x2F;whatever to support Unicode case insensitivity.For users case-insensitivity can be surprising.For code reviewers having to constantly be on the lookup for accidental symbol aliasing via case insensitivity is a real pain.Just say no to case insensitivity. reply cwalv 9 hours agorootparentprevAre underscores&#x2F;dashes coalesced out too? reply majkinetor 8 hours agorootparentThere are aliases, you can name things with a letter if you want. There are even good ones OTB. replymingodad 5 hours agoparentprevI also just add a JQ parser&#x2F;grammar to the online LALR(1)&#x2F;FLEX grammar editor&#x2F;tester at https:&#x2F;&#x2F;mingodad.github.io&#x2F;parsertl-playground&#x2F;playground&#x2F; select \"Jq parser (partially working)\" from examples then click \"Parse\" to see a parser tree of the source in \"Input source\".Any feedback is welcome ! reply yoz 11 minutes agorootparentThanks to this, I found your fantastic list of interesting and powerful parser projects: https:&#x2F;&#x2F;mingodad.github.io&#x2F;parsertl-playground&#x2F;Thank you so much for compiling it!A related question for you and anyone else into this kind of tooling: if you had to automate some structural edits across a codebase that contains a wide range of popular languages (say: C++, C#, Java, Ruby, Python), and you had to do it with a single tool, which tool would you use? reply cryptonector 1 hour agorootparentprevHey, that&#x27;s an awesome playground! Thank you for this! reply Dionakra 1 hour agoparentprevIs your product available yet? I would be glad to try it out! reply mnutt 6 hours agoparentprevjq is great for letting users munge their data; we do something similar letting users provision an incoming webhook endpoint, send us arbitrary json data, and set up mappings to do useful things with their data, along with regression tests, monitoring, etc. jq makes the majority of cases straightforward (basically json dot notation) and the long tail possible. reply dekelpilli 12 hours agoparentprevJust adding that a JQ implementation already exists on the JVM[1], although it&#x27;s not 100% complete.[1] https:&#x2F;&#x2F;github.com&#x2F;eiiches&#x2F;jackson-jq reply nikolay 16 hours agoprevI love jq, but I also use JMESPath (especially with AWS CLI), yq (bundled with tomlq and xq as well), and dasel [2]. I also wish hclq [3] wasn&#x27;t so dead![0]: https:&#x2F;&#x2F;jmespath.org&#x2F;[1]: https:&#x2F;&#x2F;kislyuk.github.io&#x2F;yq&#x2F;[2]: https:&#x2F;&#x2F;github.com&#x2F;TomWright&#x2F;dasel[3]: https:&#x2F;&#x2F;hclq.sh&#x2F; reply js2 15 hours agoparentMake JSON greppable!https:&#x2F;&#x2F;github.com&#x2F;tomnomnom&#x2F;gronI&#x27;ve been using `jq` for years and I&#x27;m always able to cobble together what I need, but I have yet to find it intuitive and I&#x27;m rarely able to arrive at a solution of any complexity without spending a lot of time reading its documentation. I wish I found it easier to use. :-( reply lathiat 14 hours agorootparentI also love gron, if nothing else to find the paths I need to use with jq later.But ChatGPT has genuinely solved my suffering writing jq, it does a pretty good job. It even almost replaces gron, if you feed it an exmaple json and ask for jq, it gives you something. It usually needs a little adjusting but it gets me 90% of the way there and saves me a bit of time.I rarely use it for much else but its a jq winner :) reply cryptonector 14 hours agorootparentjq can be used trivially to approach gron-like output: jq -r &#x27;paths(scalars) as $pgetpath($p)\"\\($p|join(\".\")) = \\(.)\"&#x27;See elsewhere in this subthread for a full gron implementation in jq. reply nikau 13 hours agorootparent&#x27;Trivially&#x27; reply cryptonector 11 hours agorootparentStart with `jq -c &#x27;paths(scalars)` -- that&#x27;s pretty trivial. reply sah2ed 6 hours agorootparentI think parent is referring to the habit of technically inclined folks of using \"trivially\" similar to words like \"simply\" and \"just\" [0][1] in a way that assumes too much about what the reader already knows.[0] https:&#x2F;&#x2F;www.parkersoftware.com&#x2F;blog&#x2F;stop-using-simply-in-tec...[1] https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35759449 reply cryptonector 1 hour agorootparentOr maybe I&#x27;m trying to whet one&#x27;s appetite for learning the thing by showing a relatively simple expression that demonstrates the power of the language. replyakoboldfrying 14 hours agorootparentprevLooks handy, but I&#x27;d rather go the other way and extend grep (and diff, etc.) to also work on things that aren&#x27;t restricted to be lines in a text file. The number of times I&#x27;ve needed to go through contortions for things that should be easy solved problems (e.g., grepping for patterns of line pairs, grepping for records that use a different delimiter when the record data itself could contain linefeed, etc.)... reply js2 14 hours agorootparentTip for pairs of lines. Use grep -A, -B, or -C to emit lines surrounding the first line to match, then pipe that into a second grep (also with -A, -B or -C). e.g. grep -A1 foogrep -B1 barWill find a line with \"foo\" followed by a line with \"bar\" and emit both. Of course, it will also find a single line with both \"foo\" and \"bar\", so it&#x27;s not perfect. This is a quick and dirty solution. Beyond that, break out sed and awk, or maybe the Practical Extraction and Report Language... it&#x27;s really good at that stuff. reply akoboldfrying 12 hours agorootparentThanks, it&#x27;s a brittle hack as you acknowledge but at least there won&#x27;t be false negatives. Funny how often I wind up crawling back to Perl.The problem here is literally that someone hardcoded \"IT&#x27;S ALWAYS LINEFEED\" into an algorithm that could work equally well with any record separator character -- in fact probably with any record separator regex. I notice there&#x27;s now `grep -z` which is one small step towards sanity... but the fully general problem is so easy and so useful to solve it&#x27;s exasperating.I guess I should stop complaining and submit a patch to grep to add a `--dont-use-linefeed-instead-use ` option already. reply cryptonector 14 hours agorootparentprevYou can trivially approximate gron with jq, and you there are jq implementations of gron too, like https:&#x2F;&#x2F;gist.github.com&#x2F;mkfmnn&#x2F;7b637aa0ec9b0422b3b75ec181a13...E.g., # gron gron \"https:&#x2F;&#x2F;api.github.com&#x2F;repos&#x2F;tomnomnom&#x2F;gron&#x2F;commits?per_page=1\"fgrep commit.author json[0].commit.author = {}; json[0].commit.author.date = \"2016-07-02T10:51:21Z\"; json[0].commit.author.email = \"mail@tomnomnom.com\"; json[0].commit.author.name = \"Tom Hudson\"; # jq curl -L \"https:&#x2F;&#x2F;api.github.com&#x2F;repos&#x2F;tomnomnom&#x2F;gron&#x2F;commits?per_page=1\"jq -r &#x27;paths(scalars) as $pgetpath($p)\"\\($p|join(\".\")|select(contains(\"commit.author\"))) = \\(.)\"&#x27; 0.commit.author.name = Tom Hudson 0.commit.author.email = mail@tomnomnom.com 0.commit.author.date = 2022-04-13T14:23:37Z # jq with grep outside jq curl -L \"https:&#x2F;&#x2F;api.github.com&#x2F;repos&#x2F;tomnomnom&#x2F;gron&#x2F;commits?per_page=1\"jq -r &#x27;paths(scalars) as $pgetpath($p)\"\\($p|join(\".\")) = \\(.)\"&#x27;fgrep commit.author 0.commit.author.name = Tom Hudson 0.commit.author.email = mail@tomnomnom.com 0.commit.author.date = 2022-04-13T14:23:37ZWith just a bit more work you can get it to output valid gron, and even to parse valid gron. reply rmwaite 16 hours agoparentprevI really like the JMESPath interactive tutorial page (https:&#x2F;&#x2F;jmespath.org&#x2F;tutorial.html). It helped me when I was first learning the syntax and I still go to it if I run into a particularly weird syntax that throws me off. reply wraptile 6 hours agoparentprevAnother great alternative is JSONPath[1] which unfortunately not as widely supported and known despite being brilliant!It&#x27;s inspired by XPath so it&#x27;s very familiar instead of a complete new DSL. The killer feature imo is the recursive key lookup so you can write `people..address` and it&#x27;ll find all \"address\" keys that descend from \"people\" anywhere in the JSON. It&#x27;s by far my favorite parsing language for JSON and I wrote an introduction blog on how to use it in JSON dataset parsing [2] :)1 - https:&#x2F;&#x2F;github.com&#x2F;JSONPath-Plus&#x2F;JSONPath2 - https:&#x2F;&#x2F;scrapfly.io&#x2F;blog&#x2F;parse-json-jsonpath-python&#x2F; reply cryptonector 1 hour agorootparentFYI jq also has recursive traversal. reply commotionfever 15 hours agoparentprevon a similar note I wrote little tool to convert from many formats to many formatsthe biggest usecase for me is taking some csv, toml, xml, whatever and converting that to json so I can pipe to jqhttps:&#x2F;&#x2F;github.com&#x2F;sentriz&#x2F;rsl reply cryptonector 14 hours agorootparentNice!! reply AndyKluger 15 hours agoparentprevA couple more alternatives:https:&#x2F;&#x2F;github.com&#x2F;kellyjonbrazil&#x2F;jellohttps:&#x2F;&#x2F;github.com&#x2F;wwkimball&#x2F;yamlpath reply tambourine_man 15 hours agoprevIf you’re like me and use jq infrequently enough that you have to consult the documentation every time, try gron. It’s greppable jsonhttps:&#x2F;&#x2F;github.com&#x2F;tomnomnom&#x2F;gron reply Galanwe 15 hours agoparentDamn thats incredibly well thought!You can even `grongrepsedgron -u`.Awesome tool thanks for sharing. reply xiphias2 3 hours agorootparentIf you like gron, try fastgron :)It supports everything gron supports, but 50x faster. reply zimpenfish 7 hours agorootparentprevI do this for archiving my YouTube watchlist into git - all the video&#x2F;thumbnail&#x2F;subtitle URLs are dynamic with expiry which makes them pointless to keep around. A quick `gronsedgron -u` replaces them all with \"URL\" and my diffs are much smaller and happier now. reply preommr 12 hours agoparentprevWow, that&#x27;s a pretty cool - so simple but so useful.I&#x27;ll also share that I&#x27;ve been using `curl cheat.sh&#x2F;jq` (cheat.sh in general is a great resource) for years.Although now I&#x27;d probably use something like chatgpt. reply jkrubin 10 hours agorootparentChad is super helpful with jq! reply dewey 6 hours agoparentprevI was always struggling with the jq syntax...but I&#x27;m consistently impressed by ChatGPT coming up with the right commands from an example JSON. reply ithkuil 9 hours agoprevOne of the reasons I like&#x2F;tolerate jq is that it&#x27;s stable, i.e scripts written for it a few years ago still work the same today.I have some code around for yq instead that keep breaking because yq keeps improving in non backward compatible ways (I didn&#x27;t investigate how often yq introduced backwards incompatible changes, but the issue affected me several times in unrelated places, CI scripts or whatnot, that by their nature end up running with different versions of base tooling and update them at various pace)I was always thus grateful to the great wisdom of the jq maintainers for their understanding of the importance of backwards compatibility.I hope this announcement doesn&#x27;t mean that this stability was just an accidental side product of stagnation and that once stagnation is \"fixed\" it will be done at the expense of stability. reply wwader 7 hours agoparentHey! as one of the maintainers i can safely say that we take backwards compatibility very seriously reply gray_-_wolf 6 hours agorootparentI wonder how often someone will develop a script on Archlinux and later be surprised that it will not work in our Debian CI. One nice property about jq was that 1.6 was everywhere, remains to be seen how annoying this will be. Probably not that much.Is there a way to get jq version inside the script? reply ithkuil 7 hours agorootparentprevawesome! Any plans for jq to get native support for YAML? reply cryptonector 1 hour agorootparentNot yet, but jq is getting into the kind of shape where we could add support for lots of formats. I&#x27;d like to have support for various binary JSON types (e.g., CBOR, but maybe too JSONB and others), YAML, and XML. reply wwader 7 hours agorootparentprevNothing planned but there has been some talks about it. https:&#x2F;&#x2F;github.com&#x2F;jqlang&#x2F;jq&#x2F;issues&#x2F;2855 is probably the lastest issue mentioning it reply El_RIDO 9 hours agoparentprevReg. yq&#x2F;jq incompatibility - unsurprisingly there are many projects that provide yq functionality as wrappers around jq. To list but a few:- https:&#x2F;&#x2F;kislyuk.github.io&#x2F;yq&#x2F;- https:&#x2F;&#x2F;github.com&#x2F;kyle-long&#x2F;yq#yq- https:&#x2F;&#x2F;github.com&#x2F;up1&#x2F;yq-1#yq-command-line-yamlxml-processo...- https:&#x2F;&#x2F;github.com&#x2F;onixspot&#x2F;yq-2#yq-command-line-yamlxmltoml...- https:&#x2F;&#x2F;github.com&#x2F;simonrupf&#x2F;convert2json#convert2json reply ainar-g 8 hours agoparentprevWhat are you using yq for? Unless you use YAML-only features (e.g. integers, arrays, and objects as object keys), it seems like it would be easier to just pipe-convert your YAML to JSON and process it with jq. reply dividedbyzero 7 hours agorootparentNot them but I use it in a few places to make automated edits to yaml files. reply ainar-g 5 hours agorootparentDepending on whether or not the resulting YAML is supposed to be human-readable[1], you can just produce JSON output, since YAML 1.2 is a superset of JSON. I did that at one of the places I worked in at the time, and it worked very well.[1]: I personally think that JSON is plenty readable, but a lot of people seem to disagree. reply dividedbyzero 4 hours agorootparentI use it to make small edits to yaml configuration files which are supposed to remain human-editable and keep their comments and ideally also whitespace. I&#x27;m sure some people do enjoy working with raw JSON, but I&#x27;m very much not such a person. reply ainar-g 3 hours agorootparentAh, understandable. replysumek83 7 hours agoparentprev\"Improving in non backwards compatible way\" sounds like \"deteriorate\" reply dividedbyzero 7 hours agorootparentThat&#x27;s a very negative view. If Excel were to fix their 1900-is-a-leap-year bug, I&#x27;d call that a clear improvement, even though it would break some spreadsheets that work around the bug. Seen through that lens every major version of almost all programming languages would be a deterioration. reply ithkuil 7 hours agorootparentprevyes I tried to not be too aggressive towards yq&#x27;s authors who surely don&#x27;t deserve bad words, but at the same time I wanted to express how painful is even the smallest backwards incompatible change to a tool that may end up being used in many tiny dark corners of your automation that everybody forgets to maintain. reply goku12 4 hours agoprevSeeing this news today, I decided to give jq another try and ended up discovering jq-mode [1] for emacs. It doesn&#x27;t just support jq filter file editing, it supports jq in org-mode and something else called &#x27;jq-interactively&#x27;. This interactive mode allows you to apply jq interactively on a JSON or YAML (with yq) buffer. The buffer contents become the filtered value when you finish editing the jq filter with a return. This is especially impressive to see in yaml files.[1] https:&#x2F;&#x2F;github.com&#x2F;ljos&#x2F;jq-mode reply G3rn0ti 3 hours agoparentDidn’t know this. Thanks for the tip!Personally, when I test REST APIs, I use „restclient.el“ all the time which also comes with a great JQ integration („jq-set-var“ for example for deriving request variables from responses). For traversing larger responses I use „counsel-jq“ in a customized JSON mode: https:&#x2F;&#x2F;github.com&#x2F;200ok-ch&#x2F;counsel-jqBut I’ll give the major mode a try, too. reply ccakes 4 hours agoprevThere seems to be a few comments from people that dislike jq. If you&#x27;re that way inclined, gron[0] might be more your thing.[0] https:&#x2F;&#x2F;github.com&#x2F;tomnomnom&#x2F;gron reply mtmail 16 hours agoprevRelated last month \"First release of jq in 5 years\" https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36951830Huge fan, I use it all the time. reply VoodooJuJu 4 hours agoprevWorks well enough, but it really tripped me up at first with the syntax. Had to constantly look things up while using it. jq -r \\ &#x27;.apps.http.servers.srv1.routes[0].match[0].header.[env.AUTH_USER_HEADER][0] = \"$username\"&#x27;That&#x27;s an error because you can&#x27;t select an env var key &#x27;[env.AUTH_USER_HEADER]&#x27; in the middle of a chain like that, only immediately following a pipe:.match[0].header.[env.AUTH_USER_HEADER][0] = \"$username\"&#x27;But then I need to preserve the parent object after the assignment and that pipe throws it out. Thankfully, parentheses fix that:(.match[0].header.[env.AUTH_USER_HEADER][0]) = \"$username\"&#x27;After working out the gotchas, it&#x27;s quite powerful, like regex, but a little clunky, though not nearly as much as regex. reply cryptonector 2 hours agoparent> jq -r \\ > &#x27;.apps.http.servers.srv1.routes[0] >.match[0].header.[env.AUTH_USER_HEADER][0] = \"$username\"&#x27;> That&#x27;s an error because you can&#x27;t select an env var key &#x27;[env.AUTH_USER_HEADER]&#x27; in the middle of a chain like that, only immediately following a pipe:>.match[0].header.[env.AUTH_USER_HEADER][0] = \"$username\"&#x27;You can use `env.AUTH_USER_HEADER` as a key the way you wanted. The issue is that you had to write `....match[0].header[env.AUTH_USER_HEADER] ...` -- no `.` between \"header\" and the index operator!This complaint is a fairly frequent one, so in fact we did \"fix\" this in 1.7! You can now write `.a.[0]` and it works. reply rewmie 4 hours agoparentprev> Almost feels like I&#x27;m learning regex again.But isn&#x27;t that what jq is and always has been? I mean,what led you to believe that an entirely unrelated pattern matching language would work? reply cryptonector 16 hours agoprevWoohoo!! Finally!It&#x27;s really awesome how the community pulled together and helped us recruit new maintainers to revive the project. Special thanks to, well, all involved, but especially @stedolan, @itchyny, and @owenthereal (all GitHub usernames). reply nikolay 14 hours agoprevIn addition to my previous comment about jq-like tools, I want to share a couple other interesting tools, which I use alongside jq are jo [0] and jc [1].[0]: https:&#x2F;&#x2F;github.com&#x2F;jpmens&#x2F;jo[1]: https:&#x2F;&#x2F;github.com&#x2F;kellyjonbrazil&#x2F;jc reply goku12 11 hours agoparentAnd jless [1] and gron [2].This is the first I&#x27;m hearing of gron, but adding here for completeness sake. Meanwhile, JSON seems to be becoming a standard for CLI tools. Ideal scenario would be if every CLI tool has a --json flag or something similar, so that jc is not needed anymore.[1] https:&#x2F;&#x2F;jless.io&#x2F;[2] https:&#x2F;&#x2F;github.com&#x2F;tomnomnom&#x2F;gron reply paradox460 15 hours agoprevjq and miller[1] are essential parts of my toolbelt, right up there with awk and vim.[1]: https:&#x2F;&#x2F;github.com&#x2F;johnkerl&#x2F;miller reply porridgeraisin 14 hours agoparentThanks for pointing me to miller. Too good. reply black_puppydog 13 hours agoprev> Adds new builtin pick(stream) to emit a projection of the input object or array.> jq -n &#x27;{\"a\": 1, \"b\": {\"c\": 2, \"d\": 3}, \"e\": 4}pick(.a, .b.c, .x)&#x27;This is a godsend! Thanks to the contributors!I started write long jq modulesIf you&#x27;re writing long jq modules, you probably do want a different (faster, better) language. reply pantsforbirds 2 hours agoprevChatGPT has massively improved my ability to work with jq. I use it just infrequently enough that I constantly have to read the docs for anything non trivial, but ChatGPT lets me pump out scripts quickly. It&#x27;s been super nice for my work flow. reply niam 3 hours agoprevIs this a proper summary of the use cases over Deno&#x2F;Python scripts?* Run directly from the command line* Small interpreter ~1MB* Compact language (for better or worse)* Stable reply cryptonector 1 hour agoparentThis is a common refrain. So much so that when we changed the release artifact names in 1.7 we broke scripts and docker recipes that would download jq from the github releases &#x27;latest&#x27; URIs! (This is fixed now.) reply faizshah 11 hours agoprevI wish there was a faster version of jq, I was only able to get a few mb&#x2F;s throughput out of jq vs few hundred mb&#x2F;s throughput out of ripgrep.I often use ripgrep to setup quick bash pipelines for rapid data analysis, would love to be able to use jq for that purpose. These days I am setting up scripts with simdjson but the cost of writing a script vs quickly setting up jq or ripgrep in a bash pipeline are orders of magnitude different. reply cryptonector 11 hours agoparentDid you try gojq or jaq? reply wanderingmind 14 hours agoprevA slight tangential question. I use ripgrep-all along with fzf to interactively search through files from cli. Is it possible to integrate jq (or some equivalent) into this search ecosystem to search through json files? reply lordgrenville 9 hours agoparentYes https:&#x2F;&#x2F;gist.github.com&#x2F;reegnz&#x2F;b9e40993d410b75c2d866441add2c... reply dang 14 hours agoprevRecent and related:First release of jq in 5 years - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36951830 - Aug 2023 (27 comments) reply Dowwie 6 hours agoprev&#x27;jq&#x27; is a lot easier to use with ChatGPT assistance. Simply provide sample JSON and tell the LLM how you want to use JQ to parse and transform. reply anonymoushn 7 hours agoprevA new jq release is exciting because it means that jq can finally stop mangling numbers that it does not do any math on. reply jfoutz 15 hours agoprevjq is great. I don&#x27;t know how many times I&#x27;ve had to explain to engineers the invalid numeric literal error means your json is bad. no really, don&#x27;t trust me, copy it into the ide. it&#x27;s not jq. your message is malformed.Strangely, I also have ECMA-404 and RFC8259 open in other tabs. mostly annoyance with the occasional flashes of anger over number formats and duplicate keys. reply gobdovan 16 hours agoprevThought this is an array programming language considering the name&#x27;s made out of J and Q. Nice util reply fiddlerwoaroof 14 hours agoparentThe way it works is sort of reminiscent of array programming. reply saziba 16 hours agoprevI can&#x27;t stress enough how I love jq. It saved my life countless times as data engineer. Good job guys! reply cjvirtucio 2 hours agoprevmy favorite tool; makes writing a bash fun for me. reply qalmakka 3 hours agoprevjq is amazing, and I&#x27;d like it even more if it supported CBOR too. The forks are just too finicky and are quickly abandoned, and the format is basically binary JSON. reply cryptonector 2 hours agoparentI&#x27;m working on binary support, then we can have CBOR, yeah. reply crest 4 hours agoprevThe addition of raw 0-byte separated output will make reliable scripting (e.g. piping into xargs -0) a lot easier. reply kouru225 8 hours agoprevReading “JQ” in this context makes me realize how terminally online I’ve been all these years reply ta8903 6 hours agoparentMore programmers need to be aware of the jq. reply arwineap 12 hours agoprevThe next killer feature for postman alternatives is integrated jq support for your json output.Postman handles this especially poorly... reply ParetoOptimal 2 hours agoparenthttps:&#x2F;&#x2F;github.com&#x2F;pashky&#x2F;restclient.el#usage reply cryptonector 12 hours agoparentprevWhat is postman? reply Omatic810 8 hours agorootparentIt&#x27;s an API tool: https:&#x2F;&#x2F;www.postman.com&#x2F; reply kenrose 12 hours agoprevIt&#x27;s great to see jq get some releases again.It&#x27;s a big part of our check evaluation infra at OpsLevel. reply thiht 10 hours agoprevThese are great release notes. Looks like the project is in good hands reply donatj 8 hours agoprev [–] jq is a tool that is so powerful and useful it really should be made part of the POSIX standard. It should come with everything preinstalled. It’s an amazing tool like that of an earlier more refined age. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The open source software tool, jq 1.7, has been released, marking a revival of the project after a five-year pause and introduction of new admins and maintainers.",
      "The 1.7 release brings a range of updates and enhancements including improved documentation, platform compatibility, changes to the Command Line Interface (CLI), and language enhancements.",
      "The post acknowledges the contributors to the project and provides a link for a full review of changes made in this update via a changelog."
    ],
    "commentSummary": [
      "The article covers diverse views on the efficacy of the programming language JQ in parsing JSON files.",
      "Some users commend JQ while others critique its query syntax as unintuitive, favoring solutions like Python instead.",
      "While the value of JQ is recognized, opinions differ regarding its usability, with some users suggesting alternatives for managing JSON data."
    ],
    "points": 383,
    "commentCount": 184,
    "retryCount": 0,
    "time": 1694042165
  },
  {
    "id": 37408776,
    "title": "Results of technical investigations for Storm-0558 key acquisition",
    "originLink": "https://msrc.microsoft.com/blog/2023/09/results-of-major-technical-investigations-for-storm-0558-key-acquisition/",
    "originBody": "Microsoft MSRC Report an issue Customer guidance Engage Who we are Blogs Acknowledgments All Microsoft Search Blog 2023 09 Results-Of-Major-Technical-Investigations-For-Storm-0558-Key-Acquisition/ Results of Major Technical Investigations for Storm-0558 Key Acquisition MSRC / By MSRC / September 06, 2023 / 3 min read On July 11, 2023, Microsoft published a blog post which details how the China-Based threat actor, Storm-0558, used an acquired Microsoft account (MSA) consumer key to forge tokens to access OWA and Outlook.com. Upon identifying that the threat actor had acquired the consumer key, Microsoft performed a comprehensive technical investigation into the acquisition of the Microsoft account consumer signing key, including how it was used to access enterprise email. Our technical investigation has concluded. As part of our commitment to transparency and trust, we are releasing our investigation findings. Key acquisition Microsoft maintains a highly isolated and restricted production environment. Controls for Microsoft employee access to production infrastructure include background checks, dedicated accounts, secure access workstations, and multi-factor authentication using hardware token devices. Controls in this environment also prevent the use of email, conferencing, web research and other collaboration tools which can lead to common account compromise vectors such as malware infections or phishing, as well as restricting access to systems and data using Just in Time and Just Enough Access policies. Our corporate environment, which also requires secure authentication and secure devices, allows for email, conferencing, web research and other collaboration tools. While these tools are important, they also make users vulnerable to spear phishing, token stealing malware, and other account compromise vectors. For this reason - by policy and as part of our Zero-Trust and “assume breach” mindset - key material should not leave our production environment. Our investigation found that a consumer signing system crash in April of 2021 resulted in a snapshot of the crashed process (“crash dump”). The crash dumps, which redact sensitive information, should not include the signing key. In this case, a race condition allowed the key to be present in the crash dump (this issue has been corrected). The key material’s presence in the crash dump was not detected by our systems (this issue has been corrected). We found that this crash dump, believed at the time not to contain key material, was subsequently moved from the isolated production network into our debugging environment on the internet connected corporate network. This is consistent with our standard debugging processes. Our credential scanning methods did not detect its presence (this issue has been corrected). After April 2021, when the key was leaked to the corporate environment in the crash dump, the Storm-0558 actor was able to successfully compromise a Microsoft engineer’s corporate account. This account had access to the debugging environment containing the crash dump which incorrectly contained the key. Due to log retention policies, we don’t have logs with specific evidence of this exfiltration by this actor, but this was the most probable mechanism by which the actor acquired the key. Why a consumer key was able to access enterprise mail To meet growing customer demand to support applications which work with both consumer and enterprise applications, Microsoft introduced a common key metadata publishing endpoint in September 2018. As part of this converged offering, Microsoft updated documentation to clarify the requirements for key scope validation – which key to use for enterprise accounts, and which to use for consumer accounts. As part of a pre-existing library of documentation and helper APIs, Microsoft provided an API to help validate the signatures cryptographically but did not update these libraries to perform this scope validation automatically (this issue has been corrected). The mail systems were updated to use the common metadata endpoint in 2022. Developers in the mail system incorrectly assumed libraries performed complete validation and did not add the required issuer/scope validation. Thus, the mail system would accept a request for enterprise email using a security token signed with the consumer key (this issue has been corrected using the updated libraries). Post Incident Review Microsoft is continuously hardening systems as part of our defense in depth strategy. Investments which have been made related to MSA key management are covered in the https://aka.ms/storm-0558 blog. Items detailed in this blog are a subset of these overall investments. We are summarizing the improvements specific to these findings here for clarity: Identified and resolved race Condition that allowed the signing key to be present in crash dumps Enhanced prevention, detection, and response for key material erroneously included in crash dumps Enhanced credential scanning to better detect presence of signing key in the debugging environment Released enhanced libraries to automate key scope validation in authentication libraries, and clarified related documentation Azure AD Identity Investigations Previous Post Related Posts Azure AD アプリケーションにおける特権昇格の潜在的なリスクについて Potential Risk of Privilege Escalation in Azure AD Applications Azure ADを使用するマルチテナント アプリケーションの承認に関する構成ミスの可能性に関するガイダンス Subscribe Categories MSRC (1047) Japan Security Team (1005) Security Research & Defense (377) BlueHat (187) Microsoft Threat Hunting (4) Bug Bounty Programs (2) Security Research (1) Tags セキュリティ情報 (464) 脆弱性 (248) アドバイザリ (168) Internet Explorer (IE) (156) Security Update (140) Security Advisory (134) Security Bulletin (133) Mitigations (128) Microsoft Windows (106) Community-based Defense (105) View all Tags Recent Posts Results of Major Technical Investigations for Storm-0558 Key Acquisition Azure Serial Console Attack and Defense - Part 1 Congratulations to the MSRC 2023 Most Valuable Security Researchers! Updating our Vulnerability Severity Classification for AI Systems Microsoft Bug Bounty Program Year in Review: $13.8M in Rewards Archives September 2023 (1) August 2023 (9) July 2023 (10) June 2023 (9) May 2023 (4) View full Archive What's new Surface Pro 9 Surface Laptop 5 Surface Studio 2+ Surface Laptop Go 2 Surface Laptop Studio Surface Go 3 Microsoft 365 Windows 11 apps Microsoft Store Account profile Download Center Microsoft Store support Returns Order tracking Trade-in for Cash Microsoft Store Promise Flexible Payments Education Microsoft in education Devices for education Microsoft Teams for Education Microsoft 365 Education How to buy for your school Educator training and development Deals for students and parents Azure for students Business Microsoft Cloud Microsoft Security Dynamics 365 Microsoft 365 Microsoft Power Platform Microsoft Teams Microsoft Industry Small Business Developer & IT Azure Developer Center Documentation Microsoft Learn Microsoft Tech Community Azure Marketplace AppSource Visual Studio Company Careers About Microsoft Company news Privacy at Microsoft Investors Diversity and inclusion Accessibility Sustainability English (United States) Your Privacy Choices Sitemap Contact Microsoft Privacy Terms of use Trademarks Safety & eco Recycling About our ads © Microsoft 2023",
    "commentLink": "https://news.ycombinator.com/item?id=37408776",
    "commentBody": "Results of technical investigations for Storm-0558 key acquisitionHacker NewspastloginResults of technical investigations for Storm-0558 key acquisition (microsoft.com) 371 points by duringmath 22 hours ago| hidepastfavorite173 comments nicknow 11 hours agoThere are entire systems engineering courses focused on failure resulting from a series of small problems that eventually in the right succession result in catastrophic failure. And I think we can say this was a catastrophic failure.Think about it, first you need a race condition, and that race condition has to result in the unexpected result. That right there, assuming this code has been tested and is frequently used, is probably a less than 10% chance (if it was frequently happening someone would have noticed.) Then you need an engineer to decide they need this particular crash dump. Then you need your credential scanning software (which again, presumably usually catches stuff) to not be able to detect this particular credential. Now you need an account compromised to get network access and that user has access to this crash dump and the hacker happens to get to it and grabs it.But even then, you should be safe because the key is old and is only good to get into consumer email accounts...except you have a bug that accepts the old key AND a bug that didn&#x27;t reject this signing key for a token accessing corporate email accounts.This is a really good system engineering lesson. Try all you want eventually enough small things will add up to cause a catastrophic result. The lesson is, to the extent you can, engineer things so when they blow-up the blast radius is limited. reply rdtsc 11 hours agoparent> that eventually in the right succession result in catastrophic failure.With a caveat that when it comes to security the eventual succession doesn&#x27;t come as a random process but will be actively targeted and exploited. The attackers are not random processes flipping coins, rather they can flip a coin that often lands on \"heads\", in their favor.The post-mortem results are presented as if events happened as a random set of unfortunate circumstances: the attacker just happened to work for Microsoft, there just happened to be a race condition, and then a crash randomly happened, and then the attacker just happened to find the crash dump somewhere. We should consider even starting with the initial \"race condition\" bug, that it might have been inserted deliberately. The crash could have been triggered deliberately. An attacker may have been expecting the crash dump to appear in a particular place to grab it. The attacker may have had accomplices. reply cathalc 8 hours agorootparent>The post-mortem results are presented as if events happened as a random set of unfortunate circumstances:Public RCAs are nothing more than carefully curated PR stunts to calm customers. You can be sure the internal RCA is a lot more damning. reply ddalex 9 hours agorootparentprevThe other frightening possibility is that the attack surface targeted by persistent threat actors is so large that a breach becomes certain (the law of large numbers): when you have so many accounts owned that one of them will have the right access rights; when you have so many dumps one of them will have the key; etc ... reply MichaelZuo 3 hours agorootparentThis is why for certain things the minimum requirement should not be 99% certain or 99.9% certain, but 99.9999% certain. reply hulitu 8 hours agorootparentprev> the attack surface targeted by persistent threat actors is so large that a breach becomes certainI thought a good security rule was to reduce the attack surface. But ok, we are talking about ... Microsoft. &#x2F;s reply rawling 5 hours agorootparentprev> The post-mortem results are presented as if events happened as a random set of unfortunate circumstances: the attacker just happened to work for MicrosoftDoes it say that?> the Storm-0558 actor was able to successfully compromise a Microsoft engineer’s corporate account reply rdtsc 4 hours agorootparentAh you’re right thanks for the correction. reply hulitu 8 hours agoparentprevYou seem to imply that Microsoft employs system engineering and test its products. The reality is far from this.The Microsoft ecosystem looks like a Lego car built by the neighborhoud kids, everybody bringing something from home and smashing it together. reply mynameisash 2 hours agorootparentOn what basis do you make these claims? reply xwolfi 11 hours agoparentprevRace condition is the reason we all use to explain to management why we wrote a stupid bug. Everything is a race condition: \"the masker is asynchronous so the writer starts writing dumps before the masker is setup\" sounds like a completely moronic thing to do. Say there is a race condition, and people say \"a less than 10% chance from happening\", but what do we know, maybe it happens each big crash, and it just doesn&#x27;t crash that often.Why isn&#x27;t it masking before writing to disk ? God only knows. reply michaelt 5 hours agorootparent> Why isn&#x27;t it masking before writing to disk ?Crash handlers don&#x27;t know what state the system will be in when they&#x27;re called. Will we be completely out of memory, so even malloc calls have started failing and no library is safe to call? Are we out of disk space, so we maybe can&#x27;t write our logs out anyway? Is storage impaired, so we can write but only incredibly slowly? Is there something like a garbage collector that&#x27;s trying to use 100% of every CPU? Are we crashing because of a fault in our logging system, which we&#x27;re about to log to, giving us a crash in a crash? Does the system have an alarm or automated restart that won&#x27;t fire until we exit, which our crash handler delays?It&#x27;s pretty common to keep it simple in the crash handler. reply paganel 7 hours agoparentprevUnknown unknown catastrophic failures like this one have always happened and will continue to happen, that&#x27;s why we need resilience which, probably, means a less centralised worldview.Which should probably mean that half (or more) of the Western business world relying on Outlook.com is a very wrong thing to have in place, but as the current money incentives are not focused on resilience nor on stuff like breaking super-centralized Outlook.com-like entities down means that I&#x27;m pretty sure we&#x27;ll continue having events like this one happening well into the future. reply tptacek 21 hours agoprevIt feels like there are some missing dots and connections here: I see how a concurrency or memory safety bug can accidentally exfil a private key into a debugging artifact, easily, but presumably the attacker here had to know about the crash, and the layout of the crash dump, and also have been ready and waiting in Microsoft&#x27;s corporate network? Those seem like big questions. \"Assume breach\" is a good network defense strategy, but you don&#x27;t literally just accept the notion that you&#x27;re breached. reply gnfargbl 21 hours agoparentThe article says that the employee compromise happened some time after the crash dump had been moved to the corporate network. It says that MS don&#x27;t have evidence of exfil, but my reading is that they do have some evidence of the compromise.The article also says that Microsoft&#x27;s credential scanning tools failed to find the key, and that issue has now been corrected. This makes me think that the key was detectable by scanning.Overall, my reading of this is that the engineer moved the dump containing the key into their account at some point, and it just sat there for a time. At a later point, the attacker compromised the account and pulled all available files. They then scanned for keys (with better tooling than MS had; maybe it needed something more sophisticated than looking for BEGIN PRIVATE KEY), and hit the jackpot. reply tgv 9 hours agorootparent> and hit the jackpot.And how often do you hit the jackpot? For larger lotteries, it&#x27;s less than once in a million. So that leads to two equally unpleasant alternatives:1. The attacker was informed where to find the key.2. The attackers have compromised a large part of Microsoft engineering and routinely scan all their files. reply gnfargbl 9 hours agorootparentOh, \"jackpot\" was just a figure of speech, I didn&#x27;t intend to imply any particular probability. Not sure what the chance of finding sensitive information in the private files of an engineer is, but I would guess a lot better than one in a million. One in a hundred, maybe? One in ten?I think the most likely explanation is that this actor routinely attempts to compromise big-tech engineers using low-sophistication means, then grabs whatever they can get. Keep doing that often enough, for long enough, and you get something valuable -- that&#x27;s the \"persistent\" in APT. reply lucasRW 7 hours agorootparentprevRed teams and malicious actors have plenty of tools which automated the looting and look for juicy things. Crash dumps, logs, and many others... The bottom line is that if there is a secret stored on disk somewhere, it won&#x27;t take long for a proper actor to find it. reply skywhopper 19 hours agorootparentprevThis article says the lack of exfil evidence is \"because of log retention policies\", ie, they deleted the logs since the exfil happened. reply mistrial9 21 hours agorootparentprevit brings a lot of questions to the table about what employee knew what, and when.. A real question is - under a \"zero trust\" environment, how many motivated insiders have they accumulated with their IT employment and contracting. reply roymj88 12 hours agorootparentWas having the same thought.. Also anyone know what happened with the employee? reply moyix 18 hours agoparentprevI believe there are somewhat standard tools for scanning memory dumps for cryptographic material, which have been around since the cold boot attack era. And I can imagine attackers opportunistically looking for crash dumps with that in mind. But it does seem like an awfully lucky (for the attacker) sequence of events... reply stilist 21 hours agoparentprevYeah:&#x27;After April 2021, when the key was leaked to the corporate environment in the crash dump, the Storm-0558 actor was able to successfully compromise a Microsoft engineer’s corporate account. This account had access to the debugging environment containing the crash dump which incorrectly contained the key.&#x27;So either the attacker was already in the network and happened to find the dump while doing some kind of scanning that wasn&#x27;t detected, or they knew to go after this specific person&#x27;s account. reply nicknow 12 hours agorootparentOr they knew&#x2F;discovered that there was a repository of crash dumps - likely a widely known piece of information - and just grabbed as much as they could. Nothing in the write-up indicates any connection between the compromised engineer and this particular crash dump, other than they had access. reply tedunangst 19 hours agoparentprevIf you infiltrate a system and see sshd.core in the filesystem, you&#x27;re not going to snarf that up? reply rwmj 18 hours agorootparentI just checked the source and openssh doesn&#x27;t appear to set madvise(MADV_DONTDUMP) anywhere :-( That seems like an oversight? For comparison openssl has a set of \"secure malloc\" functions (for keys etc) which uses MADV_DONTDUMP amongst other mitigations. reply tedunangst 15 hours agorootparentOn OpenBSD, you&#x27;d be looking for MAP_CONCEAL, though it&#x27;s not used in many places, either. reply garblegarble 17 hours agorootparentprevInterestingly, it looks like ssh-agent disables core dumps[1], but I don&#x27;t see similar usage for sshd1: https:&#x2F;&#x2F;github.com&#x2F;openssh&#x2F;openssh-portable&#x2F;blob&#x2F;694150ad927... reply Lt_Riza_Hawkeye 17 hours agorootparentsshd runs as root, so the core dumps would be readable as root-only, no? If you have root access already you could dump it even while it&#x27;s still running with ptrace anyways reply garblegarble 17 hours agorootparent>sshd runs as root, so the core dumps would be readable as root-only, noYes, although the article we&#x27;re discussing shows that you can&#x27;t rely on that, the dump could be subsequently moved to a developer machine for investigation, and unencrypted key material left in could be compromised that way... defense in depth would make sense here. reply upon_drumhead 14 hours agorootparentprevSecret materials for ssh keys won’t be in sshd. They stay client side. Granted m, host keys could be compromised, so you could impersonate a server, but a sshd key leak won’t give direct access reply tlb 8 hours agorootparentYes, though it does have the host key which you could use to do a MITM attack. reply rwmj 8 hours agorootparentprevMADV_DONTDUMP or MAP_CONCEAL don&#x27;t appear anywhere in the source, client or server (with the exception of the seccomp filter where they&#x27;re just used to filter potential system calls). reply acdha 13 hours agorootparentprevIt could leak passwords, though, unless you’re very certain your overwriting after validation always works. reply fullspectrumdev 8 hours agorootparentprevKey material aside, such a coredump could give some hints towards someone else’s capabilities, and point you in an interesting direction for finding new and exciting ways to own more shit. reply shadowgovt 21 hours agoparentprev> but presumably the attacker here had to know about the crash, and the layout of the crash dumpIf I were an advanced persistent threat attacker working for China who had compromised Microsoft&#x27;s internal network via employee credentials (and I&#x27;m not), the first thing I&#x27;d do is figure out where they keep the crash logs and quietly exfil them, alongside the debugging symbols.Often, these are not stored securely enough relative to their actual value. Having spent some time at a FAANG, every single new hire, with the exception of those who have worked in finance or corporate regulation, assumes you can just glue crash data onto the bugtracker (that&#x27;s what bugtrackers are for, tracking bugs, which includes reproducing them, right?). You have to detrain them of that and you have to have a vault for things like crashdumps that is so easy to use that people don&#x27;t get lazy and start circumventing your protections because their job is to fix bugs and you&#x27;ve made their job harder.With a compromised engineer&#x27;s account, we can assume the attacker at least has access to the bugtracker and probably the ability to acquire or generate debug symbols for a binary. All that&#x27;s left then is to wait for one engineer to get sloppy and paste a crashdump as an attachment on a bug, then slurp it before someone notices and deletes it (assuming they do; even at my big scary \"We really care about user privacy\" corp, individual engineers were loathe to make a bug harder to understand by stripping crashlogs off of it unless someone in security came in and whipped them. Proper internal opsec can really slow down development here). reply Eduard 20 hours agorootparentyour statement:> but presumably the attacker here had to know about the crash, and the layout of the crash dumpanother statement from the article:> Our credential scanning methods did not detect its presence (this issue has been corrected).The article does not give any timeline when things happened.Imagine the following timeline:- hacker gets coredump in 2021, doesn&#x27;t know that it contains valuable credentials.- For data retention policy reasons, Microsoft deletes their copy of the coredump — but hacker just keeps it.- Microsoft updates its credential scanning methods.- Microsoft runs updated credential software over their reduced archive (retention policy) of coredumps. As that particular coredump doesn&#x27;t exist anymore at Microsoft, they are not aware of the issue.- hacker get scanner update.- hacker runs updated credential scanner software over their archive of coredumps. Jackpot. reply Eduard 21 hours agorootparentprev>... you have to have a vault for things like crashdumps that is so easy to use that people don&#x27;t get lazy...Let&#x27;s assume a crash dump can be megabytes up to gigabytes big.How could a vault handle this securely?the moment it is copied from the vault to the developer&#x27;s computer, you introduce data remanence (undelete from file system).keeping such coredump purely in RAM makes it accessible on a compromised developer machine (GNU Debugger), and if the developer machine crashes, its coredump contains&#x2F;wraps the sensitive coredump.A vault that doesn&#x27;t allow direct&#x2F;full coredump download, but allows queries (think \"SQL queries against a vault REST API\") could still be queried for e.g. \"select * from coredump where string like &#x27;%secret_key%&#x27;\".So without more insight, a coredump vault sounds like security theater which tremendously makes it more difficult for intended purposes. reply sfink 16 hours agorootparentEverything is imperfect, but where I work crashdumps are uploaded straight to a secure vault and then deleted from the origin system. The dumps are processed, and insensitive data is extracted and published with relatively lenient access controls. Sensitive data, such as raw memory dumps, require a higher tier of permissions. In order to be eligible for that higher tier, your developer machine has to be more locked down than that of people who are not in the secure group. (You also need to have a reason to need more access.)Given that stack traces, crash addresses, and most register contents are considered to be security insensitive, most people don&#x27;t really need access to the raw dumps.It&#x27;s far from perfect, but it would be unfair to call it \"security theater\". It seems like a pretty decent balance in practice. Admittedly, we have the slight advantage of several hundred millions installs, so the actual bugs that are causing crashes are likely to happen quite a few times and statistical analysis will often provide better clues than diving deep into an individual crash dump. reply trifurcate 11 hours agorootparent> Everything is imperfect, but where I work crashdumps are uploaded straight to a secure vault and then deleted from the origin system. The dumps are processed, and insensitive data is extracted and published with relatively lenient access controls. Sensitive data, such as raw memory dumps, require a higher tier of permissions. In order to be eligible for that higher tier, your developer machine has to be more locked down than that of people who are not in the secure group. (You also need to have a reason to need more access.)From my understanding, this is more or less how the Microsoft system was designed with credential scanning and redaction over coredumps, but a chain of bugs and negligence broke the veil. reply bri3d 20 hours agorootparentprevWhile your points are all valid theoretically, keeping stuff off of developer filesystems can still help a lot practically.This attacker probably (it&#x27;s unclear, since the write-up doesn&#x27;t tell us) scanned compromised machines for key material using some kind of dragnet scanning tool. If the data wasn&#x27;t on the compromised filesystem, they wouldn&#x27;t have found it. Even though perhaps in theory they could have sat on a machine with debug access (depending on the nature of the compromise, this is even a stretch - reading another process&#x27;s RAM usually requires much higher privilege than filesystem access) and obtained a core dump from RAM.Security is always a tension between the theoretical and the practical and I think \"putting crash dumps in an easy-to-use place that isn&#x27;t a developer&#x27;s Downloads folder\" isn&#x27;t a bad idea. reply nijave 18 hours agorootparentprevEphemeral compute&#x2F;VM&#x2F;debug environment with restricted access.Tear down the environment after the debugging is done.Keeping the crash dumps in a vault presumably allows more permission&#x2F;control that an internal issue tracker (usually anyone can access the issue tracker). At least a vault can apply RBAC or even time based policies so these things aren&#x27;t laying around forever. reply Muromec 19 hours agorootparentprevOh, yeah, the amount of times I see HAR file with things in it just floating in JIRA is not fun. reply saagarjha 17 hours agorootparentprevWhy does an attacker need symbols? reply shadowgovt 14 hours agorootparentThey&#x27;re not needed, but they will speed up comprehension of the contents of the program.... but they&#x27;re definitely not strictly necessary. reply tlb 9 hours agoparentprevSince they can supposedly redact the key from crash dumps, the key must have some identifiable footprint in memory.The redact_key_from_crash_dump function would be a good place to look for juicy bugs. Any case it misses tells you what to look for. reply formerly_proven 21 hours agoparentprevAnother article from Microsoft in this affair that barely (if indeed) answers more questions than it raises. reply cobertos 21 hours agoprevSome things were not plainly spelled out:* July 11 2023 this was caught, April 2021 it was suspected to have happened. So, 2+ years they had this credential, and 2 months from detection until disclosure.* How many tokens were forged, how much did they access? I&#x27;m assuming bad if they didn&#x27;t disclose.* No timetable from once detected to fix implemented. Just \"this issue has been corrected\". Hope they implemented that quickly...* They&#x27;ve fixed 4 direct problems, but obviously there&#x27;s some systemic issues. What are they doing about those? reply ranting-moth 17 hours agoparentAdverse inference is very valid.https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Adverse_inference reply jeremyjh 16 hours agorootparentIts valid in a civil court where discovery processes exist. It doesn&#x27;t really apply to public relations, where information could be withheld for a number of unknowable reasons. Of course everyone is free to speculate, but its not supported by a link to theories of common law in civil torts. reply tadzikpk 16 hours agoparentprevIf this credential is still valid 2 years later, what is their credential rotation policy? reply Fatnino 13 hours agorootparent5 years. The dump is from 2018 reply roymj88 12 hours agorootparentWhoah... Surely this may not be the only news waiting to come out.. They just need to find out what else they&#x27;ve got during this period.. reply roboman 15 hours agorootparentprev^ agree! What an easy mitigation this would have been. reply lucasRW 7 hours agorootparentprevIt&#x27;s not a password though, but probably a private key, not that easy to rotate every now and then. reply dgudkov 21 hours agoprevA breach like that requires a very good understanding of Microsoft&#x27;s internal infrastructure. It&#x27;s safe to assume that the breach was a coordinated effort of a team of hackers. This is not a cheap effort, but the payback is enormous. Hyper-centralization leads to a situation when hackers concentrate their efforts on a few high-value targets because once they are successful, the catch is enormous. I&#x27;m pretty much sure that there are teams of (state-sponsored) hackers that are already doing deep research and analysis of the internal infrastructure of Google, Microsoft, Amazon, etc. The breach gives an idea of how well already the hackers understand it.I would argue, it&#x27;s time to decentralize inside a wider security perimeter. reply sargun 18 hours agoparentYou have to assume that you have nation state actors working at your organization at sufficient size. Unfortunately, it’s difficult to work around this assumption, because anyone can be compromised at any time. reply transcriptase 15 hours agorootparentI find it somewhat amusing that companies like Microsoft and Google that have pivoted a large portion of their business model to collecting, keylogging, recording, scanning, exfiltrating, telemetrizing, collating, inferring, and analyzing every last iota of data they can about as many people as possible under the guise of improving their products or personalizing ads...... can&#x27;t identify nation state actors within their own company.I suppose that would be illegal. Whereas using it to improve AdSense CTR or selling it to brokers is perfectly acceptable. reply michaelt 22 minutes agorootparentWell, the things an infiltrator would need to do are extremely subtle.Would you be suspicious of a co-worker who recommended the adoption of the widely used log4j logging library? Of course you wouldn&#x27;t! reply bostik 10 hours agorootparentprevIf you are up against an adversary with an unlimited budget and organisational event horizon measured in years, your quarter-to-quarter thinking will always kneecap you. reply petesergeant 4 hours agorootparentI dunno, I reckon the amount Microsoft pay in defensive security and the amount China pay for offensive cyber security are going to be in the same order of magnitude.The real advantage is that MS has to play at least somewhat inside the legal system. reply mhh__ 14 hours agorootparentprevAt or in? I would assume both reply baz00 21 hours agoprevSo if we remove the careful wording, someone downloaded a minidump onto a dev workstation from production and then it was probably left rotting in corporate OneDrive until that developer&#x27;s account was compromised. Someone took the dump, found a key in it and hit the jackpot. reply trifurcate 11 hours agoparentAnd, crucial to this exploit actually working to the extent it did, Microsoft&#x27;s own developers failed to implement a secure authentication check on top of their own libraries and infrastructure. reply runeks 9 hours agorootparentHow so? reply baz00 8 hours agorootparentLeaving credentials and keys in memory. reply drodgers 5 hours agorootparentAlso completely failing to check the scope of the request before validating it!> Microsoft provided an API to help validate the signatures cryptographically but did not update these libraries to perform this scope validation automatically reply remram 6 hours agoparentprevAnd there was a redaction system, which did not redact the key (\"race condition\"). Then a detection system, which didn&#x27;t detect the key. And then the key was used to access an entirely different system with an entirely different access level and it just worked anyway.The phrasing as \"some obscure bugs were carefully exploited\" seems a bit off, it looks more like a comedy of errors where none of the security systems served its purpose at all. reply baz00 6 hours agorootparentThat&#x27;s because the whole idea of a redaction system is stupid.You can&#x27;t start out with something unconstrained and expect to patch all the holes in it. Mathematically speaking, you start with set A which is all possibilities and set B which is all the things you know to remove and you end up with A \\ B not {}.You have to start out with something constrained and allow only the good bits through the holes.Having a similar discussion at the moment. Which is the correct solution:a) Buy some software to redact all PII from logsb) don&#x27;t put it in there in the first place reply remram 4 hours agorootparentI agree in general, but for \"signing key material\", there should be enough entropy and they have enough control over the format to make it very easy to detect.Plus, they are the ones who put the security of their system behind this detection, letting developers access the dump they believed to be redacted. Whether they made a massive mistake at the design or implementation phase doesn&#x27;t really absolve them. reply time4tea 20 hours agoprevWhat this means is that the keys are not stored in non-recoverable hardware, they are available to a regular server process, just some compiled code, running in an elevated-priv environment. There is no mention that the systems that had access to this key were in any other than the normal production environment, so we may extrapolate that any production machine could get access to it and therefore anyone with access to that environment could potentially exfil the key material. reply mh8h 21 hours agoprevWhy don&#x27;t they use HSMs instead? The whole point of those hardwares is to prevent leaking the key materials. reply toast0 17 hours agoparentThese guys [1] claim to have \"the fastest payment HSM in the world, capable of processing over 20,000 transactions per second.\" I imagine the peak load for signing authtokens for Microsoft accounts is way higher than that.[1] https:&#x2F;&#x2F;www.futurex.com&#x2F;download&#x2F;excrypt-ssp-enterprise-v-2-... reply A1kmm 4 hours agorootparentSo once an hour, each auth server requests a certificate (for a new private key) from the HSM. It caches that for the hour, and issues certificates for the clients signed by its private key - and puts them in a token including the chain with the cert from the HSM and the cert from the auth server. Clients validate no cert in the chain is expired.That way, the HSM only needs to do one transaction per hour per auth server. If auth tokens need to be valid for 24 hours, then the certificates from the HSM need to be valid for about 25 hours (plus some leeway for refresh delays maybe).If someone compromises the auth server and gets the private key (or gets in a position to request a cert from the HSM), then it is still quite bad in the sense that they have up to 25 hours to exploit it. But if this is only one of many controls, it still provides significant defence in depth, and cuts off certain types of attacks, especially for APTs who might not have any available TTPs to gain persistence in a highly secure auth server environment and who only briefly manage to gain access or get access to stale information as in this case. reply timmclean 16 hours agorootparentprevIs there a reason why they couldn&#x27;t split the load across multiple HSM? For something so sensitive I would&#x27;ve expected a design where one or more root&#x2F;master keys (held in HSM) are periodically used to sign certificates for temporary keys (which are also held in HSM). The HSMs with the temporary keys would handle the production traffic. As long as the verification process can validate a certificate chain, then this design should allow them to scale to as many HSMs as are needed to handle the load... reply toast0 15 hours agorootparentHSM are expensive, the performance is bad, and administration is a pain. They&#x27;re almost certainly running many clusters of their auth servers around the world, and would need significant capacity at all the locations, in case traffic shifts.It&#x27;s probably a better idea to pursue short lived private keys, rather than HSMs. If the timeline is accurate, the key was saved in a crash dump in 2021 and used for evil in 2023, monthly or quarterly rotation would have made the key useless in the two year period.A certificate chain is a little too long to include in access tokens, IMHO, but I don&#x27;t know how Microsoft&#x27;s auth systems work. reply twisteriffic 15 hours agorootparentAccording to https:&#x2F;&#x2F;www.wiz.io&#x2F;blog&#x2F;storm-0558-compromised-microsoft-key...The key expired in April 2021. Short lived keys only work if you actually check for expiry, which it appears they weren&#x27;t doing. reply olliej 19 hours agoparentprevThey way they discribed I assumed that the crashlog they got was from an HSM? reply SgtBastard 15 hours agorootparentAs a sibling commenter mentioned - if a HSM dumps its memory where it contains private key material, that’s a spectacularly bad HSM, which MS wouldn’t have been able to fix the race condition of.Reading that MS were able to fix the crashing system’s race condition that included the key, it’s likely to have been a long-lived intermediate key for which the private key was held in memory (with a HSM backed root key for chain of trust validation, assuming MS aren’t completely stupid).The challenge is the sheer scale these servers operate in terms of crypto-OPS… it would melt most dedicated HSMs. reply agrajag 18 hours agorootparentprevIt would be a gross failure of an HSM to allow private key material to leak in any way. reply noodlesUK 18 hours agoprevI feel like an issue that really got them was that the keys weren’t rotated. It sounds like quite some time passed between when the key was moved where it didn’t belong and when it got snatched. If keys were rotated frequently, it would not have been possible to use it to forge a token. reply acdha 13 hours agoprevLooking at the validation section of https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;azure&#x2F;active-directory&#x2F;dev... - did I miss something or does that still lack any mention of the importance of checking dates or revocation for the issuer? Since the pseudo code doesn’t I’d bet there are more implementations which trust any key Microsoft has ever published (modulo some kind of cache purge). reply trifurcate 11 hours agoparent> Since the pseudo code doesn’t I’d bet there are more implementations which trust any key Microsoft has ever publishedBingo, this is the most worrying bit to me. Pasting from a comment I posted earlier:> Microsoft&#x27;s own developers failed to implement a secure authentication check on top of their own libraries and infrastructure.If Microsoft can&#x27;t use its own identity platform correctly in a flagship Microsoft product (Outlook), what chance does anyone else stand? reply oger 1 hour agoprevOccam&#x27;s razor tells me that this exploit route as described in the press release sounds way too complicated and that too much luck must have been involved. Therefore I am sceptical if we will ever hear the real story. reply markus_zhang 3 hours agoprevThe crash dumps, which redact sensitive information, should not include the signing key. In this case, a race condition allowed the key to be present in the crash dump (this issue has been corrected).Can someone explain a bit about what kind of race condition this could be and how it exposes the signing key (in this case seems to be exposed without encryption)? reply munificent 21 hours agoprevI feel this everytime one of these articles comes out, but it seems totally bizarre to me that we rely on private enterprises to deal with state-level attacks simply because they are digital and not physical.If a Chinese fighter jet shot down a FedEx plane flying over the Pacific, that would be considered an attack on US sovereignty and the government would respond appropriately. Certainly we wouldn&#x27;t expect FedEx to have to own their own private fleet of fighter jets to protect their transport planes. No one would be like, \"Well it&#x27;s FedEx&#x27;s fault for not having the right anti-aircraft defenses.\"But somehow, once it hits the digital domain we&#x27;re just supposed to accept that Microsoft is required to defend themselves against China and Russia. reply miki123211 21 hours agoparent> If a Chinese fighter jet shot down a FedEx plane flying over the Pacific, that would be considered an attack on US sovereignty and the government would respond appropriatelyBut if a bunch of Chinese people robbed a US bank, let&#x27;s say the federal reserve, causing enormous financial damage but not loss of life, the response would be similar. Especially so if their link to the actual Chinese government was suspected couldn&#x27;t reliably be proven.Governments catch foreign agents somewhat regularly, and those captures don&#x27;t lead to an all-out war. reply bell-cot 21 hours agorootparentPerhaps - but, whether or not people from $ForeignNation are involved, U.S. banks (or other corporations, or ordinary citizens) generally do not need to have their own armed police&#x2F;security forces to deal with armed robberies. Nor their own DA&#x27;s, courts, etc.Vs. any \"cyber\" crime? All that nice stuff about \"...establish Justice, insure domestic Tranquility, provide for the common defence, promote the general Welfare...\" falls on the floor, and...YOYO. reply xmcqdpt2 4 hours agorootparentIt&#x27;s absolutely the responsibility of financial institutions to secure their premises and systems. Banks have massive security departments, guards, access restrictions, systems to detect fraud, vaults etc. The government only gets involved once a crime is reported, not in securing facilities.In fact, inadequately protecting their assets from mistakes or attacks can lead to SEC fines on top of losses,https:&#x2F;&#x2F;www.sec.gov&#x2F;news&#x2F;press-release&#x2F;2013-222If there is an attack in progress, the police will intervene, of course. But if it leads to a financial institution collapsing because all their money was in the one place and they weren&#x27;t insured, then that&#x27;s the fault of the bank. reply nerdponx 19 hours agorootparentprev> generally do not need to have their own armed police&#x2F;security forces to deal with armed robberies.They kind of do, no?Also, preventing crime and carrying out criminal justice are two very different things. reply gostsamo 10 hours agorootparentprevAre you ready to leave your authentication services, acl, patching procedures, tech stack choice, and network monitoring and management in the hands of the government? Because if you are not, you are asking the government to perform duties without the necessary means. reply c0pium 18 hours agorootparentprevNot true. It’s just that it doesn’t happen fast. This is just one example, there are many:https:&#x2F;&#x2F;www.justice.gov&#x2F;opa&#x2F;pr&#x2F;four-russian-government-emplo... reply belltaco 21 hours agoparentprevFirstly, no infrastructure was attacked or destroyed, or lives lost, unlike your example of FedEx plane. Some US govt folks had their emails read.Secondly, the US does this all the time, even to friendly countries, so it&#x27;s hard to justify harsher measures. reply munificent 20 hours agorootparent> no infrastructure was attacked or destroyedValue was destroyed in both cases. Users having their private data stolen have been harmed, the company&#x27;s brand value is harmed, and they may lose users over this.> or lives lostLives can be lost and real people can be harmed if their private information is stolen and used against them. There are dissidents and journalists in repressive countries whose safety depends on information security. reply duped 17 hours agoparentprevThere are multiple cases of nation states blowing passenger jets out of the sky and commandeering ships without it being treated as an act of war. reply xmcqdpt2 4 hours agorootparentRecently too,https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Malaysia_Airlines_Flight_17As far as I know Malaysia is not at war with Russia. reply tschwimmer 21 hours agoparentprevThe digital domain is fundamentally lower stakes and harder to protect than the physical one. It is good that we do not respond to cyber attacks like we do physical ones because we would have escalated to nuclear war over a decade ago. The scope and volume of cyberattacks is very high but my understanding is that the US has a correspondingly high volume of outbound attacks as well. reply fragmede 20 hours agorootparentFundamentally? A power plant exploding or dam collapsing would kill way more people and cost far more in property damage than a single FedEx airplane with two crew being shot down. reply lazide 18 hours agorootparentThose all (currently) require a lot more than stealing a key from M$. Maybe stuxnet would be a better example for your point? Those uranium centrifuges Iran had were very expensive. reply gmueckl 15 hours agorootparentprevI have no idea how you would get a dam to collapse with only a laptop and a network connection. As for the power plant, the operators would have to be blind and deaf to let a plant get destroyed.The real threat is a cascading power grid failure due to undersupply, e.g. coordinated forced plant shutdowns. A few days without electricity at a large scale means reduced availability of medical and emergency services, no running water, failing refrigeration, no stoves&#x2F;ovens for cooking for most of the population, no working gas pumps, no electronic payment, no banking (no way to get cash) etc. reply salawat 12 hours agorootparent>I have no idea how you would get a dam to collapse with only a laptop and a network connection.In a world where Stuxnet took out uranium centrifuges, and we&#x27;ve had actual PoC&#x27;s of exploits that resulted in generators fragging themselves, I find your statement to be of the most shocking form of naivete I&#x27;ve heard in a while.And in point of fact, the network connection would probably be for disabling alarms and control systems in order to mask work done to weaken the integrity of the structure itself. Physical and digital is inextricably linked. reply gmueckl 10 hours agorootparentA decently powerful generator is a massive machine. There is simply no way that it can destroy itself without causing abnormal behavior that will be noticed by on site personnel - noise, vibrations etc. reply fullspectrumdev 8 hours agorootparentI vaguely recall seeing a video years ago of the demonstrated hack on a generator causing it to suffer a rapid unscheduled disassembly event.It happened very fast, and was very unsubtle. Probably not enough time for site personnel to respond before damage was done. replyfullspectrumdev 8 hours agoparentprev… and Russian, Chinese, French, whoever private entities have to defend themselves against the NSA, CIA, GCHQ…Espionage is a dirty game.What I always find interesting is how the US has taken on a strategy of indicting individual Chinese&#x2F;Russian hackers for acting in the interests of their countries, whenever they can be identified by DoJ.This policy is interesting, because, as we all know, turnabout is fair play.How long before retired NSA operators are advised to never travel outside the US lest they be at risk of being picked up on international arrest warrants from China? reply markus_zhang 10 minutes agorootparentI&#x27;d say NSA probably already have such policy from decades ago. And all intelligence agency worthing their salt should more or less have done the same. reply jonstewart 16 hours agoparentprevShooting down a commercial airline from the US to Asia with a US Congressman onboard did not actually cause WWIII: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Korean_Air_Lines_Flight_007 reply eli 21 hours agoparentprevIsn&#x27;t that the idea behind CISA? reply c0pium 18 hours agorootparentVery much no. CISA defends the federal executive branch and advises critical infrastructure. They don’t and shouldn’t have a proactive role in defending private companies. reply tptacek 21 hours agorootparentprevI don&#x27;t think so? What makes you think it is? reply dboreham 21 hours agorootparentprevNSA reply c0pium 18 hours agorootparentThey’re explicitly forbidden from doing things like that. As they should be; do you really want the government to have access to the kind of private corporation data they would need in order to defend them? reply planetjones 20 hours agoprevNone of the reports mention if two stage authentication or any other extra factor authentication that enterprise accounts would be secured with were bypassed too. Am I right to assume that because the attacker had the signing key all of the extra authentication mechanisms that would have been enabled on accounts were bypassed by the attacker (because the attacker could create a token that bypassed all the extra authentication methods)?And I presume there has been no known dump of e-mails exfiltrated during this attack? reply SgtBastard 15 hours agoparentBecause it was a signing key that was stolen, the attackers could move straight to the post-authentication phase and forge authorization tokens.Those email accounts could have had multiple authentication factors enabled, other conditional access policies applied (geo-location, device trust, time of day etc)… all of which were skipped over. reply bobalob_wtf 7 hours agoparentprevWith the signing key they could mint the same type of token you get once you pass all of the authentication steps. reply ShadowRegent 16 hours agoparentprev> Am I right to assume that because the attacker had the signing key all of the extra authentication mechanisms that would have been enabled on accounts were bypassed by the attacker...?That&#x27;s my understanding. reply The28thDuck 22 hours agoprevDoesn’t seem like an operational issue, seems more like 99.9% design coverage of preventing these issues from arising.I will say, I’m not very satisfied with just “improved security tooling.” My gut is telling me that there is a better solution out there to guarding against credential leakage, but I feel wrangling memory dumps to have “expected” data is a fools errand. reply drodgers 19 hours agoprevThis is not confidence inspiring. These fixes are only surface-level, rather than looking at the underlying systemic failures:- Not storing key data in an HSM.- Exporting crashdumps outside of the production account.Redacting private keys and other sensitive data from these will always be failure-prone. Keys are also only just one problem, there will be personal data, passwords etc. in those dumps depending on what process it was.- Corp environment infiltration not detected at the time (presumably, since this part is pure guesswork)- Not enough log retention in the corp environment to track a 2 year old infiltration.- Not assuring that key validation correctly denied requests with the wrong scope.Fails-with-a-valid-key-with-wrong-(scope&#x2F;date&#x2F;subject etc.) are the kind of cases that always deserve test coverage, especially for a dedicated key-validation endpoint. Also concerning that this wasn&#x27;t found by manual-testing&#x2F;red-teaming&#x2F;pen-testing in the time since it shipped.- Slow detection, slow response, poor communication reply nijave 18 hours agoparent- Lack of timely key rotationThe lack of scope checking seems especially egregious. It sounds like any number of keys would have been incorrectly trusted. If it was an RSA key that signed JWTs which it sounds like or similar, Microsoft has an issuer endpoint for all customers and it&#x27;s critical to check the issuer&#x2F;scope for those since any number of things can create a token with a valid signature. reply nicknow 12 hours agoparentprev> - Not enough log retention in the corp environment to track a 2 year old infiltration.It didn&#x27;t say that Microsoft couldn&#x27;t identify that infiltration had occurred just that they didn&#x27;t retain the logs to prove to exfiltration. That makes a lot of sense, maintaining access logs is one thing but to retain the detailed logging of every file action by every user on a 100k+ user corporate network long-term would be a massive amount of storage, of fairly limited value.Even in this case, it might be nice to have but it wouldn&#x27;t change any of the major findings you care about if you are Microsoft: that a bug allowed a key to be written to a dump file, that the scanning tools didn&#x27;t detect the key in the dump file, and that the authentication process didn&#x27;t properly check the keys. reply yyyk 18 hours agoparentprev>crashdumps.. Redacting private keys and other sensitive data from these will always be failure-prone>Not enough log retention in the corp environment to track a 2 year old infiltration.The two are in conflict. Redaction is a problem for logs as well. A longer retention period implies a more damaging vulnerability. reply drodgers 5 hours agorootparentI was more talking about the problems of moving data across trust zones rather than retaining it at all. Retaining logs and crashdumps for several years is good, but moving them from a locked-down production environment to a less secure corp account (where they were presumably easier to work with because of the lower security requirements) is why this leak happened. reply ranting-moth 17 hours agoprevMicrosoft investigating a ginormous breach at Microsoft.Common guys. This requires at least one 3rd party investigation to be credible. reply est 14 hours agoparentThen a bunch of Chinese guys show up as the 3rd party. reply gordian-not 22 hours agoprevWeird they don’t have logs saved for something that happened two years ago due to ‘retention policies’.That’s something I would fix reply paxys 21 hours agoparentIt works this way by design. Most companies will retain logs for exactly as much time as legally required (and&#x2F;or operationally necessary), then purge them so they don&#x27;t show up in discovery for some lawsuit years down the line. reply c0pium 18 hours agorootparentIt has nothing to do with discovery or legal liability and everything to do with cogs. Log size at cloud provider scale is genuinely something you have to see to believe; recall that these are logs for a company with multiple services that see 9-figure daily active users. reply tristor 18 hours agorootparentThis is the real answer. The amount of logs generated at cloud provider scale now are massive compared to what they were just a few years ago. The last time I was involved in these sorts of systems, circa 2014, logging was one of the core functions at a cloud provider that was &#x2F;most&#x2F; demanding of physical hardware, everything from compute, memory, and storage, all the way to networking. A typical server in the environment in that provider in 2014 would have 2x10GigE connections set up for redundancy, log servers needed a minimum 2x40GigE connections &#x2F;for throughput&#x2F;.These days I wouldn&#x27;t be surprised if they are running 100GigE or 400GigE networks just for managing logs throughput at aggregation points. reply gordian-not 12 hours agorootparentwe’re talking an intrusion to the corp network not to the prod one (getting the keys from the crash dump)I assume that’s a way smaller scale. However the document doesn’t go into detail which kind of logs exactly they were missing, so maybe these were network logs reply gordian-not 21 hours agorootparentprevIt’s security logs though, presumably these carry less legal risk than chat messages or mailsAlso when you don’t know how a Chinese threat group got into your network that’s a major issue which will cost more than theoretical legal risk reply eli 21 hours agorootparentprevIt&#x27;s also a GDPR requirement to minimize the collection of personal data and to purge it as soon as it is no longer needed. reply wglb 15 hours agorootparentThere is a way to keep arbitrarily large logs and be fully compliant with GDPR with a little engineering. reply gordian-not 11 hours agorootparentsounds interesting, can you elaborate a bit? reply whimsicalism 17 hours agorootparentprevwrong, it has to do with size of the logs and gdpr reply tptacek 21 hours agoparentprevThere are multiple regulatory reasons why logs in general (outside of specific use cases) are hard to retain indefinitely. You can document a security use case that triggers indefinite retention for logs based on some selector, but then you run into the problem that they say happened here: your selector is inexact and misses stuff. reply ses1984 21 hours agoparentprevIs it practical to keep logs detailed enough that would capture exfiltration like this from the corporate network? reply ratg13 21 hours agorootparentIf you take the time to do a decent setup.Text compresses extremely well and long-term archive space is generally inexpensive.The hard part is all the work of deciding what is important, what the processes will be, and implementing a proper archive system.Most people just don&#x27;t dedicate the resources to things like this until the need is demonstrated. reply Eduard 20 hours agoprev> The key material’s presence in the crash dump was not detected by our systems (this issue has been corrected).Now hackers have it even easier to find valuable keys from otherwise opaque core dumps: Microsoft&#x27;s corrected detection software will tell them as soon as it finds one. reply Arrath 18 hours agoparentWhile true that it is easier for malicious actors to find this kind of thing with a tool that goes DONG! after a quick scan, its not as if the previous security through obscurity of \"key hidden in megs or gigs of crashdump\" was much of a blocker for a suitably motivated adversary. reply rdtsc 21 hours agoprevWonder if the actor caused the crash of the system in the first place?Or it was crashing so often they didn’t have to.Race condition to scrub the crashdump sounds fishy. When the system is crashing it’s hard to make assumptions or have any guarantees any cleanup and scrubbing is going to happen. reply ynniv 21 hours agoprevAnd that&#x27;s why you should keep your key material in an HSM, kids reply 1970-01-01 21 hours agoprev>Our investigation found that a consumer signing system crash in April of 2021 resulted in a snapshot of the crashed process (“crash dump”). The crash dumps, which redact sensitive information, should not include the signing key. In this case, a race condition allowed the key to be present in the crash dump (this issue has been corrected).Correction is good, but why can&#x27;t they go one more step and allow everyone to scan their server minidumps for crash-landed keys? reply natch 21 hours agoprev> Due to log retention policies, we don’t have logs with specific evidenceNo “this issue has been corrected” for this one. Are we still budgeting storage like it’s the 1990s for logs? reply cesarb 20 hours agoparent> > Due to log retention policies, [...]> Are we still budgeting storage like it’s the 1990s for logs?Retention policies are not necessarily about storage space; sometimes, they are there to avoid being required to provide that old data during lawsuits. reply c0pium 18 hours agorootparentRetention policies at cloud providers are 100% about storage space (and accompanying cost). At companies like Microsoft saying “reduced cogs” is a very reliable way to get bonuses. reply lazyasciiart 13 hours agorootparentIf storage space was 100% of the decision about logs they would not retain logs. The other factors include technical utility and legal considerations. reply c0pium 10 hours agorootparentHuh? Logs are how you run the service. Cost is what keeps you from retaining more of them. Since you seem not to be familiar with the subject, retention policy is something of a misnomer; it would be more accurate to call it a deletion&#x2F;destruction policy. The default is retain everything forever.There are no legal considerations here. That’s what lawyers are for, and big tech has a ton of lawyers.If you work somewhere that people are deleting things to keep them from being discoverable, run away as fast as you can. replyPublicCoconut 15 hours agoprevRegarding: “requires detailed knowledge of internal infrastructure”MSFT decided to move their APAC support center for Office365 to China. If there is an issue in APAC engineers usually respond from there. It makes sense regarding time zone and cost.However, people change jobs etc. Hence this setup will result in a number of good engineers with very detailed knowledge of those systems who live in China.On the more tinfoil end of ideas: if the office for this work is in a particular country it brings corresponding risks for physical opsec of the infra. reply jokoon 10 hours agoprevHow did those developers had access to that key, and how did it land in crash dump?I smell like gross negligence here. reply _tk_ 21 hours agoprevI am very curious why Microsoft is insisting that the key itself was „acquired“ without having anything to show for it. The wording seems a little odd to me, the constant repetition even more so. reply yalok 10 hours agoprevI always hesitate to send the crash dump for this very reason... reply bananapub 20 hours agoprevas far as I can tell, the only non-bug mistake here was allowing coredumps to leave production ever. if this is your attacker, you are pretty fucked no matter how good you are. reply aftbit 16 hours agoprevI do not fully understand the nature of the credential used here. Why was it still accepted several years after it was generated? reply lucasRW 7 hours agoprevI like how the fact that Microsoft&#x27;s normal corporate environment (ie. the one with Internet connection) being compromised is casually considered as a secondary issue here. reply 65a 19 hours agoprev1. Use HSMs, especially for big important keys with longevity2. Minimize workflows that cross security boundariesAre my takeaways reply AtNightWeCode 16 hours agoprevIs the key a certificate? Then it might be installed on all Service Fabric clusters. There is overall something fishy with X.509 handling in Azure. reply ratg13 22 hours agoprevI feel like there is a lot missing from this writeup, but I can&#x27;t put my finger on exactly what.Also it feels strange that Government doesn&#x27;t have its own signing key and they just use the same as everyone else. Which they didn&#x27;t address and apparently do not intend to change. reply sidewndr46 21 hours agoparentif the government had its own key, you could trace anything they signed. Governments likely want code and other stuff they sign to appear as if another actor signed it reply ratg13 21 hours agorootparentThe key belongs to Microsoft. Microsoft is the one signing the auth tokens, not the end users.I&#x27;m saying that Microsoft should have a separate private key to sign government auth tokens with. reply shadowgovt 21 hours agorootparentIIUC in general they do. One of the steps of this failure is that a key that had no business signing off on accessing government data was granted that scope by MS&#x27;s cloud software because they changed the scope-checking API in such a way that their own developers didn&#x27;t catch the change (\"Developers in the mail system incorrectly assumed libraries performed complete validation and did not add the required issuer&#x2F;scope validation\").So instead of failing safe, lack of new code to address additional scope features \"failed open\" and granted access to keys that didn&#x27;t actually have the right scope. reply mrguyorama 22 hours agoprevHow banal can a software mistake be before we aren&#x27;t allowed to besmirch the name of the devs involved? Is forgetting a test case a shameable offense? What about ignoring authentication? Rolling your own?Turns out when you write APIs that access security related things, you have to treat everything coming in as a threat, right? Shouldn&#x27;t that be table stakes by now?We need a professional gatekeeping organization because the vast majority of us suck at our jobs and refuse to do anything about it. reply ano-ther 21 hours agoparentI don’t understand the reflex for shaming. Everyone makes mistakes, and we are usually better off to understand & learn from it.If the first instinct is to punish, people will not be helpful in identifying their own mistake.Also, this is why companies like Microsoft have processes and systems to avoid such mistakes. They obviously failed here, but can be improved independently of the people involved.IIRC, airline safety investigations run in that way quite successfully. reply mrguyorama 19 hours agorootparentAirlines are actually a great point. Pilots get better and learn from past mistakes because they are REQUIRED by licensing agencies to LEARN about these past failures.Our industry can&#x27;t even manage the OWASP top ten with new grads. Surely we can try something slight different? reply GMoromisato 17 hours agorootparentprevMedicine is the same: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Morbidity_and_mortality_confer...M&M conferences are \"non-punitive\" to encourage people to accurately report what happened, even if what happened was a fatal medical mistake. reply shadowgovt 21 hours agorootparentprevMistakes and errors are inevitable. They are the side-effect of a functioning system.Where concern should occur is if one sees repeated mistakes of the same preventable kind. reply phillipcarter 21 hours agoparentprevThe issue was caused by a race condition in extremely complicated software. Good luck setting up a gatekeeping organization that can track that level of detail (and understand every dimension of a possible fault like this). reply lcnPylGDnU4H9OF 21 hours agorootparentI wouldn&#x27;t expect the gatekeeper to track these issues but rather to sign the credentials that developers have. Then the individual developers (ostensibly) have a base level of training that set them up to more likely avoid these issues. reply phillipcarter 16 hours agorootparentI don&#x27;t know if you appreciate the level of complexity here. We&#x27;re talking about a core diagnostics system (extremely complex software), that already has guards in place to protect against this stuff (complex again), but there was a race condition (complex again), and this one instance in likely billions and billions of transactions is what led to an issue.What training do you think could have prevented this? Microsoft deals with complex software at enormous scale. Bugs happen. And in this case, it was a severe one that&#x27;s already been dealt with. reply belltaco 20 hours agoparentprevPeople will always make mistakes. Thats why it&#x27;s better to focus on processes that should&#x27;ve been built to catch or stop mistakes, especially mistakes by a single person. reply natas 21 hours agoprev [–] I would fire their entire security team on the spot. reply sfink 16 hours agoparentYeah, why do companies even hire security people who allow security problems to exist? Or coders who write bugs? reply bagels 21 hours agoparentprevIs it possible to build a security team in a way that you can guarantee to never have any vulnerability ever? reply nazgulsenpai 15 hours agorootparenthttps:&#x2F;&#x2F;github.com&#x2F;kelseyhightower&#x2F;nocode reply shadowgovt 21 hours agoparentprev [–] Risky.Those are the only people on the planet you can trust to never make this mistake again. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Microsoft has shared the results of its investigation into the Storm-0558 actor who used a consumer key to breach OWA and Outlook.com.",
      "Findings reveal that a crash dump in April 2021 contained the signing key, later shifted to the debugging environment within the corporate network. Hereafter, a Microsoft engineer's corporate account was compromised by the actor to gain this key.",
      "Microsoft also discovered a library error that let the mail system accept enterprise email requests signed with the consumer key, which the company has since rectified."
    ],
    "commentSummary": [
      "The text summarises security breaches and vulnerabilities at Microsoft, including compromised credentials, unauthorized access to sensitive data, mishandled key material, and potential weak spots in the authentication system.",
      "The incidents have sparked debates surrounding Microsoft's security measures and structural issues, questioning the potential risks and consequences of cyber attacks.",
      "Emphasizing the need for reinforced engineering systems, data security, log retention policies, and third-party investigators, the discussion criticizes Microsoft's management of these incidents."
    ],
    "points": 371,
    "commentCount": 173,
    "retryCount": 0,
    "time": 1694023641
  },
  {
    "id": 37413908,
    "title": "My favorite Erlang program (2013)",
    "originLink": "https://joearms.github.io/#2013-11-21%20My%20favorite%20Erlang%20Program",
    "originBody": "Joe Armstrong - Erlang and other stuff Index 2013-11-21 My favorite Erlang Program 18th December 2018 at 1:56pm blogerlangpublished The other day I got a mail from Dean Galvin from Rowan University. Dean was doing an Erlang project so he asked “What example program would best exemplify Erlang“. He wanted a small program, that would be suitable for a ten minute talk that would best show off the language. I thought for a while ... and quickly wrote my favorite program, it's the “Universal server“. The Universal Server Normally servers do something. An HTTP server responds to HTTP requests and FTP server responds to FTP request and so on. But what about a Universal Server? surely we can generalize the idea of a server and make a universal server that which we can later tell to become a specific sever. Here's my universal server: universal_server() -> receive {become, F} -> F() end. That was pretty easy. Once I have created a universal serve it just sits and waits for a {become, F} message and then it becomes an F server. The Factorial Server A factorial server is a server which waits for an integer and sends back the factorial of an integer. This is mind-bogglingly simple: factorial_server() -> receive {From, N} -> From ! factorial(N), factorial_server() end. factorial(0) -> 1; factorial(N) -> N * factorial(N-1). Now we're ready to rock and roll ... Putting it all together I'll write a little function that creates a universal server sends it a “become a factorial server“ message, then I'll sent it an integer, wait for the response and print the response: test() -> Pid = spawn(fun universal_server/0), Pid ! {become, fun factorial_server/0}, Pid ! {self(), 50}, receive X -> X end. All these functions belong to the module /code/fav1.erl. Now all we have to do is fire up an Erlang shell and run the test program $ erl 1 > c(fav1). {ok, fav1} 2 > fav1:test(). 30414093201713378043612608166064768844377641568960512000000000000 Aside A few years ago when I was at SICS I had access to Planet Lab. Planet Lab is a research network of 9000 computers. Joining Planet Lab is easy, all you have to do is buy a standard PC, connect it to the network and donate it's use to the Planet Lab organization. Having donated you machine to the network, in return you can use all the other machines in planet lab. Planet lab is a real-world test-bed for distributed applications, it currently has 1171 nodes at 562 sites. What was I going to do with planet lab? I didn't have a clue. What I ended up doing was making some scripts to install empty universal Erlang servers on all the Planet lab machines (pretty much like the code in this article) - then I set up a gossip algorithm to flood the network with become messages. Then I had an empty network that in a few seconds would become anything I wanted it to do. About a year later I had to write a paper. One of the disadvantages of being a researcher is that in order to get money you have to write a paper about something or other, the paper is never about what currently interests you at the moment, but must be about what the project that financed your research expects to read about. Well I had my gossip network setup on planet lab and I could tell it to become anything, so I told it to become a content distribution networks and used a gossip algorithm to make copies of the same file on all machine on the network and wrote a paper about it and everybody was happy.",
    "commentLink": "https://news.ycombinator.com/item?id=37413908",
    "commentBody": "My favorite Erlang program (2013)Hacker NewspastloginMy favorite Erlang program (2013) (joearms.github.io) 294 points by vector_spaces 14 hours ago| hidepastfavorite113 comments rdtsc 12 hours agoIf the server closure F, besides it&#x27;s own messages can also receive a `{become, F}` message, then you can then keep changing the server to something new again and so on.Completely unrelated, but I remember talking to Joe at one of the Erlang conferences. He was always excited about technology and always happy to chat with anyone. He was dismayed how Windows had gotten worse and less usable over the years, and how one day we won&#x27;t be able to browse our own files on it until we sit and watch advertisements for a while to unlock them. Joe was nearly right! Sure enough, years later I hear there are ads in Windows 11 and you have to go out of your way to remove them. Not quite the same yet, but by Windows 13 I am sure we&#x27;ll get there. reply vector_spaces 11 hours agoparentI use Linux at home, and use Windows for work. Outside of the ads, I&#x27;ve been most surprised by1. My Windows machine has a lot more of the weird issues I used to see on Linux like 6-7 years ago. Like nothing showstopping. More like quality of life reducing stuff, like the volume in one headphone will be far louder than in the other, despite the mixer showing them the same. Or weird crashes in applications (specifically with Microsoft software). Or Windows documentation pages not resolving in any browser, forcing me to use an archive site to view them. Or my laptop occasionally not detecting my external monitor after detecting it fine for weeks. Or the monitor will flash occasionally2. Less surprising, more dismaying: Office software by default tries to get you to save files to the cloud instead of locally. Yes, having your files everywhere across all devices is nice, I know, but I would rather have my files local first, with cloud backup, rather than have my files in the cloud first. I&#x27;m old fashioned, I guess3. WSL is pretty jank, but it is probably the only reason Windows is usable at all for meMore topically: I&#x27;ve always heard that about Joe being a wonderful human being, and it makes a lot of sense. When I was first teaching myself to code, I came across his book on Erlang, and it had a huge impact on me. I loved the playfulness, humility, and imagination that he brought to his work. Even though I hardly ended up writing any Erlang, reading his writing changed the way I think about so many things related to code. It&#x27;s clear he cared a lot about pedagogy. I have a math background, and wish that both math and software engineering and CS culture embraced playfulness and humility more reply jiggawatts 8 hours agorootparentMicrosoft fired their entire QA team.They also fired their entire technical documentation team.They now treat Windows like freeware&#x2F;shareware, and monetise it the same way -- selling ads, collecting telemetry, bundling, and being pushy.Windows Server is abandonware, Microsoft only cares about Azure now. As far as they are concerned, hosting software yourself on-premises is a strange aberration and will eventually just go away.Entire categories of their products are no longer available for on-prem installation, such as: CosmosDB, Data Factory, Purview, Logic Apps, etc... reply jerf 2 hours agorootparent\"Microsoft fired their entire QA team. They also fired their entire technical documentation team.\"Honest question: Is this a scurrilous rumor or the actual truth?If you&#x27;re just being hyperbolic, I&#x27;m down with that, no complaint, I&#x27;m just curious how literally true this is.(I have to admit it&#x27;d explain a lot of what I see lately; I&#x27;ve observed for well over a decade now that if people held Windows to the same standards they do for \"the Year of the Linux Desktop!\" claims that Windows doesn&#x27;t necessarily pass the test either. But it does seem to be getting worse lately, and with things like ads it&#x27;s downright broken by design. Windows now survives in my house by the skin of its teeth, only because I haven&#x27;t found a Linux Cricut solution and we use that every few months.) reply watermelon59 40 minutes agorootparentThey essentially eliminated the SDET role across the company. There may be a few left here and there, but it used to be a whole thing of its own.The book How We Test Software At Microsoft describes in detail what the SDET role was about and how Microsoft used to approach quality.I think it’s a tragedy that they eliminated the discipline entirely. reply eitland 4 hours agorootparentprev> Microsoft fired their entire QA team.> They also fired their entire technical documentation team.Explains why I, when I tried to use the new Clipchamp app, I first had to look for the docs because what should have been obvious wasn&#x27;t obvious... and when I find the docs- they are translated (which is bad because it makes it harder to search in online resources when you have to guess what the concepts are called in English)- and it is impossible to change language- and navigation is so badly broken that the only way to navigate reliably between pages is to scroll to the top of the one you are currently on, find the link tree and choose another- oh, and the translations are hilariously bad: \"to share\" (as in sharing, which in my language is \"å dele\" or \"deling\") was consistently translated as \"a share\" (as in stocks, which in my language is \"aksje\"). As someone who knows English reasonably well and will even sometimes translate it is easily enough to understand, but really really jarring for me and probably not understandable for someone who doesn&#x27;t understand English and needs translations. reply anilakar 4 hours agorootparentThey seem to be going cloud only even on the desktop.I tried to use the built-in video editor in Windows 10, and it told me to start using Clipchamp instead. A few clicks later the new program was installed and running, and before I could do anything it asked for my name. This is normal in many office programs that want to embed author info in metadata, so I entered it without any hesitation. A few seconds later a new email pops up in my inbox - I apparently had signed up to an online video editor service using my Microsoft account without knowledge. reply Cthulhu_ 8 hours agorootparentprevI&#x27;ve had a headphone balancing issue on MacOS as well, probably my previous one (intel, 2016 model I believe), ended up installing a tool whose sole purpose was to rebalance the audio every once in a while if it detected it went skewed. I have zero clue how that would happen, I can&#x27;t see any practical purpose for any application or subsystem to be adjusting the audio balance. reply mirekrusin 7 hours agorootparentProbably it’s headphones doing spatial sound wrong? reply vector_spaces 2 hours agorootparentIn my case at least, my Windows laptop is the only device that has this problem. It works totally fine and as expected on several Linux laptops, my iPhone, my android, and my partners phone. reply thaumasiotes 8 hours agorootparentprev> My Windows machine has a lot more of the weird issues I used to see on Linux like 6-7 years ago. Like nothing showstopping. More like quality of life reducing stuff, like the volume in one headphone will be far louder than in the otherA while back I installed a Windows update that permanently prevented my existing Bose headphones from being able to connect to my laptop over bluetooth. reply nesarkvechnep 10 hours agoparentprevYour first paragraph. This is actually a feature of the Actor model. I didn’t realise before that it’s possible on the BEAM. reply IggleSniggle 1 hour agorootparentI thought this was basically the whole argument for Erlang, continuous hot-replacement of running servers and resilient server-cluster upgrades. Basically everything that kubernetes offers (from an operational perspective) has been available as a first-class programming construct in Erlang for decades. That was my understanding, anyway. reply thaumasiotes 8 hours agoparentprev> Sure enough, years later I hear there are ads in Windows 11 and you have to go out of your way to remove them.The intrusive ads are not new to Windows 11. They&#x27;re already there in Windows 10. reply corroclaro 2 hours agoprevI miss Joe. His infectious enthusiasm for doing computing _better_ left such an imprint on young me and the way I approach technology today. reply s6ro 8 hours agoprevA short (35 min) overview of BEAM and why it is not like other VMs: JVM, Node https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pO4_Wlq8JeI reply bmitc 6 hours agoparentI have watched his similar talk The Soul of Erlang and Elixir, and it was wonderful. It gets me excited everytime. reply rpxio 3 hours agoprevThis blog post was recently mentioned in this talk, which is excellent: https:&#x2F;&#x2F;youtu.be&#x2F;pQ0CvjAJXz4 reply whalesalad 54 minutes agoparentIs this the system where every patient is represented by an erlang process? reply rramadass 2 hours agoparentprevExcellent Presentation!Covers&#x2F;Explains all the steps in a High-Availability, Fault-Tolerant, Distributed Erlang-based system architecture beautifully.Thank you very much for the pointer. reply davidw 20 minutes agoprevI miss working with Erlang and BEAM. It&#x27;s a well built system and in some ways quite different from other things out there. reply coldtea 6 hours agoprevDon&#x27;t know Erlang aside from high level understanding about the language (basically know what one who read about it, but never programmed in it, would). Why is this needed (or, at least why is it nice to have)?: universal_server() -> receive {become, F} -> F() end.I mean what purpose does it serve other than having F() directly? One could just directly spawn F on the remote machines, no?(Perhaps that would need to have the code for F already on those remote vms, whereas this eg. also serializes and forwards F&#x27;s code?)I would understand the utility if this also handled some common boilerplate, but it seems to just wait for become F message and then doing F(). reply rdtsc 4 hours agoparentThis code while cool is not very idiomatic or perhaps not something you’d see in production often. That’s ok, Joe loved to explore and experiment.The way it works is that F is a closure. It contains some code but could have captured variables as well as it’s environment. Calling F() then executes the code and it will have access to the whole surrounding environment when F was created.In Erlang we can send a closure across the network to another Erlang node. That can be used and is cool but you still need the module code referenced in the closure available on all nodes.Long story short, in production code you’re right, we would just call the F module directly and pass its the arguments explicitly. This is more of a cool demonstration of possibilities. reply IggleSniggle 1 hour agorootparentDoesn&#x27;t this also allow hot-reloading on code update? You can update the code, and upon receiving, auto-reload it. So that \"is just a closure\" is adding a LOT of context (ie the entire codebase). reply toast0 1 hour agorootparentYou could use this for hotloading: send every (relevant) process a message with a new closure to run, and they begin running it when they process that message, but BEAM provides other infrastructure for hotloading.For modules, BEAM can have two versions loaded: the current version, and an old version. When you make a fully qualified function call module:function(...), it will call the current version, but calls within the module stay within the same version.So if you load a module&#x27;s new beam file, all processes that make fully qualified calls into that module get the new version. In case you&#x27;re wondering, if you load a third version, any processes that still running in the first version get killed (you can check before you load a third version if you don&#x27;t want that).It&#x27;s idiomatic to write receive loops as loop(State) -> NewState = receive ... end, ?MODULE:loop(NewState).so that if a new version of the module is loaded, processes will update after they next receive a message. Then you might add a timeout or a heartbeat message to ensure the processes update in a reasonable timeframe. Or use gen_server which has the loop and calls your module so processes only linger in your old module while working on a request. reply rdtsc 1 hour agorootparentprevIt can but it&#x27;s somewhat orthogonal. What F really is, is a closure. Besides being a function it may also capture its surrounding variables. However, if in that closure it calls a function from some module like foo:bar(Var) the module foo bytecode still needs to be available on the remote node. There is a way to remotely load module bytecode to remote nodes but the just sending the closure F itself won&#x27;t do it. It has to be done separately (https:&#x2F;&#x2F;www.erlang.org&#x2F;doc&#x2F;man&#x2F;code#load_binary-3 is one way to do it or the shell prompt&#x27;s nl(...) function does the same). reply jchrisa 4 hours agoparentprevIt&#x27;s cool because Erlang&#x27;s functional design means F() is just as good a \"top-level\" context as whatever one you were in before. Eg this will smoothly allow existing requests on the old logic but start new requests on the new logic, and eventually allow the old logic to be GC&#x27;d. reply mietek 4 hours agoparentprevThe quoted program is intended to run on the remote machine, and deserializes the new program that the remote machine is supposed to start running. F is a variable that stands for this new program that has been serialized and sent as an inter-process message, which in this case has been sent also over the network. reply peoplefromibiza 4 hours agoparentprev> Or would that need to have the code for F already on those remote vmsyes.but you can also send the code to the remote VMfor example in Elixir you can `Code.compile_string` which returns the name of the module and the code as binary (beam bytecode)You can then send that bytecode to another VM and load it in the remote VM using :rpc.call(&#x27;node@remote_host&#x27;, :code, :load_binary, [the_module_name, \"filename_doesnt_really_matter\", binary_code])and then spawn it spawn(&#x27;node@remote_host&#x27;, my_module, my_function, [args]) reply weatherlight 11 hours agoprevI spend a lot of time trying to explain why the BEAM is special and why concurrency in Erlang&#x2F;elixir&#x2F;etc is special when juxtaposed next to Go&#x27;s or Java&#x27;s concurrency story (now that Loom is right around the corner).From now on I&#x27;ll just link them to to Joe&#x27;s favorite Erlang program and this HN thread. reply refactorworks 12 hours agoprevnext [–]universal_server() -> receive {become, F} -> F() end.Honestly I don&#x27;t fully appreciate the power of this universal server. Can anyone help? reply softirq 12 hours agoparentIf you are familiar with Go, it&#x27;s similar to a goroutine that waits for someone to send it an anonymous function to start executing. In Erlang, you solve problems by spawning lots of processes, and most processes are waiting to accept messages. One critical difference is that in Erlang, processes can run on remote machines, seamlessly. This process accepts a message which is a tuple containing the atom become, which is basically just an enum, and a function. Another process, such as the Erlang shell, can send this tuple message with the function to this process at any time so that it \"becomes\" that function.What he is saying is that you can swap out the logic of this waiting loop with whatever protocol logic you want. His example was that he had a fleet of machines that were running this loop, and he sent all of them a function that implemented a gossip protocol. But he could easily send them all another message that turns them all into BitTorrent clients.Joe was an absolute genius and an extremely kind person. I had the honor of meeting him once. Erlang is still one of the most beautiful technical creations I&#x27;ve ever encountered. It really does make you see concurrency in a whole new way. reply henrik_w 9 hours agorootparentOn the subject of beauty, I really like this quote from Joe Armstrong:“Make it work, then make it beautiful, then if you really, really have to, make it fast. 90 percent of the time, if you make it beautiful, it will already be fast. So really, just make it beautiful!” reply tombert 10 hours agorootparentprev> Joe was an absolute genius and an extremely kind person. I had the honor of meeting him once.Completely agree. Joe was always willing to reply to my emails and answer my questions in detail. He was an exceptionally talented explainer, and his messages were always interesting and entertaining, while also being informative.I never met him in person but I will always treasure the correspondence I had with him. reply thakoppno 11 hours agorootparentprev> One critical difference is that in Erlang, processes can run on remote machines, seamlessly.Is there a concise way to explain how Erlang achieves this property? reply querulous 11 hours agorootparentit&#x27;s not as mysterious as it sounds. every data structure (including modules and anonymous functions) has a binary serialization and every erlang vm is also an rpc server that can receive arbitrary data -- including whole programs -- and execute them. your vm of course needs to know about the remote vms to do so but that&#x27;s where the rudimentary clustering mechanism in erlang comes into play reply thomasfortes 11 hours agorootparentAlso no shared memory in processes and they all communicate strictly through message passing, so running a piece of code in the local node, in another node in the same machine or in a node on the other side of the planet is a matter of telling which pid you want to send the message to, the BEAM will figure out how to send the message to the correct place in the cluster and your program will be none the wiser. reply coldtea 6 hours agorootparentprevIt&#x27;s basically a distributed RPC system. Your call is a message. reply rramadass 10 hours agorootparentprevYou can find all the details about Erlang internals in The BEAM book : https:&#x2F;&#x2F;blog.stenmans.org&#x2F;theBeamBook&#x2F; reply nojs 7 hours agorootparentprevI would be interested if you could elaborate on the advantages and disadvantages of Erlang&#x2F;Elixir over Go. I have often heard Elixir processes likened to goroutines. Since the process model seems like the primary advantage of Erlang, why would one prefer Erlang&#x2F;Elixir over Go? reply jerf 2 hours agorootparentI wrote up a fairly detailed comparison of the concurrency models, as someone who has used both for years, a few months ago: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34564228 reply ramchip 5 hours agorootparentprevThe critical difference is that processes are isolated, they don&#x27;t share resources like goroutines do. This makes it possible to separate the error handling from the business logic.When you open a file, a socket, allocate memory, borrow a database connection from a pool, etc. you don&#x27;t need to write try&#x2F;catch&#x2F;finally, or defer() statements, or logging, or any kind of error handling like that - if your code crashes, the VM will take care of the cleanup (because it knows what resources are owned by your process) and the supervisor above your process will log the problem and restart the process if necessary.This makes Erlang applications much safer by default, and the business logic is clearer and simpler because it&#x27;s not mixed with error recovery code (the \"if err != nil\" every other line that Go is famous for). The error kernel (the part of the app that must be carefully written to ensure reliability) can be kept really small[1].This comes at a cost in performance, because data must generally be copied between processes, whereas goroutines can send pointers directly to each other. But if you can afford it, it&#x27;s _very_ nice. Besides the error handling this also enables crazy observability (you can connect to a running app and inspect processes[2], kill them, send them messages, jump between nodes in a cluster, etc.), live code reload, and a bunch of nice things like that.[Process isolation also enables clustering, where processes running on different machines can talk to each other as if they were in the same OS process. The copying means it doesn&#x27;t matter if the other process is remote or local.][1] https:&#x2F;&#x2F;medium.com&#x2F;@jlouis666&#x2F;error-kernels-9ad991200abd[2] https:&#x2F;&#x2F;github.com&#x2F;zhongwencool&#x2F;observer_cli#demo reply smashedtoatoms 4 hours agorootparentThe clustering is what makes it feel so different, and what makes it such a compelling runtime for certain types of problems.It&#x27;s not an accident that large distributed chat programs or MQ systems are often written in erlang. From inside the code, writing a distributed system feels the same as working on one node.With go, you can&#x27;t do channels to a go process running on a different server without significantly changing the language. In erlang, you don&#x27;t notice because that&#x27;s just how it works.Write an app that runs on two nodes and sends updates to all clients via websockets. In erlang, you just write it. In EVERY other language, you&#x27;re loading a non-idiomatic library and probably running an MQ cluster or using an MQ service... probably written in erlang. reply mietek 4 hours agorootparentprevCopying doesn&#x27;t always have to happen. The Erlang VM is free to share blobs behind the scenes. reply ramchip 4 hours agorootparentIndeed, hence the \"generally\" :-) reply coldtea 6 hours agorootparentprevMore dynamic, better management, dead easy to get distributed programs in multiple machines. reply h0l0cube 12 hours agoparentprevTo explain further, the `receive` keyword is a bit like a switch statement (but actually a pattern matcher) for incoming messages.Here they made a new server that takes an return process (From) and a number (N). The exclamation point sends the result back to the return process. factorial_server() -> receive {From, N} -> From ! factorial(N), factorial_server() end. factorial(0) -> 1; factorial(N) -> N * factorial(N-1).This code then spawns the server, sends a message to that server to become a factorial server, then tells that server to send it back a message with the factorial of 50. It then specifies it&#x27;s own message listener that takes whatever it receives and returns it. test() -> Pid = spawn(fun universal_server&#x2F;0), Pid ! {become, fun factorial_server&#x2F;0}, Pid ! {self(), 50}, receive X -> X end.A couple of the major advantages of Erlang its distributed parallel nature, and also hot code update. Which happens in `Pid ! {become, fun factorial_server&#x2F;0}` where it overides the receive loop of universal_server with that of the factorial_server. Though I think proper hot code update doesn&#x27;t work like this reply coldtea 6 hours agorootparentAnd &#x2F;0 is the local vm? reply codemonkey-zeta 5 hours agorootparentIt&#x27;s the arity of the function. In Erlang there are no variadic functions, but functions with different arities can have the same name, so universal_server&#x2F;0 takes no arguments, fib&#x2F;1 takes 1 argument, fib&#x2F;2 takes 2 arguments, the second arg may be the accumulator for a recursive Fibonacci, for example, and fib&#x2F;1 may call fib&#x2F;2 as an implementation detail. reply chrisoverzero 5 hours agorootparentprev`&#x2F;0` refers to the arity of the function. reply brokencode 12 hours agoparentprevNormally you need to know ahead of time what your server is going to be used for and write the code in advance.But with Erlang, you can have a distributed network of Erlang servers where the server is a generic computing resource that can do anything the client wants.The code actually comes from the client. No need to get your system administrators to install some binary on all the machines. You simply pass the function along and the remote machine calls it. reply zaphirplane 8 hours agorootparentA few people here are liking the idea, isn’t this the exact definition of arbitrary code execution (exploit)It’s possible people are showing the capability of BEAM thou reply jerf 2 hours agorootparent\"Arbitrary code execution\", yes, \"exploit\", no. You need to be \"inside\" the BEAM cluster and a member of the BEAM cluster to do this. That is not something you hand off to end users, just as you do not normally hand end users direct access to your database socket or other such resources. In Raymond Chen&#x27;s terminology [1], if you&#x27;re sending Erlang terms to the BEAM cluster, you&#x27;re already on the privileged side of the airtight hatchway.[1]: https:&#x2F;&#x2F;devblogs.microsoft.com&#x2F;oldnewthing&#x2F;20060508-22&#x2F;?p=31... reply coldtea 6 hours agorootparentprevIt&#x27;s the definition of any distributed system (or even single server) where you can deploy code, whether it&#x27;s Erlang or a kubernetes cluster you setup.Is pushing new code for your server to run \"arbitrary code execution\"? I guess we can call it that. Is it an exploit?Depends if the code comes from some random person on the internet from mechanisms that you don&#x27;t intend for pushing new code to run (e.g. through a buffer overflow on your server or XSS), or if it comes from yourself through your official mechanisms. reply brokencode 2 hours agorootparentprevOnly if you allow untrusted clients to join to the cluster. To really make use of something like this, you’d have to control the clients rather than opening it up to anybody on the public internet. reply refactorworks 12 hours agorootparentprevThanks! I get it — no need to install binaries of specific servers. reply rramadass 10 hours agorootparenthttps:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37415159 reply nesarkvechnep 9 hours agorootparentprevDouble check whether you think of the correct abstraction level. The BEAM is more like the JVM than Kubernetes. reply zbentley 1 hour agorootparentOne of the most interesting characteristics of the BEAM, in my opinion, is that it&#x27;s similar to both. As a memory-managed bytecode runtime it&#x27;s similar to the JVM, and as a distributed process orchestrator+discovery and RPC system, it&#x27;s similar to Kubernetes.I often wonder what would have happened if the \"BEAM renaissance\" (driven largely by the birth of Elixir and associated tools) had happened a decade earlier, before Kubernetes became the de-facto standard for ad-hoc distributed computing in web software. reply jay-barronville 12 hours agoparentprevBasically, the idea is that it can become any type of server you’d like. The actual function to run the server is passed by the client and the Erlang process effectively morphs into that server after constructing it using the provided function. When you consider Erlang’s hot reloading abilities, this simple architecture becomes even more powerful. Another way to look at it is that the Erlang process is just compute waiting for work to do and the work is to run full-blown servers. Pretty neat. reply jay-barronville 12 hours agorootparentI was typing this answer on my phone and I didn’t realize several folks already responded. Move along, nothing to see here. Haha. reply macintux 12 hours agoparentprevI may be answering the wrong question, but I’ll give it a shot.Erlang’s architecture is unusual; both the virtual machine and the language are built around the idea of tiny processes operating concurrently, each process running in an infinite loop waiting for incoming messages to interpret.This allows a process to become whatever code you send it. If you need a process to control a microwave, and then run some quantum computations, and then predict the winner of tomorrow’s football game, you just send it the code it needs for each operation and it happily does so. reply notRobot 12 hours agorootparentAh, so TL;DR is that each process evals the supplied code and returns the output to the caller? reply Jtsummers 12 hours agorootparentThe universal server may or may not return anything. It just executes whatever is passed to it. In Erlang there are two ways of \"calling\" (in quotes for a reason). There&#x27;s conventional function calling which is the regular synchronous style that we all know and love: f(10).This will produce a result and return it to its caller. The other isn&#x27;t really a call, it&#x27;s \"sending\": Pid ! 10.Some process id has been sent the value 10. It may be on this same node, it may be on another node, I don&#x27;t have to care (sometimes I do though). This is asynchronous. Once a send is done the sending process will continue on (perhaps even terminating). At the other end of the send is a receive (hopefully, otherwise somebody&#x27;s queue is getting filled up...): receive N -> ... % do something with this value end.In the case of `universal_server` we don&#x27;t know what it will become, it&#x27;s just going to execute whatever 0-ary function is passed. That function may or may not include a \"return\" (sending a value back to the origin). It could also just terminate the universal server. Or it could temporarily convert the universal server into something else and then become a universal server again. reply macintux 12 hours agorootparentprevSlightly different in the low-level details, but conceptually accurate. reply Jtsummers 12 hours agoparentprevYou execute that on any node in your system and send it a message `{become, fun some_function&#x2F;0}`. Once it receives that conforming message (a tuple of two items, the atom `become` and a 0-ary function) and that node will stop being a \"universal server\" and become whatever process \"some_function\" describes.And in his case he had access to some 9000 computers. If each was running at least one Erlang node and each node was running a universal server, then with a very simple program he could write a function, serialize the function, and distribute the function to his 9k+ running universal servers and turn them into 9k+ specialized servers. reply octacat 6 hours agoparentprevIt is a nice example, which would be rarely used in the real systems. Could be used for understanding how hot-code reloading could be implemented. Real usage could be if we have some big state and wanna apply some operations on it, we could send \"{execute, F}\" into the server and pass code (i.e. a simple reference) instead of data. reply agundy 12 hours agoparentprevThis universal server is a process listening for a message with a function and then it executes that function here the function is just a different infinite server turning a running process into something new. I think it shows off the power of erlang processes and the ability to pass functions to replace running processes with new behavior without changing pids. reply xvilka 12 hours agoparentprevIs the same trick possible with other BEAM languages? E.g. Elixir? reply qohen 12 hours agorootparentYes. Here[0] is a gist showing it done in Elixir -- as you&#x27;ll see, it looks very similar to the Erlang code:[0] https:&#x2F;&#x2F;gist.github.com&#x2F;mndvns&#x2F;80b00cf67d418e8359fb5566b80ae... reply ungamedplayer 11 hours agorootparentprevHere is an aggressive worm&#x2F;virus that exploits this exact mechanism.https:&#x2F;&#x2F;github.com&#x2F;wmealing&#x2F;Elixir-virus reply rramadass 10 hours agorootparentprevYes; it is a property of the \"Erlang Run Time System\"(ERTS)&#x2F;\"VM\"(BEAM) - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37415159 reply hmmokidk 11 hours agorootparentprevYeah. I don’t see why not. reply javajosh 7 hours agoparentprevYou can achieve the same goal, if not so elegantly, if you define a node process that processes HTTP POSTs by evaling the body of the request to replace the previous handling function. In practice you&#x27;d quickly want to post a function that behaves normally. However you could also define a function that does something \"normal\" but has a code path for continually redefining the function.As exotic as this sounds, this is very similar to what web-browsers do with script src tags, especially from 3rd parties. The page is saying \"Hey let me eval a function that can do whatever it wants in this context. I trust you!\" Most webdevs don&#x27;t consider this a threat vector! reply daitangio 9 hours agoprevThere is also this lesson from Joe, about how to write a basic server in Erlang:https:&#x2F;&#x2F;gioorgi.com&#x2F;2015&#x2F;erlang-lesson1&#x2F;I transcribed and explained a bit more: it shows the power of an async language like Erlang&#x2F;Elixir compared to other ones. Sadly, it is little used nowadays reply hmmokidk 12 hours agoprevMy favorite Erlang programmer.RIP Joe. reply dang 10 hours agoprevRelated:My favorite Erlang Program (2013) - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=31639382 - June 2022 (19 comments)My favorite Erlang program (2013) - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22413029 - Feb 2020 (54 comments)My favorite Erlang Program (2013) - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=12396420 - Aug 2016 (38 comments)My favorite Erlang program (2013) - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=8807660 - Dec 2014 (2 comments) reply ak_111 7 hours agoprevQuestion: I am considering learning Go or Elixir to develop the backend for a high-frequency financial application. Focused strictly on concurrency and scalability benefits of each, which would be the better choice?Granted they are probably both great at highly parallel and distributed computing applications, I am just wondering if there is an interesting differentiation between these two in this aspect that I should be aware of. reply rramadass 1 hour agoparentThis top-level comment in this thread links to a excellent case-study which presents an architecture that may answer your question - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37418015For performance, drop down to C&#x2F;C++ (carefully);1) https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;1811516&#x2F;integrating-erla...2) https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=14771658 reply jerf 2 hours agoparentprevComparison on concurrency: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=34564228On scalability, given that high-frequency financial applications are generally super performance sensitive, or at least have a reputation of such, I would probably consider the BEAM VM disqualified (not the slowest language but definitely not the fastest) and even still have some serious questions around Go. I like to characterize it as the one of the slowest members of the fastest class of languages; yes, it&#x27;s compiled, and that means it generally beats interpreted and VM-based languages, but it&#x27;s definitely on the slower end of compiled languages due to its prioritization of compile speed over optimization time.In the case where I ported a system straight out of Erlang into Go, without a rearchitecture, pretty much a straight port, the Go system was 5-10x faster than the Erlang system, and I&#x27;d expect that to hold. BEAM made some decisions back in the 90s that give it some significant performance headaches nowadays... not fatal for all uses by any means, it&#x27;s completely possible to build a reasonable system on it, but if raw computational performance is high on your list of needs it&#x27;s got some nontrivial disadvantages. reply h0l0cube 2 hours agorootparent> if raw computational performance is high on your list of needs it&#x27;s got some nontrivial disadvantages.That&#x27;s what Rustler, Zigler, and Numerical Elixir (Nx) solve. It doesn&#x27;t mitigate issues around deep copies when passing messages between processes, but the absence of shared memory means that race conditions aren&#x27;t a problem to worry about, and the memory model is such that garbage collection is never going to be a performance issue even if you scale up to millions of processes per node. It also means you can trivially scale horizontally across multiple nodes because your code doesn&#x27;t (more accurately can&#x27;t) depend on sharing memory. reply jerf 1 hour agorootparentI&#x27;ve been hearing \"You can use this slow language and just plug in to a faster one when you need more speed\" for over two decades now, and it still has yet to impress me in practice. It&#x27;s still too easy to accidentally stray back into the slow language for extended periods, and it&#x27;s virtually guaranteed when it&#x27;s the \"glue layer\". Rust straight-up solves race conditions on its own terms, it is not hard to program Go in a way that doesn&#x27;t have them, etc. It&#x27;s easier just to write in the fast language in the first place.Also, I think the BEAM GC is widely misunderstood. Per process it&#x27;s kinda neat that it can GC without having to consider the others. But globally it&#x27;s actually kinda slow. Like I said, I&#x27;ve straight-up ported Erlang programs into Go, network clustering and all, and Go was quite significantly faster, even with the not-so-great GC Go had in the ~1.6 era. (I suspect if I ran the same code now it would just work with no GC problems.) BEAM GC is more \"hey, look at this neat trick!\" than \"better than anything around\". I actually wouldn&#x27;t consider it very good at all in modern terms. The Erlang community has a huge problem with thinking it&#x27;s still 2003 and comparing Erlang to all the other competition in 2003, but unless you&#x27;re still living in 2003, you need to be comparing to what&#x27;s around in 2023. reply h0l0cube 2 hours agoparentprevThis was in a top level comment on this post. It perfectly articulates what sets Erlang&#x2F;BEAM&#x2F;Elixir apart from other runtimes&#x2F;languages. Essentially performant, fault-tolerant parallelism by design.https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pO4_Wlq8JeIIf you need to break out into SIMD, you also have NX at your disposal. And Rustler&#x2F;Zigler provide you an escape hatch to low-level languages, with the latter you can code in Zig inlinehttps:&#x2F;&#x2F;github.com&#x2F;elixir-nx https:&#x2F;&#x2F;docs.rs&#x2F;rustler&#x2F;latest&#x2F;rustler&#x2F; https:&#x2F;&#x2F;hexdocs.pm&#x2F;zigler&#x2F;Zig.html reply sethammons 4 hours agoparentprevHaving used both, I think Go has better performance and due to its static typing you can reason about functions since their parameters are explicit. This scales better as the org grows. Elixir lets you define a spec but it is not enough. I routinely had to go several callsites up the stack ti understand the parameters. However, I heard static types are on their way and that is huge.Elixir has GenServer and BEAM niceties which is something you&#x27;ll have to replicate, likely poorly, in another environment.As for learnability, meh. Have a senior on staff and new employees will be able to learn either.Elixir has Phoenix, liveview, and Ecto. You&#x27;ll just have to look into them, but they are good. The game changer is iex, you can terminal into any running process in the cluster and interact with it.For me, I&#x27;m much more experienced in Go and would leverage managed kubernetes if I needed to cluster. I think it scales better for larger orgs. If it is a core group of one small team, Elixir is pretty rad. reply ak_111 3 hours agorootparentThanks, this covers all the angles quite well. What would be the closest equivalent to Phoenix&#x2F;liveview for Go (as in best django-like stack). reply sethammons 2 hours agorootparentNothing really; and nobody has a thing like liveview that I&#x27;m aware of. For Go, I use a request router (chi) and some helper packages for mundane things like reading env configs. I write the backend as an http api and then have a separate frontend, currently learning svelte for that. Go is very batteries included. reply bmitc 7 hours agoparentprevWithout more details, you&#x27;re just going to get people&#x27;s favorite language recommended or about how neither are suited to high-frequency trading applications. reply ak_111 6 hours agorootparentMy question is more general: what are some relative pros&#x2F;cons of Go vs Erlang&#x2F;Elixir when it comes to their approach to concurrency? reply ramchip 3 hours agorootparentI replied more in details elsewhere in the comments, but in a nutshell Erlang&#x2F;Elixir processes are a tool to contain errors, and they make some opinionated design choices to achieve that.Goroutines are a pure concurrency primitive, they don&#x27;t contain errors. A goroutine crashing will take down the entire program.Elixir would be absolutely beautiful for a trading program - you could run each strategy (trading algorithm instance) in a separate process, so that a bug in one of them can&#x27;t take down the whole system, and use monitors to guarantee orders are cancelled if a strategy crashes. I actually started learning it because I worked on such a system, and it was hard to sleep at night when any small coding error in the giant C++ codebase could send the whole thing crashing.It would definitely be too slow for HFT though :) reply ak_111 3 hours agorootparentThis is great, really appreciate your insight as you seem to have good experience with both. reply bmitc 6 hours agorootparentprevI don&#x27;t really know about Go. I favor functional languages, and so I am drawn to Erlang and Elixir. I recommend watching Sasa Juric&#x27;s talks on YouTube to best understand Erlang and Elixir&#x27;s concurrency features. One of his talks is posted elsewhere in this thread already. reply cpursley 5 hours agoparentprevBuild a POC in both and go with what you like working with the most. reply tombert 10 hours agoprevMy latest obsession has been the Julia language, which seems to borrow a number of ideas from Erlang in its distributed model. It&#x27;s reasonably easy to replicate this kind of \"instant-server\" that magically works across multiple nodes. I don&#x27;t know for sure, but I would be surprised if Julia&#x27;s Distributed module wasn&#x27;t at least a little inspired by Erlang.I absolutely love Erlang, and I wish I had more of an opportunity to use it, but it&#x27;s nice to see that some of its concepts are bleeding into other platforms. reply shele 6 hours agoparentAh, that&#x27;s great, sounds like we are allies, for example when arguing for \"let it crash\" and other take aways from the Erlang error reporting philosophy in the Julia community. reply kitd 9 hours agoprevExcuse a noob question, but what gets transmitted over the wire as `F` in the `become` message? Source, bytecode, function name, etc? ie. does the universal server need F in its \"classpath\" (or whatever the Erlang equivalent is)? If not, are there platform &| security issues when calling the universal server distributed?Genuine question. It&#x27;s a fantastic attribute of Erlang to be able to do this. reply dottedmag 8 hours agoparentIt will be a closure \"fun () -> ...\", and it&#x27;s serialized bytecode + a copy of captured variables — remember, they all are immutable. For a intra-node call it will be a reference to the bytecode, no need to copy anything.However if this code refers to any functions from modules via syntax \"foo:bar&#x2F;1\" then these references will be resolved on the target node, and both nodes better have the same versions of modules loaded. reply eru 8 hours agoparentprevThere are no extra security issues, because at this point you already assume that the other side is trustworthy.I think you can assume that they are sending something like bytecode, but might optimize that, if both are eg on the same physical machine. reply orangea 10 hours agoprev> What I ended up doing was making some scripts to install empty universal Erlang servers on all the Planet lab machines (pretty much like the code in this article) - then I set up a gossip algorithm to flood the network with become messages. Then I had an empty network that in a few seconds would become anything I wanted it to do.But you already had an empty network that in a few seconds would become anything you wanted it to, that&#x27;s how you installed empty universal Erlang servers on all the computers. reply jandrese 10 hours agoparentThe difference is I think that you hand off managing the distribution of the code to the Erlang VM, making it much easier to distribute anything else.Of course security guys are going \"Wait, every machine has an open RPC channel that will blindly execute code to every other machine???\" reply stephenr 10 hours agorootparent> security guys are goingIt&#x27;s a bit concerning if it&#x27;s only \"security guys\" seeing issues with this approach. reply toast0 9 hours agorootparentA cluster of Erlang nodes in distribution don&#x27;t have a security boundary once they&#x27;re connected. Neither do two threads in the same process in a traditional system.If that&#x27;s an issue, and I can see why it might be for some, you&#x27;ll need to use something other than Erlang distribution to connect your cluster.You can patch out the explicit rpc server, but I&#x27;m not sure that you can patch out receiving functions (maybe removing the code that deserializes them from external term format would work?), and you&#x27;d need to audit the whole thing to ensure nothing ever calls a function it receives. reply stephenr 9 hours agorootparentI&#x27;m not a security guy, so I can&#x27;t speak for what their concerns would be.I think my concern would be more in the realm of, you&#x27;re inherently relying on whatever peer authentication system BEAM uses (and it being bug&#x2F;exploit-free), to determine whether an RPC call can suddenly inject new code into a running system.In my experience good security is a lot like an onion - there&#x27;s lots of layers and generally some crying.If we consider a \"non-BEAM\" system that runs on say JVM, or even a \"scripting\" runtime (e.g. PHP, Python, Ruby, NodeJS) - you typically have a number of elements that (can) contribute to making the code that runs, relatively immutable outside of a deployment event (e.g., restricting access to ssh&#x2F;sftp&#x2F;etc protocols; varying types of filesystem permissions; readonly volumes; container filesystems; etc)Do other systems have similar \"run arbitrary code\" vulnerabilities? Sure. Allowing uploaded content to be executed by the PHP runtime is a classic example. But there&#x27;s almost no legitimate purpose for this, it&#x27;s almost certainly a configuration error&#x2F;mistake, and it&#x27;s relatively trivial to prevent it completely. reply qaq 8 hours agorootparentYou can lock things down to your hearts content using features of your OS of choice. reply sph 9 hours agorootparentprevYou&#x27;re not supposed to open the Erlang RPC port to the open Internet, and there is a modicum of security barrier with its cookie if you&#x27;re so inept as to run Erlang on a non-firewalled server on the open Internet.You don&#x27;t need security people for basic sysadmin know how. reply stephenr 8 hours agorootparentYou do apparently need security or basic sysadmin knowhow to understand that not all security threats originate from \"the open Internet\" reply sph 8 hours agorootparentSo? How is this specifically relevant to the topic at hand?If you have someone malicious in your internal network that can connect to your Erlang nodes, you have bigger issues that them connecting to your Erlang nodes.I don&#x27;t see the point of your original comment. Having an out-of-the-box RPC mechanism means you gotta secure it as you secure any other internal service. That&#x27;s sysadmin 101. reply stephenr 8 hours agorootparent> I don&#x27;t see the point of your original comment. Having an out-of-the-box RPC mechanism means you gotta secure it as you secure any other internal service. That&#x27;s sysadmin 101Most RPC systems can&#x27;t inject code into the running system dynamically. That&#x27;s the point of my original post. reply jandrese 8 hours agorootparentprevYeah, but what happens when your local web browser is tricked into opening a socket to the local Erlang instance by a malicious web page? That&#x27;s the kind of thing that keeps security professionals up all night. reply marksomnian 7 hours agorootparentIt’s a binary protocol though, which means that this specific scenario isn’t an issue as far as I’m aware (the only ways of making arbitrary JS-controlled network requests are XHR&#x2F;fetch(), which is only HTTP, and WebSockets, which have a handshake mechanism to ensure that the other side is really expecting a WS connection, which Erlang won’t be). replyp-e-w 9 hours agoprev> Dean was doing an Erlang project so he asked “What example program would best exemplify Erlang“.I wish such a canonical example was easy to find for every programming language, particularly those on the boundary between mainstream and exotic languages.Most languages present themselves by waxing philosophical about HoTT, zero-cost abstractions, or parametric types. Show me an example where your language is clearly better than Python, Ruby, TypeScript, C#, or Rust, because those are the languages to beat, and they already have the entire infrastructure set up so unless you can demonstrably outperform them in some way, it&#x27;s probably not worth my time to take a deeper look. reply almost 8 hours agoparentBut what if it’s better for complex tasks or large programs? I also wish language home pages would show examples of what makes the language special right away but it’s not always that easy. reply kaycey2022 8 hours agoprevDo we have any alternative that compares to planet labs today? reply NoMoreNicksLeft 2 hours agoprev [–] Get a load of this guy... he knows two erlang programs. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The author developed a program named \"Universal Server\" in the Erlang language, demonstrating its versatility as it can be configured to become any specific server.",
      "They extended this by creating a factorial server and combining these servers in a test program, further exemplifying Erlang's efficacy.",
      "Utilizing the Planet Lab research network, the author implemented a gossip algorithm, allowing the network to transform into different servers, further illustrating the dynamic nature of the Erlang language and its utility in network applications."
    ],
    "commentSummary": [
      "The discussions focus on the Erlang programming language, its concurrency model, and hot-reloading capabilities.",
      "Benefits of choosing Erlang over other languages such as Go have been highlighted.",
      "Security issues, Erlang's comparison with other distributed systems, and the necessity for a canonical example program are other topics discussed."
    ],
    "points": 293,
    "commentCount": 113,
    "retryCount": 0,
    "time": 1694052822
  },
  {
    "id": 37412772,
    "title": "Beetle grows ‘termite’ on back to steal food",
    "originLink": "https://www.science.org/content/article/beetle-grows-termite-back-steal-food",
    "originBody": "ADVERTISEMENT NEWS CAREERS COMMENTARY JOURNALS COVID-19 LOG IN BECOME A MEMBER News Home All News ScienceInsider News Features GET OUR E-ALERTS HOME NEWS SCIENCESHOTS BEETLE GROWS ‘TERMITE’ ON BACK TO STEAL FOOD SCIENCESHOTSPLANTS & ANIMALS Beetle grows ‘termite’ on back to steal food Puppet helps insect trick real termites into feeding it 6 SEP 202311:35 AM ETBYRICHARD PALLARDY SHARE: Facebook Twitter Linked In Reddit Wechat Email In what may be one of Earth’s craziest forms of mimicry, researchers have discovered a new species of rove beetle that grows a termite puppet on its back to fool real termites into feeding it. The replica is so precise, it even mirrors the termites’ distinct body segments and has three pairs of pseudoappendages that resemble antennae and legs. Rove beetles (family Staphylinidae) are already infamous in the animal kingdom as masters of disguise. Some, for example, have evolved to look like army ants, allowing the beetles to march alongside them and feed on their eggs and young. The new beetle species (Austrospirachtha carrijoi)—found beneath the soil in Australia’s Northern Territory—emulates a termite by enlarging its abdomen, a phenomenon known as physogastry. Evolution has reshaped this body part into a highly realistic replica of a termite (as seen above), head and all, which rides on top of the rest of the beetle’s body. The beetle’s real, much smaller head peeks out from beneath its termite disguise, the authors report this month in the journal Zootaxa. The termite “puppet” may help the beetle evade detection—though termites are blind, they sense one another through touch. The beetle may also absorb unique chemicals called cuticular hydrocarbons from the termites or produce similar compounds in order to enhance the perception that it is a termite as well. SIGN UP FOR THE SCIENCEADVISER NEWSLETTER The latest news, commentary, and research, free to your inbox daily SIGN UP Because A. carrijoi’s mouth parts are tiny, the authors think it begs food from its hosts rather than eating eggs or larvae. Worker termites feed other castes digested food in a process called trophallaxis. This adaptation has obvious advantages to the beetle. Once it is inside the nest, it can relax and spend the rest of its life living off of termite room service. doi: 10.1126/science.adk7176 RELEVANT TAGS: PLANTS & ANIMALS ABOUT THE AUTHOR Richard Pallardy Twitter Author MORE FROM NEWS 7 SEP 2023 Early-stage human kidneys grown in pigs for first time BY MITCH LESLIE 7 SEP. 2023 U.S. bets it can drill for climate-friendly hydrogen—just like oil BY ERIC HAND 7 SEP 2023 U.K. finally rejoins Horizon Europe research funding scheme BY CATHLEEN O’GRADY VIEW MORE Got a tip for Science's news department? CONNECT Sign up for ScienceAdviser Subscribe to ScienceAdviser to get the latest news, commentary, and research, free to your inbox daily. SUBSCRIBE ADVERTISEMENT LATEST NEWS 7 SEP 2023BY MITCH LESLIE Early-stage human kidneys grown in pigs for first time 6 SEP 2023BY ANN GIBBONS Humans aren’t the only fat primate 5 SEP 2023BY PHIE JACOBS Were these stone balls made by ancient human relatives trying to perfect the sphere? 5 SEP 2023BY RODRIGO PÉREZ ORTEGA Should beetles be named after Adolf Hitler? VIEW MORE ADVERTISEMENT SIFTER 16 AUG 2023BY CHRISTIE WILCOX Want to run a marathon in less than 2 hours? Unusual formation could help 9 AUG 2023BY CHRISTIE WILCOX An entire ecosystem lives beneath scorching hydrothermal vents 3 AUG 2023BY PHIE JACOBS Roman aristocrats bought passage to the underworld at this cemetery in Gaza 3 AUG 2023BY CHRISTIE WILCOX Whale of a whale may be biggest animal ever VIEW MORE ADVERTISEMENT Support nonprofit science journalism Help News from Science publish trustworthy, high-impact stories about research and the people who shape it. Please make a tax-deductible gift today. DONATE Not Now Skip slideshow NEWS All News ScienceInsider News Features Subscribe to News from Science News from Science FAQ About News from Science CAREERS Careers Articles Find Jobs Employer Profiles COMMENTARY Opinion Analysis Blogs JOURNALS Science Science Advances Science Immunology Science Robotics Science Signaling Science Translational Medicine Science Partner Journals AUTHORS & REVIEWERS Information for Authors Information for Reviewers LIBRARIANS Manage Your Institutional Subscription Library Admin Portal Request a Quote Librarian FAQs ADVERTISERS Advertising Kits Custom Publishing Info Post a Job RELATED SITES AAAS.org AAAS Communities EurekAlert! Science in the Classroom ABOUT US Leadership Work at AAAS Prizes and Awards HELP FAQs Access and Subscriptions Order a Single Issue Reprints and Permissions TOC Alerts and RSS Feeds Contact Us FOLLOW US GET OUR NEWSLETTER © 2023 American Association for the Advancement of Science. All rights reserved. AAAS is a partner of HINARI, AGORA, OARE, CHORUS, CLOCKSS, CrossRef and COUNTER. Terms of Service Privacy Policy Accessibility",
    "commentLink": "https://news.ycombinator.com/item?id=37412772",
    "commentBody": "Beetle grows ‘termite’ on back to steal foodHacker NewspastloginBeetle grows ‘termite’ on back to steal food (science.org) 257 points by sohkamyung 17 hours ago| hidepastfavorite142 comments doitLP 15 hours agoIt always boggles me how something like this evolves. Isn’t there a very long period (tens or hundreds of thousands of years) where it doesn’t look like the host termites at all? What selective pressures keep it evolving until it looks exactly like the host species?Also why would rove beetles be better at this than others, like the army ant example? Do they just have an extra-evolutionary ability to mimic? reply j_m_b 14 hours agoparentEvolution can happen rapidly[1]. All the needed changes could have occurred over just a few generations.It likely starts with chemical mimicry. I can&#x27;t imagine that it didn&#x27;t start this way as insects live in an umwelt dominated by chemical sensory input. The beetle is able to easily visit the nest, grab food and not be attacked. Their life cycle becomes more and more intertwined with the termites until they never leave the nest. The beetles whole body starts to transform under evolutionary pressures to produce an additional tactile mimicry. That&#x27;s my just-so story of how it could happen.[1] https:&#x2F;&#x2F;www.ncbi.nlm.nih.gov&#x2F;pmc&#x2F;articles&#x2F;PMC7818422&#x2F; reply bentcorner 14 hours agorootparentIt also probably works both ways - the termites evolve to better detect parasites, so simple mimicry that worked thousands of years ago wouldn&#x27;t work today. Similar to the relationship of AV and malware. reply astrange 12 hours agorootparentYou can also evolve the ability to evolve rapidly, eg by having areas of \"configuration\" genes and then \"code\" genes with more error correction. reply satvikpendem 14 hours agorootparentprevOr how GANs work, two networks competing between the generator and the discriminator. reply thaumasiotes 8 hours agorootparentprev> It also probably works both ways - the termites evolve to better detect parasites, so simple mimicry that worked thousands of years ago wouldn&#x27;t work today.This might or might not be true. Birds are a good example - they are subject to parasitic mimicry.One problem that a bird might have is that another bird lays one or more eggs in the first bird&#x27;s nest. Theoretically, the victim bird will then incubate the egg and potentially feed and rear the nestling as if that nestling were the bird&#x27;s own child.There are several points in this process where the victim has the opportunity to defend itself:- Ducks (at least some kinds) recognize the threat that another duck will lay an egg in their nest, and will fight approaching ducks to prevent them from doing this. But once the parasitic duck manages to get an egg into a victim&#x27;s nest, the victim is not able to detect the foreign egg, and is stuck incubating and raising the adoptive duckling.- Some birds learn to recognize their own eggs. If they come home and find a foreign egg in their nest, they will dump that egg onto the ground.- Birds could theoretically be able to recognize nestlings of their own species. This would not help the ducks from the first example, who are victimized by their own kind. But it would help birds to defend themselves against cuckoos (and similar parasites), who lay their eggs in the nests of other species of bird. I am not aware that any species of bird has actually developed this defense, though I wouldn&#x27;t be surprised if some have.Anyway, what&#x27;s relevant here is that all of these defenses have failed to develop in large numbers of birds that are subject to the relevant pressures. It&#x27;s definitely possible that the same simple mimicry that worked 100,000 years ago works just as well today. But it&#x27;s also possible that there&#x27;s been an arms race. reply shellfishgene 7 hours agorootparentIt&#x27;s important to keep in mind that selective pressure dictates how fast a beneficial mutation spreads in the population. If the terminte parasites were very rare, and there are only ever one or two per termite colony that eat a very small percentage of the food, any termite queen wo evolves the ability to recognize the parasite just a bit better would not have much of advantage compared to the other colonies. The positive mutation may be lost by chance again. However if the parasites were everywhere and take 50% of a colonies food, the small improvement in detection would lead to a significant advantage in reproduction of that termite colony, and thus the mutation would spread faster. reply mojo74 7 hours agorootparentprev> Some birds learn to recognize their own eggs. If they come home and find a foreign egg in their nest, they will dump that egg onto the ground.It can also works the other way round. Remove an albatross chick from its nest and the parent doesn&#x27;t recognise them and the chick will starve https:&#x2F;&#x2F;www.dailymail.co.uk&#x2F;news&#x2F;article-7619547&#x2F;Fans-Sir-Da...Nature eh?(Apologies for the Daily Mail link) reply zzbzq 4 hours agorootparentI can&#x27;t make sense of what you&#x27;re saying but I&#x27;m pretty sure the article you linked says the opposite reply thaumasiotes 2 hours agorootparentQuoting the article:> Grown Albatrosses are unable to recognise their babies by sight and only know its [sic] them if they are settled in the nest. replygorkish 12 hours agorootparentprevThank you for “umwelt”. reply jabiko 8 hours agorootparentAs a German speaker it felt really weird reading it. Like your brain is in English mode, reads over the word, then backtracks, switches to German, reads it again and then continues with English. reply huijzer 8 hours agorootparentprevI have a lot of appreciation for some specialized German words, such as Fingerspitzengefühl, Wanderlust, Zeitgeist, or Schadenfreude, but why Umwelt? It can just be translated to environment. reply throwanem 28 minutes agorootparentI might instead translate Umwelt as \"sensorium\", although I don&#x27;t think that&#x27;s quite exact. reply james-bcn 7 hours agorootparentprevit is the environment _as experienced_ by an organism. Me and my dog can have the same environment, but we&#x27;ll have different umwelt, because mine is primarily visual but his has a much larger scent component. reply gerdesj 7 hours agorootparentprev\"such as Fingerspitzengefühl, Wanderlust, Zeitgeist, or Schadenfreude, but why Umwelt?\"Wanderlust, zeitgeist and schadenfreude are all English borrow words. Fingerspitzengefühl isn&#x27;t (too complicated) and umwelt might well have just started to wriggle its way in!I love a good Germanic compound word as much as the next anglophone but it needs to be mostly pronounceable on sight to stand a chance of being co-opted. That&#x27;s one reason why the delightful sounding gewerbegebiet won&#x27;t replace industrial zone.Umwelt is suitably short and subtly different from environment. I suggest we nick it. reply huijzer 6 hours agorootparentOkay I agree then on nicking Umwelt since it has a different meaning.Since we’re discussing language and HN is a place to discuss, are you sure Fingerspitzengefühl is too difficult? The \"ei\" and \"tz\" sounds in Zeitgeist also make it a difficult word. reply yencabulator 25 minutes agorootparentI believe loan words only happen when the word makes some level of sense to speakers of the new language. Like, wander lust is almost understandable as English.Fingerspitzengefühl is complex enough that I&#x27;d assume people who never studied German can&#x27;t even split it into the words it comes from, to guess how to pronounce it.Finger spit zenge fühlFinger spit zen gefühlFinger spitz enge fühlFinger spitz en gefühlFinger spitz engefühlFinger spitzen gefühl reply lsaferite 3 hours agorootparentprevAt 20 letters it&#x27;s a suitably &#x27;difficult&#x27; word even if it were actually an English one with familiar pronunciation. It being a German compound word makes it&#x27;s usefulness to the general English speaking population highly questionable.I would bet money that 2&#x2F;3 or more of the people I know, keeping in mind that my technical acquaintances are only a small fraction, don&#x27;t know Zeitgeist enough to pronounce it properly or even give a definition for it if asked.Edit: Same goes for Schadenfreude reply Cthulhu_ 3 hours agorootparentprevIn Dutch probably the most frequently used German loan-word is \"uberhaupt\"; it&#x27;s probably used in the same connotation as \"anyway\" is in English, as in, \"I wouldn&#x27;t want to do that anyway\". reply jibal 6 hours agorootparentprev> It can just be translated to environment.No, that&#x27;s not at all accurate. From the dictionary: \"(in ethology) the world as it is experienced by a particular organism.\"Check out https:&#x2F;&#x2F;www.npr.org&#x2F;2022&#x2F;06&#x2F;21&#x2F;1105793891&#x2F;ed-yong-an-immense... for an in-depth discussion. reply MrsPeaches 6 hours agorootparentprevPersonal favourite is the compound word “Zeitlupe”. reply 867-5309 6 hours agorootparenthow about \"Zwitter\", for an ion with both positive and negative charge, and for a hermaphrodite(thanks Rammstein) reply qup 8 hours agorootparentprevSeconded, have never run across that word in all my reading. reply jibal 7 hours agorootparentHere&#x27;s where I encountered it: https:&#x2F;&#x2F;www.npr.org&#x2F;2022&#x2F;06&#x2F;21&#x2F;1105793891&#x2F;ed-yong-an-immense... reply EGreg 13 hours agorootparentprevSomething really makes me question all just-so stories.It’s not science. It paints a target around an arrow, the arrow being that all speciation must occur through random mutation and natural selection. Basically, the theory is unfalsifiable. It violates what Karl Popper was talking about.Now, don’t get me wrong. The theory of common descent is falsifiable. The phylogenic tree can be discerned. But the idea that we have discovered all the mechanisms by which speciation (or “macroevolution”) has ever occurred despite never having seen any of them in practice, is in my opinion bad science.And just-so stories are almost self-admitting that it’s more folklore than science.If you think I’m being too heterodox with my opinions, consider the just-so stories in the field of evolutionary psychology and extrapolate to all the phenotypes that are being described.But actually it seems worse than that because the math doesn’t seem to work out. What evolutionary advantage does a wing give before you can even glide? In the generations where it doesn’t accomplish much, it would seem that a random mutation would be far mord likely to disappear than take over a population. A mutation like proto—wings is likely to be extremely rare while the individuals’ genetic fitness may have increased by say 10%, although that is extremely generous considering the proto-wing confers no advantage and might be seen as freaky and unusual by the mates in the intermediate state. But even with an increase in genetic fitness, it is a tiny tiny effect. For it to take over the entire population eventually, or create a major branch within the population that has some “Lamarckian” direction towards a fully-working wing, seems extremely far-fetched. reply huijzer 8 hours agorootparentYes. The author of Darwin&#x27;s Blind Spot: Evolution Beyond Natural Selection agrees with you. The view that only natural selection determines evolution is the (neo-)Darwinism view, but there are more modern views as presented by Frank Ryan in aforementioned book. reply michaelmrose 13 hours agorootparentprevAre you fundamentally dissatisfied with the current limitations of our understanding and believe they need improvement or do you believe they ought to be abandoned? Just so stories can certainly be unsatisfying as they are insufficient pictures we feel compelled to create even when we lack too much in fine details like assembling bits of bone into fanciful and sometimes wrong creations that never walked the earth but consider that logically the fidelity of such pictures ought to improve over time as those fine details are studied. Changes even revolutionary changes in our understanding of the fine details are apt go go unnoticed by most until such time as they fundamentally alter large scale pictures people outside the sciences are apt to want to attend to.Consider the wing there is reason to believe that it may have been beneficial before it was useful for flight.https:&#x2F;&#x2F;academic.oup.com&#x2F;bioscience&#x2F;article&#x2F;56&#x2F;5&#x2F;437&#x2F;234719Perhaps the canonical example of such a question oft popular with creationionists is eyes but proto eyes are apt to have provided value.https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Evolution_of_the_eye reply EGreg 3 hours agorootparent”there is reason to believe” is a very low standard that falls short of what most people use in life. When there is no proof one way or the other, belief is a personal choice. But when one theory is systematically pushed against all others, I think it is normal for thinking people to subject it to critical scrutiny.In any other area of life, we’d require this if we wanted to be objective. For example, when solving murders, the idea that they can only be committed by men (ie random mutstion and natural selection) might lead to problematic cases (ie wings) where there is no clear scenario that fits all the data.One might question the underlying premise (all murders have always been commited by men) and suspect a woman. Suppose this leads to a bunch of plausible hypotheses that a woman committed the specific murder in question. But a trained “detective” could concoct lots of plausible-sounding just-so stories of how various men did it, instead.In this situation, let’s take a step back and see what we have. We have just-so stories, with some connection of reality, because they have been selected out of possible stories to have that quality. We also have evidence against each story. Let’s say that in a specific case, all stories about men doing murders have a lot more evidence against them than the woman stories. What then?The situation here is actually more empirical than neo-Darwinianism because we have compelling evidence and argument for men committing murders which we have observed. We know we have been able to prove it beyond a reasonable doubt many times. Whereas we have not been able to observe how speciation occurs in the vast, vast majority of (perhaps all) cases. We just know it occurs.So to say that it occurs excludiveky by method X is simply a hypothesis. And you can’t prove the hypothesis by concocting fanficul just-so stories and claim victory because they have some connection to reality!Perhaps the reason this isn’t scientific is because the stories have been selected to fit the conclusion, rather than being picked from the evidence in the environment. If you are exercising selection on the side of the story to such an extent, then you can find “reason to believe” anything anywhere. Just like a Marxist or a Freudian psychoanalyst. The theory is unfalsifiable! reply _a_a_a_ 7 hours agorootparentprevThe most trivial bit of research would have given you an answer. I put in \"wing evolution wiki\" which got me a top hit of https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Origin_of_avian_flight, which has an entire list of hypotheses: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Origin_of_avian_flight#Hypothe... includingPouncing Proavis modelCursorial modelWing-assisted incline runningArboreal model reply jibal 7 hours agorootparentIndeed. All these evolution-denying arguments have been repeatedly refuted in great depth. reply brap 6 hours agorootparentI don’t think he was denying evolution. He was suggesting that maybe slow, random natural selection is not the only mechanism by which organisms evolve.I’m not saying there’s an intelligent creator (I personally don’t believe in one), but perhaps the way genes mutate is more “intelligent” than we think. In some cases it sure looks like there was a “goal” to achieve, even at the cost of sacrificing something for a while. That seems kind of “intelligent”.Maybe it’s kind of like the exploration&#x2F;exploitation tradeoff in RN. reply _a_a_a_ 5 hours agorootparent> random natural selection is not the only mechanism by which organisms evolve.maybe. What is it?> In some cases it sure looks like there was a “goal” to achieve, even at the cost of sacrificing something for a while.Wiki link suggests wing evolution didn&#x27;t need that. Even crap wings were better than none. reply EGreg 3 hours agorootparentWiki link says that there is a lot of evidence against these just-so storiesIn any case, this isn’t how science is done. You’d be laughed out of the room if this was tried in most areas of life, including detective work etc.Now, let me refine my statement. Non-rigorous scientists have done this a lot throughout ancient history, and it has produced a ton of false theories with apparent explanatory power. The four humors. The theory of spontaneous generation. The luminiferous ether. Phlogiston. Have you studied the history of science and why people believed these theories for centuries, when they were so wrong? In my opinion, it should be required reading in school so people can see what mistakes were made in the past, to at least be aware of the patterns.Even the age of the earth, until radioactivity was discovered, hovered around 100 million years because of dogma.https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Planck%27s_principleHowever it is exactly the sort of thing that adherents of, say Marx or Freud’s theories, use. They see “confirming evidence” everywhere, and all they are doing is concocting narratives which are fitting every observed case into their framework. They add details that perhaps weren’t there.But if after a century all you have is just-so stories, many people will call that pseudoscientific. It’s fine to admit you don’t know, but shaming skeptical people into submission — like a sister comment does — betrays the insecurity that adherents of neo-Darwinism should probably feel if they are intellectually honest.> maybe. what is it?Well, we don’t know what can fill the gaps in our knowledge. But people who adhere to this or that school of thought insist it must be what they believe, and often their passive-aggressive tactics seem similar to each other. reply _a_a_a_ 2 hours agorootparent> Wiki link says that there is a lot of evidence against these just-so storiesIf you&#x27;re going to rebut me, please be specific. Looking again at my link, you&#x27;re right, the cursorial hypothesis has questions around it, the others don&#x27;t seem to. Can you point specifically to the evidence against, please.> In any case, this isn’t how science is done. You’d be laughed out of the room if this was tried in most areas of life ... Non-rigorous scientists have done this a lot throughout ancient historyWhat is &#x27;this&#x27; here? Making hypotheses, or something else?> just-so stories ... pseudoscientific ... shaming skeptical people into submission — ... betrays the insecurity ... if they are intellectually honest.Meh. Stick to facts. State clearly what you&#x27;re talking about and stop implying stuff about people who disagree with you otherwise you&#x27;re not being intellectually honest yourself.I&#x27;ve no idea what you&#x27;re talking about. Can you make your position clear please. If you&#x27;re saying there&#x27;s some alternative to evolution, please state it instead of teasing us.(edit: \"Have you studied the history of science\" - yes\"and why people believed these theories for centuries, when they were so wrong?\" - They were the best people could do at the time given the mathematical, intellectual, instrumental etc. limitations they had at the time. Perhaps you could enlighten us as to how they could have done better). reply EGreg 1 hour agorootparent>> Have you studied the history of science and why people believed these theories for centuries?> YesThe short terse answers yielding very little substantive information, are typical when you don’t have much substantive information, haven’t thought things through and are subconsciously worried you’ll “lose an argument”.The goal is to mutually improve understanding. Very few people have studied the historu of science and how and why scientific thought changed. I highly doubt you have done it to any great extent. But if you have, would you mind recommending a book on the subject? I can’t seem to find many on that particular subject.I genuinely want to learn more about it. I think it is fascinating, and that I know than most people on it, but I haven’t found great books on it so if you did in fact study it do recommend something.> I have no idea what you are talking about. Can you make your position clear please. If you’re saying there’s some alternative to evolution, please state it instead of teasing us.I think I have been quite clear, and you have chosen to ignore most of my direct questions.“Evolution” is a very broad term that encompasses many theories, and you shouldn’t be conflating them to make a disingenuous argument. For example, the theory of common descent says that animals of various species have common ancestors. It says nothing about speciation occurring only through random mutation and natural selection. There are other theories about punctuated equilibria etc. that are postulated to try to explain available evidence.What you are asking for is essentially a “neo darwinism of the gaps” argument. If you don’t know how it came about then “random mutation did it”.My whole point is that merely concocting just-so stories within a framework to double-down on it is not scientific. Do you agree? Or you disagree? Can you be clear?I have already quoted from your own article that the stories are problematic on their own terms. It isn’t my task to disprove your stories, it’s hard to prove a negative, and if you are making a positive claim the onus is on you to provide evidence for the story. It seems many of the stories are problematic.But even if they weren’t, merely following Darwin in this way isn’t doing actual science any more than a follower of Marx or Freud. replyEGreg 3 hours agorootparentprevHave you actually read it? What makes you think I haven’t looked into it? In fact your article just proves my point. It lists four hypotheses, ie just-so stories, each of which slavishly following the model of random mutation and natural selection. Not only does this not prove a theory, but even on their own terms they are highly problematic. For example to quote your own article:Although the evidence in favor of this model is scientifically plausible, the evidence against it is substantial. For instance, a cursorial flight model would be energetically less favorable when compared to the alternative hypotheses. In order to achieve liftoff, Archaeopteryx would have to run faster than modern birds by a factor of three, due to its weight. Furthermore, the mass of Archaeopteryx versus the distance needed for minimum velocity to obtain liftoff speed is proportional, therefore, as mass increases, the energy required for takeoff increases. Other research has shown that the physics involved in cursorial flight would not make this a likely answer to the origin of avian flight. Once flight speed is obtained and Archaeopteryx is in the air, drag would cause the velocity to instantaneously decrease; balance could not be maintained due to this immediate reduction in velocity. Hence, Archaeopteryx would have a very short and ineffective flight. In contrast to Ostrom&#x27;s theory regarding flight as a hunting mechanism, physics again does not support this model. In order to effectively trap insects with the wings, Archaeopteryx would require a mechanism such as holes in the wings to reduce air resistance. Without this mechanism, the cost&#x2F;benefit ratio would not be feasible.But consider even if the just-so stories were somewhat believable. What exactly does it prove? Isn’t it simply digging the heels in and doubling down on the original framework being the only one?It seems Planck’s Principle is true for evolutionary biology like it has been for many other fields: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Planck%27s_principleThe style of this comment is exactly the sort of religious attack-dog attitude I often encounter on this topic. Very low on substance, high on bluster. When the evidence or argument is not on the side of your dogma, is best defense is a good offense, eh?This kind of passive-aggressive comment is oozing self-assuredness while clearly having never delved into the material, nor ever read the thing they linked to. It’s almost as if they have just googled it briefly, found a wikipedia article, and said “you are totally mistaken! See, just a minute of googling will have shown how deluded you are, you unbeliever &#x2F; heterodox person &#x2F; whatever.”Except your article doesn’t do what you hope it does, and most of the substance of your comment is an adhominem swipe at whoever dared question the premises. You’re hoping there’s something in the article you barely read, to answer the major issue, without bothering to delve into it yourself. Or perhaps the person will be embarrassed enough by your bluster, to stop questioning. Either way, a win for the dogma.Imagine in any other area of life (eg solving a murder) if you always drew the target around an arrow (eg assuming that murders are always done by men) and then in every tough case came up with a million plausible but problematic just-so stories that always follow the model. What would it prove? Rather, the fact that the you keep concocting problematic stories in itself may reveal a major bias towards your underlying hypothesis, which makes you less objective as a scientist (or detective, or whatever in other areas of life).Read this essay by Karl Popper, called Science as Falsification, it’s not very long: https:&#x2F;&#x2F;staff.washington.edu&#x2F;lynnhank&#x2F;Popper-1.pdfIt was during the summer of 1919 that I began to feel more and more dissatisfied with these three theories—the Marxist theory of history, psycho-analysis, and individual psychology; and I began to feel dubious about their claims to scientific status. My problem perhaps first took the simple form, ‘What is wrong with Marxism, psycho-analysis, and individual psychology? Why are they so different from physical theories, from Newton’s theory, and especially from the theory of relativity?’To make this contrast clear I should explain that few of us at the time would have said that we believed in the truth of Einstein’s theory of gravitation. This shows that it was not my doubting the truth of those other three theories which bothered me, but something else. Yet neither was it that I merely felt mathematical physics to be more exact than the sociological or psychological type of theory. Thus what worried me was neither the problem of truth, at that stage at least, nor the problem of exactness or measurability. It was rather that I felt that these other three theories, though posing as sciences, had in fact more in common with primitive myths than with science; that they resembled astrology rather than astronomy.I found that those of my friends who were admirers of Marx, Freud, and Adler, were impressed by a number of points common to these theories, and especially by their apparent explanatory power. These theories appeared to be able to explain practically everything that happened within the fields to which they referred. The study of any of them seemed to have the effect of an intellectual conversion or revelation, opening your eyes to a new truth hidden from those not yet initiated. Once your eyes were thus opened you saw confirming instances everywhere: the world was full of verifications of the theory. Whatever happened always confirmed it. Thus its truth appeared manifest; and unbelievers were clearly people who did not want to see the manifest truth; who refused to see it, either because it was against their class interest, or because of their repressions which were still ‘un-analysed’ and crying aloud for treatment.The most characteristic element in this situation seemed to me the incessant stream of confirmations, of observations which ‘verified’ the theories in question; and this point was constantly emphasized by their adherents. A Marxist could not open a newspaper without finding on every page confirming evidence for his interpretation of history; not only in the news, but also in its presentation—which revealed the class bias of the paper—and especially of course in what the paper did not say. The Freudian analysts emphasized that their theories were constantly verified by their ‘clinical observations’. As for Adler, I was much impressed by a personal experience. Once, in 1919, I reported to him a case which to me did not seem particularly Adlerian, but which he found no difficulty in analysing in terms of his theory of inferiority feelings, although he had not even seen the child. Slightly shocked, I asked him how he could be so sure. ‘Because of my thousandfold experience,’ he replied; whereupon I could not help saying: ‘And with this new case, I suppose, your experience has become thousand-and-one-fold.That is what just-so stories are for adherents of neo-Darwinianism! reply jcims 3 hours agorootparentI&#x27;m over here in my little corner of the world pumping my fists reading your posts in here.>religious attack-dog attitude I often encounterThis describes it precisely. I&#x27;m sure it&#x27;s partly rooted in a long history of disingenuous arguments starting in the same way, particularly those that jump from something that has any scientific basis at all right to full on metaphysical or spiritual explanations.I&#x27;m sure it&#x27;s also rooted in much of the same psychological underpinnings of evangelists allowing for thought tinkering at the edges of scripture but protecting the tenets of their faith quite literally with their lives. reply _a_a_a_ 2 hours agorootparentprevSee mah post https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37418702 replyshellfishgene 7 hours agoparentprevJust imagine the first rove beetle was adapted to be a predator of social insects. It runs to the colony and tries to grab some eggs. It&#x27;s often detected and killed. So maybe by chance one beetle has a mutation that makes one of its pherhormones (or whatever) smell slightly more like termite. It&#x27;s a bit less likely to get killed by the termites, so it has an advantage and higher reproductive success. The new genes spreads through the population. The another one gets a mutation that makes it&#x27;s antennae just a bit more termite-like... You get the idea.Why rove beetles? No idea, but maybe their body plan was for some reason more adaptible to change morphology? Also maybe because they were closely associated to colonial insects from the beginning as predators, and so had high selective pressure to avoid detection. reply hyperthesis 7 hours agoparentprevIt needn&#x27;t be perfect at first, just better than nothing (fool some of the eyes, some of the time e.g. in low-light conditions) and a gradient. See Richard Dawkins&#x27; chapter \"Do good by Stealth\" in River Out of Eden https:&#x2F;&#x2F;wikipedia.org&#x2F;wiki&#x2F;River_Out_of_Eden#Do_good_by_stea... reply jcims 12 hours agoparentprevI’ve always had a notion that there’s some kind of gene theft with mimicry. The combinatorics of just rattling genes into existence that build a mock termite larva seem infeasible in the timescale involved.What does the math look like? How many possible gene configurations are there that will build a mock termite on the back of a beetle? What’s the shortest random walk to get there from a beetle with no termite on its back and how does that compare with the total number of these beetles ever created in nature?A single gene might have 4^300 configurations. Are there five genes or fifty or five hundred involved? How many of these beetles have ever been built? 10^20? reply shellfishgene 7 hours agorootparentAs development works in stages based on the last one, I would assume gene theft just doesn&#x27;t work on a beetle genome background. You would have to change development from the egg onwards to mimic the termite, essentially turning the beetle into a termite proper. reply phito 7 hours agorootparentprevThe genome does not store a map of the final organism, so it seems unlikely. reply ajuc 3 hours agoparentprevThere&#x27;s no incentive for termites to be good at distinguishing impostors before there are impostors. So they could get away with very bad disguise at first, then arms race started. reply HelloNurse 3 hours agorootparentThere&#x27;s also the separate evolutionary axis of how the beetle behaves: they learned to seek out termites and collect food from them, exposing themselves to quick lynching if the disguise fails.It&#x27;s easy to imagine intermediate states where mediocre disguises work some of the time and the beetle is cautious because it occasionally needs to run away. reply legulere 11 hours agoparentprevIt’s not just the beetle that evolved but the termites as well. It probably started out with the termites being pretty bad at detecting their kind and becoming progressively better because of the pressure of that beetle stealing their food. reply mjan22640 10 hours agoparentprevSince the discovery of DNA we build up the common knowledge that \"it is all in the DNA\", and the basis of evolution is a random change in DNA. It was due to a selection bias, DNA is a static structure that sits there and waits to be studied while the nano processes in a cell were impenetrable until fairly recently. DNA only contains templates for proteins. It does not contain informtion how to assemble the molecular machines from the proteins, or how \"to be alive\" in general. A cell is a fairly intelligent problem solver, that can adapt and chang during its lifetime, it does not need to wait for a mutation to occur. There is heritable information outside of DNA, that is epigenetic in its nature. In a multicellular organism this information is communicated and shared between cells. A beneficial DNA mutation is like a lottery win. It might be viable strategy in viruses an bacteria, who divide at an astronomical speed. A multicellular organism gametes divide only a handfull of times per generation. These need to put a more concerted effort, than a random chance, to score. reply ampdepolymerase 9 hours agorootparentNo, no, no. Explanation is inaccurate. The central dogma is the central dogma because information flow is primarily one way (yes there are exceptions i.e. epigenetics but primary information flow is from DNA to protein) and this is the fundamental tenet underpinning our current understanding of biology.> A multicellular organism gametes divide only a handfull of times per generation.That&#x27;s what recombination is for during sexual reproduction.> It does not contain informtion how to assemble the molecular machines from the proteins, or how \"to be alive\" in general.Unless you subscribe to the creationist or Larmarckian schools of thought, this is flat out wrong. DNA polymerase and similar analogues like reverse transcriptase do not exist in a vacuum. There are entire branches of evolutionary biology dedicated to studying their formation. The main transcription proteins, helicase, polymerase, and ribosomes can all be assembled from the basic proteins they themselves transcribe. (Incidentally figuring out the ultimate structure that a protein chain assembles into is what AlphaFold does, bioinformatics and ML&#x27;s crowning jewel)> There is heritable information outside of DNA, that is epigenetic in its nature.When biologists refer to epigenetics, they mean information carriage that&#x27;s not strictly tied to the nucleotides. This doesn&#x27;t meant DNA isn&#x27;t involved. Most epigenetics I can think of off the top of my head all involve the DNA transcription mechanism in some way. reply gus_massa 3 hours agoparentprevTotally unsupported hypothesis: They evolved first a big fat termite ass, that is much easier and it&#x27;s probably good enough many times in the dark narrow alleys of a termite hive. Later they evolved the decoration. It would be nice to see how the beetle grows, because \"Ontogeny recapitulates phylogeny\" is not exact, but sometimes is a good approximation. reply yalogin 4 hours agoparentprevI have the same questions, more so because if it happens over a long time it’s not sustainable. The beetle population can be in some weird in-between state which could be tough for their survival. reply tomcam 9 hours agoparentprevAll the answers you got are fairly state of the art, but it’s mostly descriptive. Very little testable or otherwise falsiable information.The more we learn about developmental biology the more baffling the origin of cellular behavior becomes. reply slavetologic 11 hours agoparentprevI don&#x27;t believe that evolution is a random walk. There&#x27;s clearly momentum based factors reply melagonster 3 hours agoparentprevactually this is a cool question, biologists always try to reply these questions. but this is a new species... reply yieldcrv 14 hours agoparentprevI’m willing to entertain a dash of Spontaneous Generation alongside selective pressures reply intrasight 14 hours agorootparentGod having fun with Blender reply phito 13 hours agoparentprevEvolution is much smarter than just random mutations reply lusus_naturae 13 hours agorootparentEvolution is a population level effect and doesn&#x27;t have a plan or scheme, it&#x27;s whatever helps reproduction. reply phito 13 hours agorootparentIt doesn&#x27;t stop it from being smart at solving problems. reply SteveNuts 13 hours agorootparentIsn&#x27;t it just random? reply cactacea 13 hours agorootparentMutation is only half of the process, selection is not random. reply Woshiwuja 3 hours agorootparentprevNo, its not random, its whatever fits the best reply eru 13 hours agorootparentprevHow? reply cactacea 13 hours agorootparentMutation is random, selection is nothttps:&#x2F;&#x2F;evolution.berkeley.edu&#x2F;teach-evolution&#x2F;misconception... reply eru 8 hours agorootparentI implicitly interpreted your statement as &#x27;Evolution is much smarter than just selection over random mutations.&#x27;It seems like a overinterpreted. If we stick to the strict wording, you are correct. Almost trivially so. replyggm 12 hours agoprevThe species co-evolved? I am assuming the early \"I am a termite\" mimicry wasn&#x27;t very good, but neither was the termites &#x27;not a termite&#x27; detection logic and so each incremental step of the way over 100,000+ years of evolution, they co-evolved to believe this mimicry, at a high level.Neither party can entirely \"win\" in this model. At best, they get some marginal benefit in a predator&#x2F;prey&#x2F;host model which alters the cyclical swings of which species is higher or lower in the equipoised outcome. Over the next 1000 years, it swings the other way. reply linguistics__ 4 hours agoparentIt&#x27;s also worth taking the \"Life&#x2F;dinner principle\"[0] into account. If the termites fail to detect the beetle, then they might loose a tiny bit of food or whatever. While if the beetle fails to deceive the termites it might get killed or starve. Hence the adaptive pressure is probably higher for the beetle than for the termites.0: The name comes from the example: the rabbit runs faster than the fox, because the rabbit is running for its life, while the fox is running for its dinner. reply achenet 1 hour agorootparentI&#x27;m not sure the \"life&#x2F;dinner principle\" is always applicable.A cheetah runs faster than a gazelle. And if you consistently fail to catch your dinner, you&#x27;re probably going to lose your life. reply shellfishgene 7 hours agoparentprevThe borders between parasitism and beneficial symbiosis can be fluent. Maybe if another parasite arises (say, some mite), it&#x27;s in the beetle&#x27;s interest to defend \"its\" termine colony against it, and it may have better ways of doing it because the mite evolved only with termites as hosts. reply DonHopkins 8 hours agoparentprevMaybe the beatle gives its hosts good Yelp reviews in return. reply selcuka 14 hours agoprev> The termite “puppet” may help the beetle evade detection—though termites are blind, they sense one another through touch.Something doesn&#x27;t sound about right [1]. If termites are blind why would the beetle evolve to the point it replicates the look of the termite so precisely, down to the colour? There must be another advantage, possibly when interacting with another, non-blind species.Update: Apparently another beetle has been successfully doing the same without needing to mimic the look, but only by secreting similar chemicals [2].[1] Disclaimer: Layman comment[2] https:&#x2F;&#x2F;www.newscientist.com&#x2F;article&#x2F;dn22526-zoologger-the-b... reply biomattr 3 hours agoparentRove beetles also parasitize army ants. As soon as army ants existed these beetles we&#x27;re building backdoors. Of course the ants want to recognize these cheaters and eliminate them. As ant genera diverged over time some relied more on tactile recognition of body shape (&#x27;touchers&#x27;) and others not so much (&#x27;sniffers&#x27;). The parasites of touchers look like the ant but the sniffers not as much.https:&#x2F;&#x2F;doi.org&#x2F;10.1016&#x2F;j.cub.2017.02.030Touch is dependent on dopamine but smell not as much. And dopamine producing cells are pigmented. Could improved tactility and pigmentation be linked? reply dan_mctree 1 hour agoparentprevHey this fits my entirely unsubstantiated pet theory: evolution is not just partially Lamarckist, but there&#x27;s also a purposeful mental component to it. Animals can -presumably subconsciously- partially pass on traits that they themselves think are advantageous. Eg, in this case, the beetle wants to look more like termites and so its offspring becomes more like termites as seen by the beetle even in ways that don&#x27;t actually matterI have no idea how such a mechanic may work, but there&#x27;d be a great advantage in success for animals that could develop such a style of evolution reply bobbylarrybobby 12 hours agoparentprevPerhaps blending in with termites helps it avoid being eaten by predators of termites to whom it would stand out.Alternatively, perhaps termites are “legally blind” but not fully sightless. reply itsme5trange 13 hours agoparentprevMaybe the beetles don&#x27;t know that the termites are blind? reply javajosh 11 hours agorootparentThe termites evolved that coloration for a reason, perhaps to avoid predators. It stands to reason that the beetle would also evolve avoid predators in the same way. That is, the mimic has two audiences: the termites, and the termites&#x27; predators. reply shellfishgene 7 hours agorootparentNot necessarily, if the color doesn&#x27;t matter it would evolve towards the one that is the least costly. Probably like not pigment at all. reply HelloNurse 3 hours agoparentprevOff-white is not a special colour, it&#x27;s typical of biological material that is neither pigmented nor unusually transparent.So it might be simply a non-evolved default that is good enough to fool blind termites, themselves similarly off-white because they don&#x27;t care about the visual appearance of their comrades. reply eru 13 hours agoparentprevThe colour replication might be a co-incidence? reply joebob42 13 hours agorootparentOr alternatively, those colors are good for a beetle with a termite on its back for the same reason they&#x27;re good for a termite. They help whatever the termite looks like blend in to the area where termites usually are. reply qup 8 hours agorootparentprevOr a result of diet. reply ravenstine 13 hours agoparentprevPerhaps there&#x27;s some other advantage to the termite puppet other than food stealing? reply rendall 8 hours agoprevIs it possible - and bear with me, here - that we humans have something similar in our midst? Something that has co-evolved mimicry over eons to bypass our \"other\" triggers. No uncanny valley or creepy vibe detected. A kind of Cuckoo bird for humans. reply dan_mctree 1 hour agoparentInteresting idea, of course it seems very unlikely, but running with it, what could potential tells be? I imagine there might be tells something weird is off if you got really close to them, so they may stay on the periphery of most humans lives and largely stick to their own (definitely at least for mating).I&#x27;d bet you could tell with DNA analysis, or through other medical means such as scans since they wouldn&#x27;t have had time to adjust for that. If even a single mimic was found the secret would get out, so they&#x27;d have to be very good at avoiding the medical world.I guess you&#x27;d probably be looking at either small groups of particularly successful people who have the resources to keep their mimicry hidden and keep to themselves (nobility?), or at some societal outcasts that roam around, never getting close to anyone.They&#x27;d somehow have to avoid their nature being discovered even after death which may be one of the harder things to believe, since presumably they could also die suddenly from accidents etc. which would often prompt careful medical examination which would then reveal the truth. Of course it&#x27;s possible some individuals did discover the truth, but no one believe them, but it&#x27;s hard to imagine that at scale. So if these mimics exist, we&#x27;re probably talking a few hundred or thousand of them at most reply INTPenis 8 hours agoparentprevIf evolution is just nature throwing dice, then it would take many, many generations to evolve something that complex.I think we see more of these interesting finds in the world of small animals because they have a much higher frequency of turnover. Therefore a higher statistical probability to produce interesting adaptations.I&#x27;m just a layperson so I&#x27;m using my own terminology here.Then there&#x27;s the other interesting possibility, that there is some way to consciously influence the evolution of DNA. I mean it&#x27;s pretty freaky that this beetle evolved an exact replica of a termite, a creature it presumably spends a lot of time around. How did its DNA \"know\" to evolve in that diretion? Are there thousands of beetles out there with half assed copies of termites on their backs? reply rendall 5 hours agorootparent> I think we see more of these interesting finds in the world of small animals because they have a much higher frequency of turnover. Therefore a higher statistical probability to produce interesting adaptations.This is the best argument against so far. Still, if a species co-evolved alongside us since our ancestors were small furry animals, this would be quite a few generations. reply lproven 3 hours agoparentprevThis is the core plot description of one of my favourite fictional vampires, Suzy McKee Charnas&#x27; \"Dr Edward Weyland\".https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;The_Vampire_Tapestry reply AltruisticGapHN 6 hours agoparentprevHah! I was thinking something along those lines - in light of the recent interest in UAPs.If NHI&#x27;s do exist, one wonders if they could pull out such tricks as well in order to blend in and take over different biomes&#x2F;planets. reply ftxbro 8 hours agoparentprevI heard a theory that domestic cats mimic human babies. reply INTPenis 8 hours agorootparentOr you can flip that and say; humans domesticated cats because they sound similar to human babies. reply joe__f 8 hours agoparentprevPresumably you&#x27;re referring to ChatGPT? reply shellfishgene 8 hours agoparentprevI would think that the evolution of the human mind (and with that technology) has been to fast for any such parasite to keep up. At least for hiding as a human-sized non-human organism. reply zweice 8 hours agoparentprevInteresting thought. Not a different species, but think (highly intelligent) sociopaths... reply zzzbra 14 hours agoprevI&#x27;m amazed that we&#x27;re always only just finding out about this sort of thing... like today. the way it gets reported makes it feel like it&#x27;s some sort of new innovation that the beetle just came up with, but it really impresses upon you just how much more weirdness nature must have in store for us just in our own backyard. reply bpodgursky 13 hours agoparentThere really aren&#x27;t that many people studying insects. Even fewer studying and cataloging plants.Everyone assumes there&#x27;s some large academic cohort of etymologists that are busy indexing and recording all natural insect life, but it&#x27;s usually just some guy paying attention to one thing at a time. And sometimes there are whole families of animals or plants where there&#x27;s no guy at all. reply omnicognate 10 hours agorootparentI expect there are very few etymologists studying insects, but more concerningly there aren&#x27;t enough entomologists doing it either [1].[1] https:&#x2F;&#x2F;time.com&#x2F;5144257&#x2F;fewer-scientists-studying-insects-e... reply bpodgursky 2 hours agorootparentoops reply eru 13 hours agorootparentprev> Even fewer studying and cataloging plants.Depends. Agriculturally important plants (and their pests of all kinds, including other plants) do get a lot of attention. reply DonHopkins 8 hours agorootparentCrime pays but botany and entomology don&#x27;t.https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=eFScyio4lwI&t=752s reply ryanblakeley 12 hours agoprevThat is an incredibly cool discovery. Another weird body hack in Northern Australia Hymenoptera is the honey pot ant. Their replete caste are passive food storage containers. reply emadda 4 hours agoprevI wonder if it is possible an animal can edit its own DNA based on things it observed with its senses in the environment.Eg Beetle observes kin dying via termite melee, encodes a potential solution in the DNA for the next generation. reply LeifCarrotson 4 hours agoparentThis might (eventually, pending MAJOR ethics committee issues) be possible for humans in a lab.It&#x27;s not realistic for beetles. reply hackeraccount 4 hours agoparentprevRead about epigenetics. It&#x27;s not quite as magic as what you describe but it&#x27;s in the ballpark. reply Borrible 5 hours agoprevCoevolution in an arms race for surface&#x2F;tactile mimicry. The basic blueprint of an insect is already present in the predator. The first of their kind may have been deformed Siamese twins. reply victorbjorklund 2 hours agoprevWow. Evolution is pretty amazing. reply totallywrong 13 hours agoprevThis is really something. I can&#x27;t begin to understand how a tiny insect can evolve a puppet that looks exactly like another insect. reply lproven 3 hours agoparentIt is quite common.As the article says, other rove beetles evolved to be fake \"stealth ants\".https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Myrmecophily_in_StaphylinidaeThey don&#x27;t look much like ants to humans but they do to ants, which is what matters.Some spiders do the same:https:&#x2F;&#x2F;www.antwiki.org&#x2F;wiki&#x2F;Ant-Mimicking_SpidersIn fact lots of animals do, on account of there are so many ants in the world and you can benefit from [a] living in an ant colony [b] not being eaten by ants or [c] eating ants yourself and getting away with it.https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Ant_mimicryEven plants imitate insects:https:&#x2F;&#x2F;www.nhm.ac.uk&#x2F;discover&#x2F;sneaky-orchids-manipulate-bee...One orchid imitates an extinct bee so we only know how the bee looked from the orchid&#x27;s \"artist&#x27;s impression\".https:&#x2F;&#x2F;whyevolutionistrue.com&#x2F;2013&#x2F;09&#x2F;02&#x2F;a-flower-hints-at-... reply shellfishgene 7 hours agoparentprevI addition to coming up with an idea of the steps involved you have to consider the time this takes. You always read about some millions years, but if you stop and think about how many generations of the beetle this is and how this is a really, really long time, it makes more sense. reply lproven 3 hours agorootparentThe world is very old. Life is ancient. It took over a billion years just to invent photosynthesis, then another billion-odd to invent the efficient oxygen-generating kind of photosynthesis... then that killed almost everything and the whole thing sort of rebooted.The world froze for a billion years, then thawed, and then another floating single celled bacterium-like thing invented the idea of enclosing another bacterium thing as its \"lung\", its power plant... then after another billion years, they somehow came up with the plan of sticking together in clumps.And then, after 4 billion years of nothing much happening, but happening very slowly, half a billion years ago these clumps of cells started an arms race, and boom, in the blink of an eye, not that anything had come up with eyes or eyelids yet, there were millions of types of multicellular clumps growing in the sunlit water, or eating the growing clumps, and eating each other, and trying not to be eaten, and in a moment, there is an ocean full of squirming wiggling swimming fighting things.Out of which, half a billion years later, we evolved. Then we killed everything else except for a handful of stuff we eat.Then, we die.The very sad, pathetic thing about religious \"creationism\" is that they think their version is more amazing, more beautiful, more pleasing... because they are ignorant of the size and scale and complexity of the real thing.They are a small circle of people with their head down admiring a pebble that one of them is holding, exclaiming at its beauty, while they are standing in a building the size and complexity and wonder of a thousand cities -- that they have not noticed is there.Then they press the plunger down on the detonator and blow the whole thing up, not realising it will fall on their heads and kill them because they didn&#x27;t see it. reply olwmc 1 hour agoprevGradient: Descended reply edoardo-schnell 11 hours agoprevSo, this is how termites see themselves...? reply ultim8k 6 hours agoprevOh those little mofos! reply Nezghul 11 hours agoprevWouldn&#x27;t it be easier to just... look like a termite instead of having abdomen looking like a termite? reply shellfishgene 7 hours agoparentMaybe not! That would require changeing the whole development of the beetle, and maybe the intermediate stages would not be beneficial. To give a terrible example, if you have a car and need a camper, you could rebuild the car into a camper but you would have to change everything and would not have a useable car for a long time. If instead you bought a trailer with a tent on it, you could build a perfect camping trailer over time step by step and have still use the car. reply colordrops 14 hours agoprevWith things like extraterrestrial beings and ghosts and whatnot, we have no evidence of other examples. But mimicry like this is abundant in the animal kingdom. Who&#x27;s to say that some \"humans\" walking among us are not just appendages of some other form of life that evolved here as well? reply eru 13 hours agoparentAre you willing to bet?I&#x27;d give you a million to one odds against that. More precisely to operationalise: against that being discovered to be the case in the next twenty years.The way evolution and biology works, what you are suggesting is extremely unlikely. (See https:&#x2F;&#x2F;www.lesswrong.com&#x2F;posts&#x2F;pLRogvJLPPg6Mrvg4&#x2F;an-alien-g... for a start of an explanation.) reply colordrops 11 hours agorootparentI don&#x27;t see anything in that article that challenges anything I said. If there was a mechanism by which mimicking humans helped this creature reproduce, then it would fit the scientific model of evolution.Also, it was a bit of a whimsical fantasy rather than some serious theory I have about the world. In any case, even if such beings were to exist, I suspect we&#x27;d not be able to detect them any more than the termites would be able to detect the beetle. We probably wouldn&#x27;t have the faculties to comprehend and apprehend the nature of the being, any more than an ant could understand general relativity.It&#x27;s kind of tiring having habitual iconoclast skeptics come out of the woodwork with some superficial dunk every time something out of the ordinary but also of no real consequence is said. reply NotSuspicious 12 hours agorootparentprevI&#x27;ll take the bet. reply nprateem 9 hours agorootparentprevPut me down for £2, and I&#x27;m pretty confident. I work with some characters who have evolved to mimic productive workers while never producing anything of any discernable value. reply astrange 12 hours agoparentprevWe have better discriminators - they&#x27;d have to be intelligent and learn English. reply beebeepka 10 hours agorootparentWhy English? reply DonHopkins 7 hours agoparentprevThere&#x27;s a PKD story about that:Second Variety:https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Second_VarietyThe Father Thing:https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;The_Father-thingThe Hanging Stranger:https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;The_Hanging_StrangerDo Androids Dream of Electric Sheep:https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Do_Androids_Dream_of_Electric_...Quite a few, actually! Fake humans were his specialty.Philip K. Dick and the Fake Humans:https:&#x2F;&#x2F;www.bostonreview.net&#x2F;articles&#x2F;henry-farrell-philip-k...>\"the bombardment of pseudo-realities begins to produce inauthentic humans very quickly, spurious humans—as fake as the data pressing at them from all sides. My two topics are really one topic; they unite at this point. Fake realities will create fake humans. Or, fake humans will generate fake realities and then sell them to other humans, turning them, eventually, into forgeries of themselves. So we wind up with fake humans inventing fake realities and then peddling them to other fake humans.\" -PKD reply beretguy 15 hours agoprevNice… hack. reply _a_a_a_ 7 hours agoprevThat is absolutely astonishing, but something bothers me, I thought termites were blind and it says they are and rely on smell:> though termites are blind, they sense one another through touch. The beetle may also absorb unique chemicals called cuticular hydrocarbons from the termites or produce similar compounds in order to enhance the perception that it is a termite as well.So I would have expected a fake termite to be just the crudest impression but with great odour mimicry, but this visual mimicry is so incredible it suggests termites visual perception is better than we expected, or perhaps something else is going on.TL;DR something doesn&#x27;t add up here reply lproven 3 hours agoparentThey don&#x27;t see. So they feel.It has to feel right as well as smell right. reply _a_a_a_ 2 hours agorootparent> It has to feel rightI&#x27;m not aware of any work&#x2F;research on this. Does seem reasonable though. But the rest of the insect is much larger and non-termitey, so...?(edit: so... why don&#x27;t they attack&#x2F;reject it?) reply AltruisticGapHN 6 hours agoprev [–] And people tell me the universe is not intelligent. I think what scares us is that intelligence, like _real_ intelligence, is prior to thought and so it seems almost alien and incomprehensible to us. Yet these creatures clearly know what they are doing at some level. Just as we know what we are doing with our lungs, heart, nervous system etc. that evolved over thousands of years, but we don&#x27;t know it in thought - so it eludes us as something external. reply Shorel 2 hours agoparentThe universe is intelligent because we are part of the universe. And we are intelligent, given our current definition of intelligence.Otherwise, a rock will not be intelligent by itself. Or a mountain. Or a star. reply AltruisticGapHN 23 minutes agorootparent\"Where there are rocks... watchout!\" - Alan Wattshttps:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=JZbThJg6ehU> Otherwise, a rock will not be intelligent by itself. Or a mountain. Or a star.Yes that is panpsychism. Otherwise you totally miss my point.edit: a little less sarcastic perhaps, point being is that if consciousness is fundamental (which it increasingly seems to be the case according to most recent physics) - then the universe indeed KNOWS what it is doing. reply jibal 6 hours agoparentprev [–] The universe indeed is not intelligent. Nor do these creatures know what they are doing. Nor did evolution know what it was doing when it created them -- evolution is not an agent or even an entity, its a description of a natural process of highly constrained brute force trial and error.With a proper scientific and biological education these things are neither alien nor incomprehensible and the numerous conceptual errors above can be avoided. reply AltruisticGapHN 21 minutes agorootparentWell some very, very smart people would seem to disagree.Cognitive psychologist Donald Hoffman says fundamental physics is consciousness, spacetime is doomed and everything we know about physics is wrong.https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=XVH8WhgBXCkYou&#x27;re part of the old guard :) reply hackeraccount 4 hours agorootparentprev [–] This reminds me of an AI that passes the Turing test. Of course it&#x27;s not conscious. If you treat it as if it&#x27;s is you get the exact same result though.At some point the similarities between the metaphor \"the Universe is intelligent\" and the actual Universe are so small that there are effectively no conceptual errors. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Scientists have discovered a new species of rove beetle that mimics the physical appearance of termites to trick them into providing food.",
      "The beetle resembles termites' body segments and features closely, enabling it to evade detection within termite nests.",
      "Instead of consuming termite eggs or larvae, the beetle likely mimics their behavior, \"begging\" for food and thus securing itself a constant source of sustenance."
    ],
    "commentSummary": [
      "An Australian beetle has evolved to mimic termites for food theft, creating an ongoing evolutionary arms race between the two species.",
      "Much of the conversation concerns the validity of evolutionary theories, including debates about the accuracy of \"just-so stories\" and speculation on the reasons behind mimicry.",
      "The post includes discussion on gene theft, the effectiveness of the beetle's mimicry, and possibilities of other organisms evolving to mimic different species."
    ],
    "points": 256,
    "commentCount": 142,
    "retryCount": 0,
    "time": 1694042799
  },
  {
    "id": 37407331,
    "title": "Why Socialism? (1949)",
    "originLink": "https://monthlyreview.org/2009/05/01/why-socialism/",
    "originBody": "Archives MR Press MR Online Monthly Review Essays Climate & Capitalism Money on the Left DONATE Login MONTHLY REVIEW AN INDEPENDENT SOCIALIST MAGAZINE Subscribe Solidarity Offer! Store Press Browse Contact Help My Account 0 items - $0.00 Dear Reader, we make this and other articles available for free online to serve those unable to afford or access the print edition of Monthly Review. If you read the magazine online and can afford a print subscription, we hope you will consider purchasing one. Please visit the MR store for subscription options. Thank you very much. —Eds. REPRISE Why Socialism? by Albert Einstein (May 01, 2009) Topics: Marxism Socialism Places: Global Albert Einstein (1959), charcoal and watercolor drawing by Alexander Dobkin. Dobkin (1908–1975) was an important painter of the mid-twentieth century American realist tradition along with other left-wing artists such as Jack Levine, Robert Gwathmey, Philip Evergood, and Raphael and Moses Soyer. A student and collaborator of the Mexican muralist Jose Clemente Orozco, his work is in the permanent collections of the Butler Art Institute, the Museum of Modern Art, the Brooklyn Museum, the Whitney Museum of American Art, the Philadelphia Museum of Art, the Library of Congress, and the Smithsonian Institution. (The preceding caption was written by John J. Simon, \"Albert Einstein, Radical: A Political Profile,\" Monthly Review vol. 57, no. 1 [2005].) Albert Einstein is the world-famous physicist. This article was originally published in the first issue of Monthly Review (May 1949). It was subsequently published in May 1998 to commemorate the first issue of MR‘s fiftieth year. —The Editors Is it advisable for one who is not an expert on economic and social issues to express views on the subject of socialism? I believe for a number of reasons that it is. Let us first consider the question from the point of view of scientific knowledge. It might appear that there are no essential methodological differences between astronomy and economics: scientists in both fields attempt to discover laws of general acceptability for a circumscribed group of phenomena in order to make the interconnection of these phenomena as clearly understandable as possible. But in reality such methodological differences do exist. The discovery of general laws in the field of economics is made difficult by the circumstance that observed economic phenomena are often affected by many factors which are very hard to evaluate separately. In addition, the experience which has accumulated since the beginning of the so-called civilized period of human history has—as is well known—been largely influenced and limited by causes which are by no means exclusively economic in nature. For example, most of the major states of history owed their existence to conquest. The conquering peoples established themselves, legally and economically, as the privileged class of the conquered country. They seized for themselves a monopoly of the land ownership and appointed a priesthood from among their own ranks. The priests, in control of education, made the class division of society into a permanent institution and created a system of values by which the people were thenceforth, to a large extent unconsciously, guided in their social behavior. But historic tradition is, so to speak, of yesterday; nowhere have we really overcome what Thorstein Veblen called “the predatory phase” of human development. The observable economic facts belong to that phase and even such laws as we can derive from them are not applicable to other phases. Since the real purpose of socialism is precisely to overcome and advance beyond the predatory phase of human development, economic science in its present state can throw little light on the socialist society of the future. Second, socialism is directed towards a social-ethical end. Science, however, cannot create ends and, even less, instill them in human beings; science, at most, can supply the means by which to attain certain ends. But the ends themselves are conceived by personalities with lofty ethical ideals and—if these ends are not stillborn, but vital and vigorous—are adopted and carried forward by those many human beings who, half unconsciously, determine the slow evolution of society. For these reasons, we should be on our guard not to overestimate science and scientific methods when it is a question of human problems; and we should not assume that experts are the only ones who have a right to express themselves on questions affecting the organization of society. Innumerable voices have been asserting for some time now that human society is passing through a crisis, that its stability has been gravely shattered. It is characteristic of such a situation that individuals feel indifferent or even hostile toward the group, small or large, to which they belong. In order to illustrate my meaning, let me record here a personal experience. I recently discussed with an intelligent and well-disposed man the threat of another war, which in my opinion would seriously endanger the existence of mankind, and I remarked that only a supra-national organization would offer protection from that danger. Thereupon my visitor, very calmly and coolly, said to me: “Why are you so deeply opposed to the disappearance of the human race?” I am sure that as little as a century ago no one would have so lightly made a statement of this kind. It is the statement of a man who has striven in vain to attain an equilibrium within himself and has more or less lost hope of succeeding. It is the expression of a painful solitude and isolation from which so many people are suffering in these days. What is the cause? Is there a way out? It is easy to raise such questions, but difficult to answer them with any degree of assurance. I must try, however, as best I can, although I am very conscious of the fact that our feelings and strivings are often contradictory and obscure and that they cannot be expressed in easy and simple formulas. Man is, at one and the same time, a solitary being and a social being. As a solitary being, he attempts to protect his own existence and that of those who are closest to him, to satisfy his personal desires, and to develop his innate abilities. As a social being, he seeks to gain the recognition and affection of his fellow human beings, to share in their pleasures, to comfort them in their sorrows, and to improve their conditions of life. Only the existence of these varied, frequently conflicting, strivings accounts for the special character of a man, and their specific combination determines the extent to which an individual can achieve an inner equilibrium and can contribute to the well-being of society. It is quite possible that the relative strength of these two drives is, in the main, fixed by inheritance. But the personality that finally emerges is largely formed by the environment in which a man happens to find himself during his development, by the structure of the society in which he grows up, by the tradition of that society, and by its appraisal of particular types of behavior. The abstract concept “society” means to the individual human being the sum total of his direct and indirect relations to his contemporaries and to all the people of earlier generations. The individual is able to think, feel, strive, and work by himself; but he depends so much upon society—in his physical, intellectual, and emotional existence—that it is impossible to think of him, or to understand him, outside the framework of society. It is “society” which provides man with food, clothing, a home, the tools of work, language, the forms of thought, and most of the content of thought; his life is made possible through the labor and the accomplishments of the many millions past and present who are all hidden behind the small word “society.” It is evident, therefore, that the dependence of the individual upon society is a fact of nature which cannot be abolished—just as in the case of ants and bees. However, while the whole life process of ants and bees is fixed down to the smallest detail by rigid, hereditary instincts, the social pattern and interrelationships of human beings are very variable and susceptible to change. Memory, the capacity to make new combinations, the gift of oral communication have made possible developments among human being which are not dictated by biological necessities. Such developments manifest themselves in traditions, institutions, and organizations; in literature; in scientific and engineering accomplishments; in works of art. This explains how it happens that, in a certain sense, man can influence his life through his own conduct, and that in this process conscious thinking and wanting can play a part. Man acquires at birth, through heredity, a biological constitution which we must consider fixed and unalterable, including the natural urges which are characteristic of the human species. In addition, during his lifetime, he acquires a cultural constitution which he adopts from society through communication and through many other types of influences. It is this cultural constitution which, with the passage of time, is subject to change and which determines to a very large extent the relationship between the individual and society. Modern anthropology has taught us, through comparative investigation of so-called primitive cultures, that the social behavior of human beings may differ greatly, depending upon prevailing cultural patterns and the types of organization which predominate in society. It is on this that those who are striving to improve the lot of man may ground their hopes: human beings are not condemned, because of their biological constitution, to annihilate each other or to be at the mercy of a cruel, self-inflicted fate. If we ask ourselves how the structure of society and the cultural attitude of man should be changed in order to make human life as satisfying as possible, we should constantly be conscious of the fact that there are certain conditions which we are unable to modify. As mentioned before, the biological nature of man is, for all practical purposes, not subject to change. Furthermore, technological and demographic developments of the last few centuries have created conditions which are here to stay. In relatively densely settled populations with the goods which are indispensable to their continued existence, an extreme division of labor and a highly-centralized productive apparatus are absolutely necessary. The time—which, looking back, seems so idyllic—is gone forever when individuals or relatively small groups could be completely self-sufficient. It is only a slight exaggeration to say that mankind constitutes even now a planetary community of production and consumption. I have now reached the point where I may indicate briefly what to me constitutes the essence of the crisis of our time. It concerns the relationship of the individual to society. The individual has become more conscious than ever of his dependence upon society. But he does not experience this dependence as a positive asset, as an organic tie, as a protective force, but rather as a threat to his natural rights, or even to his economic existence. Moreover, his position in society is such that the egotistical drives of his make-up are constantly being accentuated, while his social drives, which are by nature weaker, progressively deteriorate. All human beings, whatever their position in society, are suffering from this process of deterioration. Unknowingly prisoners of their own egotism, they feel insecure, lonely, and deprived of the naive, simple, and unsophisticated enjoyment of life. Man can find meaning in life, short and perilous as it is, only through devoting himself to society. The economic anarchy of capitalist society as it exists today is, in my opinion, the real source of the evil. We see before us a huge community of producers the members of which are unceasingly striving to deprive each other of the fruits of their collective labor—not by force, but on the whole in faithful compliance with legally established rules. In this respect, it is important to realize that the means of production—that is to say, the entire productive capacity that is needed for producing consumer goods as well as additional capital goods—may legally be, and for the most part are, the private property of individuals. For the sake of simplicity, in the discussion that follows I shall call “workers” all those who do not share in the ownership of the means of production—although this does not quite correspond to the customary use of the term. The owner of the means of production is in a position to purchase the labor power of the worker. By using the means of production, the worker produces new goods which become the property of the capitalist. The essential point about this process is the relation between what the worker produces and what he is paid, both measured in terms of real value. Insofar as the labor contract is “free,” what the worker receives is determined not by the real value of the goods he produces, but by his minimum needs and by the capitalists’ requirements for labor power in relation to the number of workers competing for jobs. It is important to understand that even in theory the payment of the worker is not determined by the value of his product. Private capital tends to become concentrated in few hands, partly because of competition among the capitalists, and partly because technological development and the increasing division of labor encourage the formation of larger units of production at the expense of smaller ones. The result of these developments is an oligarchy of private capital the enormous power of which cannot be effectively checked even by a democratically organized political society. This is true since the members of legislative bodies are selected by political parties, largely financed or otherwise influenced by private capitalists who, for all practical purposes, separate the electorate from the legislature. The consequence is that the representatives of the people do not in fact sufficiently protect the interests of the underprivileged sections of the population. Moreover, under existing conditions, private capitalists inevitably control, directly or indirectly, the main sources of information (press, radio, education). It is thus extremely difficult, and indeed in most cases quite impossible, for the individual citizen to come to objective conclusions and to make intelligent use of his political rights. The situation prevailing in an economy based on the private ownership of capital is thus characterized by two main principles: first, means of production (capital) are privately owned and the owners dispose of them as they see fit; second, the labor contract is free. Of course, there is no such thing as a pure capitalist society in this sense. In particular, it should be noted that the workers, through long and bitter political struggles, have succeeded in securing a somewhat improved form of the “free labor contract” for certain categories of workers. But taken as a whole, the present day economy does not differ much from “pure” capitalism. Production is carried on for profit, not for use. There is no provision that all those able and willing to work will always be in a position to find employment; an “army of unemployed” almost always exists. The worker is constantly in fear of losing his job. Since unemployed and poorly paid workers do not provide a profitable market, the production of consumers’ goods is restricted, and great hardship is the consequence. Technological progress frequently results in more unemployment rather than in an easing of the burden of work for all. The profit motive, in conjunction with competition among capitalists, is responsible for an instability in the accumulation and utilization of capital which leads to increasingly severe depressions. Unlimited competition leads to a huge waste of labor, and to that crippling of the social consciousness of individuals which I mentioned before. This crippling of individuals I consider the worst evil of capitalism. Our whole educational system suffers from this evil. An exaggerated competitive attitude is inculcated into the student, who is trained to worship acquisitive success as a preparation for his future career. I am convinced there is only one way to eliminate these grave evils, namely through the establishment of a socialist economy, accompanied by an educational system which would be oriented toward social goals. In such an economy, the means of production are owned by society itself and are utilized in a planned fashion. A planned economy, which adjusts production to the needs of the community, would distribute the work to be done among all those able to work and would guarantee a livelihood to every man, woman, and child. The education of the individual, in addition to promoting his own innate abilities, would attempt to develop in him a sense of responsibility for his fellow men in place of the glorification of power and success in our present society. Nevertheless, it is necessary to remember that a planned economy is not yet socialism. A planned economy as such may be accompanied by the complete enslavement of the individual. The achievement of socialism requires the solution of some extremely difficult socio-political problems: how is it possible, in view of the far-reaching centralization of political and economic power, to prevent bureaucracy from becoming all-powerful and overweening? How can the rights of the individual be protected and therewith a democratic counterweight to the power of bureaucracy be assured? Clarity about the aims and problems of socialism is of greatest significance in our age of transition. Since, under present circumstances, free and unhindered discussion of these problems has come under a powerful taboo, I consider the foundation of this magazine to be an important public service. 2009, Volume 61, Issue 01 (May) Connect Subscribe to the Monthly Review e-newsletter (max of 1-3 per month). Inconvenient Truths about ‘Real Existing’ Zionism Marxism, the United States, and the Twentieth-Century Also in this issue May 2009 (Volume 61, Number 1) , The Editors Capitalism in Wonderland , Brett Clark, John Bellamy Foster and Richard York Marxism, the United States, and the Twentieth-Century , Paul Buhle Inconvenient Truths about ‘Real Existing’ Zionism , Jacques Hersh Mao Zedong: Chinese, Communist, Poet , Jonah Raskin Slumlord Aesthetics and the Question of Indian Poverty , Nandini Chandra Who’s Naïve? , Marge Piercy Prophets of the ‘Permanent War Economy’ , Ernest Haberkern Popular Why Socialism? by Albert Einstein On Technology and Degrowth by Jason Hickel Planned Degrowth: Ecosocialism and Sustainable Human Development by John Bellamy Foster What Every Child Should Know about Marx’s Theory of Value by Michael A. Lebowitz Capitalism, Global Poverty, and the Case for Democratic Socialism by Jason Hickel The Double Objective of Democratic Ecosocialism by Jason Hickel July-August 2023 (Volume 75, Number 3) by The Editors Degrowing China—By Collapse, Redistribution, or Planning? by Minqi Li Degrowth and Socialism: Notes on Some Critical Junctures by Güney Işıkara Imperialism and the Transformation of Values into Prices by Torkil Lauesen New from Monthly Review Press! New! The Prosecution of Professor Chandler Davis: McCarthyism, Communism, and the Myth of Academic Freedom Beyond Plague Urbanism Return to the Source: Selected Texts of Amilcar Cabral, New Expanded Edition The Hidden History of the Korean War: New Edition The Fault in Our SARS: COVID-19 in the Biden Era 2023 MONTHLY REVIEW FOUNDATION. ALL RIGHTS RESERVED Monthly ReviewTel: 212-691-2555 134 W 29th St Rm 706, New York, NY 10001",
    "commentLink": "https://news.ycombinator.com/item?id=37407331",
    "commentBody": "Why Socialism? (1949)Hacker NewspastloginWhy Socialism? (1949) (monthlyreview.org) 256 points by celtoid 1 day ago| hidepastfavorite574 comments legitster 22 hours ago> Nevertheless, it is necessary to remember that a planned economy is not yet socialism. A planned economy as such may be accompanied by the complete enslavement of the individual. The achievement of socialism requires the solution of some extremely difficult socio-political problems: how is it possible, in view of the far-reaching centralization of political and economic power, to prevent bureaucracy from becoming all-powerful and overweening? How can the rights of the individual be protected and therewith a democratic counterweight to the power of bureaucracy be assured?It&#x27;s a pretty well written piece. I think people from all perspectives should take careful note of what he is actually advocating: discussing and figuring out the mechanisms of what a modern society should like rather than blindly following an agenda.That said, this is a 70+ year old article, based on ideas and problems at the time. Capitalism will make people stop working and be less productive? If anything we worry about the opposite problem. College will only be a means to a career? Today academia is powerful and a political force unto itself. And we have so many welfare programs and safety nets and worker protects than Einstein was even able to dream about in 1949. In a way, we are living in a world he was advocating for.If it was written today, I have no doubt Einstein would still care about inequality and education and politics and common \"workers\" enjoying life. But I also don&#x27;t think I would see him caring as much about Marxism and the labor theory of value specifically as a mechanism for understanding it anymore. reply mullingitover 19 hours agoparent> Capitalism will make people stop working and be less productive? If anything we worry about the opposite problem.Well, unemployment is kind of a requirement of capitalism. You can&#x27;t have the labor force calling the shots, it eats into profits. From the article:> There is no provision that all those able and willing to work will always be in a position to find employment; an “army of unemployed” almost always exists.He&#x27;s being generous here, it&#x27;s not just that an \"army of the unemployed\" almost always exists, it&#x27;s a goal. Captains of industry in the current low-unemployment environment have been saying the quiet part out loud, that we need to increase unemployment. There&#x27;s generally a target of 5% unemployment, which means capitalism has built-in waste. reply legitster 19 hours agorootparent> Well, unemployment is kind of a requirement of capitalism.Says who? The only \"requirement of capitalism\" is that individuals are allowed to have ownership rights. Outside of a few niche organizations that benefit from economic distress, I think you will find a general S&P 500 consensus that low employment is a good thing for their stock prices.> There&#x27;s generally a target of 5% unemployment, which means capitalism has built-in waste.That&#x27;s because, in a free society, we have discovered that it&#x27;s better to get people new and better jobs than be shackled to a milling machine from childhood. reply thiagoharry 18 hours agorootparent> Says who? The only \"requirement of capitalism\" is that individuals are allowed to have ownership rights. Outside of a few niche organizations that benefit from economic distress, I think you will find a general S&P 500 consensus that low employment is a good thing for their stock prices.If unemployment did not exist, the capitalist class would have no power to make workers work harder using the threat of losing their jobs. Of course, very high unemployment is not good for capitalism, nobody was arguing this. But very low unemployment below some threshold is also bad. Marx explained this, but if you do not believe him, capitalists themselves and their theorists say exactly the same thing, but with more gentle and less direct words: https:&#x2F;&#x2F;www.investopedia.com&#x2F;insights&#x2F;downside-low-unemploym... reply randomdata 16 hours agorootparent> If unemployment did not exist, the capitalist class would have no power to make workers work harder using the threat of losing their jobs.That may be true, but that is not a condition of capitalism. Like the parent said, capitalism only speaks to ownership rights. reply asu_thomas 15 hours agorootparentCapitalism is a system in which those who control capital wield the most power, but without cheap enough labor to work the capital for a profit, capitalism will by definition give way to something else.Realize capital has no market value without labor to work it. This goes for real estate too, which workers require to rest themselves just in time to return to work to turn a profit for those that control capital. reply ch4s3 15 hours agorootparentThis is a warmed over version of labor theory of value which is at its core wrong. Value is entirely subjective and contextual, and utility is not a function of labor inputs.Moreover high wages simply encourage innovation in labor saving devices and techniques. Tight labor markets aren’t the capitalists enemy. It’s no different than other input costs in some sense. reply asu_thomas 15 hours agorootparentLabor theory of value is literally just an argument that labor is the historical source of wealth. The terminology here is specific and intentional.Next, Marxists recognize 2 central forms of value:Use value is abstract, but not subjective.Exchange value is contextual.That&#x27;s it. That&#x27;s what you need to argue with, instead of your ridiculous straw men above.Additionally, it can hardly be stressed enough how unimportant labor theory of value is for Marxism as a whole. reply tptacek 13 hours agorootparentNo, that doesn&#x27;t sound right. The LTV says that commodities have an intrinsic value, and regardless of what their price is, the value of those commodities is determined entirely by the socially necessary labor time that went into producing them. reply astine 14 hours agorootparentprevUm, no that&#x27;s not correct. It&#x27;s true that the origin of the labor theory of value is philosophers like Locke arguing that labor is the source of all value, but in the context that Marx was writing, Smith and Riccardo had popularized the notion that the market value of a good was proportional to the amount of aggregate labor that went into it. To his credit, Marx demonstrated that the market value of a good was not actually proportional to the amount of labor that went into it but he didn&#x27;t abandon the idea that value of a good was somehow proportional to the labor used to make it.Marx: \"Let us now take two commodities, for example corn and iron. Whatever their echange relation may be, it can always be represented by an equation in which a given quantity of corn is equated to some quantity of iron, for instance 1 quarter of corn == x cwt of iron. What does this equation signifify? It signifies that a common element of identical magnitide exists in two different things, in 1 quarter of corn and similarly in x cwt of iron. Both are therefore equal to a third thing, which in itself is niether the one nor the other. Each of them, so far as it is exchange-value, must therefore be reducible to this third thing. [...] As use-values, commodities differ above all in quality, while as exchange-values they can only differ in quantity, and therefore do not contain an atom of use-value. If then we disregard the use-value of commodities, only one property remains, that of being products of labour.\"In other words, Marx excludes use-value (what normal economists call \"utility\") as being a factor in the price of a commodity, apart from needing to exist at all (he reduces its relationship to a boolean relationship,) and makes it a function of labor quantity. This is so central to his argument that it comes up in the first few pages of Capital. reply thiagoharry 13 hours agorootparentMarx always begins describing things in Das Kapital simplifying, and then, in later chapters, expanding the model, concluding that in fact it was more complex than was previously presented. The market value of some item would be proportional to the labor only if you consider an isolated industry as an almost closed system, like Marx did in the first book. At the third book, Marx shows that competition and search for profit would produce a force that equalizes the profits for several industries. In the end, prices cannot anymore be explained by the \"value\" of the product expressed in labor: several goods will be sold above or below their \"value\". Even if this value is still the origin of the surplus value that creates profit and growth in the capitalist economy.Marx theory of value is much more elaborated than the one from Smith and Ricardo, and most arguments against it, are in fact arguments against naive and simplified versions of the theory. reply astine 12 hours agorootparentI&#x27;m not certain of your point? Marx admits that LTV doesn&#x27;t explain prices much earlier than the third volume; it&#x27;s cental to his whole point, that the difference between the &#x27;value&#x27; of a good and what a capitalist is able to sell it for represents exploitation. That&#x27;s not a straw-man and asu_thomas was wrong to suggest it was. reply thiagoharry 5 hours agorootparentNo, this difference is the surplus value, which is part of the value of the good for Marx. If you remove the surplus value, you get the production cost. Marx does not argue that the \"value\" is just the production cost, it is certain that in a capitalist economy, which was what he was analyzing, the surplus value is part of the value, otherwise profit and growth would be impossible. Marx repeats in several parts that he considers in the model that all goods are sold exactly by their value, which for all goods, the surplus value is included. But later, Marx acknowledges that in fact, prices for each good cannot be explained solely by value (production cost + that surplus value) and that this simplified model needs to disappear when you take into account a model with several different industries competing.But I do no not agree exactly with asu_thomas that the labor theory of value is so unimportant for marxism and I think you are right in questioning the affirmation. But I think you mixed a little the value theories from Smith and Ricardo and from Marx in your interpretation (the first two are the ones that do not consider this \"surplus value\" in the value and try to explain the capitalist profit as coming somehow from the labor of the capitalist or from other effects in the market and environment). And I also do not agree that the marxist theory of value is debunked and so easily dismissed. Certainly it is not a mainstream theory, but there are still marxist economists nowadays between the heterodox ones. replyhhjinks 6 hours agorootparentprev>but without cheap enough labor to work the capital for a profit, capitalism will by definition give way to something elseDemonstrate why this is true. What _exactly_ about the definition \"private ownership of capital\" necessitates that capitalism must give way if capital cannot be worked for profit by cheap labor? reply randomdata 14 hours agorootparentprev> Capitalism is a system in which those who control capital wield the most powerCapitalism has no concern about power. It only speaks to ownership rights.And, as an aside, what you are envisioning clearly puts the power in the hands of labour. As you said: \"Realize capital has no market value without labor to work it.\" reply dragonwriter 13 hours agorootparent> Capitalism has no concern about power.Capitalism is entirely about power.> It only speaks to ownership rights.“Ownership rights” are power. Capitalism evolved through the mercantile class under pre-capitalist systems leveraging their then-current power to force changes in the system which durably transferred power from the land-tied aristocracy to themselves. reply randomdata 12 hours agorootparent> Capitalism is entirely about power.Surely it is people that are entirely about power?> “Ownership rights” are power.Perhaps, but capitalism only describes one of many different ways of organizing ownership. It is not about ownership in and of itself. It turns out that we already have a word for ownership: Ownership. We came up with another word, capitalism, because it means something else. reply dragonwriter 12 hours agorootparent> > Capitalism is entirely about power.> Surely it is people that are entirely about power?Most people are in part interested in power and some people are entirely interested in power, but capitalism is entirely a system engineered for distributing power for the benefit of a particular class.> Perhaps, but capitalism only describes one of many different ways of organizing ownership.Capitalism implements (not describes) one particular way of organizing ownership, chosen for the effect it has on the distribution of power in society. reply randomdata 12 hours agorootparent> but capitalism is entirely a system engineered for distributing power for the benefit of a particular class.A previous commenter postulated a hypothetical world where capital only has value when labour is utilizing it. It in no way violated capitalism, but clearly labour holds the power in that world. After all, labour could just not use the capital and then take it from the dumpster after it gets thrown away for being worthless.It is possible other worlds could see capital that is not dependent on labour and use that to take power, perhaps, but that&#x27;s beyond the topic of capitalism. Nothing in capitalism says that there must be capital that is utilizable without labour.> Capitalism implements (not describes) one particular way of organizing ownershipHuh? Words can&#x27;t implement anything. Only people can implement something. reply dragonwriter 12 hours agorootparent> Huh? Words can’t implement anything.If we were talking about the word “capitalism”, it would be in quotes; that’s how you make use&#x2F;mention distinctions in English. “Capitalism” is a word, the thing it describes is capitalism, which is a system, which implements a design that people have made. reply randomdata 11 hours agorootparentIndeed, capitalism does not implement capitalism, capitalism is the product of what people implemented. And when we talk about capitalism we are talking about a word that describes that. replyMechanical9 13 hours agorootparentprevCapitalism doesn&#x27;t have to be concerned with power for it to result in those with capital holding the most power. &#x27;Rights&#x27; that are only available to those with capital aren&#x27;t really rights at all. reply Turskarama 13 hours agorootparentprevIn what world do you think the people who own everything don&#x27;t also have all the power?You cannot decouple ownership from politics. If you own the productivity of the nation, you own the nation. reply randomdata 13 hours agorootparent> In what world do you think the people who own everything don&#x27;t also have all the power?A world where \"Realize capital has no market value without labor to work it\" is true cannot see power reset in the hands of those with capital as it asserts that capital has no value without labour, which means that labour holds all the power.I don&#x27;t know what world that was meant to refer to. It did not specify, nor was it it written by me in order to specify now. You may have accidentally pressed the wrong reply button?> You cannot decouple ownership from politics. That may be true, but the concept of ownership doesn&#x27;t come from capitalism. Socialism, for example, also describes ownership. You cannot couple ownership with capitalism. reply Turskarama 12 hours agorootparent> A world where \"Realize capital has no market value without labor to work it\" is true cannot see power reset in the hands of those with capital as it asserts that capital has no value without labour, which means that labour holds all the power.Yes and no, the capitalist needs the labour for their capital to be worth anything, but likewise the Labor needs the tools the capitalist owns to multiply the value of their labour. Since capital gives control of the state (indirectly) the state tends to also support capital which then has a monopoly on violence and can coerce labor through means that the labour itself doesn&#x27;t have. Historically this has come about in the police engaging in union busting (an example of how capital is power). reply randomdata 12 hours agorootparent> but likewise the Labor needs the tools the capitalist owns to multiply the value of their labourLabour doesn&#x27;t need to multiply its labour, though. Labour remains valuable no matter what.> Since capital gives control of the state (indirectly)The state is just people. In a world where capital is worthless without labour, I assume that labour makes up the majority of the population – why would a small group of people sitting on capital that does nothing and is worthless have more power than the majority of the populace who actually bring value to the table?> which then has a monopoly on violenceIn a world where capital is worthless without labour, who, exactly, is going to enact that violence? You need labour to bring the violence... reply Turskarama 12 hours agorootparent> Labour remains valuable no matter what.Maybe, but for a somewhat tortured example: if you&#x27;re a programmer with domain knowledge of a specific application then your value there might be worth $150k a year. If that&#x27;s taken away from you and you have to learn a new domain then your value might be only $80k per year. If even a computer to work on is taken away from you then your labor is only worth minimum wage. reply randomdata 12 hours agorootparentPainfully tortured, indeed, but let&#x27;s try to work with it:In this world of which we speak, if you take the labour away from the computer then the computer becomes worthless. At which point you can then you can collect the computer from the dumpster to then build yourself back up to being worth $150k per year plus the return on capital value.Clearly labour holds the power in this world. It can completely destroy the capital owners. The inverse is not true. replyasu_thomas 14 hours agorootparentprev> Capitalism has no concern about power. It only speaks to ownership rights.My sweet summer child, what do you think politics is? What do you think rights are, and where do they come from? Furthermore, what is ownership? These are fundamental questions to say the least. reply randomdata 14 hours agorootparentPolitics, with a P, may be concerned about power, but capitalism starts with the letter C. reply hardwonjay9877 14 hours agorootparentRights and ownership are defined and maintained by a state. A state is a monopoly on violence, not by right but by power. In other words, power precedes rights and ownership.Additionally, capitalism is defined by relations to capital, not by relations to mere property. Big difference. reply astine 13 hours agorootparentThis is not really true. \"Power\" in a social context proceeds from social relationships. A king only has power if people buy into the idea that he has power. In other words, any power beyond individual brute force is a social construct. Even the idea that the state has a monopoly on violence is a social construct, (and is often not true, even in practice.) So social power depends on the ideas that people in a society hold generally, such as ideas about rights and ownership. So it&#x27;s often those ideas that define the power relationships in society rather than the other way around. reply asu_thomas 11 hours agorootparentUtter nonsense. Kings and the like could not exist until agricultural societies needed armies to protect them from invasion. Only from within such material circumstances and relations could divine right be wrought on a public imagination, whether it be monarchic kings or founders of PayPal.And this is why materialism, Marxism or possibly otherwise, is worth defending. reply randomdata 14 hours agorootparentprevWhile that may be true, capitalism does not concern itself with power or class or anything like that. It is narrowly focused. It is not some catchall term for anything you happen to observe alongside the ownership rights it speaks to. It&#x27;s okay to use other words. reply philosopher1234 12 hours agorootparentBut capitalism has consequences. Those consequences are also capitalism, even if they’re not the stated intent. reply randomdata 11 hours agorootparentCapitalism has consequences like math has consequences.I guess that&#x27;s true, but what does that really mean in practice? CSAM, at least the digital kind, is a consequence of math. Are we supposed to brush it aside because \"Oh, that&#x27;s okay, it&#x27;s just math!\" or are we supposed to get angry with math and push for a math-less world? What is the takeaway here?Moreover, while (digital) CSAM is, indeed, a consequence of math, if you see a problem with CSAM, why not just call it as such? Why try to obscure what consequence you encountered by calling every problem that might come from math, math? replygoatlover 14 hours agorootparentprevBut those are political matters regardless of the economic system. replyAnthonyMouse 18 hours agorootparentprev> If unemployment did not exist, the capitalist class would have no power to make workers work harder using the threat of losing their jobs.How so?There could be 0% unemployment and anyone could find another job easily, but the other job could pay less, or have less flexibility, or be in a less convenient location, so you still prefer the job you have now.Suppose unemployment is low because prices are high, so no one can afford to go without a job and will take jobs under unfavorable terms in order to make rent. reply randomdata 16 hours agorootparent> There could be 0% unemployment and anyone could find another job easilyTechnically, 0% unemployment would mean that you can&#x27;t take another job, as you transitioning into another job would create frictional unemployment, which would mean that the unemployment rate would not be 0%.In practice, somewhere around 3% is usually considered full employment. The 3% are those in the process of changing jobs. reply dragonwriter 16 hours agorootparent> Technically, 0% unemployment would mean that you can&#x27;t take another job, as you transitioning into another job would create frictional unemploymentTransitioning to another job only creates frictional unemployment if there is a period where you are out of work but looking for work. Otherwise (e.g., if you find a new job before leaving) if you have a break from work as part of transition, it creates a frictional exit from the labor force, not frictional unemployment.But 0% unemployment is hard to imagine if employers can terminate workers without first finding them acceptable replacement employment. reply yesbut 17 hours agorootparentprevIt comes down to profit. Costs (like labor wages) cut into profits. Capitalism could hypothetically support a high thriving-wage for all workers and still create profit for the owners, but historically the owner intentionally depresses wages so that the owner&#x27;s profit portion is larger.High unemployment creates conditions favorable for the owners. It creates leverage for the owners to coerce the workers into accepting lower wages. A scenario where the state offered full employment as a competitive labor market to the private sector would force the private owners to raise their wages. Then they would have to deal with how they want to approach their profit situation. They&#x27;d probably just raise prices of their products. But in the end, the owner is making the decision on what the prices would be. Not the employees. reply mr_toad 12 hours agorootparent> Capitalism could hypothetically support a high thriving-wage for all workersAnd find itself undercut by competition and&#x2F;or unable to raise enough investment for capital. reply argentinian 17 hours agorootparentprevWho do you believe that buys the services or goods that the owners produce? reply yesbut 16 hours agorootparentDepending on the good or service. Other companies, government organizations, or the public individual consumer. reply malermeister 17 hours agorootparentprevBecause the threat of a less convenient job is nothing compared to the threat to existence that is unemployment in capitalism. reply goatlover 15 hours agorootparentWouldn’t that depend on the social safety nets in place? Say unemployment in Europe versus the US. Also nothing stopping a terminated person from seeking other employment opportunities. reply thiagoharry 14 hours agorootparentYou know that the basis of all production the most labour intensive industries are not in Europe or US. But in third world countries. Its where you find most factories, mines, farms... You know why the industries migrate there? Because there is very little social safety and labour is cheap. When we talk about capitalism, we need to remember that it is a global economic system. reply tptacek 13 hours agorootparentLabor is cheap in those places because cheaply sold labor is a better deal for residents than subsistence farming; over time, the labor gets less cheap as living standards increase for those places.It&#x27;s obviously possible to take that observation too far, and to excuse all sorts of abuses. But the underlying phenomenon seems to square pretty well with what we know about living standards over time worldwide. reply goatlover 14 hours agorootparentprevHow could anyone find another job if every job is already taken? Wouldn&#x27;t you first have to find someone willing to trade jobs with you? reply pcthrowaway 13 hours agorootparentAre people really confusing unemployment with no job vacancies?You could have 100% employment, and still have people looking to hire. If there are 1000 people in a population who all work, it doesn&#x27;t mean none of the businesses are looking to hire reply brightlancer 13 hours agorootparentprevIt&#x27;s the reverse: if unemployment is 0%, there are no persons without a job, but there may be jobs without a person. reply nradov 13 hours agorootparentprevIn a growing economy, new jobs are constantly being created. reply willcipriano 15 hours agorootparentprev> the capitalist class would have no power to make workers work harder using the threat of losing their jobs.They would have to offer higher wages and not just \"industry average\", like we saw during the pandemic. Then the planned economy folks decided that was the exact moment the free money faucet had to be cut off. reply cmh89 16 hours agorootparentprevWe just experienced this though and it wasn&#x27;t good for their stock price. Low unemployment means they have to pay their workers more to hire or retain them. More expense means they either need accept making less (bad for stocks) or raise prices to make as much money, which could be bad for business. reply jlawson 17 hours agorootparentprevVery low unemployment (aka labor shortage) is bad for business owners, not capitalism. There is a difference. Capitalism is a system that everyone plays a role in in benefits from; it&#x27;s not a group of people.One could consider labor shortage good and healthy for capitalism itself, since it increases worker wages and thus builds political support for the capitalist system. reply pyuser583 15 hours agorootparentMy favorite shake restraint has a sign on the door that says, “due to labor shortages, this location is closed until further notice.”I’m not happy about that. reply leshow 12 hours agorootparentIt&#x27;s not a labor shortage, it&#x27;s a wage shortage. reply nradov 13 hours agorootparentprevThere is no shortage of workers who can make shakes. Don&#x27;t believe every sign you see. reply refurb 15 hours agorootparentprevThis is an overly simplistic analysis.People may work hard for a number of reasons of which unemployment is only one - more money, a promotion, personal interest in the outcome (e.g. scientist), personal work ethic, you like this job more than other jobs (job preference due to management, coworkers, location, job type).Once again Marxism oversimplifies the world and ignores a lot of nuance. reply thiagoharry 14 hours agorootparentThis is not true for most people where I live. I live in a third world country. Most workers are just trying to survive. You know that the basis of production and where you find the most labor intensive industries is not in Europe or USA. These industries, the mines where metal is extracted, farms where lot of the food in produced, are all in third world countries. Why Siemens move their factories to third world countries instead of their own country in Germany? Because labour is cheap. Ask any worker that work in these places if he work by personal interest or ethics. They are just trying to survive. They have families and all possible jobs pays little and requires a lot of effort.Perhaps you see this as an oversimplification because you are looking too near home in a biased position. The number of countries considered \"rich\" and \"developed\" is a minority. Capitalism is a global system. reply refurb 13 hours agorootparentI’m not sure that changes things at all.I live in a developing country right now where jobs are plentiful. Employees jump from employer to employer for more money.So while I don’t doubt the situation is different in your country, the fact that different situations exist would argue that it is an oversimplification. reply Natsu 17 hours agorootparentprev> If unemployment did not exist, the capitalist class would have no power to make workers work harder using the threat of losing their jobs.This seems to envision that nobody can find new kinds of useful work or otherwise work for themselves, which is odd when you&#x27;re on a site where most of the people work in jobs that did not exist if we turned the clock back just a few decades and quite a few people are their own bosses. reply cgio 16 hours agorootparentIt’s not about nobody. Individuals can escape the intention. Statistically though you can have a target achieved by slowing the economy, as evident in the current situation. Of course, if the goal is not optimisation of output but of it’s distribution (with different views on what is the proper objective) then capitalism is only different to socialism in terms of definition of that objective. But similar to how we never achieved true socialism, we have never achieved true capitalism either, so I am wary of discussing on the merits of each theory on the basis of the pitfalls of their application. We still need a proper descriptive theory of our experience and socialism inadvertently is better at forming the initial angle of attack, giving a more articulate basis of discussion in terms of distribution rather than output. reply Natsu 16 hours agorootparentWhat gets called capitalism are basically imperfect, socially evolved things that have survived and worked well enough to survive. There are definitely rent-seeking parasites out there, but some of them are like the Kim family in NK. reply CapstanRoller 13 hours agorootparent>socially evolvedFunny how so much of this \"evolution\" had to happen at gunpoint, repeatedly, and must be enforced at gunpoint, continuously...https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Enclosurehttps:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;United_States_involvement_in_r... reply Natsu 11 hours agorootparentI mean, you can say the same about Socialism, even if you avoid the nationalistic flavors thereof. It&#x27;s not like Russia, China, Cambodia, etc. were peaceful and it&#x27;s odd that you point to the reaction to those via CIA regime change without mentioning why they might be worried about Socialist revolutionaries to begin with. Che wasn&#x27;t any too peaceful, either. replydrekipus 18 hours agorootparentprev> If unemployment did not exist, the capitalist class would have no power to make workers work harder using the threat of losing their jobs.What is the capitalist class in this case? In a perfect world this would be done by beatings and imprisonment, right?> Of course, very high unemployment is not good for capitalism, nobody was arguing this.It&#x27;s not good in socialist or communist countries either. Or is that a uniquely capitalist problem?> But very low unemployment below some threshold is also bad. Marx explained this, but if you do not believe him, capitalists themselves and their theorists say exactly the same thing.Yes, that&#x27;s what we&#x27;re all agreeing on. It&#x27;s not saying \"Marx said it&#x27;s bad, thus he was right about everything\"What is the substance of your post? What are you trying to say? Because it sounds like you&#x27;re agreeing with capitalism but under the guise of supporting Marx reply kmkemp 18 hours agorootparentprevGenerally speaking, low unemployment leads to the Fed raising rates, the anticipation of which, hurts stock prices. reply mschuster91 18 hours agorootparentAnd the US politics would be better off if politicians didn&#x27;t need to worry about their decisions causing the stock markets, and with it people&#x27;s pensions or healthcare, to tumble.401k, HSAs etc are the stranglehold on US politics. reply rakoo 9 hours agorootparentprevHistorically the people who have been shackled to a milling machine from childhood have been so under capitalism reply somsak2 9 hours agorootparentprevcheck out the concept of NAIRU reply ransom1538 16 hours agorootparentprev> \"Says who? The only \"requirement of capitalism\" is that individuals are allowed to have ownership rights.\"This was extremely powerful @legitster. For some reason this cleared up economic theory to me. These threads get lost in worker rights, but, that has nothing to do with capital. Capital is about ownership rights. You should be allowed to own things and means to your own production. Socialism is about taking these rights away, the debate is which. reply jamilton 14 hours agorootparentThat seems like poor representation of socialism. Socialist policies typically increase worker rights. You could see that as merely taking away rights from existing capital-owners, but it seems to me that it&#x27;s clearly a case of competing needs. Any rights you give to a worker is necessarily a restriction on their employer. reply deadfoxygrandpa 13 hours agorootparentyes, you&#x27;re right. that&#x27;s what we call \"class conflict\", it just means that different groups of people have different, conflicting interests based on their relationship to the work reply esarbe 17 hours agorootparentprev> Says who? The only \"requirement of capitalism\" is that individuals are allowed to have ownership rights.That&#x27;s not quite complete. To have capitalism, you also need labor to leverage capital. Capitalism requires the ability to extract money from the labor of other people.If every company was worker owned, you could still have a market economy and private property, but it wouldn&#x27;t be capitalism anymore. reply slowmovintarget 17 hours agorootparent> If every company was worker owned, you could still have a market economy and private property, but it wouldn&#x27;t be capitalism anymore.That&#x27;s not correct. If every company was worker owned as long as the goods and services produced are traded on the open market as an exchange of value, that would still be capitalism. If \"worker-owned\" actually means government owned, however, then you&#x27;re correct. Capitalism requires private ownership of the means of production. reply satvikpendem 16 hours agorootparentSounds like that would be market socialism actually, not capitalism, as workers work the means of production. reply esarbe 7 hours agorootparentprev> If every company was worker owned as long as the goods and services produced are traded on the open market as an exchange of value, that would still be capitalism.No. We had \"exchange of goods on an open market\" long before we had capitalism.https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Capitalism reply legitster 17 hours agorootparentprev> If every company was worker owned, you could still have a market economy and private property, but it wouldn&#x27;t be capitalism anymore.Again, says who?Depending on your definition of capitalism, corporate charters pre-date capitalism! Corporate charters were rights granted by governments to pursue economic activity. What we define as the introduction of \"capitalism\" was the granting of individuals without nobility the rights to corporate charters.Today, a corporation is still a government defined-entitity for the purpose of generating economic activity. reply pyuser583 15 hours agorootparentThe first corporations were Benedictine monasteries that needed to own property independent of any individual member.As you say, it had nothing to do with capitalism.And non-capitalist corporations are still very much a thing. Labor unions are usually corporations. reply malermeister 17 hours agorootparentprevThat&#x27;s actually basically how the economy of Yugoslavia worked, worker&#x27;s self-management [0] being the key term. You had worker-owned coops competing on the market.[0] https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Workers&#x27;_self-management reply goatlover 15 hours agorootparentprevWhat about private farms and home businesses? reply esarbe 8 hours agorootparentI think private farms and home business existed before we had what we call \"capitalism\".Capitalism only arises in the 18th century as a distinct market model.We had private property and market economies long before we had capitalism.https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Capitalism reply brightball 18 hours agorootparentprevEconomics always win.If the labor supply increases, new enterprises will be able to hire and grow. This will shrink the labor supply and increase the price of labor.The only time there are massive shifts are when some sizeable factor creates a disruption. Sometimes that’s technology advancement.Other times it’s a policy change due to government intervention. The area where I live used to be the textile capital of the world until a policy change shifted all of it overseas and gutted the entire area.And now that same area is thriving after years of being destitute. Old mills converted to fancy apartments. Old train tracks used to ship product converted to bike trails. Thriving tech community.It ebbs and flows. But nobody making centralized decisions would have made the choices that led to it. reply Retric 18 hours agorootparentEconomics doesn’t guarantee absolute efficiency just a reasonable approximation of efficiency.Moderate unemployment is one such inefficiency, but so is misallocated labor. A worker moving to a higher paying job is hypothetically a more optimal allocation of resources because they can only be paid more if they are creating more value. However, the real world is messy and therefore the price signaling around pay isn’t perfect just as stock pricing isn’t perfect either…The bizarre thing is in practice capitalism works so well despite these issues even before you consider government intervention, monopolies, incentives misalignment etc. However at some point it’s less about the system than the people operating it. reply pydry 16 hours agorootparent>The bizarre thing is in practice capitalism works so wellDoes it? It&#x27;s exacerbating environmental destruction, it creates all manner of bullshit jobs that are an epic waste of human potential and it has created a massive underclass who can&#x27;t even afford the roof over their head.I dont think this economic system will be looked upon fondly in 500 years any more than we&#x27;re impressed with the divine right of kings. reply Retric 16 hours agorootparentThat massive underclass existed long before capitalism. Agrarian societies have had poor people going back longer than recorded history, they also generally had slaves and or some form of serfdom.Humans also caused massive environmental devastation going back to the Stone Age and across all economic systems. In the Americas only 1 in 6 mega fauna species alive 50k years ago survived to 10k years ago. In Australia it was 1 in 8.Things have gotten worse but that’s less that individual humans have become more destructive, it’s mostly the simple fact there are more humans. reply jamilton 14 hours agorootparentCapitalism was an improvement on feudalism, but that doesn&#x27;t mean there&#x27;s nothing better. reply Retric 12 hours agorootparentIn theory a better option could exist we haven’t actually implemented anything better, humanity has tried many systems not just feudalism, communism, and capitalism and it’s the clear winner by the overwhelming majority of metrics. Mercantilism, tribalism, etc all have some upsides for some segment of the population but don’t result in nearly the same levels of widespread prosperity.What we consider extreme poverty was normal throughout most of the globe and most of human history. reply pydry 7 hours agorootparentFor hundreds of years feudalism was also a clear winner. It&#x27;s unlikely that capitalism will even last as long as it did. reply Retric 5 hours agorootparentAt least initially feudalism was economically worse than the the Roman imperial system in terms of output per person. It’s stable politically, but not objectively better.Output increased overtime as technique and technology continued to improve, but that’s not a function of the feudalism specifically. replyfallingknife 16 hours agorootparentprevCompare with the USSR where there was minimal environmental destruction, no bullshit bureaucratic jobs, and of course, no poor people. reply goatlover 14 hours agorootparentAlso where the saying, \"We pretend to work and the they pretend to pay us\", comes from. reply pydry 6 hours agorootparentThe USSR suffered from the resource curse towards the end. Its an affliction that has destroyed many economies of all stripes. It&#x27;s the same reason why most of Africa is an economic basket case.The USSR was instrumental to mankind becoming a spacefaring species. The US wasnt even interested until the USSR started and lost interest once they landed a man on the moon and declared that they had \"won\" the race. Were they still around space exploration probably wouldn&#x27;t have stalled.They were also instrumental in keeping the US government in line. US elites were terrified that the USSR and domestic communists might join forces to overthrow them. Elite fear of communists is why people in the 1950s could easily afford college, medical care and a roof over their head and why they were guaranteed a job doing something meaningful like building a dam or a bridge.You&#x27;re probably right that it&#x27;s better that our finest minds are dedicated to making people click on ads and take out loans, though. This truly is the pinnacle of civilization. You have a whole computer in your pocket. You might have been able to buy a house in the 1950s and not be bankrupted by medical bills, but you couldn&#x27;t play flappy birds. reply Retric 5 hours agorootparentYou’re incorrect in terms of the space program. The US and Great Britain etc where very interested in rocketry and therefore spending significant sums before Sputnik. Which is how the US was able to launch a satellite in 1958 a year after Sputnik.You don’t go from knowing nothing about rockets to launching a satellite in a year.Further, the US slowed down but didn’t abandon its manned space program. It was spending a frankly crazy amount of money on a publicly stunt to get people to the moon, but we’ve continued to invest in the space program over the long term. Actually going past the moon requires long term habitation in space thus the interest in space stations. reply pydry 1 hour agorootparenteverybody was interested in rocketry ever since V2s demonstrated that a good rocket made a good weapon.The US wasnt particularly interested in space exploration unless the USSR did it first though.Just like the UK wasnt interested in setting up an NHS until it became glaringly evident how well the soviet NHS (also called the NHS) worked and the US won&#x27;t set one up even though ~70% of the population want one. replydrekipus 19 hours agorootparentprevIt&#x27;s not waste unless you think of humans as little units of work, like a resource to be mined.People complaining about a problem doesn&#x27;t mean it is a problem. I want cheaper milk, I complain about the price of milk, but the price is probably correct and that&#x27;s for me to grumble about.\"Captains of industry\" want a pool of unemployed people they can pick from. If the pool is dried then that&#x27;s fine. It&#x27;s not a sign that capitalism has failed. reply anyonecancode 18 hours agorootparentI think the implicit argument here is that \"capitalism\" means \"rule by those who own capital.\" Hence a lack of unemployed people, which would hurt the captains of industry, _would_ be a failure under that definition of \"capitalism.\"If by \"capitalism\" we merely mean things like a market economy with property rights, then the question would be what to call a system that has this but where workers, rather than captains of industry, have more power? Whatever we want to call _that_ system, it doesn&#x27;t currently exist, and we&#x27;ve seen that any moves in that direction are very strongly resisted (c.f. return to office policies driven by captains of industry freaking out). reply drekipus 16 hours agorootparent> I think the implicit argument here is that \"capitalism\" means \"rule by those who own capital.\"what \"rule\" ? - capitalism doesn&#x27;t set out to \"rule\" by anyone, it&#x27;s been a system of owning capital (to put it very simply &#x2F; abbreviated) for as long as I&#x27;ve known it. I would call myself a \"capitalist\" (in that i ascribe to it, used it to pull myself out of poverty) but i do not believe in anyone having \"rule\" over me, especially not my employers. As a sound bite: \"freer the markets, freer the people\".> Hence a lack of unemployed people, which would hurt the captains of industry, _would_ be a failure under that definition of \"capitalism.\"Ok, I could argue \"maybe not\", but why would we be arguing under that definition of capitalism? Is it not the same as \"well my definition of capitalism is that everyone gets ponies and candies, so if you have rotted teeth, that&#x27;s a failure of capitalism, under that definition.\"I&#x27;m saying this in jest but for a real reason, why would we \"just pick a definition of capitalism and argue why it fails\" ?> If by \"capitalism\" we merely mean things like a market economy with property rights, then the question would be what to call a system that has this but where workers, rather than captains of industry, have more power?Capitalism. I&#x27;ll assume by \"power\" you mean things like bargaining power for salary negotiations, benefits, etc, which is what unions do.. then yes, by definition, the seller (union) has capital (labour) that the buyer (whatever boogeyman you want) will have to negotiate for. The alternatives are to take it by force, which goes both ways, and ends in eternal conflict or a ruling power (this time real \"rule\" not phoney \"he gave me a job\" rule.)> Whatever we want to call _that_ system, it doesn&#x27;t currently exist, and we&#x27;ve seen that any moves in that direction are very strongly resistedI strongly resist the rise in milk prices as well. It&#x27;s a natural thing to resist having to pay more for the same services, because one seems to be losing something for no reason.. that&#x27;s not to say it&#x27;s a bad thing. Milk is expensive, people have real needs.The only way to supress the complaining is by 1. convincing people that&#x27;s what they really want, or 2. beating &#x2F; forcibly supressing that. CCP for example, does both, by attributing anything to nationalism and&#x2F;or xenophobia - because it works and keeps the populace not demanding more power from the government.> (c.f. return to office policies driven by captains of industry freaking out).I would fathom that it&#x27;s less \"captains of industry wanting to enslave the common people like you and I\" and more \"commercial real-estate no longer has as much of a purpose and people do not want to be left holding the bag\" reply anyonecancode 13 hours agorootparent> what \"rule\" ? - capitalism doesn&#x27;t set out to \"rule\" by anyone, it&#x27;s been a system of owning capital (to put it very simply &#x2F; abbreviated) for as long as I&#x27;ve known it.It seems clear to me that those with a great deal of capital have far more influence over what laws get passed and enforced than those with less capital. And that many laws benefit those with more capital, often at the expense of those with less. I&#x27;d call that \"rule.\" reply t0suj4 1 hour agorootparentIf you need someone else to force something they don&#x27;t want to do (get a certification) you negotiate with the entity who has the monopoly on violence to maybe consider your recommendations. Then you need to wait for an opportunity (a mishap in the field, someone got their toe cut off) the monopoly of force might want to act on. Then you can offer a solution (a certification program) supported by your prior negotiation that makes the monopoly on violence mandate a requirement (your proposal).The result is that you now offer a service and a mandatory certification and your competitors must go through you to be able to offer the service to anyone else or face the monopoly on violence.There doesn&#x27;t have to be any exchange of funds or favors. You simply offer the confused representative of monopoly on violence a solution, all you need is to sell it well. reply drekipus 12 hours agorootparentprev> those with more capital have far more influence over what laws get passed and enforced than those with less capital. And that many laws benefit those with more capital, often at the expense of those with less.This is called corruption and crony capitalism, and it happens far less than you might think in the western world, and the effect is far greater in socialist and communist countries, or countries that don&#x27;t respect capitalist fundamentals.You can have power and rule over people without the need for a free market reply nvm0n2 10 hours agorootparentprevSeems very unclear to me. If it were true then rich tech firms and banks wouldn&#x27;t constantly be treated like piñatas by governments, who very much enjoy fining and regulating them despite their protestations.This is the problem with socialist theory. It&#x27;s full off assertions that in reality lots of people don&#x27;t agree with or which are clearly untrue, über they&#x27;re taken to be axiomatic. reply anyonecancode 1 hour agorootparentSteal a worker&#x27;s wages, get a fine. Steal a loaf of bread, get jail. reply esarbe 17 hours agorootparentprevProperty rights and a market economy are not sufficient for capitalism.For capitalism you also need to leverage the work of others for your own profit, i.e. wage labor. Syndicalism, for example, also allows for private property and a market economy. It&#x27;s not capitalism, though.Worker exploitation is a core principle of capitalism. reply drekipus 15 hours agorootparent> Worker exploitation is a core principle of capitalismyou can choose not to work. you just have to figure out how to get food and shelter on your own though.you can go into the woods, hunt and fish, and build your own shelter. as long as you&#x27;re not breaking laws, you&#x27;ll be fine.If work was owed to the state (or syndicate), then you have no choice (by being part of the state) - so which one is slavery and exploitation? reply jamilton 14 hours agorootparent>as long as you&#x27;re not breaking laws, you&#x27;ll be fine.My expectation is that this would most likely be nearly impossible without money and therefore work, because you can&#x27;t live on land you don&#x27;t have the rights to. From a quick search, you can legally camp in national parks in the same spot for up to 2 weeks before you have to move at least 25 miles. And of course, there are legal restrictions on hunting and fishing that (I expect) would be make feeding yourself impractical.But that&#x27;s besides the point. It&#x27;s still exploitation even if other options are merely much more difficult&#x2F;annoying&#x2F;painful and not impossible. reply drekipus 11 hours agorootparent> It&#x27;s still exploitation even if other options are merely much more difficultwhat wouldn&#x27;t be exploitation, in your estimation? what is the meaning of the word?is me, telling my kids to take out the trash, exploitation? am I being exploited when i feed my kids and put them to bed? reply esarbe 8 hours agorootparentWhat a very good question. One that Marx already examined. I&#x27;m not a Marxist, but I find his analysis and conclusion to be spot-on.https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Exploitation_of_labour reply deadfoxygrandpa 13 hours agorootparentprevwhen marxists say \"exploitation\" it&#x27;s just a mathematical fact, not a value judgement. it just means that workers, systemically (that is, it doesn&#x27;t make a claim about any individual worker), don&#x27;t get ownership over the full value that they produce. this must be true if you really think about it, otherwise there would be no reason to own a company that you aren&#x27;t also a normal worker in reply drekipus 12 hours agorootparent> don&#x27;t get ownership over the full value that they produce.But the value is subjective. A few lines of code is not valuable to me, no matter what context, so I am happy to trade it for a salary.If I dig a hole for someone, someone agrees to pay me $50 for it. I value the $50 more than the cost of labour to do the hole. Me making holes is no value to me, and infact it&#x27;s a good workout, so if they didn&#x27;t pay me to do it I&#x27;d just go to the gym and do the same movement for free.To them, it&#x27;s probably the start of a fence or a clothesline or something that solves a real problem for them. Much more valuable than $50 reply deadfoxygrandpa 9 hours agorootparenton an individual level maybe it&#x27;s (partially) subjective, but marx is concerned with the systemic level. he&#x27;s talking about the industries which really drive the economyi don&#x27;t think there&#x27;s ever been a successful attempt to reduce macroeconomics down to the microeconomics level. basically, the system as a whole cannot be calculated by summing up a model of all the individual behaviors, it doesnt work that way. there have been several broadly successful macroeconomic modelssteve keen talks a lot about this same type of stuff and he&#x27;s very much not a marxist, if you want a different perspective on it reply drekipus 8 hours agorootparentTy for the recommendation reply MichaelZuo 12 hours agorootparentprevNo, it&#x27;s not zero sum, it&#x27;s possible to destroy value, i.e. 1+1 could equal less than 2. And it&#x27;s also possible to create value, i.e. 1+1 could equal more than 2.In the extreme case even literal bars of gold can become worthless after a few seconds of &#x27;work&#x27;, e.g. if someone throws them into an active volcano. After which no human individual or group would derive anything from it. reply deadfoxygrandpa 9 hours agorootparentthat&#x27;s not \"socially necessary labor\", so the labor theory of value doesn&#x27;t have anything to say about something like that reply MichaelZuo 3 hours agorootparentThen it sounds like a pretty dumb theory. reply esarbe 8 hours agorootparentprev> you can go into the woods, hunt and fish, and build your own shelter. as long as you&#x27;re not breaking laws, you&#x27;ll be fine.That&#x27;s a big no-go in almost all European nations. Fishing and hunting is always regulated, requiring permit and all the bureaucracy leading up to that.Not an option for most - if any - nation on earth.> If work was owed to the state (or syndicate),That&#x27;s neither what syndicalism proposes nor what I talked about. reply alvah 13 hours agorootparentprevIf an owner of capital, i.e. a capitalist, makes money from a combination of his own efforts & automated systems (physical or software) he has invested in, by your definition he is no longer a capitalist. Ergo, your definition is either wrong, or at best incomplete. reply esarbe 8 hours agorootparentIf you make money on your own, from no capital inherited except what society has given you and you don&#x27;t ever have any employees, only making profit from your own labor, then yes; that&#x27;s not a capitalist.How does that demonstrate that \"my\" definition is wrong or incomplete? replyenkid 18 hours agorootparentprevEvery system has built in waste. If you have no waste, you have no slack room, which means when a system faces a crisis. reply fineIllregister 17 hours agorootparentLabor doesn&#x27;t operate like that. If we wake up one day and suddenly need a ton of labor, we don&#x27;t need idle worker. We can reassign active labor, like in World War II.Also, it&#x27;s weird to casually call people becoming homeless and starving and dying due to lack of work \"slack\". I&#x27;m sure the people desperate for money see that as a crisis more important than whatever abstract system crisis you are imagining. reply Theodores 17 hours agorootparentThe 60&#x27;s were an era of labour shortage in the UK. Recently some British towns had a labour shortage, such as Reading. This means that garbage collection jobs pay well, which is a good thing for those that want to work and be home in time to collect the kids.A labour market should have people dropping out for having babies, going to education, sickness, looking after elders of the family, going on adventures and self improvement, for example people that want to write their own app&#x2F;book. reply fineIllregister 13 hours agorootparentPeople who are not actively looking for work are not included in employment numbers (at least in the US). People voluntarily taking time away from working are not the reserve army of labor that our policies create to suppress worker power. reply nvm0n2 10 hours agorootparentThis is a nonsensical understanding of employment! The reason there are unemployed people is a combination of transit times (if you lose your job as a programmer tomorrow you don&#x27;t want to be allocated to a job as a hairdresser just because that was the next slot that opened up temporarily) and because some people would like to work at a specific job but can&#x27;t get one right now, and would rather live off savings or welfare for a while rather than compromise (e.g. jobbing actors).Attempts at full employment were tried, it resulted in dead economies. This stuff is basic! reply Theodores 10 hours agorootparentprevFair point, although I found in the discussion that zero percent unemployment was considered bad, whereas, as I see it, there are always people dropping in and out of the labour market. My point was that not everyone works all the time. replylosvedir 18 hours agorootparentprevI think worth noting 5% unemployment doesn&#x27;t necessarily mean an \"army of the unemployed\", by which I take you to mean a sliver of downtrodden persistently unemployed people.It&#x27;s a metric taken by sampling the population and asking if they&#x27;re looking for a job at that moment. It could equally be every worker looking for a job 2.5 weeks out of the year.It&#x27;s obviously somewhere in between those extremes but picks up a lot of the latter as seasonal workers shifting to where there&#x27;s demand. reply thescriptkiddie 17 hours agorootparentEngels&#x27; concept of the reserve army of labor does not refer to a specific group of persistently unemployed people, but to the idea that there must always be some significant number of people who are unemployed. In other words, a statistical unemployment rate of 0% is not possible under capitalism. This is simply because if there was 0% unemployment, it would be impossible for businesses to hire anyone without poaching from another business. According to the law of supply and demand this would result in wages rising rapidly and without bound, much as the price of bread does during a famine, until it was impossible for businesses to make any profit. reply Aunche 16 hours agorootparent>This is simply because if there was 0% unemployment, it would be impossible for businesses to hire anyone without poaching from another business. According to the law of supply and demand this would result in wages rising rapidly and without bound, much as the price of bread does during a famine, until it was impossible for businesses to make any profit.You can tell from ideas like this that Engels never had to work a day in his life. Not everyone is going to instantly switch jobs when they hear about a slightly better one. And I thought capitalists were the ones that supposedly treats humans as mindless automatons.If you&#x27;re going to assume spherical cows like that, all businesses would already make 0 profits due to competition. In a hypothetical capitalist world with 0 unemployment, employers wouldn&#x27;t poach anyone unless if they think that it would be a profitable decision. We&#x27;d have higher inflation, but that&#x27;s not really the end of the world if everyone is employed. More importantly, our economy would stagnate due to not having any slack, but that&#x27;s the to occur in any non-capitalism system that has 0 unemployment. reply astine 15 hours agorootparentprev\"According to the law of supply and demand this would result in wages rising rapidly and without bound\"No it doesn&#x27;t. Having to poach employees to increase your labor pool doesn&#x27;t mean that you are willing to raise wages without and bound. A food crisis is where an inelastic demand meets a hard supply limit, so prices can go up dramatically, but they don&#x27;t go up infinitely, not even in a famine.Supply and demand does not allow for unbounded rises in prices because demand is never infinite. Rather, prices go up to the highest amount demand will allow for. For things like food for which demand is inelastic, prices can go up pretty high and people will eat into their savings if they have to, but labor will more likely be limited by the marginal productivity of individual workers. reply brightlancer 12 hours agorootparent> Supply and demand does not allow for unbounded rises in prices because demand is never infinite. Rather, prices go up to the highest amount demand will allow for.Generally, yes, but it&#x27;s not an absolute.Each time an employee is poached for more money, that person has more money to spend; done frequently enough, this will increase the velocity of money and cause general inflation or even hyper-inflation.I&#x27;m only speaking hypothetically because folks are talking about 0% unemployment. reply legitster 16 hours agorootparentprev> This is simply because if there was 0% unemployment, it would be impossible for businesses to hire anyone without poaching from another business.Man, the idea of a labor-force participation rate being a tracked statistic by central banks would have blown Engel&#x27;s mind. reply jlawson 17 hours agorootparentprevThe only system that can ever have literally 0% unemployment is slavery.If humans have choice, some will always choose to quit their jobs on any given day.So the situation you&#x27;re describing is nonsensical; it&#x27;s incoherent to try to extrapolate what it would mean because the premises are incoherent. reply pydry 17 hours agorootparenthttps:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Full_employmentThis explains it better.Milton Friedman&#x27;s \"natural rate\" of unemployment is basically \"the rate capitalists are gunning for\" in an attempt to suppress wages. Quite a bit below full. reply astine 15 hours agorootparentI don&#x27;t see anything in that link about increasing unemployment in order \"suppress wages\". Milton Friedman&#x27;s comments are about monetary policy. Unemployment can be decreased by increasing inflation, but Friedman thinks thats a bad idea. He not arguing that anyone should \"gun\" for that unemployment rate, but rather that it should be accepted as the \"natural\" result of an elastic market. replymarcosdumay 18 hours agorootparentprev> unemployment is kind of a requirement of capitalismIf you decide to define \"capitalism\" as cronyism, yeah, the things cronists demand are requirements. reply wredue 17 hours agorootparentDo you have an example of capitalism that isn’t cronyism?Even regulated capitalism is clearly cronyism. reply marcosdumay 12 hours agorootparentThat really depends on how you define \"capitalism\". reply hattmall 20 hours agoparentprevCollege has become mostly just that, a means to a career. It&#x27;s even begun to wear that out and at higher levels become a means to a career in Academia. That&#x27;s ultimately the beginnings of a massive ponzi scheme, it is now considerably detached from pure pursuits of knowledge, it&#x27;s now become cannibalized for pursuits of funding. reply legitster 20 hours agorootparentThis is kind of my point. In 1949 when Einstein wrote this, the US state colleges were little more than vocational schools. He was advocating for a world ruled by academic achievement, kind of unaware of the brave new reality it would come with. reply 1letterunixname 20 hours agorootparentprevIt&#x27;s less of a Ponzi scheme and more of a gamified, time and treasure expensive hazing ritual whereby the sheepskin \"proves\" \"quality\" and some measure of aptitude, intelligence, baseline of problem-solving ability, and ability to finish something. It has been and is also 4-N years of extended adolescence. And in the distant past, when universities were more selective and cheaper, it&#x27;s where people often met their spouses.How else should we prepare people for the various workforces: knowledge work, financial services, skilled trades, etc.?Universities fear 2 things: bad publicity and losing accreditation. Perhaps accreditation orgs such as ABET (in the US) need to get off their collective, perfunctory rubber-stamping posteriors and ensure financial and fiduciary stewardship are occurring, and that a university doesn&#x27;t become tantamount to a white-collar human trafficking recruiter demanding the life savings of their victims on the vague promises of a bright future. reply SketchySeaBeast 19 hours agorootparentI&#x27;d argue that the evidence of \"aptitude, intelligence, baseline of problem-solving ability, and ability to finish something\" has much less value now.University is more of a vocational college now - there are specializations for most things, and if you didn&#x27;t choose the right specialization and are trying to break into a field it&#x27;s much harder to do so given that there are other people with better education. Because the general university education has become so ubiquitous just having a degree has much less power now. reply brightlancer 12 hours agorootparentprevThe academic tracks are like a pyramid scheme: professors need graduate students, who then become professors who need graduate students, who become professors who need even more graduate students.This was successful as we forced more and more young adults to go to colleges, but that growth is slowing while the academic tracks are still multiplying, which means there are PhDs and grad students who are very upset that their expensive pieces of papers will never get them the tenure job they thought was guaranteed. So we have very angry academics teaching our young adults -- and that&#x27;s NEVER gone badly. reply marcosdumay 18 hours agoparentprev> It&#x27;s a pretty well written piece.It&#x27;s... Pretty mundane and usual.If it didn&#x27;t come from Einstein, nobody would even pay attention. It just states the same gains and problems everybody knows (and did know by decades at that time), and restates the large showstopper without going into how to solve it (what nobody knows how even today).It&#x27;s a really good piece of popular communication. He was very good at that. And the situation didn&#x27;t change much since then (at least the things he describes). So yeah, if you don&#x27;t know a lot about the subject, the article is for you. Just don&#x27;t expect to learn anything deep. reply Turskarama 13 hours agorootparentMost people don&#x27;t know anything about the subject. People in this thread are likely far more educated than average on the subject, but I&#x27;m still seeing a lot of comments from people who don&#x27;t understand the basics of labour theory. reply demondemidi 2 hours agoparentprevYes, capitalism makes people less productive. Wall Street? The richest of the rich get rich by playing games with paper, not by doing something useful to society. Look at all the stupid skyscrapers in NYC that were simply built to launder wealth, aren’t occupied, and are beyond the means of 99.99% of US citizens, yet the dominate the skyline and shade the public parks. Capitalism is designed to have lazy winners. reply dmn322 18 hours agoparentprev> we have so many welfare programs and safety nets and worker protectsNot really, in the 40&#x27;s and 50&#x27;s the programs were stronger reply kansface 18 hours agorootparentFederal expenditures as a function of GDP were ~12% or so in 1950 (ie, coming down from the war). They are 25% or so now, 20% before covid. I’d imagine the states are about the same. reply dmn322 12 hours agorootparentAnd what has that increased expenditure gone to? reply legitster 18 hours agorootparentprev> Not really, in the 40&#x27;s and 50&#x27;s the programs were strongerHow so? https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Social_programs_in_the_United_... reply dmn322 12 hours agorootparentIs that not mostly from social security?I wouldn&#x27;t increased costs from paying for the retirement of an aging population to be an indication of welfare program strength.Is medicaid &#x2F; medicare in there too? If so, then ballooning medical costs wouldn&#x27;t really be an indication of stronger programs either. reply hyperthesis 16 hours agoparentprev> Capitalism will make people stop working and be less productive?\\aside: Adam Smith in The Wealth of Nations has a story about men who worked themselves into the ground, because they were paid by-the-piece (not per hour). They needed to be protected from themselves. (The psychological mechanism wasn&#x27;t speculated, but I suspect maybe competition rather than greed.) reply jwestbury 8 hours agorootparentSo Adam Smith was opposed to the gig economy, then? reply dontlaugh 4 hours agorootparentYes, because it’s yet another name for piece work without job security.He was also against landlords. He was much closer to what we’d today call a social democrat, not unlike Keynes. reply forgetfreeman 17 hours agoparentprevWe may have more programs by volume but the barriers to entry and weird-ass financial requirements to keep benefits often drives the outcomes those programs are notionally intended to address. The social safety net today is significantly less functional than it was 30 years ago. reply jtode 16 hours agoparentprevI think he&#x27;d be screaming \"read it again\" at you right now lol reply CrackerNews 20 hours agoparentprevI would say that Marx and labor theory of value are still relevant as mechanisms for understanding capitalism. According to Marx, Capitalism is a mode of economics that has unleashed the productive forces, but its internal contradictions give rise to increasing crisises. There is a constant downward pressure on labor costs versus rising costs of living.Crisis has been averted multiple times, and the productive forces continue to be unleashed. To prevent total collapse, concessions like welfare have been made.However, there is a real possibility of potential growth being stifled by self interests of powerful economic actors. This bleeds out now into identity politics as people view the liberal system as incapable of providing the growth and future they thought would be delivered. Either unprivileged groups want to be paid high wages or the privileged groups want to protect their high wages from being cut down. This is a form of class warfare that isn&#x27;t too different from what Marx observed in his days.This still is far away from achieving the socialist mode of production where the workers become the planner and rulers of the economy to further unleash the productive forces. reply legitster 20 hours agorootparentMarxism is kind of like the chiropracty of economics. Just because Marx can explain everything and point out contradictions doesn&#x27;t mean they are true.QoL is still in an upward climb. Average lifetime working hours is still marching down. We&#x27;ve peaked out on literacy and child mortality and preventable diseases with available technology.You have to ignore 120 years of intellectual progress on economics to still want to apply labor theory of value to problems. There may be a day when we can achieve some semblance of a \"socialist\" mode of production - but I can almost assure you it will not be from people following Marx&#x27;s flawed analysis. It will be from people who understand either classical or keynesian economics, or whatever new understanding come from it, and apply them towards actual functional policies. reply fullspectrumdev 19 hours agorootparent> We&#x27;ve peaked out on literacyI mean, just look at actual literacy stats and you will find we have a ways to go on this. A frankly absurd number of people in the UK are functionally illiterate. Same in France. reply mschuster91 18 hours agorootparentprev> We&#x27;ve peaked out on literacyBullshit, over half the US scores abysmal for literacy (see e.g. https:&#x2F;&#x2F;map.barbarabush.org&#x2F;). Germany, in contrast, is at 20% (https:&#x2F;&#x2F;www.dw.com&#x2F;en&#x2F;millions-of-germans-have-trouble-readi...).> and child mortalityBullshit, among developed countries the US has the highest infant mortality (https:&#x2F;&#x2F;www.ajmc.com&#x2F;view&#x2F;us-has-highest-infant-maternal-mor...), child and teen mortality keeps rising (https:&#x2F;&#x2F;news.vcu.edu&#x2F;article&#x2F;2023&#x2F;03&#x2F;child-and-teen-mortalit...), and a significant portion of that is due to the undying American love for the #1 killer of children: guns (https:&#x2F;&#x2F;www.kff.org&#x2F;mental-health&#x2F;issue-brief&#x2F;child-and-teen...).> and preventable diseases with available technology.Bullshit, at least among Republicans who are dying at a statistically significant higher rate than Democrats due to vaccine refusals (https:&#x2F;&#x2F;theintercept.com&#x2F;2022&#x2F;10&#x2F;10&#x2F;covid-republican-democra...). Even vaccines long proven safe like measles are being disputed by enough dumbass morons that society can&#x27;t no longer rely on herd immunity (https:&#x2F;&#x2F;www.washingtonpost.com&#x2F;health&#x2F;2023&#x2F;01&#x2F;12&#x2F;childhood-v...). reply legitster 18 hours agorootparentAre you arguing that Germany is not a capitalist country? I was collectively speaking about the capitalist world.> How can y&#x27;all be so damn certain you&#x27;re the best in the world when five minutes worth of Googling is enough to completely destroy all your arguments?!Uhhhh, maybe read the comments a bit more clearly before jumping in. Do you always just jump in on random threads to say Americans are dumb? reply mschuster91 18 hours agorootparent> Are you arguing that Germany is not a capitalist country? I was collectively speaking about the capitalist world.Even then, assuming we&#x27;re not just talking about the US, it&#x27;s a stretch to say \"we\" peaked out. We have a lot to do before anyone can make that claim, the problem is that in most countries politicians have been bought off by rich elites to lower taxes and reduce public spending (which has been done especially to education as that&#x27;s the easiest), so there is no tax base left to fund what needs to be done.> Uhhhh, maybe read the comments a bit more clearly before jumping in. Do you always just jump in on random threads to say Americans are dumb?Fair point, removed the rant. reply insanejudge 17 hours agorootparentprevGermany like many other Europeans would absolutely be considered a socialist country by most US standards (holding no distinction between socialism and social democracy).This is a big part of the confusion, intentional as far as I can tell, generated by people trying to eliminate taxed, regulations, and worker protections in that they can flexibly do things like point out how Sweden is wonderful and has no minimum wage, so we should do that too, when the reality is inverted with successful universal collective bargaining guaranteeing everyone much better wages -- something that would probably get the national guard rolled out if US workers pushed for presently. reply fileyfood500 17 hours agorootparentprevSpecifically for the US and Germany literacy results, I see a difference between these and past methods of measuring literacy. In the first link, the most basic sample question required the user to interpret a simple table. The second and third level questions required users to navigate websites, including a task of finding the correct link to navigate to the correct page of a site.I think this establishes a great point that we have an ever changing society with growing demands, where we now need to consider much more than just reading words. Internet literacy is a huge barrier, and it’s great to see it getting measured and accounted for as countries continue to adapt education to the changing times. reply CrackerNews 19 hours agorootparentprevYet there are drug and mental health crises, and there are families whose quality of life hasn&#x27;t improved since the last recessions. I don&#x27;t believe that progress is so neatly linear, and the Hegelian philosophy behind Marx attempts to capture that, IMO.Labor theory of value does have issues, but I don&#x27;t think it can be so neatly dismissed either as alternatives appear to have vague criteria for what contributes to value. reply legitster 19 hours agorootparentValue being subjective and fluid is exactly what makes modern society function. I may value having lots of children. You may value not having lots of children. Expecting there to be an objective universal value on everything is a fool&#x27;s errand.I trade my time at work to sit at a comfy desk and type for money, and that is work. And I will negotiate for more time and money so that I may spend more time lifting heavy things at a gym. Funnily enough that is leisure and it costs me money. It is in the asymmetry of needs that we create excess value by working for each other taking care of the things they do not want to do for themselves.Labor theory makes no sense in how people actually choose to go about their lives. Which is why modern economics is so focused on how to just maximise as much generic utility out of a market. And it is usually Marxists who are actually the most obsessed about counting up the little green slips of paper that don&#x27;t mean anything.You reference Hegel, but it is specifically his idea that progress is inevitable. Which is exactly why I reject Marx. Marx believed that making functioning plans was useless since progress was inevitable once unleashed. But Marx was a leech who counted on his friends for his subsistence and others to actually test his ideas. Progress is only made by intentional and planned efforts to deal with problems rather than just criticize and shake your fist at society. reply consilient 18 hours agorootparent> Marx believed that making functioning plans was useless since progress was inevitable once unleashed.Marx believed that planning out the detailed structure of a future utopian society, in the tradition of Owen or Fourier, was useless. And he was right. Societies are not and have never been the product of intentional design: no individual has the necessary power, no group has the necessary agency. They&#x27;re the accretion, year after year, of millions of independent agents doing the best they can with the constraints the past has imposed on them. We can adjust the constraints, to some extent, and maybe aim, very imprecisely, at some desired end state, but we don&#x27;t get to skip straight there. reply legitster 17 hours agorootparentOkay, but this is not at all what Marx himself said. Marx was philosophically opposed in all of his writings to answering even the most basic questions about what a communist economy&#x2F;government would look like. In his mind he was only proclaiming the inevitability of such a system. In fact, he regularly dismissed anyone who asked these types of questions as serving the bourgeoisie.But it turns out that, after a socialist revolution, who is going to make the bread and who is going to distribute it is not a problem that will inevitably be solved. reply consilient 17 hours agorootparent> Okay, but this is not at all what Marx himself said. Marx was philosophically opposed in all of his writings to answering even the most basic questions about what a communist economy&#x2F;government would look like. In his mind he was only proclaiming the inevitability of such a system.No, the point is that he&#x27;s not talking about a particular system. The famous soundbite from The German Ideology:> Communism is for us not a state of affairs which is to be established, an ideal to which reality will have to adjust itself. We call communism the real movement which abolishes the present state of things. The conditions of this movement result from the premises now in existence.Communism, for Marx, is the thing that beats capitalism, and he&#x27;s only willing to make claims about it that he thinks follow from that. He believes it will lack the features of capitalism that undermine its long term stability, and do a better job than capitalism of accomplishing the things that a mode of production needs to do to win out over others (namely, producing things), but anything more than that cannot be predicted decades-to-centuries out. Things will need to be administered, but they&#x27;re not going to be administered by him, or in circumstances he can predict.Consider feudalism. An educated Frenchman in 1700 could reasonably think that feudalism was on the way out, that it would probably mean the displacement of the aristocracy by the emerging bourgeoisie, that it would not have a patchwork legal system built out of a thousand years of accumulated hereditary agreements and local precedent, that it would professionalize government to some degree, that it would do a better job of maintaining a professional military, and so on. But they had no chance whatsoever of predicting the structure of the Federal Reserve, and it would be insane of them to claim otherwise. reply TotalCrackpot 17 hours agorootparentprevConsider that Marx wasn&#x27;t Marxist-Leninist although I think he was pro state. Anti-statist socialists like Kropotkin thought about some kind of decentralised planning. You could even have market as a distribution mechanism, but without capitalism through some variant of market socialism or market Anarchism. reply dragonwriter 17 hours agorootparentprev> But it turns out that, after a socialist revolution, who is going to make the bread and who is going to distribute it is not a problem that will inevitably be solved.Marx was, I think, of a very different mind about revolution than many of his later followers: I suspect that to Marx, a “socialist revolution” was more like the Industrial Revolution and less like the French (or, perhaps more to the point, Russian) Revolution.Marx wasn&#x27;t against providing concrete steps addressing coherent real issues adapted to the conditions in particular places (see the program for the German Communists that is often presented as an appendix to the Communist Manifesto). But the utopian end-state society was, in Marx’s view, rather far off. reply asu_thomas 14 hours agorootparentThis is exactly right, and Marx opposed revolutionary efforts in pre-industrial Russia (e.g. the Russian Revolution). He did advocate Russian support of revolution in Germany, but saw no use in revolution in pre-capitalist society. reply coliveira 18 hours agorootparentprev> Marx believed that making functioning plans was useless since progress was inevitableYou&#x27;re taking ideas out of your pants and putting on Marx&#x27;s mouth. At least be honest and say you never read him and hate his ideas without knowing what they are. reply legitster 17 hours agorootparentI have read Marx. Much more than most Marxists. Have you?The closest he got to describing a post-capitalist state was the very bleak \"Dictatorship of the Proletariat\" concept. reply coliveira 16 hours agorootparentOf course I did, in no point he suggests that planning is useless. reply asu_thomas 15 hours agorootparentprev> Marx believed that making functioning plans was useless since progress was inevitable once unleashed.Excuse me? The overwhelming majority of Marx&#x27;s published work was literally advocacy of concrete plans.See his work with the International Workingmen&#x27;s Association for some of the most well-known letters and articles arguing for explicit political positions and concrete labor actions: https:&#x2F;&#x2F;www.marxists.org&#x2F;archive&#x2F;marx&#x2F;works&#x2F;1864&#x2F;iwma&#x2F;index.... reply CrackerNews 18 hours agorootparentprevI find the subjective argument too abstract for practical use. All the subjectivity in the world must come to head with reality and how it can be enforced in reality. I am of the opinion that logistics wins wars, and labor theory of value, with its flaws, is able to provide a sense of direction for me to act on. Maybe I can bet on an asymmetry of needs with someone wanting to raise a family with me if I was unemployed and they did all the work, but I have the impression that a partner would appreciate me being able to help with the work too. reply HDThoreaun 19 hours agorootparentprevLabor theory of value is incredibly easy to dismiss. Value is about what people will pay for things, not how much work they took to make. Bam there we go. reply coliveira 18 hours agorootparentYou just dismissed you incorrect idea of labor value theory. Go back to read about the subject. To \"disprove\" Marx you should at least read his damn book and show that you know what you&#x27;re talking about. reply greenie_beans 18 hours agorootparentprevthis is a typical misinterpretation of the labor theory of value. it&#x27;s not the silicon valley \"I Am Adding Value\" SaaS ideal.the free market assigns the value created by laborers. it&#x27;s as simple as that. the buyer wouldn&#x27;t get this value in their life, at a price the market decided they pay, without the work of the laborer. the value wouldn&#x27;t be created without the laborer, or any of the capital or tools that it took to create labor (since labor created the capital and the tools). much like machines, it&#x27;s labor all the way down. reply HDThoreaun 18 hours agorootparentI didn&#x27;t misinterpret shit. The amount of work something takes too create has very little to do with its value. Labor theory of value would be a joke if it wasn&#x27;t so popular for some reason. Instead it&#x27;s actively disinforming people> it&#x27;s labor all the way downThis is completely orthogonal to value. Sure things wouldn&#x27;t exist without people to make them. That doesn&#x27;t mean that the labor it takes to make something constitutes its value. reply deadfoxygrandpa 13 hours agorootparentif you actually look at the inputs and outputs of entire industrial sectors, rather than individual firms, you generally find a very high correlation between the price of labor as input and the price out the output of that sector. like >96% for the uk as found by cockshott and cottrell in their 1995 paper reply nvm0n2 9 hours agorootparentNow do the oil industry. reply deadfoxygrandpa 9 hours agorootparentthe oil industry is in that same paper. it&#x27;s the outlier in that its output is a bit higher than predicted, because of economic rent reply nvm0n2 7 hours agorootparentMy point is that the price of oil has nothing to do with the price of labor and frequently fluctuates in massive ways unconnected to the labor market. reply greenie_beans 2 hours agorootparentprice has nothing to do with the labor theory of value replygreenie_beans 18 hours agorootparentprevlol you are proving my point that you don&#x27;t understand the labor theory of value. even adam smith was with it. reply andrekandre 18 hours agorootparentprevwhat is you definition of value?i feel you and the other poster are mybe talking past each other.. reply oneshtein 15 hours agorootparent(Not an original poster.)$1 banknote is equal to $10000000 banknote in labor. reply kieselguhr_kid 17 hours agorootparentprevCan you help us out by articulating what you think value is, and how it&#x27;s derived? reply zztop44 19 hours agorootparentprevThis kind of shallow dismissal could only be posted by someone who hasn’t spent much time thinking about economics, or thinking about why Marx remains one of the most relevant and influential theoreticians amongst people who do spend a lot of time thinking about economics.For a start, Marx understood well that the price assigned to a commodity by a market and its value were often out of sync. If you’re confused about the difference between those things, think about Dogecoin as a particularly extreme example. reply HDThoreaun 19 hours agorootparentThis kind of shallow dismissal of my shallow dismissal of a frankly idiotic idea that doesn&#x27;t deserve a deeper dismissal could only be posted by someone who hasn&#x27;t spent much time thinking about economics, or thinking about why Marx was popular not for his economic thoughts but for his sociological&#x2F;political ones. Someone being popular doesn&#x27;t make them right, but Marx was right about many things. Just not about labor theory of value.But here&#x27;s a deeper dismissal for you anyway https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;badeconomics&#x2F;comments&#x2F;fht0ti&#x2F;marxs_...it even conveniently brings up your doge argument reply consilient 18 hours agorootparent> This kind of shallow dismissal of my shallow dismissal of a frankly idiotic idea that doesn&#x27;t deserve a deeper dismissalThe labor theory of value was accepted wisdom prior to the late 19th century: it originates with Adam Smith and David Ricardo. It&#x27;s wrong (or more accurately, not a good conceptual framework) but it&#x27;s not obviously wrong, let alone \"idiotic\". reply legitster 16 hours agorootparentThis is misleading. Adam Smith presented this as a possible solution to an economic paradox at the time. But later philosophers came up with much better solutions:https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Paradox_of_valueThere&#x27;s no reason to believe that Smith wouldn&#x27;t have latched onto the much better solution. So being hell-bent on the incomplete answer from the 1700s is a unique peculiarity of Marxist theory. reply consilient 16 hours agorootparent> But later philosophers came up with much better solutionsYes, later than both Smith and Marx. Marginalism didn&#x27;t go mainstream until the 1890s, though the necessary pieces were there waiting to be assembled from about 1870. reply HDThoreaun 17 hours agorootparentprevfair enough. Maybe my dismissal was too shallow reply legitster 18 hours agorootparentprev> price assigned to a commodity by a market and its value were often out of syncBased on Marx&#x27;s own flawed logic! https:&#x2F;&#x2F;www.smbc-comics.com&#x2F;comic&#x2F;2014-05-02How much is a glass of water worth? Should it change if it takes me 5 seconds or 5 years to procure? Using labor theory to assign value makes no sense and is not a workable model for anything for anything other than justifying Marx&#x27;s own circular logic. reply greenie_beans 18 hours agorootparentthis is not what the labor theory of value is. i wrote my interpretation here: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37411772 reply kieselguhr_kid 17 hours agorootparentprevMarx discusses how skill (and factors like machinery, etc) factors into value in Capital vol 1. The idea isn&#x27;t that any labor on any endeavor creates value at a constant rate across all individuals and all time. reply Natsu 16 hours agorootparentMarx has some concept of \"socially necessary\" labor, but it doesn&#x27;t really make sense because it wants to treat skill as some kind of simple multiplier as if we can assume that a modern doctor&#x27;s labor is some simple multiple of a random medieval peasant&#x27;s labor in diagnosing an illness, which is just a silly and oversimplified model.Honestly it reminds me of like Marx&#x27;s non-rigorous \"eh whatever\" approach to dividing by zero in his mathematical work. While one can define division by zero in non-standard analysis, that involves some actual rigor in how your treat it according to your definitions, not just shrugging your shoulders and doing it. reply kieselguhr_kid 13 hours agorootparentWhat you&#x27;re getting at vis-a-vis highly skilled labor is known in Marxist economics as the labor reduction problem, and it&#x27;s complicated (enough so that I wouldn&#x27;t do it justice trying to elaborate the approaches in the time I have to respond). Marx died with it unsolved and it&#x27;s a matter of discussion to this day. But you&#x27;re conflating that problem with the concept of socially necessary labor, which is different and actually addresses the problem you posed (in Capital Vol 1, in the difficult early chapters). In order to produce value, the labor must be socially necessary, and the labor of any number of unskilled workers towards a highly complex problem (eg, treating a rare cancer) would not be socially necessary. It doesn&#x27;t even have to be that complex. I don&#x27;t have the skills necessary to make a wedding cake, and any attempt I make to do so would be so inept that it wouldn&#x27;t be socially necessary labor.Can&#x27;t speak to the division by zero, but it doesn&#x27;t come up in any of Marx important work. His mathematical manuscripts don&#x27;t have any significant relationship to his work on political economy. reply Natsu 11 hours agorootparentI mean, economics is a mathematical profession. It&#x27;s hard for me to take his storytelling about things like the freedom of hunter-gatherers and such seriously when I know he wasn&#x27;t rigorous in the things that are easier to check. Never mind the, err, implementation problems in basically every attempted revolution until somewhere around the point where the Nordic states found a way to subsidize it with resource extraction and found a voluntary version. reply kieselguhr_kid 10 hours agorootparentIt strikes me as incurious to dismiss an entire field of thought because there were errors in a mathematical manuscript, especially when you clearly don&#x27;t understand the fundamental concepts (I don&#x27;t mean this as a dig. You just haven&#x27;t learned them.). Marxism isn&#x27;t the writings of a long dead guy in England in 1860. It&#x27;s a living, breathing school of thought that&#x27;s evolved significantly since then. What you&#x27;re doing is akin to finding an error in Smith or Ricardo&#x27;s [edit: unpublished manuscripts, not completed work] work (of which there were many) and using those errors to dismiss all of orthodox economics.The revolutionary approaches have not succeeded thus far, granted. There is a branch of Marxism about revolution, but what we&#x27;re talking about here is a description of capitalism. Marxist revolutionary activities have nothing to do with how potent that analysis is. replylottin 11 hours agorootparentprevI spend a lot of time thinking about economics, and spend a lot of time surrounded by people who also spend a lot of time thinking about economics, being an economist. The labour theory of value, along with every other objective theory of value, was abandoned by economists more than 100 years ago, because it failed to explain how and why economic agents assign value to economic goods, which is what economists are interested in. reply zardo 17 hours agorootparentprevExchange value is only a measure of value. A theory of value is about explaining what makes value, not just measuring it. reply lottin 11 hours agorootparentIt&#x27;s the only way we have to measure value. And in order to test a theory of value at some point you&#x27;ll have to measure value. reply zardo 4 minutes agorootparent> It&#x27;s the only way we have to measure value.No it&#x27;s not. For one, it can only assign values to things which are actually exchanged. When you look at things on the scale of states, this isn&#x27;t always a possibility. You can&#x27;t put the ISS on craigslist and see what it sells for.ohgodplsno 19 hours agorootparentprev>You have to ignore 120 years of intellectual progress on economics to still want to apply labor theory of value to problems. There may be a day when we can achieve some semblance of a \"socialist\" mode of productionWhat an absolute load of crap. Economics as a whole is barely a science, at best a toy, and that multiple pathways exist is not an indictment of any theory. Marx&#x27;s observations hold true all these years after, alongside the progress we&#x27;ve had.You clowns would take a system as complex as, oh, simply the whole of human activity and try to reduce it to a few simple laws. Sorry, despite what you learned online, \"supply and demand\" is not a fundamental law of the universe. This is not physics. There are no simple answers. There aren&#x27;t even proper answers. Every school of economics holds on barely by a thread. \"Assuming a rational actor\" is the \"assume a spherical cow in a vacuum\" of liberal economics. reply mikrl 18 hours agorootparentEconomics itself is a reduction of human behaviour to resource allocation.The underlying field of study of human action in general is called praxeology and was only seriously investigated by:- Austrian school economists (1900s-present)- Polish school philosophers (briefly in the interwar period, died out after WW2 when Lwów became Lviv)I think wresting praxeology free of economics would be an interesting movement in philosophy. reply thiagoharry 17 hours agorootparentI do not agree with the upper comment that economy is not a science. It is just a human science, where you could have different schools of thought based on different philosophies. But praxeology is indeed an example of something that is not science, as it rejects the scientific method and the empirism. reply mikrl 2 hours agorootparentIf economics is a science, how do you run an experiment?Let’s say you want to see how phenomenon X scales as a function of population, and create a model X(p)How do you set up N identical scenarios and, ceteris paribus, vary the population? You cannot.Two separate nations are distinct systems. Setting up 2 identical factories next door, one with 100 staff and one with 1000 staff would be a monumental waste of effort, and what if the geographical separation, or airflow, or cloud cover, or… affected the experiment?Let’s say you run a single economic experiment. How do you reproduce it? How does your counterpart reproduce it? reply thiagoharry 22 minutes agorootparentYou do not create experiments. You create models that try to explain the world and check your model predictions and what happens in the world. When the two disagree, you update the model and try to explain what went wrong. As you cannot make experiments to check,",
    "originSummary": [
      "Albert Einstein advocates for socialism as a resolution to societal crises, emphasizing the importance of a supranational organization to mitigate potential conflict.",
      "He denotes a marked distinction between the social behavior of humans and animals, arguing that our present economic system promotes self-interest and disparity.",
      "Einstein suggests that socialism, combined with an education structure centered on social objectives, could address societal issues, although he does recognize its inherent challenges and emphasizes the significance of free and open discussion on these matters."
    ],
    "commentSummary": [
      "The discussion covers broad economic topics, namely socialism, capitalism, labor, and unemployment, touching on the challenges of implementing socialism and Marx's value theory.",
      "Dialogue includes the interaction between labor and capital, the effect of unemployment on capitalism, and critiques of varying economic systems.",
      "Additionally, the conversation acknowledges the inherent complexities within economic theories, the challenges of an effective value measurement system, and varying perspectives towards potential solutions."
    ],
    "points": 256,
    "commentCount": 572,
    "retryCount": 0,
    "time": 1694017262
  },
  {
    "id": 37408929,
    "title": "37signals Introduces \"Once\" - Buy software one time",
    "originLink": "https://once.com/",
    "originBody": "Something happened to business software. You used to pay for it once, install it, and run it. Whether on someone’s computer, or a server for everyone, it felt like you owned it. And you did. Today, most software is a service. Not owned, but rented. Buying it enters you into a perpetual landlord–tenant agreement. Every month you pay for essentially the same thing you had last month. And if you stop paying, the software stops working. Boom, you’re evicted. For nearly two decades, the SaaS model benefitted landlords handsomely. With routine prayers — and payers — to the Church of Recurring Revenue, valuations shot to the moon on the backs of businesses subscribed at luxury prices for commodity services they had little control over. Add up your SaaS subscriptions last year. You should own that shit by now. SaaS still makes sense for many products, but its grip will slip. Installation and administration used to be hopelessly complicated, but self–hosting tech is simpler now and vastly improved. Plus, IT departments are hungry to run their own IT again, tired of being subservient to Big Tech’s reign clouds. Once upon a time you owned what you paid for, you controlled what you depended on, and your privacy and security were your own business. We think it’s that time again. Introducing ONCE, a new line of software products from 37signals. Pay one time, own forever. We write the code, you get to see it. We give you the software, you get to host it. Simple and straightforward, not enterprisey and bloated. For one fixed price. Once. We’ll be launching the first product late 2023, with more coming in 2024. In the early 2000s, we were among the early pioneers leading the industry into the SaaS revolution. Now, 20 years later, we intend to help lead the way out. The post–SaaS era is just around the corner. Stay tuned. Jason Fried CEO, 37signals jason@37signals.com P.S. Be notified when we launch the first product. We’ll destroy the list after the announcement, and it won’t be used for anything else. → P.P.S. Thanks, we’ll let you know.",
    "commentLink": "https://news.ycombinator.com/item?id=37408929",
    "commentBody": "37signals Introduces \"Once\" - Buy software one timeHacker Newspastlogin37signals Introduces \"Once\" - Buy software one time (once.com) 240 points by pgm8705 22 hours ago| hidepastfavorite205 comments turnsout 21 hours agoMan, talk about a ship that has sailed. I was 100% anti-subscription pricing for a very long time. Eventually I realized, it&#x27;s better for the software vendor and the customer. Final Cut Pro used to cost $999 upfront, now a teenager can use Final Cut on their iPad for $7&#x2F;month, and subscribe only when they need it. reply Calavar 21 hours agoparentThat pricing sounds fair. Unfortunately, I feel that&#x27;s the exception. Adobe Dreamweaver CS6 was $400 [1]. Now Dreamweawer Creative Cloud is $250 per year [2]. So after 1.75 years, you&#x27;ve already taken a loss.[1] https:&#x2F;&#x2F;prodesigntools.com&#x2F;products&#x2F;adobe-cs6-pricing-list.h...[2] https:&#x2F;&#x2F;www.adobe.com&#x2F;creativecloud&#x2F;plans.html reply scarface_74 20 hours agorootparentAnd for that $400 you got to run on one computer.Office used to be $600 for one copy that could run on one operating system.I can now get an Office 365 subscription for $99 a year for five users and I can use it on my Mac, a Windows PC, iPad, iPhone and all five users get 1TB of storage each reply zamadatix 20 hours agorootparentOffice is also just cheaper, it&#x27;s 1&#x2F;4 the price for the lifetime license than it used to be. The family offering is still the best deal I&#x27;ve seen to get it though. Not all subscriptions allow multiple users or even you to use it at the same time on multiple devices though, Office is just pushing that sale. reply joe5150 20 hours agorootparentprevPlus the latest version of the software. I would still be using Office 2013 if I had to pay what I paid for it to upgrade every release (multiplied by the half a dozen or so O365 licenses I&#x27;m currently using.) reply cmeacham98 20 hours agorootparentprevI think Adobe&#x27;s pricing is ridiculous, but this is uncharitable:1. CS6 came out in 2012. According to the BLS calculator, $400 in 2012 is $532 today: https:&#x2F;&#x2F;data.bls.gov&#x2F;cgi-bin&#x2F;cpicalc.pl?cost1=400.00&year1=2...2. You&#x27;re cherry picking the worst one, do the math for CS6 After Effects at $999 (~$1.3k today) vs $21&#x2F;month and you only break even after >5 years. reply cableshaft 20 hours agorootparentStill possible to use CS6 today, it still works on Windows. So you would have definitely saved money by now if you still used it. reply core-utility 20 hours agorootparentprevWhat would be more interesting is to compare over 10 years for someone who buys upgrades (CS2->CS3->CS4 etc.) as they come out.Additionally the individual Dreamweaver price is very high compared to \"All Apps\" plan at $660 per year. reply znpy 20 hours agorootparent> What would be more interesting is to compare over 10 years for someone who buys upgrades (CS2->CS3->CS4 etc.) as they come out.but nobody does that, really.most people i know skip entire versions of windows (eg: 7->10), let a lone individual software releases. reply codetrotter 20 hours agorootparentHeck, even pirates sometimes skip versions.I remember installing and using pirated versions of Photoshop 6, and then Photoshop 7, and then Creative Suite 2.I bought an academic license for Creative Suite 4 Master Collection.Later I subscribed to Creative Cloud for a while. But I swore to not buy from Adobe again after that because that was actually a bad experience. reply hiq 20 hours agorootparentprevYou just reminded me that Windows 8 was a thing, I had to check https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Microsoft_Windows#Version_hist... to remember it. reply Gigachad 18 hours agorootparentprevWhich is why subscription software is better for everyone. Everyone is on the latest version. reply mrbadguy 18 hours agorootparentWhy does everyone have to be on the latest version? reply Gigachad 17 hours agorootparentThey don&#x27;t, It&#x27;s just a better result for the users who get newer and better software, and a better result for the sellers who only have to support one version and get a consistent cash flow. reply 112233 12 hours agorootparentBut what if it is newer and not better? Lightroom regularly breaks plugin compatibility, increases resource consumption and processing time, or simply stops working. If your workflow depends on software, that no longer works after a forced update, what are your options?There are people running ancient MacOS versions, because that allows them to keep using professional firewire audio interfaces they have.How would subscription model that breaks expensive hardware compatibility, breaks all your existing photo&#x2F;video projects (aperture&#x2F;final cut), or breaks compatibility with really expensive plugins needed for work be better for users? reply mrbadguy 7 hours agorootparentAgreed, frequently \"newer and better software\" simply isn&#x27;t and for something that you rely upon, such as audio processing software or image&#x2F;film editing tools, cannot be left to the whims of tech companies who have proved themselves over and over again to be unworthy custodians of these important tools. It&#x27;s better to get a hardware+software combination that works and then just use that forever without modifying it. It will always perform as well as it did on day one, it&#x27;s only pesky updates that make computers slower. reply smoldesu 17 hours agorootparentprevYou say that, but then stuff like OnePass and Dropbox decide to reneg their subscription services down-the-line or simply make their clients worse. A lot of the time, a subscription to a program gives the developer no incentive to iterate on what already exists. reply Gigachad 17 hours agorootparentAnd then you just drop them for a competitor. Since you have no sunk costs, you lose nothing by hopping to whatever the best option is other than a small amount of pain migrating, But for something like dropbox, there isn&#x27;t that much lock in. reply LoganDark 14 hours agorootparentWhat competitor?In most cases this is entirely unrealistic. reply Gigachad 13 hours agorootparentI&#x27;ve never heard of OnePass so I have no idea, but Dropbox is very easy to replace. I&#x27;m also not even sure how you&#x27;d expect a \"pay once\" model to work for cloud storage. reply LoganDark 13 hours agorootparentFor cloud storage a subscription model makes perfect sense, since the entire point is that you&#x27;re renting server space on an ongoing basis. What I don&#x27;t want to do is have to rent simple machine code that should be executable by my processor perfectly fine without any third party involved. Why should I have to rent Photoshop if it runs perfectly fine without internet access? I&#x27;m not renting server space from Adobe. It costs them nothing for me to run the software. They just want to charge me on an ongoing basis for no good reason.For a password manager KeePassXC is better than all proprietary offerings and it&#x27;s free and plenty of implementations are available on all major platforms. replydbg31415 20 hours agorootparentprevIt’s been along time since Adobe was that cheap. (=I don’t want to defend Adobe, but inflation is real.And they used to have upgrades that cost less money.I think this price is more or less what it used to be, the real advantages of that everyone’s just up-to-date all the time.I can’t imagine trying to support software on like 20 different versions, that would’ve been insanity for the support team.Keeping everyone on one version is probably the real cost savings money maker for Adobe here. =P reply commoner 21 hours agoparentprevThat&#x27;s not a fair comparison. Final Cut Pro&#x27;s price on macOS has been $299.99 since 2011, and Apple sells a \"Pro Apps Bundle for Education\" available to everyone that includes Final Cut Pro, Logic Pro, and other macOS apps for $199.99 (https:&#x2F;&#x2F;www.apple.com&#x2F;us-edu&#x2F;shop&#x2F;product&#x2F;BMGE2Z&#x2F;A&#x2F;pro-apps-...).I&#x27;m sure a lot of users would appreciate a one-time payment option for Final Cut Pro or Logic Pro on the iPad, including teenagers who have some money saved up. reply hatsune 20 hours agorootparentEspecially consider the need to update your software for NLE is highly selective. H.264 and H.265 were used over the years for LongGOP, while ProRes and DNxHD&#x2F;DNxHR were all supported a long time ago. There are no reasons to update unless you need latest blackmagic RAW or ProRes RAW, which are well beyond normal consumer realm. AV1 may be a new thing, but that&#x27;s it.There are no continuous vital features updates like being able to read newer camera RAW files for ACR. I find a one-time payment much more suitable for FCP.With LPX and anything remotely in music production area the subscription just seems dumb. Omnisphere, Komplete, FL Studio, Cubase, Pro Tools, Ableton Live were all in the realm for decades, and while subscription did became a thing (especially for very expensive samples like Hollywood, Spitfire, etc.) features in a DAW are sufficient for a long life cycle in production, and mandating a subscription for \"keeping latest\" just seems odd. reply crazygringo 20 hours agoparentprevExactly.If you used to need to use software for a weeklong project, you&#x27;d have to pirate it because there was no way to justify the cost.Now you just sign up for a month and then cancel.It&#x27;s a huge improvement in flexibility and paying for what you use. Not to mention the software is always updated, so you don&#x27;t need to worry about whether your image editor you purchased 7 years ago supports the RAW format of the camera that came out 2 years ago. reply nirvdrum 20 hours agorootparent> It&#x27;s a huge improvement in flexibility and paying for what you use. Not to mention the software is always updated, so you don&#x27;t need to worry about whether your image editor you purchased 7 years ago supports the RAW format of the camera that came out 2 years ago.I see this the other way. I don&#x27;t want to be forced to upgrade. If you add valuable features, I&#x27;ll pay for them. Otherwise, I&#x27;m happy to stick with what I have. Oftentimes the upgrades come with a new UX to learn, are slower, and remove functionality I relied on all to add new stuff I have no need for.I think JetBrains hits an interesting middle ground. I can run whatever version of the IDE I want (as far as I can tell) but pay to have access to the full suite. reply BXlnt2EachOther 19 hours agorootparentI&#x27;m not a huge fan of subscriptions but like the way JetBrains handled a few things:- if you&#x27;re subscribed for 12 months, you get a perpetual license for the version at the start of that period (unfortunately not the end, but better than most subscriptions)- fairly significant discounts for second and third+ years.- they had a price increase either 2022 that was in line or below inflation, which they announced it clearly three months in advance -- no \"beware of the leopard\" -- and gave users an opportunity to prepurchase three years at the old rates in advance. reply yjftsjthsd-h 20 hours agorootparentprev> Now you just sign up for a month and then cancel.Or you sign up and then Adobe does everything in its power to stop you from cancelling, including lying to your face: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=10930079 (https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20170324161306&#x2F;http:&#x2F;&#x2F;www.geek.c...). Just because subscriptions can work out well doesn&#x27;t mean they don&#x27;t get abused by companies. reply crazygringo 20 hours agorootparentI mean, that&#x27;s one customer service rep who was being difficult (not necessarily representative of Adobe policy at all), and the user was trying to cancel a yearly subscription on the 365th day when it was already being charged for autorenewal that day.That&#x27;s not even remotely representative of someone who signs up for a monthly subscription and then cancels it before the month is up. But yes, obviously you have to put it in your calendar to remember to cancel it. It&#x27;s not that hard. reply whelp_24 20 hours agorootparentThere are complaints all over the internet about this, it&#x27;s not particularly isolated. reply crazygringo 18 hours agorootparentThere are complaints about everything all over the internet.In my experience, I&#x27;ve never once had a problem cancelling SaaS. There will always be bad actors out there, and maybe Adobe has been one, and maybe they still are, but on the whole I haven&#x27;t found SaaS to be any worse than anything else.And it&#x27;s not really where the economic incentives lie -- someone who is cancelling is someone who is likely to sign up again in the future, so it&#x27;s generally not in a business&#x27;s best interests to piss them off. replynotpushkin 21 hours agoparentprevIf it&#x27;s an option – good. If it&#x27;s the only option – not so much. reply yieldcrv 21 hours agorootparentper seat (5 seat bundle) (annual pricing) reply eclipticplane 21 hours agorootparent(contact sales for pricing) reply kwanbix 21 hours agoparentprevThe problem is when it adds up: you pay for FCP, for Adobe, for Office, for Figma, for X... at the end, you are paying 200 dollars per month in software (without counting Netflix, Spotify, hosting, etc). reply core-utility 20 hours agorootparentThis is true of buy-once software too. You used to pay a significantly higher cost for FCP, Adobe, Office, etc...... reply turnsout 20 hours agorootparentAnd you would still be forced to upgrade every 2-3 years once people started to send you incompatible files! reply slig 20 hours agoparentprevI, for one, am very grateful for Adobe&#x27;s shitty subscription model, as it has allowed companies like Serif to launch fantastic products with perpetual licenses. reply ghusto 20 hours agorootparentWho to my dismay (though not surprise) have now also gone SaaS :(EDIT: I think I&#x27;ve misunderstood the V2 Universal License. Looks like it means I get access to all version 2 apps from Affinity. reply akira2501 20 hours agoparentprevSure, as long as Adobe doesn&#x27;t arbitrarily decide to permanently ban your account and no longer accept your money. Also, speaking of ships that have sailed, you could just as easily check out Final Cut Pro or Adobe subscriptions from some libraries for no additional fee. reply mrtksn 20 hours agoparentprevIt’s a no brainer, the vendor gets paid for the continued work they do and the user pays over time as long as they get value out of the product.However, For some apps it makes sense to have it as a one time payment - things like offline games or utilities the solve a problem and don’t need continuous updates.Other than that, subscriptions are the way to go because software is a service more than a final product. reply wlesieutre 20 hours agoparentprevBut that&#x27;s not how the subscription pricing goes. Final Cut Pro X was $299, not $999 so it&#x27;s not even a good example.One the other end of the spectrum are all the mobile apps that start as a $2.99 one time purchase, add a bunch of features, and say \"Actually it&#x27;ll be $11.99&#x2F;year forever thanks.\"When every app starts to do that it adds up fast. reply turnsout 20 hours agorootparentIt was $999 for many years, but has been $299 for over a decade now. But $299 might as well be $2999 for many people. reply badsectoracula 20 hours agoparentprevThat particular case feels better because the original price you mention was incredibly high, not because the model is better for the customer. Especially when more than 1 application does that. reply macintux 20 hours agoparentprevI have an iOS app that I love and rely upon, but it’s effectively abandonware because the developer didn’t charge enough. I too am pro-subscription: take my money, please. reply turnsout 20 hours agorootparentYes! I developed a paid (upfront) iOS app and had to abandon it because there was no way to fund further development. reply daft_pink 20 hours agoparentprevUntil you look at Intuit, you used to be able to buy their accounting software and have the critical records for your business. Now their accounting software requires an internet connection and a subscription and puts your critical records behind a paywall and gives them access to your data for whatever purpose they want. And they keep ratcheting up the price and putting more and more features behind higher tier subscriptions. reply znpy 20 hours agoparentprev15 years ago most teenagers i knew had the full office suite, photoshop and most other softwares for free. I&#x27;m not gonna tell you how, but it&#x27;s easy to imagine.Guess what, those people wouldn&#x27;t have paid for a license anyway, so no real license money is lost.More importantly, it needs to be said that if you got an older computer you could just use an older version of the software, no problem. Now you can&#x27;t do that anymore. You not only have to pay the 7$&#x2F;month, you also need to buy a new ipad every once in a while.I&#x27;m still anti subscription. I do pay for software (paid 150 euros out of my personal pocket last year for a SecureCRT license and i love it).But the whole subscription thing is just BS. reply giobox 20 hours agorootparentIts always been an open question to me in the case of Adobe if rampant piracy in the 2000s helped rather than hinder them. If these teenagers went on to work in industry, they already knew the adobe suite inside out and likely ended up advocating the software and buying licenses in the workplace... As you probably rightly state, almost none of the folks pirating the software would have converted to real sales anyway. reply znpy 17 hours agorootparent> Its always been an open question to me in the case of Adobe if rampant piracy in the 2000s helped rather than hinder them.it&#x27;s not an open question, there are studies about how piracy helps industries (it was about media, it was financed by the EU, but when they got the results they didn&#x27;t like it so they didn&#x27;t advertised it much).if not for product advocacy, consider product training: training is expensive and takes time, and most teenagers would do that themselves for free on your product. so if you&#x27;re a company and pick a product that&#x27;s heavily pirated, chances are some random applicant already knows the product.how do you think microsoft office got so widespread ? reply swores 20 hours agorootparentprev> paid 150 euros out of my personal pocket last year for a SecureCRT license and i love itI&#x27;m curious what makes SecureCRT better than PuTTY or even Windows Terminal enough to be worth paying for - am I missing out on some amazing experience, or does it have certain amazing features others lack, or...? reply znpy 17 hours agorootparenti like the fact that i can have a list of session at mouse reach. i like that i can do stuff like have sessions with different color schemes, or sessions that run a command on startup.i like the fact that it&#x27;s scriptable. at my previous job i had a python script (that i could recall from a button within securecrt) that would enumerate stuff off consul and create&#x2F;update sessions on the fly, with all the necessary hoops in place (eg: setting a jump host).i have to say, i also have some nostalgia of my first job where we used securecrt heavily (or maybe i&#x27;m just nostalgic about being 24 years old? i don&#x27;t know...). reply doublerabbit 21 hours agoparentprevMeanwhile, my mother uses photoshop and illustrator, she can&#x27;t afford the ever increasing price of subscription services. She&#x27;s in her 70&#x27;s.It a distraught for her to think of losing access to her creatively outlet if she was to unable to afford the current subscription model.Subscriptions should be followed up with a perpetual license. She&#x27;s just glad she forked out on CS2 when it was DVD based. reply methodical 20 hours agorootparentHave you ever looked at Affinity (https:&#x2F;&#x2F;affinity.serif.com&#x2F;en-us&#x2F;)? I bought their universal license a year or so ago and would definitely recommend it over Adobe for anybody who doesn&#x27;t necessarily need to use Adobe, it&#x27;s a lifetime license and the product is pretty comparable to Photoshop&#x2F;Illustrator for whatever a hobbyist could need. I would strongly recommend giving them a look if you haven&#x27;t already. reply mh- 20 hours agorootparentJust be aware: the workflow is entirely different for someone with a lot of Photoshop or Illustrator muscle memory. I couldn&#x27;t figure out how to do a lot of stuff without googling (and then frequently still). reply doublerabbit 20 hours agorootparentprevThanks for the recommendation, I&#x27;ve not.Although as lovely as it would be. Sadly me knowing my mother she&#x27;d tell me its wonderful, use it once and go back to her old ways and keep telling me otherwise.She has her system of plugging in her digital camera, scanner for her prints and then work for hours.When windows 11 decided to update itself on her machine, it really threw her in to a spin. Luckily she was within the Ten Day \"don&#x27;t like\" uninstall limit. That was my latest fiasco. reply LorenPechtel 20 hours agorootparentprevWhat I like are the models that are subscription for update. reply stanmancan 22 hours agoprevMy favourite licensing models for self-hosted software are perpetual fallback licenses. Jetbrains does this well and their description of it is: A perpetual fallback license is a license that allows you to use a specific version of software without an active subscription for it. The license also includes all bugfix updates, more specifically in X.Y.Z version all Z releases are included. reply lsaferite 21 hours agoparentMy gripe with the JetBrains license change is that the perpetual license is for a version that&#x27;s already 12 months old when they have an aggressive release schedule that put&#x27;s your perpetual license as a _large_ step backwards.I say this as a personal subscriber to the JetBrains Toolbox. I&#x27;m unhappy about the mechanics of the fallback license, but I also find utility in paying the subscription for right now (really the last few years). reply teruakohatu 20 hours agorootparentJust don&#x27;t update for 12 months then decide if the updates are worth another 12 months. Rinse, repeat.The fact that they do churn out lots of good updates is an argument for SaaS. reply agloe_dreams 21 hours agoparentprevThis is great until a company starts making file formats completely incompatible with back versions, making it impossible to use with friends or anyone else. Oh or when they just change the plan to subscription only anyways.I&#x27;m looking at you, Sketch. reply gkedzierski 20 hours agorootparentI KNEW you were talking about Sketch from the moment I read your first sentence. I have a hypothesis that Figma never would&#x27;ve become so big had they not screwed up so badly with their licensing and lack of seamless collaboration features. reply ics 20 hours agorootparentThe only reason I started using Figma was because of how annoyed I was at the Sketch licensing as a paying customer. reply jessym 20 hours agorootparentprevIs Sketch subscription only? I had it on my list to purchase because I thought they offered a perpetual license.But you&#x27;re right, now that I&#x27;m reading the FAQ on their pricing page, I&#x27;m finding it really confusing:\"\"\"Q: Is Sketch only available as a subscription?A: No. You can still get a Mac-only license for $120 yearly [sic] if you don’t need the web app and only want to use the Mac app to design. (...)\"\"\"Their answer seems rather contradictory. Does anybody know whether they offer perpetual licenses or not? Or know of a competitor who does? reply weaksauce 20 hours agorootparentprevcough solidworks reply stefandesu 10 hours agoparentprevEven better is the licensing model where you can keep using the version as-is after the subscription ends. You just don&#x27;t get any new features. It&#x27;s even possible to do on iOS, as Working Copy [0] is doing it. (You also get all the bug fixes and stuff, only new features are behind a flag that requires you to purchase another year of updates. I would also argue that Working Copy specifically is too cheap, but I guess it&#x27;s working for them.)[0]: https:&#x2F;&#x2F;workingcopyapp.com reply 0xbeefcab 20 hours agoparentprevThis is what Binary Ninja (Reverse Eng. tool) does, and why its a community favorite. https:&#x2F;&#x2F;binary.ninja&#x2F;faq&#x2F;#subscription. However it seems they don&#x27;t keep download links public, but my old license&#x2F;dl link from my email still seems to work. reply Detrytus 21 hours agoparentprevI would rather have them offer a full purchase option, with, say, 10 years of upgrades included. I could pay 750 EUR for it once, and be set for the rest of my career, basically, instead of having to deal with purchases every year. reply codetrotter 20 hours agorootparentI paid JetBrains for a subscription that will last 3 years, so that I won’t have to renew it again in a good while.I bought that subscription in September 2022, after having paid monthly for a long while.Now I won’t have to think about renewing the subscription again until September 2025. reply badsectoracula 20 hours agoparentprevMy problem with Jetbrains&#x27; software is that it comes with DRM so, sure, i can buy their thing once but i&#x27;m still reliant on them regardless. It isn&#x27;t like i can pay them once and forget about their existence afterwards. reply daitangio 21 hours agoparentprevI agree. It helps customer to renew yearly license or to do it only when really needed. reply dang 20 hours agoprev> We’ll be launching the first product late 2023, with more coming in 2024.Looks like this is an announcement of an announcement. Those are off topic on HN.https:&#x2F;&#x2F;hn.algolia.com&#x2F;?dateRange=all&page=0&prefix=true&sor... reply pelagicAustral 21 hours agoprevSounds good, but I mean, it&#x27;s just pros and cons with the SaaS model, or with the pay-once...Before SaaS there used to be a massive pool of native apps, doing all kinds of different things... You indeed paid your license and lived with the product until the next major version, but there was little chance to just use something for a month or two, so the prices were higher.With SaaS you do end up renting stuff all over the place, and never owning anything, but the prices are more affordable... Think about an AutoCAD license, that shit is privative for a hobbyist... With SaaS you can in fact afford something to begin with. reply eldaisfish 21 hours agoparentThis doesn’t address a major gripe with the subscription model - taking away the option to purchase software outright. Were both to exist, we would not be having this discussion.In reality, corporations are driven by greed and greed pushed the subscription model. For some situations, subscriptions work well - music is one. For others, it is terrible. CAD software is a great example especially at larger orgs. Why should software be a recurring cost in the name of development and support? reply crazygringo 20 hours agorootparent> CAD software is a great example especially at larger orgs. Why should software be a recurring cost in the name of development and support?But it always has been. Every larger org has always wound up purchasing upgrades. Not only for new features, but because professional tools often include all sorts of interoperability plugins and you need the upgraded ones to interact with other newer third-party products.Maybe an individual hobbyist can get away with not upgrading, but upgrades have always been just a recurring cost for larger orgs. reply registeredcorn 21 hours agorootparentprevI agree with the majority of what you wrote, but I&#x27;m utterly confused by this statement> For some situations, subscriptions work well - music is one.I&#x27;ve only ever purchased albums. Why in the world would I pay a monthly fee for something I presumably want to listen for for the rest of my life? 10-15$ for a one time purchase is far preferable to a monthly fee of nearly the same. I&#x27;m also weary of the idea of the services that have the right to stream music from labels X, Y, and Z suddenly pulling out, cutting off my access to the albums from artists I want to listen to at any given time.I hope none of that comes off sounding \"snobby\" or whatever, I just don&#x27;t understand how subscribing to listen to music is adventitious. Is it just not having to transfer music from the computer to your devices? Or is there something deeper I&#x27;m not getting? reply wan23 20 hours agorootparentWhen you have a subscription to music, it&#x27;s not about your collection as much as it is about discovery. You hear about a new artist and you want to sample their stuff. You don&#x27;t have to hunt it down - you know where to find and listen to their entire discography in exactly two clicks (not counting having to type in the name of the band). If you decide you like it, nothing is stopping you from buying an album for your collection if that&#x27;s your thing. Also, instead of your budget of one $10-$15 purchase per month, you can do this process multiple times a day. reply mgkimsal 20 hours agorootparentprevI used to own a lot of albums and CDs. Worked in a music store, and would get new albums often. Even after that, music was... a big part of life. As I got older, I got fewer albums, as other things took precedence.I subscribed to Spotify about 7 years ago, and... I&#x27;m spending about what I might otherwise spend on &#x27;albums&#x27; now (maybe one per month) and I get a lot more - back catalogs, for one. But discovery and sampling are the biggest &#x27;wins&#x27; for me. Might switch to apple music at some point, but probably 95% of what I want is now streaming, and the utility&#x2F;affordability balance is fine for me.Was cleaning out a room last night and found a couple boxes of old CDs and tapes. In that box of 50+cds, there were 3 I know aren&#x27;t on any streaming service, as they were special &#x27;bonus&#x27; things in specific box sets from the 90s. And I still have them, just nothing outside my car to listen to them on. And given that I haven&#x27;t opened that box in 15 years... my life has been OK without using those specific CDs.I really enjoy being able to find other versions of the same song, exploring some new genres that I would never have bothered to spend $12-$15 on otherwise, and finding some new artists (found Real Estate, which then led to all the &#x27;related&#x27; artists, and they&#x27;re all now part of my music life). Family or friends recommend some new band, I can take a listen in a few seconds, add it to a list if I want, and usually find something I like about many artists. reply voz_ 21 hours agorootparentprevSpotify is, let’s say, $120 a year. After 10 years, let’s say $1200. If an album has 5 songs, and an album costs $12.00 (dunno, middle of your range plus easy math), you can buy 100 albums in that time. 500 songs.After 500 songs for 10 years, your model costs more and offers no value (in fact, it’s less convenient for a dozen reasons)I don’t know about you, but I listen to way more than 500 songs… a year. Let alone a decade. reply sanitycheck 20 hours agorootparentExcept with Spotify the songs can go away, so it&#x27;s not necessarily equivalent - you don&#x27;t get access to the same music as long as you&#x27;re subscribed, you get access to whatever Spotify is currently serving up.I was an early Spotify user and that annoyed me enough to stop and go back to buying music instead.BTW, albums usually have more than 5 songs. reply voz_ 20 hours agorootparentI&#x27;ve never had a song I like go away, is this a real issue? reply sanitycheck 8 hours agorootparentAre you sure? If you&#x27;ve got playlists you haven&#x27;t touched for a few years, take a look and you may discover they&#x27;re shorter than you remember.Maybe they&#x27;ve improved in recent years, and maybe it depends on the music&#x2F;artists involved. reply k3lsi3r 20 hours agorootparentprevNot OP but I agree with his sentiment. Maybe I&#x27;m not as \"into music\" as some people, but I do like finding new artists and songs, though probably only to the tune of 1-5 new artists a year and I buy on average about 5 new albums a year.It&#x27;s cheaper and better for me to own the stuff I want to listen to than sign up for a subscription in perpetuity. reply registeredcorn 20 hours agorootparentprevThat&#x27;s fair. Hmm...maybe it&#x27;s my listening habits, then?For myself, when I listen to music, I insist on listening to it start to finish, in the order it was recorded. I hate skipping around. I find it distracting and frustrating. If I start listening to an album, I am \"locked in\" to finishing it.Most albums I own are closer to 12 songs per album, with each song being in the 2-5 minute range, that makes listening somewhere around 24-60 minutes of solid music.When I find an artist I like, I generally start to buy the other work that they&#x27;ve made, and will queue up their newer and older work together, too.I will usually queue something like: new album, old album 1, old album 2, old album 3, translating close to a few solid hours of music. By the end of it, my ears will be pretty exhausted and I&#x27;ll either continue in silence, or switch to an audiobook or YouTube video.I might have a dramatically small collection of music that I listen to compared to other people, because of how I listen. I can essentially repeatedly listen to the same songs many times, but because there&#x27;s a lot of stuff in-between it still feels new because I haven&#x27;t fully memorized each note yet. reply pb7 21 hours agorootparentprevFunny that you talk about greed when one of the reasons everything went the way of subscriptions is because of piracy. Even here and today, people defend pirating movies when you can rent one for a few bucks in 4K HDR with Dolby.Nothing but greed by people making top 1%-10%ile incomes. reply sosodev 20 hours agorootparentI get pretty annoyed paying $4 to rent a movie that was released 40 years ago. It used to be that I could pay $4 to own a copy of that movie I picked up out of the bargain bin.I still pay it though because I prefer to support companies that at least make their media available. reply gremlinsinc 19 hours agorootparentor you&#x27;d pay $4 for new releases, $1.88 for older movies. We&#x27;d maybe rent a new release if it was a really good one or wait 6 to 8 months.I honestly kind of miss those days, I mean I love Netflix and chill like the next guy, usually without the chill cause we have toddlers and no energy, but it was like an event.My aunt or grandma would be like hey let&#x27;s get a movie and I&#x27;d be like yay! it&#x27;s a blockbuster night! We&#x27;d often get cassanos pizza and&#x2F;or popcorn and treats and watch the main movie, and the cheap ones the next day.I kinda miss libraries too, but no clue how any programmer could work without Google, and six months in maybe gpt4, etc... reply amatecha 20 hours agorootparentprevNo, the invention of subscription models is not because of piracy. It&#x27;s because you can keep extracting money from customers \"forever\", rather than just once, and continue funding your business instead of having large gaps of reduced revenue when a product has not been recently released. A moment of consideration easily reveals that SaaS was inevitable with cheap hosting&#x2F;networking and readily-available worldwide payment processors.Sources which are speaking solely about the increase in revenue (and related benefits) and not a peep about piracy:https:&#x2F;&#x2F;hbr.org&#x2F;2023&#x2F;04&#x2F;the-rebirth-of-software-as-a-servicehttps:&#x2F;&#x2F;bebusinessed.com&#x2F;history&#x2F;the-history-of-saas&#x2F;https:&#x2F;&#x2F;smartbear.com&#x2F;blog&#x2F;the-pre-history-of-software-as-a-...https:&#x2F;&#x2F;www.bigcommerce.com&#x2F;blog&#x2F;history-of-saas&#x2F; reply pb7 20 hours agorootparentTwo things can be true at once. Piracy was a huge contributor to adoption of subscription based models. reply amatecha 20 hours agorootparentHow do you know? My experiences and knowledge of the subject indicate otherwise. I&#x27;m not convinced. (btw, the burden of proof is on the person making the claim of the existence of something, as one cannot prove that something doesn&#x27;t exist) replysemireg 20 hours agoprevI’m 40 years old and generally hate subscriptions for desktop software. Local tools that work offline should be “ownable” in the licensed sense.When I built my indie app “Label LIVE” it was designed to work offline and be paid for ONCE. After a few years there was enough user demand for a less expensive subscription-based license. Today, about 20% of customers purchase the subscription and the rest buy one-time licenses.Why would someone buy the subscription? Here are some good reasons: 1) seasonal need, 2) monthly price is small enough for company credit card without manager approval, 3) extend the 14 day trial without larger commitment, 4) can’t afford one time license due to cash flow.Another unintended benefit to me (as a solo developer) is the inexpensive monthly license lowers the demand for pirating and cracking. That’s a nice plus, because it makes the app accessible to all. reply mercwear 21 hours agoprevPretty vague announcement, I find it hard to believe 37 signals will stray too far from the SaaS cash cow they arguably helped to create with basecamp.. reply cpach 21 hours agoparentOTOH, the founders probably have enough cash now that they can comfortably launch side-projects that doesn’t require subscriptions. reply tough 21 hours agorootparentRight? That they pinoeered the current meta should be more indicative that they are ready to move from it than stay on it forever.Good for them I guess, I do hope we see more custom artisan software out there and less VC SaaS milkcows reply gkedzierski 20 hours agorootparentHow much of that is just \"contrarian as a marketing tactic\"? reply mercwear 20 hours agorootparentIMHO, all of it. The real winner is whoever they bought \"Once.com\" from, good for that person =) reply tough 20 hours agorootparentSadly it works and here we&#x27;re talking about it.But yeah I agree reply forbiddenvoid 20 hours agorootparentprevIt&#x27;s exactly that. Jason and DHH have built their entire personal brands on contrarianism. It works for them, but at a certain point it feels inauthentic. reply mercwear 19 hours agorootparentIt&#x27;s 100% not authentic. I have worked directly with one of the two you mentioned and it was an awful experience. The way they treated people around them (both people they knew personally and people at the company I worked with them at) was awful. Based on my experience with them I have never used another 37 signals product. replybenhurmarcel 20 hours agoparentprevYes it feels a bit ironic coming from a pure SaaS company (Basecamp and Hey). reply jawns 20 hours agoprev> Add up your SaaS subscriptions last year. You should own that shit by now.I know a lot of companies are adopting a more irreverent marketing approach, using words that 20 years ago would have been bleeped out.The swear word itself does not offend me. But to me its use here suggests a lack of restraint, and that makes me form a negative opinion about how the business is managed, especially when the words are coming straight from the CEO.Purchasing the domain Once.com alone was likely a large investment, and so I would expect this announcement to be more polished. Yet this copy reads more like a blogger&#x27;s grumpy manifesto. reply badsectoracula 20 hours agoparentOn the other hand, i liked that part. Hell, the fact that it was straight and on topic made me read it, otherwise i&#x27;d ignore it - after all it is an announcement for a bunch of products they&#x27;ll make.These \"polished\" announcements you mention tend to be generic borefests that use a bunch of words meaning nothing and feel like some basic AI could write them. Often accompanied with a bunch of generic humans smiling on the camera or doing \"work\" by pointing&#x2F;touching their devices. On a site with a white background and a couple inoffensive colors. You know exactly what style i refer to, there have been 283923 of them and i&#x27;m sure there are as many site templates for them in pretty much every sort of technology to make sites out there. reply Nextgrid 20 hours agoparentprevI think the usage of the swear word is to explicitly differentiate themselves from all the spineless companies that can&#x27;t do that, potentially due to a bullshit \"growth & engagement\"&#x2F;advertising-based business model. I like it. reply CharlesW 20 hours agoparentprev> But to me its use here suggests a lack of restraint, and that makes me form a negative opinion about how the business is managed…If you dig a bit more, the use of the word \"shit\" may fall lower on your list of things that give you a negative opinion about how the business is managed.https:&#x2F;&#x2F;www.theverge.com&#x2F;2021&#x2F;5&#x2F;3&#x2F;22418208&#x2F;basecamp-all-hand... reply TX81Z 20 hours agoparentprevI mean, they lost a good percentage of their top engineers a couple years back because leadership had a pretty serious communications issue with their employees. So not exactly surprised. reply dingnuts 19 hours agoparentprevmeh, \"shit\" isn&#x27;t even profane anymore https:&#x2F;&#x2F;www.nytimes.com&#x2F;2021&#x2F;05&#x2F;04&#x2F;books&#x2F;review&#x2F;nine-nasty-w... reply mrcwinn 20 hours agoprevTypical of 37Signals: self-importance presented as courage.\"IT departments are hungry to run their own IT again.\" Really, are they now? I can&#x27;t imagine anything scarier: an organization that is ostensibly shy to spend on Big Tech&#x27;s cloud bills, somehow also has the bandwidth and resources to support and maintain someone else&#x27;s software.This is just silly. Is there a way to personalize HN&#x27;s algorithm to hide marketing ploys? reply nickjj 3 hours agoparentI don&#x27;t think it&#x27;s that bad?I&#x27;m not in IT directly but as someone who mostly does infra &#x2F; SRE &#x2F; platform &#x2F; ops type of stuff I&#x27;d much rather run certain types of tools internally.For example, I&#x27;d rather pay $6 a month to self host WireGuard on a low powered server than pay 10-30x that for other SAAS apps in that space. Pop in Debian, lock the server down and turn on nightly unattended-upgrades and it&#x27;s basically hands free maintenance.I&#x27;ve had servers run for 8 years in this way where I spent a total of ~3 hours on assorted maintenance for the lifetime of the box. reply stefandesu 10 hours agoprevThe issue of subscription apps came up a lot in recent months on ATP [0] regarding Casey&#x27;s new app Callsheet [1]. They&#x27;ve been arguing heavily FOR the use of subscriptions, and I came around to agreeing with them. The part that especially convinced me is that subscription revenue creates an incentive for the developer(s) to keep working on the app, in particular after the big wave of launch sales is gone. (You could argue that a lot of apps don&#x27;t necessarily need new features, but I feel like especially on macOS and iOS, you want the app developers to check if their app still works properly on the new major releases, and issue fixes if something breaks.)The very important thing is the cost of the subscription though. It needs to be reasonable. I&#x27;m fine with paying a subscription even for a small app as long as it&#x27;s a low yearly price (like 5-10$). I feel like that&#x27;s the bigger issue with subscription apps nowadays - the prices are often unreasonable considering the type of app, and they end up charging 3-6$ A MONTH for apps that should be at most 1-2$ a month.[0]: https:&#x2F;&#x2F;atp.fm [1]: https:&#x2F;&#x2F;www.caseyliss.com&#x2F;2023&#x2F;8&#x2F;7&#x2F;callsheet reply tomaskafka 3 hours agoparentApp Store is a graveyard of great kid apps and games, that are no longer available after their authors found out that the $3.99 one time payment doesn&#x27;t even pay for developer account fees after a few years. reply joshstrange 17 hours agoprevI’ve fully flipped the bozo bit on 37Signals. They just keep smelling their own farts. Their attitude is incredibly off putting and while it’s been many years since I last used their software I found it lackluster.Subscriptions are preferable for 90% of the software I use. I’d rather pay a lower upfront cost and be able to cancel whenever I want. If it’s for business I rarely want to self-host at my scale and I self-host a ton of little things locally (open source). If I’m already paying I’d rather have someone else maintain it for me. reply gwbas1c 21 hours agoprevLet&#x27;s go back to wax cylinders, horses & buggies, and the old crank phone while we&#x27;re at it!Jokes aside: What kind of new features and tangible improvements are coming?I get that \"owning\" a piece of software can have tangible value; but it depends on the purpose of the software and how it&#x27;s used. I don&#x27;t see a sudden revolution where all companies decide they want to run their own email servers and and host their own copies of Office 365. Instead, there needs to be use cases where the old-style purchase model and host-it-yourself model makes sense.And these use cases are...? reply markstos 21 hours agoparentYou do GIS projects infrequently as a hobby. Simple stuff. You want own some GIS software. Subscription is burdensome due to infrequent use and you don’t care about next year’s features. reply tomaskafka 3 hours agorootparentTake a look at Slopes app&#x27;s season pass. Use it 15 days per year? Buy a pass. Need it everyday? A subscription will be much cheaper per day of use. reply TimTheTinker 20 hours agorootparentprevMaybe just download QGIS? reply grvdrm 16 hours agorootparentAnother way: just write some R, Python, etc. - plenty of GIS there too. reply gremlinsinc 20 hours agoparentprevthe only good ones I can think of are ai related to own the data, and privacy, but the compute and tech needed, you&#x27;d be better to just have the whole system in a black box like old school cable tv receivers, with a rack of a100s, software that can receive firmware updates etc, but probably isn&#x27;t that extendable. reply araneida 20 hours agoprev> In the early 2000s, we were among the early pioneers leading the industry into the SaaS revolution. Now, 20 years later, we intend to help lead the way out. The post–SaaS era is just around the corner.Perhaps I am wrong but was SaaS really a revolution? Perhaps for us mortals but in enterprise wasn&#x27;t a common model during the mainframe era?I share this feeling that our industry is constantly rehashing the same concepts over and over...but kudos to people that can monetize on that. reply northerdome 21 hours agoprevThey didn&#x27;t actually launch anything though. And self-hosting is also a real pain. There can be reasons but I seriously doubt many IT departments yearn deeply for the on-premise deployment days of yore. reply alfalfasprout 21 hours agoparentThis. People seem to forget that employee time costs $$$$. You take on a lot more operational burden and that has a real cost attached to it and in organizations of all sizes that makes the calculus interesting. reply irrational 20 hours agoprevI realized recently that I used to buy iOS apps a lot, but then they started moving to a subscription model and I stopped buying them. It has been years since I last purchased an app on my phone. I am willing to pay once forever for an app, I am not willing to enter into an recurring payment model (whether monthly, yearly, or anything else). reply joshstrange 16 hours agoparentThen you are only shooting yourself in the foot. I’ve watched too many pay-once iOS slowly break over time as new OS updates come out. It’s a mix of the UI looking dated, features not working correctly, or just missing features I’d expect (widgets, Siri support, etc).The only way to make it work is have a subscription and I’m incredibly happy with a number of my subscription apps like Drafts, Carrot Weather, Infuse, Widgetsmith, Infuse, Call Sheet, and Day One. These apps are not expensive at all ($10-35&#x2F;yr) and I can cancel at anytime if they start to drop the ball.Apps like Prompt&#x2F;Prompt 2 were great when they launched then slowly atrophied over time and required a new version which was annoying.I’ll agree some subs are ridiculously priced but I just avoid those. reply neerajdotname2 4 hours agoprevI think the subscription model is fine. What&#x27;s not fine is the cost of subscription software. With so much competition in the market the price should go down but unfortunately so far that has not been the case. We at neeto from get go are going for a low price. https:&#x2F;&#x2F;blog.neeto.com&#x2F;p&#x2F;neetocal-a-calendly-alternative-is reply tomaskafka 3 hours agoparentExactly! It seems that it&#x27;s $10+&#x2F;mo or nothing for everything. Slack, Figma, Netflix, whatever.I definitely want a genre of $1-3&#x2F;mo apps to exist, and am doing what I can with https:&#x2F;&#x2F;weathergraph.app. reply msy 21 hours agoprevWhile IT depts might be keen to put the genie back in the bottle they may find their ‘clients’ are less keen on waiting months to years for their needs to be met. AWS sold as an insurgent into many organisations precisely because it meant you could stand up a service in minutes, not quarters. reply api 21 hours agoparentA gigantic reason for the move to cloud and SaaS is to get around moribund non-responsive \"no, you can&#x27;t do that\" IT departments. reply pleoxy 14 hours agorootparentUntil the shadow IT that is unmanaged cloud freedom results in the finance and&#x2F;or policy dept instituting the governance controls again. reply drewda 20 hours agoprevSince 37signals has been having challenges hosting SaaS and hiring for dev&#x2F;ops roles, it naturally makes sense that they&#x27;d be looking to shift that operational burden to their customers :)I&#x27;m being extra snarky. But I must admit that I&#x27;ve grown a lot more skeptical of this company in recent years.Their marketing about their products as well as about their open-source components has too much bravado.They can&#x27;t just say that administering their own Kubernetes control planes and network stacks feels like more trouble than its worth for a smallish organization like their own -- they have to announce that the status quo is wrong and their new solution is right.HTML-over-the-wire makes sense for some use-cases and not for others, but according to 37signals there are exactly zero situations where it makes sense to transport JSON or PB between a back-end and a front-end.It&#x27;s been a few years since I evaluated Basecamp for my employer — at the time, the functionality was fine, but limited compared to other options for project management on the market and included some very opinionated portions that couldn&#x27;t be customized. Integrations and client apps were also more limited compared to other options. It was the same story back when they offered Highrise CRM. Nothing wrong with their software, but there&#x27;s a reason that larger players are able to satisfy a wider range of customers for business productivity and project planning software.I was excited to try Hey, and found it similarly opinionated and underwhelming in terms of actual functionality. Maybe this has changed in the meantime, but I didn&#x27;t see enough movement in the product at the time to want to commit to using it personally.And while others can interpret their leadership team&#x27;s management decisions however they wish, what I saw was them needlessly alienating some key long-term staff members and contributors to their open-source components. What a waste of talent and good will.All this to say that I don&#x27;t doubt that some of 37signals&#x27;s products and some of their open-source components are indeed useful and valuable to some folks and some use-cases. At the same time, their approach to self-promotion and marketing has just started to leave an off taste in my own mouth, making me skeptical of a substance-free announcement like this. reply satvikpendem 21 hours agoprevConsumers often talk about one-time payments but balk at the prices that are required to have them while also being able to have the devs pay for their expenses. For example, look at this recent r&#x2F;apple thread [0], the dev made the perpetual license 2.5x the annual license, which makes sense from a ARPU perspective, but people don&#x27;t want to pay 70 dollars, even though tools like YouNeedABudget are more expensive.The psychological impact of one-time purchases cannot be removed from the decision and that is also likely why SaaS is so enticing, the prices are much lower in the short term, but can be higher in the long term, just like getting a loan vs paying in full would be.[0] https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;apple&#x2F;comments&#x2F;168shog&#x2F;after_almost... reply satvikpendem 20 hours agoparentI will also add this excellent breakdown of why pricing SaaS is the way it is, by the OrbStack FAQ page and their section on their business model [0]:Look, we get it: subscriptions suck. We don&#x27;t like them either. But we think that subscriptions are the best way to align our incentives with yours, and we want to be transparent about it. If we&#x27;re not living up to your expectations, then you can cancel.We also plan to introduce online services to simplify developer workflows, which would not be sustainable to run without subscriptions.Lifetime licenses are unsustainable. OrbStack&#x27;s components need continuous updates: compatibility with new macOS versions, Linux kernel, and other assorted pieces, as well as new features to stay competitive.Major version upgrades incentive us to withhold features for months when they would otherwise be released much faster; we&#x27;d rather deliver gradual improvements so you get continuous value. Also, major upgrades have a high risk of introducing breaking changes, bugs, and other issues due to a lack of gradual testing.1-year updates + fallback perpetual: More or less a yearly subscription in disguise? Just cancel if you don’t want to keep paying. JetBrains does a hybrid of this + subscription — not entirely opposed to it, but it shares a lot of these issues (e.g. incentivizes slower feature development). Realistically, would anyone revert to a year-old version and stay on it forever?It&#x27;s a hard problem.[0] https:&#x2F;&#x2F;docs.orbstack.dev&#x2F;faq#free reply gizmo 21 hours agoprev> We give you the software, you get to host it.People can&#x27;t host their own software. The handful of people who can host software won&#x27;t install security updates or deal with backups. It&#x27;s a drag. It makes no sense for millions of people to individually manage servers and server updates when it can be done centrally for a fraction of the cost. That&#x27;s why SaaS won, ultimately.I don&#x27;t believe for a second 37signals is going to make desktop apps that you just install to your machine. These will be dockerized web apps with many fragile dependencies. This is a step backwards, frankly. If you want to make buy-once-zero-maintenance software the client software should automatically join a fully distributed peer-to-peer network. The alternative is for 37signals to offer the digital service part at cost. reply tetek 20 hours agoparentsounds like perfect place for a middle man, who will buy, host and charge subscription to the end user :) reply TechRemarker 20 hours agoprevDo you only get updates once? Since they even have to provide updates forever for free, which is unstainable, or provide no updates and then your software is aging from day one, and eventually won&#x27;t even run on modern infrastructure and now teams have a to hire people with more unknown costs to handle all that vs a set monthly fee, or they have to charge for occasional updates in which case it&#x27;s essentially a self hosted subscription. So unless they have some how solved those problems, not sure of any future for this, other than for some enterprise that already buys once and rarely ever updates and is okay with those downsides for the sake of what they believe to be better security. reply mtriassi 20 hours agoprevAs the kind of person that loves running a home lab this really appeals to me. That said, there&#x27;s a take away here that&#x27;s easy to miss, imho, and that&#x27;s that the pricing for a piece of software needs to make sense.The real issue with SaaS is the blanket \"$5&#x2F;user&#x2F;month\" pricing scheme, if you ask me. If using your service means each call is some heavy GPU computation, fine, charge me that cost + profit margin &#x2F; markup, ie: usage based billing.If a consumer device can handily do all the processing for your software though, yeah just sell a perpetual licence of some kind, and charge for new major versions. reply wiremine 21 hours agoprevI&#x27;ll give the 37signal guys the benefit of the doubt, but it&#x27;s a difficult concept to talk about in the abstract.Once the first product shifts, this might be a more meaningful discussion. reply drew-y 20 hours agoprevWill this software come with perpetual maintenance updates? For how long? Do I get any new features for free? If not, is it really pay \"once\"?Software is never \"done\". Developers need to be actively involved throughout the lifecycle of a software product. Which, to me, makes this sort of model unsustainable. I&#x27;d rather know that software I rely on won&#x27;t be abandoned once the base of new customers drys up. And I don&#x27;t mind paying for that. reply imoreno 20 hours agoparentWhen buying software like this your perspective should really be \"WYSIWYG\". You should assume support ends completely tomorrow, and any patches you do get are a windfall.That means key considerations for every purchase are:* How easy would it be to migrate from it to something else? * How easy would it be for someone else to develop compatible extensions and drop in replacements? * How easy would it be to troubleshoot and patch it yourself?Perfectly bug free software is of course difficult. But reasonable level of polish is very doable. It used to be the norm for decades, and they didn&#x27;t even pay devs as much as now. Modern subscription software does not have fewer bugs than traditional waterfall software. reply pgm8705 21 hours agoprevI wonder if they&#x27;re going to offer Basecamp with this model, and if so, how much is that going to cost? I imagine it would have to be in the thousands. reply dejv 21 hours agoparentI feel like this is going to be something closer to Tada list than Basecamp. reply joshmn 21 hours agorootparentHighrise also comes to mind. reply dejv 20 hours agorootparentWell, purpose of Tada list was to act as a funnel to Basecamp: they took part of the functionality and when you needed more you check the Basecamp. I think they are going to with this strategy again: limited subset of Basecamp and when you need, say, mobile app or more features you know where to go. reply stevenicr 21 hours agoparentprevis the imagine including the hosting? I could see that, and even higher if storage space got into the terabytes.I myself could see 3-$500 and self host on my own hardware &#x2F; vps - with options to pay for future upgrades that include new features if wanted.I like basecamp, and would consider buying in that way, but there is more and more competition in the space that makes others attractive, and with the speed of changes with the others paying 24 months of service in advance doesn&#x27;t make as much sense at it would in a smaller space. For me anyway. reply mikl 20 hours agoprevSo they’re announcing that they plan to announce software with old school licenses. I guess that’s neat, but why bother with the meta-announcement? reply lylo 7 hours agoparentBecause it&#x27;s fun. And good marketing :) reply imoreno 20 hours agoprevBuying software doesn&#x27;t just cost money, it also has an opportunity cost. The software could become obsolete before you get the value you paid for. These days software advances rapidly so the opportunity cost is severe. When the (perceived) pace of advancement slows down, we should see a return to one-time purchases.It&#x27;s not just a matter of $x&#x2F;month * y months > $z one time payment. It&#x27;s actually that y is impossible to estimate so people prefer $x&#x2F;month.That&#x27;s the rational buyers. Then there&#x27;s the irrational. Some people get memed into paying $70 for a budget tracker app (lol) because \"but you&#x27;ll never have to pay a subscription!\". Other people get memed into paying $5&#x2F;mo because \"it&#x27;s the price of a coffee!\". So I guess the opportunity cost argument is not even relevant so long as there&#x27;s a market of grifting uninformed consumers with inflated prices and astronomic profit margins. reply tailspin2019 20 hours agoprevSaaS is an entirely appropriate, and often preferable model, but in the right context.The context being that you want a service to be provided to you, with no infrastructure&#x2F;support overhead, with regular updates, and you want the company providing it to be commercially viable so that the relationship can be ongoing and symbiotic.And if you&#x27;re a company buying software, rather than an individual, then all of the above becomes even more important.I think people&#x27;s growing aversion to monthly pricing is because it is becoming the default model regardless of the context or whether it&#x27;s appropriate. And this is especially a problem for individual consumers.Not everything should be a monthly subscription, but that&#x27;s where we&#x27;re heading, and that&#x27;s where the pushback is.So this announcement looks simultanesouly interesting, but also slightly odd to me, because I think the monthly subscription model is perfectly appropriate for something like, for example, Basecamp. reply okamiueru 20 hours agoprevA model I would like to see is a variation of \"buy once, and you own that software\". Any and all fixes would be included. Extensions and features added on subsequent releases are also a \"buy once\" deal, and the price is calculated based on \"distance\" to what you own.This incentivizes development of features a user might want, but also avoids the \"lock in\" and other predatory practices so many companies deliberately abuse.Still possible to include other options such as SaaS models. Anyways, one can dream. Oh, wait, if I&#x27;m dreaming, societies by and large acknowledge the value of FOSS and fund this on a large scale. The cost of a small road bridge in a small country is enough to fund high level development of software used by the whole world for its whole lifetime. reply tomaskafka 59 minutes agoparentWhat fixes? You already bought a software as is. If you expect n years of support, what happens after? Either you pay some more (=subscription), or you paid $ for n years of software (=subscription). reply vasco 18 hours agoprevI used to think the 37signals people were pretty smart. Then in one year they decide to abandon the cloud and recurring SaaS revenue. Am I just unable to see it or are they too high on their own supply? reply gopil 21 hours agoprevI don&#x27;t buy into this. I&#x27;d rather pay monthly, and have them charge monthly to all the users so they sustain in the long-term and not keep going out of business. I hated AppSumo LTD for this same reason. reply rapind 20 hours agoprev> Installation and administration used to be hopelessly complicated, but self–hosting tech is simpler now and vastly improved. Plus, IT departments are hungry to run their own IT again, tired of being subservient to Big Tech’s reign clouds.I must he living on another planet, because in my experience none of this is true. In fact the only “simple” sort of self hosting would be with a PaaS provider, which is of course back to paying a subscription.To be honest I really dislike the live service model, but at least I’m not selling alternative facts. reply themagician 20 hours agoprevSoftware and hardware move too fast now. Even if you buy it, there is no guarantee it runs properly in 4-6 years for whatever reason.If Apple had LTS versions of their hardware and software that guaranteed backwards compatibility for 15 years that be great. But now they will drop or replace an API or function within 6 years that breaks your application—almost guaranteed.I have spent thousands on apps and games that require VMs or other hacks, or simply no longer work at all. At least with a sub you can cancel when it gets shitty or no longer works. reply imoreno 20 hours agoparentIt&#x27;s hard to guarantee what will happen in 5 years. Even if the vendor was really principled, who will honor their support commitment when they go bankrupt?Instead of a \"guarantee that it will run properly in 4-6 years\" you should be looking for \"guarantee that you can find a workaround when it breaks in 4-6 years\". Avoid lock in, proprietary formats and protocols, poor compatibility, requirement for exotic platforms... Many DirectX games work great in Wine. It&#x27;s the ones that do crazier tricks that are harder to deal with. reply NoboruWataya 20 hours agoprevIt seems they are launching their own products with once-off pricing. On seeing the title I had an image of a company that allowed you to purchase any service for a once-off payment. I am thinking something like, you pay an amount up front, that amount is used to purchase an annuity, the income from the annuity funds the ongoing subscription amount. Kind of like how pensions work. Once-off-pricing-as-a-service. reply whelp_24 20 hours agoprevI am sorta surprised that the support of SaaS is so high. It seems that saas in consumer products is the cause of so many consumer issues. Few pieces of software really need that many updates, and being able to view the code is key for future support.Yes this announcement seems to be focused on businesses, but the option to buy software is important for the price of renting software to be cheaper than just supporting it yourself. reply wilg 20 hours agoprevMy main problem with 37signals is that none of their products appeal to me. In theory, I&#x27;ve been in the target audience for all of them but their strange design choices often miss the mark entirely. But it&#x27;s good people can make a living making niche things.Also, I agree I don&#x27;t understand the purpose of announcing a pricing model, but maybe they just needed something to put on their nice domain. reply philip1209 21 hours agoprevThe Ruby on Rails stack may shine with this. Every cloud provider has hosting instructions. With the gem ecosystem, you can eliminate 3rd party SaaS dependencies that most startups rely on. That&#x27;s why tools like Gitlab, Github Enterprise, etc. are so easy to self-host.I&#x27;m most excited to buy Once software so that I can study the source code as an educational resource.This reminds me of TailwindUI, but for SaaS. reply dewey 21 hours agoparent> The Ruby on Rails stack may shine with this.I would guess they just give you a Docker container, otherwise supporting different configurations and host machines sounds like too much of a hassle. Even some libraries shipping with the OS could influence the behaviour outside of pinned gems. reply giobox 20 hours agorootparentExactly this - if a web app, it should be offered primarily as a container image for self-hosting support - the age ofartifacts that the customer installs and runs on an installation of said specific runtime are almost long gone. As a customer, I&#x27;d even question why I wasn&#x27;t handed a container image if they tried to ship me build artifacts and a runtime of some kind. reply mym1990 20 hours agoprevThe amount of money I have spent on subscriptions I have forgotten to cancel, or subscriptions I have misunderstood the agreement to(Adobe ahem) has to be in the few thousands or more...This is of course my fault and I have learned to be very wary about what I sign up for, but it doesn&#x27;t keep me from having an icky feeling of dark patterns that take advantage of psychological behavior. reply vlod 20 hours agoparentTIP: Every subscription goes to google calendar with a notification with T-2 weeks.This also works for paying bills on time to avoid fees like credit cards. Yes I could auto pay, but this helps me validate if I want X each month. reply mym1990 13 hours agorootparentI will give that a shot! reply bentt 20 hours agoprevNobody should expect this announcement to be met with enthusiasm on HN. Many kids have been put through college on the back of SaaS dollars.In the words of Dave Chapelle (who was quoting someone else) \"Young man, don&#x27;t ever come between a man and his meal.\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=D25pDcsg1MY reply benatkin 21 hours agoprevThe headline makes it sound like a Gumroad clone (though Gumroad now has a memberships product). Should definitely be edited. reply leshokunin 13 hours agoprev37Signals can&#x27;t sell their standard subscription stuff to people that want to self host. Introducing: lots of hype for a docker business model. reply baxtr 21 hours agoprevI mean sure I am happy buying stuff once and only pay one time. Like a car, house, pants.With that kind of stuff I don’t expect updates and bug fixes, improved usability and the kind every week.But when I’m am renting a house… I expect my landlord to care of it. These are the different deals I guess. reply melaniecrissey 20 hours agoparentWhen I look around at all the \"buy once\" junk in my house, it&#x27;s really \"buy every two or three years\" because most of this stuff isn&#x27;t built to last. reply alfalfasprout 21 hours agoprevThe reality is that most software isn&#x27;t designed like a car is. Especially with most organizations using some iterative+incremental development approach.As a result, the development of software nowadays doesn&#x27;t really lend itself to one-time purchases. reply isuckatcoding 21 hours agoprevIf we’re just talking about standalone software, say OG native desktop photoshop for instance, then sure. However, any web based service is, by design, going to need to charge a subscription given the downstream hosting and infra costs. reply tm11zz 20 hours agoprevProbably timed this announcement with a new book coming out on the topic reply samcat116 20 hours agoprev> \"IT departments are hungry to run their own IT again.\" Tell me you don&#x27;t understand IT departments without telling me you don&#x27;t understand IT departments. reply derekkraan 8 hours agoprevIs this a tacit admission that MRSK has failed? reply lylo 7 hours agoparentFailed in what sense? They&#x27;re using it on all their apps except Basecamp, although I&#x27;m sure that will be converted in time. It&#x27;s now called Kamal btw https:&#x2F;&#x2F;kamal-deploy.org reply djyaz1200 20 hours agoprevUnless it&#x27;s open source you&#x27;re \"Buying\" a car with the hood welded shut. reply Sparkyte 21 hours agoprevYou really should only have to buy software once. It is quite dumb that we have to be subscribed to everything. This is what makes me use open source everything. Subscriptions are services and if I need a service to write documents FML. reply nashashmi 21 hours agoprevThey are going to show source code and charge for it? reply jmbwell 21 hours agoprevOnly with our enemies can we make peace, I guess. reply scarface_74 20 hours agoprevSo they didn’t introduce anything yet. reply manojlds 21 hours agoprevAh, so that&#x27;s why DHH is making noise about Typescript. reply simlevesque 21 hours agoparentHow is the \"pay once\" pricing related to not wanting TS in his project ? Because it happened the same day ? reply HyprMusic 20 hours agorootparentI think they&#x27;re implying he&#x27;s drumming up attention through controversy, in the hope that some of it spills onto \"Once\". reply satvikpendem 21 hours agoparentprevWhat is he saying about TypeScript? reply EduardoBautista 20 hours agorootparentMight be referring to this:https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35851822 reply manojlds 21 hours agorootparentprevhttps:&#x2F;&#x2F;world.hey.com&#x2F;dhh&#x2F;turbo-8-is-dropping-typescript-701... reply agloe_dreams 20 hours agorootparentMeh. Dumb \"my feelings or the highway\" angles as usual. reply satvikpendem 20 hours agorootparentIt&#x27;s true that for library maintainers that TypeScript has been somewhat annoying, where many are now moving back to JS with JSDoc based types, but I&#x27;m not sure why one would replace application level code with pure JS. Basecamp likely already use Rails for the logic so I guess they don&#x27;t need that much typing on the frontend.But yes, generally DHH seems too absolutist in his takes. replya9ex 20 hours agoprevUff, how much was that domain?! reply tarofchaos 20 hours agoprevWhy a sudden change of heart? reply 1letterunixname 20 hours agoprevThere&#x27;s an implicit conflation between SaaS-only, desktop-only, and hybrid apps.Although sometimes subscription-only or one-time costs appears to the user to be a Hobson&#x27;s choice, the alternatives are not purchasing, pirating, and using alternatives.Unfortunately, security updates, feature additions, and hosting servers and storage cost money. This is either baked into a perpetual license, an S&S contract, or into the subscription model.The problem that needs to be solved cannot be solved by a regression in pricing models: the issue is the intent of publishers to act as rent-seeking, extreme profiteering by continually raising prices, pricing hobbyists and individuals out of the market because they only want to sell to large corporations who view high price as a signal of quality. Oracle, Microsoft, and Redhat are the best examples of these. OTOH, there are apps like Plex and Obsidian, and low-cost buffet app marketplace subscriptions like SetApp. For example, I refuse to subscribe to EA Play&#x2F;Pro because it is heavily-marketed, expensive, lacks ownership, and selectively retains titles out-of-reach from outright purchase (perpetual licensing). reply mattbgates 20 hours agoprevWhile I love the idea for simple software services, it doesn&#x27;t work to support the actual lifetime of the software, though it can work to an extent. Adobe would be a good example of offering a one-time payment. You get a lifetime for that version of the software. However, you&#x27;d have to upgrade&#x2F;pay another fee to upgrade to the next version, perhaps for a reduced price, and this is likely to be many versions. The issue with this type of offering, is that Adobe would have to support those older versions -- for how long?I had done some research on this topic... writing saas and thinking, \"Wow, wouldn&#x27;t it be a great cash grab to get that $1,000 for a lifetime for my product upfront? It saves money in my users&#x27; pockets and it gives me a large immediate sum.\" I mean, getting 100 people to sign up for a lifetime is $100,000 minus taxes upfront and sounds amazing. In fact, it would probably support the server hosting costs for quite some time. Until it runs out.I even thought about offering a limited amount. It&#x27;s especially a bonus for those who you consider investors of your platform. In other words, you are giving me so much money upfront to support this service. In exchange, I am giving you the rights to own whatever I do in the future, free of charge. However, most people \"seeing\" actual money hit their account every month is more motivation than that one-time payment.So I had seen how StackCommerce handles this for their creators: you pay once for a limited supply of something. For example, an SEO platform that does scans of your website and suggests recommendations, you might pay $30 once and get 10 of those per month for a lifetime. Then what these companies would do is offer an upgrade or a trial period to try a subscription plan.And this model can work. Again, the purpose of the one-time is really designed to at least get a user in and trying the service, feeling that they can \"own\" it. It makes the user feel good because they have something for a lifetime. It makes the creator feel good that someone actually paid for a \"lifetime\". However, this may be short-lived for several reasons.You are taking a huge gamble.. for example, I might only need less than those 10 queries per month on my website, so they made their $30 and that&#x27;s it. I use it but despite their \"upgrade me\" attempt, I don&#x27;t care to upgrade. The other major issue is that if you get an interested buyer for your software, like someone who actually wants to own it, and sell it to others, then you now have to disclose that you have one-time paying lifetime users, which is now cutting into their costs and may depreciate your software for the buyer because they still have to support those customers. Of course, they can always say, \"new ownership, we&#x27;ll grandfather you in at this price... pay another... \" or whatever, but that may not always work, and piss your customers off, so it has its complications.The issue with the \"pay once\" model is that over time, it prevents the creator from having any real means to continue supporting the software and may even kill the motivation. We all have to work. Software is a part of life. Pay me to continue supporting my product, so I can keep providing it to you. So rather than offering a lifetime of the product, I offer a lifetime of reduced early bird subscriptions. I came to the conclusion that I&#x27;d rather give $200 off my service yearly than give it away for a lifetime. If I ever sold my software, there is still an attractive recurring. Once that person unsubscribes from the service and resubscribes, they lose their early bird, so the enticement to keep it at that price is to remain subscribed.It&#x27;s basically like letting someone live in your house because they paid you a bit more for rent upfront. It might seem great the first few months, but after a few months, maybe a year, maybe more, you&#x27;ll likely come to regret this mistake. reply whelp_24 20 hours agoparentYou seem to be against actually selling software, and tactily agreeing that the main beneficiary of the saas is the business renting the software to consumers. We already know that company benefits from not actually selling you software. reply mattbgates 16 hours agorootparentIt&#x27;s selling it at the one-time price that may have long-term consequences. So it sounds great in theory and gives investors a chance to feel like they own it, but subscriptions are better in the fact that they are continued support for the product. I guess it just means not every product can be sold for a one-time price, though there is software out there where it works just fine to do so. reply hanniabu 21 hours agoprevSounds like this will just be open source software repackaged and sold to enterprise reply midnitewarrior 21 hours agoprevPrior to SaaS, we had software packages that weren&#x27;t updated, and often became abandonware because companies could not afford to maintain the software without growing sales demand. It left us in a very insecure world with bugs that wouldn&#x27;t go away.Say what you will about recurring SaaS payments, but software is more secure and supported than ever before. SaaS companies don&#x27;t go away like old box software companies did. When new platforms take over the old ones, they provide migration paths.Yes, ONCE will give you the source, but what company is prepared to support another company&#x27;s abandonware? This isn&#x27;t a bad deal for software libraries, I&#x27;ve used libraries that became abandonware because the companies went under. I really though it would be good for companies to put their source in escrow and you get access to it in the event the company stops supporting you. reply pictur 21 hours agoprevWorst motivational post I&#x27;ve ever seen. they&#x27;ll probably find hundreds of thousands of idiots who&#x27;ll pay for their crappy product. reply shafyy 21 hours agoprevThey&#x27;re realling upping their expensive domain name game with hey.com and once.com. reply ChrisArchitect 19 hours agoparentdamn yeah, anyone know how much &#x2F; when it was aquired? reply photoGrant 21 hours agoprevWe helped pioneer keeping you on the hook perpetually for a solution! Now we&#x27;ve extracted maximum value out of that we&#x27;re going to offer an ever wilder idea! One big fat payment for the same thing you&#x27;ve spent years paying and subscribing to.Just one last attempt to extract every cent of good will out of a consumer before they truly cotton on.At least, that&#x27;s my sour angle of it. As much as I want this &#x27;model&#x27; again. reply tough 21 hours agoparentI guess that&#x27;s true lmao reply satvikpendem 21 hours agoprev [–] An aside, but remember when Basecamp a few years ago published their policy about no talking about politics at work [0] and how much of the internet was incensed (at least on Twitter and in online media publications, not so much HN)? Many said that that would be the end of the company, but lo and behold, not only does Basecamp seem to be doing fine, hiring more people to replace the more than 1&#x2F;3 of employees who left [1], but no one, when discussing them today, even seems to remember the incident.It just goes to show how much of the drama on the internet simply does not matter, and that people in general have a short memory with things like this. Some might remember but most won&#x27;t.[0] https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=26944192[1] https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=26998127 reply Macha 20 hours agoparentHaven&#x27;t Teams and Slack eaten their market in the intervening time? Even Discord and Matrix are moving into the space. If they&#x27;re still profitable, it&#x27;s because they&#x27;re extracting more money from a shrinking pool of customers. I guess Oracle has shown that can last a while with many of their products, but I&#x27;m not sure that&#x27;s the kind of influence they once had. reply satvikpendem 20 hours agorootparentSlack and Teams aren&#x27;t in the same category as Basecamp which is more of a ClickUp, Asana or Monday competitor, ie a project management tool. reply Macha 19 hours agorootparentOh I mixed it up with Hipchat for some reason. Turns out Hipchat&#x27;s not even the same company. reply leftnode 21 hours agoparentprev [–] Additionally, I&#x27;d wager a good majority of their paying customers had no idea the controversy was happening, or weren&#x27;t going to change their entire office operating procedures because the owners may have some caustic opinions. reply satvikpendem 21 hours agorootparent [–] Yes, that&#x27;s the other thing. (Corporate) customers almost universally do not care about internal company drama unless it materially affects them (such as with the recent Hashicorp license changes). Even end consumers don&#x27;t much care, otherwise Nestlé would not continue to be as successful as it is. There is only so much energy that people can expend daily to care about something, and usually other people&#x27;s drama is not it. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The author points out a shift in business software models, transitioning from owning software to subscribing under the Software as a Service (SaaS) model.",
      "They contend that while SaaS has been financially rewarding for software vendors, this trend appears to be subsiding with the enhancement of self-hosting technology and organizations' desire for greater control.",
      "The author introduces \"ONCE\", a forthcoming series of software tools that can be owned indefinitely with a single payment, signifying a potential post-SaaS era and planned to be unveiled in late 2023."
    ],
    "commentSummary": [
      "There's an ongoing debate between subscription pricing models and one-time payments for software, spurred by concerns over difficult cancellations, cumulative costs, and continuous need for updates.",
      "The announcement of a \"Once\" pricing model by 37signals incites mixed reactions, with some users appreciating the one-time payment option, while others express skepticism and criticize the language used in the announcement.",
      "Discussions also feature concerns about long-term software support, compatibility, the limitations of the SaaS (Software as a Service) model, and the benefits of self-hosting."
    ],
    "points": 240,
    "commentCount": 205,
    "retryCount": 0,
    "time": 1694024235
  },
  {
    "id": 37410630,
    "title": "This page exists only if someone is looking at it",
    "originLink": "http://ephemeralp2p.durazo.us/2bbbf21959178ef2f935e90fc60e5b6e368d27514fe305ca7dcecc32c0134838",
    "originBody": "Currently Viewing: 109 Connecting to websocket. Connected! Listening for content for hash 2bbbf21959178ef2f935e90fc60e5b6e368d27514fe305ca7dcecc32c0134838 Requesting content. Received content for hash 2bbbf21959178ef2f935e90fc60e5b6e368d27514fe305ca7dcecc32c0134838 Received content for hash 2bbbf21959178ef2f935e90fc60e5b6e368d27514fe305ca7dcecc32c0134838 Standing by... ready to share this content! This page exists only if someone is looking at it Hi! Welcome to Ephemeral P2P. Thank you for loading this content. Your browser retrieved it from the browser of someone currently viewing this page. You're now a part of the network and someone who loads this page in the future may get it from you! The server does not store this content anywhere, so as soon as the last person closes their browser, it's gone. You can see a count of how \"healthy\" the page is (how many people are viewing the content) at the top. How does it work? At a high level, this is what happens: From the homepage you enter the content you want to share. When you submit it, you register the SHA-256 hash of the content on the server. Your browser stands by with an open websocket to the server. When someone else visits a link \"/[sha256hash]\", the server tries to retrieve the content from anyone registered with that hash. The server double checks the hash of the content it gets and then passes it along to the new person. That new person now registers with the server as someone who knows the content for that hash. But why? Just a simple experiment to play with websockets and concurrency. The app is built in Elixir (compiles to erlang) with the Phoenix framework, since it supports websockets out of the box. It's very \"railsy\" and in addition to rails-style \"controllers\", it has \"channels\" which are like controllers for websockets. Made building this thing a snap. The app is hosted on a heroku 1X dyno and I'm hoping this hits the front page of HN to see how many concurrent connections I can squeeze out of it. Erlang is known for its concurrency, so I'd love to know how Elixir/Phoenix can serve as an alternative to my usual rails when highly concurrent solutions are needed. I plan to tweet my findings, so you can follow me (@losvedir) if you're interested in them. Where do we go from here? There are two aspects to this project that I've found quite interesting, that I hope people explore: Peer-to-peer over browser websockets Does something like this exist? I opted for P2P of HTML injected into a container div, since I didn't want to deal with the legalities of clients sharing binary files back and forth. But someone wanting to deal with DMCA and all that might have an interesting service here. I could see this being a great alternative to something like sendfile (I think that's a thing?), or DropBox, or what have you, when you just want to send a file to a friend and it's too big for email. Big files could even be broken up into individual SHA-256'ed pieces, and the list of SHA-256 hashes could be the thing sent. The other side would then fetch each piece in turn and re-assemble. But that's starting to sound kind of like BitTorrent... I wonder if someone could even make a web-based bittorrent client along these lines. Content addressed web The cool thing about the page content being represented by its SHA-256 hash is that it doesn't matter where the content comes from. If anyone sends you the content, you can verify that it's what you were looking for. This makes it well suited for peer-to-peer or otherwise distributed file serving. Imagine essentially an archival service where all kinds of content (web pages, mp3s, videos, etc) are indexed according to their SHA-256. Hopefully this content would be distributed around the world and backed up and all that good stuff. Then if someone tweets a \"hey, checkout this video I made [a2b89..]\", it can be retrieved from this \"global store of all content\" using that hash. It's already very common to mention the SHA-256 alongside a download. Just think if you could take that and download from this service. Wikipedia is an amazing collection of knowledge in terms of articles. It seems like it would be valuable to have a similar nonprofit service that was a repository of \"notable\" files. A quick warning I don't do any sanitization of the shared HTML content, so be wary of other links that folks may post. But I don't think it's too great of a security risk, since there's nothing private here (no https), and you shouldn't be trusting me any more than any other random internet person. In closing... Thanks for checking this out! Feel free to fork the repo on github and play around with it yourself! And a big thanks to the friendly folks on the #elixir-lang IRC channel who have been very helpful in building this. A (more) permament version of this content can be found here.",
    "commentLink": "https://news.ycombinator.com/item?id=37410630",
    "commentBody": "This page exists only if someone is looking at itHacker NewspastloginThis page exists only if someone is looking at it (durazo.us) 227 points by netcraft 20 hours ago| hidepastfavorite67 comments losvedir 18 hours agoOh, wow. I didn&#x27;t expect to see this on HN today. This was a toy app I wrote to learn a bit more about Elixir, Phoenix, and Phoenix&#x27;s concept \"channels\" (websockets). I submitted it a long time ago to HN.I wrote a bit more about it on my blog: http:&#x2F;&#x2F;gabe.durazo.us&#x2F;tech&#x2F;ephemeral-p2p-project&#x2F; (wow, I need to update my blog). Unfortunately, it&#x27;s not really that p2p, contrary to the name. There&#x27;s a server running on heroku that manages all the websocket connections and matching. What is p2p is the page content, which lives in the browser, and which gets piped around.I get my little $7 bill from heroku every month and wonder \"is this the time I should finally spend an hour and shut it all down?\" But then every once in a while I dig up the old HN submission and follow the link and I see a \"Currently Viewing\" count of 2 or 3 and I wonder who or what it is and why. If it ever drops to 0 then it wouldn&#x27;t really be recoverable and I&#x27;d shut it down. reply joshspankit 22 minutes agoparentI wonder: did you consider adding size to the end of the hash?In a future where all content could be addressed by hash there will be collisions, but adding the expected size moves it from “possibly given enough files” to “extremely unlikely assuming there’s no flaw in the hashing algo” reply netcraft 18 hours agoparentprevThank you for footing that bill for so long, this has been a little joy for me for a long time, just seeing how long it can last. Would love to buy you a beer someday. reply rjmill 17 hours agoparentprev> I wonder who or what it is and why.Some people really want this to live forever. Or they&#x27;re just that bad about closing old tabs. Both options are fun to think about.Thanks for keeping this going! reply kwar13 17 hours agoparentprevGreat work! Also there are alternatives to Heroku that don&#x27;t cost money now that they killed the free hobby tier. I&#x27;ve used Vercel and Cyclic and both are great among others. reply Waterluvian 20 hours agoprevI love love love these kinds of experiments. Reminds me of the Early Web.I really wish WebRTC was easier to use. I wish there were some good faith free servers to do the… crap I forget the acronyms… the STUN and TURN stuff and whatnot to negotiate the connections. Ie. Not a proxy, just an operator. Having one I could use freely and comfortably would trivialize a lot of neat projects, particularly fun little multiplayer games. reply davidmnoll 19 hours agoparentI recently learned you can do the candidate server exchange without those servers. There was an implementation which used [this](https:&#x2F;&#x2F;github.com&#x2F;cjb&#x2F;serverless-webrtc) as a backend and a QR code to do the transfer. I can&#x27;t seem to find it now. However they were having issues with the QR code reaching its size limit, leading to the question of whether you could break the message into a series of qr codes.Pretty interesting stuff, I was considering taking a crack at it as part of a project I&#x27;m working on.Edit: [here](https:&#x2F;&#x2F;franklinta.com&#x2F;2014&#x2F;10&#x2F;19&#x2F;serverless-webrtc-using-qr... the blog post about it reply thdc 16 hours agorootparentYou would still need a STUN server, though there are many public ones out there.The main idea in removing the signaling server is to somehow transfer the session description between clients e.g. one client scans a qr code that encodes the session description of another or sending session description through some existing chat application and allowing a user to enter it manually instead of having your own server do the transfer over some mechanism.Also it may be possible to avoid the multiple qr code thing this blog is talking about (qr code per ice candidate) if you just wait for the ice gathering state to be complete then send the session description, though they are correct that the session description in its entirety will most likely exceed the qr code capacity (coincidentally they use LZ compression in an attempt to lower the length, similar to what I tried long ago though I ended up deciding it wasn&#x27;t worth it). reply joshspankit 28 minutes agoparentprevIPv6 is going to be awesome for this (we hope) reply justaman 19 hours agoparentprevIf you asked me 30 years ago what I thought the web would be in 2023, I would have said something similar to this. reply Waterluvian 19 hours agorootparentSame. The way people share memes and funny videos with their pals, I thought we’d all be sharing these kinds of things.looks around at HNOkay so maybe we still kind of are doing that. reply IKantRead 19 hours agoprevI recently came across an in-progress book from Manning, \"Peer-to-Peer Web Applications\" [0] that, despite a fair bit of crypto&#x2F;web3 references, seems to be targeting an audience of people looking to build more robust&#x2F;complex version of this.I&#x27;d recently been thinking about how it&#x27;s unfortunate that we have seen so little growth in the peer-to-peer part of the web, which to me is the most resilient strategy to resist a few large tech companies taking over everything and turning the web into a gigantic advertisement.Curious if anyone has read the MEAP for that book so far and has any opinions on it?0. https:&#x2F;&#x2F;www.manning.com&#x2F;books&#x2F;peer-to-peer-web-applications reply 101008 19 hours agoprevI understand the idea behind this page (and I really liked it), but the title made me think of more a \"philosophical\" question... do any webpage exists if nobody visits it?If the page is a static HTML you could say that yes, it exists in the webserver as a file. But what about dynamic webpages.The frontpage of New York Times (I guess it is generated dynamically from a database)... does it exists if no one access NYT? Do any dynamic webpage exists if no one requests it? Being available and ready to be requested doesn&#x27;t mean the webpage exists... does it? reply Zandikar 19 hours agoparent> Do any dynamic webpage exists if no one requests itMatter of perspective&#x2F;semantics. A more general thought experiment in the same vein: Can you stand in the same river twice?To answer the question: \"does it [exist]?\" you have to first define what a \"it\" (a dynamic webpage) is. My answer in response is \"Is it cached?\" if no, then no. Whether or not a person is involved at all is irrelevant imo. But I define a dynamic webpage by the existance of the DOM, not the services that generate it. I might make an exception if it can be proven those services are deterministic, which I wouldn&#x27;t assume. reply MR4D 19 hours agoparentprevFTA -Your browser retrieved it from the browser of someone currently viewing this page. You&#x27;re now a part of the network and someone who loads this page in the future may get it from you! reply developer93 19 hours agorootparentThey read the article, they were making a different related point reply 101008 18 hours agorootparentprevYes, I read the article, I was asking a different question. reply echelon 19 hours agorootparentprevIf it passes over a central server, does it really count as p2p?If browsers grew p2p capabilities [1], we could begin to bypass centralization and build truly distributed (not just federated) social networks, news systems, and the like.Imagine not having to run \"archive.is\" against headlines. You just share them - tamperlessly - with others. And the comment graph. You could even begin to boost high-value content with your own algorithm that you control.P2P in browsers would return us to where many of us thought the internet would lead us in the early 00&#x27;s. The disappearance of bittorrent and arrival of central platforms like Facebook felt like the future faded away and disappeared.People are using Discord now, but in the 00&#x27;s people used completely customizable open source clients to connect to their favorite messaging platforms. You can&#x27;t even imagine that today. Everything is a platform.[1] I doubt Google would ever get behind this. Centralization reinforces their ads business. reply throwitaway156 18 hours agorootparentIgnoring STUN&#x2F;TURN, WebRTC should be able to do this. there are things like webtorrent.ioAll we need is demand. Demand for non-walled garden content. Demand for less monthly subscriptions to be able to run something you already own. Demand for DRM-free content that you can share with your grandma or watch on a seperate device on a flight. reply NooneAtAll3 19 hours agorootparentprev> If it passes over a central server, does it really count as p2p?you made me realize that this website is essentially torrent(without splitting file into chunks) reply Eduard 18 hours agorootparent>> If it passes over a central server, does it really count as p2p?> you made me realize that this website is essentially torrenthow did you come to your conclusion, given that statement?With Torrent, content flows between peers directly.Whereas for this website, content flows between peers with the central server in between. reply kurisufag 19 hours agorootparentprev> You can&#x27;t even imagine that todayMatrix? and to a significantly lesser extent Telegram. reply comprev 19 hours agoparentprevA building does not exist until the materials sitting at the site are assembled.Same principle applies to dynamic webpages. reply 101008 18 hours agorootparentBut what if the materials are assembled \"automatically\" every time someone tries to enter the building :D reply comprev 18 hours agorootparentSame situation as before, the materials remain as they were until an external influence triggers the \"build\".A dynamic page is not assembled until the HTTP request (i.e external) sets things in motion. reply stronglikedan 19 hours agoparentprevOnly the route exists until visited. Only then does the page exist. reply jaflo 19 hours agoprevThe page mentions the possibility of file sharing&#x2F;torrents using WebRTC which does exist if anyone is interested: https:&#x2F;&#x2F;webtorrent.io&#x2F; and https:&#x2F;&#x2F;instant.io&#x2F;The projects are open source: https:&#x2F;&#x2F;github.com&#x2F;webtorrent&#x2F;webtorrent reply notpushkin 19 hours agoparentAlso, https:&#x2F;&#x2F;file.pizza&#x2F; reply therein 19 hours agoparentprevIs it just me or did WebRTC supporting clients cause a split in the BitTorrent clients?I come across many torrents that have a lot of seeders on the tracker and WebTorrent (in Brave and as a standalone app) is able to immediately connect to a ton of peers and begin downloading at high speeds while Transmission fails to find any peers even after a long time.The opposite also often happens, I see lots of seeders on the tracker. WebTorrent fails to connect to any clients while Transmission is able to connect to a ton of peers and download at high speeds.I observed this for a long time and then I remember reading somewhere that WebTorrent only supports connections over WebRTC and most other clients don&#x27;t support WebRTC peering.I have UPnP working just fine. No hole-punching issues in the network.Does anyone know if this is accurate? reply gsuuon 19 hours agoprevIt also means that pages can never be updated without sharing a new link. So typos like \"permament\" are there forever (ever.. ever) reply taftster 12 hours agoparentI consider that a feature. reply netcraft 19 hours agoprevLooks like this was originally submitted to HN back in 2015 https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=9531265 reply netcraft 19 hours agoparentanother relevant link: https:&#x2F;&#x2F;medium.com&#x2F;@losvedir&#x2F;ephemeral-p2p-project-ff07cbd20... reply sillysaurusx 19 hours agorootparentI love that you can see from the graph that the post got bumped off the front page at around 8:38pm. reply ShakataGaNai 19 hours agoprevFascinating experiment in ephemerality. If a page is popular, more people will see&#x2F;share it amongst themselves... but as soon as it loses interest... the content is gone.Also a high potential for content to be gone before it can be indexed. reply nickdothutton 19 hours agoparentA few years ago I wrote a little about how we might harness something like this to preserve user generated content when the platform collapses.https:&#x2F;&#x2F;blog.eutopian.io&#x2F;beating-the-samson-option&#x2F; reply TheJoeMan 18 hours agoparentprevI think it would make a fascinating tik-tok clone where you don’t have to pay storage fees! Except you could charge users to help them seed if they don’t want to leave their phone app running until they go viral. reply nomel 19 hours agoparentprevWhat&#x27;s old is new: torrent. ;) reply batmansmom1 20 hours agoprevhttp:&#x2F;&#x2F;ephemeralp2p.durazo.us&#x2F;805c0cdff876faad854cd1e165694e... reply jtriangle 19 hours agoparenthttp:&#x2F;&#x2F;ephemeralp2p.durazo.us&#x2F;4d1c39a4a366b09f65e17a935aefde... reply Exuma 19 hours agorootparentLMFAO so stupid I just laughed IRL. It&#x27;s even funnier 4 people are keeping it alive reply caseyavila 19 hours agoprevThis so cool and weird, almost like I&#x27;m in a room with other people. reply netcraft 19 hours agoparentYes exactly. I&#x27;ve had this page up in a browser for many years, most of the time with only two other people. I have no idea who they are, no way to communicate with them, but feel very connected in a strange way. reply losvedir 18 hours agorootparentOMG, you! I just guffawed in real life at my desk here. I mentioned in another comment here[0] how I&#x27;ve checked off and on through the years and wondered who could possibly be keeping this page open and why. Thanks for re-posting this, it&#x27;s too funny to hear from one of you guys.[0] https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37411714 reply rabbitofdeath 19 hours agoparentprevSO this totally popped into my brain - there was a PHP script you could add to your site called Crisc - https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20021010104130&#x2F;http:&#x2F;&#x2F;biomatic.o... It showed your IP and you could send a message to the other visitors on the site - I was blown away at the time I saw this. reply Ancapistani 19 hours agoprevAnyone know where I can find the source for this?I’d love to try to implement an extension attack to add some trivial content to the page, but don’t have time right this second (I’m at a work offsite) reply dchest 19 hours agoparentWhat kind of extension attack this would be? The hash length extension attack will always produce a different hash. reply tysam_and 19 hours agorootparent51%+ is a very powerful number. reply comprev 19 hours agoparentprevThis GitHub link is at the bottom of the page - https:&#x2F;&#x2F;github.com&#x2F;losvedir&#x2F;ephemeral2 reply netcraft 19 hours agoparentprevthe page links to this github repo at the bottom: https:&#x2F;&#x2F;github.com&#x2F;losvedir&#x2F;ephemeral2 reply gavmor 19 hours agoprevWe made something similar but for group decision-making, ie this drag-and-drop poll only exists if someone is looking at it:https:&#x2F;&#x2F;druthers.app&#x2F;#&#x2F;d54c9d32-0212-4c9d-a831-ae9becb1d202Obviously its current feature set leaves it highly vulnerable to griefing. Currently lacking the motivation to improve, since it works perfectly for my personal use case of deciding boardgame night once a week and family vacation plans once a year. reply c7b 19 hours agoprev> Imagine essentially an archival service where all kinds of content (web pages, mp3s, videos, etc) are indexed according to their SHA-256.Isn&#x27;t that pretty much what IPFS is? reply grondilu 17 hours agoparentBasically, but the general concept is \"content-addressable file service\".It&#x27;s not specific to IPFS. Arguably, it&#x27;s also what bittorrent does. reply EricRiese 19 hours agoprevhttps:&#x2F;&#x2F;file.pizza&#x2F; is another example of browser based peer to peer file transfer reply derekzhouzhen 18 hours agoprevNeat. A simple enhancement could be letting the server to cache the content for a short period of time, and push the cached webpage in the static rendering. This way:* non js enabled clients can see the page, think robots, SEO, etc.* js enabled clients can help to perpetuate the content* if the last js enable client had a network glitch, the content is still available. reply caseyharalson 12 hours agoprevI used this same sort of idea to make a whiteboard app website. The whiteboard content wasn&#x27;t stored on the server and would disappear when the last person left. reply Exuma 19 hours agoprevhttp:&#x2F;&#x2F;ephemeralp2p.durazo.us&#x2F;baaaf4b0e33db240bd86f9d4fa4135... reply sillysaurusx 19 hours agoparentI admit, I giggled. It’s also in line with how humans use new mediums. reply vmatsiiako 19 hours agoprevCurious how long this page has been up for at this point. Since 2015? reply netcraft 19 hours agoparentI can vouch that it has been up at least that long. reply Blahah 18 hours agorootparentI wonder if that&#x27;s because one or several people have been seeding it long term - it seems likely. In which case, I&#x27;m curious if a 6+ year browser websockets session is possible or if a seeding tool was used for stability. reply hiccuphippo 19 hours agoprevI wish ipfs was this easy. reply ZeroClickOk 19 hours agoprevSchrödinger&#x27;s page reply aryan14 19 hours agoprevI wonder if this technology can be used in the future for cheaper&#x2F;more efficient web hosting..? I see big potential reply cowsup 19 hours agoparentQuite the opposite. For this set up, you still need to pay for hosting, or host it yourself, and you need to deliver the underlying frontend code to the user&#x27;s devices that makes all of this possible. Then you also need a backend to handle the socket connections and send it from user to user (this is not P2P). The constant pinging to see if anyone is waiting for a copy, and then sending it out, will only continue to eat up resources the more people are looking at it.From an efficiency standpoint, this doesn&#x27;t come close to beating a simple static cacheable text file. Definitely still a very cool concept, but offers limited real-world use. reply netcraft 19 hours agoparentprevThis page is from 2017. I think its def possible now, whether its practical or not im not sure. reply cozzyd 19 hours agoprev [–] right click->save page ascheckmate! replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Ephemeral P2P is a peer-to-peer content sharing platform; users register the hash of the content they want to share, and this content is retrieved and passed on by a server when others visit the corresponding link.",
      "The platform, using Elixir and Phoenix framework, explores the potential of peer-to-peer transactions via browser websockets and the concept of content-addressed web.",
      "This application does not sanitize shared HTML content; however, no private information is included in the exchange."
    ],
    "commentSummary": [
      "The discussion centers on a learning-based toy app for Elixir, Phoenix, and websockets, which brought up the potential of browsers' peer-to-peer capabilities for truly distributed networks.",
      "Participants debated the merits and challenges of ephemeral peer-to-peer content sharing on the web, including customizable open-source clients, the potential of WebRTC, and the currently prevalent centralized platforms.",
      "Ideas for server caching enhancement, provision for non-JS enabled clients to view pages, handling network glitches, and potential for using this technology in web hosting were also debated, highlighting both limitations and benefits."
    ],
    "points": 227,
    "commentCount": 67,
    "retryCount": 0,
    "time": 1694031062
  },
  {
    "id": 37416430,
    "title": "Exa Is Deprecated",
    "originLink": "https://github.com/ogham/exa",
    "originBody": "Skip to content Product Solutions Open Source Pricing Search or jump to... Sign in Sign up ogham / exa Public Sponsor Notifications Fork 670 Star 22.6k Code Issues 268 Pull requests 55 Actions Security Insights ogham/exa master 3 branches 13 tags Go to file Code Latest commit ariasuni exa is unmaintained, please use the active fork eza instead … fb05c42 Git stats 1,615 commits Files Type Name Latest commit message Commit time .github exa is unmaintained, please use the active fork eza instead completions fix fish completion for -i/--inode option devtools Fix panic on non UTF-8 file when using Git man [baseline] - fix docs and remove gitignore snap Add snap support for ease of deployment src Merge pull request #1178 from mtoohey31/fix/obsolete-icons xtests Fix panic on non UTF-8 file when using Git .gitignore Ignore all log files (produced by Vagrant) .rustfmt.toml Batch source formatting Cargo.lock Update term_grid to 0.2 Cargo.toml Upgrade Rust version to fix CI Justfile Version output changes LICENCE Update LICENCE README.md exa is unmaintained, please use the active fork eza instead Vagrantfile Fix Vagrantfile and extended tests build.rs Use unwrap_or_else in build.rs rust-toolchain.toml Upgrade Rust version to fix CI screenshots.png Update screenshots README.md exa is unmaintained, use the fork eza instead. (This repository isn’t archived because the only person with the rights to do so is unreachable). exa exa is a modern replacement for ls. README Sections: Options — Installation — Development exa is a modern replacement for the venerable file-listing command-line program ls that ships with Unix and Linux operating systems, giving it more features and better defaults. It uses colours to distinguish file types and metadata. It knows about symlinks, extended attributes, and Git. And it’s small, fast, and just one single binary. By deliberately making some decisions differently, exa attempts to be a more featureful, more user-friendly version of ls. For more information, see exa’s website. Command-line options exa’s options are almost, but not quite, entirely unlike ls’s. Display options -1, --oneline: display one entry per line -G, --grid: display entries as a grid (default) -l, --long: display extended details and attributes -R, --recurse: recurse into directories -T, --tree: recurse into directories as a tree -x, --across: sort the grid across, rather than downwards -F, --classify: display type indicator by file names --colo[u]r: when to use terminal colours --colo[u]r-scale: highlight levels of file sizes distinctly --icons: display icons --no-icons: don't display icons (always overrides --icons) Filtering options -a, --all: show hidden and 'dot' files -d, --list-dirs: list directories like regular files -L, --level=(depth): limit the depth of recursion -r, --reverse: reverse the sort order -s, --sort=(field): which field to sort by --group-directories-first: list directories before other files -D, --only-dirs: list only directories --git-ignore: ignore files mentioned in .gitignore -I, --ignore-glob=(globs): glob patterns (pipe-separated) of files to ignore Pass the --all option twice to also show the . and .. directories. Long view options These options are available when running with --long (-l): -b, --binary: list file sizes with binary prefixes -B, --bytes: list file sizes in bytes, without any prefixes -g, --group: list each file’s group -h, --header: add a header row to each column -H, --links: list each file’s number of hard links -i, --inode: list each file’s inode number -m, --modified: use the modified timestamp field -S, --blocks: list each file’s number of file system blocks -t, --time=(field): which timestamp field to use -u, --accessed: use the accessed timestamp field -U, --created: use the created timestamp field -@, --extended: list each file’s extended attributes and sizes --changed: use the changed timestamp field --git: list each file’s Git status, if tracked or ignored --time-style: how to format timestamps --no-permissions: suppress the permissions field --octal-permissions: list each file's permission in octal format --no-filesize: suppress the filesize field --no-user: suppress the user field --no-time: suppress the time field Some of the options accept parameters: Valid --color options are always, automatic, and never. Valid sort fields are accessed, changed, created, extension, Extension, inode, modified, name, Name, size, type, and none. Fields starting with a capital letter sort uppercase before lowercase. The modified field has the aliases date, time, and newest, while its reverse has the aliases age and oldest. Valid time fields are modified, changed, accessed, and created. Valid time styles are default, iso, long-iso, and full-iso. Installation exa is available for macOS and Linux. More information on how to install exa is available on the Installation page. Alpine Linux On Alpine Linux, enable community repository and install the exa package. apk add exa Arch Linux On Arch, install the exa package. pacman -S exa Android / Termux On Android / Termux, install the exa package. pkg install exa Debian On Debian, install the exa package. apt install exa Fedora On Fedora, install the exa package. dnf install exa Gentoo On Gentoo, install the sys-apps/exa package. emerge sys-apps/exa Homebrew If you’re using Homebrew on macOS, install the exa formula. brew install exa MacPorts If you're using MacPorts on macOS, install the exa port. port install exa Nix On nixOS, install the exa package. nix-env -i exa openSUSE On openSUSE, install the exa package. zypper install exa Ubuntu On Ubuntu 20.10 (Groovy Gorilla) and later, install the exa package. sudo apt install exa Void Linux On Void Linux, install the exa package. xbps-install -S exa Manual installation from GitHub Compiled binary versions of exa are uploaded to GitHub when a release is made. You can install exa manually by downloading a release, extracting it, and copying the binary to a directory in your $PATH, such as /usr/local/bin. For more information, see the Manual Installation page. Cargo If you already have a Rust environment set up, you can use the cargo install command: cargo install exa Cargo will build the exa binary and place it in $HOME/.cargo. To build without Git support, run cargo install --no-default-features exa is also available, if the requisite dependencies are not installed. Development exa is written in Rust. You will need rustc version 1.66.1 or higher. The recommended way to install Rust for development is from the official download page, using rustup. Once Rust is installed, you can compile exa with Cargo: cargo build cargo test The just command runner can be used to run some helpful development commands, in a manner similar to make. Run just --list to get an overview of what’s available. If you are compiling a copy for yourself, be sure to run cargo build --release or just build-release to benefit from release-mode optimisations. Copy the resulting binary, which will be in the target/release directory, into a folder in your $PATH. /usr/local/bin is usually a good choice. To compile and install the manual pages, you will need pandoc. The just man command will compile the Markdown into manual pages, which it will place in the target/man directory. To use them, copy them into a directory that man will read. /usr/local/share/man is usually a good choice. exa depends on libgit2 for certain features. If you’re unable to compile libgit2, you can opt out of Git support by running cargo build --no-default-features. If you intend to compile for musl, you will need to use the flag vendored-openssl if you want to get the Git feature working. The full command is cargo build --release --target=x86_64-unknown-linux-musl --features vendored-openssl,git. For more information, see the Building from Source page. Testing with Vagrant exa uses Vagrant to configure virtual machines for testing. Programs such as exa that are basically interfaces to the system are notoriously difficult to test. Although the internal components have unit tests, it’s impossible to do a complete end-to-end test without mandating the current user’s name, the time zone, the locale, and directory structure to test. (And yes, these tests are worth doing. I have missed an edge case on many an occasion.) The initial attempt to solve the problem was just to create a directory of “awkward” test cases, run exa on it, and make sure it produced the correct output. But even this output would change if, say, the user’s locale formats dates in a different way. These can be mocked inside the code, but at the cost of making that code more complicated to read and understand. An alternative solution is to fake everything: create a virtual machine with a known state and run the tests on that. This is what Vagrant does. Although it takes a while to download and set up, it gives everyone the same development environment to test for any obvious regressions. First, initialise the VM: host$ vagrant up The first command downloads the virtual machine image, and then runs our provisioning script, which installs Rust and exa’s build-time dependencies, configures the environment, and generates some awkward files and folders to use as test cases. Once this is done, you can SSH in, and build and test: host$ vagrant ssh vm$ cd /vagrant vm$ cargo build vm$ ./xtests/run All the tests passed! Of course, the drawback of having a standard development environment is that you stop noticing bugs that occur outside of it. For this reason, Vagrant isn’t a necessary development step — it’s there if you’d like to use it, but exa still gets used and tested on other platforms. It can still be built and compiled on any target triple that it supports, VM or no VM, with cargo build and cargo test. About A modern replacement for ‘ls’. the.exa.website/ Topics rust files command-line ls Resources Readme License MIT license Activity Stars 22.6k stars Watchers 143 watching Forks 670 forks Report repository Releases 12 exa v0.10.1 Latest + 11 releases Sponsor this project ogham Benjamin Sago Sponsor Learn more about GitHub Sponsors Used by 444 + 436 Contributors 155 + 144 contributors Languages Rust 91.7% Shell 7.7% Just 0.6% Footer © 2023 GitHub, Inc. Footer navigation Terms Privacy Security Status Docs Contact GitHub Pricing API Training Blog About",
    "commentLink": "https://news.ycombinator.com/item?id=37416430",
    "commentBody": "Exa Is DeprecatedHacker NewspastloginExa Is Deprecated (github.com/ogham) 219 points by f4n4tiX 7 hours ago| hidepastfavorite178 comments arjvik 6 hours agoI&#x27;ve been using LSD instead of Exa, so I&#x27;m lightly relieved that I don&#x27;t have to change over.Both projects are amazing little utilities that when combined with a well-customized shell, really make using the terminal a joy.I absolutely love the trend of rewriting classic Unix utilities in rust, because the new tools often have (small or large) usability and quality of life improvements that altogether make the terminal a much more powerful environment. reply bachmeier 5 hours agoparent> I absolutely love the trend of rewriting classic Unix utilitiesI avoid them unless I&#x27;m capable of maintaining them myself. My primary reason for using classic Unix utilities is trusting that they&#x27;ll still work in a few years. The initial stages of a rewrite can be a lot of fun, but I want to use it long after the excitement has worn off. reply sanderjd 4 hours agorootparentYMMV, but many of us find it easier to maintain rust + cargo than the old C + autotools mess. reply saurik 3 hours agorootparentFWIW, my mileage definitely varied: autotools--which is quite easy if you bother to learn how it works and is then almost infinitely flexible--has pretty much never failed me (I think there was one incident for a while related to building stuff for iOS? regardless this was fixed long ago), but I have had to file and participate in a number of bugs on cargo, most of which are still open :&#x2F;, and I haven&#x27;t even developed anything in Rust myself yet... I&#x27;ve merely tried to compile and use stuff other people wrote and run into myriad ridiculous problems. reply diarrhea 2 hours agorootparent> quite easy if you bother to learn how it worksA timeless tautology.Some things just are easy and pleasant. Caddy server, Cargo, ripgrep come to mind. Some things are easy only once you&#x27;ve learned them. No kidding! reply faitswulff 3 hours agorootparentprev> I&#x27;ve merely tried to compile and use stuff other people wrote and run into myriad ridiculous problems.Which ones gave you trouble? reply zanellato19 2 hours agorootparentprevWhich system do you use that cargo failed to compile? On Linux and Mac I have never had anything fail to compile for me with it. reply scbrg 4 hours agorootparentprevAnd yet, exa is deprecated :-) reply Klonoar 4 hours agorootparentIf the owner is outright missing, to the point where the newer fork owners can&#x27;t even get the repo archived, one would reasonably assume that they&#x27;d need to rename&#x2F;rebrand the tool in order to publish it elsewhere.It frankly doesn&#x27;t seem like a deprecation in the traditional sense. reply mingus88 3 hours agorootparentEither way, it still speaks to the maintainability of these modern replacements, many of which are personal projects.tools like ls or grep are certainly showing their age, but that has also been their strength. The POSIX ecosystem comes in many flavors but I can always depend on it.It’s not like I can ever expect to shell into any arbitrary system or container and expect to have exa&#x2F;lsd&#x2F;rg or any of these nice replacements available to me. My tooling needs to be somewhat more portable. reply Klonoar 3 hours agorootparent> My tooling needs to be somewhat more portable.Ah yes, because it&#x27;s 100% impossible to learn new tools and fall back to the core ones when you need to. ;PI&#x27;ve been doing this for decades now, it&#x27;s just not that big of a deal. reply jjgreen 2 hours agorootparent... as in if [ -z \"$(which exa)\" ] then LS1=&#x27;ls -1&#x27; else : fi ${LS1} ${SOME_DIR}... ? reply Macha 1 hour agorootparentI just have in my personal systems ls aliased to exa (with some of my preferred options like group-directories-first) and on other systems it&#x27;s still ls. So my usage is the same regardless of whether it&#x27;s exa or ls. This isn&#x27;t a programming language or a complicated tool like jq vs competitors where what I need to do changes. I just get the nicer presentation on my local machine and \"graceful degradation\" back to the defaults of GNU ls on remote machines which don&#x27;t have my preferred setup installed on them. reply dataflow 1 hour agorootparentprevIf you do that consider if command -v exa > &#x2F;dev&#x2F;null instead, so you don&#x27;t spawn subprocesses unnecessarily. replysanderjd 4 hours agorootparentprevYes but people did not find it daunting to create a fork.But if what the comment I replied to meant by \"capable of maintaining them myself\" was about having an organizational structure where they could become an official maintainer of the official project rather than needing to fork it if the owner becomes unavailable, then yep, that&#x27;s a great point about these single-owner projects.But my original interpretation was about the difficulty of maintaining the code. To me, these rust tools are a huge improvement in that way. reply scbrg 4 hours agorootparentOK. Then we interpreted that comment differently. To me the point was that with ls, you don&#x27;t need to worry about what happens when it&#x27;s abandoned. You know it&#x27;s going to be there in ten years. And probably fifty too. reply bachmeier 3 hours agorootparentprevYour interpretation is what I intended. Thing is, I don&#x27;t anticipate ever needing to touch the code if I use the utilities installed by default on whatever Linux distribution I&#x27;m using (which includes Windows, which I use as an interface for WSL). Even if I was comfortable with Rust, which I&#x27;m not and haven&#x27;t used in years, it would still take a lot of time to understand the code well enough to make changes. reply kibwen 4 hours agorootparentprevThis is a non-sequitur. The repo is deprecated because the repo owner is absent, and development is continuing in a fork. reply dkdbejwi383 3 hours agorootparentprevThis is a GitHub ownership model problem, not a problem with the Rust toolchain or the concept of creating modern, user-friendly command-line software. reply pohl 4 hours agorootparentprevYetter still, it (eza)is being maintained. reply smartmic 4 hours agorootparentprevs&#x2F;they&#x27;ll still work in a few years&#x2F;they&#x27;ll still work in a few decades&#x2F;Related: the Lindy effect (https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Lindy_effect) reply dorfsmay 4 hours agorootparentprevNot even ripgrep? reply justin_oaks 1 hour agorootparentI usually don&#x27;t reach for new command line tools, but ripgrep is one where I feel stupid for not using it sooner.Even VS Code uses it for its search beneath the hood. reply sundarurfriend 2 hours agorootparentprevexa was the first utility program to segfault on me in over a decade. Brought me a useful dose of realism about the maturity of these projects, so I&#x27;m much more measured and careful about adopting them now. reply Night_Thastus 1 hour agoparentprevI want to like LSD. I really, really, REALLY do.But holy hell is getting a working font a nightmare. I spent multiple days desperately trying to figure out font issues, because LSD refuses to list what fonts actually work for it.And if you just use something from Nerd Fonts thinking it will work (which is what LSD recommends, btw), you&#x27;ll find that 3&#x2F;4 or more are missing some stupid symbol or another that LSD uses.And then you find out that getting it working on other systems is awful. WSL which uses the Windows command prompt under the hood needs a TTF version instead of OTF, which many Nerd Fonts don&#x27;t bother to make. On MSYS2 it just indefinitely hangs. It&#x27;s a nightmare.I have gotten LSD to work once in all my trying on one system. reply minorannoyance2 1 hour agorootparentI haven&#x27;t heard about LSD before and was just about to give it a try on WSL2. Thank you for saving me a headache and some time. reply seabrookmx 1 hour agorootparentprev> command promptYou could use Windows Terminal instead? Or does it have the same issue? reply Night_Thastus 1 hour agorootparentAs far as I know, Command Prompt, Powershell, WSL, etc all use the same underlying font system, TTF. And not many fonts have a TTF version. If you try using an OTF it won&#x27;t be detected. reply cb321 4 hours agoparentprev> I absolutely love the trend of rewriting classic Unix utilitiesThis was actually a big draw of GNU implementations in the mid-to-late 1980s vs. the \"then classics\" of the mid-to-late-1970s. Before the dominance of Linux &#x2F; OSX, people on SunOS &#x2F; Ultrix &#x2F; HP-UX &#x2F; Irix &#x2F; AIX &#x2F; *BSD would often quickly install those more featureful GNU utilities. I imagine AIX&#x2F;*BSD people still do. reply dividedbyzero 3 hours agorootparent> I imagine AIX&#x2F;*BSD people still do.Quite true for many in the macOS subset of BSD reply scoopr 6 hours agoparentprevRelevant link: https:&#x2F;&#x2F;github.com&#x2F;lsd-rs&#x2F;lsd reply cglong 3 hours agoparentprevExa was a nonstarter for me because only LSD supports Windows. Which is unfortunate, as this is a big advantage of the Rewrite It In Rust trend. reply UkiahSmith 4 hours agoparentprevI much prefer lsd over exa, as lsd has better backwards compatibility with the flags. Specifically `-t` for sorting by time, exa has it specify the time field used. reply k_roy 1 hour agorootparentThis is exactly why I switched some months back to lsd after years of using exa.The muscle memory of `ls -alt` and `ls -alrt` was too powerful for me to switch to `-snew`, even after literal years. reply elp 5 hours agoparentprevThank you!!Exa was nice but it&#x27;s command line options were just different enough in places to clash with my muscle memory. Lsd looks a lot closer. reply l00sed 2 hours agoparentprevI&#x27;ll check LSD. Exa was very easy to swap for eza, though! reply l00sed 2 hours agoparentprevAlright, lsd is pretty good. reply basedrum 4 hours agoparentprevUsing any customized shell that you recommend? reply jnsaff2 3 hours agoparentprev> well-customizedwell-rustomizedThere, fixed it for you. reply da39a3ee 1 hour agoparentprevI use a white terminal background, and lsd outputs yellow, which is unreadable on white. I&#x27;ve so far failed to stop this; e.g. it didn&#x27;t seem to respect my LS_COLORS. reply renewiltord 4 hours agoparentprevOh good one, thanks. Curious how well it handles on NFS mounts (I have a remote server mounted over NFS over Wireguard). I&#x27;ll post back later. reply noobermin 3 hours agoprevA nice metaphor when the \"modern replacement\" for something as basic as a directory listing is deprecated while the original means (the built-in ls) still works fine and isnt.EDIT: ls on linux is apparently an executable part of GNU and not a built-in reply unscaled 3 hours agoparentOn most Unix flavors it is not built-in. The only shell I know that has \"ls\" built-in is BusyBox.And besides, I said in other places: \"ls\" has been \"deprecated by its maintainer\" more times than exa, it&#x27;s just that somebody has always forked it. GNU \"ls\" (the one in Linux) is a complete rewrite of the original shell, and it is annoyingly incompatible with the macOS fork of BSD ls. reply retrac 3 hours agorootparentWorth noting that the Unix shell itself is not a \"built-in\". The kernel is agnostic about the user interface, which is left entirely to userspace programs to implement. (That was one of Unix&#x27;s major innovations.) reply whimsicalism 1 hour agorootparentbuilt in to the shell, not the kernel lol reply cb321 2 hours agorootparentprevThere is also (at least): https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Stand-alone_shell reply mpalmer 3 hours agoparentprevThat isn&#x27;t a metaphor; maybe you mean irony. reply sremani 3 hours agorootparentLindy effect. ls is likely to be around 40 years from now since its already been around 40 years (I am assuming it&#x27;s been around since 80s correct me if I am wrong).The practices of project sustenance are already baked in, where as new projects like exa&#x2F;eza have to figure out and put these practices in place to be around for that long.We have a phrase \"test of time\" for a good reason. reply diarrhea 2 hours agoparentprev`ls` doesn&#x27;t have a &#x27;parent&#x27; in the hierarchy. `exa` does, it&#x27;s `ls` itself, so there&#x27;s a fallback. When there&#x27;s no fallback, it cannot be deprecated; there&#x27;s nothing to use otherwise. So it&#x27;s either kept alive or forked indefinitely. reply monsieurbanana 1 hour agoparentprevThen you will be unhappy to learn that exa itself isn&#x27;t deprecated, only the original github is because the owner isn&#x27;t reachable. reply eviks 3 hours agoparentprevExcept it doesn&#x27;t work fine, its poor design is one of the reasons for the modern replacements reply JeremyNT 3 hours agorootparentI&#x27;ve never had a problem with ls. What about it doesn&#x27;t \"work fine?\"I could imagine another utility having a different feature set that people find useful, but in my experience gnu ls always does what it claims to do, and is so foundational that it&#x27;s a de facto standard when working with Linux.The desire to \"replace\" such well established utilities seems misguided to me - by all means add on additional utilities that help you out, but I think it would be wise accept the fact that due to its long history \"ls\" and similar tools are not going to be replaced any time soon. reply eviks 1 hour agorootparentAnd I could immediately see issues with its design, from cross-platform support to ease of configuration.It&#x27;s not wise to accept broken tools just because they persist, that&#x27;s just mindless conservatism reply monsieurbanana 1 hour agorootparentprevI&#x27;m annoyed that ls is not the same depending on the OS reply baz00 3 hours agorootparentprevI can&#x27;t say I&#x27;ve found anything particularly wrong with it in the last 40 years. reply queuebert 1 hour agorootparentThe only problem I ever have with &#x27;ls&#x27; is accidentally listing very large directories, but that is almost always an OS and filesystem issue at the core.If an ls replacement could somehow handle directories with >10^4 files faster, then I&#x27;d switch. reply o11c 48 minutes agorootparentHave you tried: alias ls=&#x27;ls -U&#x27;? I find my ^C usually makes it through if I need it. Sometimes minimizing the terminal or switching desktops also helps.(it probably helps that I use a filesystem - btrfs - that is fundamentally append-based so gives a meaningful order even with -U) replygoku12 6 hours agoprevI hope that the author Benjamin Sago is alright. It&#x27;s always concerning when FOSS developers disappear for a while - even though it isn&#x27;t uncommon. reply sillysaurusx 4 hours agoparentTheir personal site is gorgeous: https:&#x2F;&#x2F;bsago.meThe tech notes are particularly useful: https:&#x2F;&#x2F;bsago.me&#x2F;tech-notesThere’s a ray of hope on their RSS feed: https:&#x2F;&#x2F;bsago.me&#x2F;tech-notes&#x2F;feed.jsonThe last published date is September 2022, which is almost a year after their last GitHub activity: https:&#x2F;&#x2F;github.com&#x2F;ogham?tab=overview&from=2021-12-01&to=202...So in absence of other information, I’d rather believe they’re ok. I’ve gone through periods of my life where I blow off all existing responsibilities and reinvent myself. A big project like exa comes with a lot of responsibilities that don’t become apparent until it explodes in popularity; it’s understandable for people to want to disassociate from those.Some might argue that open source authors have a responsibility to communicate status, but it seems like Benjamin fulfilled that by making sure exa had additional maintainers that could update the readme with a deprecation notice.One other strange phenomenon is that when you run from a responsibility, it can feel like more and more of a hurdle to come back and face it, at least for me. So it’s probably best to assume they’re fine and to put as little pressure on them as possible. Even just popping in to say “I’m still alive” can feel like pressure. reply blumomo 1 hour agorootparentThis guy is called Benjamin with his first name. Could you please help me understanding why you prefer the plural „they“ pronoun for him, that is one guy? reply Macha 1 hour agorootparentSingular they is not a thing that was made up by trans people, but has been annoying pedants for centuries. reply dmix 1 hour agorootparentYeah occasionally mixing a singular \"they\" that way is very common in english in certain contexts. Particularly when its short clear paragraphs talking about a single person. But that&#x27;s still a distinction from being used as a pronoun everywhere, which can definitely get confusing quickly, even for non-ESL readers... which is all that really matters in writing&#x2F;communication.I&#x27;m seeing it more often in journalism now where multiple people or organizations are referred to through out an article and then \"they\" gets thrown in liberally for social etiquette. It takes serious mental effort to keep track of who they are referring to. Might as well just always use their name at that point to avoid both conflict and confusion shrug. reply boxed 5 hours agoparentprevI wish there was a better way for the community to handle this situation without the original author doing what we see here. Sometimes the original author dies unexpectedly for example and it&#x27;s very hard to salvage the work into a maintained fork.I wrote about this in 2018: https:&#x2F;&#x2F;kodare.net&#x2F;2018&#x2F;06&#x2F;25&#x2F;salvaging-abandoned-projects.h... reply nikeee 4 hours agorootparentYou can set a successor in your GitHub settings: https:&#x2F;&#x2F;docs.github.com&#x2F;github&#x2F;setting-up-and-managing-your-...That successor will gain access to the _public_ repos of your account after presenting a death certificate. As it&#x27;s only for public repositories, it&#x27;s a no-brainer for me. reply dale_glass 5 hours agorootparentprevWe&#x27;ve started a non-profit to deal with such issues. It&#x27;s a lot of work, but well worthwhile in the long term because part of the process is clarifying such issues, and the organization keeps on existing regardless of any individual member.Still, even this situation is much better than what we had before. It&#x27;s on github and so the project doesn&#x27;t randomly vanish from existence when the owner isn&#x27;t there to maintain the machine in their closet anymore. Contributors see each other and can realize \"Hey, maintainer isn&#x27;t active anymore but there&#x27;s still interest in the project, maybe we should do something about this\". reply dystroy 5 hours agorootparent> \"Hey, maintainer isn&#x27;t active anymore but there&#x27;s still interest in the project, maybe we should do something about this\"When the project isn&#x27;t huge (think linux sized) it looks like the best solution, with able persons forking the project and trying to revive it. And if they don&#x27;t manage to revive it (it&#x27;s hard to know in advance who will be strong and available enough) maybe another fork will. reply stavros 5 hours agorootparentprevI added a sibling comment, I made https:&#x2F;&#x2F;www.codeshelter.co&#x2F; a while back. Maybe we should partner. reply dale_glass 5 hours agorootparentOh, I mean we started a non-profit to support our particular project (https:&#x2F;&#x2F;overte.org&#x2F;), not that we&#x27;ve got a general purpose organization providing service to whoever needs it.So I&#x27;m not sure we&#x27;re we&#x27;re a good fit, in that we&#x27;re neither something comparable to Code Shelter, nor unmaintained. reply stavros 5 hours agorootparentAh, I see, thanks. reply yencabulator 42 minutes agorootparentprev> it&#x27;s very hard to salvage the work into a maintained fork.Sometimes, perhaps, but https:&#x2F;&#x2F;github.com&#x2F;eza-community&#x2F;eza looked pretty easy, and they even had push access to change the exa repository to point to it. reply stavros 5 hours agorootparentprevThere is, I created it years ago, but unfortunately it hasn&#x27;t taken off:https:&#x2F;&#x2F;www.codeshelter.co&#x2F;Maybe I&#x27;m bad at marketing, it seems like a pity. reply rapnie 4 hours agorootparentThe idea is good. There&#x27;s a couple of things I&#x27;d like to see. Is CodeShelter community-owned and driven? Or is it a company? The website codebase has no license and the Github application code is not open-source (or I overlooked). There&#x27;s no privacy policy, ToS, and CoC. What is the maintainer vetting process? How is matchmaking taking place? What can I expect after giving away control? This may all be well-organized, but you can only find out in chat. So asking \"Give us access to the repository\" is a big step. reply stavros 3 hours agorootparentThanks for the feedback! I answered this here:https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37417643 reply LorenDB 5 hours agorootparentprevMan, that&#x27;s amazing! I&#x27;m going to start help you with marketing, beginning with a dedicated HN post: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37417410 reply stavros 4 hours agorootparentThank you! reply mgsk 3 hours agorootparentprevHi. Just looking at the site. Under \"adopted projects\" you list Light Table. But the link just goes to the old, unmaintained repo. It would be great if you could also link to the maintained versions of repos. reply stavros 3 hours agorootparentThe list has repos that Code Shelter has access to (ie ones that you can request to join). We don&#x27;t have access to the new Light Table repo, so it wouldn&#x27;t be apt to add there. reply mgsk 1 hour agorootparentApologies if I&#x27;m being dumb, but I&#x27;m confused. I assumed \"adopted\" implied that Code Shelter has some alternative repo that it (Code Shelter&#x27;s community) is maintaining. Is that not the case? If not, then why list it at all? reply stavros 42 minutes agorootparentNo, \"adopted\" means that you gave Code Shelter permission to add contributors to your repo (the same repo you&#x27;ve always used). Otherwise, there wouldn&#x27;t be a need for CS, since anyone can fork any repo.CS is there to ensure continuity for the original repo (and releases). reply boxed 3 hours agorootparentprevI think what we need is for github to get in on it. Discoverability is 90% of the work. reply stavros 3 hours agorootparentThat&#x27;s very true, but that&#x27;s another chicken and egg problem. GitHub won&#x27;t add you if you don&#x27;t have the numbers (they&#x27;d just implement this themselves, if anything). reply keepamovin 4 hours agorootparentprev> it&#x27;s very hard to salvage the work into a maintained fork.How is it hard? Just fork it. reply boxed 3 hours agorootparentDo read my article. I have a very clear example of why that actually doesn&#x27;t work in practice. reply dahfizz 4 hours agoprevYet another example of why I don&#x27;t trust any software that markets itself as \"modern\". In another 20 years, ls will still work perfectly fine. reply unscaled 3 hours agoparentAnd so will exa, probably. And if it won&#x27;t, it will be forked.Which is exactly the reason \"ls\" is working perfectly fine for you today. The original AT&T UNIX \"ls\" has been forked over and over again and rewritten from scratch several times. You&#x27;re using an evolved fork of this \"ls\" if you&#x27;re using macOS or BSD, but if you&#x27;re on Linux you&#x27;re using a rewrite (GNU coreutils ls), and if you&#x27;re running BusyBox you&#x27;re using yet another rewrite.All of these different rewrites and forks aren&#x27;t really compatible, and you can&#x27;t reliably use anything beyond what&#x27;s in the POSIX standard if you want your scripts to run on multiple OSes.I&#x27;m not dissing \"ls\" - it&#x27;s an impressive, if old, piece of software that served us well, but it&#x27;s not inherently more survivable because it&#x27;s old. It died (in terms of being \"forked by another maintainer\") many times over, enough to make exa and eza blush.ls survied because people need it, and I that most of the highly popular rewrite-in-Rust programs are here to stay for the same reasons. Ripgrep, exa, bat and fd are probably part of the club now. \"ls\" is probably not going to die either. The POSIX standard is going to keep at least the least common denominator version alive for a long time. But for many people it could go the way that \"ed\" or \"more\" have gone.And here is a good story: \"ed\" still survived in POSIX as-is, while \"vi\" died and had to be replaced by stevie and and elvis, and then by vim. Nowadays vim is also been replaced by neovim in many circles. And yet, how many people keep using \"ed\"? Who cares if it&#x27;s stable, when vi and its descendants run circles around it? reply baz00 3 hours agorootparentThat&#x27;s mostly rubbish though.The reason ls works perfectly fine today is no one dares fuck with the interface in case they break everything that depends on 30 years of assumptions even if they do suck a little bit. That includes all the forks and rewrites.This is almost entirely missing in \"modern\" software development. And I don&#x27;t think any of us have time or energy really to track down varying different forks of something which needs to work like it did in 1990 when you run that shell script you wrote 15 years ago. reply Macha 1 hour agorootparentls does not have a consistent interface beyond the basics. And honestly, for the \"portable subset\", you may not even realise that ls is aliased to exa or lsd or whatever. This is why on why of my systems I&#x27;m sitting at right now, (MacOS) ls --help reports \"unrecognized option `--help`\" and on the other (GNU) ls reports a list of options so long that the entire alphabet is accounted for in both lower and upper case. reply baz00 1 hour agorootparent--help doesn&#x27;t do anything functional so that&#x27;s not a good example. reply Macha 1 hour agorootparent-R, --group-directories first are some notable, frequent options I use on GNU ls that are missing from MacOS ls. Along with every \"long\" option, which I like to prefer in scripts to make them more self documenting.exa actually does support both, so in a way it&#x27;s more compatible with my usage of (GNU) ls than (MacOS) ls is. reply baz00 1 hour agorootparent-R does work on macOS. It&#x27;s part of POSIX and macOS is actually certified Unix. reply gpm 57 minutes agorootparentprevls (specifically the version used on just about every linux distro) had a huge breaking change in 2016, so this is objectively false.https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;coreutils&#x2F;quotes.html reply baz00 39 minutes agorootparentI refer to my comment made before this about GNU being the wild west https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37419333 reply drivers99 39 minutes agorootparentprevThey made the change only take effect outputting directly to a tty, so it won&#x27;t break scripts. This is similar to how multi-column output and color output work. reply cmrdporcupine 2 hours agorootparentprevTell me that you don&#x27;t&#x2F;haven&#x27;t worked across a variety of Unix*en without telling me that you haven&#x27;t...Back in the day it was navigating all the crap between SunOS vs SysV, HPUX, AIX, BSD, etc and then later Solaris, Linux, etc Now it&#x27;s OS X vs Linux coreutils vs busybox etc. They all have subtle different interfaces and while there is a common basis the reality is that &#x27;ls&#x27; is a strange hill to die on for the point you&#x27;re trying to make. Like &#x27;ps&#x27;, it&#x27;s something people have messed with the flags and output a bunch of times...As others have pointed out, there is no single `ls`, and it&#x27;s been \"replaced\" in various systems many times. Yes, we have a contiguous usage of the GNU version for some time, but only really in Linux.Homogeneity has never been the name of the game in Unix culture, I don&#x27;t understand why people would insist on it now.I say: Bring on the \"modern alternatives\". I just installed lsd. I used to keep a shell alias from lsd -> ls for years anyways :-) reply baz00 2 hours agorootparentI think you&#x27;re reading me wrong.I spent a good deal of time working on SunOS (right back to m68k stuff), Solaris, HP&#x2F;UX, Linux and FreeBSD over the years and use macOS now and am more than aware of the inconsistencies.My point is that we pretty much standardised on some basic semantics around each command and what is portable and what is not. And now we&#x27;re considering moving away from those learnings back to the wild west again.I consider GNU to be a particularly bad variety of the wild west here for reference. I&#x27;m old enough to have been fucked by the differences between gawk and awk. reply dahfizz 3 hours agorootparentprevI am not anti-rewrite or anti-port. There exist good reasons to rewrite software.However, being \"modern\" is not a good reason. The gnu authors were not motivated to write the coreutils simply for the sake of modernity. And that is why their fork of ls has much greater staying power than all the \"modern\" forks. reply burntsushi 3 hours agorootparentAuthor of ripgrep here.It&#x27;s worth pointing out that while exa uses the term \"modern\" to describe itself, fd and bat currently do not. And I can say with certainty that ripgrep never used the word \"modern\" to describe itself. I didn&#x27;t like that strategy even back in 2016 personally, and specifically tried to avoid it.With that said, to try to argue the point more directly, I do think this is a somewhat shallow concern. It&#x27;s unclear to me how much predictive power using the word \"modern\" to describe a piece of software is. I don&#x27;t like it because it&#x27;s vague and its meaning is somewhat of a moving target. But broadly speaking, it does convey some things: non-POSIX, does bolder things in the name of user experience and maybe some other stuff. It&#x27;s a pithy signal. But I&#x27;m not sure it has much to do with \"staying power.\"Presumably coreutils has staying power because there is purportedly a specification covering their behavior (kinda, not really, lol) and organizations responsible for maintaining them. So if you want staying power, stick with the stuff that has a high bus factor and is well funded. That&#x27;s totally fine. reply koromak 3 hours agorootparentprevSometimes its just for fun.I wouldn&#x27;t install use exa on my CICD pipelines, but on my own machine? Sure. I like the pretty colors. If it breaks moving back to ls is fine. reply gnubison 3 hours agorootparentprevVi is in POSIX, it has been open source since 2002, and some version of it truly is on every UNIX system. reply unscaled 2 hours agorootparentAnd non of them is the original vi by Bill Joy, which has been \"deprecated\" for years now.My point is that all the FUD about \"exa\" being deprecated is just that - FUD. It&#x27;s still open source and it can be forked and carried on, just like vi did. The \"exa&#x2F;eza\" forks might even be more compatible with each other than the various vi forks&#x2F;rewrites out there, although admittedly exa is a much simpler tool.I think we&#x27;re witnessing a weird fetishization of POSIX and&#x2F;or GNU coreutils, like they are the epitome of stability, compatibility and continuity, but if you look at them historically, they are not so different from all these Rust rewrites. reply michaelmior 4 hours agoparentprevAnd it will still lack many of the features that exa has. Although it&#x27;s no longer maintained, I suspect it will also continue to work for a long time. There&#x27;s also a fork that is still maintained.Personally, I tend to avoid using replacements for POSIX tools in any shell scripts where possible for this reason. But in terms of what I use day-to-day in interactive sessions, I&#x27;ll take whatever improvements modern tools will give. reply blowski 4 hours agorootparenta.k.a. tradeoffs. You can have more features for less stability, so you need to decide what you care more about in a given context. reply michaelmior 2 hours agorootparentAbsolutely. (Although I&#x27;m not convinced that exa or a fork won&#x27;t still function perfectly fine in 20 years.) reply sod 4 hours agoparentprevThe owner of a repository dying (assumption) is an example why you don&#x27;t trust modern software?The active maintainers moved the project to a shared repository with a different name 2 years after the creator was seen anywhere. reply sbergot 4 hours agorootparentYou could argue that \"modern\" versions of old tools with a bus factor of 1 are harder to trust. reply fkyoureadthedoc 3 hours agorootparentYou could, but it doesn&#x27;t seem relevant to this post. reply HelloNurse 3 hours agorootparentThe bus has come, and this is the best possible rescue. reply sillysaurusx 4 hours agorootparentprev(Not to take away from your point.) According to https:&#x2F;&#x2F;bsago.me&#x2F;tech-notes&#x2F;feed.json the creator was active in September 2022, one year ago. So it’s probably best to assume they’re ok.Personally, I view it as a big success for open source. Someone can make something cool and vanish, and it still lives on via fork. It’s hard to think of any other type of work where that’s possible. reply qalmakka 3 hours agoparentprevI use `exa` (and now `eza`) because it provides a better experience than GNU `ls`, IMHO. Sure, I don&#x27;t _need_ it, but it&#x27;s nice. I don&#x27;t see any downside, especially since I&#x27;ve aliased it to `ls` since time immemorial and thus I only need to re-alias eza to ls again. reply 59nadir 1 hour agorootparent> I use `exa` (and now `eza`) because it provides a better than GNU `ls`, IMHO.A better what? reply devnullbrain 3 hours agoparentprevAnd exa users will still be allowed to use ls reply devnullbrain 3 hours agoprevThere&#x27;s a hint of a belief in this thread - common also in threads about alternative shells and Vim setups - that someone who uses a tool like this will irrevocably lose the knowledge of how to use ls.Am I perhaps a genius or is it just not that difficult to know two tools? reply imiric 3 hours agoparentMost people don&#x27;t type `ls` directly either. Aliases like `l`, `ll` and `la` are very common, in which case it really doesn&#x27;t matter which tool you&#x27;re using.I&#x27;ve been using `exa` for years, and my aliases work regardless if it&#x27;s installed or not. I just get a better UX if it is. reply meepmorp 3 hours agorootparent> Most people don&#x27;t type `ls` directly either. Aliases like `l`, `ll` and `la` are very common, in which case it really doesn&#x27;t matter which tool you&#x27;re using.Huh. I always use plain ls with flags and deliberately unset aliases like ll.I guess I&#x27;m weird. reply jjgreen 2 hours agorootparentYou&#x27;re not alone, is saving one character worth losing the muscle-memory? reply imiric 1 hour agorootparentIt&#x27;s hardly one character. I never need the plain output of `ls` in interactive sessions.Here are my aliases: if type exa >&#x2F;dev&#x2F;null 2>&1; then alias l=&#x27;exa -alg --color=always --group-directories-first --git&#x27; alias ll=&#x27;exa -aliSgh --color=always --group-directories-first --git&#x27; alias lt=&#x27;exa -@alT --color=always --git&#x27; alias lr=&#x27;exa -alg --sort=modified --color=always --group-directories-first --git&#x27; else alias l=&#x27;ls -alh --group-directories-first&#x27; alias ll=&#x27;ls -al --group-directories-first&#x27; alias lr=&#x27;ls -ltrh --group-directories-first&#x27; fiI still retain `ls -ltrh` in my muscle memory, but after years of typing it, `lr` has saved me a lot of time and effort.Aliases are not just a way to type less. They also serve as a way to define configuration. If I ever need to tweak the output for all my usage of `ls`, I can just add it to all aliases, as I&#x27;ve done for `--group-directories-first`. reply jjice 1 hour agorootparentprevI like ll a lot for ls -ahlF, but I do run into its absence a lot on a remote machine. At that point, I&#x27;ll just set the alias though. reply julianeon 3 hours agoparentprevI had the same thought.The “inertial hump,” the learning curve, is going to be like 30 minutes, if you take 15 of those minutes to eat a sandwich.If you want to reduce it even more, do this:1. Install new tool.2. In your .bashrc define some flag combinations that make it even more like your use of old tool, with similar-sounding aliases or even ones commonly used for old tool.3. Now in the unlikely scenario that new tool goes away, you’ll still be current w old tool from those lookalike commands. reply t43562 2 hours agoparentprevFlipping tools has a cost because we have to think more about it. I don&#x27;t know if you&#x27;ve tried flipping between the windows commandline and bash several times a day but it can be quite annoying just with things like \"\\\" compared to \"&#x2F;\" where the automatic part of your brain cannot take over for you and you have to do everything consciously. reply vermaden 4 hours agoprevJust another alias ... # WAS alias ls=&#x27;exa ...&#x27; # IS alias exa=&#x27;eza ...&#x27; alias ls=&#x27;exa ...&#x27; reply queuebert 3 hours agoparentJust another \"command not found\" on that remote machine you forgot you were on. reply xutopia 3 hours agorootparentNot hard to fix: if command -v exa &> &#x2F;dev&#x2F;null; then alias ls=&#x27;exa&#x27; fi reply Graziano_M 1 hour agorootparentI do it differently. It supports not having to reload aliases after installing. alias vim=&#x27;$(command -v nvim || echo vim)&#x27; reply t43562 3 hours agorootparentprevThis is the problem with all tools outside the most basic and you have to keep muscle memory for grep and ls to deal with it. Thus the fancy replacement tools have a cost.I can bear to pay that cost for \"fd\" (fdfind) and ripgrep but exa didn&#x27;t really offer me enough. reply jjice 1 hour agorootparentI used to subscribe to this idea too, but I&#x27;ve since tried to leave it behind. I ended up just not using tools that gave me a benefit the majority of the time. Ripgrep is a great example. So much better than grep IMO but not going to be on that remote machine. When I need to, I&#x27;ll adapt to egrep. Same with vim plugins. I ended up just not using stuff I liked so I wouldn&#x27;t get used to it. Felt backwards to me.If you spend a ton of time on remote machines you won&#x27;t get control of, I can absolutely get it though. I think as long as you know the backup and you can adapt, we&#x27;ll be fine most of the time. Knowing the idioms to get you part of the way there to the convenient functionality is a good enough mental polyfill. reply ducktective 6 hours agoprevI just use good old ls with LS_COLORS generated by vivid [1][1]: https:&#x2F;&#x2F;github.com&#x2F;sharkdp&#x2F;vivid reply otterpro 3 hours agoparentThis is the best option for me, as I want to keep full compatibility with ls instead. reply Otek 6 hours agoprevI have alias ls=exa in my config for almost two years now. It’s honestly great. I guess I’ll use eza from now reply perihelions 5 hours agoprevThis might affect me and other Debian stable users in the year 2025. The conservative side of the FOSS world rocks.exa&#x27;s great; it&#x27;s a polished, feature-rich ls(1) that broadly improves on GNU ls. The --tree view is awesome; I wish more tools used that UX pattern. The only other one I can immediately remember is pstree. reply broodbucket 5 hours agoparentI have the opposite feeling about package lethargy, I don&#x27;t want to remember that exa is now eza at the time that my distro finally gets around to packaging eza, I want to do it now when it&#x27;s right in front of me.I&#x27;ll go try lsd instead (and then I&#x27;ll try the other ls rewrite, har har) reply perihelions 5 hours agorootparentEhh, I guess I&#x27;m your opposite. I want to be insulated from exciting upstream developments, especially for stable, boring stuff like coreutils. I want those to be boring. I don&#x27;t want \"exa is now eza\" or whatever push-notified to my command line on a random Tuesday. reply KptMarchewa 5 hours agorootparentI want those to be boring for my scripts; I want modern replacements for my manual use. reply broodbucket 5 hours agorootparentprevI guess so, I&#x27;ve been running Arch on most of my servers for the last decade. Sometimes the fragmentation of the ecosystem comes in handy! reply basedrum 4 hours agorootparentprevYet you read hacker news, where you get pushed the latest thing every day reply tlamponi 2 hours agorootparentprevThe Debian maintainer of the exa package can, and probably will, either:- just add a backward compat alias- make eza a transitive dependency so that exa can be sunset cleanly and adds a NEWS file entry that every user will see on upgrade to the version that drops the exa binary. reply post-factum 5 hours agorootparentprevIn case you are an Arch user, eza is already there. reply robertlagrant 5 hours agoprevA Douglas Adams reference in the readme and British spellings in CLI options? Sign me up! reply shapeshed 3 hours agoprevThere is something to be said for boring, reliable software. New languages seem to rewrite UNIX tools and abandon them as a rite of passage. reply rumdz 2 hours agoprev> https:&#x2F;&#x2F;github.com&#x2F;eza-community&#x2F;eza&#x2F;releases&#x2F;tag&#x2F;v0.11.0> A new minor release, and the first minor release in the lifetime of eza. Why a minor release? Because we just landed windows support, that&#x27;s why!Windows support, woohoo! reply kbd 5 hours agoprevI never used exa as a general `ls` replacement, but I did use it as a `tree` replacement. Its tree view that gives you file stats from ls alongside a `tree`-like view I haven&#x27;t found replicated in any other tool.Here are the aliases I use: et() { exa -alT --git -I&#x27;.git|node_modules|.mypy_cache|.pytest_cache|.venv&#x27; --color=always \"$@\"less -R; } alias et1=&#x27;et -L1&#x27; alias et2=&#x27;et -L2&#x27; alias et3=&#x27;et -L3&#x27;exa never handled git ignores correctly so I had to manually provide common ignores with -I. But the above alias provides a scrollable tree view, with files colorized according to LS_COLORS, with file stats like `ls -l`, that I haven&#x27;t found provided by any other tool. Suggestions for replacements welcome. reply dystroy 5 hours agoparentMaybe use broot ? Its tree view is its main feature and it handles gitignore and shows many stats including dir sizes. https:&#x2F;&#x2F;dystroy.org&#x2F;broot&#x2F;You can use it just like the original tree tool too: https:&#x2F;&#x2F;dystroy.org&#x2F;broot&#x2F;tricks&#x2F;#replace-tree(disclaimer: broot author) reply kbd 4 hours agorootparentThanks for your comment. I have broot installed, but it never sticks in my workflow. I didn&#x27;t know you could use it as a tree replacement like that, adding file stats & exiting.It almost works to replace the way I use exa tree, with these caveats:- I want to not have it elide files (\"7 unlisted\") at each level. I have my et1, et2, etc. aliases to customize how many levels of detail I get with exa&#x27;s tree replacement, and then I scroll that with my pager.- I want it to support LS_COLORS so the files look the same as they do in `ls`- I want the git status display that exa gives (eg. it shows I if the file is ignored).- is it possible to customize the order in which the stats are shown? It&#x27;d be nice if they match ls more closely. Exa feels like `ls` with extra colors and a tree, broot feels different. reply dystroy 4 hours agorootparentThe ability to have broot immediately exit is based on its ability to receive commands, either at start or through sockets. So in this case we&#x27;re just doing `br --cmd :print_tree`. The same strategy can be used to add searches, filters, toggles, etc. before printing the tree (or printing a path).To not elide files, the easiest solution is to provide a max height: `tree --height 5000`No support of LS_COLORS exactly.No option today to show on a file whether it is gitignored (never considered this: my users either show gitignored files or don&#x27;t).You can completely customize file properties order: https:&#x2F;&#x2F;dystroy.org&#x2F;broot&#x2F;conf_file&#x2F;#columns-order(it&#x27;s hard to answer complex questions and rfc here, maybe come to the chat for an interactive discussion ?) reply cb321 5 hours agorootparentprevThis kind of thing should probably be generalized so that any new parameter can be seamlessly woven into your `ls-like` reports.https:&#x2F;&#x2F;github.com&#x2F;c-blake&#x2F;lc&#x2F;blob&#x2F;master&#x2F;extensions&#x2F;fe1 does `du` (like your example) as a f)ormat e)xtension, but you could use `ffprobe` to do the run-time in hours:minutes:seconds for media files (or maybe 0sec for non-media) or number of git commits or age of last VC commit as an extra timestamp or numerous other things. reply stavros 5 hours agorootparentprevThat seems great, thanks! reply Macha 5 hours agoparentprevI have an alias that I use as a git status replacement that gives an actual tree of the changes exa --long --no-permissions --no-user --no-time --no-filesize --git --tree --color=alwaysrg -v -- &#x27;--&#x27; $argvLooks like for eza, I need to add a &#x27;--git-ignore&#x27;. I guess exa used to imply that from --git. reply froh 1 hour agoprevthe community fork \"eza\" is not is it?https:&#x2F;&#x2F;github.com&#x2F;eza-community&#x2F;eza reply blueflow 5 hours agoprevexa: 8 years, deadls: 38 years and counting.Long live ls. reply minorannoyance2 5 hours agoparentSeems a bit unfair to call it dead, exa&#x27;s maintainer is unreachable, but the whole thing lives on as eza and is very much alive. That&#x27;s a bit like saying that any company&#x2F;product that changes it&#x27;s name is dead at that point. reply dahfizz 4 hours agorootparentEveryone who has exa installed and setup aliases now has to uninstall, install a new tool, and edit their workflows.exa is dead. People can move to yet another ls replacement, but they can&#x27;t stay on exa. reply minorannoyance2 1 hour agorootparentThis seems to heavily exaggerate the problem IMHO. Most sane people don&#x27;t replace any of the basic tools like exa on critical infra that is expected to be low maintenance. Exa is a tool you install in terminals you personally use, purely for your personal comfort. And due to this situation it needs to be manually updated to a new name&#x2F;new source, it&#x27;s a one time operation. Surely not ideal, but hardly an unsurmountable obstacle. People using tools like this aren&#x27;t exactly the sort of audience that is unfamiliar with having to install&#x2F;uninstall a package. reply Sparkle-san 2 hours agorootparentprevYou could stay on the current version of exa and likely not have an issue for years down the road. reply torstenvl 5 hours agoparentprevI like vanilla `ls` but I do miss some display options from GNU ls when I&#x27;m on Mac, e.g., grouping directories first.Luckily, of course, it&#x27;s open source, so I just added the options I needed.https:&#x2F;&#x2F;github.com&#x2F;torstenvl&#x2F;betterls if anyone is interestedexa seemed like overkill for my needs, and it was easier to add a couple lines of code than to learn a whole new tool. reply cb321 5 hours agorootparentIt&#x27;s also a whole other tool and in Nim to boot, but https:&#x2F;&#x2F;github.com&#x2F;c-blake&#x2F;lc allows you to group \"dot-directories\" before \"dot-files\" before \"non-dot directories\" before non-dot files.There might be enough other new functionality such as abbreviation or multi-attribute colorization schemes to motivate learning a new tool. E.g., neither \"dot-ness\" nor \"directory-ness\" in the above is hard-coded. They could be any other convenient elements of the typology &#x2F; taxonomy. reply pneumic 1 hour agorootparentprevon mac I do this: alias ls=&#x27;LC_COLLATE=C \\ls -F&#x27;doesn&#x27;t sort dot directories before dot files, but it&#x27;s good enough reply gray_-_wolf 5 hours agorootparentprevYou could also just install coreutils via brew... reply torstenvl 5 hours agorootparentLast I checked, GNU coreutils don&#x27;t know anything about, e.g., macOS extended attributes.I specifically wanted to stay close to stock because macOS `ls` is designed for the system it runs on. Installing coreutils would be counterproductive. reply frou_dh 5 hours agoparentprevhttps:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Lindy_effect in action. reply zanellato19 2 hours agoparentprevWhich ls is 38 years? Forks don&#x27;t count. reply ohgodplsno 4 hours agoparentprevpneumatic drill: 8 years, deadthe sharp stick of metal my dad gave me: 38 years and countinglong live the sharp stick of metal ?What a terrible take. Yes, ls is maintained. Although, maintained is a very strong word. It exists. It&#x27;s getting a few maintenance commits here and there, and in the mean time, it&#x27;s feature done. It won&#x27;t evolve anymore. Just like how exa will keep existing, and won&#x27;t evolve anymore. Exa also does a hell of a lot more than ls, so will LSD, Eza and others. But keep using the sharp stick of metal if it makes you feel better. reply basedrum 4 hours agorootparentI like how people are arguing that ls is alive, like there is active work being done on it over 38 years. A Unix tool that does one thing well can be considered finished and sit for years without anything going on. That doesn&#x27;t mean it&#x27;s dead. Sure, maybe people want fancy new stuff, but again, doesn&#x27;t mean dead. If it had security problems for years, then one could argue that it&#x27;s dangerous for it not to be updated and if it isn&#x27;t, then proclaim it dead so people will move to something safer, but this trend to call something dead because it isn&#x27;t in rust and doesn&#x27;t have colors and git awareness? Meh reply ohgodplsno 4 hours agorootparentExactly! ls is alive, and just exists, mostly. The commits done on it are extremely minor changes to save up 0.0001% of performance and because the APIs it was using are sometimes deprecated. And that&#x27;s fine!However, when a new project arrives and does more, suddenly it&#x27;s dogshit because it&#x27;s stopped evolving despite doing infinitely more than ls.Unixheads have a weird inferiority complex when it comes to anything not in coreutils. reply sebastianz 4 hours agorootparentprev> Yes, ls is maintained. Although, maintained is a very strong word. It exists.Why would it be a strong word? Here it is, in src&#x2F;ls.c: https:&#x2F;&#x2F;github.com&#x2F;coreutils&#x2F;coreutilsIt is then packaged by tens of operating system distributions, who themselves maintain extra patchsets, some of which are then upstreamed.It is installed and used on millions (billions?) of devices, for 3 decades.It&#x27;s a very reliable and trusty \"sharp stick of metal\" :) reply andwomggazzz662 3 hours agorootparentThat&#x27;s GNU coreutils. reply sebastianz 2 hours agorootparentYes, and it includes the \"ls\" program that this thread discusses. reply dahfizz 4 hours agorootparentprevls is very actively maintained http:&#x2F;&#x2F;git.savannah.gnu.org&#x2F;cgit&#x2F;coreutils.git&#x2F;log&#x2F; reply blueflow 4 hours agorootparentprevGood for you if you accept that your tools might get rug-pulled from you any time. I don&#x27;t. reply ohgodplsno 4 hours agorootparentIs exa gone ? Can you not download exa anymore ? Are the binaries deleted from the internet ? Is the source completely overwritten ? Has it been removes from crates.io and from package managers ? Has it suddenly stopped listing files in your folders?Calling it having your tools rug-pulled from you is, quite frankly, the most moronic thing I&#x27;ve read today. reply blueflow 4 hours agorootparentNot yet. reply stavros 5 hours agoparentprevLooks like ls had its latest commit three days ago:http:&#x2F;&#x2F;git.savannah.gnu.org&#x2F;cgit&#x2F;coreutils.git&#x2F;commit&#x2F;src&#x2F;ls...Then again, ls is much more popular than exa. reply cb321 5 hours agoprevhttps:&#x2F;&#x2F;github.com&#x2F;c-blake&#x2F;lc in Nim might interest someone interested in a latterday &#x27;ls&#x27;.The screenshots should probably show underlined hard-links or italicized symlinks or other examples of \"multi-file-attribute\" -to- \"multi-text-attribute\" mapping. That kind of multi-ness seems generally neglected in this report generation space. reply zaptheimpaler 5 hours agoprevI love exa but that grid bug was bugging me - its fixed in the fork! See here:https:&#x2F;&#x2F;github.com&#x2F;eza-community&#x2F;eza reply ldelossa 3 hours agoprevStill in fedora repos. Not deprecated for me, haha. reply PurpleRamen 2 hours agopreveza seems not like a pretty good replacement, when the first thing I see are broken icons and colors. I guess staying with exa is ok, at least it&#x27;s doing it&#x27;s job. reply baz00 3 hours agoprevThe only ls replacement I have installed is sl. And that&#x27;s really just a typing aid. reply theCodeStig 5 hours agoprevI use exa daily, and this is the first time that I’ve heard of eza. From a marketing standpoint, eza should be merged upstream. reply activitypea 5 hours agoparent> This repository isn’t archived because the only person with the rights to do so is unreachable reply lolrustasusual 3 hours agoprev [2 more] [flagged] timeon 3 hours agoparent [–] Not sure what your point is.It seems that you have beef with the language so you extrapolate lack of maintenance of one project to whole ecosystem?Is that right? replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The exa project is an open-source tool designed as a contemporary substitute for the \"ls\" command, offering additional features and improved defaults.",
      "This tool employs color coding to differentiate file types and is well-informed about symlinks (symbolic links), extended attributes, and Git, a distributed version control system.",
      "The exa tool is characterized by its small size, high speed, and compatibility with macOS and Linux systems; the post includes information on installation procedures and methods of developing and testing the tool using Vagrant, a tool for building and maintaining portable virtual software development environments."
    ],
    "commentSummary": [
      "The users are having a dialogue about various command-line utilities, primarily focusing on the \"ls\" command and its alternatives like \"exa\" and \"lsd\", debating their strengths and weaknesses.",
      "The conversation also gravitates towards the significance of open-source developers in conveying their status, exploring the possibilities for forks and rewrites in software.",
      "They also delve into the balance between stability and innovation in software development, illustrating the trade-offs involved."
    ],
    "points": 214,
    "commentCount": 178,
    "retryCount": 0,
    "time": 1694077580
  }
]
