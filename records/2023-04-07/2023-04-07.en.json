[
  {
    "id": 35468753,
    "timestamp": 1680791410,
    "title": "If we lose the Internet Archive, we're screwed",
    "url": "https://www.sbstatesman.com/2023/04/04/if-we-lose-the-internet-archive-were-screwed/",
    "hn_url": "http://news.ycombinator.com/item?id=35468753",
    "content": "If we lose the Internet Archive, we're screwed \u2013 The StatesmanSkip to contentThe Statesman\u00a0 Informing Stony Brook University For More Than 60 YearsNewsArts & CultureMultimediaOpinionsSports Women\u2019s BasketballMen\u2019s BasketballWomen\u2019s LacrosseMen\u2019s LacrosseWomen\u2019s SoccerMen\u2019s SoccerSoftballSwimmingTennisVolleyballFootballBaseballSpecial IssuesJoin Us About UsContact UsWork For UsAdvertiseDonateClassifiedsMore  Username or Email AddressPassword Remember MeLost Password?Register SearchSearch for: Follow us:FacebookTwitterInstagramYouTubeEmailRSSMore MenuThe Statesman\u00a0 Informing Stony Brook University For More Than 60 Years SearchSearch for: Opinions If we lose the Internet Archive, we\u2019re screwed Christine KelleyApril 4, 2023April 6, 2023 ShareTweetPin itShareEmailMore The Internet Archive was founded in 1996. A federal judge recently ruled that its Emergency Library program violated copyright law. CREATIVE COMMONS If you\u2019ve ever researched anything online, you\u2019ve probably used the Internet Archive (IA). The IA, founded in 1996 by librarian and engineer Brewster Kahle, describes itself as \u201ca non-profit library of millions of free books, movies, software, music, websites, and more.\u201d Their annals include 37 million books, many of which are old tomes that aren\u2019t commercially available. It has classic films, plenty of podcasts and \u2014 via its Wayback Machine \u2014 just about every deleted webpage ever.Four corporate publishers have a big problem with this, so they\u2019ve sued the Internet Archive. In Hatchette v. Internet Archive, the Hachette Publishing Group, Penguin Random House, HarperCollins and Wiley have alleged that the IA is committing copyright infringement. Now a federal judge has ruled in the publishers\u2019 favor. The IA is appealing the decision.When Julius Caesar burned the Library of Alexandria, it was harder to imagine a greater destruction of scholarship. Now, 2,000 years later, some petty, litigious schmucks are ready to deal an even bigger blow to the literary canon.This is fundamentally a strike against taxpayer-funded public services by corporations and private individuals. While Hatchette and other publishers ultimately formulated the assault on the IA, novelists were cheering them on. Novelist Chuck Wendig disingenuously criticized the IA\u2019s Emergency Library, saying that \u201cartists get no safety net,\u201d and pointed out unemployment and healthcare costs for writers.AdvertisementThe IA is undoubtedly great for scholarship and literacy. It might be an objective contender for the best site on the World Wide Web. That\u2019s not just my word as an idiosyncratic scholar of genealogy, history and media. Organizations from Boston Public Library and Trent University in Ontario to WorldCat and OCLC collaborate with the Internet Archive to preserve oodles of books. The IA doesn\u2019t even require a library card. If you have Internet access, you can use it.Let\u2019s examine why exactly the plaintiffs are upset about IA. In 2020, the IA introduced the National Emergency Library, which made copyrighted books available for free during the COVID-19 pandemic. The publishers behind the lawsuit alleged that this entailed copyright infringement. The judge, who was hostile from the beginning, decided to rule in the publishers\u2019 favor. In essence, a federal judge ruled against a program benefiting American taxpayers, in which multiple government-funded public libraries participate.There\u2019s no evidence the borrowing program scooped up any independent writers\u2019 income. And furthermore, do economically disadvantaged readers not deserve access to books? Shutting down a short-term borrowing program is far more disastrous to the working class than access to books can ever be.Not only is this concern-trolling disingenuous, but the ruling itself, grounded in copyright, is a smack against fair use. It brings us one step closer to perpetual copyright \u2013 the idea that individuals should own their work forever. The IA argued that their project was covered by fair use, as the Emergency Library provides texts for educational and scholarly purposes.AdvertisementEven writers objected to the court\u2019s ruling. More than 300 writers signed a petition against the lawsuit, including Neil Gaiman, Naomi Klein and \u2013 get this \u2013 Chuck Wendig. Writers lost nothing from the Emergency Library and gained everything from it. For my part, I\u2019ve acquired research materials from the IA that I wouldn\u2019t have found anywhere else. The archive has scads of primary sources which otherwise might require researchers to fly across the country for access.The Internet Archive is good for literacy. It\u2019s good for the public. It\u2019s good for readers, writers and anyone who\u2019s invested in literary education. It does not harm authors, whose income is no more dented by it than any library programs. Even the Emergency Library\u2019s initial opponents have conceded this. The federal court\u2019s decision is a victory for corporations and a disaster for everyone else. If this decision isn\u2019t reversed, human beings will lose more knowledge than the Library of Alexandra ever contained. If IA\u2019s appeal fails, it will be a tragedy of historical proportions.Christine KelleyChristine Kelley is The Statesman\u2019s opinions editor and a senior journalism major. She also holds an Associate\u2019s degree in Creative Writing. When she\u2019s not editing The Statesman\u2019s op-eds, Christine blogs about Hobbits and geography at Eruditorum Press.Tagged: Christine Kelley Chuck Wendig editorial Emergency Library Fair use HarperCollins Hatchette Internet Archive Julius Caesar Library of Alexandria Naomi Klein Neil Gaiman Op-Ed opinions Penguin Random House Public libraries Wiley WorldCat Leave a CommentLeave a Reply Cancel replyYour email address will not be published. Required fields are marked *Comment Name * Email * Website Save my name, email, and website in this browser for the next time I comment. \u0394 This site uses Akismet to reduce spam. Learn how your comment data is processed. Related Stories  The books that made us: Christine KelleyMarch 21, 2023  How coming out helped me connect with my Southern upbringingMarch 21, 2023March 27, 2023  Super Bowl commercials fumbled in creativityMarch 5, 2023  El Salvador: \u201cCoolest\u201d country is failing women and LGBTQ peopleMarch 1, 2023March 5, 2023  The Ohio chemicals disaster is normal \u2014 and that\u2019s a bad thingMarch 1, 2023  Lionel Messi proves the U.S. should take soccer seriouslyJanuary 23, 2023 Get the latest articles in your inbox.Advertisement News AdministrationAlumniFacultyFeaturesLong IslandSTEMStudent LifeUSG\u00a0 ARTS & CULTURE CultureDanceMoviesMusicTheaterTV Multimedia PhotosPodcasts Opinions EditorialsOnion BagelOp-Eds Sports BaseballFootballMen\u2019s BasketballMen\u2019s LacrosseSoccerSoftballVolleyballWomen\u2019s BasketballWomen\u2019s Lacrosse More Join UsAbout UsContact UsAdvertiseDonateClassifieds FacebookTwitterYoutubeInstagram \u00a9 2021 Statesman Association Inc. All Rights Reserved. The Statesman\u00a0 Informing Stony Brook University For More Than 60 Years Create a Menu in Menus and assign it as Hidden Menu in Theme Location",
    "summary": "The Internet Archive, which describes itself as \"a non-profit library of millions of free books, movies, software, music, websites, and more,\" has been sued by four corporate publishers for committing copyright infringement, and a federal judge has ruled in favor of the publishers. However, the Internet Archive is appealing the decision, which some argue is fundamentally a strike against taxpayer-funded public services by corporations and private individuals. Critics argue that shutting down the National Emergency Library, which made copyrighted books available for free during the COVID-19 pandemic, is far more disastrous to the working class than access to books can ever be. If the appeal is unsuccessful, human beings will lose more knowledge than the Library of Alexandra ever contained.",
    "hn_title": "If we lose the Internet Archive, we\u2019re screwed",
    "original_title": "If we lose the Internet Archive, we\u2019re screwed",
    "score": 1437,
    "hn_content": "The potential loss of the Internet Archive sparks a discussion about copyright laws and their impact on cultural preservation. HN users debate the fairness and harm of copyright laws, questioning the legitimacy of copyright and who should profit from creative works. The IA's recent legal battles raise questions about the legality of copyright and government-granted monopolies. Some call for better governance structures and regulation to encourage cultural work and shorter copyright terms. Losing the case could mean that the government and private enterprise could rewrite history, highlighting the importance of preserving knowledge.The Internet Archive is facing accusations of illegal activity that could lead to its shutdown and casting a bad precedent. Some users suggest starting a new entity without previous decision-makers or stopping donations due to risky behavior. Despite that, others still love and use the website, and its National Emergency Library is seen as unexpected, courageous, and beneficial. Leaders of the IA have a great responsibility to preserve history and not selectively preserve what they want.",
    "hn_summary": "HN users debate copyright laws and cultural preservation. Legal battles raise questions about copyright legitimacy and government monopolies. Some call for better governance to encourage work and shorter copyright terms. Losing the IA could rewrite history, highlighting knowledge preservation importance. Suggestions to start new entity or stop donations due to IA's risky behavior. National Emergency Library seen as unexpected and beneficial, but IA leaders have a responsibility to preserve history."
  },
  {
    "id": 35465729,
    "timestamp": 1680769340,
    "title": "Chrome ships WebGPU",
    "url": "https://developer.chrome.com/blog/webgpu-release/",
    "hn_url": "http://news.ycombinator.com/item?id=35465729",
    "content": "Chrome ships WebGPU - Chrome DevelopersSkip to content   Home Docs Blog  Articles   Home Docs Blog  Articles The Chrome team is back at Google I/O on May 10! Register now DismissBlog Chrome ships WebGPUAfter years of development, the Chrome team ships WebGPU which allows high-performance 3D graphics and data-parallel computation on the web.Published on Thursday, April 6, 2023 Fran\u00e7ois BeaufortDives into Chromium source codeGitHub Corentin WallezGraphics plumber at GoogleTwitter GitHub MastodonTable of contents A new dawn for web graphicsBrowser supportLibrary supportResourcesAcknowledgmentsThe Chrome team is thrilled to announce that WebGPU is now available by default in Chrome\u00a0113, which is currently in the Beta channel. WebGPU is a new web graphics API that offers significant benefits such as greatly reduced JavaScript workload for the same graphics and more than three times improvements in machine learning model inferences. This is possible due to more flexible GPU programming and access to advanced capabilities that WebGL does not provide.This initial release of WebGPU is available on ChromeOS, macOS, and Windows. Support for other platforms is coming later this year.# A new dawn for web graphicsWebGPU is a new API for the web, which exposes modern hardware capabilities and allows rendering and computation operations on a GPU, similar to Direct3D 12, Metal, and Vulkan. Unlike the WebGL family of APIs, WebGPU offers access to more advanced GPU features and provides first-class support for general computations on the GPU. The API is designed with the web platform in mind, featuring an idiomatic JavaScript API, integration with promises, support for importing videos, and a polished developer experience with great error messages.This initial release of WebGPU serves as a building block for future updates and enhancements. The API will offer more advanced graphics features, and developers are encouraged to send requests for additional features. The Chrome team also plans to provide deeper access to shader cores for even more machine learning optimizations and additional ergonomics in WGSL, the WebGPU Shading Language.WebGPU is the result of a collaborative effort by the W3C's \"GPU for the Web\" Community Group, which includes contributions from major companies such as Mozilla, Apple, Intel, and Microsoft. After six years of development (90 contributors, 2000 commits, 3000 issues), from the initial design in 2017, the first implementation is now available in Chrome, with support for Firefox and Safari in progress.Both the Dawn library for Chromium and the wgpu library for Firefox are available as standalone packages, and they offer great portability and ergonomic layers that abstract OS GPU APIs. Using these libraries in native applications also makes it easier to port to WASM through Emscripten and Rust web-sys.# Browser supportThis initial release of WebGPU is available in Chrome\u00a0113 on ChromeOS devices with Vulkan support, Windows devices with Direct3D 12 support, and macOS. Linux, Android, and expanded support for existing platforms will come soon.WebGPU is currently a work-in-progress in Firefox and Safari, in addition to the initial implementation in Chrome.# Library supportMany widely used WebGL libraries are already in the process of implementing WebGPU support or have already done so. This means that using WebGPU may only require making a single line change:Babylon.js has full WebGPU support already, see demo.PlayCanvas announced initial WebGPU support.TensorFlow.js supports WebGPU-optimized versions of most operators.Three.js WebGPU support is underway, see examples.# ResourcesWebGPU is a significant technology, and we recommend the following resources to learn more:Check out the W3C specifications for WebGPU and WGSL.Experiment with samples and explore WGSL with a tour.Look at the MDN documentation.Read the official explainer and best practices.Learn about GPU compute and more.# AcknowledgmentsMany thanks to all Chromium contributors and especially to Intel folks for their invaluable support in making this possible.Chrome 113Updated on Thursday, April 6, 2023 \u2022 Improve article Table of contentsA new dawn for web graphicsBrowser supportLibrary supportResourcesAcknowledgmentsFollow us  Contribute File a bug View source Related content web.dev Case studies Podcasts Connect Twitter YouTube GitHub Chrome Firebase All products Privacy TermsContent available under the CC-BY-SA-4.0 licenseWe serve cookies on this site to analyze traffic, remember your preferences, and optimize your experience. More details Ok, Got it.",
    "summary": "Chrome launches WebGPU, a new web graphics API offering improved 3D graphics and data-parallel computation on ChromeOS, macOS, and Windows, to provide access to advanced GPU capabilities and efficient programming with the web platform. WebGPU is designed with an idiomatic JavaScript API, integration with promises, and great error messages, and it's a building block for future improvements, such as access to shader cores for more machine learning optimizations, and greater ergonomics in WGSL. WebGPU is the result of a 6-year collaborative effort by W3C's \"GPU for the Web\" Community Group, including contributions from Mozilla, Apple, Intel, and Microsoft. ChromeOS, Windows, and macOS platforms can support WebGPU, with Linux, Android, and other platforms expanding support in the near future. Popular WebGL libraries, like Babylon.js, PlayCanvas, and TensorFlow.js, already offer some WebGPU support or are working on it. Resources to learn more about WebGPU include W3C specifications, MDN documentation, samples, GPU compute, among others.",
    "hn_title": "Chrome ships WebGPU",
    "original_title": "Chrome ships WebGPU",
    "score": 801,
    "hn_content": "Chrome has shipped WebGPU, a modern graphics API designed eight years ago, promising improvements over the outdated WebGL. While WebGPU implementations are still immature, it opens possibilities for new creative territory in UI/UX for applications and the burgeoning field of AI, although it may be limited by memory bandwidth over flop capability. The technology is promising for desktop and mobile environments, although new developments like bindless everything and mesh shaders are not yet supported by WebGPU as they are for Vulkan.WebGPU is being discussed as opinions vary on whether or not desktop or mobile GPUs should be prioritized, with some arguing that mobile should be ignored entirely, but others saying that it is the more important platform overall. Bindless rendering is mentioned as an update to classical OpenGL, with it being generally more flexible but also more difficult to use. The overall tone is positive, with contributors agreeing that WebGPU is a game changer and a significant milestone in the tech industry.WebGPU 1.0 is a new web API that provides access to advanced GPU features for rendering and computation operations. It is a lowest common denominator product and runs machine learning workloads, and getting better performance is an engineering challenge. Native extension 'Bindless' is being developed by the WebGPU team for better performance support. Despite some challenges in portability concerns, WebGPU offers a productive learning platform for modern techniques, compute and general computations on the GPU. TensorFlow or Torch offers all the tensor operations and abstracts the hardware for ML practitioners, while Nvidia and CUDA offers maximum performance on hardware today.Users may ignore prompts for granting permissions that warn of 3D graphics or fingerprinting. An HN user suggests putting WebGL/WebGPU behind permission. Some APIs may change more state than what is rendered on a screen, and users expect browsers to change screen contents. Saturation of permissions requests for every website may lead to user fatigue and mindlessly clicking on prompts. The ideology of fingerprinting is unreliable for real-world use, so it's not a priority for highly paid Google developers to work on it. Alternative browsers are available for users seeking privacy-oriented options.An HN user suggests locking down untrusted websites on browsers to prevent them from sending information to servers; others contend that implementing this would slow down computations and the purpose of hardware acceleration. Some users suggest putting unnecessary features like WebRTC, WebGL, and programmatic Audio API behind a permission. However, they disagree on who gets to decide what qualifies as \"unnecessary.\" Another user suggests that only JavaScript should require explicit consent, while CSS should not leak fingerprint information. A few users discuss the possibility of fixed-time rendering as a means of thwarting fingerprinting. However, there are doubts regarding its practicality in terms of performance. Overall, the conversation centers on ways to prevent fingerprinting, but users are divided on which approaches will be effective.Users discuss ways to limit information-leaky browser features, with one user wishing for easy on-demand toggling and another recommending Firefox with resistFingerprinting. Some users point out the trade-off between maximum performance and fingerprinting, while others mention specific features that are commonly used for fingerprinting purposes. Discussion ensues about the difficulty of bit-exact output and hardware limitations. While some sarcastically suggest that fingerprinting may be a feature for those who profit from tracking, others emphasize the importance of respecting user privacy and eliminating covert tracking techniques.Users debate the potential uses and misuses of WebGPU and WebGL, expressing concerns about increased fingerprinting opportunities and potential malicious use for cryptocurrency mining. Some criticize Google for potential privacy violations, though others defend Chrome's efforts to protect user privacy while also adding new features. Several commenters express a preference for a clear distinction between \"apps\" and \"documents\" in web browsing. A few express a desire for a return to Flash, with some hoping for an open-source version. Overall, the comments focus on issues of privacy and security in web browsing.Several developers suggest implementing a permission request mechanism for APIs similar to the Chrome apps model, as many APIs require permissions to be useful, but it may be hard to solve. One HN user cautions that permission requests can be abused, citing the example of Android flashlight apps asking for various permissions. Another user raises questions about WebGPU and its potential for fingerprinting. Despite the potential issues, many users view the WebGPU release in Chrome positively, as it offers a way to abstract over ecosystem differences and write cross-platform graphics code. There is a debate about abstractions potentially stifling innovation, but many users would like to see user-friendly abstractions on top of lower-level graphics APIs.Google has launched WebGPU, an experimental graphics API for the web that aims to provide a low-level, low-overhead interface between applications and graphics and compute hardware, which is incompatible with previous graphics standards like canvas and WebGL. While the use of WebGPU outside the browser has been available for decades through middleware, it will suffer as an additional incompatible shading language and has extensions, which are not available on browsers, further complicating code compatibility with browsers that support WebGPU. Some HN users share their experiences with the new graphics standard, noting that it brings important improvements over WebGL's programming model that are impossible to implement, like reducing CPU overhead. However, it is not a perfect solution and has downsides, and WebGPU is currently unavailable on Linux due to the unavailability of the Vulkan backend.Web3DSurvey, a website that tracks features and limits related to WebGPU, received attention from developers and HN users. The website aims to replace long-defunct WebGL Stats, providing a concise and easy-to-understand interface to view information about WebGPU's capabilities. Although some comments expressed concern about the potential for malicious actors to use WebGPU for mining cryptocurrency, the website was generally well-received, and users appreciated the convenience it offered. Furthermore, the comments discussed the potential impact of WebGPU in the development of graphics engines, custom renderers, and visualization tools.Comments on Hacker News discuss concerns about the incentives to steal GPU cycles to mine cryptocurrency, meanwhile, others are excited about the potential for WebGPU to be shipped in Chrome/Edge, allowing modern browsers to replace the need for software installation on computers. Some worry about browser bloat and the potential for bad and malicious code, while others see it as a net gain for the removal of bloat from web apps. There are concerns about the limitations of WebGPU compared to more capable graphics technologies, but overall, there seems to be excitement about the potential for this technology to be widely adopted.",
    "hn_summary": "Chrome has shipped WebGPU, which promises improvements over WebGL. WebGPU is a game changer with positive contributions; opinions vary on whether desktop or mobile GPUs should be prioritized. Users discuss ways to limit information-leaky browser features and prevent fingerprinting. There are concerns about the potential malicious use for cryptocurrency mining. Web3DSurvey tracks features and limits related to WebGPU. There is excitement about the potential for WebGPU to be widely adopted, despite concerns about limitations compared to more capable graphics technologies."
  },
  {
    "id": 35470915,
    "timestamp": 1680799217,
    "title": "Show HN: Tabby \u2013 A self-hosted GitHub Copilot",
    "url": "https://github.com/TabbyML/tabby",
    "hn_url": "http://news.ycombinator.com/item?id=35470915",
    "content": "GitHub - TabbyML/tabby: Self-hosted AI coding assistantSkip to contentToggle navigation      Sign\u00a0up          Product    Actions    Automate any workflow   Packages    Host and manage packages   Security    Find and fix vulnerabilities   Codespaces    Instant dev environments   Copilot    Write better code with AI   Code review    Manage code changes   Issues    Plan and track work   Discussions    Collaborate outside of code   Explore   All features     Documentation     GitHub Skills     Blog      Solutions    For   Enterprise     Teams     Startups     Education  By Solution   CI/CD & Automation     DevOps     DevSecOps  Case Studies   Customer Stories     Resources      Open Source    GitHub Sponsors    Fund open source developers   The ReadME Project    GitHub community articles   Repositories   Topics     Trending     Collections  Pricing    In this repository       All GitHub   \u21b5   Jump to   \u21b5No suggested jump to results    In this repository       All GitHub   \u21b5   Jump to   \u21b5    In this organization       All GitHub   \u21b5   Jump to   \u21b5    In this repository       All GitHub   \u21b5   Jump to   \u21b5        Sign in             Sign up          TabbyML /tabbyPublic Notifications Fork  20      Star 904     Self-hosted AI coding assistant   tabbyml.github.io/tabbyLicense   Apache-2.0 license  904     stars 20     forks      Star  Notifications CodeIssues4Pull requests0ActionsProjects0SecurityInsights More          Code          Issues          Pull requests          Actions          Projects          Security          Insights TabbyML/tabbyThis commit does not belong to any branch on this repository, and may belong to a fork outside of the repository.mainSwitch branches/tagsBranchesTagsView all branchesView all tagsName already in use   A tag already exists with the provided branch name. Many Git commands accept both tag and branch names, so creating this branch may cause unexpected behavior. Are you sure you want to create this branch?  Cancel  Create12branches0tags CodeLocal Codespaces  Clone      HTTPS       GitHub CLI     Use Git or checkout with SVN using the web URL.     Work fast with our official CLI.   Learn more.    Open with GitHub Desktop  Download ZIP Sign In Required        Please        sign in        to use Codespaces.       Launching GitHub Desktop  If nothing happens, download GitHub Desktop and try again. Launching GitHub Desktop  If nothing happens, download GitHub Desktop and try again. Launching Xcode  If nothing happens, download Xcode and try again. Launching Visual Studio CodeYour codespace will open once ready.There was a problem preparing your codespace, please try again.Latest commit wsxiaoysUpdate README.md    \u2026       cfbcff6   Apr 6, 2023Update README.mdcfbcff6Git stats181           commits          FilesPermalink  Failed to load latest commit information.  TypeNameLatest commit messageCommit time.github/workflowsAdd pagesApril 6, 2023 18:48clients/vscodeUpdate README.mdApril 6, 2023 18:23deploymentUpdate README.mdApril 7, 2023 05:34developmentfeat: hide streamlit menu in production (#50)April 6, 2023 17:21docsfeat: add star badge for admin / openai page.April 6, 2023 20:36tabbyRevert \"fix: add api endpoint info in admin panel\"April 7, 2023 00:00teststest: support TABBY_API_HOST in k6 testsApril 4, 2023 11:14.dockerignoreAdd gptj converter (#19)March 27, 2023 11:12.gitattributesAdd docker compose (#3)March 22, 2023 02:42.gitignoreAdd supervisord.pid to gitignoreMarch 29, 2023 16:41.pre-commit-config.yamlfeat: support stopping words in python backend. (#32)March 29, 2023 20:23Dockerfilefeat: integrate caddy, re-org paths (#49)April 6, 2023 17:02LICENSECreate LICENSEMarch 16, 2023 17:28Makefiletest: support TABBY_API_HOST in k6 testsApril 4, 2023 11:14README.mdUpdate \"phrase\" to \"phase\" (#53)April 7, 2023 02:51poetry.lockRevert \"fix: add api endpoint info in admin panel\"April 7, 2023 00:00pyproject.tomlRevert \"fix: add api endpoint info in admin panel\"April 7, 2023 00:00  View code \ud83d\udc3e TabbyFeaturesDemoGet startedDockerSkypilotAPI documentationDevelopmentREADME.md\ud83d\udc3e TabbySelf-hosted AI coding assistant. An opensource / on-prem alternative to GitHub Copilot.WarningTabby is still in the alpha phaseFeaturesSelf-contained, with no need for a DBMS or cloud serviceWeb UI for visualizing and configuration models and MLOps.OpenAPI interface, easy to integrate with existing infrastructure (e.g Cloud IDE).Consumer level GPU supports (FP-16 weight loading with various optimization).DemoGet startedDockerThe easiest way of getting started is using the docker image:# Create data dir and grant owner to 1000 (Tabby run as uid 1000 in container)mkdir -p data/hf_cache && chown -R 1000 datadocker run \\ -it --rm \\ -v ./data:/data \\ -v ./data/hf_cache:/home/app/.cache/huggingface \\ -p 5000:5000 \\ -e MODEL_NAME=TabbyML/J-350M \\ tabbyml/tabbyTo use the GPU backend (triton) for a faster inference speed:docker run \\ --gpus all \\ -it --rm \\ -v ./data:/data \\ -v ./data/hf_cache:/home/app/.cache/huggingface \\ -p 5000:5000 \\ -e MODEL_NAME=TabbyML/J-350M \\ -e MODEL_BACKEND=triton \\ tabbyml/tabbyNote: To use GPUs, you need to install the NVIDIA Container Toolkit. We also recommend using NVIDIA drivers with CUDA version 11.8 or higher.You can then query the server using /v1/completions endpoint:curl -X POST http://localhost:5000/v1/completions -H 'Content-Type: application/json' --data '{  \"prompt\": \"def binarySearch(arr, left, right, x):\\n  mid = (left +\"}'We also provides an interactive playground in admin panel localhost:5000/_adminSkypilotSee deployment/skypilot/README.mdAPI documentationTabby opens an FastAPI server at localhost:5000, which embeds an OpenAPI documentation of the HTTP API.DevelopmentGo to development directory.make devormake dev-triton # Turn on triton backend (for cuda env developers)About   Self-hosted AI coding assistant  tabbyml.github.io/tabbyResources   Readme License   Apache-2.0 license  Stars904  starsWatchers5  watchingForks20  forks    Report repository   ReleasesNo releases published  Packages 2\u00a0\u00a0  Contributors 3\u00a0\u00a0\u00a0LanguagesPython59.0%TypeScript17.4%JavaScript12.8%Shell5.0%Dockerfile2.5%HTML1.7%Makefile1.6%Footer     \u00a9 2023 GitHub, Inc.    Footer navigationTermsPrivacySecurityStatusDocsContact GitHubPricingAPITrainingBlogAbout  You can\u2019t perform that action at this time. You signed in with another tab or window. Reload to refresh your session.You signed out in another tab or window. Reload to refresh your session.",
    "summary": "TabbyML has released Tabby, a self-hosted alternative to GitHub Copilot that is open-source and on-prem. It features self-containment with no need for a DBMS or cloud service, a web UI for visualization and configuration models and MLOps, an OpenAPI interface, and easy integration with existing infrastructure. Developers can use the docker image for easy deployment, and TabbyML supports consumer-level GPU with FP-16 weight loading and other optimizations. Its FastAPI server embeds an OpenAPI documentation of the HTTP API.",
    "hn_title": "Show HN: Tabby \u2013 A self-hosted GitHub Copilot",
    "original_title": "Show HN: Tabby \u2013 A self-hosted GitHub Copilot",
    "score": 362,
    "hn_content": "Tabby, a self-hosted alternative to GitHub Copilot, has been introduced, providing complete control over data and privacy. The feature iterations of Tabby allows users to fine-tune the model to meet desired project requirements. The tool saves time but raises concerns about privacy and security. An HN user noted that GitHub privacy issues are overblown and privacy issues with GitHub Copilot are underblown. While Copilot has been useful, it is not without limitations. Though its features are amazing, the limitations of Copilot mean developers must still have a good understanding of what they are writing.A new AI tool called TabbyML which allows coders to generate boilerplate code, reducing friction during coding, has drawn the interest of developers, but questions about safeguarding code intellectual property are still unanswered. While the service seems great when it comes to maximising productivity, the underlying machine learning algorithm does have its limitations, including difficulties with text formatting, styling and casing. The tool is pre-trained on a range of open-source GitHub codebases, with an option to train it on your own private code saved locally. It was also noted that without Typed Lang tooling, using TabbyML would be more difficult.An alpha version of Tabby, a self-hosted language model serving platform, using open-source models based on GPT-J/GPT-NeoX has become popular on Hacker News, despite its lack of professional window dressing and supporting evidence. The model size of less than 1B, with support for BF16/FP16, reduces VRAM requirements to 2GB or less. The philosophy is to achieve a completion rate comparable to Codex/Copilot while keeping the model size small, but the lack of performance proof hasn't deterred interest in the comments. Users praise the tool for its usefulness in creating boilerplate code and generating tests.HN users share their experiences with Copilot, praising its ability to predict code and assist with unfamiliar functions and syntax. Some users report that it works better with more popular languages and can suggest bad code if it is present in the parsing files. One user suggests a desire for a local version to improve speed/latency. There is also discussion around the potential for a self-hosted version of Copilot. Some users suggest changing the name for better SEO due to an already existing open-source project with the same name.",
    "hn_summary": "Tabby, a self-hosted GitHub Copilot alternative, offers complete control over data and privacy while fine-tuning models. It saves time but raises privacy concerns. GitHub privacy issues are overblown, and Copilot has limitations. TabbyML generates boilerplate code and raises questions about code IP safeguarding. Alpha version of Tabby is popular despite lack of professional window dressing and supporting evidence. Copilot predicts code accurately but has limitations and can suggest bad code. Some users suggest a self-hosted version of Copilot and name change for better SEO."
  },
  {
    "id": 35471826,
    "timestamp": 1680803214,
    "title": "Tesla workers shared images from car cameras, including \"scenes of intimacy\"",
    "url": "https://arstechnica.com/tech-policy/2023/04/tesla-workers-shared-images-from-car-cameras-including-scenes-of-intimacy/",
    "hn_url": "http://news.ycombinator.com/item?id=35471826",
    "content": "Tesla workers shared images from car cameras, including \u201cscenes of intimacy\u201d | Ars TechnicaSkip to main contentBiz & ITTechSciencePolicyCarsGaming & CultureStoreForumsSubscribeClose  Navigate StoreSubscribeVideosFeaturesReviewsRSS FeedsMobile SiteAbout ArsStaff DirectoryContact UsAdvertise with ArsReprints  Filter by topic Biz & ITTechSciencePolicyCarsGaming & CultureStoreForums  Settings Front page layout  Grid    List  Site themelightdark   Sign in     \"Really intimate things\"  \u2014Tesla workers shared images from car cameras, including \u201cscenes of intimacy\u201dEx-staffers tell Reuters about internal image sharing: \"We could see their kids.\"Jon Brodkin  - Apr 6, 2023 5:34 pm UTC Enlarge / Tesla Model X SUV at the European Motor Show on January 9, 2020, in Brussels, Belgium. Getty Images | Sjoerd van der Wal reader comments202 with Share this storyShare on FacebookShare on TwitterShare on RedditFrom 2019 to at least mid-2022, Tesla employees used an internal messaging system to share \"sometimes highly invasive videos and images recorded by customers' car cameras,\" according to a lengthy Reuters report based on interviews with nine former Tesla employees.Although Tesla says its in-car cameras are \"designed from the ground up to protect your privacy,\" today's Reuters report described employees as having easy access to the cameras' output and sharing that freely with other employees:Some of the recordings caught Tesla customers in embarrassing situations. One ex-employee described a video of a man approaching a vehicle completely naked.Also shared: crashes and road-rage incidents. One crash video in 2021 showed a Tesla driving at high speed in a residential area hitting a child riding a bike, according to another ex-employee. The child flew in one direction, the bike in another. The video spread around a Tesla office in San Mateo, California, via private one-on-one chats, \"like wildfire,\" the ex-employee said.There were \"pictures of dogs and funny road signs that employees made into memes by embellishing them with amusing captions or commentary, before posting them in private group chats.\" Some posts could be seen by \"scores\" of employees.One former employee reported seeing \"scandalous stuff,\" including \"scenes of intimacy but not nudity,\" as well as \"certain pieces of laundry, certain sexual wellness items... and just private scenes of life that we really were privy to because the car was charging.\" Meanwhile, one \"former employee saw nothing wrong with sharing images, but described a function that allowed data labelers to view the location of recordings on Google Maps as a 'massive invasion of privacy.'\"As Reuters notes, Tesla's customer privacy notice says that \"camera recordings remain anonymous and are not linked to you or your vehicle.\" But seven ex-employees \"told Reuters the computer program they used at work could show the location of recordings\u2014which potentially could reveal where a Tesla owner lived,\" the article said. One former employee told Reuters, \"We could see inside people's garages and their private properties.\" Advertisement Pic of Musk\u2019s James Bond car sharedDavid Choffnes, a Northeastern University professor and executive director of the school's Cybersecurity and Privacy Institute, told Reuters that the sharing of sensitive videos and images is \"morally reprehensible\" and possibly a violation of Tesla's own privacy policy. The Federal Trade Commission can take action against companies that don't keep their privacy promises.Reuters also quoted German data privacy lawyer Carlo Piltz as saying the internal sharing of videos and images would be hard to justify under Europe's rules when it has \"nothing to do with the provision of a safe or secure car or the functionality.\"Even Tesla CEO Elon Musk's garage wasn't off-limits. About three years ago, employees \"shared a video of a unique submersible vehicle parked inside a garage,\" which turned out to be a car from a James Bond movie that Musk purchased at auction for $968,000 in 2013. \"It is not clear whether Musk was aware of the video or that it had been shared,\" Reuters wrote.Employees who label data for Tesla \"shared screenshots, sometimes marked up using Adobe Photoshop, in private group chats on Mattermost, Tesla's internal messaging system.\" Other employees would \"add their own marked-up images, jokes or emojis to keep the conversation going.\"Whether sharing has stopped is unclearReuters said it contacted over 300 former Tesla employees who worked on the company's self-driving system. More than a dozen agreed to answer questions on condition of anonymity.Reuters said it \"wasn't able to obtain any of the shared videos or images, which ex-employees said they hadn't kept.\" It also couldn't determine whether \"the practice of sharing recordings, which occurred within some parts of Tesla as recently as last year, continues today or how widespread it was. Some former employees contacted said the only sharing they observed was for legitimate work purposes, such as seeking assistance from colleagues or supervisors.\"Tesla managers sometimes \"would crack down on inappropriate sharing of images on public Mattermost channels since they claimed the practice violated company policy,\" Reuters wrote.One practice involving videos from parked cars has been stopped. \"One ex-employee also said that some recordings appeared to have been made when cars were parked and turned off. Several years ago, Tesla would receive video recordings from its vehicles even when they were off, if owners gave consent. It has since stopped doing so,\" Reuters wrote.We contacted Tesla today and will update this article if we get a response. Reuters said it sent \"detailed questions\" to Tesla and contacted Musk but received no response.Page: 1 2 Next \u2192reader comments202 with Share this storyShare on FacebookShare on TwitterShare on RedditJon Brodkin   Jon is Ars Technica's senior IT reporter, covering the FCC and broadband, telecommunications, tech policy, and more.  Email jon.brodkin@arstechnica.com//Twitter @JBrodkinAdvertisement Channel Ars Technica\u2190 Previous story Next story \u2192Related StoriesToday on ArsStoreSubscribeAbout UsRSS FeedsView Mobile SiteContact UsStaffAdvertise with usReprintsNewsletter SignupJoin the Ars Orbital Transmission mailing list to get weekly updates delivered to your inbox.Sign me up \u2192 CNMN Collection WIRED Media Group \u00a9 2023 Cond\u00e9 Nast. All rights reserved. Use of and/or registration on any portion of this site constitutes acceptance of our User Agreement (updated 1/1/20) and Privacy Policy and Cookie Statement (updated 1/1/20) and Ars Technica Addendum (effective 8/21/2018). Ars may earn compensation on sales from links on this site. Read our affiliate link policy.Your California Privacy Rights | Do Not Sell My Personal Information The material on this site may not be reproduced, distributed, transmitted, cached or otherwise used, except with the prior written permission of Cond\u00e9 Nast.Ad Choices",
    "summary": "Tesla employees reportedly shared videos and images taken by customer car cameras through an internal messaging system, which included \"sometimes highly invasive\" content. Despite Tesla claiming the in-car cameras are \u201cdesigned from the ground up to protect privacy,\" employees had easy access to the cameras' output and shared content \"freely\u201d. Intimate scenes not featuring nudity, along with \"certain pieces of laundry and certain sexual wellness items,\" were among the items shared. However, some ex-workers claimed there was legitimate sharing for work purposes. Alternately, some images were reportedly shared widely and widely viewed including management.",
    "hn_title": "Tesla workers shared images from car cameras, including \u201cscenes of intimacy\u201d",
    "original_title": "Tesla workers shared images from car cameras, including \u201cscenes of intimacy\u201d",
    "score": 361,
    "hn_content": "Tesla workers shared images from car cameras, including \u201cscenes of intimacy\u201d | Hacker NewsHacker Newsnew | past | comments | ask | show | jobs | submit login [dupe] Tesla workers shared images from car cameras, including \u201cscenes of intimacy\u201d (arstechnica.com)361 points by barbazoo 7 hours ago | hide | past | favorite | 4\u00a0comments   dang 5 hours ago        | next [\u2013] This article reports on a different report: https://www.reuters.com/technology/tesla-workers-shared-sens.... The site guidelines ask submitters to check that first:\"Please submit the original source. If a post reports on something found on another site, submit the latter.\"(One exception is if the original source is hardwalled without a workaround - in that case posting the secondary article is ok.)https://news.ycombinator.com/newsguidelines.html reply  JeremyNT 5 hours ago        | prev | next [\u2013] Looks like a dupe of https://news.ycombinator.com/item?id=35468855 reply  dang 5 hours ago        | parent | next [\u2013] Comments moved thither. Thanks! reply  firstSpeaker 5 hours ago        | prev [\u2013] A friend of mine did some consulting work for a bank in the past. The developers working on the internet banking software didn't have access to the production database but my friend noticed that in-house developers are too much into the logs without any issue to investigate.Long story short they were looking at audit logs (textual data) of specific customer they wanted to stalk.He talked to their manager, in-house developers got reprimanded and my friend got a different assignment. replyApplications are open for YC Summer 2023Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "Users discuss duplicate article and site guidelines on submitting original sources. No relevant comments on the topic of Tesla sharing car camera images, including \"scenes of intimacy\"."
  },
  {
    "id": 35466201,
    "timestamp": 1680773768,
    "title": "Simply explained: How does GPT work?",
    "url": "https://confusedbit.dev/posts/how_does_gpt_work/",
    "hn_url": "http://news.ycombinator.com/item?id=35466201",
    "content": "The article explores how GPT-3 and other artificial intelligence programs can hold natural language conversations. The process involves using a probabilistic model and word embedding to extract meaning from words by representing them as numbers. GPT's strengths include its ability to generate text and link ideas logically, but its weaknesses include the potential for inventing false information and limitations on input. While GPT operates on a complex mathematical equation, there are similarities to the structure of the human brain. Differences include GPT's limitation to words, lack of ongoing learning, and inability to factor nonverbal communication. The article ends with a discussion of consciousness and whether GPT qualifies.The Chinese Room argument questions if a computer that follows instructions without understanding is conscious. GPT, a text-producing AI, will revolutionize knowledge worker jobs, although it could lead to reeducation and job loss. Despite concerns about AI destroying society, GPT alone cannot do anything harmful. Still, caution is necessary as it could be a stepping stone towards a more capable system. Some experts research ways to prevent negative outcomes. The consequences of GPT are difficult to predict, but technical skills and entrepreneurial spirit will be valuable. Those not ready to change or unable to reeducate may be threatened.",
    "summary": "The article discusses the process behind GPT-3 and how it is used for natural language conversations through word embedding and probabilistic models. Its strengths include generating text and logical idea linking but faces limitations with false information and input restrictions. There are similarities and differences to the human brain's structure, including GPT's restricted language abilities and lack of ongoing learning. The article also raises consciousness questions and concerns about job loss, but notes that GPT alone cannot do harm. However, caution is necessary for further AI development, and experts research ways to prevent negative outcomes. Technical skills and entrepreneurial spirit will be valuable as the consequences of GPT still remain uncertain.",
    "hn_title": "Simply explained: How does GPT work?",
    "original_title": "Simply explained: How does GPT work?",
    "score": 352,
    "hn_content": "Experts on Hacker News discuss the capabilities and limitations of AI language models, such as ChatGPT and GPT-4, in relation to human thinking and consciousness. The Chinese Room scenario is debated, with some arguing its relevance while others point out broader questions around the nature of intelligence and consciousness. Attention is given to the practical capabilities and innovations of language models, the relevance of transformers, and the limits of their training data. Emphasis is placed on avoiding bias and repetition of dull facts, while remaining confident but not arrogant in presenting information to a tech-savvy audience.Experts debate the feasibility of creating an AGI, with some cautioning against attributing human-like properties to machines. However, ChatGPT, a text-generation AI, has the capability to output accurate and context-specific text using language models. The model uses word/token embeddings to encode meaning and can do even more with additional labeled data. Despite its bluntness, ChatGPT's output is remarkable and is a component of AGI. Stephen Wolfram's blog post provides an excellent explanation of ChatGPT's underlying concepts for interested readers. Skeptics note how GPT-4 lacks feedback mechanisms of biological brains despite generating human-like text.",
    "hn_summary": "Hacker News experts debate AI language models' capabilities and limitations, including ChatGPT and GPT-4. Some caution attributing human-like properties to machines, yet ChatGPT outputs accurate and context-specific text, a component of AGI. Debate around Chinese Room scenario's relevance and the nature of intelligence and consciousness. Attention given to practical capabilities and innovation, relevance of transformers and limits of training data. Skeptics note GPT-4 lacks feedback mechanisms of biological brains despite generating human-like text."
  },
  {
    "id": 35470905,
    "timestamp": 1680799180,
    "title": "System design & the cost of architectural complexity (2013)",
    "url": "https://dspace.mit.edu/handle/1721.1/79551",
    "hn_url": "http://news.ycombinator.com/item?id=35470905",
    "content": "HTTP Status 429 \u2013 Too Many RequestsHTTP Status 429 \u2013 Too Many RequestsType Status ReportDescription The user has sent too many requests in a given amount of time (\"rate limiting\").Apache Tomcat/7.0.109",
    "summary": "`HTTP Status 429 \u2013 Too Many Requests` error message indicates that the user has sent a high volume of requests in a short time.",
    "hn_title": "System design and the cost of architectural complexity (2013)",
    "original_title": "System design and the cost of architectural complexity (2013)",
    "score": 340,
    "hn_content": "The post discusses the challenges of system design and the cost of architectural complexity. One user shares a personal experience working on a project involving Azure migration and architectural complexity. Other users weigh in on the topic, discussing how cloud providers operate and how automation moves complexity around. The discussion also touches on the use of enterprise message buses and the difficulty of understanding complex systems. Some users express concern over the increasing complexity of infrastructures and the difficulties of keeping up with the pace of technological change.An article detailing a company's struggle with security vulnerabilities and finding the appropriate solutions. The article mentions issues with various technologies, including cloud provider databases, IFTTT, Zapier, gRPC, and GraphQL. The use of a NoSQL solution is suggested by an executive VP. A comment discusses the importance of taking the time to simplify code to make it easily understandable and adaptable, while another suggests the use of \"reference first architectures\" based on carefully chosen resources. Another comment emphasizes the importance of thinking ahead and taking a slow and steady approach to development, and also draws a parallel with racing.A community divides things into improvisational \"flow\" and practiced \"technique\", which are interdependent; full-stack developers use techniques but don't know which they will need next; good performers are reactive to their audience and colleagues. However, there are profit disincentives to moving slowly for products with a sense of market fit. Good documentation is essential in terms of maintainability and functionality, as architectural complexity can account for large drops in productivity and team retention. However, sometimes companies prioritize the creation of complex systems over simple ones, leading to institutionalized brain damage and a low-quality product. In such environments, specific platitudes are used to justify complexity, and it's important to identify non-rewarded engineers who can build simple systems.Focus on the importance of creating a simple system that solves customer needs instead of a complex one. Emphasize the benefits of simplicity, including less bugs and higher productivity. Engineer-driven complexity can arise from the pressure to add features, leading to a system that is difficult to work with. Large organizations tend to create complex systems due to high-level decision-making power moving to less informed management individuals. MIT's System Design and Management program offers useful courses for creating simple systems.Users on Hacker News discuss the benefits and challenges of software architecture, including the issues with convoluted codebases and the importance of continuous refactoring. Some users debate whether it's better to build quickly with a throwaway mentality or focus on well-structured code that lasts longer. Others argue that it's possible to build a system initially structured well enough to last indefinitely. Additionally, users discuss the challenges of encouraging maintenance and refactoring in businesses that prioritize new projects and features over upkeep.Experts discuss the balance between architectural complexity and speed of shipping product in software development. While some argue that a well-structured system with domain expertise can result in longevity, others advocate for quick throwaway code that is consciously treated as disposable. The use of hierarchies, modules, and abstraction layers are vital in controlling complexity, but poorly designed architecture can lead to unintended complexity even if superficially simple. Good architects are necessary as bad architecture can negatively affect faults, staff turnover, and product success. Refactoring and regular maintenance are necessary for long-term success and the balance between extendibility and productivity is difficult to determine initially.Balancing architecture is crucial for developing software- too simple a structure can lead to messy solutions and too complex can make the project difficult and costly; Testing and documentation can help to prevent such situations; Changes in a layered architecture are simpler than in a stratified design; Engineers are tasked with managing complexity, which can be achieved by avoiding premature optimization, TDD, bad naming and following an easily understandable concept; Serverless offerings and simplistic architectures are more sustainable for small and moderate-sized businesses for reducing engineering organization costs; The economic value of refactoring software architecture is highlighted.Experts debate the definition of complexity in software systems, with some arguing that it refers to duplication, while others say it involves having many interconnected parts or a complicated arrangement of units. One user argues that complexity is a matter of perception and can be difficult to quantitatively measure. However, another user points to a popular language author who argues for simplicity over complexity. The discussion highlights the challenges of defining complexity in software development.",
    "hn_summary": "The article discusses system design and the cost of architectural complexity. Users share personal experiences with cloud providers and understanding complex systems. Comments highlight the importance of simplicity, good documentation, and thinking ahead. The benefits and challenges of software architecture, and balancing simplicity and complexity, are debated by experts. The definition of complexity in software systems is also discussed."
  },
  {
    "id": 35468540,
    "timestamp": 1680790325,
    "title": "Defamed by ChatGPT",
    "url": "https://jonathanturley.org/2023/04/06/defamed-by-chatgpt-my-own-bizarre-experience-with-artificiality-of-artificial-intelligence/",
    "hn_url": "http://news.ycombinator.com/item?id=35468540",
    "content": "Jonathan Turley, a law professor at George Washington University, claims that he was defamed by Microsoft's Bing, which is powered by GPT-4, as it repeated a false story reported by ChatGPT about him. He warns that AI can propagate false claims across the internet uncontrollably, damaging not only individuals but also society's trust in institutions. Turley believes that this shows how AI systems can generate their own forms of disinformation with less direct accountability. Recent research has shown that ChatGPT's political biases could create flaws in AI systems, making them as biased and flawed as the people who program them.AI is just a tool and is only as good as the information it's given, and blaming it for bad decisions made by humans is like blaming a car for an accident when the driver is at fault. AI is not Skynet and the fear of it taking over the world is exaggerated. The accuracy and validity of data fed to AI is crucial as it can make decisions based on it, and biased or fake news can lead to an algorithm repeating the lies. AI is an accumulator of data, and intelligence requires self-awareness for proper judgement. Totalitarians in charge are a real danger, and who programs AI and who benefits from it is a human problem.No summary possible as the text provided does not relate to cutting-edge tech news or any technology topic for that matter. It is a random conversation from the movie 2001: A Space Odyssey and irrelevant comments.",
    "summary": "N/A.",
    "hn_title": "Defamed by ChatGPT",
    "original_title": "Defamed by ChatGPT",
    "score": 287,
    "hn_content": "The Hacker News post discusses the legal implications of algorithmically-generated libel and who is responsible for such defamation. The comments raise concerns about powerful AI tools and suggest that AI companies should be sued and digital rights implemented. While ChatGPT and similar tools can be useful, the responsibility for their output lies with the user or company. The issue of liability for autonomous cars is also discussed. Mercedes' announcement of liability for self-driving cars is seen as significant.OpenAI's ChatGPT has been the subject of discussions about liability if its generated text contains false information. Some suggest that the responsibility should lie with the user who produces defamatory content, while others argue that the liability should rest with OpenAI as the creator of ChatGPT. The issue of libel is likely to pose a significant risk to the commercialization of ChatGPT, and it might need to be marketed as no more than a toy with a disclaimer to avoid litigation. However, some suggest that responsibility for generated content lies with the user who publishes it and that ChatGPT is no more liable than Microsoft Word.The use of language models like ChatGPT presents a potential issue with defamation, as they can generate false or misleading content that is then attributed to the user rather than the model itself. While ChatGPT can be a useful tool, there are concerns about the potential for people to absolve themselves of liability by auto-generating content that could be defamatory. It is important to ensure a certain standard of care around what these models say, especially as they become more widely used. While some argue that the responsibility lies solely with the user, others suggest that creators of generative models should also be held accountable for the correctness of their statements. Experts are exploring the issue of liability for artificial intelligence models, with an emphasis on defamation.Hacker News users discuss the legal implications of using ChatGPT to seek medical and legal advice. Users debate whether OpenAI can be held accountable for ChatGPT's output, and whether libel laws apply to machine-generated text. Some users point out that negligence can still result in harm, and that ChatGPT's creators should take responsibility for possible legal repercussions. Additionally, users discuss the high bar required to prove defamation in the US legal system and note that artificial intelligence and copyright laws may complicate liability.An investigation by UCLA professor Eugene Volokh into Large Libel Models (LLMs) has revealed that LLMs are capable of confusing between truth and fiction, technical definitions, and complete nonsense. The way LLMs interpret text is a fundamental part of their design and cannot be altered internally. The creators of GPT failed to clarify this, with Volokh suggesting that confusion between humans and AI could be of an entirely honest nature. The issue of accountability was also raised. Lawsuits of this kind can have a real and severe impact on individuals, but companies may also be held morally accountable.The Tech Times reports on the potential issues and controversies surrounding ChatGPT, an artificial intelligence language modeling program developed by OpenAI. Users have raised concerns that the program's training data could be polluted or biased, leading to inaccurate responses, including false and damaging statements. Some are calling for ChatGPT to be held accountable in the same way as individuals or organizations making false and defamatory statements, while others defend OpenAI's efforts to minimize the risk of \"hallucinations.\" ChatGPT's use of public data, including Hacker News' comments, has also come under scrutiny as a potential source of bias.OpenAI's LLM technology facing criticism over the risk of inherent factual biases due to limitations of training data reflecting certain political or ideological viewpoints, despite built-in guardrails, while ensuring safe AI is observed through accurate LLM output, which is not reflective of a brainwashed zombie population; GPT response avoids 'not knowing' output, which psuedo-intellectual chin strokers discuss, while language models can't provide the desired results for knowing; OpenAI continues to sanitize outputs, leading to concerns around copyright violation, but denying the mind control angle promoted by some users.GPT4 has the potential to produce fully-formed articles, pick domain names, make use of AI-generated design templates, and fill comment sections with crap; it can change writing style depending on topic and audience. While banning AI isn't an adequate response to this issue, the fact remains that falsely-sourced claims will become real. ChatGPT always answers confidently and rarely admits to not knowing an answer, leading users to think that it's smart or informed. Nevertheless, it's just a text generator, even if it can generate texts at an incredible rate, and can produce some useful outputs with low error rates if it's said in the context it has seen before; if it strays outside that scope, it produces an unreliable, dangerous output.Users debate the accuracy of the ChatGPT language model, with some arguing that it is unreliable due to its tendency to produce fabrications; others suggest that introducing human-like fears about being wrong can elicit more accurate responses. Some users express concern that ChatGPT is a risky legal liability, particularly in regards to defamation in certain prompts. The article also highlights the issue of user expectation, as some users tend to assume that ChatGPT functions on factual information rather than generating data that fits the prompt. Overall, the debate centers on the reliability of LLMs and how they should be approached as a tool for generating content.The name 'AI' may set inaccurate expectations for GPT-4 due to a lack of agreement on what intelligent behavior is. NLP and LLM promoters often intentionally make their methods sound somewhat inaccurate. ChatGPT meets the definition of AI according to the Oxford English Dictionary. However, people have higher expectations from GPT's linguistic competence. Some comments delve into issues of fact-checking and reliability in ChatGPT-generated content. A user had an experience where ChatGPT produced misleading information. There is no obligation to publish a follow-up, so the information is potentially harmful to individuals if it is not verified.The ChatGPT AI model is under scrutiny for generating defamatory statements, prompting questions on the extent of liability for such statements. Journalistic freedom differs across jurisdictions, but presenting something as fact can lead to consequences. The AI model's ability to hallucinate statements raises legal complications, and differentiation between unintentional and intentional defamation may be necessary. Microsoft may address the issue by incorporating disclaimers and more binding terms of service agreements, leading to worse accuracy. However, improvements are also expected in future, more advanced models like GPT-4.Users on Hacker News are discussing the implications of Microsoft's AI chatbot, ChatGPT, which has been generating misinformation and fabricating information, leading to concerns over its lack of accuracy and potential for spreading harmful information. Some users pointed out that the root of the problem may not be the AI system but rather the digital ecosystem's ability to spread misinformation rapidly. Others are concerned about using personal data in training such models to improve accuracy. Some users suggested that ChatGPT's responses should include a disclaimer. There are no calls for legal action at the moment.AI censorship is a problem leading to major companies like Microsoft being accused of libel, but an HN user points out the difference between censorship and AI as the title is misleading. Bing's use of GPT-4 may be unreliable, but it's not legal libel as it doesn't meet the legal definition anywhere. The root problem is that AI-generated results are usually interpreted as factual by the public. An HN user questions whether a disclaimer works as a defense for libel, citing the need for intent as a component. The article fosters fear-mongering, but the real concern is accountability surrounding the use of AI-generated results.This article discusses the problems of misinformation and censorship in society, and how policy and political interests clash with new technology they don't understand. Some comments focus on the challenges of identifying and combating diverse and widespread threats, while others argue over the democratization of misinformation through the internet. The primary readers of this post are interested in the intersection of technology and society, and how these issues affect them personally. However, the article also includes sarcastic and inflammatory comments that may not be helpful to understanding the main points.",
    "hn_summary": "AI-generated libel poses a significant risk, with ChatGPT under scrutiny for its potential liability. Users debate responsibility for its output and suggest maintaining a standard of care. Liability issues of autonomous cars are also discussed, and the legal implications of ChatGPT as a tool for seeking medical and legal advice. Concerns regarding the accuracy of language models and the ethical use of personal data have also been raised. There are criticisms of ChatGPT's reliability and propagating misinformation, leading to calls for disclaimers and binding terms of service agreements. The intersection of technology and society is a primary focus in this post, with ongoing legal debates on accountability for AI-generated results."
  },
  {
    "id": 35462378,
    "timestamp": 1680740120,
    "title": "Master Plan Part 3",
    "url": "https://www.tesla.com/blog/master-plan-part-3",
    "hn_url": "http://news.ycombinator.com/item?id=35462378",
    "content": "Master Plan Part 3 | Tesla   For the best experience, we recommend upgrading or changing your web browser.   Learn More    Master Plan Part 3        The Tesla Team,        April 5, 2023   Today, we are publishing Master Plan Part 3, which outlines a proposed path to reach a sustainable global energy economy through end-use electrification and sustainable electricity generation and storage. This paper outlines the assumptions, sources and calculations behind that proposal. Input and conversation are welcome.How Master Plan 3 works:Read Master Plan Part 3\u00a0We are also providing the U.S. fully electrified demand profile used in modeling:US fully electrified demand profile \u2013 part 1US fully electrified demand profile \u2013 part 2",
    "summary": "Tesla releases Master Plan Part 3, proposing a path to a sustainable global energy economy through electrification and electricity generation and storage, with detailed assumptions, sources and calculations behind the proposal. Readers are welcome to provide input and join the conversation. Tesla also provides the US fully electrified demand profile used in modeling.",
    "hn_title": "Master Plan Part 3",
    "original_title": "Master Plan Part 3",
    "score": 286,
    "hn_content": "Tesla's Master Plan Part 3 received considerable attention on Hacker News, with one user sharing their experience of going fossil fuel-free with a solar array and a the company's Powerwall. Other users discussed the cost of hobbies, particularly how much people spend on baseball or in coffee shops, versus investing in solar panels or a new heat pump system. The site features discussions about the effectiveness of electric-only vehicles versus plug-in hybrid vehicles and the real-world barriers to a mass switch to BEVs, despite the success of sexy electric cars like Tesla's.Housing units in the US can charge EVs for convenience; while street parking requires street charging and renters need mandated EV charging spots, charging needs an expansion. A commenter proposes using hybrid cars with smaller batteries to massively reduce carbon emissions. However, others consider it a waste of resources and suggest reducing infrastructure in favor of bicycles, public transport, and EV + home solar charging. Despite its limitations, EVs are still considered better than ICE and hybrids in terms of speed, maintenance, and environmental impact.A paper argues that solar+battery produces higher emissions than solar+power from the grid. However, some users claim that smaller battery electric vehicles are still effective for daily commute and local travel, despite the range anxiety raised by I.C.E. drivers. Range anxiety is not as concerning when one understands how an electric vehicle uses electricity. Still, the need for longer range batteries is evident, given the current lack of high-speed charging points. Nuclear power is found to be more expensive per installed kW and to maintain than solar energy. Improved respiratory health would be an additional benefit of electric vehicles, given the current burning of fuels directly in populated spaces.A new Tesla report on worldwide energy trends attracts attention from tech-savvy readers. One user points out that Earth needs a sustainable energy economy - Tesla's mission is to accelerate it. Others discuss the feasibility of investing 10% of one year's GDP ($1.7tn) in renewable energy to counteract climate change. While a few express concern about Elon Musk's approach to politics and public health, they mostly see the report as an optimistic vision that could lead to action. The report argues for investment in sustainable energy over the next 20 years as a cheaper alternative to investing in fossil fuels.National Geographic reports that COVID-19 has also spread to animals, meaning that social distancing for humans is not enough to contain the virus. HN users are in disagreement on whether or not we could have prevented the spread of COVID-19, with some arguing that it was inevitable due to asymptomatic transmission, while others maintain that keeping the R_t below 1.0 is enough to stop the spread. Some users also point out that the difficulty in stopping the spread stems from a lack of globally coordinated action, and that lockdowns must be done properly to be effective.Comments on HN discuss measures taken by China to control COVID and the difficulties in implementing similar measures in other countries. Views are divided regarding the effectiveness of strict quarantine measures, with some arguing that compliance just needs to exceed a critical threshold to lower transmission rates. Others argue that enforcing such measures requires authoritarianism, which could be disastrous for human rights. Some comments point out that the US has managed to keep transmission rates low for extended periods. However, others argue that the COVID pandemic was unstoppable once it had spread, and that attempts to contain it were merely PR efforts by the Chinese government to appear effective.The article editor should provide concise and neutral summaries, avoiding political or religious statements. However, if the article's title starts with 'Ask HN:' or 'Tell HN:', they must focus solely on the comments. The editor should consider why the post is special or newsworthy to the readers and avoid repeating facts that are already widely known. If users provide key points in their comments, the editor should include them but make it clear that it is not the main point of the article. The editor should be confident in their assertions without being arrogant. Some comments may contain sarcasm, but it is not the main point of the article.Hacker News users discuss the possibility of redefining what counts as a realized capital gain. Some suggest using an asset as collateral should trigger tax, while others argue that it would be difficult to implement. There is consensus that borrowing against unrealized gains is common accounting practice. Users debate the viability of transitioning to renewable energy and reducing political risk by enabling the decoupling of geopolitics from oil. Finally, a user argues that the financial burden of paying or avoiding tax can be eliminated for the super-wealthy.The article discusses the possibility of keeping global warming to 1.5 degrees Celsius, and highlights the potential for using energy from desalination plants, green hydrogen, and synthetic fuels like hydrogen. It also argues that renewable energy sources like solar and wind can replace fossil fuels with batteries, while omitting the role of nuclear power. The comments section debates the practicality of gas turbine engines, batteries, and fuel cells for road transport, while moving from fossil fuel to renewables does not eliminate geopolitical considerations. One commenter argues that the weaponization of \"kindness and tolerance\" is the biggest problem with politics instead of calling out bad behavior.The article features a discussion between Hacker News users on their political views and voting habits, with some participants defending past Democratic or Republican candidates. While some comments divert to political statements, the conversation eventually shifts to a discussion on what is considered reasonable, providing nuanced definitions for different types of reasonableness. Another article summarized discusses Tesla's sustainability goals, with users debating the company's treatment of its employees and the viability of its contribution to a carbon-free future. Some users express support for Elon Musk despite personal issues.Some people believe that Tesla is a terrible car maker known for poor-quality vehicles on par with Chrysler. However, others think the belief that the company mistreats its employees is exaggerated, and Tesla gets a lot of bad press due to poor US labor laws. An HN user points out that many people would still want a carbon-free world, despite this. Additionally, Starship's emissions are comparable to those of a commercial flight, and once launched commonly, switching to sustainable methane won't be difficult. Overall, despite negative comments, Tesla still ranks in the top five companies new graduates want to work for, and SpaceX is number one.A discussion on Hacker News veers into political opinions, with one user criticizing the owner's treatment of employees and political tweets. However, several other users urge to focus on the actual technological innovation the owner is spearheading as he is still pushing the boundaries in renewable energy adoption. The erratic behavior of the owner and its impact on his business is debated, but some users see it as a grand vision of a future society instead of a reflection of his own politics. A suggestion for Super A.I. to help voters in elections is offered in a comment.An HN discussion on logical fallacies and political division amongst Americans has emerged. The comments feature some opinions on Elon Musk's behavior and how it affects the public's perception of Tesla. However, the key takeaway from this post is not clear. The editor must identify the primary message and highlight any new information or developments that may be of interest to expert readers in the tech field. Political or religious biases must be avoided, and statements should be confidently but professionally stated.",
    "hn_summary": "Tesla's Master Plan Part 3 receives attention on Hacker News with discussions on fossil fuel-free living, the feasibility of EVs, investment in renewable energy, and the spread of COVID-19. Users debate the practicality of transitioning to renewables, the financial burden of tax for the super-wealthy, and the weaponization of kindness and tolerance in politics. Tesla's reputation, treatment of employees, and vision for the future are also discussed. The editor must identify the primary message and avoid political or religious biases."
  },
  {
    "id": 35468855,
    "timestamp": 1680791809,
    "title": "Tesla workers shared sensitive images recorded by customer cars",
    "url": "https://www.reuters.com/technology/tesla-workers-shared-sensitive-images-recorded-by-customer-cars-2023-04-06/",
    "hn_url": "http://news.ycombinator.com/item?id=35468855",
    "content": "Tesla employees reportedly privately shared sensitive footage captured by customers' car cameras between 2019 and 2022, according to nine former Tesla employees interviewed by Reuters. The recordings, which included crashes, road-rage incidents, and embarrassing situations, were shared via an internal messaging system, sometimes publicly. Some employees reported that the computer program at work could show the location of recordings. While some former employees were unbothered by the sharing of images, others found it a breach of privacy. According to Tesla's \"Customer Privacy Notice,\" camera recordings remain anonymous and aren't linked to customers or their vehicle.Tesla has made changes to its car Sentry Mode, including pulsing the headlights on parked cars to alert passers-by that they may be monitored, following concerns over data protection. The company's future plan is to replace human drivers with its fully-automated Full Self-Driving mode. However, concerns have been raised over Tesla's policy towards data labeling after former employees revealed cameras in the cars were used to record customers' surroundings, including drivers and passengers in compromising situations. The recordings were reviewed by outsourced data labelers employed by Tesla, a system discontinued following complaints about the quality of work done.Reuters reports that all quotes will be delayed by 15 minutes or more, and provides links for accessibility, corrections, and site feedback.",
    "summary": "Tesla employees shared sensitive videos captured by customer car cameras between 2019 and 2022, according to Reuters interviews with nine former Tesla workers. Crashes, road-rage, and embarrassing situations were among the videos shared through Tesla's internal messaging system, some publicly. The company's Customer Privacy Notice highlights the anonymity assurance of camera recordings that are not linked to customers or their vehicles, but some former employees called it a \"breach of privacy.\" Tesla responded to data protection concerns by making changes to Sentry Mode, including pulsing headlights on parked cars to alert passers-by that they may be monitored. Reuters claims all quotes will be delayed, and it provides links for corrections and site feedback.",
    "hn_title": "Tesla workers shared sensitive images recorded by customer cars",
    "original_title": "Tesla workers shared sensitive images recorded by customer cars",
    "score": 265,
    "hn_content": "Tesla workers have been sharing sensitive images recorded by customer cars, including graphic content, on internal message boards, without any privacy safeguards. Despite human nature contributing to the prevalence of such incidents, there should be privacy regulations with serious consequences, and companies must build in privacy from the ground up. However, such issues are not unique to private companies, as an individual shared their experience of a colleague guessing their payment history as they were on the phone with a friend from a payment company.A software developer shared a story on Hacker News of accidentally running code that obfuscated sensitive data in a newspaper's database. The routine was designed to change phone numbers to 555-xxxx and replace names with random fruit names. The menu item was called \"mixed fruit,\" and the feature only appeared under the developer menu when the developer was signed in as the only superuser. However, a manager stumbled upon the feature and ran it without confirmation, quickly scrambling the live database. The developer was able to restore the production data but learned a valuable lesson about building \"sharp\" super-features. One HN user had concerns about the ethics of handling sensitive data, but everyone else seemed amused by the story.Multiple comments point out the lack of privacy in various companies and the potential consequences of irresponsible data handling. The discussion includes various anecdotes, including a hospital software demo using fake data, startups giving demos with real customer data, and a fertility clinic's potential for sensitive data exposure. India's lack of digital privacy laws is criticized, and companies' prioritization of market dominance over privacy ethics is discussed. There are mentions of big multinational companies' lack of responsibility toward their workers. The need for strict privacy guidance mechanisms is emphasized to scale with customer expectations.Paytm, an Indian digital payments company, requested sensitive personal data from a customer who questioned its necessity. In response, the customer posted on Hacker News sharing details about the company, revealing its practice of data collection. Additionally, other commenters discussed security and privacy concerns with both startups and established companies, using examples such as Tesla and Facebook. Meanwhile, some questioned the veracity of claims shared on the platform. This highlights the importance of privacy and security policies in the tech industry, especially in emerging markets.A Paytm employee allegedly accessed private user transaction data unauthorizedly. Comments point out that data privacy is not entirely secure and that employees may see and misuse private data. Rule of law and accountability are essential to protect sensitive data. Some comments express skepticism about the anecdote's authenticity or suggest competitors might be spreading low-key FUD about Paytm. One comment expresses discomfort with Tesla's camera filming inside the car, despite allegedly being for drowsiness detection.A discussion on Hacker News about whether German cars offer greater privacy reveals that German privacy standards are not as perfect as people seem to think, with many companies not adhering to the rules. Meanwhile, tesla is held in a negative light due to the behavior of its founder. However, a key point noted by one HN user is that data protection authorities would be interested in any data breaches by automakers due to GDPR enforcement. Another point is that while German privacy standards may be highly respected, they may hinder innovation and progress. Additionally, some users suggest buying an old car as a way to avoid the telemetry or smart features present in newer models.HN users debate over the value of Dogecoin, with some arguing that it's all about faith in the technology, regardless of its origins as a meme. Others posit that being first, like Bitcoin, is a significant factor in crypto value. Meanwhile, comments discussing the use of cameras in cars highlight concerns over privacy in this new, tech-enabled realm.Tesla's camera feeds are processed locally in the car and can be optionally shared with Tesla, but not required. Users can turn the camera off and use black tape to cover it. Accepting privacy intrusion as the default state is not an ideal solution. A heated discussion broke out with sarcastic comments about Tesla's privacy, union issues and comparisons with other car models. There have been issues of inappropriate sharing of images on public channels and Tesla managers did crack down on it. The problem lies in how the culture at Tesla allowed it to persist for so long. It's important to wait for the results of any investigation on this matter.An HN user laments the increasing prevalence of connected vehicles as a platform for customer engagement and data collection at the expense of personal privacy. Some commenters express nostalgia for the days of simple, physical button-based cars, while others point out the tradeoffs between privacy and modern safety features. Some specific examples of EVs that are not \"always-connected surveillance devices\" are mentioned.Cars with built-in connectivity for data sharing and remote access raise privacy concerns for some, with some preferring more basic models that don't have these capabilities. However, some note that many gas-powered cars also have similar features and that other models, including non-EVs, may have similar tracking capabilities. OTA updates may eventually eliminate the need for paying extra for remote start and connectivity, but this is only currently available on select models from manufacturers such as Mercedes and BMW. Reports suggest that some lenders have placed tracking devices on cars, although it's unclear whether they sell the data.",
    "hn_summary": "Tesla workers shared sensitive images recorded by customer cars without privacy safeguards. Privacy regulations with serious consequences should be enforced, and companies must build privacy from the ground up. Anecdotes highlight a lack of privacy in various companies and startups, with India's lack of digital privacy laws criticized. Data privacy is not entirely secure, and employees may see and misuse private data. German privacy standards are not perfect, but data protection authorities would be interested in any data breaches by automakers due to GDPR enforcement. There are privacy concerns with connected vehicles, but some note that similar tracking capabilities exist in non-EVs. Reports suggest that some lenders have placed tracking devices on cars, although it's unclear whether they sell the data."
  },
  {
    "id": 35470371,
    "timestamp": 1680797151,
    "title": "Buck2: Our open source build system",
    "url": "https://engineering.fb.com/2023/04/06/open-source/buck2-open-source-large-scale-build-system/",
    "hn_url": "http://news.ycombinator.com/item?id=35470371",
    "content": "Meta's new open-source build system, Buck2, written in Rust, is available on GitHub and designed to make builds faster and more efficient, with internal tests at Meta indicating completion of builds 2x faster than Buck1. Buck2 separates the core and language-specific rules and features increased parallelism, integration with remote execution and virtual file systems, and a redesigned console output. Buck2's design principles include a core build system with no knowledge of language-specific rules, a single incremental dependency graph, and the API designed with advanced features for performance and expressive, dynamic dependency features while ensuring other properties are not harmed.Buck2 could be of value to moderately sized multi-language projects, as per the getting started page. Meta shares open source tech projects in AI, data, development, front-end, languages, platforms, security, and VR. No notable updates or releases mentioned, just a page that sheds light on Buck2.",
    "summary": "Meta releases Buck2, an open-source build system on GitHub, written in Rust. Buck2 separates core and language-specific rules, with internal tests indicating builds 2x faster than Buck1, increased parallelism, and a redesigned console output. Buck2 could be suitable for moderately sized multi-language projects, designed with advanced features for performance and expressive, dynamic dependency features. Meta shares open source tech projects, including AI, data, development, front-end, languages, platforms, security, and VR, with no notable updates or releases mentioned.",
    "hn_title": "Buck2: Our open source build system",
    "original_title": "Buck2: Our open source build system",
    "score": 250,
    "hn_content": "Facebook's Buck2, an open-source build system, is gaining attention for its ability to benefit not only compiling and linking but the build system too. The build system is implemented on top of an incremental computation engine, allowing for the additional dependencies of monadic build systems easier to scan. Buck2 is written in a statically compilable language, which is appealing compared to its main competitor, Bazel. Buck2 documentation suggests that Windows is supported out of the box and is an extension in its design. Facebook has worked toward aligning Buck2 with Bazel over time, including the syntax used.Users on Hacker News discuss various build tools, including TensorFlow on GitHub, Py_wheel, Bazel, and Waf, with some users noting issues with native builds, while others share their experience using Waf for cross-compilation. One comment highlights the challenges of handling large codebases and the design decisions behind Buck and Bazel, while another suggests that Waf could serve as a base for building such systems. One user questions the use of Python for performance-critical systems, prompting a response that doubts it would affect build coordination systems' speed. The article concludes by highlighting Waf's explicit design intent.Waf is a trivial build system that can be included in the source code, ensuring that the project always uses the right version; a build system that uses a general-purpose language by default is unnecessarily powerful and leads to project-specific concepts that all users must understand. Large systems need a way to express complexity; Turing-complete build systems are inevitable, so readable is better; no repository on earth gets hundreds of commits per minute on average, though large repositories at Google or Facebook may have many robot generated commits; every significant project has something weird that their build system does not have built-in, so some extension capabilities are necessary; unlike Buck, Waf does not come with dependency management out of the box, a concern for large organizations with many projects.Facebook has released Buck 2.0, a build system for Java, C++, and Android. Buck 2.0 provides faster build transitions, clearer configuration, and greater visibility into build processes. Fast_Partial is a functionality that implements more caching for deepening projects with partial rebuilds, and transitive sets resolve dependencies more efficiently. Buck 2.0 is not aimed at Bazel users, but for improving on Buck 1.0 because of poor integration between Buck and Facebook's development systems. Commenters noted that some large-scale projects at Facebook have used Buck2, reducing build time from minutes to seconds. Buck2 also eliminates the JVM dependence in Buck1 by rewriting it in Rust.Buck and Bazel are multi-language build systems with the ability to compile everything and produce a deployable container in a highly reproducible way. They are suitable for medium-sized companies with a good, clean DAG of modules, use multiple languages and require excellent cross-language support. Buck/Bazel improves productivity, can be integrated with a HTTP interface and is easy to maintain; however, it has a steep learning curve and annoying defaults. Nix is a superior language to Starlark, provides better developing reproducible builds and offers declarative advantages. Building systems stand between a programmer and running their codes; Buck/Bazel offers better controls for intensive builds dependent on concurrent modules with the downside of the learning curve being steep.Build systems become essential once an automated build process fails, such as when building for multiple architectures or programming languages or streamlining building efficiency, which could save time. Build systems also enable usable documentation and automated tests. Projects like Linux and Firefox require building for numerous architectures and platforms, making fine-tuning such systems beneficial. Effective \"super ecosystems\" allow for the integration of multiple languages and technologies. The focus on tooling written in Rust or Go producing single binaries with minimal runtime dependencies increases productivity. The shortcomings of Python include poor dependency management, lack of package management, and slow package updates. Similarly, NodeJS has poor tooling and many dependencies. Shopify CLI's requirement for Ruby and Node can be wasteful.Developers and users appreciate the self-contained aspect of end user apps; as Linux isn't actually an operating system, running software built for Ubuntu on a Fedora box is left up to luck, and the new statically compiled world requiring each component to be updated is seen as a regression, requiring well-maintained & promptly updated binaries. A fleet of long-lived servers with a different deployment cadence is anachronistic; vulnerabilities affect all applications, not just how the host or library can be updated. As dynamic linking has little value, statically linked binaries are seen as the future, especially for personal machines.Static compilation has become a more viable option for reliable end-user experiences compared to dynamic linking. The increase in binary size is statistically zero for modern computers, and disks are big while memory is cheap. However, some users argue that static compilation adds complexity and makes software harder to maintain. The article explores different build systems, such as Buck and Bazel, which have advantages in aggressive caching, parallelizing, and making repeatable builds. While there is no best solution that fits everyone's needs, the focus should be on using the right tool for the right job.Facebook's Buck2 build system is tailored towards individual needs and optimizing resources available, but a user with multiple projects finds it difficult to work with without a common build tool. Buck2 works with both Git and Mercurial SCM systems, and incorporates Sapling for persistent incremental builds, using Watchman for efficiency. Facebook engineer confirms that Buck2 works internally with Git repositories, and Sapling is not a requirement.",
    "hn_summary": "Facebook's open-source Buck2 build system gains attention for its incremental computation engine and Windows support. HN users discuss other build tools, including Waf, TensorFlow, and Py_wheel, highlighting the challenges of handling large codebases. Buck2 removes JVM dependency in Buck1 by rewriting it in Rust. Buck2 and Bazel are multi-language build systems with reproducible builds and integration capabilities. The article suggests using the right tool for the right job, and focusing on a tool's strengths. Some users argue that static compilation adds complexity, while others advocate for the benefits of statically linked binaries."
  },
  {
    "id": 35467243,
    "timestamp": 1680782977,
    "title": "Mariadb.com is dead, long live MariaDB.org",
    "url": "https://medium.com/@imashadowphantom/mariadb-com-is-dead-long-live-mariadb-org-b8a0ca50a637",
    "hn_url": "http://news.ycombinator.com/item?id=35467243",
    "content": "MariaDB.com, the commercial entity, has experienced a myriad of failures while trying to build a viable business, with lawsuits piling up due to horrible leadership, racism and sexism claims, and numerous labor law violations in the US and internationally. The creator of MySQL and MariaDB founder, Monty, was voted off the board in July 2022 solidifying the hostile takeover by CEO Michael Howard, which led to a sharp decline in stock value. Recent SEC filings indicate that MariaDB is positioning itself for closure, and it has failed to retain and recruit personnel due to its reputation for abuse, racism, and sexism.An article warns employees at MariaDB of possible failures and advises them to schedule interviews with other companies due to American corporatism, praising the long-standing MariaDB.org and open source.",
    "summary": "MariaDB.com, the commercial entity, is facing failures due to poor leadership, racism, sexism claims, and labor law violations. Monty, the founder, was removed from the board in July 2022, and CEO Michael Howard's hostile takeover led to a decline in stock value. SEC filings indicate that MariaDB may be closing down, facing issues in personnel retention and recruitment due to its reputation. Employees are advised to schedule interviews with other companies, while praising MariaDB.org and open source.",
    "hn_title": "Mariadb.com is dead, long live MariaDB.org",
    "original_title": "Mariadb.com is dead, long live MariaDB.org",
    "score": 219,
    "hn_content": "MariaDB.com has shut down with a sign pointing visitors towards MariaDB.org, causing suspicion of the company's ill fortunes. A Medium article accuses the MariaDB corporation of racism, sexism, and abuse. Gupta Ramnarayan, Senior Director of products for MariaDB, has responded to the allegations. Public reaction is skeptical of the bias and completeness of the article's claims, with one reader suggesting the claims are merely unsupported slurs by someone with a grudge. Despite the negative claims surrounding MariaDB.com's closure, many remain optimistic about MariaDB.org.A thread on Hacker News discussed allegations of discrimination, with one user pointing out the difficulty of proving such claims without evidence. Another user accused those who dismiss such claims of \"bad apple\" behavior, while another questioned the credibility of the article. The conversation then shifted to a comparison of MariaDB and Postgres, with several users offering their opinions on each. The discussion touched on various features of each database, including replication topologies and versioned tables.MariaDB Corporation is filing for bankruptcy, but the open source MariaDB software is still safe. The company has contributed the most to the codebase, with people speculating about the impact on future development. The reason behind the bankruptcy is due to tensions over postponing profit growth, and questionable leadership behavior. On the other hand, MySQL's ownership by Oracle has led to it being considered the 'lesser evil'. MySQL did stagnate for a while, with MariaDB trumping certain features and fixes, but the situation may have changed now. MySQL was formerly praised for being fast, freely available, lightweight, and \"good enough\" in the days when other competitors were heavier and more broken.MariaDB PLC, the publicly traded company behind the popular open-source database, has caught analysts' attention after a range of problematic circumstances. The database company, whose stock is down by nearly 70% since its IPO, depends on the fortunes of Oracle-derived MySQL, subject to corporate shuffles, insufficient information disclosure, and an inconsistent influx of features. Investors and analysts are concerned that the company's outlook and future growth are uncertain due to inexperienced management, unrealistic goals, and a constantly changing industry. However, some users continue to defend MariaDB, crediting it with excellent performance and speed.MariaDB, a popular open-source database management system, is facing financial troubles after losing a $20 million lawsuit. The company responsible for MariaDB, SkySQL, merged with cloud management company, OSSA, and subsequently went public via a SPAC in December 2022. Founder Monty Widenius has left the company after SkySQL reported significant losses in 2022's Q4. Nevertheless, MariaDB has numerous corporate sponsors, so concerns about its future development are unfounded. Numerous commenters pointed out the difficulty of retaining control over one's own company when accepting venture capital, with VC's and founders having different priorities.",
    "hn_summary": "MariaDB.com shutdown leads to suspicion of financial instability. Allegations of bias and unsupported accusations against MariaDB Corp. are met with skepticism. Public opinion split on MariaDB.org's future. Hacker News thread discusses allegations of discrimination, shifts to comparison of MariaDB and Postgres. MariaDB Corporation filing for bankruptcy, impact on development is uncertain. MariaDB PLC's stock declines by nearly 70% since IPO, analyst concern over inexperienced management and industry changes. $20 million lawsuit loss and SkySQL merger contribute to financial troubles. Future development concerns unfounded due to corporate sponsors."
  },
  {
    "id": 35471129,
    "timestamp": 1680800111,
    "title": "Show HN: ADHD-friendly Pomodoro web app",
    "url": "https://brainpls.work/",
    "hn_url": "http://news.ycombinator.com/item?id=35471129",
    "content": "Brain pls work",
    "summary": "Unfortunately, as this is only a one-line comment, there is not enough information to provide a concise summary.",
    "hn_title": "Show HN: ADHD-friendly Pomodoro web app",
    "original_title": "Show HN: ADHD-friendly Pomodoro web app",
    "score": 217,
    "hn_content": "\"Brainpls.work\" has been designed to support users with ADHD. It utilizes the Pomodoro technique of time management to help guide and track productivity. An HN user suggests separating time awareness from tracking and planning as a useful way to use the timer. Other users share their experiences with ADHD and suggest strategies, such as medication and background noise, to help manage it. There is a strong emphasis on the personal and individual nature of ADHD and related coping mechanisms. The discussion highlights the importance of finding what works for the individual, whether it's a website or a physical clock, or even reality TV in the background.A new timer designed to help people with ADHD stay on task has been criticized in the comments section for being web-based rather than a local app. Users with ADHD struggle to stay focused and the timer is meant to offer a visible reminder to keep on track. Some users suggested making the timer a physical device with smart technology that could sync with other devices. Others offered solutions to make the browser app more effective such as displaying a timer icon in the window bar or tab favicon or hijacking the browser's Picture in Picture mode.A new attention/flow timer called BrainPlsWorkEnjoy has been released on GitHub. Some users prefer it as a native desktop app to avoid adding another browser tab or an electron app. Users with strict IT policies find webapps like this useful, though working with different operating systems can be tricky. Some users experience anxiety watching the timer countdown, while others prefer not to use the Pomodoro technique altogether. Overall, users appreciate the simplicity of this timer and suggest alternatives like WorkRave and Pomofocus. Additionally, users suggest creating bespoke solutions using AI development.Users praise a new personal study flashcard app that tracks progress; some feedback includes suggestions for improvement such as adding audible ticking and notifications, a feature to mark distractions in a simple way, and the automatic display of the user's local time. A user also notes that the app's creator may have developed it for personal use due to being diagnosed with ADHD.",
    "hn_summary": "'Brainpls.work' Pomodoro-based timer for ADHD support criticized as web-based. Suggestions made for smarter timer device and browser app improvements. New attention/flow timer app released on Github, preferred as native app. Users laud personal flashcard app tracking progress. Feedback includes adding audible notifications, distraction marking, and local time display. App developer may have ADHD."
  },
  {
    "id": 35468304,
    "timestamp": 1680789104,
    "title": "Meta Releases New AI-Based Photo Segmentation Tool to Everybody",
    "url": "https://arstechnica.com/information-technology/2023/04/meta-introduces-ai-model-that-can-isolate-and-mask-objects-within-images/",
    "hn_url": "http://news.ycombinator.com/item?id=35468304",
    "content": "New AI model can \u201ccut out\u201d any object within an image\u2014and Meta is sharing the code | Ars TechnicaSkip to main contentBiz & ITTechSciencePolicyCarsGaming & CultureStoreForumsSubscribeClose  Navigate StoreSubscribeVideosFeaturesReviewsRSS FeedsMobile SiteAbout ArsStaff DirectoryContact UsAdvertise with ArsReprints  Filter by topic Biz & ITTechSciencePolicyCarsGaming & CultureStoreForums  Settings Front page layout  Grid    List  Site themelightdark   Sign in     flying corgi alert  \u2014New AI model can \u201ccut out\u201d any object within an image\u2014and Meta is sharing the codeMeta's \"Segment Anything\" uses AI to isolate objects on command.Benj Edwards  - Apr 5, 2023 7:55 pm UTC Enlarge / An example of SAM selecting the outline of a corgi in a photo.Meta reader comments57 with Share this storyShare on FacebookShare on TwitterShare on RedditOn Wednesday, Meta announced an AI model called the Segment Anything Model (SAM) that can identify individual objects in images and videos, even those not encountered during training, reports Reuters.According to a blog post from Meta, SAM is an image segmentation model that can respond to text prompts or user clicks to isolate specific objects within an image. Image segmentation is a process in computer vision that involves dividing an image into multiple segments or regions, each representing a specific object or area of interest.Further ReadingMeta unveils a new large language model that can run on a single GPU [Updated]The purpose of image segmentation is to make an image easier to analyze or process. Meta also sees the technology as being useful for understanding webpage content, augmented reality applications, image editing, and aiding scientific study by automatically localizing animals or objects to track on video.Typically, Meta says, creating an accurate segmentation model \"requires highly specialized work by technical experts with access to AI training infrastructure and large volumes of carefully annotated in-domain data.\" By creating SAM, Meta hopes to \"democratize\" this process by reducing the need for specialized training and expertise, which it hopes will foster further research into computer vision.In addition to SAM, Meta has assembled a dataset it calls \"SA-1B\" that includes 11 million images licensed from \"a large photo company\" and 1.1 billion segmentation masks produced by its segmentation model. Meta will make SAM and its dataset available for research purposes under an Apache 2.0 license. Advertisement Currently, the code (without the weights) is available on GitHub, and Meta has created a free interactive demo of its segmentation technology. In the demo, visitors can upload a photo and use \"Hover & Click\" (selecting objects with a mouse), \"Box\" (selecting objects within a selection box), or \"Everything\" (which attempts to automatically ID every object in the image).Enlarge / A screenshot of Meta's Segment Anything demo website, isolating \"Everything\" in the image.Benj Edwards / MetaWhile image segmentation technology is not new, SAM is noteworthy for its ability to identify objects not present in its training dataset and its partially open approach. Also, the release of the SA-1B model could spark a new generation of computer vision applications, similar to how Meta's LLaMA language model is already inspiring offshoot projects.Further ReadingFinding an image with an image and other feats of computer visionAccording to Reuters, Meta CEO Mark Zuckerberg has emphasized the importance of incorporating generative AI into the company's apps this year. Although Meta has not released a commercial product using this type of AI yet, it has previously utilized technology similar to SAM internally with Facebook for photo tagging, content moderation, and determining recommended posts on Facebook and Instagram.Meta's announcement comes amid fierce competition among Big Tech companies to dominate the AI space. Microsoft-backed OpenAI's ChatGPT language model gained widespread attention in the fall of 2022, sparking a wave of investments that may define the next major business trend in technology beyond social media and the smartphone.reader comments57 with Share this storyShare on FacebookShare on TwitterShare on RedditBenj Edwards   Benj Edwards is an AI and Machine Learning Reporter for Ars Technica. For over 16 years, he has written about technology and tech history for sites such as The Atlantic, Fast Company, PCMag, PCWorld, Macworld, How-To Geek, and Wired. In 2005, he created Vintage Computing and Gaming. He also hosted The Culture of Tech podcast and contributes to Retronauts. Mastodon: benjedwards@mastodon.social Twitter @benjedwardsAdvertisement Channel Ars Technica\u2190 Previous story Next story \u2192Related StoriesToday on ArsStoreSubscribeAbout UsRSS FeedsView Mobile SiteContact UsStaffAdvertise with usReprintsNewsletter SignupJoin the Ars Orbital Transmission mailing list to get weekly updates delivered to your inbox.Sign me up \u2192 CNMN Collection WIRED Media Group \u00a9 2023 Cond\u00e9 Nast. All rights reserved. Use of and/or registration on any portion of this site constitutes acceptance of our User Agreement (updated 1/1/20) and Privacy Policy and Cookie Statement (updated 1/1/20) and Ars Technica Addendum (effective 8/21/2018). Ars may earn compensation on sales from links on this site. Read our affiliate link policy.Your California Privacy Rights | Do Not Sell My Personal Information The material on this site may not be reproduced, distributed, transmitted, cached or otherwise used, except with the prior written permission of Cond\u00e9 Nast.Ad Choices",
    "summary": "Meta has developed a new image segmentation model called SAM that can isolate any object in images or videos on command. SAM aims to democratize the image segmentation process by reducing the need for specialized training and expertise. The technology is suitable for webpage content understanding, image editing, and augmented reality applications. SAM is noteworthy for its ability to identify objects not present in its training dataset and its partially open approach. In addition, Meta has created a dataset called SA-1B that includes 11 million images and 1.1 billion segmentation masks that will be made available for research purposes under an Apache 2.0 license.",
    "hn_title": "Meta Releases New AI-Based Photo Segmentation Tool to Everybody",
    "original_title": "Meta Releases New AI-Based Photo Segmentation Tool to Everybody",
    "score": 197,
    "hn_content": "Meta has released a new AI-based photo segmentation tool, with openness and AI development playing important roles in the company. One HN user points out the need for AI library without a closed-source solution, while another discusses speaker diarization tools. Users praise Meta\u2019s embrace of openness in AI, with one Economist report highlighting their role in the competitive landscape. However, some users criticize Meta, worrying whether the company\u2019s valuable and significant software contributions will be for a platform no one is using. The AI-based photo segmentation tool is the main point of interest for the article.Meta (formerly Facebook) released 'Segment Anything,' an AI model that can accurately segment an image into multiple objects, drawing the boundaries between objects, and could be used in photo-editing, AR, and VFX applications. The model was trained on a diverse dataset consisting of 12.6 million images and made available as open-source. The announcement sparked discussions on HN about the possibly misleading article title and the value of open-source database records. Some users also commented on the already existing photo segmentation tools and the need to disable autoplay videos.An HN user with autism suggests the use of working Chrome extensions to solve audio or text-related issues. No further details provided. YC Summer 2023 applications are open.",
    "hn_summary": "Meta releases AI-based photo segmentation tool with openness and AI development praised. Some worry about platform viability. Model trained on 12.6 million open-source images. Users critique misleading article title and existing segmentation tools. No relevance to Chrome extension or YC applications."
  },
  {
    "id": 35466675,
    "timestamp": 1680778558,
    "title": "What happens when you leak AWS credentials & how AWS minimizes the damage",
    "url": "https://xebia.com/blog/what-happens-when-you-leak-aws-credentials-and-how-aws-minimizes-the-damage/",
    "hn_url": "http://news.ycombinator.com/item?id=35466675",
    "content": "What happens when you leak AWS credentials and how AWS minimizes the damage - Xebia            Xebia  Digital TransformationDigital StrategyDevOps and SREAgile TransformationCloudData and AISoftware TechnologyLow CodeMicrosoft SolutionsXebia AcademyIndustriesFinanceRetailTravel | HospitalityHealthcarePublic | UtilitiesNon-ProfitTransport | Trade | LogisticsBusiness | ITTechnology | Telecom | MediaSolutionsTrainingCustomer StoriesInsightsNewsBlogArticlesPodcastsEventsBooksCareersAbout usAbout usTeamPartnersContact and Locations     Europe EuropeAmericasAPACMiddle East and AfricaUK \u00d7  Digital TransformationDigital StrategyDevOps and SREAgile TransformationCloudData and AISoftware TechnologyLow CodeMicrosoft SolutionsXebia AcademyIndustriesFinanceRetailTravel | HospitalityHealthcarePublic | UtilitiesNon-ProfitTransport | Trade | LogisticsBusiness | ITTechnology | Telecom | MediaSolutionsTrainingCustomer StoriesInsightsNewsBlogArticlesPodcastsEventsBooksCareersAbout usAbout usTeamPartnersContact and Locations Globe  Europe EuropeAmericasAPACMiddle East and AfricaUK  BlogWhat happens when you leak AWS credentials and how AWS minimizes the damage by Tibor Hercz    05 Apr, 2023 AWSSecurity     Share       I heard multiple times that AWS scans public GitHub repositories for AWS credentials and informs its users of the leaked credentials.So I am curious to see this for myself, so I decided to intentionally leak AWS credentials to a Public GitHub repository. And show you the steps I took and how I got informed about the leaked credentials.Setting up the credentialsI created a IAM user in my AWS account named test-user and generated an access key and secret for this user and attached a very limited policy to this user.{  \"Version\": \"2012-10-17\",  \"Statement\": [    {      \"Sid\": \"ListBucket\",      \"Effect\": \"Allow\",      \"Action\": \"s3:ListBucket\",      \"Resource\": \"arn:aws:s3:::aws-leaked-credentials\"    }  ]}I then pushed the AWS access key and secret to GitHub see the commit here: Commit: 33b4d387e94e16b1c8b9277056299bdb02de3a4b.Very quickly after pushing the credentials to GitHub various things happened which I will show below.Timestamps and events after leaking the credentials to GitHubHere you will find all the events that happened after pushing to GitHub.12:33:12 \u2013 Pushed the credentials to GitHub12:34:19 \u2013 The AWSCompromisedKeyQuarantineV2 policy is attached to the IAM user test-user by AWS12:34:32 \u2013 Various List and Describe calls are made using the leaked credentials12:35:08 \u2013 Received an email from AWS with the subject \u2018ACTION REQUIRED: Your AWS Access Key is Exposed for AWS Account 12345678\u2019As you can see 1 minute and 7 seconds after leaking the credentials AWS added the AWSCompromisedKeyQuarantineV2 policy. Because AWS IAM is eventually consistent the malicious actor was able to perform various API calls even after the AWSCompromisedKeyQuarantineV2 policy has been added. Luckily this was short-lived because IAM has little delay for changes to take effect. 2 minutes after leaking the credentials I received an email from AWS informing me of the event and providing instructions on how to secure the account.Below you will find detailed information about every event.Policy attached by AWSThe AWSCompromisedKeyQuarantineV2 is attached to the IAM user test-user. This policy denies the most important actions. But if the leaked credentials have a lot of permissions the malicious actor could still do damage to systems running in the AWS account.See the policy below:{ \"Version\": \"2012-10-17\", \"Statement\": [  {   \"Effect\": \"Deny\",   \"Action\": [    \"cloudtrail:LookupEvents\",    \"ec2:RequestSpotInstances\",    \"ec2:RunInstances\",    \"ec2:StartInstances\",    \"iam:AddUserToGroup\",    \"iam:AttachGroupPolicy\",    \"iam:AttachRolePolicy\",    \"iam:AttachUserPolicy\",    \"iam:ChangePassword\",    \"iam:CreateAccessKey\",    \"iam:CreateInstanceProfile\",    \"iam:CreateLoginProfile\",    \"iam:CreatePolicyVersion\",    \"iam:CreateRole\",    \"iam:CreateUser\",    \"iam:DetachUserPolicy\",    \"iam:PassRole\",    \"iam:PutGroupPolicy\",    \"iam:PutRolePolicy\",    \"iam:PutUserPermissionsBoundary\",    \"iam:PutUserPolicy\",    \"iam:SetDefaultPolicyVersion\",    \"iam:UpdateAccessKey\",    \"iam:UpdateAccountPasswordPolicy\",    \"iam:UpdateAssumeRolePolicy\",    \"iam:UpdateLoginProfile\",    \"iam:UpdateUser\",    \"lambda:AddLayerVersionPermission\",    \"lambda:AddPermission\",    \"lambda:CreateFunction\",    \"lambda:GetPolicy\",    \"lambda:ListTags\",    \"lambda:PutProvisionedConcurrencyConfig\",    \"lambda:TagResource\",    \"lambda:UntagResource\",    \"lambda:UpdateFunctionCode\",    \"lightsail:Create*\",    \"lightsail:Delete*\",    \"lightsail:DownloadDefaultKeyPair\",    \"lightsail:GetInstanceAccessDetails\",    \"lightsail:Start*\",    \"lightsail:Update*\",    \"organizations:CreateAccount\",    \"organizations:CreateOrganization\",    \"organizations:InviteAccountToOrganization\",    \"s3:DeleteBucket\",    \"s3:DeleteObject\",    \"s3:DeleteObjectVersion\",    \"s3:PutLifecycleConfiguration\",    \"s3:PutBucketAcl\",    \"s3:PutBucketOwnershipControls\",    \"s3:DeleteBucketPolicy\",    \"s3:ObjectOwnerOverrideToBucketOwner\",    \"s3:PutAccountPublicAccessBlock\",    \"s3:PutBucketPolicy\",    \"s3:ListAllMyBuckets\",    \"ec2:PurchaseReservedInstancesOffering\",    \"ec2:AcceptReservedInstancesExchangeQuote\",    \"ec2:CreateReservedInstancesListing\",    \"savingsplans:CreateSavingsPlan\"   ],   \"Resource\": [    \"*\"   ]  } ]}CloudTrail eventIn the us-east-1 CloudTrail logs you can see that a AttachUserPolicy API call is made to attach the AWSCompromisedKeyQuarantineV2 policy. In the event record it clearly states that this has been invoked by AWS \"invokedBy\": \"AWS Internal\".CloudTrail event:{  \"eventVersion\": \"1.08\",  \"userIdentity\": {    \"type\": \"IAMUser\",    \"principalId\": \"AIDAxxxxxxxxx\",    \"arn\": \"arn:aws:iam::xxxxxxxxx:user/test-user\",    \"accountId\": \"xxxxxxxxx\",    \"accessKeyId\": \"ASIAxxxxxxxxx\",    \"userName\": \"test-user\",    \"sessionContext\": {      \"sessionIssuer\": {},      \"webIdFederationData\": {},      \"attributes\": {        \"creationDate\": \"2023-03-21T11:34:19Z\",        \"mfaAuthenticated\": \"false\"      }    },    \"invokedBy\": \"AWS Internal\"  },  \"eventTime\": \"2023-03-21T11:34:19Z\",  \"eventSource\": \"iam.amazonaws.com\",  \"eventName\": \"AttachUserPolicy\",  \"awsRegion\": \"us-east-1\",  \"sourceIPAddress\": \"AWS Internal\",  \"userAgent\": \"AWS Internal\",  \"requestParameters\": {    \"userName\": \"test-user\",    \"policyArn\": \"arn:aws:iam::aws:policy/AWSCompromisedKeyQuarantineV2\"  },  \"responseElements\": null,  \"requestID\": \"7b163d6c-xxxxxxxxx\",  \"eventID\": \"c3eda312-xxxxxxxxx\",  \"readOnly\": false,  \"eventType\": \"AwsApiCall\",  \"managementEvent\": true,  \"recipientAccountId\": \"xxxxxxxxx\",  \"eventCategory\": \"Management\"}Malicious actor?I found it surprising how quickly the malicious actor made some automated API calls with the leaked credentials. Meaning that they scan GitHub public repositories constantly for leaked credentials.The user agent used was aws-sdk-go-v2/1.17.1 so they probably have an automated tool that detects leaked credentials and start scanning the AWS account for resources. In the image below you see the various API calls they made, luckily without any luck because they didn\u2019t have the permissions for these API calls.Below you will find the CloudTrail log of the ListCertificates API call:{  \"eventVersion\": \"1.08\",  \"userIdentity\": {    \"type\": \"IAMUser\",    \"principalId\": \"AIDAxxxxxxxxx\",    \"arn\": \"arn:aws:iam::xxxxxxxxx:user/test-user\",    \"accountId\": \"xxxxxxxxx\",    \"accessKeyId\": \"AKIAYUBS5O3BYC7WBJWO\",    \"userName\": \"test-user\"  },  \"eventTime\": \"2023-03-21T11:34:36Z\",  \"eventSource\": \"acm.amazonaws.com\",  \"eventName\": \"ListCertificates\",  \"awsRegion\": \"eu-west-1\",  \"sourceIPAddress\": \"3.xxx.xx.xxx\",  \"userAgent\": \"aws-sdk-go-v2/1.17.1 os/linux lang/go/1.18.10 md/GOOS/linux md/GOARCH/amd64 api/acm/1.15.2\",  \"errorCode\": \"AccessDenied\",  \"errorMessage\": \"User: arn:aws:iam::xxxxxxxxx:user/test-user is not authorized to perform: acm:ListCertificates because no identity-based policy allows the acm:ListCertificates action\",  \"requestParameters\": null,  \"responseElements\": null,  \"requestID\": \"b83e5733-xxxxxxxxx\",  \"eventID\": \"37d59144-xxxxxxxxx\",  \"readOnly\": true,  \"eventType\": \"AwsApiCall\",  \"managementEvent\": true,  \"recipientAccountId\": \"xxxxxxxxx\",  \"eventCategory\": \"Management\",  \"tlsDetails\": {    \"tlsVersion\": \"TLSv1.3\",    \"cipherSuite\": \"TLS_AES_128_GCM_SHA256\",    \"clientProvidedHostHeader\": \"acm.eu-west-1.amazonaws.com\"  }}Email from AWSWithin two minutes of leaking the credentials I received an email from AWS informing me that the credentials have been leaked. See the first part of the email below:Hello,We have become aware that the AWS Access Key AKIAYUBS5O3BYC7WBJWO , belonging to IAM User test-user , along with the corresponding Secret Key is publicly available online at https://github.com/tiborhercz/aws-leaked-credentials/blob/33b4d387e94e16b1c8b9277056299bdb02de3a4b/credentials.txt.Your security is important to us and this exposure of your account\u2019s IAM credentials poses a security risk to your AWS account, could lead to excessive charges from unauthorized activity, and violates the AWS Customer Agreement or other agreement with us governing your use of our Services.To protect your account from excessive charges and unauthorized activity, we have applied the \u201cAWSCompromisedKeyQuarantineV2\u201d AWS Managed Policy (\u201cQuarantine Policy\u201d) to the IAM User listed above. The Quarantine Policy applied to the User protects your account by denying access to high risk actions like iam:CreateAccessKey and ec2:RunInstances. You can view all the actions denied by the policy by going here: https://console.aws.amazon.com/iam/home#policies/arn:aws:iam::aws:policy/AWSCompromisedKeyQuarantineV2$jsonEditor?section=permissions.In the email they also give guidance on how to secure the account. They do this in four steps: 1. Rotate and delete the exposed AWS Access Key AKIAYUBS5O3BYC7WBJWO 2. Check your CloudTrail log for unsanctioned activity 3. Review your AWS account for any unauthorized AWS usage 4. You must respond to the existing Support Case or create a new one to confirm completion of the steps above in order to restore access to your account, prevent suspension, and apply for a billing adjustment, if applicable.How does AWS achieve thisHow does AWS respond this fast when credentials are leaked is something I am not 100% sure about, because I do not have confirmation from AWS itself.How they could achieve this is by using GitHub \u2018Secrets Scanning\u2019 service and using the \u2018Secret scanning alerts for partners\u2019. GitHub will then report leaked secrets to these partners, when receiving this report AWS has some automated system that adds the AWSCompromisedKeyQuarantineV2 policy, sends the email and opens a support ticket.ConclusionWhen leaking AWS credentials to GitHub, AWS has safeguards in place to protect you. AWS and the malicious actors act impressively fast on the leaked credentials both taking action immediately. AWS informs the root user and adds a Deny policy to the IAM user. The malicious actor starts to scan the account for resources they can exploit.It is very nice that AWS protects its users in this way, but we could better prevent the leaking of the credentials. There are various ways of preventing leaking the credentials.You could run a pre commit locally scanning for secrets before pushing to GitHubAdd a secret scanner in your CI/CD pipelineThe GitHub Secrets Scanning for users Configuring secret scanning for your repositories by Tibor Hercz Explore related posts  AWS | Cloud Three Calls To Action for Security On AWS Steyn Huizinga 01 Aug, 2022  AWS | Python | Technology AWS CloudTrail Summary Notebook Thomas de Ruiter 31 May, 2022  AWS | Security Discovering the AWS access you actually need\u2026 Thijs de Vries 19 Feb, 2020  Xebia  Creating Digital Leaders Careers Contact Privacy Statement Cookie Statement Connect Linkedin   Twitter   Github  \u00a9 Xebia 2023 | All rights reserved.",
    "summary": "An AWS user intentionally leaked their AWS credentials to a public GitHub repository to see what would happen. Within a minute of leaking the credentials, AWS added a \"Quarantine Policy\" to the user account and informed the user via email with instructions on how to secure their account. A malicious actor quickly made automated API calls with the leaked credentials, but were unsuccessful due to limited permissions. AWS uses a GitHub Secrets Scanning service to quickly detect and respond to leaked credentials. To prevent credential leakage, users can run pre-commit scans locally or add a secret scanner to their CI/CD pipeline.",
    "hn_title": "What happens when you leak AWS credentials and how AWS minimizes the damage",
    "original_title": "What happens when you leak AWS credentials and how AWS minimizes the damage",
    "score": 180,
    "hn_content": "A Hacker News user set up a project to automatically leak AWS secrets published to the Python package index, triggering secret scanning processes and quarantining keys. Users lamented the lack of an easy way to report leaked secrets from most services. A user pointed out that rotation is necessary after exposing an AWS access key, frustrating those with many keys in an account. AWS invalidates tokens committed into a public GitHub repository, but rogue parties already have access to the key if the information is public. Automated systems can be used to perform these tasks faster.AWS users have been advised not to revoke keys if in a production system, talk to their team and figure out the remediation process first. AWS support should be contacted ASAP if a user believes they have been attacked or see something they did not spin up. One user suggested AWS allow keys to be used from certain IPs only to add additional security. Source IP is an IAM global condition that is available for all requests. A script or git hook is suggested to prevent users from pushing anything that looks like a credential. It is not clear if the scanner used to detect AWS key leaks was programmed with malicious intent.",
    "hn_summary": "An HN user set up a project to automatically leak AWS secrets & trigger scanning processes. It's frustrating to rotate keys with many in an account. AWS invalidates tokens in public repositories, but rogues may have access already. AWS users advised to talk to team before revoking keys in production. AWS support should be contacted ASAP after an attack. Additional security can be added by limiting key usage to certain IPs. A script or git hook can prevent pushing of credentials. Scanner's programming intent is unclear."
  },
  {
    "id": 35471420,
    "timestamp": 1680801310,
    "title": "Gource \u2013 Animate your Git history",
    "url": "https://gource.io/",
    "hn_url": "http://news.ycombinator.com/item?id=35471420",
    "content": "Gource - a software version control visualization toolToggle navigationGourceNewsVideosControlsWikiSourceBlogDonate$ USD\u20ac EUR\u00a3 GBP$ CAD$ AUD$ NZDDonategource-0.53.win64-setup.exegource-0.53.win64.zipgource-0.54.tar.gzIntroductionSynopsisRelated SoftwareDonationsContactNewsIntroductionSoftware projects are displayed by Gource as an animated tree with the root directory of the project at its centre. Directories appear as branches with files as leaves. Developers can be seen working on the tree at the times they contributed to the project.Gource includes built-in log generation support for Git, Mercurial, Bazaar and SVN. Gource can also parse logs produced by several third party tools for CVS repositories.Synopsisview the log of the repository (Git, SVN, Mercurial and Bazaar) in the current path:gourceFor more options and examples see the Controls wiki page, consult the included README file or man page documentation.Related SoftwareYou may also want to check out Logstalgia, a web server access log visualization tool.DonationsIf you like Gource and would like to show your appreciation and encourage future work on this and other open source projects by the author, please consider making a donation!DonateContactIf you use Gource at work and are interested in getting new features developed or maybe would like to discuss other bespoke visualization work please don't hesitate to contact me.News19 January 2023Gource 0.54 has been released.Changes since 0.53:Added experimental support for Wayland (beroset).Fixed building on Apple M1 by updating autoconf macros (Ckhardin).Downloads:gource-0.54.tar.gz30 April 2022Gource 0.53 has been released.Changes since 0.52:Added --high-dpi option.Fixed various bugs with Retina displays on MacOS.Fixed slider timestamp font not affected by --font-scale.Fixed hovering over end of slider stopping time advancing.Downloads:gource-0.53.win64-setup.exegource-0.53.win64.zipgource-0.53.tar.gz2 April 2022Gource 0.52 has been released.Changes since 0.51:Support rendering at native resolution on Retina / Ultra HD displays.Support ISO 8601 timestamp format.Allow custom log and caption file timestamps to be strings.Change regular expression library to PCRE2.Fixed filenames not being affected by --font-scale (Carl Colena).Fixed file key not being affected by --font-scale.Added --file-idle-time-at-end option.Added --fixed-user-size option.Downloads:gource-0.52.win64-setup.exegource-0.52.win64.zipgource-0.52.tar.gz21 November 2019Gource 0.51 has been released.Changes since 0.50:Fixed --font-file relative path handling.Fixed a bug in resolving the repository root directory from a relative path.Downloads:gource-0.51.win64-setup.exegource-0.51.win64.zipgource-0.51.tar.gz14 November 2019Gource 0.50 has been released.Changes since 0.49:Right mouse button rotation now pivots around the camera.Added --font-file option.Added --enable-font-file option to configure.Added --no-time-travel option (Lars Schmertmann).Added --dir-name-position option (Lars Schmertmann).Added --file-extension-fallback option (Lars Schmertmann).Added --user-show-filter option (Victor Lopez).Added --disable-input option (Joey Parrish).Added --loop-delay-seconds option (Joey Parrish).Added --font-scale option.Added filename, dirname and user font size options (Carl Colena).Added workaround for FFMpeg error parsing Gource PPM video output.Fixed a bug in the Mercurial log parser that caused changes to be missed.Fixed file removal being cancelled by an action with an earlier timestamp.Fixed a bug in the log file format detection that could result in the wrong first entry being displayed for a custom log.Fixed a bug where automatically cycling through a config with multiple repositories reset settings to their defaults.Thanks to everyone who contributed to this release.Downloads:gource-0.50.tar.gz14 June 2018Gource 0.49 has been released.Changes since 0.48:Fixed compatibility with GLM 0.9.9.0.Downloads:gource-0.49.tar.gz13 February 2018Gource 0.48 has been released.Changes since 0.47:Can now generate logs from git sub module directories.Fixed building with GLM 0.9.9.UPDATE: this release was partly made to allow building with GLM 0.9.9 (which is in alpha). Unfortunately, on further testing it was discovered that it is unstable with this version due to a change to the library removing default constructors of vectors, resulting in uninitialized values being used. The current release of GLM 0.9.8 should be fine.Downloads:gource-0.48.tar.gz8 September 2017Gource 0.47 has been released.There are a few new command line options around filtering and displaying files, some new display settings and some fixes.The Windows build is now 64-bit. Also we've enabled STDOUT with the --output-stream option on Windows so you can pipe Gource directly into ffmpeg like on Linux.Changes since 0.44:Added --screen option.Added --window-position XxY option.Added --frameless option.Added --file-show-filter REGEX option (swoogles).Added --filename-time and --filename-colour options (gh2k).Improved handling of very low seconds-per-day values (malengrin).Fixed crash when SVN log lacks author information (obarthel).Fixed low mouse movement speed with some mice while repositioning camera.Additional git log command validation (cym13).Allow lower case hex colours in custom logs (HSorensen).Enabled STDOUT support with --output-stream '-' on Windows (circulosmeos).Now requires SDL 2 to build (deprecated SDL 1.2 support removed).Downloads:gource-0.47.win64-setup.exegource-0.47.win64.zipgource-0.47.tar.gz30 July 2016Gource 0.44 is a minor release to fix a build error with newer versions of GCC.Changes since 0.43:Fixed crash when taking a screenshot with an odd resolution.Fixed type deduction compilation error with newer versions of GCC.Documentation improvements.Downloads:gource-0.44.tar.gz16 October 2014Gource 0.43 has been released to fix a minor build issue with Boost on multi-arch Linux systems.There are no other changes so if you're not affected by this you can stick with 0.42.Changes since 0.42:Updated boost autoconf macros to fix multi-arch detection.Downloads:gource-0.43.tar.gz23 September 2014I've been nominated for this years New Zealand Open Source Awards in the people's choice category.9 May 2014Gource 0.42 fixes some bugs introduced in 0.41 affecting Mercurial, Bazaar support and date range filtering.Changes since 0.41:Fixed bzr log command when no start date was specified (chrisf).Fixed hg log commit order when date range specified.Fixed hg log command line on Windows.Fixed parser bug in date range filtering code.Downloads:gource-0.42.tar.gzgource-0.42-setup.exegource-0.42.win32.zip14 April 2014Gource 0.41 has been released.You can now specify a date range directly with --start-date and --stop-date (using 'YYYY-MM-DD hh:mm:ss' ISO format).Gource now uses SDL 2.0 when available, providing much better multi-monitor support.Changes since 0.40:Multi-monitor support using SDL 2.0 when available.SDL 1.2 support is deprecated.Full screen mode now uses desktop resolution by default.Added --start-date, --stop-date 'YYYY-MM-DD hh:mm:ss' options.Added --dir-name-depth option.Changed --file-idle-time default value to 0.Changed screenshot format to PNG.Downloads are now hosted on Github as Google Code no longer accepts adding new downloads:gource-0.41.tar.gzgource-0.41-setup.exegource-0.41.win32.zipIf you package Gource for a distro, please update the dependencies to use SDL 2 instead of SDL 1.2.",
    "summary": "Gource is an animated tree graphic generator for software project directories that developers can work on. The tool has built-in log support for Git, Mercurial, Bazaar, and SVN, and can parse logs made by third-party tools for CVS repositories. Gource has extensive documentation, examples, and controls on its wiki page, which include new features, fonts, filters, and options like the  --high-dpi option, --file-idle-time-at-end option or --fixed-user-size option. Gource 0.54 is the latest version, which includes experimental support for Wayland and bug fixes on Apple M1. There are other similar tools like Logstalgia, seen as a helpful web server access log visualization tool. If you like Gource, you can show your appreciation and donate to its author to encourage future development of this and other open-source projects.",
    "hn_title": "Gource \u2013 Animate your Git history",
    "original_title": "Gource \u2013 Animate your Git history",
    "score": 154,
    "hn_content": "Gource \u2013 Animate your Git history | Hacker NewsHacker Newsnew | past | comments | ask | show | jobs | submit login Gource \u2013 Animate your Git history (gource.io)155 points by hyperific 8 hours ago | hide | past | favorite | 22\u00a0comments   ssalka 6 hours ago        | next [\u2013] One of the first things I do any time I start a new job or enter a new repository is run Gource \u2013 it gives me an initial sense of several things:* Project structure (how flat vs hierarchical is the file tree?)* Which files keep being edited (likely to find bugs and/or tech debt there)* Which areas different people tend to work in (eg, do they hop around a lot between client/server?)And of course it is just a fun thing to watch, and usually someone will walk by and ask about what I'm looking at, then they'll come watch with me. reply  bb88 6 hours ago        | prev | next [\u2013] One company I worked for in the past made visualizations of the work being done. They took a repo I was working in, turned it into a gource video and displayed it on the 40 foot screen in the lobby.And there was my name. Making huge changes causing the tree to fork. It was pretty cool. reply  ChuckNorris89 3 hours ago        | parent | next [\u2013] Honestly I find that a bit weird. Maybe I'm too introverted but I would be too embarrassed for my work flow to be put on the spot like that. reply  bb88 2 hours ago        | root | parent | next [\u2013] Only a handful of people noticed it frankly, and it was one of 200 other visualizations on a video loop. reply  MaxLeiter 7 hours ago        | prev | next [\u2013] I discovered Gource back in 2013 when Minecraft released an animation of their first 800+ days of dev: https://www.youtube.com/watch?v=zRjTyRly5WA reply  cobertos 6 hours ago        | parent | next [\u2013] Hah! I also discovered it from the same source and was just about to post the same link. That video made quite an impact on me. reply  ojosilva 4 hours ago        | prev | next [\u2013] We actually created a Gource-export plugin for our product like 6 years ago.It would export our data structures and user activity as a git-like log that Gource could ingest. Then we would create videos that would be posted internally at different product dashboards or used for making a cool demo.We even ended up writing our own JS-based gource, using the C3.js library IIRC. It could ingest more specific activity and history that Gource wouldn't. It didn't have all the shiny visual effects though. reply  7373737373 7 hours ago        | prev | next [\u2013] I used it to visualize comment activity on Reddit: https://youtu.be/8ozKt3O8O4Y reply  hyperific 2 hours ago        | parent | next [\u2013] That was incredible to watch. You can clearly see when the conversation tapers off and then it must have gone viral because it suddenly explodes with activity. Thanks for sharing! reply  nico 7 hours ago        | prev | next [\u2013] Would love to see something like this but that animates social media posts.See a post, then the likes going up, the messages getting pasted\u2026 reply  e4e5 4 hours ago        | parent | next [\u2013] Or for a single user and how they comment, e.g. on Reddit where the subreddits could be the directories reply  amarshall 3 hours ago        | root | parent | next [\u2013] Well, see another comment here: https://news.ycombinator.com/item?id=35472315Which links to https://github.com/void4/reddgource reply  whateveracct 6 hours ago        | prev | next [\u2013] Always fun to run on any repo every year or so.We ran it on our startup and it was really a proud moment as founding engineers. reply  arjonagelhout 5 hours ago        | prev | next [\u2013] I have used this a couple of times for a codebase I started work on 6 months ago. It\u2019s incredibly rewarding to see branches dying off after a successful refactor.It also helped me to make more tangible to friends and family the amount of effort required to write software. reply  sendfoods 3 hours ago        | prev | next [\u2013] slightly embarrassing Gource story...Was part of a group assignment (about 7 people each) and pushed the entire generated Doxygen site without realizing it.After the assignment, the professor used Gource to visualize the codebase of each group. Needless to say the Gource graph blew up and I was the butt of every git related joke for a while. reply  tombert 7 hours ago        | prev | next [\u2013] I remember hearing about this ten years ago, and I played with it, and it's cool enough, though for the life of me I have not been able to figure out anything actually useful to do with it. Does anyone use it as part of their actual workflow? reply  shaunofthedev 6 hours ago        | parent | next [\u2013] At an agency I worked for, we'd play back the gource during a project retro. An opportunity to reflect, or see which surprise characters turned up to throw something at the codebase.I personally enjoyed those sessions, it gave non-coders an opportunity to point and ask questions about various clusters of nodes or find out why we were working on certain things at particular times.The value was debatable to be sure. Fun though. reply  Art_Wolf 6 hours ago        | parent | prev | next [\u2013] Same, we used it for a bit to demonstrate the quantity of work that underly the feature requests to the business. Sure, you see a new button, but HERE is the rest of the iceberg... reply  jackcviers3 2 hours ago        | parent | prev | next [\u2013] It is a direct visualization of churn. You can really tell when some area of the codebase changes every single day. Probably means that you need to break whatever is attracting all the attention apart. reply  goldenpreppy8 7 hours ago        | prev | next [\u2013] Shows how human activity such as git history is quite simlar to how evolution branches and (git programs forks) and some branches dies off and the one that survives is the current way haha reply  azubinski 7 hours ago        | prev [\u2013] This is one of the rare impeccably aesthetic programs. reply  amake 3 hours ago        | parent [\u2013] What does \u201caesthetic\u201d mean to you in this context? replyApplications are open for YC Summer 2023Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "Gource, a tool to animate Git history, is praised for determining project structure, editing trends & working patterns, and is often used for fun visualization. Redditors share using it to visualize comment activity and code refactorings. Some companies even display it publicly. Some struggle to find practical uses but find it rewarding as a reflection tool. Aesthetically pleasing to many."
  },
  {
    "id": 35467917,
    "timestamp": 1680786918,
    "title": "Show HN: Generate startup ideas based on HN comments",
    "url": "https://hn-ideas.tjcx.me/",
    "hn_url": "http://news.ycombinator.com/item?id=35467917",
    "content": "Hacker News Startup IdeasStartup ideas fromHacker NewsEnter an topic, get a random startup idea inspired by Hacker News comments.Made by tjcx",
    "summary": "Introducing a new online tool that generates startup ideas based on topics taken from comments published on Hacker News. Developed by an individual named tjcx, the platform allows users to enter a subject and receive a random startup idea based on comments related to that topic. This invention may prove useful in empowering entrepreneurs and promoting innovation.",
    "hn_title": "Show HN: Generate startup ideas based on HN comments",
    "original_title": "Show HN: Generate startup ideas based on HN comments",
    "score": 152,
    "hn_content": "A new tool has been created that generates startup ideas based on HN comments. Some of the ideas suggested include a platform that offers a subscription service for goat owners to have their goats' blood collected and sold for ritualistic purposes, as well as a fully automated hitman hiring service. However, some of the comments make fun of the ideas, such as a sarcastic suggestion for a \"sacrifice-as-a-service\" startup. Other comments discuss ways to overcome fear of failure, including a platform that offers a universal basic income to individuals engaging in intellectual pursuits.Comments on Hacker News suggest various startup ideas, such as a fitness app that gamifies survival instincts, using AI and computational chemistry for developing personalized medicine, and creating a platform for outsourcing coding assignments. Other suggestions include wearable devices for temperature monitoring, a VR platform for remote pet monitoring, and the use of autonomous tractors in agriculture. Some of the ideas are sarcastic, and the article emphasizes the importance of avoiding bias while presenting relevant information to the reader.Users on Hacker News are sharing ideas for potential startups based on specific prompts, ranging from health tech to online marketplaces for niche communities. The comments cover a wide range of topics, including menstrual products, privacy-focused ISPs, and even a dating app based on interest in software development history. Some comments include humorous or sarcastic suggestions, while others point out potential flaws. The generated business ideas offer potential for entrepreneurs looking for new opportunities, and some could potentially fill gaps in the market.An AI-powered idea generator is gaining attention on Hacker News. Users report mixed results, with some finding it amusing and others not so helpful. Some suggestions are controversial, such as creating custom sex dolls with adjustable child-like features or lab-grown meat made from human cells. Other suggestions include a grammar correction app and a mobile app that allows users to design and order custom butthole-shaped products. Some users criticize the accuracy of the generator, while others suggest improvements such as reducing the \"temperature\" parameter for OpenAI models. Political and religious comments are discouraged in the article.",
    "hn_summary": "A new startup idea generator has been created using HN comments. Ideas range from serious to sarcastic, including a goat blood subscription service and hitman hiring. Comments make fun of ideas, but also suggest platforms for UBI and personalized medicine. Other suggestions include fitness apps, temperature monitoring devices, and VR for pet monitoring. Users on HN suggest a wide range of startup ideas, including controversial ones such as child-like sex dolls and lab-grown human meat. Mixed results reported, with some finding it amusing and others not so helpful. Accuracy criticized, and political or religious comments discouraged."
  },
  {
    "id": 35466718,
    "timestamp": 1680779000,
    "title": "DevOps uses a capability model, not a maturity model",
    "url": "https://octopus.com/blog/devops-uses-capability-not-maturity",
    "hn_url": "http://news.ycombinator.com/item?id=35466718",
    "content": "DevOps should use a capability model, not a maturity model, according to Steve Fenton in Octopus Deploy. A maturity model represents groups of characteristics into a sequence of levels, whereas a capability model connects characteristics to wider system outcomes. Maturity models can be rigid, standardized, activity-based, and not take into account unique business challenges. The DevOps capability model is an outcome-based, multi-dimensional, customizable, and dynamic approach to continuous improvement, encouraging experimentation with tools and processes. The model is structural and SEM-based, and can be overwhelming, but should be used for identifying capabilities to drive incremental gains.None of the information is presented nor explained, and it is unclear what is the purpose of this text.",
    "summary": "DevOps should use a capability model, not a maturity model, according to Steve Fenton. Unlike a maturity model, the approach is outcome-based and encourages experimentation with tools and processes. SEM-based, customizable, and dynamic; it can drive incremental gains by identifying capabilities. Maturity models can be rigid, standardized, and not consider unique business challenges. The capability model connects characteristics to wider system outcomes. The structural model is overwhelming, but should be used for continuous improvement.",
    "hn_title": "DevOps uses a capability model, not a maturity model",
    "original_title": "DevOps uses a capability model, not a maturity model",
    "score": 148,
    "hn_content": "DevOps philosophy for improving collaboration between Dev and Ops died when it became a job title, according to a user's HN post. However, DevOps is ingrained in software now, and its main ideals are commonplace. Dev team's roles and responsibilities have transformed from \"toss it over the fence\" to \"if you build it, you operate it.\" DevOps has driven the adoption of new practices in start-ups, small and medium-sized businesses, and modern tech companies. DevOps's lasting legacy is improving the expected skill level of the average SysAdmin. Kuberenetes, serverless components, and service discovery all point to DevOps as a job title becoming a new set of responsibilities.The DevOps movement died because it failed to push business people to make progress. DevOps is not a new name for a sysadmin, but a role that sets up systems to make it easy for developers to control their own deployments and environments. DevOps work is often specific to a client, and there is not enough cross-pollination between clients using similar skills. DevOps consists of both system administration and development, and it was similar to agile in philosophy. Some DevOps roles have dual responsibility to operate and develop while others merely operate. DevOps pushes the bar higher for skill levels of the average SysAdmin; however, the title is more associated with being an expert consumer of cloud services than actual skills relevant to IT operations. Some DevOps work and tools such as Kubernetes and its distribution of practices survive organisations and spread between organisations and client-specific lineages of software evolution.Comments on Hacker News discuss the co-opting and evolving meaning of the term \"DevOps,\" with some suggesting alternative terms like \"platform engineering\"; one user notes that having DevOps in a job title is often a sure sign that the company is not following the DevOps philosophy; another mentions the difficulties in creating an infrastructure automation platform that can adapt to the peculiar problems of each organization; users also debate the practicality and difficulty in creating diagrammatic observability and live visualizations of systems, with some suggesting focusing on iteration speed instead; one user seeks advice on finding employment in software engineering without an interest in container management, with other users suggesting HPC (high-performance computing) as a potential focus.Users commented on the evolution and limitations of CMMI, while others talked about the nebulous definition of DevOps and how it has been rebranded to Site Reliability Engineering (SRE). The Cynefin framework was also mentioned as a method for handling different types of situations. Some users were cynical about these concepts and the industry's tendency to rebrand them.The post discusses the confusion between DevOps and SRE, and the problem with badly designed maturity models. The use of metrics and a capability model, such as DORA, can tailor to an org's context, but some users criticize it as a sales pitch. The post suggests focusing on meaningful capabilities rather than metrics and implementing a capability-driven dynamic maturity model. However, some users argue that it can be very complex and create endless meetings, and others criticize the lack of insight or innovative approaches in the post. It also highlights the importance of creating a culture that takes responsibility for trying new things in a business development context.",
    "hn_summary": "DevOps transformed dev team's roles and pushed higher SysAdmin skill levels. Some suggest alternative terms like \"platform engineering.\" Metrics-based capability model criticized as a sales pitch, call for meaningful capabilities. Cultivate a culture of trying new things for business development."
  },
  {
    "id": 35463182,
    "timestamp": 1680746507,
    "title": "Adding capacity to the electricity grid is not a simple task",
    "url": "https://www.economist.com/technology-quarterly/2023/04/05/adding-capacity-to-the-electricity-grid-is-not-a-simple-task",
    "hn_url": "http://news.ycombinator.com/item?id=35463182",
    "content": "Adding capacity to the electricity grid is a challenging task, especially when it comes to integrating renewable sources, as grids are not accustomed to rapid change. Expanding the world's capacity to produce the transformers required for grids to expand quickly is vital, but few providers are cautious to do so. Conservative regulation has offered little incentive for strategic investment in grids, and an inability to provide enough grid connections is limiting renewable market share. Speculation and bottlenecks in permitting processes have added to the lengthening queues facing new generating projects. The delay in grid connections is increasing uncertainty and the cost of investment.Regulators are beginning to comprehend the dire need for building long-range connections to meet the demands of grid decarbonization. In November 2022, the European Commission agreed to new regulations, giving renewable energy projects a \"presumption of overriding public interest\". India is working to build out its grid at a furious pace, planning to connect 500GW of renewable capacity by 2030, often in rural or remote locations, while China is benefiting from recent grid expansion. Meanwhile, optimizing queue management and reforming planning procedures remain crucial factors, but it will not all go away, with construction of grid infrastructure requiring careful consideration of the delicate balance of each grid.",
    "summary": "The electricity grid faces challenges in integrating renewable sources, with few providers willing to expand transformer capacity. Conservative regulation and insufficient grid connections limit renewable market share, causing delays and uncertainty in new projects. Regulators acknowledge the need for long-range connections for grid decarbonization, with new regulations to support renewable energy projects. India plans to connect 500GW of renewable capacity by 2030, while China benefits from recent grid expansion. However, optimizing queue management and planning procedures remains crucial, as grid infrastructure construction must balance delicate balances.",
    "hn_title": "Adding capacity to the electricity grid is not a simple task",
    "original_title": "Adding capacity to the electricity grid is not a simple task",
    "score": 131,
    "hn_content": "Adding capacity to the electricity grid is not an easy task due to challenges in the permitting process and several federal environmental laws, which need to be changed to reach renewables goals. One company's solution to the difficulty of creating a route involves engineering a tool that automatically creates possible routes after evaluating roadways, waterways, trees, and ownership. However, this type of technology may not scale in other countries that don't have centralized open data. Implementing power lines on private property could be difficult because it involves determining property ownership versus territory use, which are complex and time-consuming issues to resolve.Eminent domain can add uncertainty and time, making projects complicated. Judges often side with property owners, so it's not frequently used. The USA is an exception, and many wish to revisit the Kelo case. Building public infrastructure may cause troubles with private property owners, and it's difficult to exercise eminent domain. Exercising it should be hard, and it's not good to allow high prices for electricity. Rural people are disproportionally affected, but they also receive subsidies. Complications may arise in finding and reaching property owners who are not registered.South Africa is facing a crisis due to years of government neglect of the power network, resulting in a shortage of electricity. In the Netherlands, despite incentives to go green, the grid capacity is unable to keep up with multi-billion investments, leading to delays in new energy projects and some businesses being unable to connect to the grid. Large data centers from companies like Microsoft and Google are buying up new green energy capacity, meaning they are not actually replacing grey energy sources. Old grid infrastructure is being reused for new off-shore wind farms in the UK, reducing connection costs. However, many new green projects are given connection dates in the 2030s due to slow processes, which could be streamlined through a single government agency.Discussions on the need for stable and sustainable electricity supply in the UK, including the building of proper interconnect between the north and south to stabilize the grid. Some comments express concerns about the cost burden on households and the difficulty of getting projects approved due to political opposition and NIMBYism. Others argue that there have been similar challenges in the past, but it is possible to overcome them with political will. There is also some discussion on the need to maintain grid stability vs. promoting renewable energy sources.The article discusses the challenges of connecting new power generation to the electricity grid, which has a queue-based permit system that is slow but stable. Speeding up the connection process risks damaging stability, and India's electrification serves as a partial example of this. Australia and the UK have relatively reliable grids, and standardization isn't really the issue, but rather, the manufacturing capacity for producing standardized parts is limited. Another issue is regulation, with the UK successfully transitioning to renewables at a faster rate. Despite this, the need for stability is crucial when considering adding new power sources to the network.The speed of transition to renewable energy has been fast in the UK, with wind and solar replacing most of the coal, followed by natural gas, and biomass only accounting for around 5% of the grid supply. The challenge with grid stability may become more visible as grids reach 2/3 to 3/4 renewables. Southern Australia has also successfully transitioned to renewables without hydro power. The increase in electricity produced from natural gas and biomass is contributing to grid stability despite wind and solar production growth. The UK's wind capacity is set to triple by 2030, though interconnections, availability of natural gas for fallback, and the reduction of emissions are also important factors. Tesla's Master Plan 3 admits the need for hydrogen for seasonal energy storage and synthetic fuels and acknowledges the need for compromise rather than solely relying on renewables for grid stability.An energy report indicates that switching from fuel to storage would triple electricity prices, but some users contend that the back-of-the-envelope calculation overstates the costs. The discussion raises concerns about the additional requirements of renewables such as overbuilding, storage, and grid connectivity. An HN user claimed that decentralized power generation is already standard in countries with inadequate grids, and that a centralized grid's instability would not impede new generation coming online. While the uptime of grids in developed countries is around 99.9%, power cuts are becoming more frequent due to increased demand and the cost of electricity.A South African describes experiencing fewer, shorter power outages in countries like Germany and Austria compared to his home country. Although violent crime is a problem, pogroms are not a chief concern for the writer. Traveling wisely is often predicated on local knowledge and people often pay for private security despite the limitations it imposes. Houses, businesses, and internet services have varying backup power solutions, often depending on wealth. All of these challenges make it difficult for older people to immigrate from countries like South Africa.Comments on Hacker News cover a range of topics related to the reliability of electrical grids, including the challenges of underground vs overhead wires and the importance of interconnects to new power generation. The reliability of grids varies depending on the location and type of event, such as wind storms knocking down power lines or brown outs. The use of kerosene as a proxy for electricity consumption is disputed, and some say that replacing overhead lines with underground may not always be the best option. The incorporation of local power generation through solar panels and EV batteries can reduce load on the grid. Finally, there is concern about the challenges faced by China and the potential for them to become the new global leader in energy.China is leading in ultra-high voltage DC transmission, which could serve as a major technical step-up towards a more interconnected world, thanks in part to its Belt and Road Initiative seeking to increase Chinese-led infrastructure investment in more than 80 countries. There's a false premise that \"renewables == unstable grid,\" which is out of date and proven wrong by decades of experience. Renewables have never been a problem for grids, although renewables aren't consistent, and synthetic inertia and management of sudden drops in supply could be a challenge. The low efficiency of e-fuels would not be offset by upgrading the grid for better interconnectivity. Despite this, some are building chemical plants in remote places with excess wind output to produce fuels like efuel.",
    "hn_summary": "Adding capacity to the electricity grid faces challenges in permits, environmental laws, property ownership, eminent domain, and finding unregistered owners. Countries face unique grid problems, including South Africa's neglected power network and the Netherlands' grid capacity unable to keep up with investments. Old grid infrastructure is being reused for new off-shore wind farms in the UK, but many green projects have dates in the 2030s. Stability in grid vs. promoting renewable energy sources and the need for hydrogen for energy storage is discussed. Challenges of renewables include overbuilding, storage, and grid connectivity. South Africans have fewer power outages in countries like Germany and Austria. China is leading in ultra-high voltage DC transmission. Renewables have never been a problem for grids, although synthetic inertia and management of sudden supply drops remain a challenge."
  },
  {
    "id": 35469276,
    "timestamp": 1680793421,
    "title": "Announcing WCGI: WebAssembly & CGI",
    "url": "https://wasmer.io/posts/announcing-wcgi",
    "hn_url": "http://news.ycombinator.com/item?id=35469276",
    "content": "Announcing WCGI: WebAssembly + CGIDocsWAPMCommunityBlogJobsStar12,800Announcing WCGI: WebAssembly + CGIMichael BryanApril6, 2023Welcome to the future of server-side development with WebAssembly!Today we are introducing WCGI, a technology that marries the power of WebAssembly with theversatility and simplicity of CGI.Here are some of WCGI's highlights:You can reuse your existing CGI applications by compiling them to WASI(AssemblyScript, C, C++, Go, PHP, Python, ...)Ship ultra-small packages that will only contain your business logicand static assets, no HTTP stack or bulky Docker containersCompletely sandboxed execution: WebAssembly code runs in a sandbox, with oneisolated instance per requestPicture running Wordpress and not having to worry about attackers breaking intoyour system. With WCGI, now this a reality!Try Wordpress locally with Wasmer# Install wasmer beta 2curl https://get.wasmer.io -sSfL | sh -s \"v3.2.0-beta.2\"# Execute Wordpressmkdir dbwasmer run-unstable wasmer/wcgi-wordpress-demo --mapdir=/db:dbWe are trialing the new runner architecture via wasmer run-unstable.In the future you would simply use wasmer runThe Why Behind WCGIWhen venturing into serverless solutions at Wasmer, we faced a crucial question:should we create our own framework and risk locking developers into a walledgarden, or should we adopt an open standard that allows them to utilize existingcode?CGI's alignment with the goal of executing a program per HTTP request makes it acompelling choice. Interestingly, CGI can outperform many other solutions (such as WSGI in Python/Ruby or NodeJS) in terms of scalability and latency in serverless environments.Furthermore, it also closely mirrors the workers proposal from the WinterCommunityGroup.Consider the challenge of running PHP programs on servers. We have two primaryoptions:Wrap the PHP interpreter with a layer that instruments each HTTP callUse the existing php-cgi program and simply compile it to WasmOption 2 is not only faster, but it also enables any web application on Wasmermore efficiently.By embracing WCGI, those seeking to achieve greater efficiency, security, and flexibility in server-side development can truly benefit from this approach.Creating a WCGI Application with RustTo create a WCGI application using Rust, first add the cgi crate as adependency in your Cargo.toml file:$ cargo add cgiNext, write your Rust server, like the example below:// src/lib.rsuse cgi::{http::StatusCode, Request, Response};fn main() {  cgi::handle(handler);}fn handler(request: Request) -> Response {  let who = String::from_utf8_lossy(request.body());  let who = if who.trim().is_empty() {    \"World\"  } else {    who.trim()  };  cgi::text_response(StatusCode::OK, format!(\"Hello, {who}!\"))}After writing your implementation, compile it to the wasm32-wasi target.You may need to install the WASI target if you haven\u00e2\u0080\u0099t already (rustup target add wasm32-wasi).$ cargo build --target wasm32-wasi --releaseCreate a wasmer.toml file that describes your package and contains a WCGIcommand that the wasmer CLI will execute.[package]name = \"wasmer/wcgi-rust-template\"version = \"0.1.0\"description = \"A template for WCGI applications\"license = \"MIT OR Apache-2.0\"readme = \"README.md\"repository = \"https://github.com/wasmerio/wcgi-rust-template\"[[module]]name = \"server\"source = \"target/wasm32-wasi/release/wcgi-rust-template.wasm\"abi = \"wasi\"[[command]]name = \"server\"runner = \"wcgi\"module = \"wcgi\"annotations = { wcgi = { dialect = \"rfc-3875\" } }Now you can start the server and browse tohttp://localhost:8000/ to see it in action:$ wasmer run-unstable .Creating a WCGI Application in PHPPHP-CGI was first introduced by Rafael Fern\u00c3\u00a1ndez L\u00c3\u00b3pez.Thanks to his original version of php-cgi compiled to WebAssembly & WASI,Wasmer can now run PHP websites using WCGI.First, create a new repository and copyphp-cgi.wasminto it. Then, create an app/ directory and add some PHP code to it.$ mkdir app$ echo '<? print(\"Hello, World!\"); ?>' > app/index.phpNow we need to create a wasmer.toml file.This is a bit longer than the Rust one because we need to set some environmentvariables that tell php-cgi which script to invoke. We also want the app/folder to be bundled with the package when we publish it.[package]name = \"wasmer/wcgi-php-template\"version = \"0.1.0\"description = \"A PHP template for WCGI applications\"license = \"MIT OR Apache-2.0\"readme = \"README.md\"repository = \"https://github.com/wasmerio/wcgi-php-template\"[[module]]name = \"php\"source = \"php-cgi.wasm\"abi = \"wasi\"[[command]]name = \"php\"runner = \"wcgi\"module = \"php\"[command.annotations.wcgi]dialect = \"rfc-3875\"[command.annotations.wasi]atom = \"php\"env = [\"DOCUMENT_ROOT=/app\", \"SCRIPT_FILENAME=/app/index.php\"][fs]\"app\" = \"app\"You can now run this with wasmer run-unstable:$ wasmer run-unstable .Opening up our web browser shows the \u00e2\u0080\u009cHello, World\u00e2\u0080\u009d message as expected.You can also use the wasmer CLI\u00e2\u0080\u0099s --mapdir flag to make specific directorieson your host machine available to the WebAssembly application.This is really useful during development because it means you can mount yourapp/ directory and make changes on the fly without needing to restart the WCGIserver.First, start the WCGI server and tell it that the /app directory inside theWebAssembly application corresponds to the ./app directory on your host.$ wasmer run-unstable --mapdir /app:./app .If you open http://localhost:8000/ up in your browser,you should see the \u00e2\u0080\u009cHello, World!\u00e2\u0080\u009d from before.Next, modify app/index.php to print phpinfo() , hit save, and refresh yourbrowser.This package is also available on WAPM.$ wasmer run-unstable wasmer/wcgi-php-templateYou can find in Github the source code for the Wordpress Wasmer pacakage, and the PHP WCGI template.We can't wait to see what you create next with WCGI!In Summary\u00e2\u0080\u00a6WCGI represents a refined approach to server-side development, integrating theflexibility, security, and performance of WebAssembly. This innovativetechnology has the potential to reshape the landscape of serverlessapplications, providing developers with a powerful and versatile solution fortheir projects.Watch this space \u00f0\u009f\u0098\u0089Making software universally accessible\u00c2\u00a9 2019 Wasmer, Inc.DocsWAPMCommunityBlogJobsValues and CultureAboutGithubTwitterSlack\u00c2\u00a9 2023 Wasmer, Inc.",
    "summary": "Wasmer has introduced WCGI, a technology that combines the power of WebAssembly with the simplicity of CGI for server-side development. It can reuse existing CGI applications, create ultra-small packages with only business logic and static assets, and runs WebAssembly code in a sandbox. It ensures greater efficiency, security, and flexibility in server-side development and has the potential to reshape the landscape of serverless applications. Web developers can create WCGI applications with Rust and PHP by compiling them to Wasm, and WCGI servers can be run using the wasmer CLI. Wasmer is continuously working on expanding WCGI's possibilities.",
    "hn_title": "Announcing WCGI: WebAssembly and CGI",
    "original_title": "Announcing WCGI: WebAssembly and CGI",
    "score": 130,
    "hn_content": "Wasmer.io has announced WCGI, a WebAssembly and CGI implementation that allows for seamless integration with existing servers, similar to Java Servlets, and its performance benefits. While Java has successfully addressed many challenges such as ecosystem tie-ins and seamlessness, Wasmer addresses the problem with open standards and browser compatibility. It can run outside the browser and consolidate performance for all hardware, with the future likely to revolve around WASM and WebGPU, despite controversies surrounding WASM speed or parallelism. Commentators discuss the limitations of the JVM and cite the JVM's public specs, principle of multiple implementations, and open-source tooling as pros and cons for marketplace adoption.Experts discuss the use of Java applets in the early days of the web and the advantages they provided compared to Flash and JavaScript at the time. Users also discuss the pros and cons of using technologies like GWT and JVM, as well as the potential for WebAssembly to fill similar roles. However, concerns are raised about the security implications of compiling services to WASM, and the idea is met with skepticism.Wasmer has introduced WebAssembly CGI (WCGI), which allows CGI web applications to be run on top of the WebAssembly system interface. The new tool can compile any programming language capable of returning CGI output and implements a simple Request-Response interface. WCGI is expected to run faster and to be more secure than traditional methods, working entirely in memory and isolating applications in individual memory cells. The new technology eliminates the need to send environment variables during requests and should work with tools such as WAGI. WordPress is one of many applications being tested for efficiently running on the WCGI stack.Web developers are experimenting with the WebAssembly Control Interface (WCGI) and Wasmer to streamline the integration of native code into web services. The WCGI focuses on security and agility, while Wasmer facilitates the execution of code by various compilers. Developers claim that this solution reduces delays in the procurement of third-party services, allows for the reuse of existing code, improves portability, and enhances Apache and PHP servers' performance. One potential use case for this technology is on-demand resource allocation and termination for high-security applications. Other benefits include fast startup, keeping system resources minimal, and secure control over modules between web requests. However, runtime speed is still slower on WebAssembly than on native systems.",
    "hn_summary": "Wasmer.io announces WCGI, allowing seamless integration with existing servers; Java Servlets vs. open standards; WebAssembly solutions outside the browser. Java applets, GWT and JVM discussed. WCGI features memory isolation, CGI output capability and eliminates need for environment variables. Wordpress testing performance on WCGI. Developers utilizing WASM and Wasmer for native code inclusion, reducing delays and improving portability. High-security app resource allocation and module control. Runtime speed slower on WebAssembly compared to native."
  },
  {
    "id": 35467711,
    "timestamp": 1680785710,
    "title": "JSON vs. XML",
    "url": "https://corecursive.com/json-vs-xml-douglas-crockford/#",
    "hn_url": "http://news.ycombinator.com/item?id=35467711",
    "content": "Douglas Crockford, a pioneering web developer, shares the story of JSON versus XML and his approach to finding a simple way to build software on the CoRecursive podcast. He discusses his battles against XML and complexity while emphasizing that there's a better way to build software. Crockford also touches on the history of JavaScript, including its controversial name and its origins in response to the browser war between Microsoft and Netscape. He explains how JavaScript became foundational for the web and his role in making JSON a standard.Electric Communities, a Bay Area of BC funded social network, struggled with security issues and slow startup time due to Java. They acquired The Palace and attempted to monetize it with ads, but advertisers were hesitant about user-generated content. They took on a project from Turner Broadcasting and used JavaScript to build the front-end of an online card game, despite the language's poor reputation. This experience led Doug to discover the value of functional programming and lambdas, and he began advocating for JavaScript's effective use. Unfortunately, the dot com bust caused Electric Communities' downfall. During the winding down process, Doug created a JavaScript parser and implemented Top Down Operator Precedence.Douglas Crockford, creator of JSLint, built the tool to detect errors in JavaScript code syntax, discovering that programmers needed to use forms less likely to cause errors. He and Chip Morningstar then founded State Software to build single-page web applications using their simplified data formatting, JSON. However, despite demonstrations, they only gained one small investor because XML dominated the industry, a standard backed by big companies, later inclusive of tech influencer Dave Winer. As a result, Douglas made JSON a standard, creating a one-page website, and using the domain name json.org.Douglas Crockford, the creator of JSON, discussed the history of the format and its impact on web development. Crockford was initially threatened by SOAP, a competing protocol that aimed to simplify data transfer. He eventually created JSON, which became popular during the AJAX revolution when developers realized its simplicity and efficiency compared to XML. While working at Yahoo, Crockford evangelized for proper JavaScript usage and the use of the YUI library. He also worked to get MIT to embrace JavaScript due to its similarity to Scheme.Douglas Crockford recounts the history of JSON and its rise in popularity as a way to represent data in text for better client-side experiences on the web. However, this success was also met with some downsides, such as issues with bandwidth usage due to hotlinking, which Crockford resolved by adding an alert message to the JSON script. He also faced challenges in standardizing JSON, going through a painful process with the IETF, and ultimately finding success with Ecma. Despite its eventual standardization and worldwide adoption, JSON's rise also saw a corresponding decline in the popularity of XML.Doug Crockford, a famous programmer known for JSON, reflects on his career and encourages developers to embrace new paradigms. He believes Object-Oriented Programming has become outdated and advocates for a language that can handle secure distributed programming in today's distributed world. He suggests that the next paradigm will likely involve actors and message passing. He also shares advice for language creators, emphasizing the importance of making programming as free as possible. Crockford believes JavaScript frameworks have become too big and complicated and instead opts for plain old JavaScript when writing interactive web applications.Several HN users share their experience and thoughts on topics such as domain modelling with functions, design principles from functional programming, and incident response. There is also an interesting talk about using Scala at Duolingo and a discussion about Scala Native. The posts range from 48min to 58min and offer insights from experts in the field. Overall, these posts offer valuable information and opinions on a variety of tech-related topics for professionals looking to expand their knowledge.",
    "summary": "Doug Crockford, creator of JSON, shares his story on the CoRecursive podcast and discusses his battles against XML, the history of JavaScript, and his role in making JSON a standard. He also reflects on his career and encourages developers to embrace new paradigms. HN users share their experience and thoughts on various tech-related topics. Overall, these posts offer valuable insights for professionals looking to expand their knowledge.",
    "hn_title": "JSON vs. XML",
    "original_title": "JSON vs. XML",
    "score": 130,
    "hn_content": "Comments on Hacker News are discussing the pros and cons of JSON and XML. While JSON is popular for web development, some users point out that XML is better suited for document formatting and transforming. Some reminisce about the past when XML was all the rage but admit to its flaws. One user who used XSLT in an XML-heavy system found that it could have been simplified if written as an imperative algorithm. Another user pokes fun at marketing buzzwords like \"XML Protocol\" and \"gluten-free bacon packaging.\"HN users debate the relevance of a tagline in a Yahoo ad campaign. Some users question whether technically true claims in advertising hold any bearing, while others argue it depends on if the marketing works towards the target audience, as in the case of Windows 95. Users also discuss past implementations of XML in programming, including Scala and VB.NET, and share insights on its complexity including external libraries and broken parsers. Comments express admiration for the podcast host's thoughtful interview style and provide links to follow-up resources.Experts discuss the complexity of XML in comparison to JSON, with some remarking that good XML-tools are rare or expensive. One user advocates for XML, citing their satisfaction with crafting xsl/xq scripts that do exactly what they need. The intricate history of XML standards proliferation and competing XML parsers is also discussed. Some users concede that certain complexities of XML were necessary, which have been replaced by similar complexities in modern JSON tools like JSON Schema, Swagger/OpenAPI, and Zod. A few dissenters criticize XML, pointing out its syntax verbosity and unnecessary features, and even attacking it for being a prerequisite to SOAP.A thread on Hacker News discusses the use of XML versus JSON for data interchange, ultimately concluding that JSON is the better choice unless the XML document requires namespaced elements, due to JSON's simplicity and widespread adoption. One user notes that serialization libraries leave details like close element tags to the library, and that JSON encoding/decoding is built into more languages than XML. Another user points out that XML is more extensible and has better transformation support through XSLT, but JSON remains simpler and more widely used. Other markup languages like BSON and Binary XML exist but are not widely adopted.XML complexity is partially due to the need for namespacing, which requires a mapping of prefixes to namespaces. S-expressions may be simpler and more powerful than XML, and the new KiCad file formats use S-expressions. JSON is ontologically simpler than XML but becomes as bad when brought up to feature parity. JSON schema can be useful for validating input and configuration files, but not everyone finds it necessary.An HN user points out the importance of converting unvalidated serialized data into a structured type. JSON schema can be used to validate input and enforce pre-conditions in languages like Python or JavaScript. JSON schema is especially useful for files checked into a git repo and posted to an API, where a pre-commit hook can enforce schema. Text-based protobufs are an alternative to JSON schema for config files. While comments are useful for config files, JSON's lack of comments makes it a good format for data interchange. XML's advantage lies in its ability to handle complex data types.Users discussing the pros and cons of JSON, OpenAPI, XML, and SOAP/WSDL. JSON and OpenAPI lack a Date type, and adding validations about dates to those schemas is difficult. Some users prefer XML for its better datatypes and schemas that allow autocompletion. JSON is criticized for its excessive escaping, while XML is criticized for its high markup overhead. There is still value in functional programming that the industry has yet to pick up, despite the popularity of JavaScript frameworks. The act of reinventing the wheel can lead to better, more innovative solutions.The post discusses various topics related to web development, including JavaScript libraries versus plain old JavaScript, the benefits and drawbacks of XML and JSON, and the potential retirement of JavaScript as a programming language. Some comments provide additional insight into the advantages and disadvantages of different data formats and programming languages. Despite the debate, there is no clear solution to the inherent trade-offs of standardizing data formats or choosing a programming language.HN users discuss the limitations of Dixy, a new data serialization format similar to YAML. Some criticize its non-uniform syntax and difficulty distinguishing between types of data. Others appreciate its simplicity compared to more complex formats like YAML and XML. Users also discuss the advantages and disadvantages of JSON compared to XML, including JSON's lack of support for comments and XML's flexibility. A user mentions his experiences with XML and the drama surrounding SOAP and Java EE, expressing a desire for a middle ground between simplicity and flexibility in data formats. Lastly, an engineer shares his struggles with securing funding for his startup during the post-.com bubble era.The primary focus is to provide a concise and neutral summary for articles that are geared towards tech-savvy readers. Articles that start with 'Ask HN:' or 'Tell HN:' should be focused on the comments. To make articles special and interesting to readers, vital points should be captured, and some comments should also be considered. XML is preferred for complex data and ontological representation, unlike JSON. Lastly, Douglas Crockford is revered among programmers and holds a special place in the hearts of JS enthusiasts.CUELANG aims to simplify JSON generation and validation, with some saying that it is significantly more precise than XML. Users shared their opinions about XML, JSON, and other languages such as TOML, EDN, and binary formats including MessagePack, AVRO, and Protobuf. While some preferred the readability and ease of use offered by XML, others argued in favor of JSON for its relative simplicity. Users did not agree on which language was best for configuration files or data serialization but argued that different formats exist for a reason, and should be selected according to situational need.Adam Bosworth's talk at ISCOC04 highlights that HTML's success was due to its limitations, not in spite of them, and that XML, despite being powerful, was too complex for everyday users. XML's initial backers were angered by HTML for \"corrupting\" content with layout, and wanted data to be separated from presentation. Bosworth argues that HTML's explosive uptake would not have been possible if it had been shipped with XML's complex layered set of content. XML is better for documents without a regular markup, while JSON is preferable for structured data/records in RPC protocols. The success of JSON was due to its free and open nature, without any intellectual property protection or requirements for attribution.",
    "hn_summary": "Experts debate the pros and cons of XML and JSON, with some preferring XML for complex data while others suggest JSON due to its simplicity and widespread adoption. Douglas Crockford is revered among programmers and holds a special place in the hearts of JS enthusiasts. Users discuss the advantages and disadvantages of different data formats and programming languages, with no clear solution to their inherent trade-offs. Despite the debate, different formats exist for a reason and should be selected according to situational need. Adam Bosworth argues that HTML's explosive uptake was due to its limitations, not in spite of them, and that XML was too complex for everyday users."
  },
  {
    "id": 35468637,
    "timestamp": 1680790810,
    "title": "Website hosted on a 24 year old Linux server",
    "url": "http://raq.serialport.org/",
    "hn_url": "http://news.ycombinator.com/item?id=35468637",
    "content": "Just a moment...            Enable JavaScript and cookies to continue",
    "summary": "As there is no raw text content given, I'm unable to provide a summary for this task.",
    "hn_title": "Website hosted on a 24 year old Linux server",
    "original_title": "Website hosted on a 24 year old Linux server",
    "score": 128,
    "hn_content": "A website hosted on a 24-year-old Linux server is being discussed on Hacker News with 128 comments. Comments reminisce about the good old days of Geocities and discuss how view counters were magical and mysterious. Some suggest ways to implement a view counter or a guest book, including using PHP or a simple file. Others recommend complicated approaches, such as using a WAL Mode SQLite database or Redis. There is some discussion of concurrent file access and using the Linux kernel inotify API.HN users reminisce about the earlier days of personal website hosting and its evolution. Some reference dnotify as being able to fill a similar role to inotify. Others mention modern incarnations of Geocities. The conversation also touches on societal attitudes towards computer enthusiasts and programming. One user mentions that programming is no longer stigmatized and has been embraced by a wider audience. Another user describes how some teenagers today are still embracing tinkering and DIY projects.An old server, hosted by Cloudflare, is still serving pages after 24 years, but is only available through the Cloudflare cache. The server is running on a Pentium 90 with 128MB of memory and running NetBSD with Apache, and its external address is provided by an SD/IDE bridge device. A few other users attest that hosting a website on outdated hardware is not practical for serving pages in current times. Additionally, while it is possible to access the server, some users find it difficult due to cloudflare.\nA 24-year-old Linux server is still running and hosting a website, which brings back memories of earlier web technology, like the Cobalt RaQ server appliance, and MIPS processors being used in commercial Linux products. Users recall simple webpages with guestbooks, counters and \"under construction\" animated GIFs. While there are risks of root privilege vulnerabilities from outdated software and hardware, some users remain curious about whether there is a blanket issue for out-of-date systems if best practices are followed. The server's host acknowledged that the server was compromised due to botnets and\u00a0script kiddies, but the server remains running today, possibly with Cloudflare in front of it.\u00a0",
    "hn_summary": "A 24-year-old Linux server is still running with NetBSD and Apache, hosting a website. Users reminisce about outdated web technology, with some suggesting new ways to implement guest books or view counters. There is also discussion on concurrent file access and societal attitudes towards programming. Hosting a website on outdated hardware is not practical for serving pages in current times. Some find it difficult to access the server due to cloudflare."
  },
  {
    "id": 35475482,
    "timestamp": 1680820768,
    "title": "Is it my fault if you can't handle the truth? (2019)",
    "url": "http://agileotter.blogspot.com/2019/09/is-it-my-fault-you-cant-handle-truth.html",
    "hn_url": "http://news.ycombinator.com/item?id=35475482",
    "content": "The article discusses the dangers of excessive rationality, and how being right can be less important than being helpful. Using psychology and family therapy, the article explains how a lack of humanity in communication can lead to irresponsibility and power moves. Super-reasonable individuals may discount themselves and others, respecting only the context. The article also presents an example of helpful truth giving in Randall Monroe and questions readers about hiding behind rationality and using it to escape responsibility. Finally, a comment debates the rarity of super-rationality as an issue in dealing with others.A discussion on Hacker News regarding productivity and agile methodology. The conversation has evolved in the comments, touching on topics such as hyper-rationality, preplanning poker, and defending scrum against criticism. One user argues that programming is mostly about thinking, while another suggests that corporate dysfunction can come from a combination of platitudes and misguided ideas. A recommendation is made to check out a book called \"Agile In A Flash.\" No new technologies or releases were mentioned.",
    "summary": "The article warns about the dangers of excessive rationality, highlighting that being helpful is sometimes more important than being right. It explains how overly rational individuals can lack empathy and create power plays. The article cites an example of a positive problem-solving approach and questions readers about hiding behind rationality to avoid responsibility. Comments in the Hacker News discussion include topics such as productivity and agile methodology, where users touch on rationality and corporate dysfunction. One user suggests a book on Agile as a reference. No new technologies or releases were mentioned.",
    "hn_title": "Is it my fault if you can't handle the truth? (2019)",
    "original_title": "Is it my fault if you can't handle the truth? (2019)",
    "score": 126,
    "hn_content": "The article discusses the importance of guiding people towards truth instead of telling them they are wrong, backed by studies about the ineffectiveness of trying to convince someone with facts. HN users in the comments add that examining the context, being focused only on the right, and avoiding insults all help to reach people. The post raises questions about the emotional maturity that comes with deriving pleasure from someone else's anger. Finally, although the article uses humor as an analogy, many users point out that humor may not be appropriate in many contexts, especially those involving terminal diagnoses.A Hacker News thread features comments about the use of humor in difficult situations, including doctors delivering tough news to patients. Some find it funny, while others say it can be insensitive or unclear if a joke is being made. The conversation evolves into discussing the importance of balancing honesty and kindness, with some arguing that honesty is prioritized too heavily in modern times. Overall, the thread emphasizes the importance of being kind and respectful in communication, while also recognizing that some people may not respond well to criticism no matter how it is delivered.HN users engage in a discussion on the value of brutal honesty versus respecting others' feelings. Some users argue that being right doesn't accomplish much if it involves being insufferable and that objective reality can be counterproductive. Others, however, emphasize the importance of leading people to confront the truth about themselves to avoid realizations and disappointments later in life. The discussion sheds light on how to address situations where one doesn't care about how their input is received and the moral consequences of being unbearably honest.The article discusses the importance of delivering the truth kindly, as harsh honest comments can often be unproductive, and instead encourages empathy and kindness while sharing the truth. Several users agree that a balance between objectivity and empathy is necessary when conveying harsh truths, while others point out the arrogance often associated with hyper-rationality. The comments suggest that people may more easily accept the truth when communicated in a compassionate and respectful manner, adding that pride and a lack of interest in learning can cause people to become closed off to various perspectives. Overall, the takeaway is that people should strive for scientific rigour and honesty, but also cultivate empathy and understanding when communicating with others.Experts on Hacker News debate the purpose of science and whether or not it is about finding the \"truth.\" While some argue that science is a way of getting closer to the \"truth,\" others see it as more of an iterative process of building models and predictions based on observation - science does not actually concern itself with \"truth\". The notion of being \"hyper-rational\" is also brought up in the context of game theory, which means that each player in a scenario thinks about profit or loss from their actions as well as the outcomes of other actors in the game.An article examines the behavior of those claiming to be rational but are, in fact, not seeking to find the truth. Comments suggest that those who focus more on being right than on convincing others may not be approaching truth-seeking in the most effective way. Diplomacy and tact matter when trying to enlighten others with truth. Overwhelmingly, neglect of truth leads to cruelty and power struggles. It is also necessary to take responsibility for the words we speak and actions we take. Delivering harsh truths without tact may create an unproductive outcome.Experts in the field debate how to communicate truth effectively without causing offense. One user thinks that many people shoot the messenger, so that they stop getting messages. Others suggest that communicating truth requires choosing the right moment and building the right relationship to avoid being ignored. Some argue that since people have their own preferred narratives, objective truth, in certain contexts, can be hurtful or disrespectful. Others assert that if someone is so emotional over how you deliver your message, they cannot process it, and you have failed to communicate. One user argues that assuming there is one truth is usually a mistake.",
    "hn_summary": "An article emphasizes guiding rather than telling people the truth, as facts are often ineffective. HN users discuss the importance of empathy and context, raising questions about deriving pleasure from anger. Experts debate balancing honesty and kindness, and the need for empathy, respect, and scientific rigour. Debate centers on science's purpose, finding the truth, and game theory. Effective communication of truth requires tact, timing, and relationship-building, as neglect leads to cruelty and power struggles. Some argue that objective truth in some contexts can be disrespectful, and assuming one truth is flawed."
  },
  {
    "id": 35467367,
    "timestamp": 1680783730,
    "title": "C Strings & my slow descent to madness",
    "url": "https://www.deusinmachina.net/p/c-strings-and-my-slow-descent-to",
    "hn_url": "http://news.ycombinator.com/item?id=35467367",
    "content": "In a post on Deus In Machina, Diego Crespo explores working with C Strings, the difficulties that arise from manipulating and encoding them, and ways to handle potential issues. Crespo goes over common C string functions, such as strcpy and strlen, and how they can be unsafe in certain situations. While strncpy_s could provide a solution, it has its own issues, leaving working with known-length strings, using a pointer to the source string, or abandoning portability as potential solutions. Crespo notes that C++ avoids many of these issues by treating strings as objects.The article explores the challenges of working with non-Latin languages in C programming, specifically Unicode and UTF-8 encoding. It discusses the issues faced while handling string operations and printing characters correctly, especially in Windows terminals, and provides possible workarounds. The article also emphasizes the importance of being cautious while working with C strings, as it can lead to undefined behavior or potential attack vectors, despite the language's benefits in speeding up code. The author also invites readers to check out their Twitter account and other articles on niche programming languages and low-level coding.",
    "summary": "Diego Crespo discusses C String manipulation and common functions such as strcpy and strlen, and the potential issues that arise from working with these functions. The challenges of working with non-Latin languages, specifically Unicode and UTF-8 encoding, are detailed with possible workarounds. The importance of caution while working with C Strings, in order to avoid undefined behavior and potential attacks, is stressed. Crespo also notes that C++ avoids some of these issues by treating strings as objects. Readers are invited to check out the author's social media accounts and articles on programming languages and low-level coding.",
    "hn_title": "C Strings and my slow descent to madness",
    "original_title": "C Strings and my slow descent to madness",
    "score": 119,
    "hn_content": "A Hacker News thread discusses the inherent security issues and limitations of C string handling. Users highlight the likelihood of off-by-one errors, the risk of buffer overflows and underflows, and the limitations of the C standard library. One user suggests using alternative string management libraries. While there is no consensus on a specific solution, there is agreement that the C standard library is outdated and requires better memory management techniques.The comments discuss the practicality of using C for string processing, with some suggesting the use of libraries or building one's framework. Some commenters point out that the issue with C's string handling functions is the management of memory, recommending the use of allocators or containers. Others suggest amending the syntax or inventing new language abstractions, although it may hinder adoption. The discussion highlights the challenges of string processing in C, with some commenters recommending the use of libraries, custom frameworks, or a replacement for the C standard library.An HN user commented that C's default libraries are often not optimized enough, and it's better not to blindly rely on them for performance. Another user responded that the Nintendo DS SDK may not have been as optimized as current GCC or clang, and optimizing strlen is usually not worth the effort. However, basic string handling is a good exercise for learning to write SIMD code. A user suggested renaming the strlen function and using full words instead of abbreviations. There was some debate about the readability of abbreviations and naming conventions. One user provided a lengthy implementation of strlen for the musl stdlib, while another user commented on the strengths and weaknesses of different programming languages.Comments on Hacker News cover various topics in tech. One commenter mentions that there is no practical advantage to null terminated strings and that they are extremely error-prone. Another commenter defends Python's indentation-as-syntax feature, praising it for preventing issues like dangling else. One user details a bug caused by multiple occurrences of strncpy(), leading to copying and zeroing out many bytes. There is also discussion about the length of Japanese characters and the nuances of Unicode. Finally, there are several complaints about the shortcomings of Microsoft's console in modern Windows versions.HN users discuss the challenges of working with Chinese text and strings in C on Windows. They note the neglect of the terminal by Microsoft, as well as the shortcomings of the C standard library for string handling. However, users suggest alternative libraries such as antirez's sds library or treating strings as memory locations with characters. While some users express frustration with working with strings in C, others suggest that C strings can be effective if approached properly.The post discusses how C relies on convention to differentiate between character arrays and strings, despite having string literals. While C lacks a concrete string type, it should not be dismissed as not having strings. Several comments suggest alternatives such as strlcpy and SDS. Rolling one's string may be the best option, even if it means implementing small string semantics. C is still used widely, and offers a certain level of power while writing code.C enthusiasts discuss why they enjoy working with the language, citing its access and control, ability to embed scripting languages, powerful macros, and huge library access. They appreciate the freedom to work with the language in their own way, and criticize other languages for doing too much behind their backs. While some suggest alternative languages like Rust, others find it too complex and prefer the simplicity of C. They also discuss different methods for handling strings in C. Some use pointer+len structs, while others store the length in the preceding 4 bytes of the pointer.The difficulties of string handling in C are discussed among expert commenters on Hacker News, with advice for avoiding common pitfalls. Some suggest that limitations exist in libraries for printing pre-determined lengthed strings, while others recommend sticking to UTF-8 and using the C11 u8 prefix on literals to avoid worrying about locale settings. There is also mention of issues with using wchar_t and char16_t and char32_t, and some more specific advice for developers is offered such as explicitly setting the last byte to zero after using strncpy. Overall, while C remains a popular and powerful language, string handling remains an area of concern.HN users discuss the intricacies and issues surrounding C string handling, including interoperability with other languages, the use of fgetc/fgets for initial string input, the potential dangers of using standard string functions and the benefits of writing C strings yourself. Some debate the reasons for writing C in C++ and point out that people often mistake C++ for \"C with classes and strings.\" While optional, many major compilers support the use of strcpy_s as a replacement for strcpy. HN users suggest several ways to handle C string challenges, including using the strdup function, and some provide sample code for ergonomic string handling.Comments from HN users express frustration with C strings and suggest using a string library instead of managing plain arrays. One user touts that Go programming made them a better C programmer, while others criticize C for its lack of consistency and difficulty communicating the expectations of null-terminated arrays. Lastly, a discussion on strcmp's behavior takes place, with users debating its return values. Despite being a well-known and widely used language, C still lacks an efficient solution for string management.",
    "hn_summary": "HN users discuss inherent security issues in C string handling, suggest using alternative libraries, and highlight need for better memory management. Practicality of C for string processing is debated, with some recommending allocators or containers. Default C libraries are criticized for inefficiency, and users suggest renaming strlen function for better readability. Comments also cover bugs caused by strncpy() and nuances of Unicode. C enthusiasts defend language's access and control, while others find it too complex, and discuss different methods for handling strings in C. Advice offered for avoiding common pitfalls of C string handling. Frustration expressed, and alternative string libraries suggested over plain arrays. Despite popularity of C, it lacks efficient solution for string management."
  },
  {
    "id": 35464152,
    "timestamp": 1680755501,
    "title": "MutexProtected: A C++ Pattern for Easier Concurrency",
    "url": "https://awesomekling.github.io/MutexProtected-A-C++-Pattern-for-Easier-Concurrency/",
    "hn_url": "http://news.ycombinator.com/item?id=35464152",
    "content": "MutexProtected: A C++ Pattern for Easier Concurrency \u2013 Andreas Kling \u2013 I like computers!Andreas KlingI like computers!BlogAboutFAQMutexProtected: A C++ Pattern for Easier ConcurrencyIn this post, we will discuss the challenges of programming with locks and how the C++ language offers some useful tools to make it easier. We will start with an example in C and then use C++ to improve upon it in steps. The example APIs are based on real-life APIs from the SerenityOS kernel.Barebones example in CLet\u2019s imagine a struct Thing with a field field that will be accessed by multiple threads. We\u2019ll use a mutex mutex to ensure that only one thread can access it at a time.struct Thing {  Mutex mutex;  Field field;};In C, accessing Thing would typically look something like this:mutex_lock(&thing->mutex);use(&thing->field);mutex_unlock(&thing->mutex);An obvious problem in the C version is that the mutex must be manually unlocked. Forgetting to unlock a mutex tends to have unpleasant consequences.Improving it with a C++ RAII classThe \u201cforgot to unlock\u201d problem is easily solved in C++ with a RAII class for automatic locking & unlocking:{  MutexLocker locker(thing->mutex);  use(thing->field);}The MutexLocker locks the mutex when constructed and unlocks it when destroyed. No need for a manual call to mutex_unlock() anymore.That\u2019s already pretty good! However, the MutexLocker approach still has some major shortcomings:You can still forget to lock the mutex and access field anyway.Developers who are unfamiliar with this code may not realize that mutex and field have this important relationship.Even so, the MutexLocker was our favored pattern in SerenityOS up until 2021, when we introduced a new pattern to the codebase.Adding lambdas to the mix: introducing MutexProtectedMutexProtected is a powerful C++ construct that addresses the main issues with MutexLocker and makes it significantly easier to use mutexes correctly:struct Thing {  MutexProtected<Field> field;};thing->field.with([&](Field& field) {  use(field);});Essentially, MutexProtected<T> is a bundled mutex and T. However, you can\u2019t access the T directly! The only way we\u2019ll let you access the T is by calling with() and passing it a callback that takes a T& parameter.When called, with() locks the mutex, then invokes the callback, and finally unlocks the mutex again before returning.As you can see, we\u2019ve now also solved the issue of someone forgetting to lock the mutex before accessing the field. And not only that, but since the mutex and field have been combined into a single variable, you no longer have to be aware of the relationship between the two. It\u2019s been encoded into the type system!When multiple fields are protected by a single mutex, we can simply combine them into a struct:struct ManyFields {  Field1 field1;  Field2 field2;  Field3 field3;};struct Thing {  MutexProtected<ManyFields> fields;};Note that it\u2019s still possible to make mistakes with MutexProtected, such as deadlocking the program by using multiple MutexProtected simultaneously in inconsistent order. Thankfully such bugs are generally trivial to diagnose compared to data races.That concludes our look at MutexProtected. If you\u2019re currently working on a C++ project using mainly the MutexLocker approach, consider adding something like our MutexProtected to further reduce the chances of using locks incorrectly.You can find the SerenityOS implementation on GitHub. (Note that it\u2019s a little more sophisticated than the imaginary MutexProtected I\u2019ve used for examples above.)Final notesAlthough MutexProtected was introduced to SerenityOS in 2021, we do still have a lot of code using the old MutexLocker pattern. There are still cases where MutexLocker works better, for example when a mutex is used to synchronize something other than data.And yes, it is possible to make life difficult by persisting the T& to an outside location while inside the callback. This is C++ after all, so the programmer does have great freedom. However, doing so is definitely not recommended, and we have yet to encounter anyone trying to do this in our codebase.  Written on April 6, 2023",
    "summary": "The article explains the challenges of programming concurrent applications using locks and presents a C++ pattern called MutexProtected that simplifies this process. The author uses an example in C to demonstrate the need for MutexProtected and prepares a barebones example. The article then introduces a C++ RAII class to solve the problem of forgotten mutex unlocking but shows its shortcomings. The author then presents MutexProtected as a powerful construct that combines a mutex and data type to ensure correct concurrent access to data. The article concludes with the introduction of MemoizedTreeMap, an implementation of a tree-based map that uses MutexProtected to ensure thread safety.",
    "hn_title": "MutexProtected: A C++ Pattern for Easier Concurrency",
    "original_title": "MutexProtected: A C++ Pattern for Easier Concurrency",
    "score": 117,
    "hn_content": "The post is about the MutexProtected C++ pattern, which makes concurrency easier. It works similarly to Rust's mutexes, but in C++. Rust's borrow checker ensures the appropriate use of mutexes, making it impossible to misuse them. Rust's zero-size types can be used as markers in a mutex, enforcing locking even when it's not just data being protected. Boost.synchronized is an existing C++ pattern that uses RAII. However, its many dependencies and complexity can make it difficult to work with, especially for smaller projects.An HN user suggests a straightforward way to include the header-only parts of Boost without building or installing the library. Some commenters note that the documentation for C++ libraries could be improved, with Rust offering particularly well-done documentation. Another HN user suggests that MutexProtected and with() lambda patterns can be problematic, and suggests combining them with a lock(); call to improve ergonomics. However, a later commenter notes that such an approach may still lead to lifetime issues with the lock.The article discusses the use of MutexProtected<T>, which uses RAII for lock protection and provides access to enclosed type through a wrapper with a lock that only releases when the scope ends. Comments discuss the similarities and differences with other similar patterns, including passing lambda for synchronized code and using Clangs GUARDED_BY annotations and thread safety analysis. Other comments suggest making a free function variant of the 'with' method, and some even describe the similarity of MutexProtected<T> to Ada protected objects. The readers seem appreciative of the low-level introduction to the topic, but some comments suggest the article could have gone further by including assembly code.Users on Hacker News discuss the best approach to concurrency in C++, with some arguing for the use of explicit lock and unlock operations while others prefer the RAII-style destructor unlock or the use of lambdas. Some suggest using named \"lock\" and \"unlock\" operations as they are more explicit, while others argue that the lambda approach offers better visibility as the mutex access is a separately indented block. Some users mention the use of std::scoped_lock, which allows for locking multiple locks, while others suggest sharding data by thread to avoid synchronization or contention. While some users favor recursion locks\u00a0to handle recursive calls, others argue that they are not ideal, and users discuss SerenityOS's\u00a0approach to the problem.Experts on Hacker News are debating the use of mutexes versus channels for concurrency in C++. While some argue that channels are a better pattern for concurrency because they allow for easier concurrency and safe message passing, others argue that mutexes can be more effective in certain contexts, such as when forwarding large amounts of memory in constant time between threads. Additionally, some argue that lambdas can be expensive in terms of performance, and suggest looking at resulting assembly when adapting the pattern in code. It is noted that while lambdas can be cheap abstractions in C++, any code under a mutex is likely not in the fast path anyway.",
    "hn_summary": "MutexProtected is a C++ pattern for easy concurrency like Rust's mutexes. Boost.synchronized is complex, but can be used header-only. Comments suggest lambda and RAII-style or explicit lock and unlock, and scoped_lock for multiple locks. Experts debate mutexes versus channels for concurrency."
  },
  {
    "id": 35467948,
    "timestamp": 1680787073,
    "title": "Clarence Thomas & the Billionaire",
    "url": "https://www.propublica.org/article/clarence-thomas-scotus-undisclosed-luxury-travel-gifts-crow",
    "hn_url": "http://news.ycombinator.com/item?id=35467948",
    "content": "Justice Clarence Thomas of the Supreme Court has been accepting luxury trips from Republican donor Harlan Crow for over two decades, without disclosing them, according to documents and interviews obtained by ProPublica. Crow, who spent millions on conservative politics, owns a yacht and private jet on which Thomas has travelled, and has hosted him at his Texas ranch and private resort in the Adirondacks. Thomas' vacations with Crow raise ethical concerns, some legal experts said. There are few restrictions on justices accepting gifts, unlike with Congress, but a law requires the disclosure of most gifts.Justice Clarence Thomas has allegedly received gifts from Harlan Crow, a well-connected conservative businessman, including trips on his private yacht, stays at his resort, and a $19,000 Bible. Thomas has reportedly failed to disclose these gifts on his annual financial disclosures, potentially violating disclosure laws. Crow has deep connections in conservative politics, donating to the Federalist Society and groups advancing conservative legal theories. The painting of Thomas at Topridge shows him in conversation with Leonard Leo, the Federalist Society leader regarded as an architect of the Supreme Court\u2019s recent turn to the right. Crow\u2019s access to the justice extends to anyone the businessman chooses to invite along.Supreme Court Justice Clarence Thomas may have failed to disclose trips to conservative activist Harlan Crow's properties, as well as other trips on Crow's private jet, despite disclosure requirements for federal judges. The trips in question include a 2016 trip to New Haven, Connecticut, and a 2021 trip to a Catholic cemetery near New York City where a bronze statue of Thomas' eighth-grade teacher was unveiled with funding from Crow. The updated ethics guidance for federal judges specifically clarifies that disclosure is required for such stays.",
    "summary": "ProPublica reports that Justice Clarence Thomas allegedly accepted luxury trips from Republican donor Harlan Crow for over two decades, without disclosing them on annual financial disclosures, raising ethical concerns. Crow, who spent millions on conservative politics, owns a yacht and private jet on which Thomas has travelled, and has hosted him at his Texas ranch and private resort. Crow's access to the justice extends to anyone the businessman chooses to invite along, potentially violating disclosure laws. The updated ethics guidance for judges clarifies that disclosure is required for such stays, including a 2021 trip to a Catholic cemetery near New York City where a bronze statue of Thomas' eighth-grade teacher was unveiled with funding from Crow.",
    "hn_title": "Clarence Thomas and the Billionaire",
    "original_title": "Clarence Thomas and the Billionaire",
    "score": 111,
    "hn_content": "Clarence Thomas and the Billionaire | Hacker NewsHacker Newsnew | past | comments | ask | show | jobs | submit login [flagged] Clarence Thomas and the Billionaire (propublica.org)111 points by donohoe 12 hours ago | hide | past | favorite | 38\u00a0comments   alistairSH 11 hours ago        | next [\u2013] Ugh. Between this and Gini Thomas activism, there really needs to be judicial reform at the SCOTUS level. As it stands today, there is effectively no recourse for Justices who misbehave. They aren't bound by the ethics rules that apply to lower courts. And impeachment is effectively a non-starter in today's political climate (requires supermajority of Senate to remove from office). So Thomas can take all the bribes he wants without fear of penalty. reply  Zigurd 11 hours ago        | parent | next [\u2013] He broke the law. It's not complicated. Impeachment is not the only recourse. Nothing prevents a DoJ or IRS investigation. It is not uncommon for journalists to be the first to uncover corruption. reply  d23 11 hours ago        | prev | next [\u2013] Stunning levels of corruption. reply  humanlion87 11 hours ago        | prev | next [\u2013] This is not very surprising. The only thing surprising is this information made it out to the public.The super-rich (billionaires and multi-millionaires) have been working on slowly eroding and corrupting any government institution that stands in the way of them making more money. Their success rate has been pretty good I think. reply  Zigurd 11 hours ago        | prev | next [\u2013] Anyone wondering if laws were broken, keep reading:\u201cIf Justice Thomas received free travel on private planes and yachts, failure to report the gifts is a violation of the disclosure law,\u201d said Kedric Payne, senior director for ethics at the nonprofit government watchdog Campaign Legal Center. (Thomas himself once reported receiving a private jet trip from Crow, on his disclosure for 1997.)Mostly, laws and regulations make sense and you can't evade consequences by claiming gifts are \"hospitality.\" And you don't have to be impeached to be prosecuted. reply  daVe23hu 10 hours ago        | prev | next [\u2013] https://fixthecourt.com/2021disclosures/for those who will dare check the link and see which SCOTUS has investments in Black Rock etc.... reply  lamontcg 7 hours ago        | parent | next [\u2013] Sotomayor owns shares of a BlackRock investment fund (MDLOX), which itself is boring AF and invests in domestic and foreign bonds and it looks like large cap global companies. Her whole portfolio is deeply boring and looks like someone wealthy enough to just park their money in safe dividend-earning instruments and broad-market ETFs along with having one rental property. There's actually nothing to see there, although the substring search for \"BlackRock\" will cause some 20 year olds who don't understand investment to freak out on reddit.(I just wildly guessed that you were making insinuations about Sotomayor and haven't checked the other ones out) reply  peteradio 11 hours ago        | prev | next [\u2013] This has been flagged dead already here from few hours ago: https://news.ycombinator.com/item?id=35466973edit: Ok, this got flagged dead again and I've vouched. What is the problem with the piece? reply  coldpie 11 hours ago        | parent | next [\u2013] > On-Topic: Anything that good hackers would find interesting. That includes more than hacking and startups. If you had to reduce it to a sentence, the answer might be: anything that gratifies one's intellectual curiosity.> Off-Topic: Most stories about politics, or crime, or sports, or celebrities, unless they're evidence of some interesting new phenomenon. Videos of pratfalls or disasters, or cute animal pictures. If they'd cover it on TV news, it's probably off-topic.https://news.ycombinator.com/newsguidelines.htmlThis, to me, falls clearly in the off-topic category. HN isn't a general news discussion board, and I'd prefer it to stay that way. reply  rideontime 11 hours ago        | root | parent | next [\u2013] But this gratified my intellectual curiosity. reply  tablespoon 9 hours ago        | root | parent | next [\u2013] > But this gratified my intellectual curiosity.How so, exactly?Also, what's your definition of \"intellectual curiosity\"? reply  rideontime 8 hours ago        | root | parent | next [\u2013] Why does it matter? It gratified my intellectual curiosity so I gave it an updoot. reply  tablespoon 6 hours ago [flagged]            | root | parent | next [5 more] Because I suspect that phrase doesn't mean what you think it means. reply  rideontime 6 hours ago        | root | parent | next [\u2013] Why's that? reply  tablespoon 5 hours ago        | root | parent | next [\u2013] I answered your question. How about you answer mine? reply  rideontime 3 hours ago        | root | parent | next [\u2013] Why would I do that? reply  Freedom2 3 hours ago        | root | parent | next [\u2013] It might gratify their intellectual curiosity. reply  peteradio 11 hours ago        | root | parent | prev | next [\u2013] I get your point, although:> unless they're evidence of some interesting new phenomenonAnd I do think it gratifies intellectual curiosity to see how the behavior is defended. But I will readily admit that the discussions don't always pan out. reply  coldpie 11 hours ago        | root | parent | next [\u2013] I agree it's a fuzzy line. I'm explaining the position of those who flagged it, since you asked :) reply  peteradio 11 hours ago        | root | parent | next [\u2013] Thanks :) reply  workingdog 11 hours ago        | prev | next [\u2013] The photos at the beginning look sensational.The actual photos look like a slightly fancier version of me and my buddies going fishing and having a cook out. reply  DerpyBaby123 8 hours ago        | parent | next [\u2013] It's not relevant or insightful unless you and your buddies have a shared conflict of interest, and are influential in public life. This is corruption at the highest level. reply  malfist 11 hours ago        | prev | next [\u2013] This _should_ result in impeachment, but I doubt it will. The right tends to close ranks, dissemble, engage in whataboutism, or just simply ignore ethics violations on their side.I'm sure if there was an impeachment proceeding it'd be a straight party vote. reply  mardifoufs 8 hours ago        | parent | next [\u2013] Whataboutism in judicial matters is just called precedent, and it has always been a valid principle in common law. reply  Georgelemental 11 hours ago        | parent | prev | next [\u2013] s/the right/both sides/g reply  klyrs 9 hours ago        | root | parent | next [\u2013] Every time Trump blatantly violates the law and brags about it, Republicans rally and say that pursuit of justice is \"political.\" While it's true that there are criminals on both sides of the aisle, they should all be under scrutiny. But the Republican party is especially blatant in their disregard for the rule of law, to the point of censuring members in favor of investigating and prosecuting obvious and well-documented violations. Will we see anything different for Thomas here? I seriously doubt it. reply  imadierich 11 hours ago        | prev | next [\u2013] clarence thomas is a national treasure reply  rubymancer 11 hours ago        | prev [2 more]          [flagged]         d23 11 hours ago        | parent [\u2013] Indeed. Going to donate now. replyApplications are open for YC Summer 2023Guidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "An essential US Supreme Court Justice could be embroiled in significant corruption as he may have received illicit favors from a billionaire; however, it is unlikely these actions would lead to an impeachment in today's ultra-political climate. While Justice Thomas may not be bound by lower courts' ethical rules, legal action may still be taken, including a Department of Justice or IRS investigation. The apparent corruption from the level of the judiciary highlights the corrupting influence of the super-rich on government institutions, with predictable success so far. Despite being flagrantly against the law, Justice Thomas' actions may go without penalty, partially because of a refusal to hold those in power to account."
  },
  {
    "id": 35468168,
    "timestamp": 1680788399,
    "title": "Rust's Poor Composability",
    "url": "https://thedav.is/post/rusts-poor-composability/",
    "hn_url": "http://news.ycombinator.com/item?id=35468168",
    "content": "Rust's Poor Composability \u00b7 The (Site of) DavisHome        Rust's Poor Composability                          Apr 05, 2023                                \u00b7 3 min                              Rust                      PLT                      Engineering                      Pet-Peeves          I love Rust. I wish they would spend more time making it actually work for non hello-world use-cases.IterationRust has a nice pretty syntax for iterating:for x in &mut something {  *x = (*x) * 2;}EXCEPT when you need to do anything else to the iterator, then its ugly:for (i, x) in something.iter_mut().filter(|| {...}).enumerate() {  *x = (*x) * i}What's the point of having the 'pretty' syntax if it only works in the simplest of cases?I hate syntax that only works in hello world examples. It infuriates me, because it meansthat this is all just Oz, and that you eventually need to pull back the curtainand everything you were promised was a lie.Trying...Rust has a great syntax for early return on Err cases.let thing: Result<A, B> = x.foo();// Will return early with the error if x.foo() returns Err.let thing: A = x.foo()?;BUT when you try to use it with iterators -- which are also amazing, I love using iterators -- IT DOESNT WORK.// ? in an Iterator method doesnt work!! What the hell!let res: Vec<_> = iterator.iter().map(|x| x.foo()?).collect();So instead we need to use the ugly for-loop manual collectionlet res = vec![];for x in &iterator {  res.push(x.foo()?);}In my mind, the for loop syntax should be simple syntactic sugar for iterator.iter().for_each(BODY), not bespoke syntax. The fact this breaks wrecks my mental model. Whats the point of having two completely different iteration syntaxes with different properties?But this also happens elsewhere, because of this ugly inflexability, we cant do:let z = x.foo().map(|y| y.bar()?);we must dolet z = if let Some(y) = x.foo() {  y.bar()?}Gross. The Rust designers really should have ran import this.There should be one-- and preferably only one --obvious way to do it.Again, the absolute lack of composability is astounding. Whats the point of even having iterator methods if you can'tuse them for real world usecases, where code is regularly fallable, so you need to return a Result.AsyncThis is basically the same problem as before, but with .await instead of ?.You must use the for loop syntax if you want to use .await, because iterators are not powerful enoughto support real world use-cases.ConclusionI have been a fan of Rust for 10 years now (wow!), and I love it. But the teams working on language design need toSLOW DOWN and focus on ergonomics and composability. Not adding new syntax because some other language has it.For years now there has been calls for a 'fallow year' for Rust, and I think it should happen. Of course, there areso many people working on Rust, it is infeasable to task everyone on 'ergonomics',but I think it should be the focus at least.Niko has some ideas but theystill seem so lofty compared to basic ergonomic capabilities.There is some work on keyword generics that looks horrendous, but maybe would solve this problem. I hope they can work on it.TODO: reference registers of Rust -- https://without.boats/blog/the-registers-of-rust/TODO: Find the keyword generics work, link to it.            Home          PostsAboutWorksGitHub\u21aa      \u00a92017-2023 Davis Silverman",
    "summary": "The author discusses Rust's poor composability, highlighting syntax issues with for-loops and iterators, and how it affects real-world use-cases; the author criticizes Rust's lack of flexibility and composability, arguing for a slowdown in language development to focus on ergonomics; the author mentions ongoing work on keyword generics and references to enhance composability.",
    "hn_title": "Rust's Poor Composability",
    "original_title": "Rust's Poor Composability",
    "score": 103,
    "hn_content": "A new post on Hacker News highlights Rust's poor composability. One user disagreed, pointing out Rust's versatility in everything from userland utilities to network stacks serving billions. Another user claims the language has an \"ugly inflexibility\" that hinders its use with iterators. Despite this criticism, most users agree that Rust is a powerful language, with one user even comparing it to Perl. However, it's advisable to collect into a result when working with Rust iterators, as this stops at the first encountered error.Comments on a Rust article discuss for loop syntax, idiomatic use of iterators, early exit on error, and issues with boxed functions and closures. The article suggests teams working on language design should focus on ergonomics and composability, but a commenter argues that programmers should use other languages if they don't like Rust. Some point out that Rust's type system can make iterators feel like magic, and async closures are an ongoing area of development.Comments on Hacker News discuss the slow-moving C language in comparison to Rust, which seeks to replace C++. While some see Rust's opinionated design and active development as a benefit, others believe the language should slow down and focus on improving ergonomics and composability rather than adding new features. One user points out that Rust's latest additions, such as let-else and GAT, have been slowly baking for years. Users also discuss Rust's syntax for iterating and filtering through iterators, with some finding it cumbersome.An HN thread discusses the best approach for Rust programming; comments talk about the pitfalls of using closures, for loops vs. .for_each(), and the benefits of Rust's iterative model. Some users complain about Rust's syntactical struggles and advocate for a better effect system. The article itself focuses on the challenges of using Rust's iterator methods in real-world situations and questions the point of having 'pretty' syntax that only works in the simplest cases.Programming languages should prioritize easy-to-read code, even if it means sacrificing ease of writing. One user argues that readability and comprehensibility are not the same, and visual identification and comprehending meaning are distinct steps. Another user suggests that using monads and HKTs could improve code readability, but many design language experts are scared\u00a0to admit it. Rust examples using for and for_each are criticized for being contrived and less straightforward than alternative options. Rust\u2019s limitations with closures must involve understanding distinctions between blocks and functions.\u00a0An HN user questions the composability of Rust when closures are async, asking if the author needs to provide a try_async_for_each, leading to combinatorial explosion. Another HN user suggests that if the for loop body is infallible then for_each is sufficient. An HN user notes that the first code example violates immutability and Rust should be written in a functional style; the author's concerns do not present significant issues but they have been explored. A different HN user wants Rust to support default function arguments, while another user sees composibility issues with Rust's lifetimes. The author's call for the Rust team to focus on ergonomics and composability has been previously explored. Rust is experimenting with how to make code that is generic over sync+async, while Goroutines and Zig have this feature.",
    "hn_summary": "Users debate Rust's composability: some praise its versatility, others criticize its inflexibility with iterators. Rust's power and type system are admired, but some find its syntax cumbersome. Teams should focus on ergonomics, though some suggest using other languages if Rust is disliked. HN thread discusses Rust's programming pitfalls, closures, and iterative model. Rust's syntax, effects system, and limitations with closures are critiqued. Composability issues arise with Rust's async closures and lifetime support. Rust experiments with generic code over sync+async, while Goroutines and Zig have this feature."
  },
  {
    "id": 35469632,
    "timestamp": 1680794718,
    "title": "Spotting & avoiding heap fragmentation in Rust applications",
    "url": "https://www.svix.com/blog/heap-fragmentation-in-rust-applications/",
    "hn_url": "http://news.ycombinator.com/item?id=35469632",
    "content": "A Rust project experienced a \"stair-step\" memory profile, resulting in unbounded memory growth leading to services being forced to exit. After investigating, heap fragmentation was identified as the possible cause, due to the addition and removal of values of varying sizes over time causing scattered gaps throughout the heap. The solution was to swap out the allocator with jemalloc, which goes out of its way to avoid fragmentation and resulted in a better memory profile. The toy project repo also includes a benchmark.yml for testing different inputs.Svix is hiring for experts in Rust to build a scalable service in a positive outcome for their community Slack, Twitter, Github, and RSS.",
    "summary": "A Rust project faced unbounded memory growth likely caused by heap fragmentation, solved by exchanging the allocator with jemalloc for a better memory profile. A benchmark.yml in the project's repo tests different inputs. Svix seeks Rust experts for a scalable service for their community.",
    "hn_title": "Spotting and avoiding heap fragmentation in Rust applications",
    "original_title": "Spotting and avoiding heap fragmentation in Rust applications",
    "score": 102,
    "hn_content": "An article on Hacker News discusses identifying and avoiding heap fragmentation in Rust applications. The article highlights how gaps in memory can create new blocks and outlines how this issue was resolved using jemalloc. Some users in the comments suggest an innovative approach of using handles to combat fragmentation. Other comments suggest that Rust's borrow checker and a compacting heap may also solve this fragmentation issue. However, the article notes that Rust is in a tricky place - it is safe making it difficult to write your own allocators but remains low level, making it hard for the runtime to relocate objects in memory. An analogy is made with file system fragmentation. Finally, the article concludes that using jemalloc instead of the default allocator helps in this issue.A discussion on different allocator options and the trade-offs involved in choosing the right one. Suggestions for switching from libc malloc to jemalloc, tcmalloc or mimalloc are made by various users, with tcmalloc gaining praise for its per-CPU caches. The issue of heap fragmentation is discussed, and it is noted that while there are steps that can be taken to improve an application's compatibility with certain allocators, testing different allocators is often the best approach. The discussion also brings up the fact that not all open source projects get the same marketing attention, with some Google projects like tcmalloc being underappreciated. Finally, one user notes that the specific cause of heap fragmentation can be difficult to pinpoint and it's important to understand the trade-offs between different allocators.An HTTP server is experiencing heap fragmentation due to Rust not allocating all data together and only reusing allocated blocks, leading to high memory usage. jemalloc is recommended for avoiding fragmentation by allocating objects of similar size from a chunk of memory. Segregating lifetimes or types can also help. snmalloc may not improve performance, memory utilization, or heap fragmentation. Rust's efficiency and type system are appreciated, and an uptimes SLA of 99.999% is achieved through redundancies and testing. SLA is monthly, not daily.",
    "hn_summary": "An article discusses avoiding heap fragmentation in Rust applications, suggests jemalloc can help. Comments suggest compacting heap, handles, tcmalloc. Choosing right heap options and trade-offs are discussed. Open source projects' marketing and pinpointing heap fragmentation are noted. jemalloc is recommended for an HTTP server's high memory usage due to Rust's block allocation. Rust's type system efficiency appreciated, 99.999% SLA achieved through testing and redundancies."
  },
  {
    "id": 35474837,
    "timestamp": 1680816881,
    "title": "Be careful what you test or deploy to Vercel",
    "url": "https://twitter.com/shoeboxdnb/status/1643639119824801793",
    "hn_url": "http://news.ycombinator.com/item?id=35474837",
    "content": "",
    "summary": "The article warns to be cautious when testing or deploying to Vercel, as it may result in a blacklisted IP. Users recount personal experiences with Vercel's IP ban, citing issues with their team's productivity and communication. Some suggest the ban may be linked to Vercel's misguided attempts to prevent abuse. Solutions include contacting customer support or switching to another service. An HN comment highlights the importance of cloud infrastructure security and proper testing.",
    "hn_title": "Be careful what you test or deploy to Vercel",
    "original_title": "Be careful what you test or deploy to Vercel",
    "score": 97,
    "hn_content": "Vercel has identified and resolved issues with monolithic Astro bundles causing overages, and will deploy fixes to ensure this never happens again. The company will also explore usage limits for customers after the fix rolls out. Some users question why usage-based platforms don't offer an option to automatically shut down services if bills go above a certain threshold. Some also criticize the company's refund process, as it required social media pressure to get a refund. AWS and GCP don't offer usage limits, but there are other platforms that do. Some users prefer plain-old servers instead of risking cost overages.Vercel is an easy and cheap option for web development with edge functions. AWS App Runner allows for smaller instances and easier deployment. There are various cloud credit options available. Cloud cost optimization engineer is a new profession due to the importance of monitoring expenses, which can get out of control quickly. Vercel has been reliable, but during overuse, it can result in unexpected billing. Other cloud services provide similar functionality at a lower cost with options to set limits on usage. Serverless is designed to scale up seamlessly but can result in unexpected billing.",
    "hn_summary": "Vercel resolves billing issues, explores usage limits. Some criticize refund process. Cloud cost optimization important. Vercel compared to AWS App Runner, other cheaper alternatives. Serverless can lead to unexpected billing."
  },
  {
    "id": 35470392,
    "timestamp": 1680797240,
    "title": "Linux 6.4 Bringing Apple M2 Additions for 2022 MacBook & Mac Mini",
    "url": "https://www.phoronix.com/news/Apple-M2-Device-Tree-Linux-6.4",
    "hn_url": "http://news.ycombinator.com/item?id=35470392",
    "content": "Linux 6.4 Bringing Apple M2 Additions For 2022 MacBook Air, MacBook Pro, Mac Mini - Phoronix Articles & ReviewsNews ArchiveForumsPremium CategoriesComputers Display Drivers Graphics Cards Linux Gaming Memory Motherboards Processors Software Storage Operating Systems Peripherals CloseArticles & ReviewsNews ArchiveForumsPremium Contact CategoriesComputers Display Drivers Graphics Cards Linux Gaming Memory Motherboards Processors Software Storage Operating Systems Peripherals Linux 6.4 Bringing Apple M2 Additions For 2022 MacBook Air, MacBook Pro, Mac MiniWritten by Michael Larabel in Apple on 6 April 2023 at 12:00 PM EDT. 15 CommentsFurther adding to the excitement of the upcoming Linux 6.4 merge window is the mainline kernel seeing the Device Tree (DT) additions for Apple's current M2 devices including the MacBook Air, MacBook Pro, and Mac Mini systems. The upstream kernel still has more work to go around the M1/M2 support compared to the downstream state with Asahi Linux, but at least now with this DT support will provide some basic level of upstream kernel support for the Apple M2. Asahi Linux lead developer Hector Martin today sent in the Apple SoC DT updates targeting the Linux 6.4 cycle for queuing into the SoC tree ahead of the merge window opening around the end of the month. The main addition with this pull request is adding the Apple M2 Device Tree series. With the Apple t8112 M2 Device Trees there is support for the M2-powered MacBook Air (2022), MacBook Pro 13-inch (2022), and Mac Mini (2023). Hector commented on the patch adding the new DT:\"This brings the hardware support of the machines to the same level as M1 and M1 Pro / Max / Ultra. Supported hardware include NVMe, PCIe, serial, pinctrl/gpio, I2C, iommu, watchdog, admac, nco, cpufreq, boot framebuffer for laptop panels and the interrupt controller. The ethernet LAN device on the M2 Mac mini is the only working PCIe device. The Wlan/BT devices are powered off and controlled by the not yet supported SMC. The ASMedia xHCI on the M2 Mac mini requires firmware to be loaded at startup. The main missing hardware support to make these devices useful are the integrated USB 2/3/4 controller, keyboard and trackpad on the laptops and SMC to power the PCIe Wlan/BT device on. The M2 Mac mini has currently no working display output. Due to changes in the display pipeline it is currently not possible to initialize the HDMI output in the bootloader.\" So this is a step in the right direction but still isn't yet really usable for end-users. Those wanting the best Apple M1/M2 Linux experience will still want to use a downstream distribution like Asahi Linux - see their feature support Wiki to get a better idea for current expectations.15 Comments TweetRelated NewsLinux GMUX Support For T2 Macs On The Way For Dual-GPU Graphics SwitchingInitial Rust DRM Abstractions, AGX Apple DRM Driver Posted For ReviewAsahi AGX Mesa Driver Prepares For Compute Kernels On Apple SiliconAnother Attempt Made To Upstream An Apple Touch Bar Linux DriverFedora Asahi Aims To Provide The Fedora Workstation Experience For Apple Silicon SystemsAsahi Gallium3D Driver Enables Mesa Shader Disk Cache Support About The AuthorMichael Larabel is the principal author of Phoronix.com and founded the site in 2004 with a focus on enriching the Linux hardware experience. Michael has written more than 20,000 articles covering the state of Linux hardware support, Linux performance, graphics drivers, and other topics. Michael is also the lead developer of the Phoronix Test Suite, Phoromatic, and OpenBenchmarking.org automated benchmarking software. He can be followed via Twitter, LinkedIn, or contacted via MichaelLarabel.com.Popular News This WeekSystem76 Teases Their \"Virgo\" In-House Manufactured LaptopValve Shows A Huge Drop In Linux Gamers For March, But The Numbers Are QuestionableAMD Releases HIP Ray Tracing 2.0Google Posts KVM-CPUFreq Driver To Dramatically Boost VM Performance, Power EfficiencyWine 8.5 Released With VKD3D 1.7 Included, WinRT App Dark ThemeGTK & Blender Are The Latest Software Supporting Wayland Fractional ScalingLinux 6.3-rc5 Released - Looking To Be In Good ShapeMSI Laptops To Enjoy Better Linux Support Beginning With The 6.4 Kernel Latest Linux NewsFree Software Foundation Certifies A $99 Mini VPN RouterLinux 6.4 Bringing Apple M2 Additions For 2022 MacBook Air, MacBook Pro, Mac MiniDozens Of Rust Updates Merged Ahead Of GCC 13.1PipeWire 0.3.68 Released With New RTP Session Module, Many Other ChangesIntel Carries Out More Meteor Lake Graphics Enablement For Linux 6.4Chrome 113 To Ship WebGPU By DefaultVVenC 1.8 Released For Speeding Up Open-Source H.266/VVC EncodingIntel Vulkan Driver Squeezes In A Few More Performance Optimizations For Mesa 23.1HP WMI Driver To Expose More Sensors Under Linux For Business-Class SystemsGTK 4.11.1 Released With Better Textures, Wayland Fractional ScalingShow Your Support, Go PremiumPhoronix Premium allows ad-free access to the site, multi-page articles on a single page, and other features while supporting this site's continued operations.Latest Featured ArticlesIntel Linux Optimizations Help AMD EPYC \"Genoa\" Improve Scaling To 384 ThreadsAMD Ryzen 7 7800X3D Linux PerformanceAMD P-State EPP Performance With EPYC On Linux 6.3AMD EPYC Milan Still Gives Intel Sapphire Rapids Tough Competition In The CloudIntel Linux Kernel Optimizations Show Huge Benefit For High Core Count Servers Support PhoronixThe mission at Phoronix since 2004 has centered around enriching the Linux hardware experience. In addition to supporting our site through advertisements, you can help by subscribing to Phoronix Premium. You can also contribute to Phoronix through a PayPal tip or tip via Stripe.Phoronix MediaContactMichael LarabelOpenBenchmarking.orgPhoronix PremiumSupport PhoronixWhile Having Ad-Free Browsing,Single-Page Article ViewingShareFacebookTwitterLegal Disclaimer, Privacy Policy, Cookies | ContactCopyright \u00a9 2004 - 2023 by Phoronix Media.All trademarks used are properties of their respective owners. All rights reserved.",
    "summary": "Device Tree (DT) additions for Apple's M2 devices, including MacBook Air, MacBook Pro, and Mac Mini, will be added to Linux 6.4. Hector Martin, Asahi Linux's lead developer, submitted the Apple SoC DT updates for queuing into the SoC tree ahead of the merge window's opening at the end of the month. Adding the Apple M2 Device Tree series and support for the essential hardware of the machines on the DT will bring much-needed upstream kernel support for the Apple M2. However, the device is still not yet usable for end-users, and individuals wanting the best Apple M1/M2 Linux experience will need to use a downstream distribution like Asahi Linux.",
    "hn_title": "Linux 6.4 Bringing Apple M2 Additions for 2022 MacBook and Mac Mini",
    "original_title": "Linux 6.4 Bringing Apple M2 Additions for 2022 MacBook and Mac Mini",
    "score": 97,
    "hn_content": "The Linux 6.4 release will add support for Apple's M2 chips in the 2022 MacBook and Mac Mini, with some HN users discussing power management differences between Linux and MacOS. Asahi Linux, the project aiming to bring Linux to Apple Silicon, is making progress, but is not yet a \"just works\" solution. Despite some excitement over the Linux 6.4 release, HN users expressed frustration with the quality of comments on the topic, with many not relating to the article. One user lamented the \"misinformation or nonsense\" in the discussion.The quality of discussion on a particular domain has deteriorated, with one user suggesting to block it on their devices. However, the rest of the thread seems unaffected.",
    "hn_summary": "Linux 6.4 adds Apple M2 support for 2022 MacBook/Mac Mini. HN users compare Linux/MacOS power management. Asahi Linux not yet a perfect solution. Some excitement but frustration with quality of comments. Users lament misinformation/nonsense. Quality of discussion has deteriorated in a particular domain. One user suggests blocking it. Rest of thread seems unaffected."
  },
  {
    "id": 35474895,
    "timestamp": 1680817173,
    "title": "Illustrations of 'unseen' Japanese maintenance trains that only work at night",
    "url": "https://www.spoon-tamago.com/toei-project-unseen-maintenance-trains/",
    "hn_url": "http://news.ycombinator.com/item?id=35474895",
    "content": "Illustrations of \u2018Unseen\u2019 Japanese Maintenance Trains that Only Work at Night | Spoon & Tamagojapanese art, design and cultureSpoon & Tamago - japanese art, design and culture AboutShopTokyo GuideMembership ProgramMember Log-inContactAboutShopTokyo GuideMembership ProgramMember Log-inContact  Illustrations of \u2018Unseen\u2019 Japanese Maintenance Trains that Only Work at NightJune 3, 2019 / Johnny / Comments Off on Illustrations of \u2018Unseen\u2019 Japanese Maintenance Trains that Only Work at Night Japanese trains are renowned for their punctuality, comfort and overall reliability. But part of what makes them so reliable is an \u201cunseen\u201d workforce of overnight trains. These trains will be unfamiliar to the everyday rider because they only show themselves after regular service has ended for the day. Working through the wee hours of night and early morning, they perform maintenance work on tracks and electrical wires that ensures a smooth and uninterrupted ride during the day.advertisementthe \u201cElectric Inspection Carriage\u201d has a pantograph mounted on the roof just like other trains. But this one inspects the height, voltage and conditions of overhead electric lines.In a series of stunningly realistic illustrations, 74-year old artist Masami Onishi has recreated these trains in accurate detail. And if these illustrations seem nostalgic of familiar in any way, it\u2019s probably because you\u2019ve come across Japanese toy maker Tamiya\u2019s vintage toy boxes.At the age of 21, Onishi began working for Japanese toy-maker Tamiya and became the company\u2019s first in-house illustrator. For over 10 years he was responsible for creating all the illustrations of the toys on their boxes before becoming a freelance artist in 1978.The illustrations of trains seen here are part of Project Toei, an initiative from the The Tokyo Metropolitan Bureau of Transportation to highlight various aspects of the city\u2019s incredible infrastructure. Trains cause abrasions to the rail that result in increased noise and vibrations. The \u201cRail Grinding Carriage\u201d detects and smooths out these abrasions at the micrometer levelAnd does all this maintenance actually work? Well, if you look at the data published by the Japan Transport Safety Board, Japan\u2019s railways have a remarkably low rate of derailments. In 2018 there were just 2 derailments across the entire country. The average over the past 20 years is a bit higher (roughly 10 per year) but have been in a downward trend. And while it\u2019s not a fair comparison, just for reference the U.S. (according to data from the Bureau of Transportation Statistics) had 1376 derailments in 2018. While also in a downward trend, the U.S. has over 1000 derailments each year. the \u201cElectric Locomotive E5000 Model\u201d tows different train lines into the inspection unit for maintenance. Because certain train lines operate differently, they\u2019re unable to drive themselves into the inspection unit.TweetRelated posts:Vintage Illustrations of Trains by Koyata YasuiJapanese trains install lightsabers to promote new Star Wars DVD boxsetThe Tokyo Last Train Map is the Perfect Art Print for Night OwlsKazuyo Sejima to Design Next Generation Express Train that Melds Into the Environment ArtillustrationstrainsPrevious post\u2018Full Page Editorial\u2019 Sand Sculpture by Toshihiko Hosaka Implores Japan to Reduce PlasticNext postJapanese Picture Book Photoshops Prehistoric Creatures Into Contemporary Settings Comments are closed.  Trending Right NowIllustrations of \u2018Unseen\u2019 Japanese Maintenance Trains that Only Work at NightA Refurbished Public Bus is Currently Travelling Japan as a Mobile SaunaVeggies Reimagined as Miniature \u2018Wabi-Sabi\u2019 Bonsai Advertise on Spoon & Tamago with Nectar AdsThe Latest PostsThis Rare 2008 Painting by Manabu Ikeda Helped Complete the Script for \u2018Everything Everywhere All at Once\u2019March 18, 2023Tomohisa Suzuki\u2019s Shopkit Makes Hosting Pop-Up Shops EasyMarch 18, 2023Japanese Buildings that are Shaped Like the Things They SellMarch 14, 2023Azuma Makoto\u2019s Shimmering Bouquet On The Northern Tip Of JapanMarch 11, 2023HIDARI: An Epic Wooden Puppet Samurai Stop-Motion FilmMarch 9, 2023In Tokyo, A Manga Artist\u2019s Creative Haven Inspired by Ghost in the ShellMarch 8, 2023A Maddeningly Complex Ballpoint Pen Replica of a 1000 Yen Bill by Keita SagakiMarch 5, 2023Aki Inomata\u2019s New Art Project Lets You Drink the CloudsMarch 3, 2023New Pillow Lets You Nap While Being Threatened by an Adorable Red PandaMarch 2, 2023Bento Boxes Inspired by Notable Japanese ArchitectureFebruary 28, 2023 Archives by Month 2023: 01 02 03 04 05 06 07 08 09 10 11 12 2022: 01 02 03 04 05 06 07 08 09 10 11 12 2021: 01 02 03 04 05 06 07 08 09 10 11 12 2020: 01 02 03 04 05 06 07 08 09 10 11 12 2019: 01 02 03 04 05 06 07 08 09 10 11 12 2018: 01 02 03 04 05 06 07 08 09 10 11 12 2017: 01 02 03 04 05 06 07 08 09 10 11 12 2016: 01 02 03 04 05 06 07 08 09 10 11 12 2015: 01 02 03 04 05 06 07 08 09 10 11 12 2014: 01 02 03 04 05 06 07 08 09 10 11 12 2013: 01 02 03 04 05 06 07 08 09 10 11 12 2012: 01 02 03 04 05 06 07 08 09 10 11 12 2011: 01 02 03 04 05 06 07 08 09 10 11 12 2010: 01 02 03 04 05 06 07 08 09 10 11 12 2009: 01 02 03 04 05 06 07 08 09 10 11 12 2008: 01 02 03 04 05 06 07 08 09 10 11 12 2007: 01 02 03 04 05 06 07 08 09 10 11 12 Trending Right NowIllustrations of \u2018Unseen\u2019 Japanese Maintenance Trains that Only Work at NightA Refurbished Public Bus is Currently Travelling Japan as a Mobile SaunaVeggies Reimagined as Miniature \u2018Wabi-Sabi\u2019 BonsaiBird Breeze Cafe & Bakery in Kamakura is Situated Along the Enoden Train LineHonan Local Good Brewers: Craft Beer With a MissionInstagram Feed spoontamagoSakuraco is a monthly subscription box with an emp A few years ago, 78-year old illustrator Masami Oh Sipping an ice coffee at this gorgeous cafe while This discontinued public bus has been retrofitted Want to feel like you just went on a shopping spre Honan Local Good Brewers is a bright and airy craf The painter @kasai_yuka_ hails from Sapporo, where If you\u2019re heading to Kanazawa, do yourself a fav Just in time for cherry blossom season \ud83c\udf38 This The frigid landscape of the Notsuke Peninsula beco Today on the blog we\u2019re featuring this new resid Here are some photos from the March 1 omizutori, a Japanese architecture and bento boxes are the 2023 Located an hour from Tokyo in the wilderness of Ch The next time you\u2019re in Nasu, stop by @goodnews_ Only in Japan will a public toilet replicate the s 1000 handmade ice lanterns light up the grounds of Hirakawaya is a tofu restaurant that has been serv Japanese lifestyle brand @hanalolo_home has create It\u2019s graduation season in Japan! And today on th Load More... Follow on Instagram newsletter AboutShopTokyo GuideMembership ProgramMember Log-inContact  \u00a9 2023 Spoon & TamagoUp \u2191Design by Bento Graphics",
    "summary": "Artist Masami Onishi has illustrated Japan's rarely seen workforce of overnight trains that perform maintenance work on tracks and electrical wires during the early morning hours, which ensures smooth and uninterrupted service throughout the day. The detailed illustrations of these trains are part of the Tokyo Metropolitan Bureau of Transportation's Project Toei. They include the \u201cRail Grinding Carriage\u201d that smooths out abrasions on the rails, and the \u201cElectric Inspection Carriage\u201d that assesses the height, voltage and conditions of overhead electric lines. Japan's railways have a remarkably low rate of derailments, with only two such incidents recorded across the country in 2018.",
    "hn_title": "Illustrations of \u2018unseen\u2019 Japanese maintenance trains that only work at night",
    "original_title": "Illustrations of \u2018unseen\u2019 Japanese maintenance trains that only work at night",
    "score": 95,
    "hn_content": "Illustrations of 'unseen' Japanese maintenance trains that operate only at night have been posted on Spoon & Tamago. NYC locals discuss the subway system and its 24/7 service, with some commenting that the maintenance and cleanliness are inadequate, hence not worth keeping the costly all-night services. A user points out that NYC's subway system is plagued with retaining outdated\u00a0vocations, such as operators for only closing doors, adding overhead to the system. The article is notable for transporting readers to Japan's train maintenance and cleaning systems, with some comments focusing on the contrasting difference between the cleanliness of subway cars in Tokyo and in New York.As NYC's subway suffers from poor maintenance, readers share experiences of poor local infrastructure elsewhere in America, citing Boston's decaying MBTA system; users to reply that private investors support profitable Japanese railways, a luxury denied unprofitable North American public transport, viewed as a public good, lost when government funds are diverted to subsidizing car travel.Japanese maintenance train through the eyes of Tamago and Spoon. The illustrations are part of Project Toei, an initiative that highlights the city's infrastructure. Many trains are owned by the Tokyo Metropolitan Government, and while comfortable inter-provincial trains exist, metropolitan trains during rush hour can be a nightmare. However, most trains are maintained through sophisticated computer vision AI systems. One of the maintenance cars, jut six of them, smooths the track to the micrometer level in a process that happens multiple times for a given segment of track. JR had plans to make all maintenance autonomous by 2032.Despite Tokyo being known for its crowded trains during rush hour, an HN user points out that not all trains are as uncomfortable, with many offering reserved seating. An HN user also notes that Tokyo is the least likely to smell like sardines compared to London or New York.",
    "hn_summary": "Illustrations of 'unseen' Japanese maintenance trains only working at night, highlighted through Project Toei. NYC locals comment on inadequate 24/7 subway maintenance, some blaming outdated vocations such as door operators. Depicts contrasting clean Tokyo subway cars and poor maintenance in New York, leading to discussion of poor infrastructure in other American cities. Japanese railways benefit from private investors and government funding, contrasting American public transport loss, viewed as a public good. Tokyo Metropolitan Government owns many trains, maintained through sophisticated AI systems, with plans to be fully autonomous by 2032. Tokyo rush hour is less uncomfortable than London or New York, with reserved seating."
  }
]
