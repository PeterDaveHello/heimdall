[
  {
    "id": 40870357,
    "title": "DS_store의 기원 (2006)",
    "originLink": "https://www.arno.org/on-the-origins-of-ds-store",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=40870357",
    "commentBody": "",
    "originSummary": [
      ".DS_Store 파일은 일반적으로 Mac에서 Windows로 파일을 전송할 때 볼 수 있으며, 'Desktop Services Store'의 약자로 1999년 Mac OS X Finder의 재작성에서 유래되었습니다.",
      "Finder는 사용자 인터페이스(Finder_FE)와 핵심 기능(Finder_BE)으로 나뉘었으며, 백엔드를 Desktop Services라는 공개 API로 만들 계획이 있었으나 완전히 출시되지는 않았습니다.",
      "버그로 인해 사용자가 조정하지 않아도 .DS_Store 파일이 과도하게 생성되어 Mac 사용자에게 지속적인 문제가 되고 있습니다."
    ],
    "commentSummary": [
      "논의는 DS_store 파일의 역사적 맥락과 기술적 세부 사항, 그리고 리소스와 데이터 구성 요소를 모두 포함하는 Mac 파일 시스템의 '포크' 개념을 중심으로 이루어집니다.",
      "초기 MacOS의 리소스 포크는 아이콘, 메뉴 및 실행 코드와 같은 다양한 애플리케이션 데이터를 저장했으며, 이는 파일을 비맥 시스템으로 전송할 때 어려움을 초래했습니다.",
      "MacOS에서 MacOS X로의 전환은 리소스 포크 제거를 포함한 중요한 변화를 수반했으며, 이는 사용자 커뮤니티로부터 엇갈린 반응을 불러일으켰습니다."
    ],
    "points": 375,
    "commentCount": 200,
    "retryCount": 0,
    "time": 1720043713
  },
  {
    "id": 40869877,
    "title": "Xcapture-BPF – 리눅스 top과 같지만 엑스레이 비전을 가진",
    "originLink": "https://0x.tools/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=40869877",
    "commentBody": "",
    "originSummary": [
      "0x.tools는 Linux에서 애플리케이션 성능을 분석하기 위해 설계된 오픈 소스 유틸리티 세트로, 단순성과 최소한의 종속성을 강조합니다.",
      "주요 기능으로는 개별 스레드 수준의 활동을 측정하고 시스템 수준 및 상세한 스레드 활동 분석을 위한 eBPF 기반 도구를 제공하는 것이 포함됩니다.",
      "이는 매우 낮은 오버헤드로 생산 환경에서 안전하게 사용하도록 설계되었으며, 운영 체제 업그레이드나 무거운 모니터링 프레임워크가 필요하지 않습니다."
    ],
    "commentSummary": [
      "Xcapture-BPF는 Linux의 top 명령어와 유사하지만 향상된 기능을 갖춘 새로운 도구로, 시스템 진단을 위한 '엑스레이 비전'을 가진 것으로 자주 언급됩니다.",
      "사용자들은 eBPF(extended Berkeley Packet Filter)와 BCC(BPF Compiler Collection) 도구를 사용하여 복잡한 운영 문제를 디버깅한 경험을 공유하며, 성능 병목 현상과 메모리 누수를 해결하는 데 이들 도구의 효과를 강조했습니다.",
      "논의에는 직접 IO를 활성화하고 루프백 장치의 섹터 크기를 일치시켜 컨테이너화된 환경에서 높은 iowait 및 페이지 캐시 문제를 해결하는 등의 실용적인 문제 해결 예시가 포함됩니다."
    ],
    "points": 353,
    "commentCount": 35,
    "retryCount": 0,
    "time": 1720039957
  },
  {
    "id": 40869461,
    "title": "AI의 6000억 달러 질문",
    "originLink": "https://www.sequoiacap.com/article/ais-600b-question/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=40869461",
    "commentBody": "",
    "originSummary": [
      "AI 수익 격차가 2천억 달러에서 6천억 달러로 확대되면서 업계의 성장 기대에 대한 의문이 제기되고 있습니다.",
      "주요 발전 사항으로는 GPU 공급 부족 완화, Nvidia의 데이터 센터 수익 증가, 그리고 OpenAI의 34억 달러에 달하는 상당한 수익 성장이 포함됩니다.",
      "가격 결정력 부족, 투자 위험, 구형 칩의 급속한 가치 하락과 같은 도전 과제가 지속되고 있지만, GPU 비용의 하락은 스타트업과 혁신에 도움이 될 수 있습니다."
    ],
    "commentSummary": [
      "GPT-4와 같은 대형 AI 모델을 훈련시키기 위해서는 상당한 컴퓨팅 자원이 필요하며, 추정에 따르면 8,000개의 H100 GPU가 90일 동안 작동해야 합니다.",
      "Meta의 대규모 GPU 투자는 매년 여러 GPT-4 규모의 모델을 훈련할 수 있게 하여 핵심 AI 모델을 상품화하고 AI 회사의 이익률에 영향을 미칠 수 있습니다.",
      "AI의 실제 가치는 훈련을 위한 독점 데이터로 이동할 수 있으며, 이는 잠재적인 법적 문제를 야기하고 데이터 소유권의 중요성을 강조합니다."
    ],
    "points": 331,
    "commentCount": 496,
    "retryCount": 0,
    "time": 1720036541
  },
  {
    "id": 40870345,
    "title": "150줄의 C 코드로 NumPy 행렬 곱셈 능가하기",
    "originLink": "https://salykova.github.io/matmul-cpu",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=40870345",
    "commentBody": "",
    "originSummary": [
      "BLIS 설계를 따르는 C 언어의 고성능 행렬 곱셈 구현은 AMD Ryzen 7700에서 NumPy(OpenBLAS)를 능가하여 1 TFLOPS 이상의 성능을 달성합니다.",
      "코드는 간단하고, 휴대 가능하며, 확장 가능하며, 병렬화를 위해 단 3줄의 OpenMP 지시문을 사용하고, FMA3 및 AVX 명령어를 사용하는 Intel Core 및 AMD Zen CPU를 대상으로 합니다.",
      "이 구현은 깊은 어셈블리나 포트란 코드 없이도 C에서 효율적인 행렬 곱셈이 가능하며, 특정 하드웨어에 맞게 미세 조정할 경우 기존의 BLAS 라이브러리와 비교할 만한 성능을 낼 수 있음을 보여줍니다."
    ],
    "commentSummary": [
      "한 블로그 게시물은 성능 향상에 중점을 두고 150줄의 C 코드로 NumPy 행렬 곱셈을 능가하는 방법을 보여줍니다.",
      "주요 개선 사항에는 알고리즘 선택, 커널 왕복 최소화, 벡터화, 캐시 효율성 및 하드웨어 특화 최적화가 포함됩니다.",
      "댓글에서의 논의는 C 코드와 NumPy를 비교하는 것이 공정한지에 대해 다루며, 다른 BLAS(기본 선형 대수 서브프로그램) 라이브러리와의 비교를 제안하고 특정 CPU에 대한 철저한 벤치마킹 및 하이퍼파라미터 튜닝의 필요성을 강조하고 있습니다."
    ],
    "points": 298,
    "commentCount": 51,
    "retryCount": 0,
    "time": 1720043575
  },
  {
    "id": 40870280,
    "title": "이해하지 못하는 책을 읽는 기쁨",
    "originLink": "https://reactormag.com/the-joy-of-reading-books-you-dont-entirely-understand/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=40870280",
    "commentBody": "",
    "originSummary": [
      "이 기사는 완전히 이해되지 않는 책을 읽는 기쁨과 가치를 강조하며, 책을 완전히 이해하지 못해도 감상하는 것이 괜찮다고 제안합니다.",
      "저자 몰리 템플턴은 닐 스티븐슨의 *바로크 사이클*과 최근의 알라야 던 존슨의 *부서진 세계의 도서관* 및 몰리 맥기의 *조나단 애버내시, 당신은 친절합니다*와 같은 복잡한 책들에 대한 개인적인 경험을 공유합니다.",
      "템플턴은 독서에서 불확실성을 받아들이는 것이 해방감을 주고 독서 경험을 풍부하게 하며, 독자들이 도전적인 서사를 탐구하도록 격려한다고 주장합니다."
    ],
    "commentSummary": [
      "이 글은 도전적이고 깊은 생각을 유발하는 책을 읽는 것의 가치를 논의하며, 단순히 즐겁게 하는 것보다는 '물고 쏘아야' 한다는 카프카의 신념을 언급하고 있다.",
      "어려운 또는 복잡한 책을 읽는 것에 대한 다양한 관점을 강조하며, 일부 독자들은 이해와 즐거움을 높이기 위해 메모를 하지 않고 몰입하는 것을 옹호합니다.",
      "대화에는 개인적인 일화와 오랫동안 인상에 남은 책들에 대한 추천이 포함되어 있으며, 재독과 도전적인 자료와의 교류를 통해 새로운 통찰을 발견하는 기쁨을 강조하고 있습니다."
    ],
    "points": 298,
    "commentCount": 185,
    "retryCount": 0,
    "time": 1720043087
  },
  {
    "id": 40874341,
    "title": "Twilio, 해커들이 3,300만 Authy 사용자 전화번호를 유출한 후 데이터 유출을 확인",
    "originLink": "https://www.securityweek.com/twilio-confirms-data-breach-after-hackers-leak-33m-authy-user-phone-numbers/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=40874341",
    "commentBody": "",
    "originSummary": [],
    "commentSummary": [
      "Twilio는 3,300만 Authy 사용자들의 전화번호가 노출된 데이터 유출을 확인했으며, 이로 인해 스팸 전화가 증가하고 전통적인 전화 네트워크의 신뢰성에 대한 우려가 커지고 있습니다.",
      "사용자들은 FaceTime과 Zoom과 같은 대체 통신 방법을 고려하면서도, 의료 및 사회 서비스와 같은 필수 서비스에서 전화 통화의 중요한 역할을 강조하고 있습니다.",
      "이번 유출 사건은 더 강력한 데이터 보호, 스팸 방지 조치의 더 나은 시행, 그리고 Aegis, Bitwarden, Yubikey와 같은 대체 이중 인증(2FA) 앱에 대한 권장 사항의 필요성을 강조합니다."
    ],
    "points": 260,
    "commentCount": 148,
    "retryCount": 0,
    "time": 1720095999
  },
  {
    "id": 40872182,
    "title": "가장 슬픈 '그냥 보내' 이야기 (2020)",
    "originLink": "https://www.kitze.io/posts/saddest-just-ship-it-story-ever",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=40872182",
    "commentBody": "",
    "originSummary": [
      "저자는 2018년에 시작한 앱 개발의 개인적인 여정을 공유하며, 지속적인 기능 추가와 React Native와 같은 새로운 기술을 배우느라 출시를 지연시켰다고 말합니다.",
      "2년 후 프로젝트를 포기했음에도 불구하고, 저자는 나중에 비슷한 앱이 불완전함에도 불구하고 성공한 것을 발견하여 복잡한 감정을 느꼈다.",
      "2022년에 저자는 할 일 목록, 습관, 플래너, 목표 등 다양한 기능을 결합한 생산성 앱을 마침내 출시하고, 독자들을 Benji - The Life OS 커뮤니티에 참여하도록 초대합니다."
    ],
    "commentSummary": [
      "논의는 소프트웨어 개발에서 '그냥 배포해'라는 사고방식을 중심으로 이루어지며, 마감일을 맞추기 위해 서두르는 것이 소프트웨어의 품질을 저하시킬 수 있고 개발자의 번아웃을 초래할 수 있다는 점을 강조하고 있습니다.",
      "개발자들이 회사의 수익성을 우선시해야 하는지 아니면 고품질 소프트웨어를 만드는 데 집중해야 하는지에 대한 논쟁이 있습니다. 일부는 개발자들이 회사에 상당한 지분을 가지고 있지 않는 한 특별한 노력에 대해 적절한 보상을 받지 못한다고 주장합니다.",
      "이 대화는 직업 만족도, 보상, 그리고 직업적 진실성과 회사 요구 사이의 균형에 대한 다양한 관점을 강조하며, 일과 삶의 균형 및 인정에 대한 더 넓은 산업적 우려를 반영하고 있습니다."
    ],
    "points": 217,
    "commentCount": 263,
    "retryCount": 0,
    "time": 1720065035
  },
  {
    "id": 40874013,
    "title": "제프리 스노버와 파워셸의 탄생",
    "originLink": "https://corecursive.com/building-powershell-with-jeffrey-snover/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=40874013",
    "commentBody": "",
    "originSummary": [
      "PowerShell의 설계자인 제프리 스노버는 그래픽 인터페이스를 선호하는 회사의 저항에 직면하면서도 윈도우 시스템 관리를 혁신한 명령 도구를 만드는 여정을 공유합니다.",
      "주요 과제는 회사 구조 조정, 문화적 반발, 헌신적인 팀 구축을 포함했으며, 이는 빌 게이츠의 .NET 추진의 큰 영향을 받았습니다.",
      "PowerShell의 개발은 Monad 선언문에 의해 이끌어졌으며, Windows Server 관리의 변화를 가져왔고 Microsoft가 클라우드로 이동할 수 있게 하여 기술적 변화를 이끄는 끈기와 비전의 영향을 보여주었습니다."
    ],
    "commentSummary": [
      "PowerShell의 창시자인 제프리 스노버는 그 개발을 추진하다가 큰 반대에 부딪혔고, 그로 인해 마이크로소프트에서 강등당했습니다.",
      "PowerShell은 다양한 API를 호출하여 Windows에서 서버 관리를 돕기 위해 설계되었지만, 내부 충돌을 겪었고 일부 기능은 최신 버전에서 사라졌습니다.",
      "객체 지향 접근 방식과 .NET 통합에도 불구하고, PowerShell은 Python과 같은 다른 스크립팅 언어에 비해 장황하고 도전적이라고 여겨져 Windows 생태계 외부에서는 채택이 제한됩니다."
    ],
    "points": 200,
    "commentCount": 182,
    "retryCount": 0,
    "time": 1720092392
  },
  {
    "id": 40872020,
    "title": "Sans-IO: 네트워크 서비스에 효과적인 Rust의 비밀",
    "originLink": "https://www.firezone.dev/blog/sans-io",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=40872020",
    "commentBody": "",
    "originSummary": [
      "Firezone은 네트워크 연결과 WireGuard 터널을 관리하기 위해 Rust와 sans-IO 디자인을 사용하여 핵심 연결 라이브러리인 connlib을 제공합니다. 이를 통해 빠른 테스트, 깊은 맞춤화, 높은 보증을 제공합니다.",
      "Sans-IO 디자인은 `Transmit`과 같은 추상화를 사용하여 정책을 구현으로부터 분리함으로써 순수 상태 기계가 직접적인 IO 없이 네트워크 프로토콜을 처리할 수 있게 하여 코드가 더 유연하고 테스트하기 쉽게 만듭니다.",
      "비록 sans-IO가 Rust 커뮤니티에서 아직 널리 채택되지 않았지만, 맞춤형 이벤트 루프와 상태 기계를 필요로 함에도 불구하고 쉬운 구성, 유연한 API, 향상된 오류 처리와 같은 상당한 이점을 제공합니다."
    ],
    "commentSummary": [
      "이 게시물은 Rust에서 입력/출력(IO) 작업을 주요 로직에서 분리하여 코드의 테스트 가능성과 구성 가능성을 높이는 Sans-IO 개념에 대해 논의합니다.",
      "이 접근 방식은 상태 관리가 복잡해질 수 있는 QUIC, WebRTC, IP와 같은 패킷 지향 사용 사례에 특히 유용합니다.",
      "이 논의는 이 방법이 새로운 것은 아니지만, Rust에서 테스트를 단순화하고 전통적인 async/await 패턴의 함정을 피함으로써 상당한 이점을 제공한다는 점을 강조합니다."
    ],
    "points": 179,
    "commentCount": 59,
    "retryCount": 0,
    "time": 1720062336
  },
  {
    "id": 40872332,
    "title": "허프만 코드를 사용하여 Haskell에서 데이터 압축 유틸리티 구축",
    "originLink": "https://lazamar.github.io/haskell-data-compression-with-huffman-codes/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=40872332",
    "commentBody": "",
    "originSummary": [
      "이 게시물은 임의의 이진 파일을 인코딩 및 디코딩하기 위해 일정한 메모리를 사용하는 허프만 코딩을 통해 Haskell에서 데이터 압축 프로그램을 만드는 과정을 설명합니다.",
      "허프만 코드, 접두사 없는 코드, 효율적인 인코딩을 위한 이진 트리 구성 과정, 그리고 인코딩 및 디코딩 함수의 구현에 대해 설명합니다.",
      "이 게시물은 또한 이진 파일 처리, 데이터 직렬화/역직렬화, 멀티스레딩 및 더 빠른 코드 생성과 같은 잠재적인 개선 사항을 다루며, Haskell에서 실용적이고 효율적인 데이터 압축 유틸리티를 보여줍니다."
    ],
    "commentSummary": [
      "하스켈에서 허프만 코드를 사용하여 데이터 압축 유틸리티를 구축하는 것에 대한 논의, 대규모 데이터 세트에 대한 배열 기반의 제자리 알고리즘의 효율성을 강조합니다.",
      "중요한 작업에 대한 참조, Moffat과 Katajainen의 1995년 논문 및 배열 기반 허프만 코딩을 설명하는 JPEG 표준 ITU T.81 (1992)을 포함합니다.",
      "하스켈의 성능에 대한 통찰, C, C++, Rust와 같은 다른 언어와의 비교, 그리고 구현의 단순성과 코드 명확성 대 순수 성능 간의 트레이드오프."
    ],
    "points": 164,
    "commentCount": 69,
    "retryCount": 0,
    "time": 1720067352
  },
  {
    "id": 40869421,
    "title": "음성 분리기: 영화, 팟캐스트, 인터뷰 제작을 위한 배경 소음 제거",
    "originLink": "https://elevenlabs.io/voice-isolator",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=40869421",
    "commentBody": "",
    "originSummary": [
      "AI 음성 생성기는 이제 29개 언어를 지원하여 전 세계 청중을 위한 접근성과 사용성을 확장합니다.",
      "수천 가지의 음성 옵션을 제공하여 사용자가 다양한 응용 프로그램과 선호도에 맞는 폭넓은 선택을 할 수 있습니다."
    ],
    "commentSummary": [
      "Elevenlabs의 Voice Isolator 도구는 영화, 팟캐스트 및 인터뷰 제작을 위해 배경 소음을 제거하는 것을 목표로 하지만, '문자'를 기준으로 한 가격 모델이 많은 사용자들을 혼란스럽게 하고 있습니다.",
      "사용자들은 Whisper와 같은 오픈 소스 옵션과 Deepgram Nova 2와 같은 상용 서비스 등 다양한 음성 인식(STT) 및 음성 합성(TTS) 솔루션에 대해 논의하고 있습니다.",
      "많은 사람들이 현재 상업적인 제품이 너무 비싸거나 충분히 효과적이지 않다고 느끼기 때문에, 오디오 정리 및 전사에 대한 지역 및 오픈 소스 솔루션에 대한 관심이 눈에 띄게 증가하고 있습니다."
    ],
    "points": 158,
    "commentCount": 126,
    "retryCount": 0,
    "time": 1720036303
  },
  {
    "id": 40872102,
    "title": "Vision Pro 소유자 여러분, 아직도 사용하고 계신가요?",
    "originLink": "https://news.ycombinator.com/item?id=40872102",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=40872102",
    "commentBody": "",
    "originSummary": [],
    "commentSummary": [
      "Vision Pro 사용자는 혼합된 경험을 가지고 있으며, 일부는 미디어 및 작업 기능을 칭찬하는 반면, 다른 일부는 높은 비용과 제한된 기능을 비판합니다.",
      "주요 특징으로는 화면 크기, 패스스루, 시력 기능, 향상된 블루투스 주변기기 지원 등이 높이 평가되지만, 시력 불편과 제한된 소프트웨어 통합과 같은 문제점이 지적됩니다.",
      "기기의 높은 가격($3500)과 제한된 출시(45만 대)로 인해 시장이 작아졌으며, 많은 사용자가 향후 개정판을 기다리거나 Quest 3와 같은 저렴한 대안을 선택하고 있습니다."
    ],
    "points": 141,
    "commentCount": 77,
    "retryCount": 0,
    "time": 1720063824
  },
  {
    "id": 40871783,
    "title": "확산 강제: 다음 토큰 예측이 전체 시퀀스 확산을 만나다",
    "originLink": "https://boyuan.space/diffusion-forcing/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=40871783",
    "commentBody": "",
    "originSummary": [
      "확산 강제는 다음 토큰 예측과 전체 시퀀스 확산 모델을 결합하여 유연한 생성과 시퀀스 수준의 지침을 제공하는 새로운 훈련 패러다임입니다.",
      "비디오 예측, 무한 롤아웃 안정화, 확산 계획, 장기 모방 학습과 같은 응용 프로그램에서 상당한 성능 향상을 달성합니다.",
      "이 방법은 안정적이고 일관된 비디오 예측, 슬라이딩 윈도우 없이 더 긴 롤아웃, 그리고 장기 메모리 요구 사항이 있는 비마르코프 작업의 견고한 처리를 가능하게 합니다."
    ],
    "commentSummary": [
      "이 논문은 대형 언어 모델(LLM)에 필수적인 시퀀스 마스킹을 픽셀당 '불확실성' 수준을 추적하여 확산 모델의 '노이즈'로 처리하는 확산 모델과 결합합니다.",
      "이 방법은 미로 해결 및 로봇 팔 제어와 같은 작업에 유용하며, 이미지의 일부를 더 일찍 확정할 수 있게 해줍니다.",
      "이 접근법은 계획 및 탐색에서의 불확실성을 모델링하여 에이전트의 반응 및 일반화 능력을 향상시키지만, 논문에는 구현 세부 사항과 코드베이스 접근이 부족합니다."
    ],
    "points": 133,
    "commentCount": 6,
    "retryCount": 0,
    "time": 1720058960
  },
  {
    "id": 40872438,
    "title": "Jaccard 유사도와 MinHash를 사용한 유사 중복 항목 찾기",
    "originLink": "https://blog.nelhage.com/post/fuzzy-dedup/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=40872438",
    "commentBody": "",
    "originSummary": [
      "자카드 유사도와 MinHash는 GPT-3 데이터셋 준비와 같은 대규모 텍스트 컬렉션에서 대략적으로 유사한 문서를 식별하는 데 사용됩니다.",
      "MinHash는 문서 특징을 해싱하고 최소 해시 값을 서명으로 사용하여 Jaccard 유사성을 근사화함으로써 대규모 말뭉치의 효율적인 비교를 가능하게 합니다.",
      "이 방법은 확장 가능하며 HyperLogLog와 같은 다른 기술과 결합할 수 있어 대규모 텍스트 처리 응용 프로그램에 적합합니다."
    ],
    "commentSummary": [
      "이 게시물은 유사 중복 데이터를 찾기 위해 Jaccard 유사도와 MinHash를 사용하는 것에 대해 논의하며, 의료 이미지 분할 및 데이터베이스 중복 제거와 같은 다양한 분야에서의 적용을 강조합니다.",
      "중복 제거 작업을 위한 여러 도구와 라이브러리가 언급되었으며, 여기에는 datasketch, rensa, Splink, gaoya가 포함되며, 이들의 성능과 사용 사례에 대한 통찰이 제공됩니다.",
      "펠레기 선터 모델은 퍼지 매치와 미스매치에 가중치를 부여하여 대규모 데이터 세트에서 정확성을 향상시키는 사람 중복 제거의 효과로 주목받고 있습니다."
    ],
    "points": 127,
    "commentCount": 16,
    "retryCount": 0,
    "time": 1720069449
  },
  {
    "id": 40873001,
    "title": "지역별 기계 가격",
    "originLink": "https://community.fly.io/t/fresh-produce-region-specific-machines-pricing/20690",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=40873001",
    "commentBody": "",
    "originSummary": [
      "7월 1일부터 지역별 인프라 비용 차이로 인해 추가 RAM을 포함한 머신의 지역별 가격이 도입될 예정입니다.",
      "가격 조정은 4개월에 걸쳐 단계적으로 이루어지며, 최종 가격은 11월까지 설정될 것입니다. 초기 송장에는 가격 변동 없이 지역별 항목이 표시될 것입니다.",
      "무료 머신 할당 크레딧으로 커버되지 않는 Machines Shared CPU 1x 사용에 대한 버그 수정이 완료되었으며, 크레딧이 재발급되고 있습니다."
    ],
    "commentSummary": [
      "Fly.io의 지역별 가격 책정은 논란을 불러일으켰으며, 특히 높은 가용성을 위해 Hetzner와 같은 대안과 비교할 때 비싸다고 느끼는 사용자들이 있습니다.",
      "Fly.io는 브라질과 같은 특정 지역에서 높은 운영 비용으로 인해 전 세계적으로 동일한 요금을 적용하는 것이 지속 가능하지 않다는 점을 강조하며 자사의 가격 정책을 옹호합니다.",
      "취미 계획의 제거와 일부 신뢰성 문제에도 불구하고, 많은 사용자는 동적 요청 라우팅 및 '운영 없는' 배포와 같은 Fly.io의 기능을 높이 평가하며, 이러한 기능이 더 높은 비용을 정당화한다고 믿고 있습니다."
    ],
    "points": 94,
    "commentCount": 109,
    "retryCount": 0,
    "time": 1720077454
  }
]
