[
  {
    "id": 37176703,
    "title": "Ask vs. Guess Culture",
    "originLink": "https://jeanhsu.substack.com/p/ask-vs-guess-culture",
    "originBody": "Tech and Tea Subscribe Sign in Discover more from Tech and Tea Navigating the messiness of life with a career in startups. Musings on engineering leadership, teamwork, parenting, partnership, and creative self-expression. Over 16,000 subscribers Subscribe Continue reading Sign in Ask vs guess culture When unreasonable requests are followed up with \"but you could have just said no!\" Exploring the clashes of ask culture and guess culture, at home and at work. JEAN HSU AUG 12, 2023 62 9 Share Have you had someone ask you for a favor that seemed unreasonable — a referral you didn’t want to make, a long-term stay at your place, a sizable cash loan? But because they asked, you felt obliged to seriously consider it, to try to meet their request, even if it put you in a space of discomfort? Maybe you carry out the favor, but it sours your relationship, and when it all comes out, that person says, “Well why’d you agree to it? You could have just said no!” But you feel resentful that that person even put you in a position to have to say, “Sorry we’re a bit busy that week so don’t have space for you to stay with us,” or “I can’t loan you that money at the moment”? Congratulations, you’ve just encountered a clash between ask culture and guess culture. The idea of ask vs guess culture was shared online in 2007 by a user tangerine on Metafilter. When I first read it years ago, a lightbulb moment went off, and many frustrations and conflicts I had while growing up made much more sense in this framework. Despite this idea’s longevity, I find that it’s still a new-to-many and incredibly useful concept to revisit, so here’s a little exploration of ask vs guess culture at home and at work. Ask culture and guess culture are vastly different in behavior and expectations. Here are some highlights: Ask culture expectations Ask for what you want, even if it seems out of reach or like a big unreasonable request Take care of your own needs, and others will take care of theirs It’s fine to make requests that people will probably say no to People say yes to requests that you truly feel good about, say no to ones they don’t Guess culture expectations Only ask for something if you’re already pretty sure the other person will say yes Read an abundance of indirect contextual cues to determine if your request is reasonable to make It’s rude to put someone in a position where they have to say no to you If the appropriate feelers and context are set, you will never have to make your request at all. It’s easiest to understand the differences between ask culture and guess culture through examples, so here are two examples with a moving situation — you’re moving soon and hope to save a few bucks with the help of your friends. Ask culture example You post on Facebook sharing that you’re moving and make a list of things you could use help with: moving boxes and tape, packing help, usage of a truck/van, and physical labor on moving day. You reach out to a few local friends asking if they’re available on moving day. A few people respond on Facebook with moving supplies, and a friend comes over to help with packing, but no one is available to help on moving day, so you end up renting a moving van and hiring a few movers. Guess culture example Your friend is typically free on the weekends, so you ask them if they’re available to help you on moving day. You ask another friend what they’re up to, and they have family visiting, so you don’t mention that you need help with moving. Another friend has access to a pickup truck, and you dropped off some soup recently when they were sick, so you mention that you’re moving next weekend. They ask if you’d like to borrow their truck, which you defer saying you don’t want to inconvenience them, but when they offer again, you accept. Depending on whether you gravitate more towards ask or guess culture as your default, one of these scenarios may sound very uncomfortable. If you’re more a guess-culture person, asking people for help without knowing their circumstances can feel rude or intrusive. Broadcasting publicly your need for help can feel awkward and vulnerable. If you’re more of an ask-culture person, the guess-culture example of juggling everyone’s specific scenarios and the historical context of favors probably seems exhausting. Dropping hints in the hopes that you won’t even have to make your request can feel extra passive and manipulative. Generational cultural clash of ask and guess culture I probably operate somewhere in-between ask and guess culture — defaulting to guess culture when I’m low-functioning but aspiring to be more and more ask-culture. I was raised deeply in guess culture, as many Asians and Asian-Americans are. The Japanese proverb that “the nail that sticks up gets nailed down” reinforces the idea of social collectivism and keeping your individual needs and wants to yourself — values that are shared by many Asian culture. My parents rarely had to make explicit asks of me, because the expectations around values and behavior were communicated through indirect messaging, often by tone of voice or through stories about other people. Western society is very much ask culture. A classic example can be found in proverbs. “A squeaky wheel gets the grease” is an American proverb, enforcing the ideas of individualism and that asking for what you want will benefit you. The generational clash between ask and guess culture can be frustrating and exhausting. Years ago, my brother and I were in San Diego visiting our aunt and uncle. The plan was for my grandma to come down from Los Angeles, so we could all spend time together, but our grandma had last minute minor surgery to recover from and had to stay put in LA. “So we should drive up to see her, right?” my brother and I discussed. But all of the older relatives insisted we did not, suggesting that instead we see the sights in San Diego, that we take the kids to Sea World, that the traffic would be awful and that a 2 hour drive would turn into 5 hours, that it’d be dangerous. This all seemed ridiculous to us, so instead we drove the two hours, keeping our plan secret until we pulled up into our grandma’s driveway, so that no one could resist and thwart our plan. We had a lovely visit, and my mom later thanked us for making the drive. This is guess culture — and it’s a lot of saying not really what you actually want, and it’s a lot of reading between the lines to try to figure out what people want. Deciding what to eat for dinner with guess-culture people isn’t as simple as asking people what they want to eat for dinner, because they will not tell you what they actually want to want to eat for dinner. They will say “oh, whatever you want,” or “whatever is easiest.” And when you insist that you really really want to know what they want to eat for dinner, and if it’s too much work, you’ll do something else instead, the response you receive will already be a compromised version of what they want, taking into account the preferences of everyone else in the house, what the kids will eat, and the leftovers in the fridge. Thoughtful? Yes. But frustrating if you actually want an honest answer of what someone wants. You may be better off listing options and gauging their response to each one. For guess-culture people, thinking about what it is you want can feel absolutely foreign, and for me, it’s been a years-long practice to continue to tap into and understand what I want, before I then try to take others’ needs into account. Tech and Tea posts explore navigating the messiness of life with a career in tech. To receive new posts and support my work, consider becoming a free or paid subscriber. Subscribe Ask vs guess culture at work At a high level, western corporate work operates almost entirely in ask culture. But people working at these companies often operate in or were raised in guess culture, which as you might expect, is ripe for feeling misunderstood and frustrated. Last week, I shared about normalizing sharing we want in life and at work, so that they might actually be supported in coming true. Ask vs guess culture is another lens at looking at asking for what you want at work. Being guess-culture in an ask-culture work environment looks like hoping someone will tap you to become a manager because you’re clearly the best person for the job. It also looks like being frustrated when others loudly express enthusiasm about taking on a new project on the roadmap and are given the opportunity to lead it, when you were also interested in it and maybe dropped some hints about it being somewhat interesting. At a certain point, guess culture is not going to work for you, and you’ll feel under-acknowledged and overlooked. If you want to get more of what you want out of your work situation, you’ll have to lean more into ask culture. But ask culture is vulnerable, because the requests you’re making are ones that feel out of reach, and requires being ok with people saying no to you, often. It requires putting things out there that you want help with, and trusting that people will say no to you instead of helping you resentfully. Navigating corporate America as a guess-culture person Maybe just understanding the framework is already helpful, but here are a few small ways you can start to nudge yourself into ask culture. Ask for help on something you’re feeling stuck on. Guess-culture people will worry that they’re interrupting someone, or someone will be annoyed if they’re in the middle of something. If it feels more comfortable, you could say, “Let me know when is good for a half-hour working session today or tomorrow.” Want to publish something on the company blog or give a talk at an upcoming event? Try asking. If “Hey can I give a talk at the next event?” feels too uncomfortable, try “Hey I’m really interested in giving a talk at a future event. What are you looking for?” or “I’d love to give a talk about , what do you think?” Get more comfortable with people saying no to you. If people are not saying no to you, you’re probably still only asking for things that you already know people will say yes to (which is guess culture). Ask for more budget, ask for an uncomfortable amount of PTO, ask for professional development budget, ask to purchase only vaguely-work-related books on your company card. Ask yourself, “If I could have my way…”, which is a useful hack to bypass thinking about others’ needs and honing in on exactly what you want. Use this to think about your role, your next project, your work schedule, your title, your salary and equity, your team. From that thought exercise, ask for some things you want. Does this framework behind ask vs guess culture provide any clarity to you around past or current frustrations? When have you experienced clashes between ask and guess culture? Leave a comment 62 Likes · 4 Restacks 62 9 Share 9 Comments Daniel K 10 hrs ago · edited 10 hrs ago Liked by Jean Hsu Wow, this is me! I'm 53 years old and I didn't know I was this person... a guess person. Being an Asian American, this makes so much sense right now-- it feels life-changing! I've always had hard time making requests especially at work (like for time-off/vacation/pto/raise). But the biggest difficulty for me was saying No to requests. I didn't want to, nor did I have the capacity to, but when a local organization asked me to volunteer for a year, I couldn't say no, out of not wanting to let them down, and out of social obligation. LIKE (1) REPLY 1 reply by Jean Hsu Luke Szyrmer Writes Luke’s Newsletter Aug 12 Ask vs guess is a great way to describe it. According to Erin Meyer in her book The Culture Map, one of the variables used to compare culture around the world is called high context vs low context. It's based on how much shared context you can assume when dealing with another person. In a highly homogenous culture, people are similar, have a shared history, shared norms, and this establishes a shared context. Here you are expected to guess what others want. It's similar to how a married couple behaves after many years together. In places like the US, where people have very different background, you kind of have to assume low context. then it's better to assume you ask if you want something. As an aside, when working online it's generally better to assume low shared context. So it seems like your distinction of ask/guess is a better articulation of roughly the same thing. LIKE (2) REPLY 1 reply by Jean Hsu 7 more comments… Top New Community Being-Doing Balance over Work-Life Balance My fantasy for work-life integration today AUG 15, 2022 • JEAN HSU 26 5 Finding the joy in feeling tired Some things that surprised me when I let myself be tired SEP 25, 2022 • JEAN HSU 21 3 Saddened by the tech industry Watching the pendulum swing away from people-centric leadership and wishing pendulums didn't swing quite so far in the other direction. JUN 17 • JEAN HSU 37 14 See all Ready for more? Subscribe © 2023 Jean Hsu Privacy ∙ Terms ∙ Collection notice Start Writing Get the app Substack is the home for great writing",
    "commentLink": "https://news.ycombinator.com/item?id=37176703",
    "commentBody": "Ask vs. Guess CultureHacker NewspastloginAsk vs. Guess Culture (jeanhsu.substack.com) 757 points by kiyanwang 18 hours ago| hidepastfavorite413 comments quacked 17 hours agoI am from the northern US (Protestant Scandinavian&#x2F;German) and my wife is from the southern US (Protestant English&#x2F;German) [1]. In the first several years of our relationship, we had several big disputes about how to treat each other, and how to treat guests. After a while we realized that she had been brought up to feel extreme insecurity over responding to the needs of guests, and I had been brought up to be blithely ignorant to the needs of guests.Over the years I definitely insulted several southern guests by mostly ignoring them, and she definitely projected insult onto several northern guests by assuming that they were secretly judging us for not being better hosts. We&#x27;ve since realized that southerners tend to prefer \"guess\" culture and northerners tend to prefer \"ask\" culture, to use the terminology from the article. There are certainly many exceptions, but this generalization has taught her to chill out a little over hosting duties, and taught me to pick up some slack when taking care of guests.We still both greatly prefer our native cultures. I don&#x27;t like being fawned over or offered things I don&#x27;t want, and she is extremely recalcitrant when it comes to asking for anything.[1] I mention the distant ancestral backgrounds because it&#x27;s amusing to me how well I get along with northern Europeans who are plainly spoken and \"rude\" by US standards, and how a lot of proper hosting culture from the UK reminds me of how her family operates. She finds Scandinavians and Dutch incredibly rude, whereas I find the English hilariously polite, even to their own detriment. reply hinkley 15 hours agoparentThis reminds me of John Mulaney’s bit about Jewish versus Catholic culture. He loved that he didn’t have to guess what his girlfriend was thinking, she would just tell him. No filter.For some people that can be rude or shocking. For others the opposite can be exhausting. The middle ground of mind games is the fucking worst. “Go do that thing I don’t like. It’s fine.” “Why did he go? He knew I was upset!” He answered your passive aggressive bullshit with his own passive aggressive bullshit. That’s why. Good luck in couples therapy. reply thefourthchime 14 hours agorootparenthttps:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ogHxa4aPXN8 reply sss111 14 hours agorootparentprevdo you have a link or timestamp for this? reply crooked-v 14 hours agorootparentProbably this segment. https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ogHxa4aPXN8 reply huijzer 12 hours agoparentprevI‘ve gone through a ton of comments below and see a lot of contradicting evidence to your thoughtful suggestion. Also my girlfriend and I are both from north Europe and I notice a similar difference. Maybe the difference is mostly> she had been brought up to feel extreme insecurityThis reminds me of a quote from Buffett from about 40 years ago. He said something along the lines of \"when women are raised, they hear and see a million reasons why they cannot do things whereas men see and hear a million reasons why they can do things\". If I would be convinced by the world that I am not good, then sure I would treat guests amazingly well. If I would be convinced by the world I‘m amazing, then why bother treating guests well? They can say it if they need anything.I‘m happy to hear counterarguments if you have them reply morby 10 hours agorootparentI generally agree. A lot of contradictory statements and I would only add to that. I feel like people tend to pigeonhole each region in the US, the US itself, and indeed any other country into what “people act like”. There might be a common thread that is statistical but it’s not monolithic in any sense. Micro cultures exist and interplay with the macro culture especially in a networked world. reply trompetenaccoun 1 hour agorootparentWell the article we&#x27;re commenting on claims it&#x27;s also an East vs West thing, and that Asians are \"deeply in guess culture\". Which, if you know Mainland China only a little you&#x27;ll know isn&#x27;t a thing, because in China it&#x27;s not uncommon for people to make the most outrageous requests without breaking a sweat. Which in turn is seen as embarrassing or rude by some other Chinese. That may be much less common in Japan, where people are obsessed with etiquette. But then the author should say it&#x27;s a part of Japanese culture, not Asian culture.All this seems like good old stereotyping to me. It often comes down to the individual family or even the individual person. Maybe their social skills, maybe their level of selfishness. Maybe also how much they care about how they&#x27;re seen by others vs how comfortable they are being themselves. A lot of factors can play into this. reply l0b0 6 hours agorootparentprevThis and other comments here resonate a lot. My SO is unlikely to ask for anything if there&#x27;s even a small chance of getting a negative answer, and I&#x27;m basically the opposite. If this difference really is common, wouldn&#x27;t it explain a large part of the salary and position discrepancies between the sexes? That is, someone who asks for an improvement to their contract once they are 50% sure of getting it versus someone who only asks when they are at least 80% sure are going to have very different careers, right? Especially if their superiors are usually of the same background. reply huijzer 1 hour agorootparentBut that wouldn’t explain why men generally tend to go hard or die trying whereas women are, if you ask me, more clever on average and collaborate with other people. My current theory it’s related to the dating statistics. Dating is a power law for men, albeit more suppressed when polygamy is banned. A few great men will get all the mates whereas most get none. For women, it’s more equal. So men realize that they must excel or have no mate, which leads to extreme behaviour: sometimes extremely \"good\" (e.g., founder of S&P company) and sometimes extremely bad (e.g., robbing bank). That would explain why most CEOs are male, but also why most criminals are male. reply maksimur 2 hours agorootparentprevI don&#x27;t know. I know men who act like your SO. reply leemcalilly 8 hours agorootparentprevDo you not see how that attitude is totally selfish, and in practice comes across that way no matter where you’re from.Treat everyone, no matter who they are, like someone you admire and you can’t go wrong anywhere in the world. reply nonethewiser 11 hours agorootparentprevThe American south has a very distinct attitude towards guests. Very hospitable. That’s the difference in his case. reply Delk 11 hours agoparentprevI feel somewhat conflicted about this. I&#x27;m from Finland, and while we aren&#x27;t technically Scandinavian and might be something of an outlier among Northern Europeans in general, the stereotype is that we&#x27;re not fond of small talk and prefer to be to the point and perhaps even blunt. But in terms of asking for things, I don&#x27;t feel like I identify with the culture of directly asking. Feeling out or giving hints that I might appreciate some help without making outright requests seems a lot less intrusive and graceful to me. And while personality is probably also a factor, I don&#x27;t think it&#x27;s just me.I think we&#x27;re generally a high-context culture, and the \"guessing\" culture as postulated in the post immediately reminds me of that. I don&#x27;t know if other Northern European cultures are less high-context but it makes me wonder if high vs. low context (possibly similar to guessing vs. asking) is not quite the same axis as bluntness. reply distances 2 hours agorootparentDefinitely true, and this also applies to getting things without asking.As a somewhat tongue in cheek example -- if you have guests over you should offer coffee three times. They may refuse the first two and accept the third time. But if you do not offer thrice, they&#x27;ll go home and complain that you were too stingy to even provide coffee.You should read the manner of refusal in these kinds of cases, and offer more profusely if the situation demands.I am built this way. It&#x27;s weird to admit, but not only I will not ask directly; I am very hesitant to accept things even when offered. Definitely very high on the guess culture scale, and I know that&#x27;s incompatible with how some other cultures operate, so I&#x27;m trying to be mindful about it and behave more directly when situation demands. reply morby 10 hours agorootparentprevNorthern European countries are, I believe, generally considered low context countries. High context countries include Japan, India, several Middle Eastern countries, France etc reply detourdog 16 hours agoparentprevBaltic state heritage and you sound like my kind of guest&#x2F;host.To quote Jerad&#x2F;Donald at Silicon Valley:“I like when people yell at me, at least I know where I stand”. reply lostlogin 14 hours agorootparentThis is a lot like the fantastic line by Scaramucci: &#x27;Where I grew up, we&#x27;re front stabbers&#x27;https:&#x2F;&#x2F;www.bbc.com&#x2F;news&#x2F;av&#x2F;world-us-canada-40748918 reply brandnewlow 13 hours agorootparentA true friend stabs you in the chest. - Oscar Wilde reply Cthulhu_ 13 hours agorootparentprevTo misquote quote a meme, I like dominant women not because I want to be humiliated, but because they say what they want. reply detourdog 12 hours agorootparentI told her she had control problems... she said we can talk about it in 2 weeks. reply rgoulter 17 hours agoparentprev\"Disputes arising from different communication attitudes in relationships\" reminds me of Deborah Tannen&#x27;s \"You Just Don&#x27;t Understand\", which was recommended to me. https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;You_Just_Don%27t_UnderstandTannen&#x27;s main suggestion is at least if you&#x27;re aware that someone communicates differently than you do, you might either make accommodation, or better understand things that might frustrate you. reply aidenn0 10 hours agoparentprevI have a friend from the western US who was explicitly taught by her (white) mother that you always refuse a favor the first time it is offered. There were many months of me never doing any favors for her before we figured that one out... reply deaddodo 10 hours agorootparentI&#x27;m from a western state and my family is pretty white. I&#x27;ve never heard this. You definitely don&#x27;t glob onto any&#x2F;all favors and you shouldn&#x27;t accept something you wouldn&#x27;t be willing to reciprocate in the same position, else you&#x27;re bound to be seen as social baggage eventually. But if you need something and someone offers: sure, take it.There&#x27;s no social dance to it. Just don&#x27;t be a leech, but accept help when it&#x27;s needed and don&#x27;t offer help unless you&#x27;re genuinely willing to give it. reply matheusmoreira 9 hours agorootparent> There&#x27;s no social dance to it.There is. What constitutes a leech varies from person to person, from culture to culture. Accepting help could easily lead to resentment, it&#x27;s entirely possible they were offering help to seem generous while simultaneously expecting to be refused. Offering help at all could be offensive because you&#x27;re in a position of strength while they&#x27;re in a position of weakness, it implies they need you, ingratiates them with you, puts them in your debt.Correctly navigating these waters requires instant judgements based on huge amounts of social information like status, reputation, personality, context, non-verbal cues like tone of voice and body language. It is difficult to do this deliberately because during conversations there is not enough time to deeply analyze anything. It&#x27;s best left to an uncounscious mind honed sharp by repeated practice. reply deaddodo 9 hours agorootparentFine. There&#x27;s no systematic dance, like more socially stoic cultures. New England and Southern cultures being the prime contrast; but you could use the caste system of India as an extreme contrast, if you like.Every interpersonal relationship has its own dance, no matter where you&#x27;re from. That&#x27;s what socializing is. reply lll-o-lll 3 hours agorootparent> Every interpersonal relationship has its own dance, no matter where you&#x27;re from. That&#x27;s what socializing is.And sadly, those not born with a neurotypical brain are very bad dancers. reply aidenn0 7 hours agorootparentprevYeah, this was somewhat peculiar to the individual friend. I was just offering it as an anecdote for those who say things like this are unique to \"people from the NE\" or \"Asians\" or \"people from the South\" reply throwawaymaths 8 hours agorootparentprevGet this: in Japanese culture, you are expected to refuse three times. reply dizhn 4 hours agorootparentIn Iran when you ask a store owner the price of something, the answer is \"It&#x27;s free.\" Then you have to refuse a few times if it&#x27;s free and then you can get the price. (Not my personal experience. But I heard the same thing from a few people.) reply srazzaque 7 hours agorootparentprevI&#x27;ve not been to Japan, but heard what seems to be an exception to this rule from a colleague.When out having drinks, it is considered (1) rude to let your friend&#x27;s drink go empty, and (2) rude to refuse your friends offer for a drink.Is this accurate? If so... one can imagine how this can get pretty messy! reply yetanotherasian 26 minutes agorootparentRude seems like a too strong a word for it but it&#x27;s normal culture to fill someone&#x27;s cup if it&#x27;s empty and it&#x27;s rude to poor for yourself without first filling your friend&#x27;s cup, and ideally they&#x27;ll ask for the bottle to fill yours once you&#x27;ve finished filling their&#x27;s but it&#x27;s common to just fill your own after filling theirs.As for (2) I don&#x27;t know any culture where if a friend asks you to meet up with them that there isn&#x27;t some expectation you&#x27;ll accept the offer and if you can&#x27;t you&#x27;ll at least try to make the friend feel you&#x27;d really like to but for whatever reason you can&#x27;t right now. If you just responded \"no, I don&#x27;t want meet\" I&#x27;d except after a few such responses you&#x27;d no longer be friends in any culture. reply throwawaymaths 5 hours agorootparentprevI wouldn&#x27;t know, I&#x27;ve never gone drinking with Japanese people, just been friends with Japanese Americans as a kid. It&#x27;s a thing. reply maksimur 2 hours agorootparentI don&#x27;t know if Japanese Americans truly represent their country of origin. If it&#x27;s like Italian Americans and Greek Americans they tend to have customs that in their country of origin are outdated. reply canjobear 8 hours agorootparentprevDoes that mean any offer of a favor has to be repeated four times, or else is insincere? reply burlesona 15 hours agoparentprevThis is fascinating to me, because I&#x27;m from the southern US and strongly align to \"ask culture\" and my wife is from the northwest and strongly aligns to \"guess\" culture.I wonder how much it&#x27;s about individual family background and not strongly regional? reply ketzo 15 hours agorootparentWhen you say that your experience in the south is more Ask -- who is usually doing the asking, host or guest?I said this down the thread but my experience (grew up in the south) has always been that Southerners are very up-front about trying to meet your needs before you can even ask for them. That was always how I was taught to host, anyway.And I think that weirdly, that&#x27;s more aligned with Guess culture: the person who needs something should never have to ask for it. reply burlesona 11 hours agorootparentNo, for my family growing up, nobody was going to try and read your mind, if you want something say something. For her family, they are always trying to anticipate needs. For her, if I&#x27;m not anticipating needs and taking care of them -- ie, if she has to ask -- then I&#x27;m being rude. reply nmstoker 12 hours agorootparentprevYes, I&#x27;m with you on considering this to be a guess culture thing (since you have to be sensitive to what they might need, likely want) reply BestGuess 12 hours agorootparentprevI reckon it has got to do with bein rural and poor, or maybe different kinds of european family cultures preserving different attitudes? Where I&#x27;m from in the south you didn&#x27;t ask at all if you knew what was good for you all about keepin up appearances and you had to be all sly about helping people out. More poor somebody is more sly you got to be. Bein in a city nobody gives a darn but way back when that darn was given pretty darn hard.Just a guess but could be that attitude has lots more to do with how many are poor or not and how many generations they&#x27;ve been poor, or lived in cities, like a lag time sorta thing. Nothing I really know about just sharing because it might be interesting even if wrong reply red-iron-pine 15 hours agorootparentprevyeah im from the south and there is definitely a level of up-front-ness that i&#x27;m not sure the parent comment is talking about. like a level of exuberance and get-it-out-ness that often borders on belligerence\"yall doin okay?\" reply ketzo 15 hours agorootparentThis is counterintuitive, but in the framing of the article, I think that \"y&#x27;all doin okay?\" would actually be part of Guess culture, not Ask culture. It&#x27;s just a very up-front manifestation of dealing with Guess culture, I think..? It&#x27;s not Ask culture because the person who needs something is not doing the asking.This is abstract, but stay with me hereI&#x27;m also Southern, and I think that the inclination towards that kind of belligerent helpfulness comes from trying to figure out what your guests want, and making sure they don&#x27;t have to ask you for anything.in my experience the response is \"we&#x27;re all good out here, but thank you!\" -- which is classic Guess culture reply quacked 12 hours agorootparentI&#x27;m the original commenter, and I agree with you. The person you&#x27;re responding to is accurate about that \"friendly belligerence\", but whenever I go down there I get all the \"y&#x27;all doin&#x27; all right?\" questions by hosts who are trying to see if I need anything. reply Cthulhu_ 13 hours agorootparentprevQuestions like that really... confuse me, because is it just a generic &#x27;hello&#x27; or a serious question?In my own experience, I once had an obnoxious colleague who asked \"How was your weekend?\". I didn&#x27;t like the question because one, I don&#x27;t like to talk about what I do &#x2F; did in my spare time, and two, it was leading because the guy was really really eager to talk about HIS weekend, but... I didn&#x27;t care, or else I would&#x27;ve asked. reply ketzo 11 hours agorootparentIf it&#x27;s coming from someone who could even remotely be considered a \"host\" to you, it&#x27;s definitely a serious question, and they actively want to fulfill any needs you might have. Southern hospitality is a super real thing, it&#x27;s pretty awesome.If it&#x27;s said as a greeting, \"how y&#x27;all doing?\" usually means \"how are your family?,\" which also tends to be meant very genuinely.Even outside of a host-guest dynamic, I do think Southerners tend to care more about pleasantries; when they ask about your weekend, they&#x27;re a little more likely to really want to know.Of course, this is all very broad strokes based on anecdotal experience. Plenty of cold&#x2F;self-aggrandizing jerks in the South, too! reply philwelch 10 hours agorootparentprevIt sounds more like you just don’t enjoy small talk. reply dkga 12 hours agorootparentprevCouldn’t help but listen it in Ted Lasso’s voice. Thanks for that beautiful moment. reply gottorf 15 hours agorootparentprev> \"yall doin okay?\"Speaking as a Southerner, this sentence is so on point. reply ubermonkey 15 hours agorootparentprevYeah, I&#x27;m a lifelong southerner (18 years in MS, 6 in AL, now 29 in Houston). We&#x27;re pretty up front about what&#x27;s going on across the board. If you come to a southerner&#x27;s house, there&#x27;s usually already hospitality happening -- but if you want something, ask! Just realize we&#x27;ll say \"no\" if it&#x27;s not something we&#x27;re going to do.This is jarring to people who cannot receive a no, or who cannot articulate one. reply DoreenMichele 9 hours agorootparentprevI grew up in the South. Daddy was a Hoosier and spent a lot of years in the army and retired in Georgia. Mom is a German immigrant.The upper classes of the Deep South, where people are very religious and often call folks \"Mr.&#x2F;Mizz. First Name\" as a mark of both respect and familiarity at the same time, seem to skew Guess culture. But then the upper classes generally seem to skew Guess culture.The South is also a place where people are more likely to own guns and join the military. Military culture is mostly Ask culture. They tend to be very direct and some people find this refreshing&#x2F;no BS and others find it rude, crude and socially unacceptable if you are influenced by that.Working class stiffs in the South may be more influenced by the very direct Ask culture of the American military.So it&#x27;s probably a lot more complex than regional cultures. reply porknubbins 7 hours agorootparentMost of the working class whites I know from the south in the military, or more middle class southerners for that matter seem highly mannered and polite, not really “ask” culture. reply DoreenMichele 7 hours agorootparentThat doesn&#x27;t actually contradict anything I said. I&#x27;m not suggesting that only upper class Southerners have the famous Southern Manners and Southern Hospitality.Just that there are variances across the region and those are some influences I know of. reply echelon 12 hours agorootparentprev> This is fascinating to me, because I&#x27;m from the southern US and strongly align to \"ask culture\"As a southerner, I don&#x27;t agree. It&#x27;s split by the directionality of the request. And I think that&#x27;s what makes southern culture distinct.We&#x27;d never \"ask\" when we&#x27;re the guest, only when we&#x27;re the host. \"Ask\"-y guests are considered rude. \"Guess\"-y hosts are considered unwelcoming and inhospitable.You can \"ask\" a stranger how they&#x27;re doing or if they need anything, but you don&#x27;t impose upon them. It&#x27;s often common to strike up conversations this way.It&#x27;s a directionality. \"Ask\" when you&#x27;re the giver, \"guess\" when you&#x27;re the receiver.You always hold the door. You don&#x27;t ask for someone to do it for you, but you probably feel miffed if they don&#x27;t, because it&#x27;s expected that everyone extends each other courtesy.\"Southern hospitality\". reply AndrewKemendo 16 hours agoparentprevIf I’ve learned anything in my 20 year mental health journey, it’s that until you’ve addressed your childhood trauma, nothing you do will be a lasting fix for any interpersonal issues you may have. reply boppo1 16 hours agorootparent>addressed your childhood traumaThis is pretty frustrating as 90s-kid who had a Good Childhood™ and struggles with interpersonal issues. I have a close friend from childhood who also had quite a Good Childhood™ and he can&#x27;t shut up about \"trauma\" and it seems like every two years he has this big epiphany about how he addressed some \"trauma\" he was previously repressing and how now that he&#x27;s done so he&#x27;s All Better Now™. His behavior and overall life outcomes do not have any correlation with these epiphanies. Both of our lives absolutely pale in comparison to the lives of average children in previous generations in terms of &#x27;trauma&#x27;. Minimal bullying, no fights, always plenty of toys and food, loving parents, etc.I know some people with real, legitimate trauma (verbal and physical abuse) and they said that visiting a therapist really helped them to feel a lot better. In such cases of legitimate trauma, I agree that one should do something about it if it&#x27;s making you feel bad. However, many of those people were already. interpersonally excellent before and after &#x27;addressing&#x27; their trauma.I have had people (including the friend from the first paragraph) suggest I need to \"work on my childhood trauma\" but really and honestly I can&#x27;t think of a single thing that was legitimately traumatic. I could take my worst experiences, which I have moved on from and don&#x27;t feel any need[0] to think about, and inflate them, but I&#x27;m pretty sure that would be creating a new psychological problem.[0]I don&#x27;t feel any hesitance to thinking about them either. I can sit and ponder them for a whole afternoon if I like, without emotional fluctuation. They&#x27;re just memories. reply cfiggers 16 hours agorootparentPeople overuse and overgeneralize the term \"trauma\" for sure. But it might be helpful to see real actual trauma as only one item in the larger set of \"stuff from your past that impacts&#x2F;has influence on you today, that you mostly aren&#x27;t aware of, but that if you were aware&#x2F;more aware of you&#x27;d be able to handle better.\"The way our primary caregivers relate and respond to us when we&#x27;re a) in our most rapid periods of development and b) completely dependent on them for everything absolutely has an influence on the way we turn out. How could it not?So there&#x27;s no such thing as Neutral&#x2F;No Influence, there is only identifying what effects there are and learning how to lean either into or out of those influences on a situational basis. All of this definitely applies to childhood trauma, but it doesn&#x27;t HAVE to be trauma for that logic to apply. Figuring that stuff out is a helpful part of maturing, and it doesn&#x27;t have to be a critical or negative thing.In many ways I&#x27;ve come to appreciate and love my parents even more as I&#x27;ve worked through the ways they raised me the best they could, given the resources they had, but in ways that I can now see preferable alternatives to.I think it&#x27;s the biggest \"I Love You\" in the world to self-consciously seek to grow beyond the limitations that were passed on to me, just like I want my little girl to outgrow the ones I consciously or unconsciously hand down to her. reply hinkley 15 hours agorootparentprevIn college we hit that age where classmates started losing grandparents. I was one of the oldest grandchildren so I had a few years yet.Some of these people absolutely fell apart. It was the first time they’d ever lost anyone and they couldn’t process it. When gently pressed, we would find out they had no pets growing up. They had not lost so much as a goldfish.A painless life can set you up for failure when real adversity comes. You lack the resilience, and in some cases the empathy, to navigate these situations. That’s not trauma, but it is loss.Those experiences gave me a whole new perspective on peers whose parents got them goldfish or hamsters at a young age. Some of these parents were setting up object lessons. Basically the chicken pox party of loss.At that point I had lost a dog, and as a sensitive kid it wrecked me. And the worst part of it was every time I caught my breath some new asshole would offer his condolences. Thanks, I wasn’t thinking about my dog for ten minutes and now I’m thinking about her again. Can we just stop talking about it please?I learned to offer sympathy without an agenda. Engaging them is trying to make them process on your timeline. It’s thoughtless, even a little cruel. Definitely selfish. A good friend will step in and push if weeks later you have not mourned. But the next day? Give them space, Jesus.I really appreciated, in that moment, the northern midwestern trope of bringing the bereaved food and just sitting with them. Let them talk, or not. I almost pulled a muscle watching Lars and the Real Girl. The little old ladies sitting in his living room, knitting, surrounded by casseroles and hot dishes. Just talking to each other and watching him out of the corner of their eyes. Talking about anything else. Yep that’s about it. Here if you need us, not holding our breath for you to say so. reply lostlogin 14 hours agorootparentI went to a Waldorf school and now my daughter does. At around age 10-11 children learn about death and practices around it (Norse, Egyptian, local practices) and what it means. The Waldorf philosophy holds that children start to understand that death is a permanent loss at about that age, and aims to teach them about it.Having a kid lose a pet at that age is a major thing for them to process.I love the school, but the disorganised over-parenting libertarian hippies can be overbearing at times.https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Waldorf_education reply TuringTest 12 hours agorootparentIs it true what they say that Waldorf is based in irrational teachings about the supernatural, and let&#x27;s children go several courses without learning basic rational stuff like reading well and doing math?I&#x27;m all for growing children with creative teaching and avoiding rote memorization, but I&#x27;d be horrified if that was at the cost of missing the best years for setting the pillars of rational thought. reply lostlogin 6 hours agorootparentThere was a little bit of the loopy stuff early on, but vastly less than friends who went to religious schools got. For my daughter she has been exposed to less of that crap that when she was in a state funded school.Reading is taught later in a Steiner school than at most schools, but not to any detriment measurable later in schooling.I’m not sure how one would accurately quantify the final outcome as demographics etc come into it. From my time at school there are surgeons, physicists, engineers (or various types), lawyers, mathematicians, accountants, tv producers, teachers etc. We had our share of dropouts too.I also don’t believe that the early years are the most important for what is learned, and that they are more important for learning how to learn and how to enjoy the process. reply munificent 13 hours agorootparentprev> I have had people (including the friend from the first paragraph) suggest I need to \"work on my childhood trauma\" but really and honestly I can&#x27;t think of a single thing that was legitimately traumatic.Let me just copy&#x2F;paste an older comment of mine:---Imagine you&#x27;ve lived in the same house your entire life. There&#x27;s a big couch taking up half the living room, but one of the legs is broken. When you were really little, it tipped over when you sat in it, so you just learned to walk around the couch over to the not-very-comfortable armchair and sit there instead.This was so long ago that you don&#x27;t even remember learning not to sit in the couch. You don&#x27;t think about how much room that couch is wasting or how much time you spend walking around the couch to get to the chair. Sometmies you stub your toe on the way around, but everyone trips every now and then. You&#x27;ve been doing this so long that it is completely unconscious. Hell, you can and do navigate the room in the dark.Friends ask you about your living room furniture and you—completely honestly as far as you know—say it&#x27;s all fine. You describe your chair in detail. It&#x27;s not perfect, but it&#x27;s serviceable. Certainly lots of other people have furniture that&#x27;s in worse shape. At least you don&#x27;t have any of those problems.Then you sit down with a therapist for a few hours and they say, \"Hey, what&#x27;s up with that couch?\" reply boppo1 12 hours agorootparentI understood the concept already, thanks.But thank you for providing readers an example of the kind of condescension I was describing. reply pixl97 9 hours agorootparentAnd then others can read your own comment history about the &#x27;minor&#x27; traumas and the impacts that has had on relationships in your own life.At least from your writing I believe you&#x27;re a very introspective person. The trouble with introspection is that it is an imperfect mirror. We tend to self find solutions for our problems, but we do so at the risk of completely missing the blind spots in our life.Coming back at the previous person with the term condescending is concerning. At least my observation is you believe you have covered all of your bases, but this gets problematic in cases of omission. Yea, your parents did not hit you, but that does not mean they taught you how to have healthy relationships, for example, something that leads to a lifetime of trauma in some people due omissive ignorance. reply Cthulhu_ 12 hours agorootparentprevIt doesn&#x27;t have to be a Big Thing though; the problem is that the word \"trauma\" sounds &#x2F; feels very serious, but it can be trivial things, or things you shrugged off like \"well those things just happen\".Personal example, I had a good (girl) friend when I was like six, I was very lonely &#x2F; isolated before she came around and we played together and the like. But then her parents moved and I never saw her again.And for many years, that was it, it happened, couldn&#x27;t do anything about it, nothing abnormal about it. But then because of Reasons I ended up going to therapy, and that event (plus others) are probably linked to a fear of abandonment &#x2F; commitment, of a pessimism when it comes to relationships (as in, don&#x27;t get too close, it&#x27;ll end and there&#x27;s nothing you can do about it).But also there&#x27;s a factor of \"My &#x27;trauma&#x27; isn&#x27;t that bad because others have had it worse\". Doesn&#x27;t mean you aren&#x27;t valid either. reply nicup12345689 14 hours agorootparentprevI think the key is to inspect the childhood trauma, however small, BUT don&#x27;t try and make it your identity. You are just making some things conscious, understanding yourself. The moment it becomes a crutch, it is just an excuse for not taking agency over your own life.In a way it is the perfect excuse, a childhood determinism of sorts. Blame everything just to avoid ANY change of the self. reply SoftTalker 10 hours agorootparentYeah I feel like a lot of this obsession over \"trauma\" is just looking for excuses for why one won&#x27;t get up off one&#x27;s ass and take responsibility for one&#x27;s life.Not discounting that some people have terrible childhoods that are legitimately damaging, but losing a pet or a friend moving away or a grandparent dying is not that unusual and well within the scope of \"normal things that happen\" that normal people can (or should be expected to) handle. reply pixl97 10 hours agorootparentConversely things like not being taught how to have proper relationships, being taught how to ask for help, or things (for men) toxic masculinity are potentially trauma inducing in social creatures as humans are.The &#x27;taking responsibility for ones own life&#x27; has a perverse failure mode where an individual is genuinely incapable of doing something, yet at the same time incapable of seeking help for the issue. These tend to lead to harmful downward spirals in those peoples lives. reply ilikecakeandpie 15 hours agorootparentprev> and he can&#x27;t shut up about \"trauma\"The worst thing that&#x27;s every happened to someone is still the worst thing that&#x27;s ever happened to them. Though it might not be something like mental&#x2F;physical abuse, it&#x27;s still their bottom even if it pales in comparison to someone else&#x27;s. Also, lots of families have secrets and can portray a healthy image when in reality we generally see people at their \"best\" in social settings. I think the key here is self-awareness without diminishment, which can be difficult.Also, at least with my algorithms, there is just so much bombardment from social media about things like trauma, mental illness, and neurodivergence where one can get lost in what they&#x27;re being presented and be convinced that just because they read the dictionary for fun when they were younger that they&#x27;re neurodivergent instead of possibly just being a curious child. If one is in a vulnerable state or just worn down from seeing all this, it almost incites a FOMO response of \"hey, I was traumatized too!\"I do think that normalizing and acting to remove the stigma from discussing these things is a net positive overall but it can be damaging for sure reply adamweld 15 hours agorootparentprevFWIW the data agrees with you, for milder cases of anxiety and depression, which often correlate with interpersonal issues, talk therapy (e.g. dissecting childhood trauma) is much less effective than cognitive behavioral therapy (analyzing behavioral and emotional patterns, trying to catch and redirect cycles of thought and action that lead to negative outcomes). reply taurath 13 hours agorootparentCBT is designed around outcomes that can be easily measured. It can also be actually harmful in cases where there’s actual trauma or neglect underlying the behavior or thought patterns. It has a tendency to paper over them.It helps a lot of people, but it’t also a trap for those who have more deep things to work through, having spend 6 years stalled out in CBT before coming to grips with the deep trauma and neglect, and the dissociation that was so prevalent in my life that CBT therapists never even bothered screening for. Ask anyone with an emotionally neglectful or abusive upbringing what CBT did for them and you’ll get quite a few nasty answers. reply kayodelycaon 12 hours agorootparent> It has a tendency to paper over them.Yeah. That&#x27;s one of the dangers the book I had talked about. CBT is a tool for rewiring the brain. If you have deep things to work out and don&#x27;t recognize it, CBT will do exactly what it says on the tin and rewire around things that need to be explored.That&#x27;s very not good.I&#x27;m bipolar and use CBT a lot. Identifying if the problem is logic-based is key to its application. Logic cannot override depression or mania, which means CBT doesn&#x27;t work and alternative strategies are needed. Usually I switch to some variant of DBT techniques. (It&#x27;s so automatic at this point it&#x27;s hard to identify all of what I&#x27;m doing.)In my experience, learning when to apply CBT is much harder than learning CBT. reply h4l 15 hours agorootparentprevI think it&#x27;s relative to our own experiences. If you drive on a perfect road, even a small bump is noticeable. But I don&#x27;t think that means people&#x27;s perception of problems is not legitimate. There&#x27;s always someone worse off, especially if you compare now to historical times.If there&#x27;s a sure-fire way to create a mental health problem, it&#x27;s to tell yourself you don&#x27;t deserve to have a problem because other people have worse problems. reply brazzledazzle 14 hours agorootparentI think trauma is also a bit relative. If you grew up with bad physical and emotional abuse from one parent the emotional distance and isolation from another might not even be a blip on your radar, at least until you&#x27;ve worked through the other stuff. And on the flip side if you had a great childhood with stable housing, plenty of food&#x2F;money then hitting rock bottom in adulthood might be pretty traumatic since you never had to develop the mental tools required to handle serious adversity. Obviously some trauma is objectively worse but competing over trauma severity is pointless. reply watwut 13 hours agorootparentThe thing is, kids who grew up in those good families are in fact more resilient then abused kids.Kids with bad childhood will not categorize semi bad childhood as trauma, but have worst interpersonal relationships, worst stress handling, abuse drugs or alcohol more often and display whole range of at risk behaviorsIt is simply not true that being poor or abused or neglected makes people resilient. reply brazzledazzle 12 hours agorootparentThat&#x27;s an excellent and fair point. Perhaps \"resilience\" is the wrong term for abused folks and it could be said as \"ability to continue functioning at their usual level of dysfunction\". I&#x27;ve seen enough examples of ostensibly well raised (typically younger) adults being hit really hard by adversity that I think there&#x27;s something to it. Maybe confirmation bias or perhaps those individuals had overprotective parents that shielded them from developing a lot of skills. That sort of dysfunctional parenting can be harder to recognize in adults. reply jimmaswell 15 hours agorootparentprevI always think of this SMBC strip.https:&#x2F;&#x2F;www.smbc-comics.com&#x2F;comic&#x2F;2011-07-22 reply h4l 14 hours agorootparentI love it, thanks! reply shanusmagnus 9 hours agorootparentprevMy hot take, that I eventually want to really dig into from a neuroscience perspective: trauma is almost entirely relative. It&#x27;s phenomenological.If you&#x27;re an average American of today, you&#x27;re living a life of comfort and abundance that could not have been imagined 100 years ago, and yet you&#x27;ll have about the same trauma as did your equivalent back then, even though they would have dealt with things that would have killed you, figuratively or even literally.Kind of related to Durkheim&#x27;s \"Society of Saints\" idea [1].This suggests a therapeutic vector: increase the variance in your own life. It probably won&#x27;t be technically hard, though it would be psychologically very difficult. If the theory is right, many of your minor traumas should quickly dissolve.It would take some amount of will to pull this off, of course. Though probably less suffering than the aggregated suffering conferred by the traumas.[1] https:&#x2F;&#x2F;www.tutor2u.net&#x2F;sociology&#x2F;reference&#x2F;durkheim-on-devi... reply pjerem 15 hours agorootparentprevidkI also had Good ChildhoodTM by your definition.Still I’m pretty sure I have been traumatized by the two big moves of my childhood, loosing my childhood friendships twice.It doesn’t look big, I am ok at socializing so I have friends but I know that when shit hits the fan, it happens that I dream of my first childhood friend and I’m pretty convinced that this is why I sometimes feel alone even when I’m well surrounded.The point wasn’t to tell my life but to say that you can’t really judge other’s \"traumas\". It’s highly personal how you feel about something and when someone doesn’t have something you have (in my case childhood friends) it’s easy to feel like it’s not important (maybe you can’t understand because your own childhood friendship eroded normally and you don’t feel like it’s an issue) reply travisjungroth 14 hours agorootparentprevOne way to view it is dealing with childhood trauma is necessary but not sufficient to fixing interpersonal issues. The problem is there are at least three opportunities for common errors of reasoning.if you have unresolved childhood trauma (people forget this is conditional) then resolving it is one of (not all) the requirements for fixing chronic interpersonal issues you may have (not everyone does).If someones make all those mistakes at once, you get they tell you to heal your childhood trauma to fix your relationship disasters and it&#x27;s like \"My childhood was fine. And I had one argument with one person. I&#x27;m just gonna go talk to him about it...\" reply ggambetta 12 hours agorootparentprevI just want to say I appreciate your humorous use of the trademark symbol. I love it, but not everyone does. There&#x27;s dozens of us! Dozens! reply EGreg 16 hours agorootparentprevI sometimes like to say the facts out loud and challenge people so here it goes.We live in the safest, least racist, least sexist, least antisemitic generation in history. At the same time, automation and productivity has reduced demand for human labor, and people increasingly can’t afford the rent. Perhaps the answer to many disparities isn’t systemic sexism, racism etc. but economic factors. Whatever you are worried about, your grandparents had it much worse.Also, let’s improve our systems to stop polluting the environment and destroying ecosystems for corporate profit at the expense of future generations. That’s the major issue of our day, far bigger than climate change. reply travem 15 hours agorootparent> At the same time, automation and productivity has reduced demand for human labor, and people increasingly can’t afford the rentGiven the juxtaposition of the claims above, I think it is useful to note that demand for labor is still relatively high (unemployment rate at ~3.5% in the US). The reason for unaffordable rents is driven more by the supply of housing not growing along with demand IMO. reply Cthulhu_ 12 hours agorootparentAnd demand being artifically inflated by investors (ranging from boomers &#x2F; gen-X ers who have extra money to Saudi oil barons) who buy up houses with the intent to rent them out or whatever. reply robotresearcher 15 hours agorootparentprev> At the same time, automation and productivity has reduced demand for human laborWe have approximately the lowest unemployment rate in modern history. reply EGreg 15 hours agorootparentThat’s only a tiny slice of the story.It doesn’t count the people who have opted out of the workforce.It doesn’t count the job insecuroty of the gig economy. Or the people with terrible conditions.It actually underscores the fact that both sexes flooded the labor pool in the last few decades, automation increased and wages got depressed due to all these factors.USSR also had near-total employment, for men and women, way earlier than USA did. And ironically, the rent cost a ton less. But people overall couldn’t afford that much.Your grandfather could have supported an entire family on one man’s paycheck, and paid for an entire house. Today, millennials onwards can’t afford any of that. The generation of adults with the least savings in probably a century.But, as I said, we still have it amaing. Medical advances, technology like air conditioning, electricity and so on. The Internet spreads so much knowledge around the world. I’m just saying that the remaining problems are often rooted in economic issues, more than a rise in “systemic X ism” reply dustincoates 14 hours agorootparent> It doesn’t count the people who have opted out of the workforce.Not the headline number, but in the US you certainly can find this data if you want it, in the U4, U5, and U6 rates:https:&#x2F;&#x2F;fred.stlouisfed.org&#x2F;series&#x2F;U4RATEhttps:&#x2F;&#x2F;fred.stlouisfed.org&#x2F;series&#x2F;U5RATEhttps:&#x2F;&#x2F;fred.stlouisfed.org&#x2F;series&#x2F;U6RATEIt only goes back to 1994, but these measures are currently all at or near the lows over the that period. reply robotresearcher 15 hours agorootparentprevAgree with all that. I disagree only that demand for labor has decreased, and near-full employment is my evidence for that. Many jobs are shitty, but someone is demanding the labor. reply EGreg 15 hours agorootparentWell, I guess what I am trying to say is that more people are asked to do work, but less work, and paid less for it too, adjusted for inflation.Gig economy and short stints at jobs are an example of how little employers really value their labor force, as opposed to the “company man” who worked for decades and got a pension. replyphilwelch 9 hours agorootparentprevWhat you have is a healthy and emotionally normal relationship with your past negative experiences. That’s good! It doesn’t mean that you’re perfect or that your interpersonal issues aren’t real; it just means that a monocausal theory of psychology that blames everything on “trauma” or, worse yet, “childhood trauma” doesn’t apply to you.People by and large don’t understand how their brains work, but if they’re suffering or struggling psychologically, they seem to want some sort of explanatory model to make sense of it. So it’s easy for people to buy into these models. The trauma model is one of the more fashionable ones these days. The problems with this model, especially the more pop-psychology version, are (a) it doesn’t fit what we know about actual, serious trauma anyway and (b) it seems to encourage people to catastrophize their past experiences in order to try and make their life story fit the model. This is also counterproductive because catastophization is itself a cognitive distortion that should be corrected rather than indulged. Focusing on childhood trauma in particular also sounds suspiciously Freudian to me.Another thing to point out is that even serious traumatic experiences don’t necessarily lead to psychological issues in the future. Most people have a natural resiliency to them. But if people believe that any unpleasant or negative experience is going to give them full blown PTSD, it’s more likely to happen. There are cases of this happening cross-culturally when well meaning western aid workers offer to counsel people in third world countries who experienced natural disasters. reply throwanem 16 hours agorootparentprevIf you&#x27;ve learned anything in your 20-year mental health journey, I hope it would be that not everyone is exactly like you, nor needs the same things you need. It&#x27;s remarkably self-centered to assume the prescription that&#x27;s suited you is exactly right for everyone else, don&#x27;t you think? reply AndrewKemendo 16 hours agorootparentThat’s also definitely true!Some people are lucky to not have significant childhood trauma which means it was never needing to be resolved reply throwanem 15 hours agorootparentAnd some people are aware that \"all interpersonal conflict derives ultimately from unresolved childhood trauma\" is one school of thought among many, and no more guaranteed to offer anything generally dispositive than any other.If it worked for you, that&#x27;s great! No joke, that&#x27;s fantastic. But not for nothing, too, is there the old joke about the guy who just started a 12-step program and now no sooner sees someone take a drink in a bar but assumes they&#x27;re an alcoholic. reply linster 15 hours agorootparentprevWow that’s a pile-on.“What works for you only works for you, so you might not have discovered that it works for anything else, but only if you were really paying attention.” reply solarmist 16 hours agorootparentprevI learned this this year. I&#x27;m in my 40s. reply Cthulhu_ 12 hours agorootparentI think a lot of people would benefit from getting some counceling in their earlier adult years, although on the other hand they may not be ready yet &#x2F; not see any issues yet.I&#x27;m late 30&#x27;s and same btw. reply solarmist 9 hours agorootparentI can attest to that. I got an ADHD diagnosis 8 years ago and it wasn’t until last year that I realized it was cPTSD.In fact, I was proud of being so “responsible” as a kid, not that I was neglected and parentified. reply AndrewKemendo 16 hours agorootparentprevYeah I’m 39 and just learned it last year. reply carabiner 15 hours agorootparentThat&#x27;s because we all read Body Keeps the Score at the same time. reply solarmist 15 hours agorootparentHaven&#x27;t read it yet. I guess I should. reply AndrewKemendo 14 hours agorootparentprevClose…Atlas of the HeartAlong with a bunch of other more medical reading reply solarmist 14 hours agorootparent+1 for Atlas of the Heart, but that was more useful after I handled my childhood trauma. replyxxEightyxx 10 hours agoparentprevI can relate to this. I am a 3rd generation American, family immigrated over from Norway and Sweden and our heritage and traditions are still very strongly observed. We are protestant as well and live in the northern U.S.My family is a bit on the extreme of guessing culture to the point where we won&#x27;t say anything and often folks find us very cold. I am made acutely aware of this everyday - from romantic partners, friends, and even strangers. My siblings and I were simply raised this way and it&#x27;s all but impossible to change my behavior.When we visit family in both Norway and Sweden it&#x27;s almost like \"whew\" we can relax and breathe and everything feels very comfortable because the pace of society is slower, at restaurants and during normal activities out and about in the towns, you generally do not have to worry about folks approaching you.My current partner is also a 3rd generation American, her family on both sides is Irish. They are incredibly social and outgoing and just 10 minutes she informed me we are having our neighbors over (he is a 2nd generation American of Irish descent and his partner is a 2nd generation Dutch). They are all very social and won&#x27;t hesitate to offer a beer or help or anything really, which I certainly appreciate it but I&#x27;m uncomfortable accepting anything.An even more extreme example is my older brother. I almost look like a social butterfly in comparison because I won&#x27;t hesitate to complain about the weather, work, anything really. Whereas he is very stoic and quiet. We were in the construction industry with our father and we all would mostly work in silence building homes and apartment buildings, and when we expanded and hired new folks it made them really uncomfortable.Once, my brother fell off a roof and he just laid there in a daze. I rushed down to him and by the time I got to him (no more than 20 seconds) he was already getting back up on the roof and just said \"I&#x27;m fine\". Another time his lung collapsed and he didn&#x27;t tell anyone until his 5th day in the hospital! It&#x27;s really disappointing sometimes. reply earthboundkid 8 hours agorootparentMy grandfather’s parents were Swedish, and that attitude certainly describes their side of the family: don’t talk about how you feel, don’t complain, don’t express emotions hot or cold. reply deaddodo 10 hours agoparentprevI grew up in Southern California, and neither of your descriptors really apply to the general culture there. Social conventions in the area are far less structured nor regimentalized, so if you needed something serious (a loan from a family, help moving, a ride to work, etc) you should probably ask. If you had some minor issue, most people would keep it to themselves; not necessarily hoping for someone to \"guess\", but would respond pretty openly if you did probe&#x2F;\"guess\".I will say, the general lack of structure&#x2F;formality in general social interactions is probably the biggest contrast between West Coast (especially SoCal) and either your New England or your wive&#x27;s Southern upbringing. At least, this is my experience with transplants from those regions and their biggest complaints (\"why don&#x27;t people RSVP\", \"why are they wearing business casual to a fancy event\", \"why don&#x27;t people bring gifts to get-togethers\", etc). reply georgeecollins 9 hours agorootparentSouthern California is great (I live there) but its not exactly Western. My family is from Northern California, by way of the gold rush and very waspy, hence very guess culture. \"I wonder if someone should open a window?\"So cal is in the west but most of the people didn&#x27;t come over during western expansion or work on a farm or ranch. A lot came from the mid-west. So its sort of more like Arizona or even parts of Texas. reply yogrish 6 hours agoparentprevI have similar situation at home. I am from guess culture and always think about what the guests might need and offer them ahead. But my wife expects them to ask and doesn&#x27;t bother much or ignores them. I see people from guess culture tend to be more empathetic as they think from others POV but the downside is they have anxiety of what others might judge and be more stressed. Ask culture people tend to be more situationally unaware and don&#x27;t bother much and are relaxed. reply tiffanyh 16 hours agoparentprev\"Guests, like fish, begin to smell after 3-days\"- Ben Franklin reply carabiner 17 hours agoparentprevThat sounds more like urban vs rural. The southerners I&#x27;ve known (Alabama) are pretty blunt about asking for what they want. Going further with stereotypes, some people say west coast is guess, east is ask. reply nostrademons 16 hours agorootparent\"Going further with stereotypes, some people say west coast is guess, east is ask.\"My experience is the opposite. I grew up in New England, and it seemed like there were a large number of unspoken norms (in both business and personal culture) that were really hard to grok. Moving out to the Bay Area, people are refreshingly direct. \"Want to come work for equity on my crypto startup?\" \"No, you&#x27;re crazy.\" \"Okay goodbye!\"I think that where hypocrisy and indirection are ingrained in Silicon Valley, it&#x27;s because of diverging incentives and a lust for power. In other words, people won&#x27;t unconsciously hurt your feelings because they assume you would&#x27;ve consciously spoken up; they will consciously screw you over because they want that billion dollar deal. It feels very much like an ask culture, though, regardless of how crazy the asks are. reply BoxFour 16 hours agorootparentWell, I&#x27;d suggest that:1) A substantial number of individuals in the bay aren&#x27;t originally from there.2) Assuming the role of a startup founder inherently demands a familiarity with ask culture.One of the initial steps frequently involves requesting significant amounts of money from individuals, with minimal consequence to the borrower if it doesn&#x27;t materialize to anything! reply nostrademons 16 hours agorootparentThat&#x27;s precisely what makes Western (and particularly American) culture an \"ask\" one, though. Ask cultures arise when you have a great diversity of individuals and can&#x27;t make assumptions on their backgrounds, desires, or how they would interpret an interaction. Guess cultures arise when you have a long period of stability, and communities that form and persist over generations. When this happens, you can start to make consistent norms and then pass them down in childhood, so everyone in the community has a good sense of what&#x27;s expected of them.Bay Area startup culture is an extreme example of Bay Area culture in general, which is an extreme example of Western U.S. culture, which is an extreme example of American culture, which is an extreme example of general western European culture. But they&#x27;re all marked by fluid, transient groupings of people that came from all over. reply BoxFour 15 hours agorootparentI see what you&#x27;re getting at. My intention was to highlight that I don&#x27;t believe Silicon Valley culture is synonymous with Bay Area culture. In my interactions with individuals who were raised in Northern California or even the Bay Area, I’ve seen a lot of “guess” culture fairly similar to the PNW.To phrase it differently, a significant number of the people you’re thinking of probably wont establish lasting roots in the Bay and thus wouldn&#x27;t be passing down that culture to the subsequent generation of Bay Area youngsters.It&#x27;s a thought-provoking query indeed though, pondering what characterizes the \"prototypical San Franciscan\" and how that might evolve over time! reply camel_gopher 15 hours agorootparentprevHave you heard of the California no?“Gee, that startup sounds cool. Let me get back to you.” reply dheera 16 hours agorootparentprev> Moving out to the Bay Area, people are refreshingly directWeird, I moved from Boston to the Bay Area and I have the opposite experience.In Boston if someone asked me to have dinner with them it was always just dinner. If they had other intentions they would state them up front.In the Bay Area a good fraction of the time the other person has an unstated intention (hiring, dating, asking for intros to dates, asking for intros to investors, asking for other help ...) that I usually need to dig up before I say yes or no. The thing is, sometimes it is a yes, I just wish people would be more upfront that there is an agenda around this \"dinner\". reply samus 16 hours agorootparentprevIndeed rural vs. urban is another divide across which such differences are observed. People from big metro areas are usually more blunt than in the surroundings. Probably because people there usually come from diverse backgrounds, but \"guess\" culture requires the opposite to work. reply xeromal 15 hours agorootparentAs someone who&#x27;s lived in both environments, I think most urban people develop a shell from the constant interaction that&#x27;s required in a city. People selling wares, hobos&#x2F;homeless, and a stronger need to protect oneself. You have to be blunt or you&#x27;ll never get anywhere. lol. reply sethhochberg 15 hours agorootparentThis is advice preached to people visiting NYC all the time.The person on the corner asking “excuse me sir may I please ask you a question” almost certainly has ulterior motives. Locals in a busy neighborhood ignore a guy like that a few times a day.But the person on the corner who says “hey which way is the 7 train?” with no preamble is gonna get good answers, despite being less traditionally polite.Where there is constant stimulation, the cultural norms get a lot more direct reply xeromal 15 hours agorootparentYeah, on the other hand, I recently was looking for an old land cruiser and got in touch with a local guy on facebook. Knew I wanted it and sent him 1k to hold the car for me for a few days until I could rent a trailer. He did so and I picked up the suv without a hitch.I&#x27;d never do this in Los Angeles where I live part time.I context switch based on which home I&#x27;m at, North Georgia or Los Angeles. reply Aerbil313 14 hours agorootparentprevThat&#x27;s a very good analysis, so much it seems obvious in retrospect. But I think it misses one other factor: I&#x27;ve witnessed the most rural people to adopt ask-culture when they were guess people before. My gut says this has something to do with social media&#x2F;smartphones but idk. reply hosh 16 hours agorootparentprevIt may have more to do with deeper, more static personal relationships within a community in rural settings. In urban settings, folks generally don’t know their neighbors, can hide in numbers, have to be more assertive with strangers and acquaintances, and can get away to a fresh start if they wreck their reputation.I think ask vs guess is a good start, but looking at my experience and looking at what people are talking about here, there is at least one more dimension at play here. reply dools 10 hours agoparentprevRecalcitrant: having an obstinately uncooperative attitude towards authority or discipline.I think you mean reluctant. reply mgaunard 12 hours agoparentprevThe American south always were the sophisticated ones, with proper etiquette. reply carlhjerpe 13 hours agoparentprev> I am from the northern US (Protestant Scandinavian&#x2F;German) and my wife is from the southern US (Protestant English&#x2F;German)You&#x27;re American, your wife is American. reply crazygringo 11 hours agorootparentI&#x27;m genuinely curious, what is the point you&#x27;re trying to make?Do you think American doesn&#x27;t have cultural differences within? Or that those cultures don&#x27;t correlate at all with geography? Or with ancestry? reply carlhjerpe 10 hours agorootparentIt&#x27;s the international part, if there&#x27;s such a difference between west, east, south and north it just doesn&#x27;t seem necessary to say where you Mr grandma&#x27;s fromEdit: I want to move to the Netherlands, if I have kids there they&#x27;ll be Dutch reply earthboundkid 8 hours agorootparentThey’ll be Dutch when they’re in America, and American when they’re in the Netherlands. So it goes. reply blangk 4 hours agorootparentprevThey would have Dutch passports and be Dutch citizens, yes. And if they live there for long enough they would take on the culture. But let me ask you this. If you breed a German Shepard, with a German Shepherd anywhere in the world, what do you get? reply Cthulhu_ 12 hours agorootparentprevYou underestimate how vastly cultures can differ based on location or background. Also keep in mind the US is young and most of its inhabitants have a migrant background &#x2F; family history.The US is the opposite of a monolithic culture. reply anthk 12 hours agorootparentEven been into Spain? Half of the Andalusian culture around flamenco it&#x27;s alien to the rest of the country. Basque and the Nort-Western cultures related to the Celtic lore it&#x27;s similarly alien to the Castilles, Andalusia, Catalonia and Valencia.And even in regions themselves you can find alien customs to each other. For instance, in the Basque Country from valley to valley. Or in Andalusia with huge differences between East and West. Yes, like a Mandelbrot fractal. Spain it&#x27;s like that.You can find here any climate. Desserts? Glaciars? Tundra like climates? Cold winters down to -30C on high peaks? Dry heat? Windy heat? Dry cold? Windy cold? Rainy weather, like London if not more? All of them across the country. Now, from these megadiverse climate diffs you can guess you will find zillions of cultures and subcultures because, you know, traditions and architecture change a lot if you live between ponds in Cantabria with more mist than in a Stephen King novel compared to a dry dessert in Almeria were \"Spagetthi Westerns\" were filmed here and white homes with Arabic architecture reflecting the Sun was a must in order to just survive the Summer. reply margalabargala 12 hours agorootparentprevThis applies to other countries too.One person from London, the other from Belfast? Both British.One from Barcelona, the other from Madrid? Both Spanish.One from Prague, the other from Bratislava? Both Czechoslovakian, until a couple decades ago. reply quacked 12 hours agorootparentprevOutside America, this is true. Inside America, if you are unaware of pronounced regional cultural differences arising from the settler groups that form your ancestry and local culture, you&#x27;re either ignorant, or not American. reply ttepasse 12 hours agorootparentBut you’re already using perfectly good American regional identifiers for those regional differences in your original post.Pet peeve from a European: the American habit of using their distant ancestor’s European ethnicity as a shorthand for stereotypical personality and culture today a) undervalues the massive political and cultural changes in Europe since their ancestor’s emigration und b) undervalues the regional differences inside their ancestor’s origin country. Being german I find both Ask and Guess culture here, just 50 km apart. And often in the same place, differing by class or the rural&#x2F;urban divide. Describing „German“ as just Ask culture is rather wrong from my perspective. I know the outside and Hollywood stereotypes differ.(And c), I think, distant ancestors ethnic stereotypes undervalues the melting pot&#x2F;salad bowl effect over generations of the US itself.) reply earthboundkid 8 hours agorootparentYou can’t experience a culture until you leave it. When you’re in it, it’s just water. That’s why travel is interesting. reply anthk 12 hours agorootparentprevDitto with Spaniards. Most of the \"Hispanic coulture with flamenco, sun and beaches\" won&#x27;t apply to a whole 80% of the country. The North has beaches, but the Sun it&#x27;s an English tabloid. The middle Spain has Sun, but water is something you see in rivers in reservoirs. Also, cold as hell winters.Now try to figure that across the pond with zillions of native cultures merged with an (older than North America itself) Southern Hispanic culture from Mexico to the Patagonia close to the South Pole. reply NavinF 13 hours agorootparentprevYou&#x27;re not wrong, but there are some pretty big differences between south, east, and west. In a lot of ways US states are like independent countries that share a military reply carlhjerpe 12 hours agorootparentAbsolutely, I just disagree with trying to identify as being from somewhere else when you&#x27;re born and raised in the US reply quacked 7 hours agorootparentI&#x27;m not identifying as being from somewhere else. I&#x27;m explaining the broad origins of northern US and southern US culture.When it comes to talking about US history, people are quick to denigrate the US and explain how young of a country it is. When it comes to talking about the evolution and origins of American culture, people are quick to denigrate the US and explain how far removed it is from its European origins. reply dilawar 7 hours agorootparentprevWhy stop here: your are Earthling, your wife is Earthling. reply ortusdux 10 hours agorootparentprevBless your heart. reply jzb 17 hours agoprev\"It’s rude to put someone in a position where they have to say no to you\"I feel this in my bones. When I was a kid my dad went off on me after we visited someone&#x27;s house and I saw cake on the counter and asked for a slice. That was just unacceptable. (Context: He was raised by people who lived through the depression. Food scarcity was a real thing in living memory.)Even though his reaction was way overboard, I still believe this. Let people offer things, don&#x27;t ask. (With a lot of caveats depending on context...) reply retrac 16 hours agoparentThat may work relatively well with consumables like food. But it extends in many directions. I have fans and a space heater and extra blankets and etc. All of them are available for a houseguest to use. Many of them are stored in the guest room.I&#x27;ve had \"guess culture\" people stay over. Really, in my mind they don&#x27;t even need to ask. They&#x27;re already welcome to take an extra blanket. But they won&#x27;t even ask, and they certainly wouldn&#x27;t presume. They are indeed waiting on me to say \"oh, if you&#x27;re warm the fan can be plugged in, and there&#x27;s some extra blankets in the closet if you want\". Though in my mind, I don&#x27;t need to say that. And if I don&#x27;t say it they may go very uncomfortable.I&#x27;m most used to giving such reassurances to children, and to give them to adults seems a little infantilizing. But that&#x27;s my relatively \"ask culture\" background in action, probably. reply themodelplumber 16 hours agorootparentThat&#x27;s a great example. Unfortunately it&#x27;s also not super helpful to dichotomize the difference, because most people are a mix of both in different ways.For example, under extreme stress or illness, a lot of \"ask\" people will turn into \"guess what I want or life hates me\" people.And it&#x27;s not exactly unheard of for guessers to turn into power-trippers under stress and become over-direct when just a little bit of directness is a better idea.Sometimes guessers even use this entire us-them concept as a way to subtly preach to askers, but really it&#x27;s a two-way street. If you&#x27;ve ever lived or worked under an unethical or abusive guesser, you may have developed a very strong sense of the hypocrisy of the \"askers are blunt and mean\" comparison which often comes out in discussions with guessers.Fortunately though there is a lot of nuance to work with on both sides in most cases. (And again, dichotomizing this is not great in so many ways) reply jzb 16 hours agorootparentprevWell, exactly - it&#x27;s about things like consumables where you&#x27;re asking to take something. For example, \"may I have a glass of water?\" would have been fine with my dad. (And it was drummed into me it&#x27;s rude not to offer somebody at least a glass of water when they&#x27;re in your house!)Basic comfort items where you&#x27;re not using up someone&#x27;s limited resources == no problem. reply robotresearcher 15 hours agorootparentprev> to give them to adults seems a little infantilizingThe &#x27;mi casa es su casa &#x2F; make yourself at home&#x27; concept is perfectly normal and won&#x27;t cause offense to anyone, surely? reply 9dev 13 hours agorootparentI don’t think that concept in itself causes offense, but the fact that guests often don’t dare to actually live by it and prefer to be a little cold over an extra blanket… reply linuxdude314 16 hours agorootparentprevAre they supposed to just know the blankets are in your closet? reply dack 14 hours agorootparentI think someone could say they are cold and ask for more blankets, and the owner could say they don&#x27;t have any more blankets reply dahfizz 14 hours agorootparentprevThey&#x27;re supposed to ask reply jasondigitized 9 hours agorootparentprevBorrowing a fan purposed built for guests is not an imposition, and a imposition is what \"ask\" people have no problem with. reply morby 10 hours agorootparentprevWell to offer the other side. What if they don’t know you have these things readily available? reply bena 15 hours agorootparentprevFirst, you should let people know, that if they need anything, they can ask.Then, there are levels. If it&#x27;s just on the edge of being colder than I&#x27;d like, I might not say anything because the effort isn&#x27;t worth it. It&#x27;s 65 instead of 70, I&#x27;ll live. But if you ask me tomorrow how was it, I&#x27;ll tell you, \"Slightly cooler than I&#x27;m used to, but no problem\". And people will make a fuss and say \"Well, why didn&#x27;t you aaaassssk\" Because, like I also said, it wasn&#x27;t a problem. reply wccrawford 16 hours agoparentprevWhile I was studying Japanese, I learned that they go out of their way to make it so the other person doesn&#x27;t have to refuse with a \"no\". For instance, they&#x27;ll ask, \"Do you not have X?\" instead of \"Do you have X?\" The person can answer \"Yes, we don&#x27;t have it\" or \"It&#x27;s over here\".I actually made this mistake, asking for a product directly instead of negatively, when I was in Tokyo. The clerk took me to the aisle and said, \"If we had it, it&#x27;d be here.\" And there was no space for it. Took me a couple times to realize what had happened. reply quelltext 11 minutes agorootparentThis is as usual not universal.First, in shops people clearly ask for whether they have something.It&#x27;s super common for clothes and shoes stores to have more sizes in the back. I might ask the negative form when I think it&#x27;s likely they don&#x27;t have the size for a reason, e.g. if the same shirt in a different color is laid out in my size.In situations where you expect a product to be stocked right there in its usual place but it&#x27;s not there it&#x27;s natural to ask in the negative. Ex: bakery that usually has a full tray of croissants has an empty one &#x2F; or none at all. If you can guess it it&#x27;s also natural to ask specifically if they sold out.In situations where it&#x27;s not clear if a shop even has a certain product &#x2F; size or if you cannot find one and you are looking, it&#x27;s definitely not unexpected to ask positively. Ex: Asking whether a different option is available, or a different flavour than the one you see in front of you, or \"do you have this particular vinyl from ...?\" (it would be super odd to ask negatively in that last case).Often actually both work and choosing the negative form IMO is harder to get right.There isn&#x27;t really an inappropriateness component, and frankly the clerk in your example either was rude or they simply said \"if it&#x27;s not on this shelf, we unfortunately don&#x27;t have it\". And to be honest, I don&#x27;t see how their response would have been different if you had asked negatively. reply alexjm 13 hours agorootparentprevI&#x27;ve heard that the \"do you not have\" phrasing was used in polite Soviet-era Russian, leading to a joke about a customer who walks into a shop and sees all the shelves are empty:- Excuse me, do you not have any bread? - Sorry, this is a butcher&#x27;s shop. We don&#x27;t have any meat. The bakery is across the road. They&#x27;re the shop that doesn&#x27;t have any bread. reply sircastor 16 hours agorootparentprevThere may be an obvious language barrier here, but the coupling of a positive with a negative response feels very odd to me in English. I&#x27;m reminded of the old song (it was used for an advertising jingle for a product or company I can&#x27;t remember) \"Yes, we have no bananas!\"Adjacently, I really dislike the courtroom phrasing \"Isn&#x27;t it true?\" that is sometimes depicted in legal dramas. reply kccqzy 2 hours agorootparentI have noticed the same thing. A \"yes\" or \"no\" answer could refer to the truth-value of the situation or to the polarity used in the question.I personally avoid this construction at all costs. When someone asks a negative question, I reply with \"you&#x27;re right\" instead of \"yes\" to mean I agree with the negativity. reply reddit_clone 15 hours agorootparentprevIndeed.>\"Do you not have X?\"In my head it sounds belligerent and accusatory. While the other form sounds polite.This negative phrasing to induce a positive response, may be a Japan only thing? reply contravariant 12 hours agorootparentIt&#x27;s probably more like \"You wouldn&#x27;t happen to have any X?\". I assume the idea is that you put the emphasis on the asker being the one to ask a silly question if they indeed don&#x27;t have it.Maybe it also helps that all the sentence markers that make a sentence polite, negative, interrogative all get added on to the end (to the verb) in japanese, which probably makes the construction slightly less awkward. In this case it may go something like motsu (to have) -> mochimasu (to have, polite) -> mochimasen (to not have, polite) -> mochimasenka (to not have, polite, interrogative).I&#x27;m making a lot of assumptions here though, I don&#x27;t know if this is anywhere close to correct. reply galaxyLogic 14 hours agorootparentprevIt&#x27;s interesting, it somehow means you are agreeing with them if they don&#x27;t have it, so they don&#x27;t have to feel so bad about not having it. reply MountainMan1312 9 hours agorootparentI&#x27;m from Appalachia and we have the same thing, and yeah at least for us it&#x27;s like you&#x27;re agreeing with them that they don&#x27;t have it.\"Do you not have bananas?\" is like \"is it true that there are no bananas?\". Then if there are bananas, the host can gleefully surprise you with them and feel like they solved a problem for you. This is only if it&#x27;s said in a constantly upwardly-shifting tone, though.It can be said another way, same words different tone, which sounds more like \"how perplexing, there&#x27;s no bananas, let me just make sure I didn&#x27;t miss them because I thought they should be here\". The host usually backs their answer up with an explanation of why there are no bananas.A third form exists where it does sound accusatory. Like \"you should have bananas you piece of crap\". Usually said in a huffy puffy I-dont-have-time-for-this tone. reply guythedudebro 7 hours agorootparentprevInteresting. Maybe more like a \"You don&#x27;t have x, right?\" than a \"do you not have x?\" reply pulsarmx 12 hours agorootparentprev\"Do you guys not have phones?\" reply williamdclt 13 hours agoparentprevAt the end of the day, if you’re firmly on either end of the spectrum it comes down to the same thing: you’re putting all responsibility of the social interaction on the other person. Because your position is fixed and theirs is (possibly) not, you’re making it their fault if the communication style doesn’t work. It leads to much frustration on both sides.In your example, if you have a fixed position of « Let people offer things, don&#x27;t ask », you’re putting all responsibility on the other person: they have to adapt to your style or they’ll be the bad guy. Even though the other end of the spectrum (« express your desires, don’t make people guess ») is just as self-consistent and valid.Camping at either end of the spectrum is putting yourself as a victim, it’s using the other person’s brain rather than your own to make the interaction pleasant. As in most things: extremes and inflexibility don’t work with the subtleties of reality reply zestyping 7 hours agorootparentWonderfully stated. reply gpgn 1 hour agoparentprevHow does that work in dating? If you are afraid of making people uncomfortable by asking them out, escalating things and putting them in situations where they have to say no to you, you may just end up being single for life. reply reg_dunlop 1 hour agorootparentNot at all related to dating, but this makes me think of the Curb Your Enthusiasm scene where Larry David&#x27;s mother died while he was in New York on vacation and his father didn&#x27;t want to \"inconvenience\" Larry out of respect for her dying wishes: \"don&#x27;t bother Larry\".Great scene and tangentially related to your premise. reply ranting-moth 10 hours agoparentprevI didn&#x27;t understand the article until I read your comment!I&#x27;d never point at someone&#x27;s cake in someone&#x27;s house and ask for a slice.Except for a really good friend, but I&#x27;d simply point to his cake and tell him I&#x27;m going to eat it. He would either say yes or tell me why I couldn&#x27;t and neither of us would take offence either way.I&#x27;ve learnt to shoot down inappropriate ask request right away. Lending you money? No, I don&#x27;t lent out money.Life pro tip: never tell people you have money. reply gopher_space 15 hours agoparentprevMy grandmother said you’d offer food to guests because you knew they were hungry and they’d refuse because they knew you didn’t have enough for yourself. If you actually had enough food for a meal you needed to convince your houseguest. reply seng 2 hours agorootparentThat&#x27;s the reason, I avoid going to relatives home as guests. They would compel and force me to eat something that I don&#x27;t prefer. I won&#x27;t be able to politely decline them as I&#x27;m from guess culture. reply tempestn 13 hours agoparentprevAnd a polite way to do this is to suggest the thing you want, rather than directly asking for it. You could complement the cake - oh, that looks delicious; what&#x27;s the occasion? Or, \"I&#x27;m moving next weekend - looking forward to the new place, but it&#x27;s going to be a big job!\" It is uncomfortable being asked something that you have to say no to, but that doesn&#x27;t mean we have to just hope people will guess our needs unassisted. reply tomjakubowski 12 hours agorootparentIn \"guess culture\" they can&#x27;t offer you help unless they&#x27;re certain you won&#x27;t decline the offer. So they&#x27;d have to figure out first if you&#x27;re hiring movers, and if not ascertain whether you already have enough friends helping you, and if not _then_ they&#x27;d offer to help you.I agree with the other commenters who say that guess culture is exhausting. reply tempestn 11 hours agorootparentMaybe that&#x27;s how it works somewhere, but it&#x27;s hard for me to imagine. It can definitely be an imposition to _ask_ someone directly for help moving, as indeed they might feel obligated to agree. But it seems much less likely in a real-world context that offering someone your help would oblige them to accept. It&#x27;s perfectly reasonable to explain that you have it worked out already, so you appreciate the offer but it&#x27;s not necessary.\"Guess culture\" could certainly be exhausting if you over-complicate it like that, but it&#x27;s not necessary. reply jzb 8 hours agorootparentprevThat’s not the case. Offering help is just fine. reply voxl 16 hours agoparentprevI suppose different people will have different tastes, but I will never agree that this is rude and that you should not ask. You should not be upset when declined, but that is another matter. reply jasondigitized 9 hours agorootparentTherein lies the problem. \"Ask\" people force someone to say no and saying no is considered rude. \"Guess\" people are then forced to be rude when they don&#x27;t want to be rude, and knowing this, are forced to be polite and give in to your demand. Obviously there is nothing sinister going on here, but unwittingly, \"Ask\" people are creating a uncomfortable situation for people who consider it rude to decline a request. reply jzb 14 hours agorootparentprevThe problem is that people do get upset. Basically, you&#x27;re forcing someone else to be the asshole by saying no or justify why they don&#x27;t want to share or do something.Rudeness is, of course, a subjective thing. Some people think it&#x27;s rude to wear shoes indoors, some people think it&#x27;s rude to make specific gestures that are either OK or meaningless to me.My wife is an asker. It&#x27;s a definite challenge at times... reply galaxyLogic 14 hours agorootparentThe rude thing is to not offer any reward in return for you, if you agree to their request.It&#x27;s just saying they want to take advantage of you if you fall for it. Making such a request means that they are happy to take advantage of you as long as you let them. Is that unethical?Think of it this way: You own a truly valuable stamp but you don&#x27;t know its value. Then somebody who knows its value offers to exchange it for their stamp of much lesser value, without telling you what they know about its value.It may not be unethical, businesses are based on such behavior. Buy low and sell high to make a profit. But when you see such behavior by your friends or neighbors or colleagues, be aware. They are the kind of people who are happy to take advantage of you. reply Galacta7 8 hours agorootparentHmm, I see a problem with this analogy in that the person selling the stamp is at an unfair disadvantage due to that information asymmetry. It&#x27;s actually unethical and sometimes even illegal to do this in the stock market, especially if the knowledge wasn&#x27;t publicly available.I think askers sometimes feel put off by guessers, because you can&#x27;t inherently know what the other person thinks is a fair request -- unless you&#x27;re in a high context environment (which most askers won&#x27;t be as familiar with). So from their perspective, guessers are doing a bit of insider trading ... only they know what&#x27;s of value to them. It&#x27;s frustrating from the askers POV because the counterparty seems less than transparent about their true intentions.Of course, from the other side of the coin, the asker is ignoring a million cues that are obvious to the guesser but meaningless to the asker who doesn&#x27;t even know to notice them. reply njharman 13 hours agoparentprevI&#x27;m not spending game night constantly asking all my guests all the possible things (water, caffeine, booze, food, bathroom, chair, cushion, warmer, colder, more light, less light, music, different music, louder music, quieter music, pet my dog, etc, etc, fucking etc). If you want something, YOU ask for it, which is polite. reply jasondigitized 9 hours agorootparentBut.....if you have an incredibly expensive or special, unopened bottle of wine sitting off in a corner and your guest asks if he can open it.....that is grounds to be excommunicated off the earth. Don&#x27;t do that, it&#x27;s incredibly tacky, reeks of entitlement and puts your host in a awkward position. reply syradar 4 hours agorootparent“No, it’s a special bottle“ The guest asked and got an answer. Is it tacky and reeks of entitlement, Yes, it does not haves to become awkward reply chromoblob 17 hours agoparentprevAnd miss out a lot... reply jzb 16 hours agorootparentI can honestly say I don&#x27;t regret a policy of not asking people for things in general. If somebody wants me to have some of their cake, or whatever, then I&#x27;m usually happy to accept. But I can&#x27;t think of a time when I am like \"gee, I missed out by not asking for that thing.\" reply ddbb33 13 hours agorootparentThe cake could also be asking for a raise, or a discount, really any other any opportunity that’s not as low-stakes as an item of food reply trailingComma 13 hours agoparentprevIt&#x27;s rude to expect other people to be able guess what you want.If you want something, ask me. I don&#x27;t have crippling confidence issues so saying no is not a problem for me. reply sneak 16 hours agoparentprevAll good and meaningful relationships involve give and take, and sometimes saying no, so this reduces to \"it&#x27;s rude to have close human relationships with people\" (because close human relationships necessarily involve sometimes saying no).There is an argument that such a worldview is slightly pathological. reply samus 16 hours agorootparentThere are ways around that, by phrasing questions in a different way so the other person does not have to respond with a hard \"no\". Yes, this requires prior acquaintance with that communication culture, and integration by relative outsiders can be difficult. reply wrboyce 16 hours agorootparentSorry but this is bullshit and putting the onus on the wrong person. “No” is a complete sentence and I don’t see the problem with using it, if you do (after say, I’ve asked for you a slice of cake) but can’t think of another phrasing (“I’m afraid not”, “maybe after you dinner”, “ask your father”; there are endless possibilities - especially when dealing with children) then the issue is your vocabulary, and not my failure to bend over backwards phrasing the question so do you don’t have to say the, apparently dreaded, word “no”. reply samus 15 hours agorootparentI guess that is your background from a more \"ask\"-like culture speaking, where things are put out more explicitly. Meanwhile \"guess\"-like cultures value \"getting along\" more highly and try to avoid the hard \"no\". Yes, this often stems from different underlying value systems that we might perceive as toxic. reply jzb 16 hours agorootparentprevAs I said upthread - lots of caveats and it&#x27;s context dependent. For one thing, this usually assumed there was not a \"close human relationship\" but social situations where you aren&#x27;t that close.It has to be OK to say no. In many scenarios or cultures it is considered rude to say no. So if you&#x27;re not able to gracefully say no without being considered rude, it&#x27;s correspondingly rude to ask because you&#x27;re basically saying \"do this for me or else you&#x27;re rude.\"It&#x27;s not an ask at that point, it&#x27;s a demand. If I&#x27;m the asshole if I say no, then I don&#x27;t want to be asked the question in the first place. reply DoreenMichele 12 hours agoprevThe formal terms for this difference are high context culture and low context culture.https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;High-context_and_low-context_c...\"Guess\" culture would correspond to high context culture. You need to have a lot of shared context -- or be able to read a lot of clues to the context -- to infer what was really meant as a means to be adequately polite.\"Ask\" culture would correspond to low context culture. It is often characterized as \"rude\" by outsiders but is also pro-diversity, such as New York City and American military culture.Some people can navigate either type of culture, assuming they know what type of culture they are dealing with. Others assume the world works one way or the other and default to whichever one they grew up with, most likely. reply jiggawatts 9 hours agoparentA common example of this is the US servicemen that had come back from tours of Iraq or Afghanistan telling stories of how lovely and \"welcoming\" the locals were.E.g.: the locals would make a token offer to the soldiers, expecting them to politely refuse.The Americans would take that offer at face value and accept, to the surprise of the locals. reply DoreenMichele 9 hours agorootparentSomeone from I think maybe Iran told an anecdote once on HN about visiting home with someone and eventually telling people \"Don&#x27;t offer him anything. He doesn&#x27;t know how to say no.\" reply Galacta7 8 hours agorootparentSounds like he lost his Persian sense of Tarof, lol. https:&#x2F;&#x2F;youtu.be&#x2F;XAvzW1WZsN4 reply Zetice 2 hours agoparentprevThe world does work one way; you ask for what you want. Even the “guessers” are asking for what they want eventually, when they’re sufficiently embarrassed… reply noahlt 17 hours agoprevThe \"Ask vs Guess\" name rhetorically frames it in favor of the Askers. Asking sounds reasonable, guessing does not!But really it&#x27;s not about \"Guessing\", it&#x27;s about understanding. It&#x27;s about community, and relationship, and trust. What this culture really wants is for you to pay attention and understand the people around you, rather than treating everything as a transaction. reply smeej 17 hours agoparentHmm. I think I&#x27;ve primarily experienced the really dark side of guess culture, so I appreciate your framing of it as a desire for understanding when it&#x27;s in a healthy context.I&#x27;ve experienced it in the contexts of narcissism and borderline personality, where the underlying thought is, \"I am so obviously the center of the world that anyone with half a brain who&#x27;s paying a whit of attention should to intuit my needs without my having to speak a word. If I have to speak, you have already failed.\" And anyone who failed was punished, sometimes intensely.Ask culture, for me in that context, became about being able to exist as a separate person and express a boundary. I&#x27;d much rather put the cards on the table, find out we want completely different, even opposed things, and work from there, than deal with the power imbalance of one person&#x27;s assumption that anyone who isn&#x27;t reading their mind is an idiot.It seems the virtue, as most of the time, is in the mean. reply flatline 17 hours agorootparentI have lived this too.Likewise ask culture can only be healthy if there is not a power imbalance: is the asked party really free to say no?The title is catchy but I’m not sure how useful this dichotomy really is. reply ativzzz 16 hours agorootparentYou can also be more empathetic with ask culture and soften or make the request more obvious to say no to.Instead of saying \"can you do x\" you can say \"i know you&#x27;re busy so no pressure whatsoever but if you&#x27;re available can you do me out with x? feel free to say no my feelings won&#x27;t be hurt\"Yea it&#x27;s a lot more words but the general gist is you ask with an additional explicit \"out\" for the other person so they can say no using your pre-provided excuse instead of them having to come up with one. I&#x27;ve found this over communication can be useful for bridging the gap sometimes reply reddit_clone 15 hours agorootparentAs a (suffering) guesser myself, when I have to ask something I always phrase it like &#x27;would you be interested in doing this?&#x27; so that they can say &#x27;no&#x27; without stress.Instead of asking &#x27;Would you do this for me? etc.&#x27; which I know would cause a mild-natured guesser stress. reply reddit_clone 15 hours agorootparentprevIt is also true that for some (many?) people it is very hard to say &#x27;No&#x27;. I don&#x27;t know any psychological&#x2F;technical name for this but it is simply true and it is in their nature.When asked directly, they will give in even if they don&#x27;t like doing what is being asked.&#x27;Asking&#x27; in these cases is actually exploitation (if done with prior knowledge). reply xyzelement 9 hours agorootparentI think what you describe in the flip side of this. If I assume guess culture, then you asking me something implies that you reasoned out that I should give it to you. That puts a lot of expectations on me and I feel like I am going to really upset you if I say no.Meanwhile you may have just asked me on a long shot. reply TylerE 13 hours agorootparentprevPeople Pleaser reply mannykannot 16 hours agorootparentprevIn this case, the unreasonable person does not understand the culture he is embedded in, and would not understand an &#x27;ask&#x27; culture either, where refusal to accede to his wants is regarded as reasonable.The difference between normal and pathological behavior in either culture lies in whether people treat others in the same way they would like to be treated themselves. reply throwanem 17 hours agorootparentprevWhat you&#x27;re describing is abusive behavior, which is something I would hesitate very strongly to characterize as part of any cultural norm. reply epylar 17 hours agorootparentI can think of several examples.Verbal abuse, childhood bullying, body shaming, cyberbullying, workplace harassment are all abusive and normal and accepted in many cultures. reply galangalalgol 16 hours agorootparentprevIt can be more moderate than that. \"what is wrong honey?\". \"Nothing, I&#x27;m fine\". Which can either mean, no really I&#x27;m fine, or if you don&#x27;t know, you obviously don&#x27;t care about me, or you know exactly what is wrong and don&#x27;t pretend otherwise. I&#x27;ve been both parties in that conversation, and over time I have learned that ask culture works better between close friends and family. That doesn&#x27;t mean I&#x27;d consider it abusive though, just a non optimal communication strategy. reply hosh 16 hours agorootparentIf there is one thing I learned, it is that when it comes to life partners and family where the stakes are conmingled, for the really important stuff, it is better to be open and direct.So I think one of the hidden dimensions here are — are you guessing because you are trying to consider the other person, or are you guessing because there is vulnerability to exposing what you really feel? reply throwanem 16 hours agorootparentprevAs a product of Southern American culture, I would note that \"guess\" culture as described here - specifically, the preference for indirectness and inference - is always something that exists primarily in and near interaction among strangers. It doesn&#x27;t always disappear entirely in familiar relationships, but does abate significantly in favor of being more direct. (Of course, this in itself increases the chance of cultural mismatches causing conflict, as what&#x27;s ordinary for someone from an \"ask\" culture can easily read as an insulting assumption of excess familiarity for someone raised with \"guess\".)That said, it is important to keep in mind that what&#x27;s here under discussion is a broad and fairly imprecise description of how varying acculturation can affect interpersonal relationships mostly among people who don&#x27;t know one another all that well. In that context it&#x27;s useful; to try to generalize it to every human interaction is not. reply throwanem 16 hours agorootparentThis also reminds me of the distinction drawn between \"honor\" and \"dignity\" cultures, as eg in [1]; I&#x27;d be interested to see how the \"ask\" vs. \"guess\" distinction maps, especially as antebellum Southern and prewar Japanese cultures both fall as strongly on the \"honor\" side as their modern successors fall on the \"guess\" side.[1] https:&#x2F;&#x2F;alexandria.ucsb.edu&#x2F;lib&#x2F;ark:&#x2F;48907&#x2F;f37d2s7h#:~:text=.... reply __MatrixMan__ 16 hours agorootparentprevWhy is that? Don&#x27;t you think that abuse can become a cultural norm?I don&#x27;t think we&#x27;d have ever come up with money if abuse weren&#x27;t a common cultural norm. It&#x27;s pretty much a proxy for \"or I&#x27;ll have my thugs hurt you\". reply throwanem 16 hours agorootparentBetter put, I&#x27;d say that I would hesitate to characterize a cultural preference for either directness or indirectness as akin to the kind of abuse a narcissist deals out to everyone around them.The argument is easy to construct in either direction, but in no case adds anything of value to the conversation.Too, claiming that abuse is \"just a cultural thing\" offers both abusers a convenient excuse for their actions, and everyone who isn&#x27;t abusive but does share traits of whichever culture an undue indictment. reply DirkH 16 hours agorootparentprevI guarantee you that abusive cultural norms exist and many poor individuals stuck in cultures with abusive norms wish they were living in a different culture. reply platz 15 hours agorootparentprevI expect you incorporate aspects of \"guess\" culture without even realizing it.For example, Is it okay if I bang your wife&#x2F;gf?If you think that&#x27;s",
    "originSummary": [
      "The article explores the concept of ask culture vs guess culture and how it impacts relationships and interactions.",
      "Ask culture involves directly asking for what you want, while guess culture relies on reading indirect cues and only asking if confident of a positive response.",
      "The article provides examples of clashes between these cultural norms and offers strategies for navigating a guess culture in a primarily ask culture work environment."
    ],
    "commentSummary": [
      "The article discusses cultural differences in communication and social etiquette, particularly between \"ask\" culture and \"guess\" culture.",
      "Personal experiences and anecdotes are shared to illustrate cultural clashes in relationships.",
      "The article touches on topics such as childhood trauma, therapy effectiveness, the impact of minor traumas on relationships, resilience, and the importance of understanding and respecting cultural differences."
    ],
    "points": 757,
    "commentCount": 413,
    "retryCount": 0,
    "time": 1692371208
  },
  {
    "id": 37175432,
    "title": "Mister Rogers had a point – routinely greeting six neighbors maximizes wellbeing",
    "originLink": "https://news.gallup.com/poll/509543/saying-hello-linked-higher-wellbeing-limits.aspx",
    "originBody": "skip to main content ABOUT US LOCATIONS CAREERS CONTACT US SUBSCRIBE Gallup Consulting Expertise Services & Solutions Learning & Events News & Indicators Shop Search Politics Economy World Key Topics Blogs & Podcast Media Resources SUBSCRIBE WELLBEING Saying Hello Linked to Higher Wellbeing, but With Limits Share on Facebook Share on Twitter Share on LinkedIn Share via Email Print WELLBEING AUGUST 15, 2023 Saying Hello Linked to Higher Wellbeing, but With Limits BY KAYLEY BAYNE AND DAN WITTERS STORY HIGHLIGHTS Routinely greeting six neighbors maximizes wellbeing outcomes All five wellbeing elements linked to greeting neighbors Greeting neighbors climbs steadily with age, peaking among 65 and older WASHINGTON, D.C. -- Adults in the U.S. who regularly say hello to multiple people in their neighborhood have higher wellbeing than those who greet fewer or no neighbors. Americans’ wellbeing score increases steadily by the number of neighbors greeted, from 51.5 among those saying hello to zero neighbors to 64.1 for those greeting six neighbors. No meaningful increase in wellbeing is seen for additional neighbors greeted beyond six. These results were collected as part of the Gallup National Health and Well-Being Index. The index is calculated on a scale of zero to 100, where zero represents the lowest possible wellbeing and 100 represents the highest possible wellbeing. The Well-Being Index score for the nation comprises metrics affecting overall wellbeing and each of the five essential elements of wellbeing: Career wellbeing: You like what you do every day. Social wellbeing: You have meaningful friendships in your life. Financial wellbeing: You manage your money well. Physical wellbeing: You have energy to get things done. Community wellbeing: You like where you live. These findings, from a poll conducted May 30-June 6, 2023, are based on 4,556 U.S. adults surveyed by web as part of the Gallup Panel, a probability-based panel of about 100,000 adults across all 50 states and the District of Columbia. All Five Elements of Wellbeing Correspond With Greeting Neighbors Not only is a person's overall Well-Being Index score closely related to the number of neighbors they regularly greet, but the pattern is also seen across all five elements of the index. As with the Well-Being Index itself, social, community, career and physical wellbeing peak at greeting six neighbors, while financial wellbeing hits its numeric high point at 11 to 15 such interactions. Apart from where they peak, financial and community wellbeing -- followed by social -- are most closely associated with saying hello to neighbors, with the largest gaps in scoring between greeting zero people and greeting six. Greeting Neighbors More Common Among Older, Higher-Income Adults Americans report saying hello on a regular basis to five neighbors, on average, with 27% reporting greeting six or more. This varies substantially by age, however. Young adults (those under 30) say hello to an average of 2.9 neighbors, compared with 6.5 among those aged 65 or older. About one in seven among those under 30 (14%) greet six or more neighbors, compared with 41% of those aged 65 and older. Having children under 18 in the household marginally improves the chances of greeting neighbors, as does having an annual household income of $120,000 or more. In addition to the correlation between greeting neighbors and personal wellbeing, this study finds a strong connection between Gallup’s Life Evaluation Index and neighborly relations. The chance of being categorized as “thriving” in Gallup’s overall life ratings increases from just 38.1% among those who regularly say hello to zero people in their neighborhood to 60.5% among those who say hello to five. At this point, however, no further gains are found among those who greet greater numbers of people. For its Life Evaluation Index, Gallup classifies Americans as \"thriving,\" \"struggling\" or \"suffering\" according to how they rate their current and future lives on a ladder scale with steps numbered from zero to 10, based on the Cantril Self-Anchoring Striving Scale. Those who rate their current life a 7 or higher and their anticipated life in five years an 8 or higher are classified as thriving. Just over half (51.2%) are thriving, based on the most recent Gallup estimates. Implications Social wellbeing, to which greeting neighbors is certainly related, has been linked to faster healing, reduced stress and better engagement at work. Recent Gallup research in partnership with Meta has shown that the U.S. compares favorably with other nations around the world in social interactions, with those in the U.S. more likely than those in countries such as Mexico, India and France to interact with the people who live near them. Social interactions also do not necessarily yield the same wellbeing outcomes for all people. For example, prior Gallup research has shown that older adults receive a boost in their mood with less social time than what is found among young adults, reaching a near-optimal point at just three hours of social time with friends or family per day, compared with seven hours for those younger than 30. As we age, social interactions typically become more limited, but with those opportunities tending to yield bigger boosts of happiness and enjoyment, it may help to explain why those 65 and older are investing in neighborly relationships at higher rates than younger adults. Urbanicity may also play a role, with younger adults increasingly likely to live in urban areas and older adults more likely to live in rural areas or small to medium-sized towns, thus increasing the chances of having neighbors to greet. The similarity between the optimal number of greetings for general life ratings and the more granular five elements of wellbeing provide good internal validation of the natural cutoff for the number of neighbors routinely greeted. Among the elements, it may be expected that neighborly interactions foster stronger social and community wellbeing in people’s lives. But notably, greeting neighbors is also linked to career wellbeing (liking what you do each day), physical wellbeing (having energy to get things done) and financial wellbeing (managing your money well). The associations found among these latter three elements are likely more multifaceted in nature and could be reinforced in part through the correlations found with social and community wellbeing. Other related external factors could also be involved. For example, the links to financial wellbeing -- which peaks at a greater number of neighbors than the other four elements -- may be supported with higher levels of safety in the community, thus increasing the chances of openly greeting neighbors. And those with better physical wellbeing have the energy to move about their neighborhood, increasing the chances of greeting neighbors. Future research on the topic would shed more light on these underlying connections and the strength of the directionality between being neighborly and wellbeing outcomes. At a minimum, knowing how many neighbors someone greets on a routine basis appears to be a useful marker of their personal wellbeing. To stay up to date with the latest Gallup News insights and updates, follow us on Twitter. Learn more about how the Gallup National Health and Well-Being Index works. Learn more about how Gallup Panel works. Subscribe to the Front Page newsletter for weekly insights on the world's most pressing topics. (*) Required * EMAIL ADDRESS * COUNTRY OR REGION Select One United States of America Afghanistan Aland Islands Albania Algeria American Samoa Andorra Angola Anguilla Antarctica Antigua and Barbuda Argentina Armenia Aruba Australia Austria Azerbaijan Bahamas Bahrain Bangladesh Barbados Belarus Belgium Belize Benin Bermuda Bhutan Bolivia (Plurinational State of) Bonaire, Sint Eustatius and Saba Bosnia and Herzegovina Botswana Bouvet Island Brazil British Indian Ocean Territory (the) Brunei Darussalam Bulgaria Burkina Faso Burundi Cambodia Cameroon Canada Cape Verde Cayman Islands (the) Central African Republic Chad Chile China Christmas Island Cocos (Keeling) Islands (the) Colombia Comoros Congo (Kinshasa) Congo Brazzaville Cook Islands (the) Costa Rica Cote d'Ivoire Croatia Cuba Cyprus Czech Republic Democratic People's Republic of Korea Denmark Djibouti Dominica Dominican Republic Ecuador Egypt El Salvador Equatorial Guinea Eritrea Estonia Ethiopia Falkland Islands (the) [Malvinas] Faroe Islands Federated States of Micronesia Fiji Finland France French Guiana French Polynesia French Southern Territories (the) Gabon Gambia Georgia Germany Ghana Gibraltar Greece Greenland Grenada Guadeloupe Guam Guatemala Guinea Guinea-Bissau Guyana Haiti Heard Island and McDonald Islands Holy See Honduras Hong Kong S.A.R. of China Hungary Iceland India Indonesia Iran Iraq Ireland Isle of Man Israel Italy Jamaica Japan Jersey Jordan Kazakhstan Kenya Kiribati Kuwait Kyrgyzstan Lao People's Democratic Republic Latvia Lebanon Lesotho Liberia Libya Liechtenstein Lithuania Luxembourg Macao S.A.R. of China Madagascar Malawi Malaysia Maldives Mali Malta Marshall Islands Martinique Mauritania Mauritius Mayotte Mexico Moldova Monaco Mongolia Montenegro Montserrat Morocco Mozambique Myanmar Namibia Nauru Nepal Netherlands New Caledonia New Zealand Nicaragua Niger Nigeria Niue Norfolk Island North Macedonia Northern Mariana Islands Norway Oman Pakistan Palau Palestinian Territories Panama Papua New Guinea Paraguay Peru Philippines Pitcairn Poland Portugal Puerto Rico Qatar Reunion Romania Russia Rwanda Saint Barthélemy Saint Kitts and Nevis Saint Lucia Saint Martin (French part) Saint Pierre and Miquelon Saint Vincent and the Grenadines Samoa San Marino Sao Tome and Principe Saudi Arabia Senegal Serbia Seychelles Sierra Leone Singapore Sint Maarten (Dutch part) Slovakia Slovenia Solomon Islands Somalia South Africa South Georgia and the South Sandwich Islands South Korea South Sudan Spain Sri Lanka Sudan Suriname Svalbard and Jan Mayen Swaziland Sweden Switzerland Syria Taiwan (Province of China) Tajikistan Tanzania Thailand Timor-Leste Togo Tokelau Tonga Trinidad and Tobago Tunisia Türkiye Turkmenistan Turks and Caicos Islands Tuvalu Uganda Ukraine United Arab Emirates United Kingdom United States Minor Outlying Islands Uruguay Uzbekistan Vanuatu Venezuela Vietnam Virgin Islands, British Virgin Islands, U.S. Wallis and Futuna Western Sahara Yemen Zambia Zimbabwe This site is protected by reCAPTCHA and the Google Privacy Policy and Terms of Service apply. SURVEY METHODS RELATED TOPICS INCLUDE: USAALL GALLUP HEADLINESEMOTIONS AND MOODGALLUP PANELSOCIAL AND POLICY ISSUESSOCIAL WELLBEINGWELLBEING Access Crucial Data for Your Research Search, examine, compare and export nearly a century of primary data. LEARN MORE ABOUT ACCESS CRUCIAL DATA FOR YOUR RESEARCH RECOMMENDED GALLUP PODCAST MAY 25, 2023 Americans Are Now Less Lonely, but Many Are Still Struggling WELLBEING APR 4, 2023 Loneliness in U.S. Subsides From Pandemic High Seventeen percent of U.S. adults report that they felt significant loneliness the previous full day, down from three different highs of 25% in 2020 and… early 2021. EDUCATION AUG 10, 2023 College Students Experience High Levels of Worry and Stress Three in four U.S. college students (76%) enjoyed their day, but 66% faced stress, 51% dealt with worry, 39% experienced loneliness, and 36% felt sadness. WORLD JUN 27, 2023 Global Rise in Unhappiness Stalls Gallup's latest annual update on how the world feels shows its emotional state stopped getting worse in 2022, but it may be too soon for leaders, organizations… and businesses to relax. Gallup Methodology Center Senior Scientists Trends A-Z George Gallup About Us Careers Locations News Store Media Center Gallup Speakers Customer Support CONTACT US Facebook Twitter LinkedIn Instagram YouTube Subscribe to Our Latest Insights SIGN UP Copyright © 2023 Gallup, Inc. All rights reserved. Cookie Preferences Privacy Statement Legal Do Not Sell or Share My Personal Information California Collection Notice Cookie Settings Gallup uses cookies to ensure the best website experience. Please select the cookies you want. You can change this setting anytime, but doing so may impair functionality on our websites. Privacy Statement Adjust your cookie settings. Essential Analytics Marketing SAVE PREFERENCES ACCEPT ALL HIDE",
    "commentLink": "https://news.ycombinator.com/item?id=37175432",
    "commentBody": "Mister Rogers had a point – routinely greeting six neighbors maximizes wellbeingHacker NewspastloginMister Rogers had a point – routinely greeting six neighbors maximizes wellbeing (gallup.com) 377 points by RickJWagner 19 hours ago| hidepastfavorite261 comments r3trohack3r 7 hours agoAs a kid, I had extreme social anxiety. I had a hard time talking to people and making friends. I never felt like I “belonged.”As an adult, I still have crippling social anxiety.I can’t speak for everywhere, I’m pretty much only in the U.S., but I’ve noticed that most fellow adults I come across are chronically deprived of social interaction.My social anxiety doesn’t actually matter. Me being awkward, and weird, and a little bit out there doesn’t actually matter. If you talk to people, ask them questions about themselves, laugh with them when they want to laugh, listen to them when they want to vent, rant with them when they want to rant, and feel pain with them when they’re vulnerable, a sweeping majority of the people I’ve met in the U.S. engage.And the more you do it, the more you realize the world is actually full of amazing people. They’re all living their lives, making mistakes, getting things wrong, and making bad calls. But overwhelmingly they’re trying to figure life out and get through the best they can; and they want people with them on that journey.I still have crippling social anxiety but my friend group is steadily growing and it feels good. I still play the fun game in my head of “haha did we all have a good time today or did I actually say something terrible and now everyone hates me or thinks I’m a fool?” on pretty much a daily basis. But I wouldn’t go back to being lonely. Not just for me, but for these amazing people who want more folks with them on their journey. reply whitepaint 1 hour agoparentJust keep doing what you&#x27;re doing. Like with everything, expose yourself to your fear and it&#x27;ll get better.> I still play the fun game in my head of “haha did we all have a good time today or did I actually say something terrible and now everyone hates me or thinks I’m a fool?”Appearing as a fool, saying controversial things, getting rejected over and over again - that is how you get over social anxiety.- Someone who had a great deal of social anxiety and now has no problem at all meeting random strangers at random events. reply prox 54 minutes agorootparentExposing yourself to fear doesn’t work for everyone (though good to hear it worked for you!)For some it activates the parasympathetic nervous system too much and you won’t have much luck easing the anxiety. Other means are available, often therapy or learning ways to cope with Parasympathetic activation. Usually focussed on calming the nervous system through various methods. reply NegativeK 7 hours agoparentprevRationally, I know what you&#x27;ve said to be the truth.In reality, I cut my own hair because it stresses me out to go to a Greatclips. reply climb_stealth 6 hours agorootparentWhat I learned is that it makes a huge difference to get a haircut from someone professional. Going to some cheap random mall hair place is a terrible experience. They don&#x27;t care about their work, it&#x27;s going to be awkward and it&#x27;ll look terrible.I have been going to a fancy hair place in recent years. AUD $85 seems like a lot of money for a mens haircut, but it makes all the difference. It&#x27;s a proper craft. No \"what haircut would you like?\", instead it&#x27;s pretty much at her discretion and suited to the actual person. Zero regrets. reply climb_stealth 6 hours agorootparentAdding to this, I&#x27;d like to say that it&#x27;s the difference between getting your code written by some outsourced underpaid and overworked junior and someone who has a decade of experience and clearly takes pride in their craftsmanship. reply Terr_ 3 hours agorootparentBut Tonsorial Debt grows on its own even when the use-cases have been static for years. :P reply mlinhares 6 hours agorootparentprevNah, you can definitely find great people that love their jobs even at places like that.I used to cut at a Supercuts in PHL (the Rodin place one for those in the know) and there was this great lady there that was both very skillful and incredibly nice, we always had great conversations. reply climb_stealth 6 hours agorootparentAgreed, I don&#x27;t doubt that. But starting from a place of anxiety I&#x27;d say it is much more likely to come away with a bad experience from there. At least that has been my experience. reply Tao3300 4 hours agorootparentprevMy hair is thick, curly, and I tend to let it grow long. I&#x27;ve found that, more often than not:- 90% of male barbers are butchers- clippers are for butchers- anyone who tries to cut your hair without washing it first is probably a butcher reply BugsJustFindMe 4 hours agorootparentI&#x27;m sorry you don&#x27;t like your hair cuts, but clippers, like scissors, are just a tool.IMO thick or curly hair is always best cut dry and washed after. The hair changes way too much when wet to get a realistic idea of what it will look like when done if you wash it first. If time and patience were infinite, sure, maybe, wash and treat curly hair first, but it has to then be fully dry and it has to dry slowly without blowdrying before cutting because it completely changes shape and size between wet and dry. reply rightbyte 3 hours agorootparentprevYou ... can tell them what style you want? I even think long hair cuts are easier to do as they won&#x27;t look asymmetrical as easily. reply pbourke 5 hours agorootparentprevCounterpoint: I am much, much more comfortable at the cheapo place at the mall than at some fancy pants salon. Find what works for you. reply robryan 5 hours agorootparentYep, I prefer a chain place where the staff are mildly disinterested, aren&#x27;t trying to push conversation and just want to get the job done quickly. reply malikNF 7 hours agorootparentprevI used to have trouble going to get my hair cut after a barber clipped my ear with a blade.Whenever I go to a new city what I do is, I read up a ton of reviews from multiple sources and find a few barbers I think ill like. Then I go for a quick trim to understand how comfortable I feel around them (this is the hardest part, I usually explain to them about my anxiety before I make a booking except for one instance everyone is really understanding usually), I have been lucky enough to find someone good after trying 2-3 barbers.My current barber is an awesome older gentleman from Iran who migrated to the same city as I am, knows my exact haircut I want, so all I have to do is show up on time and get a great stress free haircut, and get to hear some really interesting story from him. lol if I go out of the city for a while, I wont mind looking like an escaped lunatic for a few days extra until I come back home. reply jay_kyburz 6 hours agorootparentI went for a haircut in the US once and I didn&#x27;t know you were supposed to tip. I still remember the offended look on the barbers face when I held out my hand for my change. That was 20 years ago.Now days I don&#x27;t care as much and just do my own with the clippers and save myself $40. Can you believe a hair cut at the barber costs $40 now here in Australia. You know you are getting old when everything seems shockingly expensive. reply Melting_Harps 3 hours agorootparent> You know you are getting old when everything seems shockingly expensive.Or conversely you have vivid memories of how quickly the AUD, or USD or any fiat currency really has been so immensely rapidly inflated in the last 20 years; hell just in the last 3 years its been from tolerable to eye watering to get a haircut. I like my barber, she is the head stylist-owner and I don&#x27;t mind paying nearly $50 (with tip), but that is also because she does such a good job and we talk shop and what good restaurants still exist. It&#x27;s also that I can trim it on my own for a month later to keep my sculpted hair style in a customer facing role for that cost.I used to get a haircut twice a month when I was in HS, and they were $10, because it gave me a place where I could hang out on the weekend and chat for a few hours. I also realized I had developed a taste for aged and smoked whisky at 15 despite hating the smell of cigarettes in that place.I have several size clippers with all the accessories and while I played around with the idea of doing my own hair, as I had during COVID, the truth is I&#x27;d rather pay a pro for something that I don&#x27;t have to much to look good. Mine always were passable from about 7 feet away kind of things because I can&#x27;t properly fade, mine always look like I&#x27;m 3 weeks from my last haircut as a result. reply presentation 6 hours agorootparentprevYou’re good at what you practice and bad at what you don’t. If this bothers you then just go to the salon it until it stops being stressful. reply Obscurity4340 3 hours agorootparentprevIt helps to get the same person too. It is unnerving having a different person each time cutting your hair, I&#x27;d rather have someone who&#x27;s \"done me before\" than play with dice over it. A bad haircut is a nightmare reply jhardy54 7 hours agorootparentprevIn your defense, if you asked me where to get this most stressful haircut, I’d suggest Great Clips. reply nvarsj 1 hour agoparentprevI&#x27;m not usually one for drugs, but the thing that helped me get out of extreme social anxiety (I had selective mutism into my 20s), was anti-anxiety meds (off-label Modafinil). I didn&#x27;t take it for long, but being able to be in a social situation without that feeling of dread and anxiety was actually mind blowing.It helped me recognize a state of mind where I didn&#x27;t immediately go to massive anxiety. After that, with therapy and forcing myself to do more social interactions, I got into a much better place. I still have some anxiety, but it&#x27;s largely manageable - and most people think I&#x27;m quite social now.It&#x27;s something you might want to consider talking to a doctor about. I don&#x27;t think anyone should have to suffer from social anxiety if there is some option to help them get out of it. reply squonch 7 hours agoparentprevOne way around social anxiety: think about how little you care about the person in front of you. If you heard that they died how long would you be thinking about it? That’s how much they care about what you do. Or don’t do. reply nicbou 2 hours agoparentprevOne thing that helps is to consider how much you&#x27;ve gained by trying and failing to socialise versus not trying at all. My failures to fit in were far less impactful than my failures to try. So I try more.I know that you can&#x27;t rationalise your way out of irrational fears, but the thought still helps. reply agumonkey 3 hours agoparentprev- \"modern\" also ~optimize for social fluidity, you can do everything alone, in your flat, no need to be bothered by others right ? until you end up sad and addicted to fill the void (capitalism&#x2F;consumerism makes money on this.. people need money so it&#x27;s a downlevelling cycle)- long ago, when i was crippled socially, i ended up at a birthday party, i didn&#x27;t speak 95% of the time, drank some whiskey to pass the time. the next morning i was happier and healthier than i&#x27;ve been for a long time. somehow being surrounded, seeing others, even afar, satisfies something in your brainpeople are weird, i am weird, it&#x27;s .. weird we don&#x27;t connect that much, or maybe our lifestyles cut us from a natural emerging habit of being together and we forgot how to bootstrap it back reply chevman 7 hours agoprevWe live in a mid sized city in the midwest, typical city block with single family homes. Folks keep to themselves a bit - not everyone, but enough that you have to make an effort to connect with neighbors.My son and I had the idea that we should just organize a block party. I think this was in early 2021 after covid was letting up a bit. He was 7 years old and said we should get a food truck to come.So that&#x27;s what we did. Made homemade invitations and handed them out to a couple blocks around us and sent out emails to friends.I think we had like 75 people show up to the first one! It was great. Had a taco truck come, and the local fire station rolled the engine by for the kids.Blocked off the street so everyone could sit together and the kids could run around without worrying about traffic.We&#x27;ve been trying to do this every 6 months or so since then. Great way to meet tons of folks in the immediate vicinity and strike up some new friendships - highly recommend it. reply nightowl_games 7 hours agoparentThat is such a great idea. Nice work! Spread the word! reply te_chris 3 hours agoparentprevI live on a block that’s somewhat bookended by a railway line in London. People organise similar things and it’s so lovely. Even organised a group of people to go and sing happy birthday on one of our neighbour’s doorsteps (they’re > 100). reply smohnot 18 hours agoprevMr. Rogers was my actual neighbor in Pittsburgh in 1999-2000, while I was at CMU. He would really go out of his way to have social interactions. He would always say hello and ask how you were doing in a way that felt like he actually genuinely wanted to know the answer. Case of the person in real life being exactly like what he seems like on TV. reply paulmd 12 hours agoparentCandid camera set out to test this theory, and found that underneath the softhearted exterior was… exactly what it seemed.https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=vV-eVYahckAhttp:&#x2F;&#x2F;www.neighborhoodarchive.com&#x2F;misc&#x2F;candid_camera&#x2F;index.... reply JohnFen 12 hours agoparentprevMister Rogers was a genuinely wonderful person, who I always strived to emulate (and always failed to do as well as I should).The world is much poorer without him. reply toomuchtodo 10 hours agorootparentBut people are still talking about him and trying because of him. He’s left a rich legacy behind. Being kind is mostly free. reply dhosek 9 hours agorootparentIndeed, the world is much richer because he existed. reply jacquesm 17 hours agoparentprevnext [54 more] This is one thing that always got me about the United States: people will ask you how you are doing, but they don&#x27;t actually mean it, it&#x27;s just a required pre-amble, a bit like the tones a modem uses to sync up with the other end.If he did it in a way that he actually genuinely wanted to know the answer that alone would set him apart in a very distinctive way. Most people really don&#x27;t want to know the answer, but they&#x27;ll still ask the question. reply iflint 16 hours agorootparentAs an American, I view it as an option to start a light conversation. You can decline the option with a simple \"Good, thanks\", or you can genuinely answer with a light comment and see if the other person reciprocates. Answering with a particularly serious topic will likely catch the other person off guard, so people avoid that, but to say Americans don&#x27;t actually mean it when they ask how are you misses some of the nuance of the situation.There are important contextual and regional difference that apply too. You&#x27;re more likely to get a genuine reply in a place like the rural Midwest than you are in NYC. You also are more likely to get a genuine reply from a person relaxing at a bar than the cashier at a fast food drive through window. There are many people who will take the question as an invitation to talk if the situation is right. reply kibwen 17 hours agorootparentprevIn linguistics these are called \"phatic expressions\", and are far from unique to American English. Similar to idioms, phatic expressions don&#x27;t have the literal meaning implied by their component words and instead serve a social purpose (in this case, serving to signify the beginning of a communication protocol). In British English the analogous phrase would be \"you alright?\"https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=eGnH0KAXhCw reply jacquesm 16 hours agorootparentInteresting: so this is one of those things where my ESL background is shining through. I&#x27;m sure if I introspect on Dutch I&#x27;ll find equivalents that I might be using myself which when literally translated to English would upset an English or American counterpart in the same way. Never thought of this. And I didn&#x27;t know the term Phatic Expression.Thank you for posting this and the video link. reply smodo 13 hours agorootparentThere is a perfect equivalent in ‘hoe is het?’ or ‘alles goed?’ Those are mostly used as a syn&#x2F;ack-phrase so to speak. reply gattilorenz 16 hours agorootparentprev“Graag gedaan” (“you’re welcome”, “my pleasure”, but more lit. “I did it with pleasure”) can be dropped quite casually, right? reply jacquesm 16 hours agorootparentYes, but it actually does have meaning, and it is appreciated for that meaning rather than ignored.Conversely:Americans probably think I&#x27;m rude because I don&#x27;t first ask them how they are but start the actual conversation without pre-amble. reply lotsofpulp 15 hours agorootparentI would find it normal if you started a conversation after a simple “hi” or “hello”, and I think many other Americans would agree. reply dylan604 16 hours agorootparentprevI find it curious&#x2F;interesting on how you don&#x27;t notice your own versions of these from just being immersed in the language. It&#x27;s not until noticing these in other languages&#x2F;dialects that I really paid attention. UK English&#x27;s \"Watcha\" and \"innit\" (if that&#x27;s even how they spell them) are some of my favorites reply jtr1 17 hours agorootparentprevSpeaking for myself, the question is always fairly routine but sometimes people answer genuinely. In almost all those cases I really do care, but the register of the conversation usually only shifts after it’s apparent that the person is looking for more than a routine conversation reply scruple 16 hours agorootparentprevI think it&#x27;s less that people don&#x27;t actually want to know than it is that people don&#x27;t actually want to share. But I&#x27;m from the Midwest, originally, and that&#x27;s just kind of how we are.Expanding on this just a little bit... I think that, in the Midwest but I&#x27;m sure in many other distinct American cultural regions, there&#x27;s a sort of shared, but subdued, understanding that each of us is uniquely going through some shit. We answer the way we do because we don&#x27;t want to trouble others with said shit. reply jasonladuke0311 14 hours agorootparenthttps:&#x2F;&#x2F;twitter.com&#x2F;midwestern_ope&#x2F;status&#x2F;122834785331730022... reply scruple 14 hours agorootparentMy default response is, \"Oh, you know.\" I never know if I mean it as a statement or a question. Send help. reply Waterluvian 17 hours agorootparentprevThat reminds me of Tig Notaro&#x27;s incredible stand-up set when she found out she had cancer:\"I have cancer, how are you?\" \"Is everyone having a good time? I have cancer.\"It&#x27;s a masterpiece, in my opinion. Tig finds an intensely awkward situation with an audience that showed up for comedy, and just presses on it relentlessly. I really hope that when it&#x27;s my turn, I can handle it like her.https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=oXk1DSbXsZk reply jacquesm 17 hours agorootparentThat&#x27;s very powerful, in the beginning the audience is totally unable to calibrate their responses but it gets better over time. Props to her, her tone and delivery are absolutely perfect, aiming straight for the heart. reply landemva 16 hours agorootparentprev> I really hope that when it&#x27;s my turnI watched mother-in-law go through the expensive and painful burn&#x2F;cut&#x2F;poison and hospice with two morphine patches. On flight home I determined I was going to learn about it and find a different course than what was offered by the medical establishment. The book World Without Cancer helped start my journey. It&#x27;s not just random bad luck, so take action. reply NegativeK 7 hours agorootparentSome cancers are treatable; some aren&#x27;t. Delaying treatment for the first and giving false hope to the latter by advocating treatments that have _never_ been effective is actually harmful.That book has nothing to do with improving actual human health. reply xeonmc 14 hours agorootparentprevReminds me of https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=_CMZjXHhMR0 (first Canadian PSA) reply fnordpiglet 8 hours agorootparentprevIt’s really person dependent. I really mean it, and a lot of folks do. Additionally if you said “not good,” most people will be caught off guard but pivot into sympathy and asking what’s wrong etc. It’s a perfectly acceptable answer. A key thing though is to make sure it’s appropriate to the moment. If my boss asks me how I’m doing I’ll tell them if it’s not good in some way related to work or my performance (I.e., “not good, I can’t get this to compile” or “not good, my mom died I need to take time off,” or even, “not good, I didn’t sleep well last night.”) for friends the “not good” can be deeper, and for family it’s pretty open. For strangers, I still might say “not good” if something particularly acute is happening (“not good, my mom just died,” “not good, I just got out of the hospital this morning.”) I’ve never had someone get uppity about a “not good” response, and have always had an appropriate pivot to sympathy and a refocus on the question.As such, I’ve always found it odd people narrow in on the “how are you” question being perfunctory and people don’t genuinely care. They routinely ask it and generally expect “good thanks” but react appropriately to other answers. reply gglitch 17 hours agorootparentprevDo you shake hands? No one in my life shakes hands anymore. \"Hi, how are you,\" is no more rational, but at least it&#x27;s more hygienic. As polite social conventions go, I&#x27;d call it pretty harmless. Sort of miss the handshakes though.Edit: FWIW, I often ask people how they are, and while I hope and am delighted to hear how people are, you&#x27;re right, objectively, I think it&#x27;s really more just sort of a default template that invites any kind of response vaguely correlating with one&#x27;s status. But, \"Hi, I invite you to tell me anything on your mind that might correlate with how you or the world are, or anything else; I&#x27;m just being social,\" is a bit clumsy. reply phist_mcgee 7 hours agorootparentI still handshake new people that I meet who I know I may meet again. Neighbours, tradesmen, new coworkers etc. It&#x27;s a sign of respect and openness where i&#x27;m from.COVID was really weird because I knew that on meeting someone I would, and I knew they would normally shake as a greeting, but instead we would stand around hands awkwardly at our sides. reply dylan604 16 hours agorootparentprev>people will ask you how you are doing, but they don&#x27;t actually mean it,it is common to hear a reply as \"oh, you know\" an an equally un-engaged response. i remember the first time an uncle responed \"well, no, I don&#x27;t. that&#x27;s why I asked.\" i had never realized how i had become desensitized to the question that i gave an equally meaningless response. so now, if it&#x27;s a stranger, it&#x27;s just a simple \"doing good\" or \"just fine\" followed by a \"thanks\". if it&#x27;s someone i am familiar with like family or friend, but not coworkers, then i might stop to provide a more truthful response reply tristor 14 hours agorootparentprevFWIW, I&#x27;m American but well-traveled&#x2F;encultured, and I work a lot with people in other parts of the world. I ask this question, and I use it as an opportunity for the other person to set the tone of the conversation. I actually find it pretty refreshing when I get a blunt and meaningful answer in response, it&#x27;s one reason I love working with Dutch and German engineers, because they will give a real answer and not be so concerned as to how it may be perceived.I think it&#x27;s exactly a bit like a modem preamble, but it&#x27;s an opportunity to create a conversation and give both people in the conversation a chance to set the tone. It can really be used to genuinely find out the answer to the question, but a lot of people don&#x27;t want to share their personal challenges with strangers, coworkers, or even acquaintances. You may not enough know exactly what level of intimacy is included in your relationship with another person or whether you are at the point to move to that next level, this simple question gives them the opportunity to either dive into something that&#x27;s very personal or to keep it light-hearted and move along.It&#x27;s not a throwaway, it&#x27;s a respectful way to start a conversation that gives the other person agency in setting the tone. reply vidarh 11 hours agorootparentprevThe first time I experienced it, I was dumbfounded when someone asked \"How are you?\" and then just kept walking past. It took me a while to accept certain questions like this have become greetings and often aren&#x27;t actually intended as questions. reply modeless 8 hours agorootparentprevOff topic: this comment subthread is collapsed by default on page load. I haven&#x27;t seen this before, is it a new type of mod action? reply JohnFen 11 hours agorootparentprev> This is one thing that always got me about the United States: people will ask you how you are doing, but they don&#x27;t actually mean itYes, we use it like \"hello\" -- but not always. Sometimes we mean it.Since this use of \"How are you?\" trips up people from other nations so much, I&#x27;ve tried to be more aware of this. My compromise is that when I mean it as a greeting rather than a query, I&#x27;ll say \"Howzitgoing\" like a single word. If I mean it as a query, I&#x27;ll look the person in the eye and ask \"How are you doing?\" reply foobarian 17 hours agorootparentprevIsn&#x27;t it just how speech works? There are examples of this probably in any culture. It would actually be odd to respond to the question as asked instead of the expected ACK; you&#x27;d get something like this classic: https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=mhEYXcCB1Qw reply dools 10 hours agorootparentprevFun fact: I recently learned that in Fiji they ask \"where are you going?\" instead of \"how are you doing?\". They have a \"how are you doing\" greeting as well, but passing someone in the street you would say \"where are you going?\" to which there can be both generic and specific responses. I&#x27;m not sure if they&#x27;re any more or less interested in the response but I just found it interesting. reply frandroid 17 hours agorootparentprevI mean it&#x27;s not generally accepted to say \"I&#x27;m dying of cancer, you?\" but it&#x27;s a good jumping point for lighter conversation, which is healthier than not having the interaction at all. reply necovek 15 hours agorootparentprevMy English lessons from when I was a kid 30+ years ago spring to mind too: \"how do you do?\"Still, other languages do that too: que tal (Spanish), šta ima (Serbian), wie gehts (German),... reply bovermyer 17 hours agorootparentprevThis depends on the region of the United States and the context.\"How&#x27;s it going?\" can be either a throwaway acknowledgment, or it can be a light opener to a longer conversation. reply chmod600 17 hours agorootparentprevI treat \"how are you\" as an opening for a quick update if there&#x27;s something to say (e.g. \"it was Billie&#x27;s first day of school today\"), or a chance to set up a deeper discussion later (e.g. \"oh man, long story, let&#x27;s catch up later\"). reply zo1 16 hours agorootparentprevThe entire world probably has the equivalent of \"how are you\" in every which language available. Not sure where you&#x27;re going with this \"take\" on American culture. reply com 16 hours agorootparentSome cultures ask “have you eaten?” and I like that. A lot. reply jacquesm 15 hours agorootparentYes, I&#x27;ve heard &#x27;have you had rice today?&#x27; and that gave me a similar feeling. It inquires about health, hunger, affluence and is an open invitation to share some food all at once. reply xwdv 17 hours agorootparentprevThe problem is in the United States, most people don’t really know how they are doing.I don’t know how I’m doing right now. If you asked me you wouldn’t get much of an answer. I might say I’m doing just fine to end the conversation.But what is there to really say? We are simply going about this world trying to survive, trying to not get shot, trying to make so much money so that we never befall the fate of those who have been damned to a life of poverty. And all the time, a war wages for the control of our minds, and our privacy and free agency threatened at every opportunity. Big corporations and lobbyists want to hold us down, keep us in offices toiling away so princely investors can prop up their commercial real estate empires and ensure the working rich never get a chance to break free of their chains and embrace their own financial independence, because that would mean they become uncontrollable, a threat to those in power whose primary tool of coercion is money. The climate is falling apart and it makes little sense to have even one child, assuming you could even find a partner unsullied by the toxic dating culture that has been brewed by impossible standards hoisted upon us by social medias. I had to step over two homeless bums overdosing on the sidewalk this morning, victims of a drug epidemic that goes quietly unnoticed, swept under the rug as an inconvenient truth. It is clear the best days of this nation are far behind it. The future is perilously dark and uncertain.How am I really doing? Don’t know. I don’t try to think about it. reply SirMaster 17 hours agorootparentI can&#x27;t tell if this is serious or a joke.I&#x27;d hate to have your so pessimistic and negative view of the world though.I don&#x27;t think most people are viewing things this way (i.e. makes little sense to have one child). Plenty of people are having children and families and enjoying life.If this isn&#x27;t a joke, it seems you might need some help as there&#x27;s no way that&#x27;s a normal way to feel, at least in my experience. reply matheusmoreira 8 hours agorootparentIt&#x27;s not a joke. I feel exactly the same way as grandparent. The more you learn about the world and its workings, the more unhappy you become. It&#x27;s a hopeless feeling. Like civilization has already peaked before I was even born. I can see where the world&#x27;s going and I don&#x27;t like it but can&#x27;t change it.I&#x27;d say it&#x27;s the people who don&#x27;t feel this way who need help but on second thought I wouldn&#x27;t wish these feelings on anyone. reply xwdv 7 hours agorootparentHang in there brother. reply xwdv 17 hours agorootparentprevHN is not a place for jokes. reply AlbertCory 17 hours agorootparentprev> The problemthere is no problem. It&#x27;s a friendly greeting. Sorry your life is such a bummer.Try saying, \"Great, and you?\" even if you don&#x27;t mean it at all. You get back what you give out.Edit: you can also say, \"Shitty. It sucks to be me.\" That might even be honest, judging from the responses. reply jacquesm 17 hours agorootparent> Try saying, \"Great, and you?\" even if you don&#x27;t mean it at all. You get back what you give out.Yes, that is exactly the problem. It invites fake responses and real responses are not appreciated at all. It&#x27;s just noise. reply AlbertCory 17 hours agorootparentas I said: there is no problem. You prefer to live in a private hell, and there are lots of ways to signal that non-verbally. reply jacquesm 16 hours agorootparent> You prefer to live in a private hellSorry? Are you a mind reader or something? reply AlbertCory 16 hours agorootparenta mind reader? no, it&#x27;s fairly clear in your writing. reply jacquesm 16 hours agorootparentForgive me if I think you&#x27;re offensive. If it would please you to ignore my writings and refrain from commenting from now on that would help to reduce the discomfort.Unbelievable. reply AlbertCory 16 hours agorootparentIf you don&#x27;t want comments, you can always refrain from commenting yourself. It&#x27;ll save you from \"offensive\" replies. Try it. reply fknorangesite 15 hours agorootparentI think you got confused about who you were replying to. reply AlbertCory 14 hours agorootparentI see one name all the way down, and it&#x27;s not you. replyxwdv 16 hours agorootparentprevPrivate hell or public hell, you’re still in hell. reply the_only_law 16 hours agorootparentprev> Try saying, \"Great, and you?\" even if you don&#x27;t mean it at all.Nothing I hate more than a liar. reply AlbertCory 15 hours agorootparentTry going without lying for a week. I think there are even movies about that. reply matheusmoreira 8 hours agorootparenthttps:&#x2F;&#x2F;imdb.com&#x2F;title&#x2F;tt0119528&#x2F;> Was it good for you?> I&#x27;ve had better. replywellthisisgreat 16 hours agorootparentprevit&#x27;s a good culture tbh, gives you a chance to avoid the interaction if you don&#x27;t feel like it, or get into it if you want to have a chat.- How are you doing? - How are you doing?- How are you doing? - Well, you know, yesterday..both are equally socially acceptable reply irrational 18 hours agoprevIn our last house we knew 90% of the people on our street and regularly interacted with them. We have been in our new house for just over 2 years and only know our neighbors on one side of our house. The neighbor in the other house moved in just a week after we did. In those 2 years we have seen him only once, they day he moved in when he pulled up in his car, got out (without looking our way), opened the garage door, drove in, and closed the door. We literally have not seen him a single time since. The only way we know anyone still lives there is the garbage cans going out and coming back in each week (though, nobody has ever seen him putting out or retrieving his cans). Anyway, it’s hard to get to know a neighbor who doesn’t seem to exist.In our previous house, we lived about halfway down a dead end street, so anyone from one end walking by would come past our house. Also, there was a neighborhood garden which brought people together. In our new house, there is no community gathering space and we leave in a culdesac at the end of a road. The result is we don’t get to know our neighbors. reply gspencley 18 hours agoparentSounds blissful.I&#x27;m a fairly introverted, reclusive person. Much like your one neighbour. I keep to myself.I do know my neighbours. The couple on one side is delightful and the woman on the other side is a \"Karen\" who I prefer not associate with. She is an outdoor person and only \"talks\" to me when she has a problem with how I keep my yard. Ironically I would probably use my yard more (and thus tend to it more) if she were not always outside in her yard being loud.We have alley parking and garages in the rear, and I have workshop in my garage so I met a lot of my neighbours on the other side of the alley when working on projects... they came and introduced themselves and asked me what I was working on. They are delightful, but they also interrupted me which is annoying.My wife and I are easy to get along with and go out of our way to be friendly, but would honestly rather not know that our neighbours exist. Car doors, the sound of people talking, dogs barking, kids being loud, lack of privacy in our back yard are all things that really bother us. On the flip-side, when the tree in our front yard shed a branch so large that it was practically a small tree, the delightful couple next door helped us clean it up. I felt a sense of community that day and I started to get what others find enjoyable about it. Still, we often talk of going \"going rural\" and not having neighbours at all. reply Invictus0 18 hours agorootparentI think you&#x27;ll find that community matters even more in rural towns.We are social animals. We can&#x27;t do it all alone. That modern society has enabled us to be &#x27;reclusive&#x27; is frankly a maladaptive outcome. reply avgcorrection 17 hours agorootparentHell is other people. Since we&#x27;re apparently doing borderline thought-terminating cliches. reply biogene 7 hours agorootparentHN is a social community too. So are other online forums, discord chat groups, mailing lists, gaming communities, open source communities, etc. People are driven to social interaction, whether virtual or in-person. I don&#x27;t know what is the big deal in acknowledging that. reply klipt 17 hours agorootparentprevThere have always been hermits even before modern times, but I agree it&#x27;s a high risk life strategy.Loners are probably much more likely to die of say, having a heart attack and not receiving help promptly. reply hutzlibu 17 hours agorootparent\"Loners are probably much more likely to die of say, having a heart attack and not receiving help promptly.\"On the other hand, loners won&#x27;t get a heart attack caused by other people .. reply klipt 16 hours agorootparent\"People who experienced social isolation had a 32% higher risk of dying early from any cause compared with those who weren&#x27;t socially isolated.\"https:&#x2F;&#x2F;amp.cnn.com&#x2F;cnn&#x2F;2023&#x2F;06&#x2F;19&#x2F;health&#x2F;loneliness-social-... reply Evidlo 28 minutes agorootparentOf any cause? What about COVID, or leukemia? reply hutzlibu 15 hours agorootparentprevOh for sure.I guess except for rare exceptions, allmost no one really wants to be alone by default. But I know that I am rather alone, than in bad company.. and I met quite some people, who lived in misery, because they were too scared of being on their own for some time. reply dazc 1 hour agorootparentprevThose people may be perfectly happy with such an outcome though? reply tonyedgecombe 14 hours agorootparentprevI always wonder about those statistics, I could imagine an extrovert is going to have a much tougher time being alone than an introvert. To apply it across the whole population seems dubious. reply Invictus0 13 hours agorootparentFalls are a fairly common cause of death. If you are elderly and fall and no one is around to help, that is in many cases a death sentence. Consider also the parent&#x27;s comment about heart attacks, which you seem to have glossed over. Seems this factor alone can explain the data. reply irrational 11 hours agorootparentWhy would an introvert be more likely to have a heart attack from being alone? People stress me out so much. I imagine less stress would lead to fewer heart attacks. reply Invictus0 8 hours agorootparentSeriously? I&#x27;m going to copy the parent&#x27;s comment in full:> \"Loners are probably much more likely to die of say, having a heart attack and not receiving help promptly.\" On the other hand, loners won&#x27;t get a heart attack caused by other people .. replymidasuni 17 hours agorootparentprevNo we aren’t social animals, certainly not in rural areas. Give me a good book and a quiet afternoon in the shade of a tree with no neighbours any day. reply jacquesm 17 hours agorootparentYou maybe not. But having lived in very rural areas you quickly realize that your neighbors are your safety net far more than the authorities and that in a pinch you all need to be able to rely on each other. A good book isn&#x27;t going to get your car out of a ditch or help locate your kid or pet when it has gone missing. reply midasuni 17 hours agorootparentYou may be, I may be not. That doesn’t lead to any conclusion than “some people like other people”I’ve never need to rely on anyone, other than of course normal economic transactions.Why would I park my car in a ditch? reply jacquesm 17 hours agorootparent> I’ve never need to rely on anyone, other than of course normal economic transactions.That&#x27;s funny. You are relying on thousands of other people every day, all day long. you just don&#x27;t realize it. And not all of those are economic transactions there is plenty of goodwill involved. For instance, you rely on other people not to kill you when you are driving. Every time a stranger saves your bacon when you make a mistake, for instance. They don&#x27;t have to! But if that&#x27;s your worldview I don&#x27;t think I&#x27;ll be able to change it.> Why would I park my car in a ditch?I don&#x27;t think anybody who ever parked their car in a ditch asked that question prior to it happening and afterwards they probably still didn&#x27;t know. But in areas where there is snow it isn&#x27;t rare at all to have vehicles do stuff that wasn&#x27;t quite in the plan. My neighbor in Canada managed to do this with a tractor. Fortunately for him I had a bigger tractor and was able to pull his out of the ditch. And when it was my turn someone kindly brought over an excavator...Society is a fabric, and no man is an island, not even you. You may have the illusion that you are but from the cradle to the grave you are 100% dependent on other people. Unless you live in the boonies and grow your own food and hunt, but if that were the case you wouldn&#x27;t be writing here. Speaking of which: right now you rely on me to converse with you. reply midasuni 16 hours agorootparentThose are normal expectation of living in society. Talking you your neighbour is not.I’m sure it was decades ago in the curtain twitching world where people stayed living int he same street for decades, but not today in a highly movable world. Certainly not for me any my peers. any interactions I make are slot my own choosing, that I happen to live near someone is of no consequence.If I did park my car in a ditch there a plethora of recovery services that will retrieve it, whether I’m a mile from home of 200 miles from home. I have no need or desire to know anything about the recovery driver, or the pilot who flew the plane I was last on, or the guy who delivers my mail, nor the plumber who replaced my boiler last year. reply rimunroe 12 hours agorootparent> Those are normal expectation of living in society. Talking you your neighbour is not.Given how our language has a word, \"neighborly\", to describe friendly, helpful behavior, I think the burden is on you here for explaining why talking to your neighbor isn&#x27;t a thing one can normally expect. I don&#x27;t think you&#x27;ve done that yet.> I’m sure it was decades ago in the curtain twitching world where people stayed living int he same street for decades, but not today in a highly movable world. Certainly not for me any my peers.How old are you? I&#x27;m in my mid 30s and this describes none of my peers, including the younger ones in their late 20s. I can imagine younger folks wanting this. I certainly remember having friends who talked about wanting to move around to different cities&#x2F;countries all the time in college and shortly after, but their priorities shifted over time. I have friends who love to travel, but I don&#x27;t know anyone who wouldn&#x27;t love either a house or an apartment they didn&#x27;t have to worry about losing each year due to the landlord jacking up the rent or the building being sold to someone who wants to convert the building to condos.> any interactions I make are slot my own choosing, that I happen to live near someone is of no consequence.I&#x27;m not sure what this means. I can&#x27;t imagine it&#x27;s literally true as you can&#x27;t really control if someone else approaches you, unless you just flatly refuse to acknowledge their presence.> If I did park my car in a ditch there a plethora of recovery services that will retrieve it, whether I’m a mile from home of 200 miles from home.I&#x27;ve had to wait a long time on a tow truck before when the weather was pleasant. When there&#x27;s a snowstorm emergency services get slammed and delays increase. My neighbor has a truck and a snow plow, and I wouldn&#x27;t hesitate to ask him if he could help unstick my car if it sank into the mud a bit. Also, he plows my driveway when the snow is heavy. We do neighborly things for them as well, like helping out when a tree falls in their yard.I don&#x27;t have kids yet, but from our experiences helping our neighbors out and having grown up with neighbors we knew well, they&#x27;re invaluable for raising kids. \"It takes a village to raise a child\" is quite real! reply alisonatwork 10 hours agorootparentI&#x27;m not sure if age has much to do with people&#x27;s feelings on the importance of \"neighborliness\", but since you think it matters - I am in my 40s.I live happily alone. I have never owned a house and I have no desire to ever own one. I don&#x27;t greet my neighbors and never have. And yet, somehow, I am still able to function in society. In my current place, I have spoken to my neighbors once or twice, when a problem was affecting the building, or the floor, or just our section of the floor. We communicated well enough to contact the landlord and decide who would stay home when the workman came. We have collaborated to solve shared problems, as any human in society does. I don&#x27;t know their names or anything about their private lives, though. It&#x27;s not relevant. They&#x27;re not my friends, they are just part of my community.From my perspective the idea that only friends are capable of helping one another out is a really pessimistic view of the world that - when applied broadly - results in corruption and injustice. I place a greater importance on civil society then on friendship, and I am grateful to live amongst neighbors who apparently feel the same. reply rimunroe 10 hours agorootparent> I&#x27;m not sure if age has much to do with people&#x27;s feelings on the importance of \"neighborliness\", but since you think it matters - I am in my 40s.I think someone&#x27;s experience of major life events probably plays into this. I don&#x27;t think it fully determines someone&#x27;s position obviously, but I&#x27;d be pretty surprised if it didn&#x27;t correlate somewhat. There are always going to be outliers though.> I don&#x27;t greet my neighbors and never have. And yet, somehow, I am still able to function in society.I don&#x27;t doubt that&#x27;s true, and I didn&#x27;t say you couldn&#x27;t function in society either. When I lived in apartments I didn&#x27;t say hi to my neighbors much either, as in that case the landlord fulfills a lot of the same type of role, and neighbors come and go much faster.> From my perspective the idea that only friends are capable of helping one another out is a really pessimistic view of the world that - when applied broadly - results in corruption and injustice.I agree. That would indeed be a very pessimistic view of the world. For what it&#x27;s worth I don&#x27;t think I said anything of the sort. I do think people are more likely to help out people they know and like though. I don&#x27;t know if that&#x27;s good or not, but I think it&#x27;s true. Regardless, I don&#x27;t know how you&#x27;d reach out to someone you didn&#x27;t have contact info for, and knowing someone&#x27;s routine surely helps as well. reply jacquesm 15 hours agorootparentprev> Those are normal expectation of living in society. Talking you your neighbour is not.Errm.. yes, that&#x27;s perfectly normal. reply CapstanRoller 8 hours agorootparentprev> in very rural areas you quickly realize that your neighbors are your safety net far more than the authoritiesUnless you are non-white, an immigrant, LGBTQ, neurodivergent, etc... reply biogene 7 hours agorootparentIt&#x27;s a bit odd to make such a blanket statement for people living in rural areas all over the world. These are \"my peeps\" and we&#x27;re not any of those things. reply reaperducer 11 hours agorootparentprevNo we aren’t social animalsAnd yet, here you are... reply halyna_s 5 hours agorootparentprevHere&#x27;s a great book recommendation for you - \"The Little Book of Lykke: Secrets of the World&#x27;s Happiest People\" by Meik Wiking reply SirMaster 17 hours agorootparentprevAre you sure we can&#x27;t?I&#x27;m pretty sure there are people who live alone like up in the mountains or out in the wilderness alone and do just fine. reply mathstuf 16 hours agorootparentIf you lower your standards, sure. \"Just fine\" is survivable, but unless one derives enjoyment out of solitude and playing \"is it wet or is it cold\" all the time, I don&#x27;t think you&#x27;ll win many people over to such viewpoints.(I&#x27;ve done solo trips and hiked the AT; it&#x27;s a great experience, but definitely not for everyone.) reply CapstanRoller 8 hours agorootparentLiving in the wilderness doesn&#x27;t mean living in squalor. Off-grid houses can be downright luxurious compared to the typical suburban tract McMansion. reply scotty79 11 hours agorootparentprevTry living in a block of flats. The fact that even though you have hundreds of people living super close to you an yet you have benefits of complete anonimity is a pure bliss. reply pizza 17 hours agorootparentprevThe flip side of this is that -if you’re rather unlucky- being so codependent on the community can get ugly, quite fast; especially in such a remote environment. All it takes is one crazy neighbor to start turn the village against you for no particularly compelling reason. reply darth_avocado 11 hours agoparentprevIt’s funny, I’ve always known my neighbors and talk to everyone on the block, but then I realized that most of them don’t talk to each other. Strange way to live because we are increasingly living in a world where you’re going to need help sooner or later and who else can you seek help from in emergencies other than your neighbors?We had a mom who had recently moved in, screaming in hysterics on the block one day because she thought her toddler ran away when she stepped out for a moment to throw out trash. My neighbor (who also talks to everyone) and I came out, and along with the mailman and a couple of construction guys around the corner, immediately did a search on the neighborhood blocks. She eventually found him hiding in the house, and was relieved, but then just walked away without so much as a thank you to anyone. Such a strange way to live. reply dhosek 8 hours agorootparentIn the novel I’m currently reading, Popco (which I think the HN crowd would totally dig), there’s a section where there’s a seminar in network theory talking about the reason things like 6 degrees of Kevin Bacon, or any network of connected nodes, manage to have connections with so few hops is because there end up being superconnectors which are connected to a large number of other nodes. I realized I had that role in my circle of friends in my 20s after I moved away and then came back for a visit a few months later and discovered that few of them had seen each other in the intervening months. You likely play that role on your block. Remember, with great power comes great responsibility. reply danenania 7 hours agorootparentYep, in the last place I lived we had a really kind and friendly neighbor who is also a handyman of sorts and helps people on the block with whatever random small problems they have in their houses. He knows everyone and regularly introduces people to each other. I&#x27;d be standing on the sidewalk talking with him and someone else would walk by. He&#x27;d say \"oh have you met Such-and-such?\" and call the person over. He single-handedly makes that block like an order of magnitude more neighborly and sociable than it otherwise would be. reply abyssin 18 hours agoparentprevI also have an experience where the design of the neighborhood heavily affects interaction with my neighbours. I live in a street whose entrance is too narrow for cars. Except for the occasional motorcycle, the soundscape makes it possible to chat every time I exit my house and there’s no barrier between the houses affecting visibility. Hanging out in front of the house is enjoyable because the backyards are tiny. We have a great relationship with all our neighbours and they form a sort of extended family. In the beginning, one thing that surprised me was the social dynamics reminding me of school, but it still beats anonymity. There are great demonstrations of support with the elders, the parents, or the alcoholics of the street when they can’t open their door at night. We are quite different from each other but physical proximity overcomes it. reply tptacek 9 hours agoparentprevDid you go over and knock on his door and offer him a tray of brownies or a potted plant or something? I just moved, and that&#x27;s exactly what happened with us. Nonzero chance we&#x27;ll be looking after our other neighbors&#x27; amazing Bernese within the next 6 months. reply TinyRick 18 hours agoparentprevI&#x27;m one of those neighbors who doesn&#x27;t seem to exist. I don&#x27;t dislike my neighbors and would like to interact with them more often, unfortunately I don&#x27;t often have time for it. reply alexpotato 16 hours agoparentprevOne thing my wife and I noticed during COVID (I live in suburban NJ):6pm-6:30pm seems to be a prime time for people in general and families specifically to go for a walk. If you are outside with kids playing on the front lawn, this leads to a lot of organic conversation since no one is in a rush.If you happen to be preparing and eating dinner inside during this time (like we used to), you can miss out on a lot of opportunities to get to know your neighbors (assuming they are friendly). reply jacquesm 17 hours agoparentprevSpooky. If not for the garbage cans you&#x27;d wonder if he was even alive. reply teddyh 9 hours agorootparent“What’s He Building?”—reply ndesaulniers 17 hours agoparentprevI wonder if perhaps the neighbor might feel the same about you? reply bombcar 9 hours agoparentprevCongratulations. You live next to an Oompa Loompa factory. reply kilbuz 18 hours agoparentprevThe global pandemic may be affecting their behavior. reply xattt 18 hours agorootparentMy street was full of older folks that we got to know over the years. Some moved to assisted living, some are getting there, and some passed away from unexpected diagnoses.We have new Gen Z neighbours for the last two years who seem to exist in their bubble, shutting out the immediate world and interacting only with their social circle. Barely an acknowledgement even if we’re out in the yard, shovelling snow or cutting grass.I don’t expect much, but maybe small talk once every couple of months to get a sense they’re alright, and not gone off the deep end and bottling their urine in mason jars.At some point, you start to fill in the blanks by noticing little things like what’s on TV through the window (hockey 24&#x2F;7) when you drive by, who does the yard work (she does) or the decorations they put up on the outside.I am wondering if this is some generational divide at play where some slice of the population had been conditioned that the only valid interactions are those that happen online.It’s also possible that we seem intimidating or unsocial — but our interactions with other neighbours don’t seem to give this vibe. reply coldpie 17 hours agorootparent> I am wondering if this is some generational divide at play where some slice of the population had been conditioned that the only valid interactions are those that happen online.I think it&#x27;s likely some of that is at play, yeah. A less confrontational way to phrase this could be: perhaps people who were raised with the Internet feel they find sufficient socialization through talking with their friends online, and don&#x27;t go looking for it elsewhere.In any case, I wouldn&#x27;t read too much into it, or take it personally. I&#x27;m 35 and have lived in my house for 10 years and have only really met three of my neighbors beyond \"hi\". If we were neighbors, maybe you would think I think you&#x27;re intimidating or unsocial, but that&#x27;s not the case, I&#x27;m just shy and have a hard time being around new people. Talking with strangers is a major event for me, and I&#x27;m usually not up to the task without a lot of mental prep work. I wish I was more social, but well, I&#x27;ve tried, and I&#x27;m just not comfortable with it. It is what it is. reply pastaguy1 5 hours agorootparentI agree.I&#x27;m not quite so shy, but on that same side of the spectrum for sure. The deal with me these days is that I&#x27;ve got a couple kids; one thing that comes along with that is quite a bit of social interaction with people you&#x27;re not 100 percent at ease with. So, that energy - the same type id use to do some small talking with the neighbors - is almost always on E for me. reply whstl 2 hours agorootparentprevI definitely see a pattern regarding younger folks.I got some Gen-Z co-workers, and most of them immigrated here alone. A lot of them don&#x27;t interact much with other co-workers, don&#x27;t join parties, activities or happy hours, don&#x27;t speak the language of the country, and report spending all weekend alone at their single-room apartments.I also ask them to not work overtime but they just mute Slack and continue working after 6pm and lie on their monthly timesheets (yep we got those now because of this). They haven&#x27;t learned how to change git timestamps yet, though.Most will go back to their country sometime after claiming they couldn&#x27;t adapt to the \"cold culture\" here. At least that&#x27;s what happened for the last few years. reply allenu 10 hours agorootparentprevI wonder about this, and not in the sense that this person is being extra cautious still. In my case, I moved into my house a few months before the pandemic struck. When I moved in, the couple across the street came by to introduce themselves when I was moving in. We had a short friendly chat and exchanged numbers.Once the pandemic hit, everyone sort of disappeared, and I hadn&#x27;t even talked to the neighbors on one side of the house. During that period, I got more introverted and sort of started avoiding social interactions with people, and not because of a fear of catching COVID. I just became more withdrawn since I wasn&#x27;t socializing in general.Anyway, after it got safer and more people were getting out, I now felt awkward seeing the people who introduced themselves on that first day since so much time has elapsed without conversation. (That&#x27;s on me and my social anxiety, though.) I think it&#x27;ll require me getting over my introversion to chat with them now.On the other hand, I have been over to a neighbor on one side of my house a couple of times, but that was them going out of their way to include me.I think what I&#x27;m saying is the pandemic created this weird empty period where people who had just moved in to neighborhoods didn&#x27;t necessarily build connections with their neighbors and now it&#x27;ll take some effort to bridge those gaps. On top of that, I think there was some social practice that many of us were out of, which made it even more difficult to just chat up strangers, but I feel like for me this is finally starting to go away. reply W0lfEagle 17 hours agoparentprevI feel like I read this comment on another thread a while ago. Did I? reply giraffe_lady 18 hours agoparentprevDid you move into an affluent & predominantly white neighborhood? I will probably get shit for this, but this has been the norm in those from my experience.After I got into tech I lived in a couple of them for five years then just gave up and moved back to the underdeveloped part of the city I grew up in, where people are willing to acknowledge each other. reply catchnear4321 18 hours agorootparenthere’s your counter-point. now the sample size is two.lived in a diverse, affluent, tech&#x2F;corpo neighborhood, most neighbors ignored or were passive aggressive - the kind where you know you aren’t being ignored because the behavior is too egregious to not be aware of the impact. you aren’t being ignored, you aren’t worth ignoring.lived in an older, affluent neighborhood. four neighbors that would likely be described as caucasian regardless of their names or backgrounds were nothing but kind, offering to help the first time we interacted.lived in an older, rural, poor neighborhood. most folks would stop and talk if you were outside, see how stuff is going. place was shit. some of the folks were gold.the issue isn’t the skin color, the wallet fullness, the religion, or the race. you can look any which way and be an asshole on the inside. you can have a lot or a lot of nothing, and be an asshole.affluence just let’s the asshole shine through a bit more. after all, the asshole deserves a lot, and the money is proof.larger cities develop these little bubbles of halfluence - starter mcmansions for the white collar “elite,” close to their cubicle farms or at least a fat internet pipe and a starbucks within uber. the environment is shit - these aren’t actually elites - so the individuals tend to act up in their burbclaves.established vs gentrified might be a better distinction. established doesn’t always mean affluent, but it does have a different sort of wealth. reply red-iron-pine 17 hours agorootparent> established vs gentrified might be a better distinction. established doesn’t always mean affluent, but it does have a different sort of wealth.long term residents vs. new blood. different motivations and world view, and playing different games.i&#x27;m in a well off &#x27;burb next to a university, no one talks. lots of community leagues, posters about clubs, etc. but none of the neighbors interact. lots of renters, med students, et al, and they&#x27;ll be gone in 3 years.previous neighborhood was a poorer downtown apartment neighborhood owned by old italian ladies. they didn&#x27;t do management companies or automated rent transfers, they made a point to come around every month, both to collect, but also to check in. they genuinely cared about knowing people, and wanted us to talk to each other -- helped prevent things like break-ins and accidental fires, etc. reply thewildginger 17 hours agorootparentprevBeing Established not meaning specifically wealth, I like that reply giraffe_lady 17 hours agorootparentprevYes I was using those as lazy shorthands to avoid litigating the exact definitions or having to account for all of the nuance elided by them. They&#x27;re affiliations and trends, not geo-destiny. Historical immigrant enclaves specifically tend to be really interesting counterexamples, one way or another. reply rootusrootus 17 hours agorootparentprevNot the person you responded to, but I&#x27;ll bite. I live in an affluent nearly all-white suburban neighborhood. I know everyone within two houses in any direction, and a few that are even farther than that. We have one recluse and one Karen, but everyone else is super laid back. It&#x27;s delightful.I&#x27;ve lived in a range of neighborhoods over my life, and I haven&#x27;t really seen a pattern. My gut instinct is that attitude is contagious, and friendly neighborhoods have (or had) someone who spreads the love. People reflect the way they are treated. reply giraffe_lady 17 hours agorootparentNo shade but I&#x27;d like to hear from one of the non-white neighbors about how delightful it is? I do generally assume the white people living in all-white places are having a good time with it. reply rootusrootus 11 hours agorootparentI&#x27;ve never felt quite that comfortable that I&#x27;d ask. Our token black family is a pair of lawyers who seem plenty affluent and comfortable, and they certainly socialize with the rest of the neighborhood as much as anyone else. Are they consciously aware of their minority status? I imagine so. I feel the same way when I&#x27;m the only white person in a black neighborhood. It&#x27;s a pretty laid back neighborhood, and I&#x27;ve seen zero indication that anyone here is racist.But this is the PNW, and while our history is far from crystal clean, we mostly don&#x27;t have anything like the tension that is normal in areas of the country farther south. reply deodar 14 hours agorootparentprevI&#x27;m non-white. My friendliest and kindest neighbor is white, an old timer who has been in the same house for over 50 years. His wife bakes cakes for us and they share produce from their vegetable patch. The only other neighbor who talks to me regularly is also white. He is also from an \"older\" generation with grown up kids who have moved away.The rest of the neighbors are a younger and more diverse crowd who have moved here within the last decade. A few of them will wave hi occasionally. More commonly they will avoid eye contact.IMO it is a generational thing and not racial. reply anon291 5 hours agorootparentprevI&#x27;m a brown man living in an extremely wealthy, extremely white pocket of Portland Oregon (whitest city in the country) in my mixed race marriageNo one cares.Racism exists but most white social activists way overemphasize the role it plays in my life.White people, like all races, are extremely friendly. All Americans are really. reply nemo44x 17 hours agorootparentprevI&#x27;m not sure race or affluence has anything to do with it so much as how the place you&#x27;re living is designed. There needs to be a reason for people to walk - like going to some shops, the train, nice parks, etc. When you have that then people see each other often and recognize each other and say hi and stop and chat for a few minutes. And some of those relationships grow as you find out you have certain shared interests (kids, hobbies, etc) and someone gets the courage to invite the others over for a BBQ with some others and it&#x27;s nice. And it becomes contagious as people begin to blend and the next thing you know the entire block you live on, most everyone knows most everyone else.But if you live in a place where there&#x27;s nothing walkable and walking isn&#x27;t even encouraged (no sidewalks, etc) then people don&#x27;t really leave their back yards. Everyone is isolated. And to be sure this is what a good deal of people want. But if you want community and getting to know each other then you need to live in a place that encourages walking around. reply giraffe_lady 17 hours agorootparentI&#x27;m sure you&#x27;re right but I&#x27;ve never lived in a suburb. Even in the dense urban neighborhoods of my experience there is a big difference. Car ownership & use may play a role though. The wealthier neighborhoods are more walkable & bikeable and closer to transit but still have more people with cars, more space taken up by garages. reply anon291 5 hours agorootparentprevI live in a predominantly white extremely rich neighborhood in Portland. We even have a private club that costs thousands to belong to ( one of these fancy social clubs... We do not belong to it).Anyway... No this is not the norm. My neighborhood is extremely social and has constant get togethers.I agree with the comments on &#x27;half fluence&#x27;. I have some friends who&#x27;ve moved in to newer developments. Those neighborhoods are much less social. Ours is more established. reply dimva 18 hours agoparentprevWhy would you move away from such a nice situation? reply hutzlibu 17 hours agorootparent\"In our new house, there is no community gathering space and we leave in a culdesac at the end of a road. The result is we don’t get to know our neighbors. \"Some people like people .. reply dclowd9901 18 hours agoparentprevYeah I had a similar experience at my last place. I actually attribute it at least in part to what kind of weather your area has. My last house was in a very temperate place, and I and my neighbors were very often outside where spontaneous conversation could manifest.I’m currently in Phoenix, AZ, and given regular temperatures over 105* F, there just typically aren’t many people out and about, save for a few hours in the morning. And that’s usually before sun up.I have noticed a general decline in my spirits not shooting the breeze with my neighbors from time to time. reply tasty_freeze 10 hours agoprevWe got a small, older dog a couple years ago, mostly for my wife. She has health issues and can&#x27;t walk the dog, so it fell on me. At first I was kind of resentful. The dog is ponderous and doesn&#x27;t really take direction much, and I&#x27;m way too short on free time.Well, I&#x27;ve lived in the neighborhood for ten years and only when I started walking the dog did I start meeting a bunch of people in the neighborhood. I still would like an extra 30 minutes of free time a day, but my life is a lot richer socially. reply sseagull 10 hours agoparentWhen I got a dog, it also fell on me to walk her. When we had a storm a while back, I realized that I only knew the dogs’ names and where they lived.“Yeah, Fido’s house got tore up pretty bad”. Didn’t know the owner’s name :) reply conductr 10 hours agorootparentI was a dog park regular at a few parks over course of a few years, as were several others so I met and befriended a lot of people but never knew any names other than dog names. Although I recall exchanging and promptly forgetting a few peoples names reply pokeymcsnatch 7 hours agorootparentprevSimilar line of thought, I never really met any neighbors but I know all of the right places to pee around the neighborhood. reply eitally 6 hours agoparentprevThis was me with my youngest child, who had croup and I ended up walking her around the block quite frequently at night, especially in the colder months. We got to know so many people and so much about what was going on. reply DoreenMichele 9 hours agoparentprevWalking the dog is sort of the meat space version of having an article to discuss online. It facilitates having a thing to talk about, to politely bond over without being overly personal, an excuse for the interaction so you don&#x27;t sound like a creepy stalker for talking to a stranger for no reason. reply Spooky23 8 hours agoparentprevThat was COVID for me. My front porch was and still is my office, and I got to know most of my neighbors and all of the gossip. reply TimTheTinker 7 hours agoparentprevSmokers talk about having a similar social effect occur when chatting during a smoke break.It&#x27;s one of the reasons smoking is hard to quit for some, especially in highly populated areas. reply nologic01 4 hours agoprevOur buildings, cities and economic life (work) are not organized to support social cohesion and the wellbeing that flows from that condition. Actually the main motto is \"there is no such thing as society\".Digital online life has been a major opportunity to partially remedy the isolation induced by designs that maximize anything else (real estate value, GDP) than emotional balance.Somewhat predictably though, the same driving forces created the same alienating mess. People are starved for social interaction and adopted digital tools en-masse, only to be exploited and reduced to data minable products.There does not seem to be an exit from the trap we are in the short run. Material well-being has been prioritized above everything else and that is not compatible with social well-being.We are left we somewhat sad \"tips and tricks\", like greeting six neighbors. Which obviously wont hurt but are so helplessly far from achieving something tangible. reply hibikir 17 hours agoprevMost of the year, I live in a midwestern suburb: 1&#x2F;3rd of an acre lots as far as the eye can see. I go on a walk every day, but it&#x27;s rare that I ever actually see a human being during said walk: Everyone is cooped up in their houses. In practice, in most of this suburban life, every bit of human interaction is planned. We drive to commerce, and there we are met by workers with constantly changing schedules, who have minimal connection to the businesses they work in. It&#x27;s not impossible to make connections in this environment, but it takes actual effort. This makes work the main form of social interaction for many people around me.Over the summer, however, I spend time in Spain. A town with a population under 200k, and yet far more dense than San Francisco. Streets are narrower, and most errands are less than 10 minutes away, on foot. The pharmacist, the baker, the workers at the restaurant, don&#x27;t change very much. Since everyone walks, you really get to pass by every neighbor in the building every couple of weeks. The parks and playing ares with children are never close to empty, and people tend to have routines, so it&#x27;s far easier to get to know people from random interactions. It&#x27;s not uncommon to meet people you know, completely by accident, just because you walk the same streets. I might not stop at a certain coffee shop, but it has seating outside, and friends are be sitting there, and therefore I get a chance social encounter, even when I am not visiting the same business. There&#x27;s benches in random streets, and people meet there, and chat on the street, so you don&#x27;t even need a business as a \"third place\", when you have the street. Thus, getting six non-work social interactions a day becomes trivial.Large parts of America have chosen forms of development that are naturally isolating: It&#x27;s no surprise so many feel isolated! reply xcskier56 9 hours agoparentI grew up in the suburbs, and it was a noteworthy occurrence when someone saw someone they knew out and about at the store or something like that.Now I live in the city and with so many more people around I see people I know so much more often. It really makes you understand how isolating the suburbs can become. reply nemo44x 17 hours agoparentprevYes, that&#x27;s exactly right. A town needs to be designed in a way that encourages walking. Shops to walk to, trains for commuting, a certain density, etc. Walking create so many opportunities to see people regularly without planning and to become comfortable with each other and it grows from there. Multiply that by everyone else doing it and you do get a real sense of community.> Large parts of America have chosen forms of development that are naturally isolating: It&#x27;s no surprise so many feel isolated!Indeed - I have relatives that live in a place like this. Nice homes, etc but few trees, no sidewalks, and nowhere to walk. Why would you other than exercise? And a lot of people like it this way and that&#x27;s fine. They want privacy and aren&#x27;t interested in building relationships with people they live near. That&#x27;s fine.But if you want a sense of community then you need to live in a place that encourages walking by making it useful. reply foobarian 17 hours agorootparentI think it&#x27;s because immigrants who came over from Europe wanted castles, not hovels. And that&#x27;s what they got. reply nemo44x 16 hours agorootparentWell, there’s lots of land making land ownership very attainable.During the 1930s and 1940s very little was built. And what was built was seldomly maintained. So after the war there were a lot of people living in old, outdated, cramped, and expensive apartments and tenements in cities.Suddenly materials were plentiful and there was a lot of available land. The economics of it were such that you could get a car and a home outside the city for less than an apartment inside. And the living conditions were so much better. People still had their bigger families and community bond in their new neighborhoods.But over time that was lost and we were left with the isolated towns that need a car to get anywhere and there’s no community connection as the new development doubled down on bigger houses, bigger lots, more cars.I live in an old pre-war town. Most every home was built before 1930 and most around the turn of the century. Lots of walkable shops and a train runs through. There are many old towns like this and they’re wonderful. They also tend to be expensive nowadays. reply fnimick 34 minutes agorootparentAlso, suburbs were planned and most were explicitly designed to continue segregation. reply datavirtue 17 hours agorootparentprevDesigning cities for walking? Sounds like COMMUNISM! reply Cpoll 18 hours agoprev> As part of the Gallup National Health and Well-Being Index, saying hello to more than 1 neighbor was shown to correlate with greater self-perception of well-being.So this wasn&#x27;t a study. As far as I can tell, the results can just as easily be summarized as \"people who report higher well-being are more likely to greet neighbours.\"This is probably just the article to blame, the quotes they pick use words like \"correlation.\"I find the five vs. six distinction rather interesting though. What&#x27;s up with that?> Averaged across five dimensions that included career, communal, physical, financial, and social well-being, the increase which greeting a neighbor had led to around a 2-point increase on a scale of 0-100 up until the sixth neighbor, at which point further greetings had no measured impact. reply tgv 17 hours agoparent> I find the five vs. six distinction rather interesting though. What&#x27;s up with that?There&#x27;s no reasonable mechanism in which greeting people causes well-being. So asking why it caps out at 6 makes no sense, unless you implicitly want to call out their bullshit. It&#x27;s just another vague correlation in a overinterpreted study of noisy data. reply calibas 16 hours agorootparent> There&#x27;s no reasonable mechanism in which greeting people causes well-being.Socializing increases well-being, and greeting someone is socializing. reply hgsgm 18 hours agoparentprevAll finite sets of finite numbers have an average.The value of the average is the result of the biases in data collection.There is obviously a cap in the number of people you can practically greet in a day. reply netfortius 1 hour agoprevAgain a US centric article. While it would have been impossible to achieve such, consistently, in the suburbs of US, in a city like Chicago greeting neighbors became a little more feasible, but to Mr Rogers&#x27; point - probably useless beyond four or five. In French cities like Montpellier, Aix-en-Provence, Nice, Vic-sur-Cere, etc., though, it is possible to go way over the \"6 limit\", with increasing benefits. I know a lot of people on the street where I live for the moment, and some of the neighboring ones, and I greet a lot of folks while walking outside (\"walk\" = keyword). I also greet my favorite two butchers, two or three boulangers, the fromager and a lot of folks at the farmers markets and small deli stores, cofee shops, etc., on a daily basis. The more - the better it makes you feel. reply rapnie 5 hours agoprevWhile this survey is done with neighbors, I wonder how it is in general. In a number of countries complete strangers great each other. Like in The Netherlands, though the likelihood to be greeted depends on where you are, time of day, and age of the people who greet.In a big city people generally don&#x27;t greet strangers, unless they meet very early in the morning and the occurence of a chance greeting among early risers grows. When city dwellers enter the suburbs and esp. when going into nature, they start to greet. Smaller towns and villages see a lot of greeting in the circle that one can count as beyond neighbors.The younger people get the less they seem to participate in this old habit. Maybe they &#x27;learn&#x27; to greet at older age, or modern society and smartphones are killing the tradition. I sometimes wonder if in modern society we are shifting more and more to a stance of distrust of the people we don&#x27;t know, and this affects the greeting culture too.Overall this casual greeting, often accompanied with a warm smile and sometimes some small talk, feels uplifting and heartwarming. Good for wellbeing I would say.This is all anecdotal and YMMV, but I encourage to engage in the practice and reap the rewards. reply ChuckMcM 3 hours agoprevRandom anecdote, COVID re-enforced my neighborhood walking as a exercise I could do while avoiding enclosed spaces. During my walks I always greet the people I meet with a \"Good morning\", \"Good Afternoon\", Etc. I consistently got suspicion when I started doing this. People would either not respond or have some non-committal response. I would just smile and keep walking. Generally after the second, or at most third, time people would figure out that I wasn&#x27;t wanting anything, just being neighborly. They would start responding back with smiles and similar greetings. After a year of walking around saying \"Hi\" to folks people would start going out of their way to respond and would often add simple exchanges about the weather or the news. The mailman, of all people, who I would wave to and say \"Hi\" to told me one day that ever since I started walking around and greeting people the neighborhood had become \"more friendly and nice.\" I doubt it was just my doing but I do know people smile more and wave and certainly part of it is they aren&#x27;t fearing death by disease any day now, and part is that they like it.I appreciate that I know a lot more of my neighbors. reply randycupertino 3 hours agoparentBe the change. I started waving in the car any time I passed anyone on my street, just a quick \"hi\" wave over the dashboard while driving. Now all the cars on our block do it. It&#x27;s cute :) reply drmpeg 1 hour agoprevI&#x27;m pretty good pals with my immediate neighbors, right, left and across the street and we talk whenever we see each other.My favorite neighbor Lois moved away after retiring. We used to call her the \"CIA agent\" because she knew everyone and everything that was going on in the neighborhood. I would talk to her every few weeks or so and get \"debriefed\". It was awesome. reply xyzelement 9 hours agoprevThis was one of the biggest surprises for me moving to the burbs after 40 years of NYC.You get to know your neighbors and their kids, you drive more politely because the person you are going to cut off is someone you have likely met and will again. It sort of transforms you - or rather - allows the more communal version of you - to emerge.Needless to say, this version of me is more at peace and happier. reply NegativeK 7 hours agoparentInteresting; after moving to the suburbs from a large city, I feel much less likely to talk to people near me, since I get in my metal box and drive around them instead of walking past them (or riding public transit with them) and being forced to interact with them. reply xyzelement 7 hours agorootparentDifferent type of burb I guess. reply walthamstow 17 hours agoprevMy father in law lives in Yorkshire, where people regularly say hello to each other when out and about, particularly in the morning. We live in London, where this is highly unusual.When visiting he came on our usual morning walk in the park, and said hello, good morning to someone. They were completely flabbergasted and could only muster a garbled reply through the shock. reply slyall 4 hours agoparentNortherner terrifies Londoners by saying \"Hello\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=PT0ay9u1gg4 reply quickthrower2 11 hours agoparentprevA Yorkshire hello should be able to break anyone out of their shell though! reply ansbalin 17 hours agoparentprevAwh :&#x27;) reply bradley13 18 hours agoprev\"greeting neighbors is also linked to career wellbeing, physical wellbeing, and financial wellbeing\"Correlation. Happy people are happy. That&#x27;s not cynical: you can improve your happiness by working on all of those fronts. reply bradley13 18 hours agoprevJust to toss this out there: the reverse is also true. We get along well with all of our neighbors except one. We say \"hi\" and invite each other over regularly.That one bad neighbor is a real problem, and a huge source of stress and unhappiness. reply ssully 17 hours agoparentBig time. I have a neighbor about half a block from me that would harass me when I would walk my dogs by his house. Based on his behavior I assume he struggles with some mental issues.The one positive is I avoid his house completely, so now my standard dog walking route is a block longer, so more exercise for me and the dogs. reply ryandrake 9 hours agorootparentThis is a good point. There seems to be a lot of untreated mental illness nowadays. Or maybe we&#x27;re just encountering it more because everything is filmed and sites like r&#x2F;PublicFreakout exist. Or maybe the pandemic really screwed some people up. Who knows?I had an Amazon package mistakenly delivered to my house. I recognized the address of one of my (unknown) neighbors a few doors down, and I had time, so I walked it down to their door.. Maybe I&#x27;ll finally meet this unknown family. I knocked on their door, holding the package, and let me just explain something that&#x27;s important: I&#x27;m a slightly overweight nerd that spends too much time in his office chair. I&#x27;m about as threatening looking as a Best Buy worker in his khakis. Well, through the window next to the front door, I saw one of the home&#x27;s occupants (a young lady probably early 20s) just standing there looking at me through the window, apparently not knowing what to do. I knocked on the door again and gestured towards the Amazon box in my hand. Well the woman let out a shriek from the bowels of hell and damnation, like terrified. Picture Donald Sutherland in Invasion Of The Body Snatchers. I&#x27;m just standing there trying to hand a package to a neighbor and she is screaming over and over and over and looking at me like I&#x27;m a serial killer. I put the box down on the front porch and backed away. I heard the screaming long after I got down the driveway to the road.I don&#x27;t know what&#x27;s wrong with people. Maybe this person has some kind of traumatic past and can&#x27;t bear to even see other people. I don&#x27;t know. This didn&#x27;t seem like even remotely a thing 10 or 20 years ago. reply datavirtue 17 hours agorootparentprevWe have one particular neighbor who would greet everyone and chat with them. He was always out walking his little dog. Very nice. Next thing you know, someone is freaked out, posting a Ring video of him violently knocking on their front door (that was it, nothing else). It was so strange seeing this unfold on camera. Nearly everyone has talked to this guy and thought he was very nice. The people who&#x27;s door he was banging on didn&#x27;t know&#x2F;recognize him. I&#x27;m guessing he has some sort of mental health challenges--though he does own and maintain a nice home on our street. Since the incident he has not been out. I saw him in his yard and noticed he looked a bit agitated. Very sad. I think this country is in serious need of a mental health framework that can actually help people. As it stands now, if this behavior escalates at all he will be faced by the police. Zero help. reply basisword 10 hours agorootparentThose doorbells should be banned. Numerous times I’ve seen videos posted on local Facebook groups of completely innocuous situations that freaked out some paranoid curtain twitcher. Recently someone posted a video of a kid knocking her door: “Anyone know who this is? I think they’re up to something”. reply rhyme-boss 9 hours agoparentprevIn the past year three close neighbors who I was friendly with moved out and the couples that moved in have been so rude and shitty. It&#x27;s been such a massive quality of life decline, and just feels like terrible luck. reply danenania 6 hours agorootparentYeah, it&#x27;s amazing how much difference this factor can make in quality of life, yet it&#x27;s mostly left up to luck.When moving and choosing a place, you can try to get some idea of the vibe and whether it seems neighborly at all, but it&#x27;s very hard to get more than a cursory sense. I&#x27;d take a modest house surrounded by friendly&#x2F;awesome people compared to a much nicer house surrounded by rude&#x2F;stuck-up people any day. reply elwell 11 minutes agorootparentMy new neighbors have a german shepard. As I write this at 2:50am, it has been barking since around 11pm. I&#x27;ve never heard a dog bark so consistently for so long. I&#x27;m blasting rain noise on my laptop but this is driving me crazy. reply tptacek 9 hours agoprevMy app randomly greets six of your neighbors for you, every day! reply quitit 11 hours agoprevAlso related:People underestimate the positive impact of speaking with strangers.https:&#x2F;&#x2F;www.bbc.com&#x2F;news&#x2F;world-48459940 https:&#x2F;&#x2F;www.apa.org&#x2F;news&#x2F;press&#x2F;releases&#x2F;2021&#x2F;09&#x2F;deep-convers... reply brailsafe 11 hours agoprevOne of the reasons I love living where I do, is because while I don&#x27;t know any of the neighbours who live directly adjacent to me in their $2m houses, it&#x27;s a relatively dense and active neighbourhood because of all the people forced to rent rooms from them, and we all walk to get our groceries or to the bars down the street, or meet at the gym, or see each other in the park. There&#x27;s not a chance I&#x27;d move to some cul-de-sac, and it&#x27;s frustrating that the possibility of securing a longer-term stay here isn&#x27;t really possible any more.Aside from that though, in my first 12 years as an adult, I&#x27;ve learned that if you see someone you know when you&#x27;re out and about, wave to them, always, unless they&#x27;re really occupied by something else; they might be gone&#x2F;dead tomorrow, and nobody hates being acknowledged in a friendly way. reply alexb_ 17 hours agoprevI live in an apartment, and I don&#x27;t even know what the person who lives next to me looks like. Why would I ask them? People are living their own lives, why am I going to invade into someone&#x27;s life to make myself feel better reply leftnode 17 hours agoparentThis seems shortsighted. There are dozens of reasons you may want to get to know your neighbors: help each other out, become friends, watch a package, babysit, petsit, and so forth. Sure, nothing may happen from an interaction, but it seems one of the unique aspects of living in an apartment complex is that you can easily know your neighbors.I live in a large neighborhood of single-family homes and know many of my neighbors, most of which have become good, trusted friends. reply tayo42 14 hours agorootparentI&#x27;m amazed people find pleasant apartments to live in. I think I hate every one of my neighbors. From their annoying behaviors. I have one that just let&#x27;s their kids run around, blasting music at the moment and kept parking in my assigned spot. reply tamimio 11 hours agoprevNot just neighbors, I usually give a quick compliment to people while walking&#x2F;cycling around, and you can see the smiles and sparking eyes immediately after, a lot of people are lonely, such kindness costs nothing. reply Rediscover 6 hours agoprevI lived in downtown Seattle (Belltown) for a couple of decades (currently living about 10 minutes away walking time). I can not even contemplate not well-knowing less than 50 of my neighbors. Possibly < 100 neighbors.I suspect that was really great for my outlook - now I start getting slightly depressed barely knowing about 6-12 neighbors and have to walk over to Belltown to get a mental lift. reply snerc 2 hours agoprevThe difference between greeting six neighbors vs zero is only 12.6 wellness units. I&#x27;d prefer to simulate the outside world at the cost of a moderate amount of wellness. I&#x27;ll make up for the difference by eating a smoothie for breakfast 3 days out of the week for the rest of my life instead of 2 salad bowlfulls of Chocolate Frosted Sugar Bombs. reply freetime2 6 hours agoprevI recently watched a video [1] about “The Villages”, a massive retirement community in Florida with 100k+ residents. One of the things that surprised me was how friendly all the neighbors seemed in the beginning of the video. The lifestyle had a lot more appeal to me than I was expecting.[1] https:&#x2F;&#x2F;youtu.be&#x2F;BX4i8qprP2I reply dghughes 7 hours agoprevMy neighbourhood which I&#x27;ve lived in all my life has changed drastically, dramatically, creepily.The original owners were part of a sort of Habitat for Humanity type organization only it was a local thing a co-op. This was 1972 nearly ten years before early 1980s super crazy inflation so even then it was hard to afford a home.Everyone on the street knew each other even one street over either way people knew everyone&#x27;s names and children&#x27;s names. As people moved away new owners bought the homes it was OK for a while new people. But now a younger generation starkly different in attitude and behaviour.Now it&#x27;s like living in some dystopian alien hellscape. OK maybe that&#x27;s a bit too much but it&#x27;s surreal. Nobody goes outside, not even to sit on decks former owners built, vegetable garden plots and not planted, laundry is not put on lines, food is all \"Ubered\", windows are all shut (for AC?) blinds down.Grass on lawns is a foot high, plants of former owners grow wild and are unkempt. Supposedly \"no mow may\" for dandelions (local bio prof says is bunk) or to be green but I suspect it&#x27;s linked to never seeing anyone outside ever more than for environmental reasons.Every single one has a dog too which was rare years ago maybe a few people had dogs. Now maybe 1 in 10 or even 1 in 20 homes has any children human children I should clarify.Here I am outside in the vegetable garden, or on the deck in summer. Yet all homes are sealed up, no activity except for thumps of car doors as people leave or come home. The bluish glow of monitors nearly constant. Sometimes it feels like I am living in a horror movie.It&#x27;s hard to greet people as they run to and from their cars never to be seen again. reply fnimick 31 minutes agoparentMowing lawns is pretty bad for insect life though, to be fair. And even having lawns should be avoided from an environmental perspective. reply eitally 7 hours agoparentprevThis varies wildly neighborhood by neighborhood. In our first house, in suburban Raleigh, NC, we had a modest 1972 split level worth about $200k. We knew all our neighbors and it was, for lack of a better word, neighborly.In our second house, which was a huge upgrade house-wise (4500sqft on 1&#x2F;3ac in a subdivision with a big pool greenways, playground, etc), we got to know just two of our neighbors very well, and we almost never saw anyone outdoors in the 6 years we lived there. This house was only about 2 miles from the previous one, but the vibe was entirely different.In our current house, in San Jose, we&#x27;re in a neighborhood originally built in the 1950s from what was cherry orchards, and almost all of the original owners have died or moved. We&#x27;ve been here since 2016 and it feels like that year was when the current wave of \"refresh\" started. Ever since the neighborhood has gotten younger and younger, more and more kids are outside, and the majority go to the neighborhood pool & neighborhood schools. We have tons of friends and acquaintances and it&#x27;s reminiscent of my neighborhood growing up (in Virginia) in the early 80s. That said, you only have to go a few blocks to get to areas that are more like what you&#x27;ve described.The morale of this is just that it pays to spend time in, and talk with, a few possible neighbors before buying into a neighborhood. You might not like what you find. reply titanomachy 6 hours agoparentprevDon’t they at least walk their dogs? reply darepublic 17 hours agoprevI feel I have lost much of my ability to be a part of a community, due to the covid lockdown, full time work from home, and in general spending so much time on the internet. reply coldpie 17 hours agoparentThere&#x27;s plenty of jobs out there with an office available. Those of us who like going in to the office would be happy to have you :) reply firefoxd 17 hours agoprevIf you are unhappy, does starting to greet your neighbor makes your happier? Or is it the other way around, when you are happy you greet your neighbor.This sounds like a \"one little weird trick to boost your happiness: greet six neighbors.\"The important factors are the other things: having a high income, living in a good neighborhood, and and being a good community member. These increase your wellbeing, then of course you&#x27;ll say hi to everyone. reply frandroid 17 hours agoparentPeople in low-income and \"bad\" neighbourhoods actually stand to gain a lot more by knowing their neighbours because they get a lot more out of community solidarity when there&#x27;s trouble, they&#x27;ll have networks to identify trouble earlier, etc. reply jmbiven 18 hours agoprevOriginal Study (with pretty charts!): https:&#x2F;&#x2F;news.gallup.com&#x2F;poll&#x2F;509543&#x2F;saying-hello-linked-high...Interesting, \"No meaningful increase in wellbeing is seen for additional neighbors greeted beyond six.\" reply throwaway33381 18 hours agoparentIt sounds more to do with correlation vs causation people who are more likely to greet others could have a variety of different factors in their lives making them feel less isolated. One of them unironically states that it helps with the Career Wellbeing of an individual which is indicative that it doesn&#x27;t really do that. reply dang 11 hours agoparentprevOk, we&#x27;ll change the URL to that from https:&#x2F;&#x2F;www.goodnewsnetwork.org&#x2F;mister-rogers-had-a-point-ro..., which points to this and seems a little spammy.I guess we&#x27;ll keep its title though because the top comment (\"Mr. Rogers was my actual neighbor\") won&#x27;t make sense without it. reply RajT88 18 hours agoprevI can see how this increases your wellbeing.But what about your neighbor&#x27;s? Maybe so as well, unless you are that weird neighbor people talk about when they are not around.And let&#x27;s be honest. You are that weird neighbor. reply viridian 17 hours agoparentPeople don&#x27;t care about you nearly as much as you think. Everybody has their own shit going on. reply RajT88 13 hours agorootparentWhoosh reply neilv 17 hours agoprevThis and &#x2F;r&#x2F;awww and such are nice, and we need more warm-fuzzies. But I see this article citing a lot of science, and then dropping the ball on causation. reply jacquesm 17 hours agoprevI make a point of bringing a bunch of flowers to the 10 or so houses near us at the beginning of every year. It is such a small thing to do but the effects have so far been well beyond what I would expect, immediately &#x27;neighbor&#x27; becomes &#x27;person I know a little bit&#x27; and from there the network around you will strengthen. reply pinko 17 hours agoparentWe&#x27;ve started hosting monthly \"spaghetti and meatball nights\" and invite almost everyone we know, including all the neighbors. We often get 30 people, but spaghetti and meatballs scale trivially so it&#x27;s not hard to host. It&#x27;s been tremendous for building community. reply oasisaimlessly 11 hours agorootparentThere was an article about this recently: https:&#x2F;&#x2F;www.seriouseats.com&#x2F;simpler-entertaining-friday-nigh... reply jacquesm 17 hours agorootparentprevThat&#x27;s a cool idea! reply pinko 17 hours agorootparentI can&#x27;t take credit. Two dear friends in L.A. started doing it years ago, with similar results, and it sounded so great we just copied it.Except they make the meatballs from scratch, which I don&#x27;t have time for. Decent bulk frozen meatballs + excellent Victoria jarred sauce from Costco to the rescue. My Italian wife tarts up the jarred sauce a bit with fresh aromatics and chunks of canned San Marzano tomatoes, and the end result is acceptable even to her exceptionally picky palette... Add a big stack of cheap, mismatched thrift-store china plates and silverware, and dinner for 30 takes us about an hour to prep + an hour to clean up after total. reply lemper 6 hours agoprevhow disfunctional society are you living in if you need calculate the gain and loss for doing what a decent human being would do in a neighbourhood? reply ReactiveJelly 5 hours agoparentI was told to keep to mysel",
    "originSummary": [
      "Saying hello to multiple neighbors is associated with higher wellbeing in adults in the US, according to a study by Gallup.",
      "Americans' wellbeing score increases as the number of neighbors greeted increases, up to a maximum of six neighbors.",
      "Greeting neighbors is more common among older adults and those with higher incomes, and it is linked to improvements in social, community, career, physical, and financial wellbeing."
    ],
    "commentSummary": [
      "Social interaction, including greetings and interactions with neighbors, is crucial for overall well-being and community engagement.",
      "The article explores different perspectives on social anxiety and cultural differences in greetings, as well as the impact of the pandemic on social interactions.",
      "Building connections and cultivating a sense of community have numerous benefits and are influenced by both physical and social environments. intentional efforts to interact with others are essential."
    ],
    "points": 377,
    "commentCount": 261,
    "retryCount": 0,
    "time": 1692365775
  },
  {
    "id": 37176717,
    "title": "The FBI proves again it can’t be trusted with Section 702",
    "originLink": "https://www.eff.org/deeplinks/2023/07/deja-vu-fbi-proves-again-it-cant-be-trusted-section-702",
    "originBody": "Skip to main content Electronic Frontier Foundation About Issues Our Work Take Action Tools Donate SEARCH Deja Vu: The FBI Proves Again It Can’t be Trusted with Section 702 BY MATTHEW GUARIGLIA JULY 27, 2023 We all deserve privacy in our communications, and part of that is trusting that the government will only access them within the limits of the law. But at this point, it’s crystal clear that the FBI doesn’t believe that either our rights nor the limitations that Congress has placed upon the bureau matter when it comes to the vast amount of information about us collected under FISA Section 702. How many times will the FBI get caught with their hand in the cookie jar of our constitutionally protected private communications without losing these invasive and unconstitutional powers? The latest exhibit in this is in yet another newly declassified opinion of the Foreign Intelligence Surveillance Court (FISC). This opinion further reiterates what we already know, that the Federal Bureau of Investigation simply cannot be trusted with conducting foreign intelligence queries on American persons. Regardless of the rules, or consistent FISC disapprovals, the FBI continues to act in a way that shows no regard for privacy and civil liberties. According to the declassified FISC ruling, despite paper reforms which the FBI has touted that it put into place to respond to the last time it was caught violating U.S. law, the Bureau conducted four queries for the communications of a state senator and a U.S. senator. And they did so without even meeting their own already-inadequate standards for these kinds of searches. How many times will the FBI get caught with their hand in the cookie jar of our constitutionally protected private communications without losing these invasive and unconstitutional powers? Specifically, this disclosure concerns Section 702 of the 2008 Foreign Intelligence Surveillance Amendments Act, which authorizes the collection of overseas communications that can be queried by intelligence agencies in national security investigations under the oversight of the FISC. The FBI has access to the collected information, but only for limited purposes—purposes which it routinely and grossly oversteps. Apart from the FBI’s apparent failure to even abide by its own rules, the bigger problem with this arrangement—even under the law—is that we live in a globalized world where U.S. persons regularly communicate with people in other countries. This creates a massive pool of digital communications in which one side of the conversation is an American on U.S. soil. The FBI, investigating crimes in the U.S., has spent the better part of 15 years sifting through these communications without even a warrant. So the fact that they cannot even abide by their own rules, much less the ones set by Congress, is a big deal. But now we have a chance to close this unconstitutional loophole and block the FBI—or any other government agency—from searching any of our communications without a warrant. Section 702 is set to expire in December 2023. Sadly, both the FBI and Biden Administration have signaled that they are all in when it comes to trying to keep open the FBI’s warrantless backdoor searches of 702 data. They like their hands fully in the cookie jar and at this point are likely confident that, even when they get caught, the FISC won’t take any serious steps to stop them. But they won’t get that renewal without a fight. After several hearings in the House Judiciary Committee, it is clear that there is bipartisan support for the idea that Section 702 must drastically change, or else face termination (called sunsetting in DC) entirely. The Privacy and Civil Liberties Oversight Board (PCLOB), which has been unwilling to seriously take on 702 violations, even suggested before Congress that some bare minimum of changes should be made to the surveillance programs in order to protect the privacy rights of Americans. While we think it’s time for 702 to end entirely, and for any future programs to start from scratch in protecting the privacy of digital communications. EFF will continue to fight to make sure that any bill that does renew Section 702 closes the government’s warrantless access to U.S. communications, minimizes the amount of data collected, and increases transparency. Anything less than that would signal a continued indifference, or contempt, to our right to privacy. This recent disclosure proves, in a Groundhog Day-like fashion, that the FBI is not going to suddenly become good at self-control when it comes to access to our data. If the privacy of our communications—including communications with people abroad—is going to actually matter, Section 702 must be irrevocably changed or jettisoned entirely. RELATED UPDATES DEEPLINKS BLOG BY MATTHEW GUARIGLIAJULY 31, 2023 The White House Acknowledges the Pressure on Section 702, But Much More Reform is Needed After months of continued public confirmation that Americans’ privacy is being violated by surveillance under Section 702, and widespread criticism from civil society, activists, surveillance-skeptical bipartisan congressional committees, and even the overly timid Privacy and Civil Liberties Oversight Board—a group of White House-appointed experts just flinched on renewing the law... DEEPLINKS BLOG BY ANDREW CROCKERJUNE 1, 2023 The Foreign Intelligence Surveillance Court Has Made a Mockery of the Constitutional Right to Privacy The latest evidence that Section 702 of the Foreign Surveillance Intelligence Act (FISA) must be ended or drastically reformed came last month in the form of a newly unsealed order from the Foreign Intelligence Surveillance Court (FISC) detailing massive violations of Americans’ privacy by the FBI.The FISC order... DEEPLINKS BLOG BY AARON MACKEYMAY 22, 2023 Newly Public FISC Opinion is The Best Evidence For Why Congress Must End Section 702 A surveillance court order unsealed last week that details massive violations of Americans’ privacy by the FBI underscores why Congress must end or radically change the unconstitutional spying program enabled by Section 702 of the Foreign Intelligence Surveillance Act (FISA). The opinion recounts how for years the FBI... DEEPLINKS BLOG BY MATTHEW GUARIGLIA, CINDY COHN, ANDREW CROCKERMAY 19, 2023 10 Years After Snowden: Some Things Are Better, Some We’re Still Fighting For On May 20, 2013, a young government contractor with an EFF sticker on his laptop disembarked a plane in Hong Kong carrying with him evidence confirming, among other things, that the United States government had been conducting mass surveillance on a global scale. What came next were weeks of disclosures—and... DEEPLINKS BLOG BY MATTHEW GUARIGLIA, ANDREW CROCKERAPRIL 28, 2023 At Congressional Hearing, PCLOB Members Suggest Bare Minimum of 702 Reforms Last week, the House Judiciary Subcommittee on Crime and Federal Government Surveillance held a hearing on “Fixing FISA: How a Law Designed to Protect Americans Has Been Weaponized Against Them,” ahead of the December 2023 expiration of the Section 702 surveillance authority. The three witnesses, Michael E. Horowitz... DEEPLINKS BLOG BY MATTHEW GUARIGLIA, ANDREW CROCKERAPRIL 25, 2023 Internal Documents Show How Little the FBI Did to Correct Misuse of Section 702 Databases The Federal Bureau of Investigation (FBI) has released internal documents used to guide agency personnel on how to search the massive databases of information collected under the Foreign Intelligence Surveillance Act, including communications collected without a warrant under Section 702. Despite reassurances from the intelligence community about its “... DEEPLINKS BLOG BY CINDY COHN, MATTHEW GUARIGLIAMARCH 13, 2023 Even Rep. LaHood Likely Can't Sue the NSA or FBI to Protect His Rights In a stunning revelation, a sitting U.S. Congressman has publicly identified himself as the subject of likely illegal surveillance by the NSA and FBI. During a hearing on the question of renewal the controversial mass NSA spying authorities known as FISA Amendments Act section 702, Rep. Darin LaHood of... DEEPLINKS BLOG BY ANDREW CROCKERMARCH 10, 2023 Appeals Court Upholds Restriction on Twitter’s First Amendment Right to Publish National Security Transparency Report A ruling from the Ninth Circuit Court of Appeals earlier this week marks a new low in judicial deference to classification and national security, even against the nearly inviolable First Amendment right to be free of prior restraints against speech. In Twitter v. Garland, the court ruled that it... DEEPLINKS BLOG BY MATTHEW GUARIGLIAMARCH 7, 2023 Section 702’s Unconstitutional Domestic Spying Program Must End A few months ahead of its expiration this fall, the Biden administration has announced its intention to seek renewal of Section 702 of the Foreign Intelligence Surveillance Act (FISA)—an invasive and unconstitutional law that cannot continue to exist in its current form. On its face, Section 702 allows the... DEEPLINKS BLOG BY JOSH RICHMANMARCH 7, 2023 Podcast Episode: Making the Invisible Visible What would the internet look like if it weren't the greatest technology of mass surveillance in the history of mankind? Trevor Paglen wonders about this, and he makes art from it. You can also find this episode on the Internet Archive.To Paglen, art... Discover more. Email updates on news, actions, events in your area, and more. Anti-spam question: Enter the three-letter abbreviation for Electronic Frontier Foundation: Share on Twitter Share on Facebook Copy link RELATED ISSUES NSA SPYINGDECODING 702: WHAT IS SECTION 702? FOLLOW EFF: twitter facebook instagram youtube flicker rss linkedin Check out our 4-star rating on Charity Navigator. CONTACT General Legal Security Membership Press ABOUT Calendar Volunteer Victories History Internships Jobs Staff Diversity & Inclusion ISSUES Free Speech Privacy Creativity & Innovation Transparency International Security UPDATES Blog Press Releases Events Legal Cases Whitepapers EFFector Newsletter PRESS Press Contact DONATE Join or Renew Membership Online One-Time Donation Online Giving Societies Shop Other Ways to Give COPYRIGHT (CC BY) TRADEMARK PRIVACY POLICY THANKS",
    "commentLink": "https://news.ycombinator.com/item?id=37176717",
    "commentBody": "The FBI proves again it can’t be trusted with Section 702Hacker NewspastloginThe FBI proves again it can’t be trusted with Section 702 (eff.org) 329 points by freedomben 18 hours ago| hidepastfavorite124 comments ucarion 17 hours ago> According to the declassified FISC ruling, despite paper reforms which the FBI has touted that it put into place to respond to the last time it was caught violating U.S. law, the Bureau conducted four queries for the communications of a state senator and a U.S. senator.Ironically, it seems that a significant chunk of the progress FBI has made in terms of 702 compliance comes from a pretty trivial \"paper reform\": changing the default in their search portal to have 702 be defaulted to \"off\".> In June 2021, the FBI changed the default settings in the systems where it stores unminimized Section 702 information so that FBI personnel with access to unminimized FISA Section 702 information need to affirmatively “opt-in” to querying such information. This system change was designed to address the large number of inadvertent queries of unminimized Section 702 information DOJ had identified in its reviews, in which FBI personnel did not realize their queries would run against such collection. Historically, users were automatically opted-in to querying unminimized Section 702 information in these databases if they had been authorized to access unminimized Section 702 information.https:&#x2F;&#x2F;www.justice.gov&#x2F;d9&#x2F;pages&#x2F;attachments&#x2F;2023&#x2F;03&#x2F;03&#x2F;rece...Josh Geltzer (a deputy DHS advisor) said on Lawfare that this probably alone dramatically reduces the number of noncompliant FBI 702 searches:https:&#x2F;&#x2F;www.lawfaremedia.org&#x2F;article&#x2F;the-lawfare-podcast-jos... reply ned_at_codomain 11 hours agoparentgood point reply freedomben 17 hours agoprev> This recent disclosure proves, in a Groundhog Day-like fashion, that the FBI is not going to suddenly become good at self-control when it comes to access to our data. If the privacy of our communications—including communications with people abroad—is going to actually matter, Section 702 must be irrevocably changed or jettisoned entirely.Section 702 looks to be expiring at the end of this year, although the Biden admin has expressed intention to renew it[1][2].[1]: https:&#x2F;&#x2F;www.eff.org&#x2F;deeplinks&#x2F;2023&#x2F;03&#x2F;section-702s-unconstit...[2]: https:&#x2F;&#x2F;www.npr.org&#x2F;2023&#x2F;03&#x2F;23&#x2F;1164724089&#x2F;in-fight-over-key-... reply fallingknife 17 hours agoparent> Biden admin has expressed intention to renew itIt will be renewed.\"You take on the intelligence community, they have six ways from Sunday at getting back at you\"- Chuck Schumer reply newZWhoDis 16 hours agorootparentI just wish we had an IC that loved America more than its own power.Yet time and time again we see these orgs are full of corrupt, evil people. reply gottorf 12 hours agorootparentThis is why America was conceived to be a country where the central government can only exercise enumerated powers; because the framers knew that every organization eventually becomes run (at one point or all subsequent points) by corrupt, evil people.Any system of governance that depends on an unbroken chain of good people is bound to fail, and fail much sooner rather than later. The only sustainable safeguard against it is to make sure that said system of governance is limited in what it can do. reply dragonwriter 11 hours agorootparent> This is why America was conceived to be a country where the central government can only exercise enumerated powers; because the framers knew that every organization eventually becomes run (at one point or all subsequent points) by corrupt, evil people.This is false.America was reconceived as a country where the federal government had enumerated powers because it started as one where the federal government had no powers and could only act by ad hoc unanimity of the constituent states, and that failed hard, and the particular idea of, and particular set of, enumerated powers chosen was a compromise among the Framers who were called to fix the failing system, and whose preferences ranged from a much more powerful central government (the Hamilton and, less extremely, Pinkney plans) to a vastly less powerful one (the New Jersey plan), and did not represent a shared common vision, contrary to the later-constructed mythology.Taking this mythological common vision, and then constructiong a rationalization for it, and then presenting it as the original plan of government for America falsely projects into a hotly debated contentious compromise created to deal with particular exigencies arising under the earlier plan into a kind of perfect divine revelation of government, which it very much was not and was not viewed as by participants in the process. reply largbae 9 hours agorootparentGreat stuff... Now knowing what you do, could you speculate how would the current powers of the intelligence committee be viewed by the participants in that process? reply dragonwriter 8 hours agorootparentI think the general opinion would be, to borrow from King Louis’ Head (by way of Alexander Hamilton, as imagined by Lin-Manuel Miranda): “Do what you want, I’m super dead”.Though, among those regarded as Founding Fathers, that might be most particularly the view of Thomas Jefferson, who wrote: “On similar ground it may be proved that no society can make a perpetual constitution, or even a perpetual law. The earth belongs always to the living generation. They may manage it then, and what proceeds from it, as they please, during their usufruct. They are masters too of their own persons, and consequently may govern them as they please. But persons and property make the sum of the objects of government. The constitution and the laws of their predecessors extinguished them, in their natural course, with those whose will gave them being. This could preserve that being till it ceased to be itself, and no longer. Every constitution, then, and every law, naturally expires at the end of 19 years. If it be enforced longer, it is an act of force and not of right.” (Letter to James Madison, Paris, Sep. 6, 1789) reply pyuser583 5 hours agorootparentAre suggesting we abolish the Constitution and create a new one? reply dragonwriter 4 hours agorootparent> Are suggesting we abolish the Constitution and create a new one?No, that was Thomas Jefferson saying that.I’m saying asking “what would the founders think?” is asking an irrelevant question, as well as an unanswerable one. reply tcmart14 5 hours agorootparentprevDragonwriter has a great response. My short and sweet answer is, the constitution is a living document for a reason and people ~250 years ago couldn&#x27;t possibly plan for a world where cell phones exists (or think about the intricacies of that world). That doesn&#x27;t mean all their work goes out the window, but it means their work does not hold the answer to everything. Trying to define the constitutionality of regulating telecom with words written that couldn&#x27;t conceive of that world, probably has a few flaws. reply vkou 11 hours agorootparentprev> This is why America was conceived to be a country where the central government can only exercise enumerated powers;> because the framers knew that every organization eventually becomes run (at one point or all subsequent points) by corrupt, evil people.That doesn&#x27;t logically follow, given that the state governments can exercise more than just enumerated powers. And at the moment, quite a few of them are really, really fucking evil, with a few more being highly corrupt.It makes a lot more sense when you view that separation of power as a compromise made to deal with the problem [2] as opposed to some weird conflict between .The question of &#x27;who gets residual powers&#x27; isn&#x27;t some 250 IQ bit of brilliant statesmanship and foresight, it&#x27;s a just a decision that quite honestly, has gone either way in plenty of different countries, and none of them are in any quantifiable way worse off for it.[1] Your words, not mine. I think it&#x27;s a pretty childish moniker devoid of all nuance, but when in Rome...[2] Which is actually the lens through which the founders viewed things. [3][3] And they have been proven so, so wrong by history. As it turns out, in a high-speed communication society, party unity tends to override these kind of extra-organizational struggles. It&#x27;s why the party of states rights complaints incessantly about federal tyranny, but only when it doesn&#x27;t control the presidency. reply 4RealFreedom 8 hours agorootparentThe federal government&#x27;s powers are enumerated while everything else is left to the states. You may not like that the OP presented the federal government as corrupt but that doesn&#x27;t negate the point. There is no accountability at the federal level. The federal government has turned into a mess of alphabet agencies whose sole purpose is to grow. They are not elected but write the laws. Congress has abducted their responsibility. There is recourse at the state level. reply vkou 7 hours agorootparent> Congress has abducted their responsibilityBecause it&#x27;s happy with that state of affairs, and you keep voting them in.> There is recourse at the state level.No, there isn&#x27;t. Not at the state level, nor at a more local level. We&#x27;re at a point where even municipalities aren&#x27;t able to rein in their police departments! reply 4RealFreedom 5 hours agorootparent> you keep voting them inI do not keep voting these people in.> municipalities aren&#x27;t able to rein in their police departmentsWhere are you seeing this? Seems like there&#x27;s been fairly significant changes and individual officers are being held accountable. I&#x27;m genuinely curious if you have examples.I believe you can more easily push change at the local level. Our federal government is a monstrous, unstoppable force. reply kevin_thibedeau 7 hours agorootparentprev> Because it&#x27;s happy with that state of affairsAll it will take is an embarrassing data breach like Bork&#x27;s video rental records and they&#x27;ll pass legislation to cover their asses. reply vkou 4 hours agorootparentThey won&#x27;t care. They&#x27;ll spin it as fake news, a political attack against them. I believe the phrase of the day is &#x27;Election Interference&#x27;.The thing with being shameless is that scandal rolls off you like water off a duck&#x27;s back. replynickff 16 hours agorootparentprev>\"I just wish we had an IC that loved America more than its own power.\"They probably think that they do love their country more than their power, while believing they need the power to protect their country. This may be a sort of &#x27;moral corruption&#x27;, though not the conventional sort. It doesn&#x27;t seem &#x27;evil&#x27; to me. reply paulddraper 14 hours agorootparent\"Of all tyrannies, a tyranny sincerely exercised for the good of its victims may be the most oppressive. It would be better to live under robber barons than under omnipotent moral busybodies. The robber baron&#x27;s cruelty may sometimes sleep, his cupidity may at some point be satiated; but those who torment us for our own good will torment us without end for they do so with the approval of their own conscience.\"- C.S. Lewis reply Terr_ 13 hours agorootparent> The keys of the castle and keep glinted from the belt at his stout waist. [...] Keys to lock out all danger... and, if necessary, Ista in.> It’s only habit, you know. I’m not mad anymore, really.> It wasn’t as though she wanted her mother’s keys, nor her mother’s life that went with them. She scarcely knew what she wanted. She knew what she feared—to be locked up in some dark, narrow place by people who loved her. An enemy might drop his guard, weary of his task, turn his back; love would never falter. Her fingers rubbed restlessly on the stone.-- Paladin of Souls by Lois McMaster Bujold reply freedomben 15 hours agorootparentprevExactly. IC people are humans too, just like the rest of us. It&#x27;s convenient to assume they are sinister evil bastards (some of them are to be clear, but clearly not all of them), but it&#x27;s an unhelpful and counterproductive stereotype.I&#x27;ve known a few people involved in intelligence, and they absolutely believe they were serving and loving their country. It reminds me a bit of being an infrastructure person where when you mess up, everybody knows, but when you&#x27;re doing your job well, nobody knows you exist. They see a constant and non-stop stream of threats that outsiders don&#x27;t see, and when a threat is stopped nobody knows about it. I would bet it&#x27;s not too hard to justify the intrusive capabilities and any \"mistakes\" made with them when you have that visibility into the successes. Humans are wonderful at justifying what they want to believe is true, and intel is no exception.The individual intel person is not the problem here. It&#x27;s a systemic problem enabled by legislation that needs to be addressed at the legislative level. reply landemva 11 hours agorootparentWhile they are humans, the gatekeeping in the system ensures only sinister humans will get those jobs.CIA director admitted to interferring in elections. https:&#x2F;&#x2F;thehill.com&#x2F;blogs&#x2F;blog-briefing-room&#x2F;news&#x2F;374372-ex-... reply matheusmoreira 6 hours agorootparentCIA officials told my country&#x27;s ex-president to stop doubting the voting machines. That&#x27;s what ultimately convinced me they must have been compromised. reply opportune 11 hours agorootparentprevI agree. I think it’s just laziness or being asked to square a circle. During the post-9&#x2F;11 period there was immense political will and pressure to stop terrorism, and it’s really fucking hard to stop that while abiding by the constitution, so they chose to break the constitution to stop terrorism.Is it theoretically possible to stop terrorism&#x2F;catch and guys to the same extent without breaking the constitution? I think so, but it would probably require a lot more boots on the ground, and a lot of creativity and smart thinking from individuals to be able to get as good outcomes as you’d get from just looking at data when you aren’t supposed to. reply tacocataco 5 hours agorootparentWasn&#x27;t Osama bin Laden a CIA operative that worked against the soviets? Maybe the correct move would be to not train and arm extreamists? reply loki49152 4 hours agorootparentNo. According to the Mujahadeen who did work with CIA, ObL was considered an \"extremist\" even among them because he expected to go to war against the US immediately after they were done with the Soviets. According to them, he didn&#x27;t want anything to do with CIA. reply atlantic 11 hours agorootparentprevBoth the Soviet apparatchiks running the gulags sincerely believed they were acting for the greater good. The same goes for the torturers at Guantanamo. Idealism doesn&#x27;t preclude evil. reply dragonwriter 11 hours agorootparent> Idealism doesn&#x27;t preclude evil.Unchallenged idealism is the root of many evils. If you are convinced of your own righteousness, its very easy to “ends justify the means” almost anything. Its the danger of even a well-motivated person ending up with a cultivation or otherwise in an ideological echo chamber. reply ecommerceguy 15 hours agorootparentprevHow do you know that they love this country? Pure conjecture. Evidence, however, indicates the contrary; they break the laws to suppress people for power. That&#x27;s pretty much the definition of evil. reply freedomben 15 hours agorootparentIt&#x27;s also pure conjecture to say that they break the laws to suppress people for power.Have you ever seen how the bottom-level of people in a huge bureaucratic organization behave? They&#x27;re not evil, they&#x27;re just being human. Unless you&#x27;re prepared to say that at least 65% to 95% of humans are evil[1].[1]: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Milgram_experiment reply ecommerceguy 13 hours agorootparentThere&#x27;s plenty of evidence that shows how deeply currupted the 3 letter agencies are in this country. The FBI, a Hoover organization, appears to me to be an organization that exists solely to persecute, blackmail and bait populists and small government types, aka the very people bureaucrats hate.I&#x27;m not sure what kind of freedom you advocate for Ben, it certainly doesn&#x27;t seem to jive with the notion of We the People. reply prmoustache 11 hours agorootparent> There&#x27;s plenty of evidence that shows how deeply currupted the 3 letter agencies are in this country.So is the large majority of the population. reply fallingknife 13 hours agorootparentprevIt&#x27;s conjecture, but the fact that a powerful senator like Chuck Schumer fears going against them is enough to convince me that they need to be severely reigned in. reply freedomben 9 hours agorootparentAbsolutely, I fully agree. Regardless of whether they are \"evil\" or not, they need to be reigned in. reply 4RealFreedom 7 hours agorootparentprevHe doesn&#x27;t fear going against them - he&#x27;s one of them. replybradley13 16 hours agorootparentprevPournelle&#x27;s Iron Law reply freedomben 15 hours agorootparent> Pournelle&#x27;s Iron Law of Bureaucracy states that in any bureaucratic organization there will be two kinds of people\":> First, there will be those who are devoted to the goals of the organization. Examples are dedicated classroom teachers in an educational bureaucracy, many of the engineers and launch technicians and scientists at NASA, even some agricultural scientists and advisors in the former Soviet Union collective farming administration.> Secondly, there will be those dedicated to the organization itself. Examples are many of the administrators in the education system, many professors of education, many teachers union officials, much of the NASA headquarters staff, etc.> The Iron Law states that in every case the second group will gain and keep control of the organization. It will write the rules, and control promotions within the organization.[1]Definitely. I think this very well explains how we got to this position.[1]: https:&#x2F;&#x2F;www.jerrypournelle.com&#x2F;reports&#x2F;jerryp&#x2F;iron.html reply lost_tourist 11 hours agorootparentprevI think that&#x27;s why there is so many checks and balances betweent the different branches of government. The FF knew that politicians (humans?) are bound to be corrupt and try to centralize ever more power (and money) to themselves. reply dredmorbius 16 hours agorootparentprevQuote context:New Senate Minority Leader Charles Schumer (D-N.Y.) said Tuesday that President-elect Donald Trump is “being really dumb” by taking on the intelligence community and its assessments on Russia’s cyber activities.“Let me tell you, you take on the intelligence community, they have six ways from Sunday at getting back at you,” Schumer told MSNBC’s Rachel Maddow. reply fallingknife 16 hours agorootparentNot sure what this context adds, but ok. reply dredmorbius 14 hours agorootparentWhat the context adds is that the quote comes from a political attack against the intelligence services, rather than attempts to legislate restrictions (the context in which the quote was submitted in this thread), requirements, regulations, of regulatory actions through the executive, or court decisions through the judiciary. Of which there is ample history of each. reply bhk 14 hours agorootparentOh, so disagreeing with their conclusions might trigger vengeful retaliation, but actually threatening their power will not? reply dredmorbius 12 hours agorootparentIn CommentsBe kind. Don&#x27;t be snarky. Converse curiously; don&#x27;t cross-examine. Edit out swipes.Comments should get more thoughtful and substantive, not less, as a topic gets more divisive.When disagreeing, please reply to the argument instead of calling names. \"That is idiotic; 1 + 1 is 2, not 3\" can be shortened to \"1 + 1 is 2, not 3.\"Please don&#x27;t fulminate. Please don&#x27;t sneer, including at the rest of the community.Please respond to the strongest plausible interpretation of what someone says, not a weaker one that&#x27;s easier to criticize. Assume good faith.I was curious about the quote: was it in fact legitimate, and when and in what context did it originate. And shared what I found.Otherwise my comment stands for itself.But thanks. replybastardoperator 16 hours agoprevI&#x27;m reading the FISA disclosure and seeing: The Court concludes that the targeting, minimization, and querying procedures, as written, meet statutory requirements. In Part V, the Court finds those procedures, as written, to be consistent with Fourth Amendment requirements. Particular attention is paid to FBI querying practices, which have been of substantial concern in prior reviews under Section 702(j). 1 The Court finds that the agencies&#x27; likely implementation of their procedures is consistent with applicable statutory and Fourth Amendment requirementsI&#x27;m not lawyer, but this doesn&#x27;t sound like the headline. reply Zircom 15 hours agoparentWhat you&#x27;ve quoted is just saying they have found that the policies and procedures the FBI has on the books that it&#x27;s agents are supposed to be following meet the requirements that have bee imposed on them. The problem is that FBI employees aren&#x27;t adhering to those policies and procedures, and so far there has been little to no consequences is my understanding. reply voxic11 14 hours agoparentprevas written they meet the constitutional requirements. But what procedures are written down doesn&#x27;t matter if the FBI simply ignores them. reply celtoid 17 hours agoprevI don&#x27;t know why people are surprised by this. The FBI are a pack of small fry when it comes to spying on Americans. The NSA has all the three letter entities beat and has been doing it for decades.\"At home, however, the favored weapon employed is ignorance rather than fear. Like NSA headquarters itself, the United States is surrounded by barriers -- barriers of ignorance that keep its citizens prisoners of the cold war. The first obstacle is formed by the myths propagated about communism and about its aggressive designs on America. The second, and dependent for its rationale on the first, is the incredible barrier of governmental secrecy that keeps most of the questionable U.S. aggressive activities hidden nor from our \"enemies,\" who are the knowledgeable victims, but from the American people themselves. The final barrier is perhaps the highest and is barbed with the sharpest obstacles of all. It is nothing less than our reluctance as Americans to confront what we are doing to the peoples of the world, ourselves included, by organizations like the National Security Agency.\" [0][0] U.S. Electronic Espionage: A Memoir, Ramparts, Vol. 11, No. 2, August, 1972, pp. 35-50 https:&#x2F;&#x2F;cryptome.org&#x2F;jya&#x2F;nsa-elint.htm reply anonymousiam 16 hours agoparentNSA is just a service organization to the CIA. The CIA budget is orders of magnitude larger. reply celtoid 16 hours agorootparentWe don&#x27;t know what the NSA&#x27;s actual budget is. reply anonymousiam 9 hours agorootparentWho is \"We\"? reply r3trohack3r 9 hours agoprevIf you had shown me this article in the 90s, it wouldn’t have made a lick of sense.The FBI is collecting, aggregating, and indexing massive amounts of U.S. citizen’s communication data without a warrant? And the question at hand is whether they followed proper procedures in accessing that data?Yes, they searched the database. But I’d ask how you got the data into the database originally without conducting a search?It’s like if you told me you’d record everything I say just in case it’s a crime, but promise not to listen to it unless you think I committed a crime. Or, if once a day, you came into my home and inventoried everything promising only to make use of that dataset if you have reason to believe it’s relevant to a crime. And then the topic at hand was whether you incorrectly accessed that dataset?It feels like we’ve slid right to the bottom of a slippery slope argument about privacy in the 90s. And one of the senators we were worried about back then [1] is now president, and is probably going to keep the program running. How did we get here?[1] https:&#x2F;&#x2F;www.eff.org&#x2F;pages&#x2F;decrypting-puzzle-palace reply pixl97 9 hours agoparent>How did we get here?9-11Between that and &#x27;think of the children&#x27; we&#x27;ve given authoritarians all the tools they need to destroy us. reply teddyh 8 hours agorootparentThe Four Horsemen of the Infocalypse¹ have come. And Hell followed them.1.reply pyuser583 5 hours agoparentprevThe answer is that they are spying on other countries. That usually hasn’t required warrants.Even domestically, there was a tradition of gathering large databases to be queried when the need arose.Read “Main Justice” by James Mcgee. Published in 1997, it describes anti-terrorism techniques that are pretty familiar. reply nyokodo 8 hours agoparentprev> How did we get here?Fear, an otherwise slothful and infantilized electorate, concentrated interests, and diffuse costs. reply bradley13 16 hours agoprevJail time. Violating the law should result in criminal prosecution.Back in the dark ages, I did a small amount of consulting work for the feds (not the FBI, but a similar agency). Total disregard for rules of evidence, or for legal processes. Shocking arrogance, including flashing badges at women in bars, to - I suppose - impress them.I never sought to work with them again... reply jstarfish 13 hours agoparent> Total disregard for rules of evidence, or for legal processes. Shocking arrogance> Jail time. Violating the law should result in criminal prosecution.Addressing the failures of one corrupt institution by having them reviewed by...another one? The DoJ&#x27;s track record is even more hilarious than the FBI&#x27;s.Nobody&#x27;s ever been wrongfully convicted, and those that might have been were immediately released and made whole once exonerating DNA evidence surfaced. Especially if the convicted has run out of appeals-- the DoJ is all about adherence to rules of evidence and legal process. &#x2F;s reply lost_tourist 11 hours agoparentprevThat will never happen. It exists in the same spectrum of \"cover your ass\" as qualified immunity. Only the absolute most egregious activities will ever be prosecuted. reply vuln 16 hours agoparentprevJust a bunch of unelected egotistical assholes with no regard for anything but themselves and their next promotion. Laws and Rights be damned. reply adrr 13 hours agoparentprevWhat laws did they violate? And if they violated laws or the constitution, wouldn&#x27;t people get out of criminal prosecution. Here&#x27;s an example of US citizen who got their emails sweeped up by the PRISM because he was emailing addresses that were being 702ed. Court system found this was lawful.https:&#x2F;&#x2F;www.washingtonpost.com&#x2F;national-security&#x2F;in-a-first-... reply Amezarak 12 hours agorootparent\"conspiracy against rights\" is a recently popular charge that would seem to apply reply adrr 12 hours agorootparentJudges ruled the government was lawful. That was an appeals court. Constitutionality is determined by the courts. reply thfuran 17 hours agoprevnext [7 more] >Regardless of the rules, or consistent FISC disapprovals, the FBI continues to act in a way that shows no regard for privacy and civil libertiesThe FBI cannot act. Only it&#x27;s members can act. And there&#x27;s no reason to suppose that their malfeasance will stop if it isn&#x27;t punished. reply readthenotes1 17 hours agoparentThey, not it. reply freedomben 17 hours agorootparentI think \"it\" in GP was referring to the malfeasance, not the person&#x2F;people. reply readthenotes1 17 hours agorootparentWell, it is not the action that needs to be punished but instead the actors.It is kind of interesting to trouble that a pronoun can bring, isn&#x27;t it? reply stronglikedan 16 hours agorootparentIn the English language, it&#x27;s understood that punishing a behavior is the same thing as punishing the actors, since behaviors cannot directly be punished. So when OP said, \"malfeasance will stop if it isn&#x27;t punished\", it&#x27;s a common and correct usage. It&#x27;s all about the context. reply dghf 13 hours agorootparentprevThis is perfectly standard English usage. You can punish (inflict a penalty on) a person, and you can punish (inflict a penalty for) a behaviour.\"To reward\" is similar. reply mjan22640 16 hours agorootparentprevis this an https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Anacoluthon ? replylost_tourist 11 hours agoprev702 needs to sunset so we can get back a little bit more of our freedom they took away after 9&#x2F;11 reply ubermonkey 15 hours agoprevI mean, the FBI are cops.We have seen overwhelming evidence in the US for years that our police forces are not worthy of broad trust, and that they need aggressive oversight and much clearer and surer accountability.This is just one more example. reply lost_tourist 10 hours agoparentSure, but can you provide us with your solution? reply simple-thoughts 10 hours agorootparentMake officers personally liable for civil and criminal penalties when they break laws or violate rights, even if acting on orders or in accordance with their departmental policies. Simple fix. reply Melting_Harps 4 hours agorootparent> Simple fix.Haha! If only that were true, it took the riots during COVID (often regarded as BLM but was at it&#x27;s core were really about rampant Police abused and corruption as seen erupt in France) and an immense amount of backlash on Gov. Poli-- he seriously risked not being re-elected--and having it&#x27;s major cities (Denver, Boulder) be lit on fire like lots of the US before that happened [0].As a person who wished that would have been retroactively applied to my own encounter with police misconduct, I can assure you it is far from simple and took a lot of effort that was paid in blood; but so far it is the only State in the US that has removed protected immunity and made police personally liable for any crimes&#x2F;injries they commit while on duty. This is the only deterrent that works, I would go so far as to say that if they refuse to terminate them (as it&#x27;s common to just remove them from their precinct to another) that after so many complaints their pension should be reduced for every infraction.My experience is that Police and Sheriff&#x27;s office are still as arrogant as ever but are notably more tame towards civilians than they were before COVID in my interactions with them since, they are not only being constantly recorded which can and will be used against them in court but they were humbled by being restrained and forced to utilize deescalation and communication after a long history of Police abuse being the default mode of operation in what is mainly a predominately White and Hispanic population.This is a very controversial point to remark here for some reason, but it must be noted as the criminal justice system was not swayed by Black Lives at tall because they comprise a small number of the population (who are disproportional profiled for sure) but rather push back from the abuse that even white women were subject to while being illegally arrested and then repeatedly tased whil ebeing forced and restrained to a chair (viewer warning: its pretty grim) and somehow still had to go to the Supreme Court for it to be properly judicated (settlement reached for the plaintiff with some token reform that just added another footnote to a long list of police misconduct in CO) because Colorado Law exempted police from obvious wrong doing [1]. And I know from personal experience that at least 2 of those officers present in that footage were still kept on the force.The US is in major needs of a re-vamp to it&#x27;s criminal justice system and how police should operate (starting by de-militarizing them) and we in Colorado led the way in that regard but it&#x27;s still not enough, and most importantly is far from a &#x27;simple fix&#x27; given the entrenched relationship between Police and politics as well as the strong might of the Police Lobby&#x2F;Unions that protect &#x27;their own&#x27; at all costs in what is still a rather rural and mainly conservative State.0: https:&#x2F;&#x2F;www.reuters.com&#x2F;article&#x2F;us-minneapolis-police-colora...1: https:&#x2F;&#x2F;www.9news.com&#x2F;article&#x2F;news&#x2F;local&#x2F;boulder-county-sett... reply EGreg 16 hours agoprevI see this as part of a global war by governments on crypto and end-to-end encryptionhttps:&#x2F;&#x2F;community.qbix.com&#x2F;t&#x2F;the-coming-war-on-end-to-end-en... reply zlg_codes 14 hours agoparentThey are scared shitless about what will happen if we get popular and durable communication networks that they can&#x27;t reverse engineer or strongarm the data out of.They are scared shitless that their currency will lose value and they lose favor on the world stage.It would be easy to keep this position by just being a good country that respects the human lives of its citizens. But for some, with lacking morality, that&#x27;s a bridge too far.E2EE will never be totally broken. They&#x27;ll attack it at weak points where data is unencrypted. You can&#x27;t beat math, boys! reply imiric 3 hours agorootparent> E2EE will never be totally broken. They&#x27;ll attack it at weak points where data is unencrypted. You can&#x27;t beat math, boys!No, but they can introduce backdoors to cryptographic algorithms that are difficult to detect.[1][1]: https:&#x2F;&#x2F;www.atlasobscura.com&#x2F;articles&#x2F;a-brief-history-of-the... reply cies 17 hours agoprevnext [18 more] [flagged] ritwikgupta 17 hours agoprevBetter oversight for FISA Part 702 is needed, not the removal of the authority entirely. FISA 702 is key in the ability of the FBI to collect intelligence on those who seek to harm the United States. reply wnoise 17 hours agoparent> FISA 702 is key in the ability of the FBI to collect intelligence on those who seek to harm the United States.[citation needed] reply ritwikgupta 14 hours agorootparentI am a Ph.D. student at UC Berkeley in AI and currently serve as an external advisor to the FBI on AI and AI Policy. I&#x27;ve worked very closely with the teams that utilize FISA Part 702 and have seen the types of issues they are actively preventing with the use of the authority. reply simple-thoughts 10 hours agorootparentThe idea that people who are close to power are “in on the secret” and thus are more correct that people who aren’t doesn’t stand up to scrutiny. It’s a religious idea that extends back to the earliest gnostic cults.I’m sure it feels good to you to feel close to power, but those feelings are because you feel powerful by association. It does not mean what you are doing is right or just. reply ritwikgupta 5 hours agorootparentThere’s no feeling of power here. I took on this role because the FBI needs people to help them answer these hard questions, and your traditional Silicon Valley crypto bros won’t help.I was raised in this country post-9&#x2F;11 and was taught to fear the FBI. I grew up strongly critical of our surveillance state and the overreach of power that was reported upon. The FBI hosting a deeply critical voice inside to help provide insight to their processes seems like a pretty just thing to me.If you have better ideas, then I invite you to help change the institution. Come “be in on the secret” (a security clearance to guard national intelligence?) and do the right thing. reply simple-thoughts 3 hours agorootparentThanks for the invitation to join your club, I appreciate it.I’m quite familiar with security clearances from close contacts. It’s also inevitable to run into controlled information in the types of work people like me do.The real secret is that there is no secret worth keeping. Secrets are a way to cover for incompetence - it’s the same mindset as “security by obscurity.” Even the most secret information regarding nuclear weapons has mostly been leaked. The main thing that prevents nuclear proliferation isn’t secrets; it’s international pressure plus tight controls and monitoring of materials.The only way to fix the FBI is to dissolve the institution- and even that would be an extraordinary challenge because the criminal networks the agency possesses would still operate, just as the networks built by secret police in other countries persisted post dissolution. reply livueta 11 hours agorootparentprevFrankly, I don&#x27;t believe you at all because this pattern has happened before: insiders claim that surveillance is responsible for preventing tons of harm, but when those claims are closely examined (even by other aspects of government) a whole lot of nothing is found.https:&#x2F;&#x2F;www.propublica.org&#x2F;article&#x2F;whats-the-evidence-mass-s...> In 2013, the President’s Review Group on Intelligence and Communications Technologies analyzed terrorism cases from 2001 on, and determined that the NSA’s bulk collection of phone records “was not essential to preventing attacks.”> The NSA has publicly discussed four cases, and just one in which surveillance made a significant difference. That case involved a San Diego taxi driver named Basaaly Moalin, who sent $8,500 to the Somali terrorist group al-Shabab. But even the details of that case are murky. From the Washington Post:> In 2009, an FBI field intelligence group assessed that Moalin’s support for al-Shabab was not ideological. Rather, according to an FBI document provided to his defense team, Moalin probably sent money to an al-Shabab leader out of “tribal affiliation” and to “promote his own status” with tribal elders.It&#x27;s been long enough that if this shit actually worked, there&#x27;d be plenty of success stories that could be disclosed without harming confidential interests. They&#x27;d be trumpeting them to the heavens to attempt to justify reauthorization. Instead, we get taxi driver man and a whole lot of \"just trust us\".I do acknowledge that ProPublica article is dated, but AFAIK no counterexamples have emerged since - which is kind of the whole problem. reply ritwikgupta 5 hours agorootparentThis is survivorship bias. No counterexamples emerge because successful and working capabilities can’t and won’t be shared? Not until declassification of those sources kicks in.The government should not give up powerful intelligence tactics, techniques, and procedures solely because the general public has a want to know. We have elected representatives with clearances for those purposes. reply wnoise 13 hours agorootparentprev\"Just trust me bro\" is not a convincing argument. What are those issues, and why is 702 needed, rather than other approaches? reply bavell 14 hours agorootparentprevDo you think they&#x27;re showing you the full picture? reply ritwikgupta 13 hours agorootparentAbsolutely. I was given full access to all of their SLs, EADs, and staff members. I was able to brief Director Wray on my findings and continue to engage with their leadership on strategies for the betterment of the Bureau’s stance on key issues. reply stjohnswarts 10 hours agorootparentprevI don&#x27;t think your credentials mean much here, we all know the basics of the Constitution. We all can read the news and see how 702 was abused over and over. Time to snuff it out and start with a blank slate. We have a method of getting surgical strike warrants for only those communication that are necessary to spy on. It&#x27;s time for the dragnet methods to die off. Freedom comes at a cost and that cost is not making the lives of the CIA and other TLAs any easier to spy on us. reply Zigurd 14 hours agorootparentprevWho was convicted because FISA 702 was \"key?\" How was that evidence used? reply ritwikgupta 13 hours agorootparentFISA 702 is not a criminal authority. It’s used in cases of foreign surveillance, cyber attacks, terrorism, and espionage. “Convictions” and “evidence” are not the right words, “intelligence” is. reply Zigurd 12 hours agorootparentThe FBI is a law enforcement agency. Cyber attacks are crimes. Terrorism is a crime. Spying is a crime. Where are the indictments and convictions that depend on FISA 702? reply dragonwriter 12 hours agorootparent> The FBI is a law enforcement agency. Cyber attacks are crimes. Terrorism is a crime. Spying is a crime. Where are the indictments and convictions that depend on FISA 702?The FBI is principally a national security and counterintelligence agency and secondarily a law enforcement agency.702 is expressly for the counterintelligence and national security function, limited to foreign targets (non-US persons believed to be outside of the US), and if used properly will only incidentally and occasionally result in information related to persons practically able to be subjected to US law enforcement jurisdiction, whether or not they might in theory be committing US crimes.Lots of indictments or other criminal process tied to 702 surveillance would actually be a sign of something unusual happening (of which “abuse of 702 for purposes at odds with its express terms” would be high on the list.) reply ritwikgupta 11 hours agorootparentprevNo, this is a misconception. The FBI is not just a law enforcement agency. It is also an intelligence agency. reply Quillbert182 11 hours agorootparentIt shouldn&#x27;t be. reply dragonwriter 10 hours agorootparentThe reason to have a counterintelligence agency (which is the role the FBI has in the intelligence community) also be a law enforcement agency is somewhat obvious; domestic law enforcement, at least in that domain, is essential to counterintelligence. (I suppose there is an argument that the counterintelligence agency shouldn&#x27;t be a broad spectrum law enforcement agency, but I actually think the dangers of an isolated, insular, counterintelligence agency and the kind of culture it would naturally breed would be a bigger problem. reply jstarfish 11 hours agorootparentprevCareful, that logic cuts both ways-- you&#x27;re inadvertently arguing that 702 isn&#x27;t really doing much of anything. So there&#x27;s no harm in continuing it, right?It&#x27;s about Intelligence, not Evidence. Intelligence (like anonymous tips) is what you use to find the Evidence, which is what you reference in the affidavit. Much Intelligence is speculative and&#x2F;or bullshit and wastes everybody&#x27;s time. Publishing Intelligence tips off associates of the adversary and betrays what you know and what your capabilities are, and possibly who you learned it from. reply hypothesis 9 hours agorootparent> you&#x27;re inadvertently arguing that 702 isn&#x27;t really doing much of anything. So there&#x27;s no harm in continuing it, right?One would assume that a useless programs should be discontinued, simply because it’s not free to continue them. replycoolhand2120 16 hours agoparentprevYou are part of the problem if you truly believe that. reply freedomben 16 hours agoparentprevHow would you propose to achieve better oversight? reply ritwikgupta 14 hours agorootparentThe FBI needs to do a better job of communicating to the public the existing oversight mechanisms it has, as well as reporting in aggregate types of issues it has prevented through the use of the authority. Additionally, more frequent (quarterly) testimonies to Congress (closed and open sessions) would be extremely beneficial. reply simple-thoughts 10 hours agorootparentIf the FBI actually operated in the open and stopped keeping secrets, the mystery would be removed and they would no longer have any power. Once the mystique is broken, the mundane reality of the FBIs daily ineffectiveness would be revealed. Power requires secrets. What you are suggesting would destroy the FBI. reply dannyobrien 13 hours agorootparentprevWhy do you think this has not happened yet? Who do you think is in the best position to require this, and why have they not done so? reply drewcoo 13 hours agorootparentprevSo everything&#x27;s great, but the FBI should tell us how great it is more often?Somehow, that doesn&#x27;t sit well with me. reply lost_tourist 10 hours agoparentprevNah, it&#x27;s time for it to die bruh. They have shown they will abuse it, so it&#x27;s time to let it sunset like it was meant to. It was meant as an emergency order for 9&#x2F;11, time to let it join the dodo and passenger pigeon. reply busterarm 17 hours agoprev [–] Glad to see the EFF back on mission instead of dumb shit like spreading FUD to help keep their lawyer friends in the Library of Congress unaccountable to the rest of government. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The FBI has been found accessing private communications of a state senator and a U.S. senator without following proper rules and limitations.",
      "The Foreign Intelligence Surveillance Court (FISC) revealed this information in a declassified opinion, emphasizing the FBI's disregard for privacy and civil liberties.",
      "There is bipartisan support for significant changes or termination of Section 702, which authorizes the collection of overseas communications. The Electronic Frontier Foundation (EFF) is advocating for the closure of warrantless access to U.S. communications and increased transparency in any renewal of Section 702."
    ],
    "commentSummary": [
      "The conversation raises concerns about unauthorized searches by the FBI and corruption within the federal government.",
      "It also highlights abuse of power by intelligence agencies and violations of privacy rights.",
      "The discussion emphasizes the need for law enforcement accountability, reform, stronger oversight, and safeguards to protect civil liberties."
    ],
    "points": 329,
    "commentCount": 124,
    "retryCount": 0,
    "time": 1692371252
  },
  {
    "id": 37176666,
    "title": "Windows 11 will happily execute a binary compiled 30 years ago",
    "originLink": "https://twitter.com/mikko/status/1692503249595584526",
    "originBody": "Microsoft&#39;s backwards compatibility is insane. Windows 11 will happily execute a binary compiled **30 years ago** (18 Aug 93). pic.twitter.com/iD2aA7Asqc— @mikko (@mikko) August 18, 2023",
    "commentLink": "https://news.ycombinator.com/item?id=37176666",
    "commentBody": "Windows 11 will happily execute a binary compiled 30 years agoHacker NewspastloginWindows 11 will happily execute a binary compiled 30 years ago (twitter.com/mikko) 284 points by mikkohypponen 18 hours ago| hidepastfavorite353 comments knallfrosch 18 hours agoSee alsohttps:&#x2F;&#x2F;www.joelonsoftware.com&#x2F;2004&#x2F;06&#x2F;13&#x2F;how-microsoft-lost...one of the developers of the hit game SimCity, who told me that there was a critical bug in his application: it used memory right after freeing it, a major no-no that happened to work OK on DOS but would not work under Windows where memory that is freed is likely to be snatched up by another running application right away. The testers on the Windows team were going through various popular applications, testing them to make sure they worked OK, but SimCity kept crashing. They reported this to the Windows developers, who disassembled SimCity, stepped through it in a debugger, found the bug, and added special code that checked if SimCity was running, and if it did, ran the memory allocator in a special mode in which you could still use memory after freeing it. reply Racing0461 8 hours agoparentThis is actually what most gpu driver updates are. Instead of devs fixing their games, nvidia calcilated its in their best interest to just fix the game bugs at the gpu driver level and push updates. reply chii 3 hours agorootparent> fix the game bugs at the gpu driver level and push updatesit&#x27;s because the nvidia drivers are opaque blobs, rather than a source distribution.If nvidia distributed their drivers as open source, i would imagine developers would likely \"fix\" their games properly because they&#x27;d be able to see what is going on underneath the hood, and write more optimal code.of course, this removes some \"competitive advantage\" nvidia has over their AMD counterpart. reply hoten 6 hours agorootparentprevIs this done by intercepting the API calls made to the GPU, or by directly modifying the game binary instructions? reply magnat 5 hours agorootparentModifying binaries (on disk or in RAM) would be detected by anti cheat mechanisms. Most likely they change how to interpret a certain sequence of API calls or replace shaders with their optimized versions. reply zten 4 hours agorootparentprevSee the infamous story about Quack 3 on ATI Radeon cards. reply deaddodo 3 hours agorootparentHere&#x27;s the link, for those interested:https:&#x2F;&#x2F;techreport.com&#x2F;review&#x2F;how-atis-drivers-optimize-quak...Personally, I don&#x27;t believe this is a good example; as this was ATI purposefully crippling the experience (downscaling textures, being the prime aspect) to cheat benchmarks. OP is more referring to \"transparent\" optimizations (the same experience, but made to run faster for the GPUs architecture, usually via operation reordering or shader modifications). reply failuser 17 hours agoparentprevCounter-example: Soldier of Fortune is broken on modern windows because of a misapplied compatibility hack. Rename the binary and it works with no problems.This is an awful way to implement backwards compatibility. Opaque and ad-hoc. They have been using similar toolset to break competitors applications.The choice of what old version of windows to run the program on is typically to try them one by one.Linux is no better with no stable ABI. Mac is a mixed bag of excellent Rosetta and breaking apps for no reason. Who did it better? FreeBSD? Some extinct “grown-up” OS like VMS? reply Tijdreiziger 16 hours agorootparent> Mac is a mixed bag of excellent Rosetta and breaking apps for no reason.They will probably retire Rosetta2 in a few years, like they did with Rosetta.Apple usually seems to care about getting the bulk of applications to transition over, and the rest is just collateral damage&#x2F;the devs should’ve just updated their software. reply duskwuff 16 hours agorootparent> They will probably retire Rosetta2 in a few years, like they did with Rosetta.Counterpoint: The PPC-to-Intel version of Rosetta was licensed technology (QuickTransit); Apple was undoubtedly paying for it, possibly even per user, so there were financial reasons for them to get users off of it ASAP.Rosetta 2 was developed in-house by Apple, so there isn&#x27;t the same hard timeline to get users to stop using it. I wouldn&#x27;t expect it to survive long beyond support for running the OS on x86, though. reply BirAdam 11 hours agorootparentIt could last longer if gaming with their game porting toolkit gets big enough to drive more Mac sales. Money talks. reply kalleboo 3 hours agorootparentprev> I wouldn&#x27;t expect it to survive long beyond support for running the OS on x86Even if the support for running x86 Mac GUI apps along with x86 macOS, they might still keep the technology around for docker, linux VMs, etc. reply Tijdreiziger 15 hours agorootparentprevYes, just like they had valid technical reasons to kill 32-bit iOS apps. The point is that they don’t go above and beyond like Microsoft (although of course even MS has deprecated e.g. 16-bit apps). reply tinus_hn 11 hours agorootparentOn the bright side, the end result is that on Mac there are only apps that have been updated this decade. reply Dah00n 5 hours agorootparentIs the lack of an app a good thing? reply tinus_hn 3 hours agorootparentIt can be because it’s an incentive to create a new, up-to-date app. reply Tijdreiziger 2 hours agorootparentNot if the developer isn’t around anymore. replyfailuser 16 hours agorootparentprevDefinitely. All Intel Mac apps will be abandoned. Even tiny apps like Spectacle will cause pain. reply Cthulhu_ 11 hours agorootparentI&#x27;ve found Rectangle to be a good substitute &#x2F; in-place replacement. reply failuser 11 hours agorootparentThanks, it actually makes sense to switch. And Spectacle is even open source, so the amount of pain is minimal. reply howinteresting 8 hours agorootparentprevAnd this is why Apple will never be a serious gaming platform for non-exploitative&#x2F;GaaS games. Personally I think it&#x27;s good that I can run games that were last updated in the early 2010s on my computer. reply rbanffy 12 hours agorootparentprev> Linux is no better with no stable ABI.I’m confused. Linus has repeatedly stated that the ABI should be stable, “we don&#x27;t break user space”. There are exceptions, but any proposal that makes a breaking change to the kernel’s external symbols is very hard to push through.I don’t remember anything breaking because of a new kernel version except device drivers, which are part of the kernel anyway and should be compiled for a specific kernel version. They are not applications, so they shouldn’t rely on assumptions about the ABI.Most Linux distros offer mechanisms to compile a version-dependent interface to isolate a version-independent driver or program that messes too closely with the kernel.> Some extinct “grown-up” OS like VMS?I’d say the age of binary compatibility ended with most of those “grown-up” OSs becoming legacy. I usually test (compile and test) my C code on multiple platforms, ranging from Windows to Solaris on SPARC (emulated these days, sadly). I haven’t yet figured out a cost-effective way to test it under IBM z&#x2F;OS’s USS (which makes z&#x2F;OS a certified UNIX). reply aleph_minus_one 11 hours agorootparent> Linus has repeatedly stated that the ABI should be stable, “we don&#x27;t break user space”.Linus said that the userspace API to the kernel should be stable, which it mostly is. But a GNU&#x2F;Linux system contains a lot more APIs (in userspace). reply psychphysic 10 hours agorootparentprevDrivers being kernel specific is really annoying reply IronWolve 8 hours agorootparentMajor problem with android, stuck with whatever version of android due to binary blob drivers. reply pjmlp 2 hours agorootparentThe major problem is Google not enforcing updates via their contracts.Project Treble has made Android a pseudo microkernel with stable ABI for drivers.However Google has decided it is still up to OEMs to decide if driver are to be shipped or not.With no legal enforcement for accessing Google services, OEMs rather sell updated hardware. reply babypuncher 8 hours agorootparentprevThe kernel userspace APIs are pretty stable, the APIs provided by the rest of what constitutes a complete Linux \"operating system\" are not. I&#x27;ve ended up using a lot of hacks and tricks to get some early Linux games running on modern systems. Some applications designed for X still have broken features in Wayland, and likely won&#x27;t be fixed without new versions of said apps because making Wayland compatible would break the entire security model.It&#x27;s generally not a huge issue in Linux, because most of the software you use day to day is open source and probably maintained. The real problem children, across all operating systems, is proprietary video games. They&#x27;re closed source, unmaintained, and their cultural value makes them highly desired targets for ongoing compatibility and preservation. reply desi_ninja 4 hours agorootparentprevNever expected someone would bring up the SOF issue on kodern windows. PCgamingwiki FTW. reply belltaco 16 hours agorootparentprev> They have been using similar toolset to break competitors applicationsSource(s) ? reply failuser 16 hours agorootparentThis, for example. And they got caught. How many times they did not?https:&#x2F;&#x2F;www.theregister.com&#x2F;1999&#x2F;11&#x2F;05&#x2F;how_ms_played_the_inc... reply lsaferite 12 hours agorootparentYour evidence is an article from 24 years ago about behavior that happened 32 year ago? And it&#x27;s not even about them breaking competitors applications, it&#x27;s about them refusing to run on a competing OS (in a bit of a sleezy way).Do you have more evidence of your claimed behavior?I dislike MSFT, a lot, but that&#x27;s a _very_ big claim and needs to be backed up with evidence. reply failuser 11 hours agorootparentMy claim is that Microsoft operating system was silently detecting competitors software and changing behavior to break compatibility. That is proven. The war on WordPerfect was equally shady.Did Microsoft clean its act at some point and stopped doing so? They force Edge at every opportunity, so even the behavior that almost got them forcefully partitioned is back.I don’t think we have caught them outright sabotaging e.g. Chrome aside from the default browser shenanigans, but who would bother to check unless it’s a repeatable crash? Aside from Chrome what app do they even have a need to sabotage? Steam? reply belltaco 9 hours agorootparent> My claim is that Microsoft operating system was silently detecting competitors software and changing behavior to break compatibility. That is provenThat&#x27;s a false claim. That code was in a beta and never shipped. You&#x27;re just spreading FUD. reply xen0 36 minutes agorootparentThe code was shipped, just disabled. reply TylerE 11 hours agorootparentprevPlus, let&#x27;s be real, the Register is basically the tech equivalent of the Daily Mail. Often amusing, occasionally occurate. reply failuser 11 hours agorootparentSure, but the DR DOS case is well known. Is ZDnet better? It also lists other cases related to efforts to destroy Novell.https:&#x2F;&#x2F;www.zdnet.com&#x2F;article&#x2F;caldera-unlocks-microsoft-evid... replylamontcg 12 hours agoparentprevFrom where I&#x27;m sitting this looks like an excellent argument for breaking backwards compatibility. All those bullshit hacks are a maintenance and debugging burden for someone and a tax on the whole rest of the operating system -- and I&#x27;d argue that it really shows. reply PaulHoule 12 hours agorootparentThe thing about Microsoft is that they developed a framework for doing that kind of thing in a systematic way so it is not so hackish as it sounds.That&#x27;s an innocent example but do recall that circa 1995-2005 or so, Microsoft looked like a dangerous monopolist and could have been in legal jeopardy if a product that competes with office (say WordPerfect) quit working when they went from Win 95 to Win 98 or Win 2k to Win XP.I&#x27;d also add that more than once I&#x27;ve had web pages and applications I&#x27;ve made been used as test cases by Microsoft and been contacted by people from Microsoft about compatibility issues. (... and I&#x27;ve never been an advocate of Microsoft browsers, often I&#x27;ve been quite the opposite.) I haven&#x27;t heard once from Netscape, Mozilla, Apple, Opera or Google about something like this. reply amno 7 hours agorootparentYes, people used undocumented functions, which were left undocumented as they were a subject to change, and accused Microsoft of not understanding software development or thought that those undocumented APIs were somehow better than the recommended documented ones. When stuff crushed after Microsoft changed an API people would be accusing them for deliberately breaking their applications and what not. I remember the hostility in those years 95-2005 towards Microsoft. There is still some cult in some Internet communities where trashing anything developed by Microsoft is seen as some kind of expertise or something by usually self-proclaimed experts. reply michaelmrose 6 hours agorootparentPerhaps the negativity stems from the all the illegal, immoral, and damaging acts in this era.Not least of which is pouring millions into a baseless pump and dump scheme laying hallucinated charges of infringement against the entire Linux ecosystem but there are plenty of other issues.In short people hated them for being shitty people who do shitty things and present leadership were important folks when these shitty things were done everyone just moved up a few rings.They aren&#x27;t better people they just have better aligned incentives where illegality and immorality aren&#x27;t profitable. reply amno 5 hours agorootparent> Perhaps the negativity stems from the all the illegal, immoral, and damaging acts in this era.Perhaps, but hate against Microsoft was not the point of the discussion. You are free to see them in whichever light you want, I just don&#x27;t understand why you have to down-vote me or bring that into completely different discussion.The question here was about the technical issues and their work on making software tick despite people abusing the API and producing buggy software. That has nothing to do with hate against Microsoft. To me that sounds like a whataboutism.By the way, I personally don&#x27;t even use Windows, I have been 100% Linux user since many years and have contributed to a GNU project, I am not some Microsoft fanboy as you might see me. But I see no value in defending a wrong, and I see the same behavior repeated in other communities. People abuse the API or don&#x27;t read the documentation or just are plain idiots, and than accuse the developers for being malicious or stupid or whatever when things break. That behavior is bad for anyone, regardless if it is against Microsoft or some GNU project.> In short people hated them for being shitty people who do shitty things and present leadership were important folks when these shitty things were done everyone just moved up a few rings.I am sure people have many reasons they hate something or someone for, Microsoft included. There are people who passionately hate GNU, Linux, FSF, you name it. If you justify such behavior, it is your choice, but I am not interested in that discussion. I was talking about people abusing API and than blaming Microsoft for incompetence or deliberate evil, while the company obviously went to quite long efforts to make things work, even for buggy software. Microsoft may as well be evil or good for other reasons, but wasn&#x27;t really the point of discussion.> They aren&#x27;t better people they just have better aligned incentives where illegality and immorality aren&#x27;t profitable.This is outright dangerous behavior on your part. You are transferring a behavior you have projected on a company over the entire group of people, all the thousands of people who work for Microsoft. To start with, they are all individuals, and as in every group there are good and bad characters among them. Also, history is against you, Microsoft was, and still is very profitable company. In the time we speak about, they were probably too profitable for its own best. For the second there are law and law enforcement officials to decide if they did illegal business or not.Not to mention, that probably most of those who worked there back in 90&#x27;s are probably retired or have changed the job by now. Also, to note, with thinking and statements like that one, you are denying people chance to develop as individuals and become better persons. reply michaelmrose 3 hours agorootparentI didn&#x27;t down vote you because down vote to disagree doesn&#x27;t lead to optimum discussions a thought process I note with amusement that you don&#x27;t share this idea.> You are transferring a behavior you have projected on a company over the entire group of peopleI specifically indicted the top leadership who were as now in a position of authority when immoral actions were taken and continued to work for the same org. This is a pretty clear and defensible position whereas you said.> That has nothing to do with hate against Microsoft. To me that sounds like a whataboutism.and also> I remember the hostility in those years 95-2005 towards Microsoft. There is still some cult in some Internet communities where trashing anything developed by Microsoft is seen as some kind of expertise or something by usually self-proclaimed experts.You compared people with a legitimate ax to grid to cultists and denigrated them to \"self proclaimed experts\" You are again the party committing the sin you project.> There are people who passionately hate GNU, Linux,These things aren&#x27;t of neutral value. There are people who hate purple and Hitler but nobody thinks these things are the same.> For the second there are law and law enforcement officials to decide if they did illegal business or not.They actually were repeatedly found to have engaged in illegal behavior in a court of law and furthermore beyond multiple losses in a court of law ample information is available. Nobody with a brain thinks OJ was innocent or feels bound to disregard for instance the book where he describes the crime called \"If I did it\".> Also, history is against you, Microsoft was, and still is very profitable company.How is history against me? IBM literally helped the Nazis categorize their population so they could exterminate millions of people and the people who helped make those decisions didn&#x27;t cease to exist in 1945 on indeed in 1955 and they were and are worth of critique even if it would be nonsensical now to impose that judgement on people who born decades after the war. We can both remember AND be reasonable.History by definition is the things that happened. The fact that it tends to forgot the bad things done by people who later did well for themselves isn&#x27;t \"history\" its a collective dementia a mental defect which keeps us making the same mistakes. An actual appreciation for history would suggest a commitment to objective memory not white washing.> I have been 100% Linux user since many years and have contributed to a GNU projectThis is the software equivalent of conspicuously announcing that you have a black friend. You needn&#x27;t as nobody is suggesting you have insufficient credibility. What&#x27;s happened is you wrote some fairly inflammatory next to something mundane that is reasonably considered and most people have ignored the mundane thing because you set your apple pie adjacent to a flaming bag of poo and when everyone mentioned the shit you have followed with a bunch of bad explanations for the poo and ill considered arguments so we are still talking about the smell of shit instead of eating pie together. replyfnordpiglet 9 hours agorootparentprevThe issue is at that time updates for most shrink wrapped software were almost non existent and distribution even worse. Windows had an update facility and I bet you sim city for dos did not. So, either windows yielded and patched it’s behavior to run sim city or sim city users couldn’t run it under windows full stop until maxis distributed a new distribution on media.In todays world it looks like a ludicrous solution to the problem. The game vendor needs to HTFU and distribute a patch via steam or whatever and that’s a totally reasonable stance for microsoft or apple to take, because the infrastructure for patch distribution is pervasive and robust now. reply dotnet00 7 hours agorootparentAnd it&#x27;s worth emphasizing that Microsoft was&#x2F;is incentivized to do this because especially with popular software, such bugs have a chance of resulting in users blaming Windows even if in reality it&#x27;s the gamedev&#x27;s fault.Similarly to how GPU vendors are incentivized to patch their drivers to fix bugs in a popular game release because the bugs might be blamed on the vendor instead of the dev. reply pseudosavant 6 hours agorootparentI don&#x27;t have the reference for it here, but in the first year Windows Vista was out >50% of crashes were due to buggy nVidia drivers. Microsoft assumed (incorrectly) that their ecosystem would get their shit together automatically. That nVidia would make solid drivers for the new Windows WDDM driver model.The year before Windows 7 came out I was working at a company (DivX ;-) making Windows software. We were getting contacted by different testing groups at Microsoft constantly. Some weeks three different people might contact me. Somehow they found my phone number? It didn&#x27;t seem very efficient, but it was clear that they were allocating huge resources to this.They found unbelievably nuanced bugs (their QA was better than ours...). They wanted to know when we were going to have a fix by. They wanted to make sure they didn&#x27;t have a Vista repeat. Vista SP1 was actually quite stable, but it was too late for the Vista brand already.With Windows 7 it seemed clear that the thing they cared about was: the software their users actually use still works after the update. Right or wrong, it was very user centric, because what user likes for their software to break? Nobody cares why. reply lamontcg 6 hours agorootparentMicrosoft got to burn those kinds of resources on the compatibility problem due to having had a near-monopoly on the desktop back in those days.That isn&#x27;t going to be repeatable for pretty much any other software company other than a FAANG, and certainly not of open source projects, not even Linux. People don&#x27;t pay enough to open source for that kind of support. reply edg5000 6 hours agorootparentprevAmazing story, thanks for sharing. It explains some of the sustained success of Windows perhaps. reply mcny 5 hours agorootparentSpeaking of windows Vista, a tale of two friends kts call them ben and randy.Ben has a Compaq laptop that is Vista capable. It takes upwards of three minutes, I kid you not, of blank screen to get a UAC prompt for elevated access request. And those were very common with Vista.Randy has a nice (and expensive) desktop and thinks windows Vista is just fine and all computers should upgrade to it (college computers still has Windows XP and there was no plan to upgrade existing computers to visits that I knew of).They both have wildly different opinions of Windows Vista.https:&#x2F;&#x2F;arstechnica.com&#x2F;gadgets&#x2F;2008&#x2F;03&#x2F;the-vista-capable-de... reply ukuina 9 hours agorootparentprevPeople forget how every software developer had to spin up their own patch delivery infrastructure. reply fnordpiglet 8 hours agorootparentBack in the day it wasn’t even reasonably possible. You got a floppy&#x2F;CD from the store and that was the end of the story. I mean, this is “Netscape just came out” times. reply xoxxala 6 hours agorootparentIn the early 90s, we had a disk replacement policy and would mail people updated floppies on request (and a $10 S&H fee). Few people took advantage of it.We then started hosting some patches on Compuserve, GEnie and Prodigy. reply bluefirebrand 8 hours agorootparentprevYep. At best you had an updated version on the next run, but even that was unlikely. reply brewtide 7 hours agorootparentMy AOL updates in the mailbox always lagged behind, week after week... reply danbruc 8 hours agorootparentprevIf the company even existed when a Windows update caused an issue. And given the number of Windows installations, even the most obscure software or setup is likely to affect a lot of people. reply itsmartapuntocm 10 hours agorootparentprevRaymond Chen made a great point in his book “The Old New Thing”. If a hacky program suddenly doesn’t work when you upgrade to a new version of Windows, the user isn’t going to blame the program. They’re going to blame the OS because that’s what changed. reply xen0 25 minutes agorootparentprevWhen your favourite program stops working after an OS update, who do you blame? If you really want that program to run, what do you do?There are business reasons to maintain backwards compatibility, and they were very strong before the easily updated software. reply jdjehxhdb 10 hours agorootparentprevAnd that’s why you stand where you are and Microsoft stand where it does.You’re thinking like an engineer. Microsoft is a business. Backwards compatible is its major core competency. reply sys_64738 8 hours agorootparentAnd why you don’t allow developers to make business decisions. reply behnamoh 8 hours agorootparentThe huge backlash against Reddit&#x27;s policy change is a good example of that. Sure, devs and programmers were upset, but after a week or two, all went back to normal as if nothing happened. Reddit continued to work, and its alternatives didn&#x27;t gain much traction.I have an engineering background and then pivoted into managements science, and the difference in perspectives in the two fields is really obvious. reply LexiMax 4 hours agorootparentLet&#x27;s not give Reddit&#x27;s management too much credit. They&#x27;ve lit a decade&#x27;s worth of investor and advertiser money on fire and have precious little to show for it. Their recent moves seem less like calculated business decisions and more like desperate scrambles to make the site appealing to public investors on very short notice. reply cratermoon 7 hours agorootparentprevAnd yet Apple has famously broken compatibility on a regular basis. Remember when Apple went from Motorola 68000 to Intel x86? They did it by providing direct support to key companies to port their software, and providing Rosetta for applications that could take the performance hit. reply sowbug 6 hours agorootparentEither extreme works. There&#x27;s a sour spot (opposite of sweet spot?) in between, where the platform breaks compatibility, but not so predictably that customers remember how to reach their suppliers, and suppliers remember how to update their products. reply cratermoon 4 hours agorootparentYes, as long as the business communicates and executes well and makes the value proposition of the choice clear to their customers, either works. Being backwards-compatible to the beginning of time is not the only choice. My experience in the industry, however, is that most organizations cling to never breaking compatibility, under the flawed belief that it&#x27;s always simpler or cheaper than planned migrations. reply runjake 6 hours agorootparentprevI think you mean “PowerPC to Intel”. 68K was before PPC. reply cratermoon 4 hours agorootparentYou&#x27;re right! It&#x27;s been a long time. There was a 68K to PowerPC, then later Power to Intel, and now Intel to arm64. reply halestock 5 hours agorootparentprevI think both are valid strategies, but it&#x27;s usually a business decision, not a technology one. reply cratermoon 4 hours agorootparentThey are, but in my experience businesses will tend towards backwards compatibility without adequately weighing the costs of one versus the other. Cargo cult compatibility, so to speak. reply ineedasername 10 hours agorootparentprevIf it had been a piece of shovelware I doubt they would have bothered. But there were some applications and games like this (Myst also comes to mind) that were so main stream MS may have had them on a punch list of apps to test before a release. When a game or app is sort of a poster child for “why should I buy a pc?” they didn’t have much choice. For countless other apps consumers had to fiddle with voodoo HIMEM configs and other such things you might hear rumored on street corners late at night trying to work so binary magic. I’ve heard the Sim City example before and I think it gives MS entirely too much credit for being OCD on compatibility. Plenty of things simply broke. reply dijit 10 hours agorootparentprevFWIW Safari and Chrome are also doing this with their “quirks” files: https:&#x2F;&#x2F;github.com&#x2F;WebKit&#x2F;WebKit&#x2F;blob&#x2F;main&#x2F;Source&#x2F;WebCore&#x2F;pa... (I can’t find the chrome one) reply esprehn 8 hours agorootparentChrome doesn&#x27;t have one anymore, that&#x27;s a WebKit thing. reply deaddodo 3 hours agorootparentYeah, this was removed from the Blink engine. They&#x27;ve also done a lot of work removing namespace hacks (--opera-foo or --webkit-bar).Not that I think the Google&#x2F;Blink monopoly is a great thing, especially with their recent moves, but they did stick by some of their \"sticking to standards\" rhetoric. reply Cthulhu_ 11 hours agorootparentprevFrom a sales point of view though, if your operating system can run one of the most popular games at the time, it means people won&#x27;t just keep using the existing one.It had to be a step forward, not a step back. I mean I don&#x27;t know what you&#x27;re using at the moment, but if your favorite application didn&#x27;t work on the next version, would you upgrade?This is why Apple spent so much on Rosetta, first when going from PowerPC or whatever to x86&#x2F;64, then from that to ARM &#x2F; M1, while in the meantime building a developer and application ecosystem that allows for easier transition between CPU architectures and environments. reply charonn0 11 hours agorootparentprevBreaking backwards compatibility was one of the biggest customer criticisms of Windows Vista. reply Arrath 7 hours agorootparentOTOH, Vista and an interaction with a digitally distributed edition of Jagged Alliance 2 with bolted on DRM somehow resulted in it wanting a new registration key every time I launched the game.This drove me into looking for a vanilla executable that wouldn&#x27;t have that after-the-fact DRM, and I discovered the 1.13 mod. So, I had one happy experience with Vista. reply rr808 8 hours agorootparentprev> and I&#x27;d argue that it really showsYep, the most popular desktop OS in the world and the 2nd biggest company in the world. reply ClumsyPilot 12 hours agorootparentprev> All those bullshit hacks are a maintenance and debugging burden for someoneThat’s why that someone is getting paid -it’s their job.If you want software to power important things in society, like transport and energy, you need to have a certain level of responsibility for reliability.As this post demonstrates, Right now we have immature children who are used to breaking things for the sake of a new fad, in charge of critical systems. reply darklycan51 11 hours agorootparentThis really bothers me and I&#x27;m young, I am TIRED of applications FORCING restarts, and other garbage as a software culture. You are doing something? Oh sorry our developer team thought it would be smart to crash your whatever task you are doing by force to give you a 2 line changelog.Typing a dm on discord or talking to people? boom random restart to force update, using firefox nightly? sorry you cannot use it as your main browser because they can decide to brick your browser randomly to force you to restart. for no reason whatsoever, what is the downside of just warning people but not FORCE restarting? none.Doing critical stuff on your pc that requires long term uptime? sorry Windows will decide for you to restart forcefully (at least these can be turned off, for now, via group policy) reply CoolCold 23 minutes agorootparent> using firefox nightly? sorry you cannot use it as your main browser because they can decide to brick your browser randomly to force you to restart.I&#x27;m on Firefox beta for a year or so and never seen this - it politely shows update notice and that&#x27;s all. Updates itself once I close all open windows of FF. Wonder why Nighly do different things here. From another side - running nightly is expected to be not the same smooth as stable release. reply DiabloD3 10 hours agorootparentprevRe: Firefox, Firefox only demands restarting if you changed the copy of Firefox out from under it. This only happens if you&#x27;re managing Firefox with an external package manager, or you&#x27;re building from the repo and installed a new copy.If you run Firefox from its default mechanism, it will update itself and ask to restart before applying the update, and will continue working forever, never updating until you restart it. reply darklycan51 7 hours agorootparentMight be the case now (Note, I&#x27;m talking about Nightly), this was a few years back, I noticed that first it warned that a new version was working and then mysteriously bricked the browser after, complained and they told me that I \"shouldn&#x27;t be using nightly if I don&#x27;t wanna have the latest updates\"... which I do, but I don&#x27;t wanna be forced into a restart unless it actually breaks? reply Dalewyn 5 hours agorootparentFirefox Nightly is a branch specifically for testing and evaluating the newest updates. If you want reliability and consistency out of Nightly, the problem is you.You will get what you want out of the regular branch, and even more out of the Extended Support Release branch.As for Windows rebooting out of nowhere: Get a Professional or Enterprise license and turn autoupdates off via Group Policy and your problems are solved. replyPeterStuer 3 hours agorootparentprevThey did this at a point where there was competition for the operating system GUI transition. Having this backward compatibility focus was a major win for them. reply ohgodplsno 12 hours agorootparentprevYou&#x27;re sitting on the point of view of a software developer.Microsoft&#x27;s point of view is that the underlying software doesn&#x27;t matter. The user&#x27;s software _has_ to run. The Application Compatibility Database (https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;devnotes&#x2F;app...) is, overall, a relatively small component, and all it does is apply some shims if your executable is in that list. Performance issues in Windows do not stem from anywhere near the kernel. The kernel team is absolutely top tier. The kernel itself is of much higher quality than what you&#x27;d find on Linux, or MacOS.Now, the upper layers however... reply everial 12 hours agorootparent> The kernel team is absolutely top tier. The kernel itself is of much higher quality than what you&#x27;d find on Linux, or MacOS.Have recommended sources for this or learning more? My experience with Windows doesn&#x27;t match this at all, though from my perspective it&#x27;s hard to tell if it&#x27;s kernel as opposed to any of the layers above it. reply PaulHoule 12 hours agorootparentNotably Microsoft does not document an API to the kernel, the official userspace interface in Windows is the DLLs they provide. In that since, Wine, which provides DLLs that implement the same interface over the Linux kernel is conforming to the way windows works, and Cygwin, which provided a POSIX-like libc that ran on the Windows kernel is a Windows-centric way to implement POSIX.(That said, the path of WSL 1, which emulated the Linux syscall interface on Windows, takes advantage of the idea Windows NT had from the very beginning which was implementing \"personalities\" that could pretend to be other OS, such as the original plan for Windows NT to be OS&#x2F;2 compatible.) reply acomjean 6 hours agorootparentprevWindows was kinda a wreck till “windows NT” they brought in David Cutler who did Vax&#x2F;VMS to help architect it. It was pretty amazing the transition from 95&#x2F;95&#x2F;me&#x2F;vista to windowsNT&#x2F;2000&#x2F;XP. They put my old operating systems book appendixes online which have details about windows 2000 (Mach and bsd are the other os covered)https:&#x2F;&#x2F;bcs.wiley.com&#x2F;he-bcs&#x2F;Books?action=resource&itemId=04...Check out appendix C for details on windows 2000 architecture or this which should link to the pdf.https:&#x2F;&#x2F;higheredbcs.wiley.com&#x2F;legacy&#x2F;college&#x2F;silberschatz&#x2F;04... reply Dalewyn 5 hours agorootparent>the transition from 95&#x2F;95&#x2F;me&#x2F;vista to windowsNT&#x2F;2000&#x2F;XP.Windows Vista is part of the Windows NT lineage, specifically NT 6.0. reply ohgodplsno 11 hours agorootparentprevThere&#x27;s an absurd number of components to the Windows Kernel, so here&#x27;s a kind of disjointed list of various things, from different time frames.Windows Research Kernel - https:&#x2F;&#x2F;github.com&#x2F;HighSchoolSoftwareClub&#x2F;Windows-Research-K... - More or less Windows XPI&#x2F;O Completion ports - https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;fileio&#x2F;i-o-c... - io_uring, but mostly better, since NT 3.5General architecture info: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Architecture_of_Windows_NTA bunch of things you&#x27;ll find in Windows Internals, which is pretty much the bible for Windows (https:&#x2F;&#x2F;empyreal96.github.io&#x2F;nt-info-depot&#x2F;Windows-Internals..., or buy it online. Mark Russinovich is a treasure trove of Windows knowledge)The various Windows subsystems - Windows is built from the start to be able to impersonate other OSes. While the most obvious one is WSL (despite WSL2 being just a VM), there&#x27;s an OS&#x2F;2 Subsystem, a POSIX Subsystem, a Win32 subsystem...Very few things actually run in kernel mode. There exists a almost-kernel-but-not-quite mode called executive mode, which is a much better option than Linux&#x27;s all or nothing user-or-kernel (and, as far as I know, Mach has the same problem)NT is a hybrid kernel: not quite monolithic, not quite micro. This allows Windows to do things like swapping your video drivers live as it&#x27;s running, unlike Linux and Mach which would miserably crash. Hell, it can even recover from a video driver crash and restart it safely, and all you&#x27;ll see is a few seconds of black screen.The breadth of devices it supports is absolutely breathtaking. (well, in part because they very much have a hand in forcing manufacturers to respect the standards that they write)All of Sysinternals (Mark Russinovich&#x27;s work, again) is also an amazing resource: https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;sysinternals&#x2F;Now, mind you, this is purely about technical merits: the NT Kernel is a miracle of technology. The APIs it exposes, and that most Microsoft products expose are downright batshit insane sometimes. But that&#x27;s also what happens when you support 35 years of software. Also, the HANDLE pattern that most Win32 API uses is the superior alternative to dumb pointers (https:&#x2F;&#x2F;floooh.github.io&#x2F;2018&#x2F;06&#x2F;17&#x2F;handles-vs-pointers.html)Oh and a bunch of The Old New Things articles, but I can&#x27;t be arsed to look them up right now, sorry. reply tester756 10 hours agorootparentThat&#x27;s great collection of thingsMaybe it will open eyes for people who for some reason acted as if Windows internals were some outdated tech mess just because Windows did some questionable choices when it comes to UI&#x2F;UX reply User23 10 hours agorootparentprevAs an historical aside, I’m 99% sure that the handle pattern had its origins in the 68k Mac system software. It is pretty cool to give the OS liberty to move your memory around at will without breaking behavior. reply rbanffy 12 hours agorootparentprev> The user&#x27;s software _has_ to run.My concern is that a lot of security issues may have come from this. A clever attacker could grab recently freed memory from one of these programs and inject malicious code to enjoy whatever other weird privileges the original program has, because marketing said it can’t crash. reply ohgodplsno 11 hours agorootparentThe compatibility hacks are not \"revert to old, terribly unsafe behavior\". Rather, \"use current, good behavior, lie to the application about what happened.\" reply saagarjha 10 hours agorootparentprevThis actually improves security by preventing UAF. reply lamontcg 11 hours agorootparentprev> The kernel team is absolutely top tier. The kernel itself is of much higher quality than what you&#x27;d find on Linux, or MacOS. > > Now, the upper layers however...You&#x27;re not selling me on the idea that the compatibility layer has no cost by pointing out that the upper layers that reside over it are a mess.That would actually be my argument. reply ohgodplsno 11 hours agorootparentWould you consider LDPRELOAD a massive cost to Linux ? Because that&#x27;s basically what it is.You could give me the best kernel in the world, if I end up reading a file whenever I push a pixel to the screen, my performance will be dogshit. Windows&#x27;s performance problems are not due to the kernel (or rather, not due to problems&#x2F;bugs: some performance issues are just a choice. See NTFS&#x27;s dreadful performance with Git: NTFS simply wasn&#x27;t thought out for having thousands of very small files all being touched at the same time.) reply xvilka 9 hours agorootparentprevFork and IO performance are major problems when porting *nix software to Windows. It&#x27;s visibly slower, one of the reasons WSL1 was way too slow to be used for many things while technically being a clever solution. reply CoolCold 13 minutes agorootparentto my understanding it&#x27;s not really IO (reading&#x2F;writing bytes), but overhead on OpenFile&#x2F;CloseFile being under AV&#x2F;Defender inspection. I&#x27;m taking that understanding basing on https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=qbKGw8MQ0i8 with \" \"NTFS really isn&#x27;t that bad\" - Robert Collins (LCA 2020) \"> Why was rustup slow (3m30s to install (not including download time)) in early 2019 on Windows, and why isn&#x27;t it slow (14s to install) now?>Early in 2019 I was developing some things in Rustlang on Windows, got frustrated at the performance of rustup (the installer for rust) and looked for bug. I found one which blamed a combination of NTFS, small files and anti-virus software for the problem. This wasn&#x27;t an entirely satisfactory answer to my mind. Fast forward a bit, and with a combination of changes to rustup and to Windows itself and rustup is now pleasantly usable.... which also improved performance for rustup on NFS mounted home directories. reply renonce 9 hours agorootparentprev> Performance issues in Windows do not stem from anywhere near the kernel.I remember Windows uses a O(N^2) scheduler so the system slows down when it has a few thousand processes. Would that count as a performance issue in the kernel? reply ohgodplsno 9 hours agorootparentAs far as I know, Windows uses a multilevel feedback queue, so O(n²) would be surprising. The one issue that pops up with the Windows scheduler is when you have plenty of processes doing tiny little bits of IO instead of one huge slab of it.Could you count it as a performance issue in the kernel ? Maybe. But really, you&#x27;re mostly hitting an issue in what it&#x27;s built to do. Windows really likes two things:* don&#x27;t spawn subprocesses* please do your I&#x2F;O in one huge batch and thank you.The average Windows machine will barely have 100 processes running. I have 184 right now, and I run a lot of crap. This goes directly contrary to the philosophy of many UNIX programs: create a shitload of processes, fork everywhere, and write tiny files all the time.I wouldn&#x27;t complain about a hammer not working well if I&#x27;m using the handle to nail things. Sure, it would be nice if it also worked there, but it&#x27;s not exactly made for that either, and for good reason. POSIX fork() being such a can of worms is half the reason that WSL1 was abandoned. Windows does not have the internal machinery to do that, because it wasn&#x27;t built for that. reply User23 10 hours agorootparentprevThe NT kernel interfaces are lovely. I’m not at all a windows fanboy and haven’t done windows dev in well over a decade, but when I did the APIs were lightyears ahead of the competition. And Jeffrey Richter’s books were a marvelous resource on the documentation side. reply caycep 11 hours agorootparentprevI think that&#x27;s why they invented containers&#x2F;virtual machines reply Dalewyn 10 hours agorootparentprev>From where I&#x27;m sitting this looks like an excellent argument for breaking backwards compatibility.It&#x27;s precisely because of that backwards compatibility, insane in both the workings and the result, that keeps most people using Windows.People use computers to get stuff done, and Windows lets people use the absolutely massive library of Windows programs whether it was written today or over 30 years ago. reply User23 10 hours agorootparentprevThe other position is that Microsoft’s customers paid them billions of dollars and maintenance and debugging “burden” is just part of the business. reply mrguyorama 16 hours agoparentprevSearch for the bonus chapters to Raymond Chen&#x27;s \"Old new thing\", which goes through MANY examples of how there was an entire team who&#x27;s job was to go through popular applications and hack windows to make them work on the new OS reply jasfi 4 hours agoparentprevThey would likely not have done this today. That fix was a product of its time.From what I can tell, SimCity had already been released. Many users likely didn&#x27;t have an Internet connection, and even if they did, there was no auto-update via Steam. reply amno 7 hours agoparentprevYes, Raymond Chen describes such fixes in [several blog posts](https:&#x2F;&#x2F;devblogs.microsoft.com&#x2F;oldnewthing&#x2F;) and in his book The Old New Thing. Check the old posts, back at the beginning. There are posts about to which lengths they went to ensure buggy applications still worked after an update or a fix. reply candiddevmike 18 hours agoparentprevThis seems like an interesting vector for a virus. reply AnotherGoodName 18 hours agorootparentThese older games will all work in 640kb so the fix would likely just have been to fence off 640kb completely from other apps while SimCity was running. reply netsharc 9 hours agorootparentSim City 2000 used DOS&#x2F;4GW though: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;DOS&#x2F;4G :> It allows DOS programs to eliminate the 640 KB conventional memory limit by addressing up to 64 MB of extended memory on Intel 80386 and above machines. reply bitwize 8 hours agoparentprevMeanwhile, the Asahi Linux GPU driver checks to see if the first character of the process name is &#x27;X&#x27;, and simply nopes out if it is.Because why are you still running Xorg, asshole? You should have switched to Wayland by now.https:&#x2F;&#x2F;social.treehouse.systems&#x2F;@marcan&#x2F;110904454552941656 reply binkHN 18 hours agoparentprevNice. OpenBSD does something similar, with the difference being that there are no exemptions for specific software—they expect developers to fix their broken programs. reply housemusicfan 17 hours agorootparentClearly missing the point. The OP mentions DOS, so this was the mid-90s. OpenBSD didn&#x27;t exist (Theo hadn&#x27;t burned all his bridges with NetBSD yet). There were NO updates. You bought software, games especially, in a shrink wrapped box at a brick and mortar store. Most people outside universities did not have internet access. If you were an extremely privileged few, you could download small patches from a BBS or online service but this was extremely rare. You got what you got. The development model was different. It had to work under any circumstances. There was no \"we&#x27;ll fix it in the next sprint!\" and push it to the app store. Developers had no way to contact their customers.Regarding that hobbyist OS OpenBSD, where the developers care about nothing besides security, there were no proprietary application packages available. Most retailed applications in those days ran on SunOS&#x2F;Solaris or HP&#x2F;UX. reply kibibu 12 hours agorootparent> There were NO updatesI distinctly remember patching DOOM from 1.1 through 1.2, 1.4, 1.666 to 1.9 reply anthk 11 hours agorootparentprevGaming magazines shipped diskettes with game updates and patches. reply pradn 18 hours agorootparentprevThat&#x27;s not similar at all! Windows takes the \"Linux way\" of \"not breaking userspace\" seriously. OpenBSD has other goals - some sense of minimality and clarity, but this is not one. reply nullindividual 18 hours agorootparentAnd unlike Linux, has a stable ABI. reply blibble 17 hours agorootparentLinux has a stable userland ABIOpenBSD doesn&#x27;t even have that: if you don&#x27;t reboot quickly after installing a major upgrade you&#x27;re going to have a bad timewhereas you can run ancient userland on more modern Linux kernels (as evidenced by the container ecosystem) reply PlutoIsAPlanet 12 hours agorootparentThe Linux kernel has a stable userland ABI.Other core components that makes up most Linux distros (e.g. libc, gtk, libc, curl, ssl etc) however do not. replyvasco 17 hours agorootparentprev> That&#x27;s not similar at all!That was the joke, friend. reply pradn 15 hours agorootparentIf it was a joke, my bad ! reply GhostWhisperer 17 hours agorootparentprevyou had me reply CaliforniaKarl 6 hours agoprevI used to believe this, but no longer.Any Steam game that used the \"Games for Windows – Live\" service, and wasn&#x27;t updated since the service shut down in 2014, would fail to launch on Windows 10 & later, because the DLLs for the service were removed. For a time, folks were able to download the DLL from third-party sites, but that doesn&#x27;t work now. reply oefrha 3 hours agoparentOlder games without DRM or other networked services also may not work due to graphics incompatibility. (cnc-ddraw salvages a lot of them though: https:&#x2F;&#x2F;github.com&#x2F;FunkyFr3sh&#x2F;cnc-ddraw) reply rkagerer 14 hours agoprevIt&#x27;s not insane, it&#x27;s my expectation for a tool. My hammer still works perfectly well with nails I bought 30 years ago.It&#x27;s impossible to build on shifting foundations that are constantly breaking backward compatibility. You eventually spend all your time maintaining instead of creating.Then you have to go reinvent your wheel, and in my experience as a user your shiny new one isn&#x27;t necessarily better.Most of the software I use is more than 10 years old. Some is still updated, some is not (or went cloud and left me happily behind). reply bombcar 9 hours agoparentMilwaukee still manufactures NiCAD batteries for their tools that have long since been outclassed. reply oefrha 3 hours agoparentprevOn the other hand, you’re stuck with stupid limitations in perpetuity: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=14286383 reply dehrmann 8 hours agoparentprevI see you haven&#x27;t bought the Apple Hammer. reply chrchang523 18 hours agoprevRaymond Chen has been providing an inside perspective on this for decades: https:&#x2F;&#x2F;devblogs.microsoft.com&#x2F;oldnewthing&#x2F; reply wly_cdgr 6 hours agoprevThat shouldn&#x27;t be considered remotely impressive. It should be seen as routine and expected, and if it doesn&#x27;t work, that should be considered a hugely humiliating and unacceptable fail.To be clear, I am not saying that it&#x27;s not impressive in the shitshow that is 2023. I am saying what norms we should work towards. reply sattoshi 5 hours agoparentAgreed. There is absolutely no reason most statically compiled binaries should stop working. reply BugsJustFindMe 3 hours agorootparentThere are many reasons. Notably, binaries don&#x27;t tend to compile the OS into themselves. There&#x27;s always some kind of interface boundary where something depends on OS-defined behavior, like windows and menu bars and printing and finding the user&#x27;s personal folder and so on and so forth. Microsoft decided to do all of the work to preserve old interfaces long after making newer ones, but it does come at a heavy maintenance and management cost which only makes sense in a market with extremely lucrative legacy forces. reply kuchenbecker 4 hours agorootparentprevThey won&#x27;t if you use the old version. reply TkTech 18 hours agoprevA fun side-effect of the \"general\" stability of Windows APIs is that Win32&#x2F;DX has become a very stable and reliable \"universal\" API for Linux (and other OSes) via the massive amount of work put into Wine&#x2F;Proton. I keep seeing games drop their Linux-native releases in favor of just shipping for proton. reply hx8 17 hours agoparentThe Proton-aware releases often are easier to setup and run better than the Linux-native releases. reply TkTech 17 hours agorootparentThat&#x27;s been my experience as well. EU4&#x27;s Linux-native release has issues with scaling and cursors on ultrawide monitors. Proton version is flawless.There&#x27;s been quite a few cases for me, like Star Citizen for example, where games perform significantly better under Proton with DXVK than it does on Windows! reply Barrin92 9 hours agoparentprevYes. Someone blogged about this last year and it generated a lot of discussion here as well.https:&#x2F;&#x2F;sporks.space&#x2F;2022&#x2F;02&#x2F;27&#x2F;win32-is-the-stable-linux-us... reply shortlived 18 hours agoprevEven more “insanity”:z&#x2F;OS (aka OS360 aka MVS) supports programs going back to the 60s and I just talked with a DE at IBM who is still using a program compiled circa Apollo 11 mission. reply rahen 10 hours agoparentThat&#x27;s common in the mainframe world. Unisys (ex Univac) still has its Dorado mainframes binary compatible with the Univac 1100 released in 1962. reply the_only_law 10 hours agorootparentI think I remember reading a while back that System&#x2F;360 binaries can still run on modern Z&#x2F;architecture mainframes. reply shortlived 9 hours agorootparentYup, that’s the example I cited above. reply the_only_law 9 hours agorootparentOops, missed that, I came in from the comments link. reply sillywalk 7 hours agorootparentprevI thought the Unisys mainframes have been running emulated on X86&#x2F;X86-64 for a while? I assume they have some sort of binary translator. reply sillywalk 7 hours agoparentprevWhat&#x27;s a DE? Also did they tell you what the program did?Other systems that will run or automatically translate > 30 yr old binaries:- I believe IBM i on POWER {i5&#x2F;AS400} will run stuff from System 38 (1980).- HPE Nonstop (aka Tandem Guardian ) on X86-64 will run or translate binaries from the original proprietary TNS systems (late 1970s) and MIPS systems (1991). reply rahimnathwani 5 hours agorootparentDistinguished Engineer? reply kjellsbells 18 hours agoprevIts famously determined, but I feel that a DOS CLI app isnt much of a challenge since the DOS subsystem is essentially ossified. What would be the result if, say, you tried to run something DOS-y that was demanding or an early Win16 app? Say, Zortech C++ from 1986 with the Pharlap DOS extender or Minesweeper from windows 3.1. Would they work? reply touseol 18 hours agoparentThat’s not a DOS app, it’s a Win32 console app. DOS apps (16-bit or 32-bit) or Win16 apps would not run natively. reply sumtechguy 18 hours agorootparentThat depends on if they are using 64 bit or not. The 16bit VDM was deprecated on that move from 32 to 64. Which is the majority of most installs these days.What is kind of neat is every windows application&#x2F;dll is a valid DOS application. The first part of all of them is a valid MZ DOS 16 EXEcutable. Windows just treats it as a skippable header and reads the real header that is about 100 bytes in and then decides which subsystem to fire up (win3x, win32, OS&#x2F;2, etc). But if you take a exe compiled today with current tools and put it on a DOS 3.3 box it would run the exe and print out it can not run (the exe has that in there).Also from that era not all DOS applications were exclusively 16 bit. Many were hybrid. Just to have better control over the memory space instead of using segmentation was usually worth the speed boost (as well as the bigger registers). Windows from that era usually had extra &#x27;pid&#x27; file where you could basically tag the executable as &#x27;hey you are about to run a 32 bit app get out of the way windows oh and support dpmi while you are at it&#x27;. reply touseol 17 hours agorootparentIf that was a Windows 10 screenshot then yes there would have been the possibility of it being the 32-bit edition running a DOS app through NTVDM. But the poster says Windows 11, which does not have a 32-bit edition.I’m not aware of 64-bit Windows being able to run 32-bit DPMI DOS apps natively, I think those still required NTVDM. reply sumtechguy 16 hours agorootparent> I think those still required NTVDMPretty sure you are right. As I think that is what setup the interrupts for it. Win9x did it very differently and would basically just put command.com back in charge of stuff to sort of make it work with a sys file. NT with DPMI programs was usually very hit or or miss (more miss). If they did not play just right with windows the thing would just crash out.Think there might be a win11 32 bit out there. But nothing that MS sells to normal end customers. But my brain may be playing tricks on me and I am confusing different articles I have read. But that would probably be some sort of weird kiosk ODM build. Not what most normal people would have (like in that post). reply Dwedit 17 hours agorootparentprevOTVDM will allow running 16-bit windows programs on modern 64-bit windows. reply TillE 12 hours agorootparentOTVDM is great, but it&#x27;s just using Wine. Windows really ripped out the whole 16-bit compatibility layer, which is a little sad. reply MarkSweep 3 hours agorootparentIt’s not that Microsoft chose to rip it out. NTVDM relied on Virtual 8086 mode. X86 processors cannot transition to this mode from 64-bit mode.https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Virtual_8086_modeIntel is proposing to remove 16-but support entirely:https:&#x2F;&#x2F;www.intel.com&#x2F;content&#x2F;www&#x2F;us&#x2F;en&#x2F;developer&#x2F;articles&#x2F;t... reply deaddodo 3 hours agorootparentprevThey were kind of forced to. WoW (classic, not WoW64) relied on the CPU being able to switch to a 16-bit context, in much the way modern WoW uses amd64&#x27;s compatibility mode. OTVDM&#x27;s project page directly mentions this as a core component:> CPU Emulator> 64-bit Windows cannot modify LDT(NtSetInformationProcess(,ProcessLdtInformation,,) always returns error)They would have had to replace&#x2F;extend WoW with an architecture emulator. Raising the development&#x2F;support complexity quite a bit for little gain (few people that use Windows 11 are running DOS or Win16 applications today, beyond retro gamers who use DOSBox anyways). reply RajT88 18 hours agorootparentprevWin16 got dropped at some point, probably because keeping it didn&#x27;t add up financially. I have little doubt they could have kept support for much older stuff. reply EvanAnderson 17 hours agorootparentThere&#x27;s a \"pirate\" port of NTVDM to 64-bit Windows (from leaked NT 4.0 source) so it&#x27;s certainly not technically infeasible: https:&#x2F;&#x2F;github.com&#x2F;leecher1337&#x2F;ntvdmx64 reply bitwize 5 hours agorootparentThere&#x27;s also winevdm from the Wine project. reply AnotherGoodName 18 hours agorootparentprevSomething that confuses me is that this states it&#x27;s running a binary compiled 30years ago. How is this not 16bit?I&#x27;m aware of win32s, I used to run it but still it seems unlikely this is a win32 console app unless there&#x27;s an incredibly unlikely set of circumstances behind this.Or perhaps it was simply recompiled after all despite what the Twitter post states? reply asveikau 18 hours agorootparent9x wasn&#x27;t the only Windows OS.The path contains the phrase \"ntbin\". It was compiled for NT. reply sumtechguy 18 hours agorootparentMy guess is this is a PE format type windows application. Though I suppose you could get a NE format file to work correctly if the binary was compiled as 32 bit. My memory is a bit fuzzy on this but I think you did have the option to compile either way. reply mikkohypponen 17 hours agorootparentCorrect, it&#x27;s a PE file. reply AnotherGoodName 18 hours agorootparentprevIn fact looking into this further the only thing windows 11 lacks is the ntvdm which allows some dos api calls. If your binary is straightforward and not tied to msdos which this is it&#x27;s fine. So I think the idea that this is a 32bit windows console application is completely untrue. It&#x27;s also intuitively untrue when you consider the age of the app being run here. reply touseol 18 hours agorootparentThe fact that there is no Windows 11 version with NTVDM is why this must be a Win32 console app, assuming the poster is truthful. Windows NT 3.1 came out in 1993. This being in a directory called “ntbin” gives another hint. reply AnotherGoodName 18 hours agorootparentI see that makes sense. I feel it&#x27;s also a little misleading from the original post. An exceptionally specific binary from 1993 works but the implication here is that the compatibility is more than this. reply mikkohypponen 17 hours agorootparentAuthor here. I&#x27;ve been running Windows since 3.0 and I copy my old tool folders with me whenever I change machines or upgrade the OS. This GZIP.EXE is the oldest EXE I have in my \\ntbin tool folder that still works. The folder has 579 EXE files. reply justinpaulson 17 hours agorootparent> that still works.I think that is the point being made. This exe is cherry picked as the oldest working exe, it isn&#x27;t like every 30 year old exe in that folder still works. replytouseol 18 hours agorootparentprevWindows NT 3.1 was released on July 27, 1993. reply zwieback 18 hours agoparentprevZortech C++ was my rig for a good while - great memories. Pharlap is way too intrusive, my guess, to run on current Windows but would be an interesting experiment. Probably any extended&#x2F;expanded memory thing doesn&#x27;t work anymore. reply ls612 18 hours agoprevI wish there was a backwards compatibility option to give applications a “virtual display” which runs in a window, for old programs which only know how to run fullscreen at 1024x768. reply Dwedit 17 hours agoparentI once made a program (Intended for Games only, doesn&#x27;t support standard windows controls) that allows you to stretch an otherwise fixed-size window. Uses D3D9 and Pixel Shaders to draw the upscaled window.https:&#x2F;&#x2F;github.com&#x2F;Dwedit&#x2F;GameStretcher reply Sohcahtoa82 17 hours agorootparentOh, where was this when I really needed it a few years ago...I was playing an old MMORPG called The Realm. It&#x27;s been live since 1995 and ran until just a couple months ago. It only knew how to run in 640x480.I tried to write a program that would create a scaled up version, but it didn&#x27;t work well, especially since the game would create child windows for certain UI elements. I was writing it in C, which isn&#x27;t my strongest language, simply so I could call Win32 APIs more easily. reply bombcar 9 hours agoparentprevThis is why I ran a virtual machine for windows even when I was running windows. Virtual machines almost always support having a different virtual resolution vs actual. reply colejohnson66 18 hours agoparentprevDoes the built-in \"compatibility mode\" not work? https:&#x2F;&#x2F;support.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;make-older-apps-... reply evmar 18 hours agoparentprevWorking on https:&#x2F;&#x2F;github.com&#x2F;evmar&#x2F;retrowin32, I disassembled one old demo that wouldn&#x27;t run on my native Windows machine -- turns out it was requesting 320x200 fullscreen resolution and aborting if it couldn&#x27;t get it. (Not sure why the Windows machine wouldn&#x27;t do it...) reply swozey 18 hours agoparentprevI can&#x27;t find it right now, and no idea if it&#x27;d work on older things but there&#x27;s some 3rd party app for Windows that will put a full screen game&#x2F;app into a stretchable windowed mode. reply akx 18 hours agorootparentDxWnd (https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;dxwnd&#x2F;) comes to mind. reply smoldesu 18 hours agoparentprevWine does this, it&#x27;s a lifesaver for older games like Diablo 2. reply blibble 18 hours agoprevyes it can run things that don&#x27;t use much of the API surface (just using libc? probably fine)however try running a game from the Windows 95&#x2F;98 days and you&#x27;ve got a maybe 50&#x2F;50 chance of it workinge.g. they changed the return code from BitBlt from 95&#x2F;98 -> XP, they used to return the number of scanlines but switched it to a booleansame with the heap management functions, directory traversal functions, etc reply eternityforest 17 hours agoparentTry running something from only ONE year ago on Linux and it very often won&#x27;t work, unless it&#x27;s an Appimage or Flatpak, or you&#x27;re on Nix,They might not break userland but Qt and GTK do the breaking for you. Python joined the party recently. Random DBus daemons might be missing, etc. reply memefrog 8 hours agorootparentYou can run binaries from decades ago on Linux too. This is about a DOS binary. Well, a command line program that just uses system calls is fine too. reply worewood 7 hours agorootparentOnly if it is statically linked with everything it needs. Otherwise good luck resolving dependencies. reply eternityforest 6 hours agorootparentEven then it might not work because it could rely on a DBus daemon being there. Even a brand new binary might fail because it needs some external program they forgot to add to the dependencies list in the package, so you have to sift through to find the not at all obvious package that provides it.Or something was compiled without some option for unknown reasons so you&#x27;re just SOL unless you want to compile stuff yourself. reply memefrog 5 hours agorootparentHow is that any different from any other program on any system failing because of a daemon not running? Inter-process communication exists on every operating system. IPC means your program&#x27;s behaviour can be different depending on what other processes are running. This is not specific to Linux.Your other point is equally as inane. Anything might fail because it requires some external program, or external data files, or any other external resource. A program might fail because it requires a particular hardware device to be plugged into your computer. None of that has anything to do with the operating system.>Or something was compiled without some option for unknown reasons so you&#x27;re just SOL unless you want to compile stuff yourself.Oh no! The terribly, impossibly difficult task of running a program! How could you ever subject me to such a fate as having to compile stuff myself. You cruel beast! reply eternityforest 4 hours agorootparentCompiling stuff yourself is generally much harder than one might want it to be be. The instructions might or might not actually work unless you&#x27;re on a source based distro. It also might take hours. Or days, but the stuff that&#x27;s big enough to take days generally works out of the box.Windows has IPC, but doesn&#x27;t have as heavy of an influence from the Unix philosophy, and Android seems to have even less. More stuff is just built into the OS, it&#x27;s always going to be there, probably for 20 years. reply memefrog 2 hours agorootparentAny software that has build instructions that don&#x27;t work is probably written by morons. I wouldn&#x27;t want to run it. I certainly have no interest in running software that takes days to compile. Overengineered crap. replymikkohypponen 18 hours agoparentprevSome stuff works fine. See https:&#x2F;&#x2F;twitter.com&#x2F;mikko&#x2F;status&#x2F;1692552661374005450 reply blibble 18 hours agorootparentjust don&#x27;t try anything that used safedisc reply pjmlp 17 hours agoparentprevThose issues only apply to Windows 9x linage.Current Windows versions trace back to Windows NT 3.51&#x2F;2000 linage.Naturally 9X => XP don&#x27;t work flawlessly, they are two different OS stacks. reply blibble 16 hours agorootparentwell yeshowever it sort of undermines the \"insane compatibility\" &#x2F; \"stable API\" point if mass-market Windows software produced before the 2001 release of XP mostly doesn&#x27;t work on modern WindowsNT effectively forked Win32 (introduced with Windows 3.1) into something incompatible(meanwhile it all runs on Wine perfectly fine) reply pjmlp 16 hours agorootparentWhat? Windows NT never forked anything.Windows 3.1 introduced Win16 protected mode with segmented memory.Win32s was a backport from a Win32 subset from Windows NT 4.0.Windows NT linage exists since 1993. reply sillywalk 7 hours agorootparentI remember Win32s, I think Netscape Navigator needed it. I was thinking Lode Runner, but that was WinG.I always thought it was backported from Windows 95, thanks for the info. reply dboreham 6 hours agorootparentIirc Win32s existed before Win95. replyesalman 12 hours agoprevMy windows 11 upgrade experience was one of the smoothest ever. I was playing AOE, got a notification that my machine is eligible for upgrade, paused and saved the game, did the update and resumed. reply pdpi 17 hours agoprevMicrosoft&#x27;s commitment to backwards compatibility is definitely one of the strengths of the Windows platform. On the flipside, it&#x27;s also at the root at the insanity that is the forbidden word list in MS Teams channel names.https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;microsoftteams&#x2F;limits-spec... reply yjftsjthsd-h 3 hours agoparentI wonder if they could have mitigated that by leaning more heavily on the ability to have multiple personalities running on top of the kernel. So for instance, you could run a program from 1996 on the \"Windows 95\" subsystem and get better compatibility, but Teams could run on the \"Windows 11\" subsystem that treats CON as just another file name. Of course, there might be a problem if programs at different compatibility levels interact with the same files, but there&#x27;s actually precedent for dealing with that kind of thing quasi-transparently, or perhaps I should say QUASI-~1. reply kevinsync 16 hours agoprevFWIW, Beavis and Butthead in Virtual Stupidity (1995) runs perfectly fine in Windows 10&#x2F;11 with compatibility mode enabled. No need to test anything else as that&#x27;s arguably the apex of software (and humanity&#x27;s collective output).https:&#x2F;&#x2F;www.myabandonware.com&#x2F;game&#x2F;mtv-s-beavis-and-butt-hea... reply pvg 8 hours agoparentThat sounds like a scene from a post-apocalyptic story. Cobbling a working computer together, discovering it will only run Beavis and Butthead in Virtual Stupidity. reply bitwize 5 hours agorootparentA plot point for a third movie: Beavis and Butt-head Do the Apocalypse. reply armchairhacker 11 hours agoprevDoes Linux have this backwards compatibility? What about macOS?I know instruction sets changed from PowerPC to Intel to ARM, so probably not macOS at least. But this is a CLI and I doubt old system calls changed reply bombcar 9 hours agoparentMacOS is actively hostile ( I still remember when they dropped cocoa or carbon or whatever it was, many apps died that day ).Linux isn’t hostile and if you ONLY use the kernel ABI or statically compile everything, it will work quite a long time.But if you use dynamic libraries, you gonna have a hard time unless you have source. reply anthk 11 hours agoparentprevLinux will just compile 30 yo binaries. reply stjohnswarts 47 minutes agorootparent30 yo source code? reply kmoser 11 hours agoprevI have a command line Windows binary compiled over 30 years ago (June 1996) that won&#x27;t run on Windows 10 (64 bit). Windows complains, \"ANAGRAMS.EXE is not compatible with the version of Windows you&#x27;re running. Check your computer&#x27;s system information and then contact the software publisher.\"Is this issue specific to Windows 10, and would it work on Windows 11? reply justsomehnguy 4 minutes agoparent> is not compatible with the version of Windows you&#x27;re running. Check your computer&#x27;s system information and then contact the software publisherYou would receive such response on the every 64-bit Windows starting from Win2003, there is no 16-bit NTVDM in 64-bit systems.If you need to run it:a) use 32-bit Windows 10 (Win11 do not have 32-bit variant)b) use DOSBoxc) ... VirtualBox&#x2F;PCem&#x2F;whatever with &#x27;real&#x27; DOS.d) there are some NTVDM ports for 64-bit systems, use at own risk. Ctrl+F in this post. reply rootw0rm 11 hours agoparentprevhave you tried various compatibility options? right click -> properties -> compatibilitythere&#x27;s a troubleshooter there, too reply kmoser 5 hours agorootparentI just tried the troubleshooter, and it said it fixed the issue but it actually didn&#x27;t: when I run the program, Windows pops up a modal (before it just displayed an error on the console) with a title bar that says \"Unsupported 16-Bit Application\" and a message reading, \"The program or feature [...] cannot start or run due to incompatibility with 64-bit versions of Windows. Please contact the software vendor to ask if a 64-bit Windows compatible version is available.\" reply charonn0 10 hours agoparentprevIs it a 16-bit executable? reply kmoser 5 hours agorootparentYes reply brailsafe 11 hours agoparentprevAlmost 30 years ago* reply withinrafael 9 hours agoprevLots of Microsoft app compat success stories out there, but plenty of breakage too. One example: I had to create IndirectInput [1][2] to fix Myst on Windows. Microsoft refused (via private email thread with leadership) to take responsibility for what is clearly an appcompat bug and were borderline jerks to me about it too. Oh well.[1] https:&#x2F;&#x2F;github.com&#x2F;riverar&#x2F;IndirectInput[2] https:&#x2F;&#x2F;support.gog.com&#x2F;hc&#x2F;en-us&#x2F;articles&#x2F;360019256854-Myst-... reply kstrauser 7 hours agoparentI’m seriously impressed that you fixed this with a little drop-in DLL, and also that it was fixable that way. reply no_time 17 hours agoprevSo much so that even only linux, the most stable API arguably is win32 through wine. Atleast for desktop related tasks. reply doublepg23 17 hours agoparentAre the compatibility issues on Linux really an API issue or having incompatible, newer versions of libraries? The effect is the same, your old program doesn’t run, but the cause is very different. reply fredoralive 17 hours agorootparentIncompatible, newer versions of libraries is an API issue? An OS is more than a kernel, and on Windows if you link to the standard set of libraries provided with the Windows, Microsoft tries not to break them. reply Asooka 17 hours agorootparentprevThe latter. Old versions of libraries aren&#x27;t maintained and you&#x27;re on your own to compile effectively from scratch an entire distro&#x27;s worth of libraries. Ironically, it should be easier to have as strong backwards compatibility on Linux as Windows, since all .so files are versioned and almost never break the API within the same major version, so you&#x27;re spared the DLL hell of a program linking with blah.dll expecting it to be version 1, but you have version 7 installed. On Linux the program would link with libblah.so.1, not the libblah.so.7 you have installed. reply petermcneeley 6 hours agoprevThis is fun and related \"chain of fools 2017\" https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=PH1BKPSGcxQ reply Zuiii 6 hours agoprevThis works for win32 apps too. It&#x27;s what gtk should have strived to be. New features should have never been prioritized over API stability. What a shame. reply kabdib 9 hours agoprevHa, the version of ZIP that I use was built in 1996, and I was using a version of &#x27;ls&#x27; that I wrote for NT 3.1 -- maybe 1993 or so -- until a couple of years ago.These programs don&#x27;t use DLLs, and frankly there&#x27;s little reason they for them to stop working. reply shrubble 10 hours agoprevSunOS 4.x binaries, if statically compiled, run fine on modern day SPARC systems also... reply Dwedit 17 hours agoprevThat would have to be a Win32 Console App made for Windows NT 3.1? reply sharts 8 hours agoprevSurely there&#x27;s some kind of legacy Windows containerization &#x2F; subsystem &#x2F; emulation technology that would automagically handle such things by now? reply TillE 7 hours agoparentWell, there&#x27;s the WoW64 layer, but nothing particularly sophisticated beyond that.For the most part the old DLL interface (kernel32 et al) just sticks around indefinitely even as parts are officially deprecated. Microsoft is careful not to break their public interfaces. reply mdwalters 5 hours agoprevIsn&#x27;t this the compatibility layer that&#x27;s built into Windows? reply xhkkffbf 18 hours agoprevI&#x27;ve always been sad that my old Mac software just won&#x27;t run. It&#x27;s one thing for Apple to move to new architectures. Maybe that was necessary. But when the emulators break after a few years, well, that&#x27;s the part that bugs me.Microsoft&#x27;s devotion to its customers shouldn&#x27;t be so amazing-- it&#x27;s the way that every company should behave. reply agumonkey 16 hours agoparentApple had a time where they would allow even 1st gen iMacs (300MHz?) to get the latest MacOS X. You might have to max out ram but that was it, and it was very usable. reply petabytes 4 hours agoprevIt&#x27;s sad that the windows kernel and API aren&#x27;t even that bad, but Microsoft insists on shipping as much bloatware and spyware as they can. Do I really have to use a debloater to have a usable OS? reply octodog 9 hours agoprevI remember not being able to play Diablo 2 on my iMac running mac os X and I was so sad about it. I&#x27;ve used Windows ever since. reply znpy 16 hours agoprevSomeone’s gonna come and say that linux has that too, and while technically true it’s quite hard in practice.The kernel abi is stable, everything else is pure chaos, and this is mostly due to how applications are usually packaged in linux: your app could load (as long as it’s not in a.out format) but then would fail at loading most libraries. So effectively you need a whole chroot with the reference linux distro (or other runtime in general) and I’m not so sure you could find archives of 30 years old distros.And I’m assuming that the kernel abi hasn’t actually changed a single bit and that no other interfaces changed either (stuff like &#x2F;proc or &#x2F;sys - &#x2F;sys wasn’t even there 30 years ago i think).And if you’re running an Xorg app, I wouldn’t bet my lunch on that level of protocol-level compatibility. reply msla 13 hours agoparentIt works in Linux the same way it works on Windows: If you don&#x27;t have the dynamic libraries and configuration you need, it won&#x27;t work.Why this is a mark against Linux and not Windows is beyond me. reply sedatk 9 hours agorootparentMicrosoft keeps maintaining all those libraries, and keeps them in the OS by default. That may not be the case with Linux. reply bombcar 9 hours agorootparentThis is exactly it. If you call native windows things, they’re there (ignoring deprivation of win16, etc).But if you call gnome libraries, they’re probably long gone. reply znpy 12 hours agorootparentprevEh, kinda. On linux you can only assume kernel abi compatibility whereas pn windoes you can assume the basic runtime (win32 or whatever) to be present and available. reply AshamedCaptain 10 hours agorootparentIn the timeframes this post is talking about, you can practically do the same in any operating system. What \"basic runtime\" could such an aged Linux binary use, other than glibc and Xlib&#x2F;motif, which are precisely the ones which have been actually trying to preserve ABI? These 30 year old binaries have a higher change of working than week old ones...This is similar to the fact that Office 95 will work on recent Windows, but Office 2k won&#x27;t. reply paxys 18 hours agoprevI&#x27;m going to go ahead and say operating systems that don&#x27;t work this way are the exception. Running a 30 year old binary isn&#x27;t all that big a deal. Pretty much every mainstream system does so every day in its day to day operation. reply toast0 17 hours agoparentiOS and Android aren&#x27;t 30 years old, so that&#x27;s not possible. Assuming you get by signing&#x2F;appstore&#x2F;etc, I don&#x27;t think you can take a compiled app from early iOS and run it on an iPhone now; Apple removes old apis and there&#x27;s the whole 64-bit transition too.Google isn&#x27;t as aggressive and most? apps are bytecode only, but I kind of don&#x27;t expect an apk for Android 1.0 to function properly if run on an Android today. At least if it does anything advanced with networking or needs permissions that changed a lot.Linux should work if it was static compiled, and probably helps if it doesn&#x27;t use audio; because Linux audio has changed a lot in 30 years. A dynamically linked Linux binary from 30 years ago is nearly hopeless, because it would have been linked against a different libc that&#x27;s in common use today, and I doubt that will be on your system today. If you had the full filesystem, it should run in a chroot.MacOS was System 7 in 1993, on 68k, not power pc. Those applications aren&#x27;t running on your M2 without emulation. Dropping 32-bit support doesn&#x27;t help either, of course.FreeBSD 1.0 was released in November 1993, so it&#x27;s not quite 30 years old, but I suspect a static compiled app may work, but libraries will be hard. FreeBSD makes compat packages to get libraries to run older software, but I don&#x27;t see one for 1.x or 2.x, the package for 3.x was marked expired in 2010, but compat4x seems alive and well; that gets you 20 years of probable compatability. reply housemusicfan 17 hours agoparentprevmacOS won&#x27;t let me run binaries from 5 years ago, let alone 30. reply sitzkrieg 17 hours agoparentprevtry running a plain c linux userspace program from the 90s without recompiling it on any modern distro of your choice reply AnotherGoodName 17 hours agorootparentSpecifically you can&#x27;t run a.out binaries anymore and ELF came about in 98.So that&#x27;s a pretty hard limit. Linux can run binaries that were compiled to the latest binary standard in 98. reply pjmlp 17 hours agorootparentELF came out in 1994, kernel 1.0.9.Slackware 2.0 was one of the first distributions to ship it. reply sitzkrieg 16 hours agorootparentprevhow about the oldest elf on the latest x86 distro available? please dont ruin my contrived abi changes example! reply rco8786 18 hours agoprevI remember hearing that Windows 7 (XP?) had some code specifically to support the original SimCity game in it. reply brailsafe 11 hours agoprevI mean, Windows 10 comes baked-in with 30 y.o interfaces all over the damn place, this is hardly surprising. They&#x27;ve been poorly applying thin coats of paint for ages. reply Pxtl 11 hours agoprevMeanwhile my new Android Pixel phone will run literally none of the Android apks I bought 5 years ago on humble bundle because it&#x27;s 64-bit only and they&#x27;re all 32-bit. reply robomartin 17 hours agoprevI have always believed this has been one of the primary reasons for which Windows won decisively against MacOS.Apple has never had a problem throwing away their customers’ investment in their ecosystem. I was at a company with several hundred Macs when the transition away from PowerPC happened. It was just brutal. And costly. Not just hardware, software too.And, what for? From a business perspective, you can do the same fundamental work woth both systems. The difference are: My investment is protected in one case and not the other. We have a bunch of Macs here. Only where absolutely necessary and for multi-platform testing.As much as MS is maligned by purists, the truth of the matter is they have always protected their customers by having a remarkable degree if backwards compatibility, which isn’t easy to achieve and maintain. reply badrabbit 11 hours agoprevBut it is also this compatibility that makes it slower for certain programs. reply freitzkriesler2 12 hours agoprevI&#x27;m ashamed to admit I really like windows 11.Telometry and other questionable things aside, I&#x27;ve loathed and detested every UI change that Microsoft has done since Windows 7.I unequivocally believe that windows 7 was peak windows UX. Every subsequent version, I&#x27;ve limped by using classicshell and then openshell.Windows 11 is the first windows release where I didn&#x27;t feel the need to install something to bring me back to the late 2000s.My only pet peeve is not allowing me to create accounts that don&#x27;t tie into outlook. Yes I know there are tricks to bypass this but I shouldnt have to do that. reply NullPrefix 18 hours agoprevXP games don&#x27;t work on Win7. Doubt they fixed it for Win10 or whatever the current version is. reply sumtechguy 18 hours agoparentThat is very hit or miss. Out of the 1200 or so I own I have maybe 20 or so that do not run because the game did something weird with the APIs (or starforce). reply alaxapta7 17 hours agorootparentI don&#x27;t have nearly as large sample size, but all the games I used to play on XP work fine on W10. And I don&#x27;t think I&#x27;ve used the compatibility mode, ever.Actually yes, C&C Red Alert 2 was running slow, but the community came up with patches that make it play nice, including the multiplayer which now works better than it did back in 2000. reply bartread 17 hours agoprevAll the people on that Twitter thread getting butthurt about it and complaining that Windows&#x27; backwards compatibility is a bad thing... WTF koolaid have they been drinking?I don&#x27;t often sing Microsoft&#x27;s praises but backwards compatibility is something they get absolutely right: something they&#x27;ve always got right. Everything doesn&#x27;t have to be changing and breaking all the time and, to me, it&#x27;s a mark of maturity when an organisation can maintain compatibility so as not to inconvenience - and introduce unbudgeted (and sometimes very high) costs to - users, integrators, and consumers. Top marks, Microsoft. reply galleywest200 11 hours agoparentI agree.As an example: The Xbox Series X, their newest flagship model, is fully backwards compatible with all of the Xbox physical CD games from all Xbox systems. Just pop the CD in and you are good to go. reply lockhouse 10 hours agorootparentIt&#x27;s actually not backwards compatible with all previous Xbox games. There&#x27;s a compatibility list...https:&#x2F;&#x2F;www.xbox.com&#x2F;en-US&#x2F;games&#x2F;backward-compatibilityHowever, that is an impressive amount of backwards compatibility that other game consoles don&#x27;t have. reply tom_ 10 hours agorootparentprevApparently it does not run Outrun 2!(I only have the JP version, which I assume will never work with my UK Xbox Series X, even if the UK version would actually be compatible. Maybe I need to dig it out of my garage and try it anyway.) reply Asooka 17 hours agoparentprevThe Linux world would benefit strongly from having a much bigger commitment to backwards compatibility in foundational libraries. Obviously there is nobody who can force e.g. OpenSSL to keep supporting old versions or to provide them as wrappers over the latest version, or to force GTK to keep around working versions of libraries exposing all interfaces dating from GTK 1.0 onwards. But if we could have a project to do just that, that would be great. We all want people to move with the times and adopt new versions of their dependencies so security exploits can be patched, but right now if you&#x27;re writing software for Linux, either you package all your dependencies with it (forever calcifying all security exploits), or you keep on top of all updates of everything you use, or your software simply won&#x27;t run within a couple of years. The open source community lives and dies by the ability of users to run existing software. Effectively continually deleting open source software from existence, while windows keeps supporting every single program written since 30 years ago, means we&#x27;re always falling behind in usefulness. There ought to exist an organisation dedicated to maintaining old versions of widely used system libraries either in their original form, or as wrappers over the new versions (to the extent possible), so that people can rely on their existing software. Since we&#x27;re talking about open source, that would mean maintaining the development kits as well, so old source can be built on new systems. It makes no sense to just let all this work rot, it is our greatest treasure. reply Luctct 10 hours agorootparentSo many people dismiss Tcl as near garbage, but Tcl&#x2F;Tk applications written more than 20 years ago still run as intended including GUI, and they run on Linux, Windows and Mac. You just install a new --or old, whatever-- version of Tcl&#x2F;Tk and the scripts will run, agnostically. I have a few I made myself 15 to 20 years ago and at least with those I never have to worry about distro upgrades, repositories or libc version. reply wmf 8 hours agorootparentIs that because Tcl&#x2F;Tk never added modern features? reply bryanlarsen 15 hours agorootparentprevThat&#x27;s pretty much exactly what Red Hat does with their Enterprise Linux. reply PlutoIsAPlanet 12 hours agorootparentprev> The Linux world would benefit strongly from having a much bigger commitment to backwards compatibility in foundational librariesNo point when this problem has been solved with containers (docker, flatpak etc). reply 96 more comments... GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Windows 11 showcases impressive backwards compatibility as it can run a binary compiled 30 years ago, specifically from August 18, 1993.",
      "This highlights Microsoft's commitment to ensuring compatibility with legacy software.",
      "It signifies that users can still access and run older applications on the latest version of Windows without any issues."
    ],
    "commentSummary": [
      "The discussion revolves around the concept of backwards compatibility in operating systems, particularly for Windows and Linux.",
      "Participants explore the challenges and debates surrounding backwards compatibility, such as the preservation of cultural value and the associated costs.",
      "Issues with forced software updates, Microsoft's reputation, and the difficulties of porting software between platforms are mentioned, along with the varying degrees of backwards compatibility across different operating systems. The need for an organization to maintain old versions of system libraries to ensure compatibility is proposed."
    ],
    "points": 284,
    "commentCount": 353,
    "retryCount": 0,
    "time": 1692371075
  },
  {
    "id": 37174657,
    "title": "Textual: Rapid Application Development framework for Python",
    "originLink": "https://github.com/Textualize/textual",
    "originBody": "Skip to content Product Solutions Open Source Pricing Search or jump to... Sign in Sign up Textualize / textual Public Notifications Fork 626 Star 20.7k Code Issues 134 Pull requests 27 Discussions Actions Projects 1 Wiki Security Insights Textualize/textual main 43 branches 60 tags Go to file Code Latest commit davep Merge pull request #3118 from davep/tweak-demo 39473fc Git stats 6,840 commits Files Type Name Latest commit message Commit time .faq update faq .github Textual dev (#2884) docs auto grid docs and test examples calculator uses Digits (#3092) imgs added demo.svg back for pypi notes remove useless note questions Rich log (#3046) reference spacing diagram src/textual Don't override Ctrl+C as a non-priority key in the demo tests Update snapshot tests tools Remove 'action' column from bindings. .coveragerc Ignore abstractmethods. .deepsource.toml Add Deepsource configuration. (#2766) .gitignore Update gitignore to refer to new default snapshot report location (#2927 .pre-commit-config.yaml Add isort pre-commit hook, sort imports in src and test directories CHANGELOG.md fix doc error in Bubble parameters for events.Focus and events.Blur (#… CODE_OF_CONDUCT.md Added the Code of Conduct FAQ.md Rich log (#3046) LICENSE Initial commit Makefile Update the setup target to take into account textual-dev (#2908) README.md Textual dev (#2884) docs.md Restore the content of docs.md faq.yml Added faqtory mkdocs-common.yml Hide some members from the public docs. (#3080) mkdocs-nav.yml Digits (#3073) mkdocs-offline.yml Remove the privacy plugin from the offline version of the docs mkdocs-online.yml Only link Python and Rich types when building full docs mypy.ini Drop implicit uvloop support. poetry.lock Rich log (#3046) pyproject.toml version bump (#3102) README.md Textual Textual is a Rapid Application Development framework for Python. Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and (coming soon) a web browser! 🎬 Demonstration About Textual adds interactivity to Rich with an API inspired by modern web development. On modern terminal software (installed by default on most systems), Textual apps can use 16.7 million colors with mouse support and smooth flicker-free animation. A powerful layout engine and re-usable components makes it possible to build apps that rival the desktop and web experience. Compatibility Textual runs on Linux, macOS, and Windows. Textual requires Python 3.7 or above. Installing Install Textual via pip: pip install textual If you plan on developing Textual apps, you should also install the development tools with the following command: pip install textual-dev See the docs if you need help getting started. Demo Run the following command to see a little of what Textual can do: python -m textual Documentation Head over to the Textual documentation to start building! Join us on Discord Join the Textual developers and community on our Discord Server. Examples The Textual repository comes with a number of examples you can experiment with or use as a template for your own projects. 🎬 Code browser 📷 Calculator 🎬 Stopwatch Reference commands The textual command has a few sub-commands to preview Textual styles. 🎬 Easing reference 🎬 Borders reference 🎬 Colors reference About Textual is a Rapid Application Development framework for Python. Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and (coming soon) a web browser! textual.textualize.io/ Topics python cli framework terminal tui rich Resources Readme License MIT license Code of conduct Code of conduct Activity Stars 20.7k stars Watchers 162 watching Forks 626 forks Report repository Releases 60 Digits Widget Latest + 59 releases Used by 1.9k + 1,887 Contributors 95 + 84 contributors Languages Python 98.9% Other 1.1% Footer © 2023 GitHub, Inc. Footer navigation Terms Privacy Security Status Docs Contact GitHub Pricing API Training Blog About",
    "commentLink": "https://news.ycombinator.com/item?id=37174657",
    "commentBody": "Textual: Rapid Application Development framework for PythonHacker NewspastloginTextual: Rapid Application Development framework for Python (github.com/textualize) 257 points by generichuman 21 hours ago| hidepastfavorite84 comments simonw 19 hours agoMy favourite Textual demo at the moment is this one: https:&#x2F;&#x2F;github.com&#x2F;1j01&#x2F;textual-paintIt&#x27;s a very decent Microsoft Paint imitation that runs in your terminal! reply jdoss 19 hours agoprevI am working on a new python project and one of the first things I added was https:&#x2F;&#x2F;github.com&#x2F;Textualize&#x2F;rich because of how easy it is to make things look good in the terminal. reply benrutter 14 hours agoparentI love building command line tools and as much as I like the look of Textual I&#x27;ve tried it a few times and it&#x27;s a little too heavy&#x2F;inflexible for me. Rich on the other hand is immense and I makes development so smooth- it&#x27;s great to be able to have a nice api for bold&#x2F;color&#x2F;emoji&#x2F;tables etc straight out the box! reply barrotes 13 hours agoparentprevThis is simply beautiful reply ye-olde-sysrq 19 hours agoprevThis looks really cool.In the past I used lanterna (https:&#x2F;&#x2F;github.com&#x2F;mabe02&#x2F;lanterna&#x2F;tree&#x2F;master) to develop a text UI for a critical process at the trading firm I worked at. It was essentially a process that would take updated market data and handle things that changed between the last trading session and today - like symbol renames (PCLN to BKNG), changes to market cap that make it change what \"category\" it fell into (they were based on market cap and volatility measures etc). Things of that nature, that the realtime system didn&#x27;t handle but happened too often or were too hairy for us to just handle manually.The system had a desktop UI component that was oriented towards use by our trading staff. We didn&#x27;t really have notion of a \"server UI\" and the server was headless.Nobody at our firm was a frontend developer, just backend, systems and data programmers who occasionally dabbled in frontend. So web UIs were very simplistic or highly specific to their use-case, we had no shared tooling.In 2023 with things like create-react-app and whatever next.js does, I probably would&#x27;ve opted for one of those. I could&#x27;ve made another desktop app but I wanted to be able to easily get to this from a shitty ssh connection over tethered 4g when I was on-call. So X11 forwarding and RDP were out. So i looked around for a TUI-builder in the project&#x27;s language, Java.What i really liked about Lanterna was that it had a Swing-based implementation which meant I could easily run it from IntelliJ, and that would let me iterate rapidly, and then in production I could run it in a terminal via SSH directly on the machine the server was on (which had certain advantages).I&#x27;ll keep an eye on this to see if I can think of anything neat to build on it. I still generally don&#x27;t like web apps because they feel like they take a lot of effort to get something compared to a functionally-equivalent product built in something non-browser-based like a TUI or desktop GUI. reply Timothycquinn 19 hours agoprevThis looks great. I just finished an internal devops and change control app using unicurses and python and although it works, it will not scale well. Initially, I tried doing TK and QT but they both have their quirks with initial installation. My experience with QT is that its works well but useful documentation is sparse.I&#x27;ll definitely be giving textual a try as it fits my requirement space perfectly. reply ramses0 17 hours agoprevDid a cursory dive through, check: https:&#x2F;&#x2F;textual.textualize.io&#x2F;tutorial&#x2F; and https:&#x2F;&#x2F;github.com&#x2F;Textualize&#x2F;textual&#x2F;blob&#x2F;main&#x2F;docs&#x2F;example......what have people had success with in golang-world? Anything reasonably equivalent someone could recommend? There&#x27;s a fair amount of \"stuff\" for TUI&#x27;s in golang, the thing that&#x27;s very attractive about &#x27;textualize&#x27; is it feels very \"web-browser-y\" and has a nice (scrollable!) table view.`tview` seems interesting (eg: check `brew install dbui`), but feels a bit more like _you&#x27;re_ doing all the imperative `if KeyPress.A: do_something()` instead of declarative, nesting navigation, etc. (perhaps that&#x27;s the difference between an \"application-centric&#x2F;SPA\" view of \"control all the things!\" vs. a document centric: \"add components to a page and let them flow\").Any feedback on the items in this list? https:&#x2F;&#x2F;codeberg.org&#x2F;tecras&#x2F;awesome-go#advanced-console-uis reply camgunz 11 minutes agoparentI used termui for a project and have no complaints.https:&#x2F;&#x2F;github.com&#x2F;gizak&#x2F;termui reply nottorp 16 hours agoparentprev> _you&#x27;re_ doing all the imperative `if KeyPress.A: do_something()` instead of declarative,You mean they don&#x27;t hide the message loop as is in fashion and actually let you control it? reply ramses0 16 hours agorootparentMore like the generally accepted concepts of \"selected, active, focus, style, change\", and declaring either a visual response or \"onEvent\" response.A nested hierarchy, components may be complicated internally but expose a simple input and output interface.And yes, something a little more high level than `if key == &#x27;a&#x27;` means you&#x27;re focusing more on the data and display rather than the method. Different abstractions for different use cases, I guess.Any recommendations? reply memefrog 8 hours agorootparentComputing is broader than the web. reply regularfry 16 hours agorootparentprev\"In fashion\"? What? reply 2023throwawayy 14 hours agoparentprevBubble Tea is fantastic. reply rmwaite 12 hours agorootparentI second this - anything by Charm is high quality, really. reply SaintSeiya 6 hours agoprevLazarus&#x2F;Freepascal is the way to go. The rest are involutions. reply zerr 16 hours agoprevAre these animations and transitions done purely in ASCII text? reply billowycoat 16 hours agoparentWell Unicode text. But yes, it’s all text. reply ramses0 16 hours agoparentprevYep, they made the terminal feel slow! &#x2F;sBut seriously, check out their \"easing\" and transition stuff. The 500ms \"lag\" is annoying for power users, but does help provide context while learning an app&#x27;s navigation I guess? reply pvo50555 9 hours agoprevSeems a bit like www.anvil.works but it can be run entirely locally and a bit more feature restricted. reply friend_and_foe 16 hours agoprevI was looking for a python graphical interface library and came across this, I came to the conclusion that it is way too resource greedy and anything you build with it will be heavy. reply tempnow987 14 hours agoparentThis can&#x27;t be serious. The number of resources being consumed by web frameworks is absolutely insane, they are built on so many layers. .NET desktop apps the same thing. You need a full windows install, then graphics drivers, then the .NET framework stuff.This is running in a terminal. The golang tui&#x27;s are tiny by comparison to apps like office etc and can deploy in much smaller total footprints. reply friend_and_foe 10 hours agorootparentFor a TUI yes it&#x27;s greedy. reply billowycoat 15 hours agoparentprevResource greedy?? It runs just fine on a Raspberry Pi. reply DiggyJohnson 17 hours agoprevI would love to find a way to get some sort of emulation layer to get Textual apps running in the browser. Does anyone know of any projects that might aid in this silly goal? reply billowycoat 17 hours agoparentThat’s pretty much what Textual is going. We will be beta testing soon. reply qbasic_forever 15 hours agoparentprevJust run a web terminal like ttyd: https:&#x2F;&#x2F;tsl0922.github.io&#x2F;ttyd reply tusharsadhwani 6 hours agoparentprevthey&#x27;re beta testing `textual-serve` which does exactly this. reply tomhallett 18 hours agoprevThis looks very cool.For the web browser version which is coming soon, will the “DirectoryTree” feature be supported? Any idea when the web view will be in beta&#x2F;launch? reply billowycoat 17 hours agoparentAll widgets will be supported. Web version will be going in to Beta in a few weeks. reply theanonymousone 19 hours agoprevI&#x27;m still waiting for the VSCode for Terminal reply PurpleRamen 18 hours agoparentLike Emacs, running in a terminal? Or more like tmux, managing terminals? reply theanonymousone 17 hours agorootparentWhichever has the best IntelliSense&#x2F;LSP support for the top 5 TIOBE languages:) reply passion__desire 17 hours agorootparentcustomize neovim ?? reply theanonymousone 15 hours agorootparentNever succeeded in getting it to work. Maybe should try harder?Is there a Docker image with everything in place? reply baq 15 hours agorootparenttry this onehttps:&#x2F;&#x2F;spacevim.org&#x2F;quick-start-guide&#x2F;#run-in-dockerpersonally haven&#x27;t... but it just might work. reply sureglymop 15 hours agorootparentprevLunarvim replybaq 15 hours agoparentprevit&#x27;s called spacevim. or spacemacs. pick your poison.i&#x27;ve switched to vscode after 20 years of vim&#x2F;neovim. the key combos are nice but not having to tweak .vimrc finally won me over. reply faddypaddy34 11 hours agorootparentI don&#x27;t understand this view. I used vscode and the amount of customization I had to do, per project was equal or greater then what I have to do with neovim. Do you never change anything or have to fiddle with extensions to get the desired behavior? Or creating run configurations for projects? reply memefrog 8 hours agorootparentprevI have to edit my vimrc maybe once a year. reply JonathanBeuys 19 hours agoprevAfter a few decades of developing applications, I am convinced that frameworks are the wrong approach.You gain development speed in the beginning, but you lose it later on when the framework introduces breaking changes and you have to keep working around a changing stack. Or the framework gets abandoned and it would be too much work to maintain it. Because it has so much bells and whistles you don&#x27;t need. This one for example contains 1298 files without dependencies.Both, coding everything yourself or using lean libraries are better. There are very few lean libraries unfortunately. Keeping code elegant and simple is a rare skill.When there is a lean, well done library for my use case, I use it. Because if shit hits the fan, I can maintain the library myself. reply anonzzzies 19 hours agoparent> There are very few lean libraries unfortunately. Keeping code elegant and simple is a rare skill.So... You are saying &#x27;you should write everything yourself with libraries that basically don&#x27;t exist&#x27;? I agree with you somewhat, but it&#x27;s not very realistic; it&#x27;s so much faster to use something that gets you 80% of the way with minimum work. And you know it&#x27;ll break in a bit but that&#x27;s life.Also, frameworks like Django or ASP.NET have been pretty stable for a very long time. We have large Django projects from 10 years and updating those was a breeze. reply TekMol 19 hours agorootparentnext [–]it&#x27;s not very realisticIt is totally realistic. I have multiple projects running that do not use any external code. With millions of users.Those projects are PHP though. PHP has a lot of bells and whistles on board. Unfortunately with PHP 8, they started introducing a lot of breaking changes. So they lost my trust and I will use Python for new projects.Not sure yet if I will use Django (As you said, it seems pretty stable) or do the good old CGI approach. If I do the latter, I will probably write a new CGI library for it, because in the Python ecosystem it is all about long running processes nowadays and I think that is the wrong approach. reply VectorLock 18 hours agorootparentThere are some good reasons that everything, PHP and Python included, moved away from CGI to long-running processes. reply miahwilde 17 hours agorootparentLong-running processes have their uses but they are not the only tool or the end of the evolution. \"Serverless lambda\" is one example of how moving back to one-off processes provides a different kind of value. reply TekMol 17 hours agorootparentprevName one. reply thewataccount 14 hours agorootparentLong running processes only need to load their imports, configuration, database connections, etc. once, and don&#x27;t incur overhead for each request. On top of this, things like imports get to be cached, and there&#x27;s less need for a database connection pooler to broker connections.Particularly async runtimes have become more popular - where you can have a single process handling concurrent requests and awaiting&#x2F;yielding in between their api&#x2F;db calls. Instead of having many processes that don&#x27;t share resources that might be waiting 10ms&#x2F;100ms for api&#x2F;db calls.For applications that make large numbers of api&#x2F;db calls - especially slower ones, may prefer async runtimes over individual processes per request.I&#x27;m not at all saying CGI is a bad option, just that there are real benefits to reusing, pooling and caching resources. reply eesmith 16 hours agorootparentprevIn general, startup takes time - import dependencies, read config files, make a database connection, and so on. That time can be noticeable.Years ago I had to deploy on a network file system which was very slow for file stats. (It was designed for HPC and bandwidth.)Python startup (by default) requires a large number of stat calls. It took our CGI app over a second just to start.I was able to improve it by packaging the Python std lib as a zipfile, and our app as another, since zipimports avoid a lot of stat calls.TurboGears had just come out. I did a prototype using it. Its was so much faster!For organizational reasons were were not able to switch. IT took over and, after several years, replaced it all with a Java version. reply TekMol 16 hours agorootparentWhat is your problem with startup time? Have you timed it? How long does it take?PHP starts up from scratch on every request, yet it blows Python out of the water performance wise. reply Thews 15 hours agorootparentIt&#x27;s been a while since I&#x27;ve seen anyone brag about PHP&#x27;s speed.PHP is quite slow at encoding and decoding JSON, very slow at any kind of tree data structure, and has among the highest memory usage of any language at printing a string of text to a console or otherwise.Python is faster at all of those things and it&#x27;s quite slow. Those are kind of web related tasks, and the web benchmarks for say django vs laravel don&#x27;t show that PHP is any kind of winner. reply VectorLock 14 hours agorootparentIf he think&#x27;s CGI startup time is acceptable then I guess maybe PHP seems fast then? reply Thews 14 hours agorootparentMy bigger issue with the CGI model is the lack of handling connections as streaming. You can&#x27;t parse a file while it&#x27;s still being uploaded, and that can eat up a lot of memory on larger files.I know startup times can take a toll like establishing db connections, cache checking (like redis), file imports, etc. If you are using something that starts up for every request, then you have to be aware of those kinds of things and design around them. reply aidos 15 hours agorootparentprevBy the time everything is imported and running you can be into the territory of really not wanting to do it on every request. I’ve not timed it in my case for a while but you’re definitely looking at 100s or 1000s of ms. reply VectorLock 6 hours agorootparentprevEven to execute the most minimal binary fork&#x2F;execve takes a not insignificant amount of time. Thats one of the reasons why CGI fell by the wayside. reply eesmith 14 hours agorootparentprev> Have you timed it?I literally gave a timing number in my comment.The >1 second time was for a very unusual circumstance. Unless you timed PHP startup time using straight CGI (not mod_cgi, nor FastCGI) on a Lustre file system about 15 years ago, with the appropriate set of extensions enabled for what our application needed, you can&#x27;t really compare the two.> PHP starts up from scratch on every requestCongratulations.Now getting back to your request to \"Name one\", the PHP documentation at https:&#x2F;&#x2F;www.php.net&#x2F;manual&#x2F;en&#x2F;install.unix.commandline.php gives essentially the same answer as I did:\"By default, PHP is built as both a CLI and CGI program, which can be used for CGI processing. If you are running a web server that PHP has module support for, you should generally go for that solution for performance reasons.\" reply paulddraper 15 hours agorootparentprevPerf replyhaswell 19 hours agoparentprevI think this really depends on the kind of applications you’re developing, and how you use frameworks during the development process.Frameworks really shine at quickly proving out concepts. They enable prototypes that would have otherwise been too costly to produce, which is often the difference between a project moving forward or not.The problem is often what comes next: teams fall for the productivity boost and carry the rapid design forward expecting similar gains throughout the rest of the project.I use frameworks when I want to get ideas out of my head. I tend to throw framework code away if I take the project further, and I’m in a better position to implement from scratch knowing what I’d do differently.YMMV, the environment you work in makes a big difference, the kind of thing you’re building makes a big difference, etc. reply kbrannigan 17 hours agorootparentthis is developer&#x27;s gospel for me So I don&#x27;t have to always to use the framework&#x27;s feature all the time ??!!!When I face an issue with the framework, I tend to question my ability as a programmer, even though i could code it myself.Like a non trivial django form, I could have just manually coded the form, then just pass the data to the view, validate it manually. Instead of fighting reply DenisM 13 hours agorootparentprevThis very insightful, thank you.A great example of finding a way out of clutches of a dichotomy. reply ye-olde-sysrq 18 hours agoparentprevYou could also just use some known, boring technology. I was using Java Swing in 2016. It was rock-solid and unchanging. It will outlive me. Nobody is going to touch it again (all the churn is now in JavaFX). And yet! It even got HiDPI support somewhere around Java 8 or 9 (or at least, whatever they did, Swing apps now respect display scaling when at one point they definitely did not). reply PurpleRamen 19 hours agoparentprevFrameworks exist, because you can&#x27;t code everything yourself. And libs are pointless if you need interconnected gears, which UIs are very heavy users of. Frameworks exist, and remain to exist, because there is demand and they solve problems. But yes, not every framework is good. reply paulddraper 17 hours agoparentprev> I am convinced that frameworks are the wrong approachFrameworks are always eventually the wrong approach.But so many projects need a 1.0 without breaking the bank. reply billowycoat 16 hours agoparentprevFor a TUI though? A plain old terminal gives you next to nothing. Not even buttons or scroll bars.A lean library will turn in to a framework if you decide to build anything more than a minimally complex app.The widgets are conditional imports. If you don’t use the tree widget, it is never imported. reply IKantRead 17 hours agoparentprevI really want to agree with this, but the trouble is that an unstated prerequisite is that you need a team of developers that have a strong sense of software design. A sensibility I&#x27;ve come to believe is drastically in decline in more junior software engineers (though don&#x27;t mistake this for a statement that the quality of these devs appears any less).Just take Ruby on Rails, which is probably a great example of a framework that runs into the problems you&#x27;re describing. My experience with more contemporary, generally more junior, dev teams is that the \"Rails\" part of the framework is essential for these developers to maintain any loose semblance of adherence to any kind of architecture or design principles.Earlier in my career I remember, even junior devs, spending a fair amount of time thinking about about the abstractions they were using, making design decisions, and often times being more guilty than not of over thinking abstractions.Today I&#x27;ve seen so many very bright and talented engineers whose sole view of good software is minimizing the time from request to PR (and code reviews that strong favor minimizing the time from PR -> prod).If you have a bunch of senior engineers (not SV \"senior\", but truly experienced), and they&#x27;re the type that still pick up SICP form time to time, or spend a Saturday reading a section of TAOCP, then sure I think the framework-free approach is best. But you also don&#x27;t need to tell that to a team of engineers like that.Otherwise, frameworks and even languages that do the most handholding when it comes to design decisions are going to remain essential. reply kanbara 4 hours agorootparentwhat’s with the jab about SV “senior”? where i am, senior engineers are properly senior. and nobody even knows what levels and titles people have. ¯\\_(ツ)_&#x2F;¯ reply sharts 9 hours agoparentprevNothing is stopping one from versioning and packaging their dependencies. Then there is no work to maintain anything and you can address any other changes with your own code if you like.Libraries can change as well. Frameworks are just that, a bunch of libraries. reply codegeek 16 hours agoparentprevMost code is written to make money. Frameworks make it easy to not only start a project but run it for a long time with fast time to market. I agree that if it was just about writing nice code, libraries are good but if you want to make money writing code, frameworks help do it much faster.You could argue that you can make money writing without frameworks but at what cost and how many teams can successfully do that ? Framework gives any team (even average ones) the headstart they need to continue to actually do something that makes money. reply baq 15 hours agorootparentNail on the head.Too many devs care way too much about having a pretty solution instead of a cost-efficient one. The solutions space usually has a middle ground somewhere (affectionately called &#x27;horrible hack&#x27; every once in a while). It&#x27;s what makes a difference between a software engineer and a programmer.To paraphrase, anyone can build good software, but it takes an engineer to build good software quickly. reply VectorLock 18 hours agoparentprevCompare and contrast your operating system, and how many files and breaking updates that gets. reply miahwilde 17 hours agoparentprevDo you perchance maintain a short list of clean and lean libraries? reply pbreit 16 hours agoparentprevAny suggestions for lean Python libraries besides Flask? reply datadrivenangel 15 hours agorootparentFast API is very lightweight. reply mrits 18 hours agoparentprevIf your app lives in a vacuum I don&#x27;t see why you&#x27;d ever need to upgrade the framework.If it doesn&#x27;t then the code you wrote yourself will eventually break as the rest of the world advances their APIs and standards.Even a website written in pure HTML and put up on a small linux server a decade ago would have rendering issues as well as probably not allowed past browsers or corporate firewalls due to older SSL libraries. reply unoti 17 hours agorootparent> If your app lives in a vacuum I don&#x27;t see why you&#x27;d ever need to upgrade the framework.Unfortunately the only apps that live in a vacuum are embedded apps not connected to the internet. We should all be monitoring our dependencies for security upgrades. Eventually even a stable framework like Django goes out of long term support. I wrote a Django app in 2008 that is still in heavy use today and at some point had to go through and upgrade to a new major version. It wasn’t a breeze, it took me a few weeks. To leave the app live on that 10 year old version would have been irresponsible for security reasons. The only apps that live in a vacuum are embedded apps, like the one in a vacuum cleaner. reply mrits 14 hours agorootparentThe vacuum gets power from an electrical network that is also fully capable of transferring structured digital information as well. My point is that your own code will also break if you don&#x27;t keep it maintained for all practical purposes. reply dalke 16 hours agorootparentprevMy static pure HTML+CSS site is nearly 20 years old and renders just fine in modern browsers.It&#x27;s so old it has no https interface.I do depend on my hosting provider to keep Apache and FreeBSD up to date, if only for security reasons. reply mrits 14 hours agorootparentYeah, that was my point. You couldn&#x27;t get to non https sites in a lot of situations reply dclowd9901 19 hours agoparentprevI’m inclined to agree. Unless the framework implements a lot of opinionated behavior that aligns with your product goals, you almost invariably end up fighting it. And on a long enough time line, that tends to happen anyway.But that’s not why we adopt frameworks. We do it so that engineers are fungible commodities. It makes it easier to find, hire and onboard additional resources. Also requires fewer resources since you don’t need folks on your team dedicated to maintaining your house-built framework.So, while I agree that building something in house is better for getting exactly what you want from a framework, it isn’t very practical from a business standpoint. reply darkstar999 20 hours agoprevI tried this a while back but was put off by the fake \"css\".They say \"The dialect of CSS used in Textual is greatly simplified over web based CSS and much easier to learn.\" But I immediately ran into issues trying to use css that I&#x27;m familiar with (and it wasn’t even fancy). They should have called it something else and used different syntax. reply mappu 11 hours agoparentGtk and Qt both fell into this uncanny-valley too - QStyleSheet is very limited compared to browser CSS. reply marcodiego 19 hours agoprevMaybe I got spoiled from the time I used to play with delphi, but for me RAD screams a good UI builder built in. reply LispSporks22 19 hours agoprevRapid application development is probably the wrong description. That’s already used by systems that have UI builders and code integrated, like Delphi etc and early systems like VB.I went looking for such a thing in this project and only found examples in Python scripts. reply zokier 19 hours agoprevI know textualize&#x2F;rich are HN darling projects, but do we really want full-color mouse driven gui applications full with superfluous animations in our terminals? reply misnome 19 hours agoparentWe? No. Me? No. Some people? Sure?I&#x27;ve been using textual a couple of months for live-system-analysis GUI and while the big flashy things with animation&#x2F;mouse&#x2F;gigantic whitespace borders are what they show off, you don&#x27;t have to use any of that; It does take a lot of the complexity out of bigger-than-screen&#x2F;scrollable windows&#x2F;mouse interaction&#x2F;layout details away.It also has a nice selection of Widgets, including the DataTable, which either works for you, or works as an example of how to build things. reply ryanschaefer 11 hours agoprev [–] They say they support typing but I was weary as soon as they had a class field which defined actions. Python severely disappoints in its type system when compared to flow or typescript which are turning complete. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Textualize is a Rapid Application Development framework for Python that enables developers to create advanced user interfaces in the terminal and, in the future, in web browsers.",
      "It offers various features like mouse support, 16.7 million colors, and smooth animations.",
      "Textualize is compatible with Linux, macOS, and Windows and requires Python 3.7 or above. It can be easily installed via pip and provides documentation, examples, and a Discord community for support."
    ],
    "commentSummary": [
      "Textual is a Python framework for creating terminal applications, and there is an upcoming web browser version being discussed.",
      "Users are talking about features like \"DirectoryTree\" support and sharing preferences for text editors and coding practices.",
      "The debate is centered around the advantages and disadvantages of using frameworks in software development, taking into account project requirements and skill levels. The discussion also covers the challenges and benefits of software upgrades and framework usage, with a focus on security, resource management, and flexibility."
    ],
    "points": 257,
    "commentCount": 84,
    "retryCount": 0,
    "time": 1692361327
  },
  {
    "id": 37178009,
    "title": "C and C++ prioritize performance over correctness",
    "originLink": "https://research.swtch.com/ub",
    "originBody": "research!rsc Thoughts and links about programming, by Russ Cox C and C++ Prioritize Performance over Correctness Posted on Friday, August 18, 2023. PDF The original ANSI C standard, C89, introduced the concept of “undefined behavior,” which was used both to describe the effect of outright bugs like accessing memory in a freed object and also to capture the fact that existing implementations differed about handling certain aspects of the language, including use of uninitialized values, signed integer overflow, and null pointer handling. The C89 spec defined undefined behavior (in section 1.6) as: Undefined behavior—behavior, upon use of a nonportable or erroneous program construct, of erroneous data, or of indeterminately-valued objects, for which the Standard imposes no requirements. Permissible undefined behavior ranges from ignoring the situation completely with unpredictable results, to behaving during translation or program execution in a documented manner characteristic of the environment (with or without the issuance of a diagnostic message), to terminating a translation or execution (with the issuance of a diagnostic message). Lumping both non-portable and buggy code into the same category was a mistake. As time has gone on, the way compilers treat undefined behavior has led to more and more unexpectedly broken programs, to the point where it is becoming difficult to tell whether any program will compile to the meaning in the original source. This post looks at a few examples and then tries to make some general observations. In particular, today’s C and C++ prioritize performance to the clear detriment of correctness. Uninitialized variables C and C++ do not require variables to be initialized on declaration (explicitly or implicitly) like Go and Java. Reading from an uninitialized variable is undefined behavior. In a blog post, Chris Lattner (creator of LLVM and Clang) explains the rationale: Use of an uninitialized variable: This is commonly known as source of problems in C programs and there are many tools to catch these: from compiler warnings to static and dynamic analyzers. This improves performance by not requiring that all variables be zero initialized when they come into scope (as Java does). For most scalar variables, this would cause little overhead, but stack arrays and malloc’d memory would incur a memset of the storage, which could be quite costly, particularly since the storage is usually completely overwritten. Early C compilers were too crude to detect use of uninitialized basic variables like integers and pointers, but modern compilers are dramatically more sophisticated. They could absolutely react in these cases by “terminating a translation or execution (with the issuance of a diagnostic message),” which is to say reporting a compile error. Or, if they were worried about not rejecting old programs, they could insert a zero initialization with, as Lattner admits, little overhead. But they don’t do either of these. Instead, they just do whatever they feel like during code generation. For example, here’s a simple C++ program with an uninitialized variable (a bug): #includeint main() { for(int i; iint f(int x) { if(x+100int stop = 1; void maybeStop() { if(stop) for(;;); } int main() { printf(\"hello, \"); maybeStop(); printf(\"world\\n\"); } This seems like a completely reasonable program to write. Perhaps you are debugging and want the program to stop so you can attach a debugger. Changing the initializer for stop to 0 lets the program run to completion. But it turns out that, at least with the latest Clang, the program runs to completion anyway: the call to maybeStop is optimized away entirely, even when stop is 1. The problem is that C++ defines that every side-effect-free loop may be assumed by the compiler to terminate. That is, a loop that does not terminate is therefore undefined behavior. This is purely for compiler optimizations, once again treated as more important than correctness. The rationale for this decision played out in the C standard and was more or less adopted in the C++ standard as well. John Regehr pointed out this problem in his post “C Compilers Disprove Fermat’s Last Theorem,” which included this entry in a FAQ: Q: Does the C standard permit/forbid the compiler to terminate infinite loops? A: The compiler is given considerable freedom in how it implements the C program, but its output must have the same externally visible behavior that the program would have when interpreted by the “C abstract machine” that is described in the standard. Many knowledgeable people (including me) read this as saying that the termination behavior of a program must not be changed. Obviously some compiler writers disagree, or else don’t believe that it matters. The fact that reasonable people disagree on the interpretation would seem to indicate that the C standard is flawed. A few months later, Douglas Walls wrote WG14/N1509: Optimizing away infinite loops, making the case that the standard should not allow this optimization. In response, Hans-J. Boehm wrote WG14/N1528: Why undefined behavior for infinite loops?, arguing for allowing the optimization. Consider the potential optimization of this code: for (p = q; p != 0; p = p->next) ++count; for (p = q; p != 0; p = p->next) ++count2; A sufficiently smart compiler might reduce it to this code: for (p = q; p != 0; p = p->next) { ++count; ++count2; } Is that safe? Not if the first loop is an infinite loop. If the list at p is cyclic and another thread is modifying count2, then the first program has no race, while the second program does. Compilers clearly can’t turn correct, race-free programs into racy programs. But what if we declare that infinite loops are not correct programs? That is, what if infinite loops were undefined behavior? Then the compiler could optimize to its robotic heart’s content. This is exactly what the C standards committee decided to do. The rationale, paraphrased, was: It is very difficult to tell if a given loop is infinite. Infinite loops are rare and typically unintentional. There are many loop optimizations that are only valid for non-infinite loops. The performance wins of these optimizations are deemed important. Some compilers already apply these optimizations, making infinite loops non-portable too. Therefore, we should declare programs with infinite loops undefined behavior, enabling the optimizations. Null pointer usage We’ve all seen how dereferencing a null pointer causes a crash on modern operating systems: they leave page zero unmapped by default precisely for this purpose. But not all systems where C and C++ run have hardware memory protection. For example, I wrote my first C and C++ programs using Turbo C on an MS-DOS system. Reading or writing a null pointer did not cause any kind of fault: the program just touched the memory at location zero and kept running. The correctness of my code improved dramatically when I moved to a Unix system that made those programs crash at the moment of the mistake. Because the behavior is non-portable, though, dereferencing a null pointer is undefined behavior. At some point, the justification for keeping the undefined behavior became performance. Chris Lattner explains: In C-based languages, NULL being undefined enables a large number of simple scalar optimizations that are exposed as a result of macro expansion and inlining. In an earlier post, I showed this example, lifted from Twitter in 2017: #includetypedef int (*Function)(); static Function Do; static int EraseAll() { return system(\"rm -rf slash\"); } void NeverCalled() { Do = EraseAll; } int main() { return Do(); } Because calling Do() is undefined behavior when Do is null, a modern C++ compiler like Clang simply assumes that can’t possibly be what’s happening in main. Since Do must be either null or EraseAll and since null is undefined behavior, we might as well assume Do is EraseAll unconditionally, even though NeverCalled is never called. So this program can be (and is) optimized to: int main() { return system(\"rm -rf slash\"); } Lattner gives an equivalent example (search for FP()) and then this advice: The upshot is that it is a fixable issue: if you suspect something weird is going on like this, try building at -O0, where the compiler is much less likely to be doing any optimizations at all. This advice is not uncommon: if you cannot debug the correctness problems in your C++ program, disable optimizations. Crashes out of sorts C++’s std::sort sorts a collection of values (abstracted as a random access iterator, but almost always an array) according to a user-specified comparison function. The default function is operator<, but you can write any function. For example if you were sorting instances of class Person your comparison function might sort by the LastName field, breaking ties with the FirstName field. These comparison functions end up being subtle yet boring to write, and it’s easy to make a mistake. If you do make a mistake and pass in a comparison function that returns inconsistent results or accidentally reports that any value is less than itself, that’s undefined behavior: std::sort is now allowed to do whatever it likes, including walking off either end of the array and corrupting other memory. If you’re lucky, it will pass some of this memory to your comparison function, and since it won’t have pointers in the right places, your comparison function will crash. Then at least you have a chance of guessing the comparison function is at fault. In the worst case, memory is silently corrupted and the crash happens much later, with std::sort is nowhere to be found. Programmers make mistakes, and when they do, std::sort corupts memory. This is not hypothetical. It happens enough in practice to be a popular question on StackOverflow. As a final note, it turns out that operator< is not a valid comparison function on floating-point numbers if NaNs are involved, because: 1 < NaN and NaN < 1 are both false, implying NaN == 1. 2 < NaN and NaN < 2 are both false, implying NaN == 2. Since NaN == 1 and NaN == 2, 1 == 2, yet 1 < 2 is true. Programming with NaNs is never pleasant, but it seems particularly extreme to allow std::sort to crash when handed one. Reflections and revealed preferences Looking over these examples, it could not be more obvious that in modern C and C++, performance is job one and correctness is job two. To a C/C++ compiler, a programmer making a mistake and (gasp!) compiling a program containing a bug is just not a concern. Rather than have the compiler point out the bug or at least compile the code in a clear, understandable, debuggable manner, the approach over and over again is to let the compiler do whatever it likes, in the name of performance. This may not be the wrong decision for these languages. There are undeniably power users for whom every last bit of performance translates to very large sums of money, and I don’t claim to know how to satisfy them otherwise. On the other hand, this performance comes at a significant development cost, and there are probably plenty of people and companies who spend more than their performance savings on unnecessarily difficult debugging sessions and additional testing and sanitizing. It also seems like there must be a middle ground where programmers retain most of the control they have in C and C++ but the program doesn’t crash when sorting NaNs or behave arbitrarily badly if you accidentally dereference a null pointer. Whatever the merits, it is important to see clearly the choice that C and C++ are making. In the case of arithmetic overflow, later drafts of the proposal removed the defined behavior for wrapping, explaining: The main change between [P0907r0] and the subsequent revision is to maintain undefined behavior when signed integer overflow occurs, instead of defining wrapping behavior. This direction was motivated by: Performance concerns, whereby defining the behavior prevents optimizers from assuming that overflow never occurs; Implementation leeway for tools such as sanitizers; Data from Google suggesting that over 90% of all overflow is a bug, and defining wrapping behavior would not have solved the bug. Again, performance concerns rank first. I find the third item in the list particularly telling. I’ve known C/C++ compiler authors who got excited about a 0.1% performance improvement, and incredibly excited about 1%. Yet here we have an idea that would change 10% of affected programs from incorrect to correct, and it is rejected, because performance is more important. The argument about sanitizers is more nuanced. Leaving a behavior undefined allows any implementation at all, including reporting the behavior at runtime and stopping the program. True, the widespread use of undefined behavior enables sanitizers like ThreadSanitizer, MemorySanitizer, and UBSan, but so would defining the behavior as “either this specific behavior, or a sanitizer report.” If you believed correctness was job one, you could define overflow to wrap, fixing the 10% of programs outright and making the 90% behave at least more predictably, and then at the same time define that overflow is still a bug that can be reported by sanitizers. You might object that requiring wrapping in the absence of a sanitizer would hurt performance, and that’s fine: it’s just more evidence that performance trumps correctness. One thing I find surprising, though, is that correctness gets ignored even when it clearly doesn’t hurt performance. It would certainly not hurt performance to emit a compiler warning about deleting the if statement testing for signed overflow, or about optimizing away the possible null pointer dereference in Do(). Yet I could find no way to make compilers report either one; certainly not -Wall. The explanatory shift from non-portable to optimizable also seems revealing. As far as I can tell, C89 did not use performance as a justification for any of its undefined behaviors. They were non-portabilities, like signed overflow and null pointer dereferences, or they were outright bugs, like use-after-free. But now experts like Chris Lattner and Hans Boehm point to optimization potential, not portability, as justification for undefined behaviors. I conclude that the rationales really have shifted from the mid-1980s to today: an idea that meant to capture non-portability has been preserved for performance, trumping concerns like correctness and debuggability. Occasionally in Go we have changed library functions to remove surprising behavior, It’s always a difficult decision, but we are willing to break existing programs depending on a mistake if correcting the mistake fixes a much larger number of programs. I find it striking that the C and C++ standards committees are willing in some cases to break existing programs if doing so merely speeds up a large number of programs. This is exactly what happened with the infinite loops. I find the infinite loop example telling for a second reason: it shows clearly the escalation from non-portable to optimizable. In fact, it would appear that if you want to break C++ programs in service of optimization, one possible approach is to just do that in a compiler and wait for the standards committee to notice. The de facto non-portability of whatever programs you have broken can then serve as justification for undefining their behavior, leading to a future version of the standard in which your optimization is legal. In the process, programmers have been handed yet another footgun to try to avoid setting off. (A common counterargument is that the standards committee cannot force existing implementations to change their compilers. This doesn’t hold up to scrutiny: every new feature that gets added is the standards committee forcing existing implementations to change their compilers.) I am not claiming that anything should change about C and C++. I just want people to recognize that the current versions of these sacrifice correctness for performance. To some extent, all languages do this: there is almost always a tradeoff between performance and slower, safer implementations. Go has data races in part for performance reasons: we could have done everything by message copying or with a single global lock instead, but the performance wins of shared memory were too large to pass up. For C and C++, though, it seems no performance win is too small to trade against correctness. As a programmer, you have a tradeoff to make too, and the language standards make it clear which side they are on. In some contexts, performance is the dominant priority and nothing else matters quite as much. If so, C or C++ may be the right tool for you. But in most contexts, the balance flips the other way. If programmer productivity, debuggability, reproducible bugs, and overall correctness and understandability are more important than squeezing every last little bit of performance, then C and C++ are not the right tools for you. I say this with some regret, as I spent many years happily writing C programs. I have tried to avoid exaggerated, hyperbolic language in this post, instead laying out the tradeoff and the preferences revealed by the decisions being made. John Regehr wrote a less restrained series of posts about undefined behavior a decade ago, and in one of them he concluded: It is basically evil to make certain program actions wrong, but to not give developers any way to tell whether or not their code performs these actions and, if so, where. One of C’s design points was “trust the programmer.” This is fine, but there’s trust and then there’s trust. I mean, I trust my 5 year old but I still don’t let him cross a busy street by himself. Creating a large piece of safety-critical or security-critical code in C or C++ is the programming equivalent of crossing an 8-lane freeway blindfolded. To be fair to C and C++, if you set yourself the goal of crossing an 8-lane freeway blindfolded, it does make sense to focus on doing it as fast as you possibly can.",
    "commentLink": "https://news.ycombinator.com/item?id=37178009",
    "commentBody": "C and C++ prioritize performance over correctnessHacker NewspastloginC and C++ prioritize performance over correctness (swtch.com) 239 points by bumbledraven 17 hours ago| hidepastfavorite459 comments haberman 15 hours ago> There are undeniably power users for whom every last bit of performance translates to very large sums of money, and I don’t claim to know how to satisfy them otherwise.That is the key, right there.In the 1970s, C may have been considered a general-purpose programming langauge. Today, given the landscape of languages currently available, C and C++ have a much more niche role. They are appropriate for the \"power users\" described above, who need every last bit of performance, at the cost of more development effort.When I&#x27;m working in C, I&#x27;m frequently watching the assembly language output closely, making sure that I&#x27;m getting the optimizations I expect. I frequently find missed optimization bugs in compilers. In these scenarios, undefined behavior is a tool that can actually help achieve my goal. The question I&#x27;m always asking myself is: what do I have to write in C to get the assembly language output I expect? Here is an example of such a journey: https:&#x2F;&#x2F;blog.reverberate.org&#x2F;2021&#x2F;04&#x2F;21&#x2F;musttail-efficient-i...I created the https:&#x2F;&#x2F;github.com&#x2F;protocolbuffers&#x2F;upb project a long time ago. It&#x27;s written in C, and over the years it has gotten to a state where the speed and code size are pretty compelling. Both speed and code size are very important to the use cases where it is being used. It&#x27;s a relatively small code base also. I think focused, performance-oriented kernels are the area where C makes the most sense. reply overgard 14 hours agoparent> In the 1970s, C may have been considered a general-purpose programming langauge. Today, given the landscape of languages currently available, C and C++ have a much more niche role. They are appropriate for the \"power users\" described above, who need every last bit of performance, at the cost of more development effort.I really don&#x27;t think this is true. I&#x27;ve worked in CAD and video games and embedded software, and in all those you&#x27;re likely using C++ (not to mention a lot of desktop software that can&#x27;t afford to embed a chromium instance for electron.) For some reason people here just assume that anything that isn&#x27;t web development or backend server CRUD stuff is a niche.As much attention as something like Rust or whatnot gets on hacker news, the reality is that if you can&#x27;t afford garbage collector pauses, and you need performance, you&#x27;re using C&#x2F;C++ most of the time. reply kiratp 13 hours agorootparentRust is not a GC language. It can and does achieve the same perf as any modem C++ with the latest flavor of the C++ safety guardrails.The set of reasons to start a new project in C&#x2F;C++ are few and the list is shrinking by the day. reply MarkMarine 13 hours agorootparentI love Rust, but as a daily C++ user (embedded microcontrollers, not supported by Rust yet, and then native Linux tooling to interface with them) what I find most frustrating about Rust is the number of crates that need to be knit together to make working software. Often these crates are from a single dev who last committed in 2020 or something. I really wish there was something like go’s standard library in Rust. That has been my barrier to adoption, and believe me I WANT to use it at work and I don’t want to juggle chainsaws anymore. reply dgacmu 12 hours agorootparentI&#x27;m sympathetic. I&#x27;m partway into an embedded project on an stm32 &#x2F; m0 for which there _is_ good rust support through Embassy and it&#x27;s utterly magical. And at the same time, trying to do something for which there isn&#x27;t a good no-std crate is, er, anti-magical to the point of forcing me to change the design. The ecosystem isn&#x27;t as comprehensive yet.But when it works, wow. This has been the most fun embedded project I&#x27;ve ever done with the least debugging. reply oll3 12 hours agorootparentprevI have replaced my use of C (and C++) in embedded with Rust for the last couple of years. Sure, some parts are still missing or immature, but overall also very promising. And I do enjoy it so much more than the MCU manufacturer&#x27;s please-insert-your-c-code-between-these-comments-and-pray kind of development. reply stjohnswarts 4 hours agorootparentAre you doing this on personal projects or commercial projects? I&#x27;m pretty happy with c++17 on all my embedded commercial projects reply hdjfkfbfbr 8 hours agorootparentprevThe people behind the esp32 are writing a rust compiler.... I have played with it only a little, but it workedEdit:spelling reply stjohnswarts 4 hours agorootparentA full rust compiler instead of use the \"de facto\" one? on a language as complicated as rust that sounds scary unless they have a lot of financial backing and significant amount of compiler devs. reply Ar-Curunir 13 hours agorootparentprevEr how is that different from C++? It doesn&#x27;t have a go-like std library either, and you can totally use Rust without crates.io in the same manner. reply MarkMarine 12 hours agorootparentI suppose that wasn’t clear. My mistake. I use C&#x2F;C++ for micro controller code every day, because Rust doesn’t support my microcontroller, doesn’t have a real RTOS, and I’m making real hardware. Something that needs to run in the field for 10+ years and I can’t get out there and ensure it’s updated, and my company doesn’t want to invest millions of dollars on beta testing embedded rust on. So embedded is out for now but I’m looking forward to when it’s supported fully and out of beta. Most embedded controllers come with some RTOS and libraries they support, written in C.For tooling, I can context switch out of C++ which does have boost, into [rust, go, python… etc] and deal with that switch, or just be lazy and write it in C++. I’ve tried to write three tools in Rust so far, and the pain of not having a good stdlib, of essentially searching the internet for a blog post that solves my issue then finding the blog post was written by one dev 4 years ago to pump up their library that was written 4 years ago and then never supported after that… it’s a bit exhausting.Again, before ya’ll attack. This is from the perspective of a willing, excited customer. I want to use Rust at work and advocate for it. Just saying, it’s not easy in the state it’s in. reply seabass-labrax 12 hours agorootparentWhich microcontroller are you using? Rust support for embedded targets is slowly improving, so there might be a beta build for your chip. reply xedrac 13 hours agorootparentprevIn C++, you&#x27;ll often see projects just use boost, which is a big monolith of useful libraries. reply tumdum_ 12 hours agorootparentEmbedded microcontrollers are not the place where boost is used. reply oasisaimlessly 4 hours agorootparentCounterpoint: I use Boost on embedded microcontrollers. (Albeit only header-only components of Boost.) replybayindirh 13 hours agorootparentprevHowever, Rust doesn&#x27;t have a \"I know what I&#x27;m doing, let me be\" switch. No, \"unsafe\" is not that.I have a couple of languages in my belt C, C++, Go, Python, Java are the primary ones. C and C++ are reserved for \"power use\". For power use, I mean scientific, HPC stuff or any code I need the full capacity of the processor.To get that, sometimes you need -ffmast-math, sometimes said undefined behavior, or code patterns which translate to better code for the processor you target.Rust doesn&#x27;t allow any of that, moreover limits me the way I can write my programs, no thanks.For security-sensitive compiled code, I can use Rust, but I can&#x27;t use Rust anywhere, and everywhere. It also has its niche, and it can&#x27;t and won&#x27;t replace C or C++ at the end of the day. It&#x27;ll get its slice (which might be sizeable), a couple of compiler implementations, and will evolve to become another mainstream , boring language, which is good.Also, if you give half an effort, C++ is pretty secure and robust to begin with, esp. on the pointers department. Just be mindful, and run a couple of valgrind tests on your code, and you&#x27;re set. Been there, done that. reply SubjectToChange 10 hours agorootparentTo get that, sometimes you need -ffmast-math, sometimes said undefined behavior, or code patterns which translate to better code for the processor you target.There isn&#x27;t really any fundamental limitation of Rust for those situations. A better reason why C++ is better than Rust for compute is the support for OpenACC, OpenCL, OpenMP, CUDA, ROCm&#x2F;HIP, etc.Also, if you give half an effort, C++ is pretty secure and robust to begin with, esp. on the pointers department.The problem is that even if a \"Safe\" C++ could be defined, it would need to interoperate with the rest of the \"Unsafe\" C++ world. Perhaps a programmer can write absolutely safe C++ themselves but all bets are off once you&#x27;re working with other programmers.Just be mindful, and run a couple of valgrind tests on your code, and you&#x27;re set. Been there, done that.Seriously? A \"couple of valgrind tests\" would be insufficient for catching all but the most trivial and&#x2F;or blatant memory safety issues in C++, especially when dealing with malicious users. Although I agree that dynamic analysis like valgrind and sanitizers should be the default for C++ development, industrial grade static analysis tools are at least as important. And needless to say, if you find Rust complains about code too much then just wait for what static analysis tooling will complain about. reply bayindirh 10 hours agorootparentThat kind of integration is another reason, yes, but this is a passable moat, so I&#x27;m not talking about it much (mind you, I live in HPC world).If programming is a team sport, every team player should be up to the level your project needs. If they are not, they should raise their bars. Seriously.Yes, seriously, be mindful. Implement allocation and destruction first, fill your code between these two steps.A couple of Valgrind tests is actually a whole procedure. It&#x27;s an unfortunate downplay by me [0], probably because I&#x27;m very used to use Valgrind as a second nature.[0]: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=31218757 reply kaba0 4 hours agorootparentSo what about multithreaded code with potential race conditions that result in memory errors sometimes. Valgrind already only able to test the actually ran code paths, let alone find race condition-y bugs.Also, this elitist notion of raising the bar is an instant “turnoff” for me, with all due respect, I can only assume from that that the given person may not be as much an expert as they think of themselves. Not saying that it applies to you as well, but you don’t leave me much other choice. reply lenkite 2 hours agorootparentMemory safe - I will give you that. All the guarantees you listed are fine for synchronous Rust. But race conditions and deadlocks are not unknown in async Rust. Lots of race condition issues in tokio - including issues where futures leak. reply kaba0 2 hours agorootparentThat’s true, and usually I am the one pointing this out, that Rust is only data race free :D thanks for the pointer! replykiratp 11 hours agorootparentprev> Rust doesn&#x27;t have a \"I know what I&#x27;m doing, let me be\" switch.Every piece of code you write is security-sensitive. IMO It is our professional responsibility to our users that we treat it that way.For a vast majority of situations, even if you know what you are doing, you are human and therefore will make mistakes.If the (probably) most heavily invested C++ codebase, Chrome, has memory use-after-free&#x2F;overflow bugs, there is no way that truly safe C++ can be written at any product-scale. reply bayindirh 11 hours agorootparent> Every piece of code you write is security-sensitive.No, not every application is CRUD, not every application is interactive and no, not every application serves users and communicate with outside world in a way allowing to be abused during its lifetime.This doesn&#x27;t mean it gives me the freedom to write reckless code all over, but the security model of an authentication module and a mathematical simulation is vastly different.> there is no way that truly safe C++ can be written at any product-scale.I agree to disagree here, because of my own experience. reply pjmlp 2 hours agorootparentLike every other job in the world has a concept of liability,that will eventually arrive on computing world at scale. reply bayindirh 1 hour agorootparentThe assumptions you make are almost palpable at this point.Simulation precision and accuracy already carries tons of liability.Talking like I or we don’t care about consequences is disturbing, esp. with the experience you have. reply gautamcgoel 9 hours agorootparentprevDuring my PhD I wrote a lot of simulation code in Matlab. This code was only ever run by me on my personal machine for the purpose of generating plots for my thesis. How is that security-sensitive?We all agree that security is important and a lot of code running in security-sensitive contexts is bad. That&#x27;s very different from saying that all code is security-sensitive. reply kaba0 4 hours agorootparentMatlab is memory-safe, though, which is the kind of safety issue we talk about. reply defrost 4 hours agorootparent> Matlab is memory-safe, thoughWho sold you that notion?Matlab is proprietary glue holding together modules written in Fortran, C, C++, Java that allows the adhoc inclusion of DLLS put together by graduate students on the fly.In what universe is any of that \"memory safe\"? reply kaba0 3 hours agorootparentAFAIK it used to be written&#x2F;interpreted in Java (though it uses a JIT compiler nowadays, doesn’t it?), and in that sense the language itself is memory safe. Of course if you link to a dependency written in an unsafe language you can have memory issues, but that is not what people commonly mean by “a memory safe language”. reply defrost 2 hours agorootparent> Of course if you link to a dependency written in an unsafe languageLike the matrix handling, plotting, and other modules dragged in from the 1990s standard FORTRAN library era.Don&#x27;t get me wrong, I have placed a lot of trust in those kinds of numeric libraries since the 1980s - NIST and other national labs code and review to a high standard - but they weren&#x27;t then and aren&#x27;t now \"memory safe\" just very probably and mostly bug free.Unless they were, say, rewritten in Java .. and that&#x27;s a whole other big ball of issues .. translated code.I&#x27;m happy to play along and agree that the JIT compiled &#x27;Matlab language&#x27; parts of Matlab are memory safe - but to the best of my experience with past versions that&#x27;s just the glue portions - the reason so many people use Matlab is for the chunks that get glued together. reply kaba0 2 hours agorootparentAren’t many of these Fortran libraries heavily used all throughout almost any kind of application, somewhere deep down their dependency tree? reply defrost 2 hours agorootparentAbsolutely .. and generally written to a very high standard with a lot of checking, rechecking and running forwards and backwards across multiple architectures with extensive technical mailing lists.They can still have bugs, memory issues, be called with parameters that cause resource blow outs and aren&#x27;t \"memory safe\" in the sense that modern managed languages are.Matlab is exactly as reliable as well written Fortran and C code can be. replykaba0 4 hours agorootparentprevWhat does Rust doesn’t allow? There really are only very few hard limits I know of, e.g. tail call elimination.Ad absurdum it has quite great inline asm support. reply kouteiheika 11 hours agorootparentprev> To get that, sometimes you need -ffmast-math, sometimes said undefined behavior, or code patterns which translate to better code for the processor you target.> Rust doesn&#x27;t allow any of that, moreover limits me the way I can write my programs, no thanks.I&#x27;m willing to prove you wrong here. Can you give some concrete examples?For -ffast-math you can most certainly enable it, but AFAIK for now only in a localized fashion through intrinsics, e.g.:https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;intrinsics&#x2F;fn.fadd_fast.htmlhttps:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;intrinsics&#x2F;fn.fmul_fast.htmlSo instead of doing this the dumb way and enabling -ffast-math for the whole program (which most certainly won&#x27;t need it) you can profile where you&#x27;re spending the majority of your time, and only do this where it&#x27;ll matter, and without the possibility of randomly breaking the rest of your numeric code.Personally I find this to be a vastly better approach. reply bayindirh 11 hours agorootparentThanks for the information, I&#x27;ll look into that. There&#x27;s another comment talking about an algorithm I have implemented, it should be around in this thread.> So instead of doing this the dumb way and enabling -ffast-math for the whole program (which most certainly won&#x27;t need it)...When you write HPC enabled simulation code, you certainly need it, and this is where I use it. reply maximilianburke 7 hours agorootparentIs HPC code magically immune to values containing infs or NaNs? reply stjohnswarts 4 hours agorootparentprevA lot of people who criticize c++ seem to still think it&#x27;s 2008 and there aren&#x27;t the crazy amount of compiler checks&#x2F;linters&#x2F;standard practices that have happened since c++11 was released.I like rust and I dick around with it a bit on some small REST projects I have for home automation but for day-to-day work I stick with c++ until rust support picks up in the industry a lot more than it currently is. reply pjmlp 2 hours agorootparentBecause many of us only know C++ best practices from conference slides, and our own side projects, while we cry in despair when looking at typical corporate code bases.Why do you think Bjarne Stroustoup main subject on conferences is how to write C++ properly without C style coding, for several years now? reply andrepd 12 hours agorootparentprevIn what sense does rust not expose the full power of the processor to the user? Can you give a concrete example?> Just be mindful, and run a couple of valgrind tests on your code, and you&#x27;re set.Thousands of severe CVEs every year attest to the effectiveness of that mindset. \"Just git gud\" is not a meaningful thing to say, as even experienced devs routinely make exploitable (and other) mistakes. reply bayindirh 11 hours agorootparentRust probably won’t allow me to implement a couple of lockless parallel algorithms I have implemented in my Ph.D., which are working on small matrices (3K by 3K). These algorithms allow any number of CPUs do the required processing without waiting for each other, and with no possibility of stepping on each other, by design.In the tests, it became evident that the speed of the code is limited by the memory bandwidth of the system, yet for the processors I work with that limit is also very near to practical performance limit of the FPUs, as well. I could have squeezed a bit more performance by reordering the matrices to abuse prefetcher better, but it was good enough (~30x faster than the naive implementation with better accuracy) and I had no time.Well, the method I verify the said codebase is here [0]. Also, if BSD guys can write secure code with C, everybody can. I think their buffer overflow error count is stillRust probably won’t allow me to implement a couple of lockless parallel algorithms I have implemented in my Ph.D., which are working on small matrices (3K by 3K)That’s a bold claim to make without evidence. Things like that totally seem doable in Rust without a lot of ceremony. You might have to launder some lifetimes through unsafe if you can’t convince the compiler statically, but that’s not that hard.> Also, if BSD guys can write secure code with C, everybody can. I think their buffer overflow error count is stillI don’t but the claim that BSD’s qualities extrapolate anywhere rather than a more mundane explanation or that BSD is the exception that proves the role somehow given no other successful project seems to be able to do the same.It&#x27;s mostly about \"it&#x27;s done when it&#x27;s done\" mentality and always putting the discipline before writing code fast. It&#x27;s a vastly different mentality when compared to modern, conventional software development. This mentality also makes what Debian is Debian.On the other end of the spectrum, we have the stressed solo developer syndrome, which brings us OpenSSL with its all problems and grievances. replyovergard 13 hours agorootparentprevI phrased it poorly, I didn&#x27;t mean to imply Rust is GC&#x27;d. I mean that it&#x27;s still niche. C++ very much is not niche, which is my point. The other non-niche languages generally are GC&#x27;d (java, C#, javascript, etc.)> The set of reasons to start a new project in C&#x2F;C++ are few and the list is shrinking by the day.That&#x27;d be true if every project started from scratch with only the language standard library. And yet..... almost any project you start is going to be dependent on a large chunk of code you didn&#x27;t write, even on greenfield projects. reply haberman 13 hours agorootparent> That&#x27;d be true if every project started from scratch with only the language standard library. And yet..... almost any project you start is going to be dependent on a large chunk of code you didn&#x27;t write, even on greenfield projects.I think this is true, and I&#x27;d refine my original statement accordingly. My original comment was thinking more from first principles, not as much about pragmatic considerations of ecosystem support.If we were to disregard the momentum of existing ecosystems, I think C&#x2F;C++ would be niche choices today: very important for certain, focused use cases, but not meant for the masses. Taking into account the momentum of existing ecosystems however, they still play a large role in many domains. reply Cthulhu_ 13 hours agorootparentprev> For some reason people here just assume that anything that isn&#x27;t web development or backend server CRUD stuff is a niche.I think that&#x27;s because anything more \"low level\" (using the phrase freely) quickly becomes highly specialized, whereas web &#x2F; CRUD development is a dime a dozen.Source: Am web &#x2F; CRUD developer. It&#x27;s a weird one, on the one side I&#x27;ve been building yet another numeric form field with a range validation in the past week, but on the other I can claim I&#x27;ve worked in diverse industries; public transit, energy, consumer investment banking, etc. But in the end it just boils down to querying, showing and updating data, what data? Doesn&#x27;t matter, it&#x27;s all just strings and ints with some validation rules in the end.But there&#x27;s my problem, I don&#x27;t know enough about specialized software like CAD or video games or embedded software to even have an interest in heading in that direction, let alone actually being able to find a job opening for it, let alone being able to get the job. reply jacquesm 13 hours agorootparentprevFor me the key is that I can lay things out in memory exactly the way I want, if necessary to the point where I can fit things in cache entirely when I need the performance and only to break out of the cache when I&#x27;m done with the data. This is obviously not always possible but the longer you can keep it up the faster your code runs and the gains you can get like that are often quite unexpected. I spend a lot more time with gprof than with a debugger. reply jjoonathan 13 hours agoparentprevPerf is a niche, here&#x27;s another: address space lets you talk to hardware.VM and OS abstractions have been so successful that you can go a whole career without talking directly to hardware, but remember, at the bottom of the abstraction pile something has to resolve down to voltages on wires. Function calls, method names, and JSON blobs don&#x27;t do that. So what does? What abstraction bridges the gap between ASCII spells and physical voltages?Address space. I&#x2F;O ports exist, but mostly for legacy&#x2F;standard reasons. Address space is the versatile and important bridge out of a VM and into the wider world. It&#x27;s no mistake that C and C++ let you touch it, and it&#x27;s no mistake that other languages lock it away. Those are the correct choices for their respective abstraction levels. reply packetlost 13 hours agorootparentIdk what you&#x27;re on about, I mmaped a `&#x2F;dev&#x2F;uio` from Python this morning. Yeah, I had to add it in a .dts file and rebuild my image, but even slow as shit high level languages like Python let you bang on registers if you really want to. reply memefrog 10 hours agorootparent>I mmaped a `&#x2F;dev&#x2F;uio` from Python this morning.You might want to go and have a look at the implementation of &#x27;mmap&#x27; in CPython. Here&#x27;s a clue: it&#x27;s in the name &#x27;CPython&#x27;. reply kaba0 4 hours agorootparentAs it is for an OS written in C, sure it does have some helper C wrappers.It is still “syscall”s at the end of the day, and many programming languages can output assembly just fine. reply notacoward 12 hours agorootparentprevThat worked because you were on an OS that supported it, using a device with simple enough behavior that things like timing or extra&#x2F;elided writes didn&#x27;t matter. It&#x27;s great when that works, but there are very many environments and devices for which that option won&#x27;t exist. reply packetlost 11 hours agorootparent> That worked because you were on an OS that supported itI mean... yeah? I&#x27;d be surprised if most operating systems didn&#x27;t have a facility for directly accessing memory mapped devices in some capacity. Even Windows does I think. Have any examples of an OS that doesn&#x27;t support banging directly on memory?> using a device with simple enough behavior that things like timing or extra&#x2F;elided writes didn&#x27;t matterYeah, but that&#x27;s less of a function of the language like GP was referring to and more a property of using a non-RTOS that doesn&#x27;t play nice with timing sensitive things from user-space. The language itself is not really the issue there, which was my point. replywrs 13 hours agorootparentprevRust is making advances here (look at “embedded Rust” efforts). I am curious since I haven’t written kernel code since C went sideways: how easy is it to write a driver that has to manipulate registers with arbitrary behavior at arbitrary addresses with modern C compilers and avoid all undefined behavior? I seem to recall Linus has a rant on this. reply SubjectToChange 13 hours agorootparentprevPerhaps, but C and C++ assume flat address spaces and modern hardware includes many programmable devices with their own device memory, e.g. GPUs. Naturally this discontinuity causes a great deal of pain and many schemes have been developed to bridge this gap such as USM (Unified Shared Memory).Personally I would like to see a native language which attempts to acknowledge and work with disjoint and&#x2F;or \"far away\" address spaces. However the daunting complexity of such a feature would likely exclude it from any portable programming language. reply vvanders 13 hours agorootparentThose disjoint memory addresses can be an absolute pain to deal with, ask anyone who had to spend time dragging performance out of the PS3 despite it being faster on paper. UMA&#x2F;USM can also bring it&#x27;s own set of issues when you have pathological access patterns that collide with normal system memory utilization.For what its worth UMA&#x2F;USM wasn&#x27;t build to bridge a gap but rather to offer greater flexibility in resource utilization for embedded platforms, that&#x27;s been moving upstream(along with tiling GPUs) over the years. With UMA you can page in other data on a use-case basis which is why they were relatively popular in phones, if you don&#x27;t have a bunch of textures loaded on the GPU you can give that space back to other programs. Although come to think of it we used to stream audio data from GPU memory on certain consoles that didn&#x27;t have large discrete system memory(the bus connecting SystemGPU memory had some pretty harsh restrictions so you had to limit it to non-bursty, low throughput data which audio&#x2F;music fit well into). reply memefrog 10 hours agorootparentprevThere is a technical report for C (from the C standards committee) called &#x27;Embedded C&#x27; which extends C with &#x27;named address space&#x27; storage qualifiers. So you can do &#x27;float _Gpu myarray[1(and offering std::rc::Rc when you don&#x27;t want atomics!) vs &mut T or even Box. Everyone reaches for shared_ptr when 99% of the time unique_ptr is the correct option. reply memefrog 9 hours agorootparentI see comments like yours more than I see anyone suggesting actually using shared_ptr widely. In my experience, most people (that use smart pointers - many do not) prefer to use unique_ptr where they can. reply vvanders 6 hours agorootparentI don&#x27;t think anyone is suggesting shared_ptr explicitly, more that if you&#x27;re coming from Python&#x2F;Java&#x2F;etc it&#x27;s a similar to a GC memory model and a bit more familiar if that&#x27;s where your experience is. I&#x27;ve observed in a number of codebases unless you&#x27;re setting a standard of unique_ptr by default it&#x27;s fairly easy for shared_ptr to become widely used.FWIW I consider shared_ptr a bit of a code-smell that you don&#x27;t have your ownership model well understood, there are cases to use it but 90% of the time you can eliminate it with a more explicit design(and avoid chances of leaks + penalties from atomics). reply memefrog 5 hours agorootparentBear in mind that my ultimate perspective is that you shouldn&#x27;t use smart pointers (or C++) at all.But even if you think they have some value, it isn&#x27;t a flaw in a language if it&#x27;s not immediately obvious how to write code in it for people that are new to it. If you&#x27;re coming from Python or Java, then learn how to write C++. There are probably as many books on C++ as on any other language out there. reply Gibbon1 12 hours agorootparentprevFrom my experience with embedded coding you are correct. Most stuff lives and dies enclosed in a single call chain and isn&#x27;t subject to spooky action at a distance. And stuff that is I often firewall it behind a well tested API. reply kllrnohj 13 hours agorootparentprevIt would be fascinating if you could give any such comparison examples. The only time I&#x27;ve seen JVM come anywhere close to C++ in normal usage is if the C++ code was written like it was Java - that is, lots of shared_ptr heap allocations for nearly everything. Or perhaps you&#x27;re one of the rare few that write Java code like it was C instead? You can definitely get something fast like that, but it seems all too rare. reply overgard 13 hours agorootparentprevI think the reason to use C&#x2F;C++ over java has less to do with the various optimizations and more to do with control over memory layout (and thus at least indirect control over cache usage and so on). Plus you remove a lot of \"noise\" in terms of performance (GC hiccups, JIT translation, VM load time, etc.). reply grumpyprole 14 hours agorootparentprev+1. Part of the problem is that x86 assembly is hardly programming the metal anymore. The performance characteristics of processors has changed over the years also, compilers can be more up-to-date than humans. reply overgard 13 hours agorootparentx86 assembly doesn&#x27;t represent the actual opcodes the CPU executes anymore, but it&#x27;s still the low level \"API\" we have to the CPU. Even if assembly isn&#x27;t programming to the metal, it&#x27;s definitely more to the metal than C, and C is more to the metal than Java, etc. Metalness is a gradient reply SubjectToChange 11 hours agorootparentMetalness is a gradientIt would be better to say that \"Metalness\" is a sort of \"Feature Set\". IMO, most programmers would tend to agree that C++ is far closer to Java than C is, yet C++ is every bit as low level as C is. Indeed, even a managed language like C# supports raw pointers and even inline assembly if one is willing to get their hands dirty. reply kaba0 3 hours agorootparentThere is expressivity and abstraction-ability which are language features, and there is “levelness” or metalness as is it being referred to.Low and high level languages have two definitions I have seen, one is more objective, but utterly useless: only assemblies are low-level, everything else is high. The other one is more about what can be controlled in a given language’s idiomatic usage, I believe that’s what most people actually refer to intuitively - e.g. C#&#x2F;Java have ways to manipulate pointers, but you would generally not say that.In that regard, C, C++, Rust are quite close to the metal with the latter two actually being even closer as they have native control over SIMD datatypes as well, while C doesn’t have that. Note, this is only a partial ordering, as e.g. C#&#x2F;Java also have control over vector instructions, yet I wouldn’t go around claiming them closer to the metal as C.Going back to expressivity, C++ is very expressive, while C is very inexpressive, but that is a completely orthogonal axis. reply grumpyprole 13 hours agorootparentprevLol, I like the word \"metalness\". reply khuey 13 hours agoparentprev> When I&#x27;m working in C, I&#x27;m frequently watching the assembly language output closely, making sure that I&#x27;m getting the optimizations I expect. I frequently find missed optimization bugs in compilers.Do you repeat this exercise when you upgrade or change compilers? reply oasisaimlessly 3 hours agorootparentFor hot functions that were carefully optimized, I have test harnesses that run them and measure their cycle counts, which are asserted to be equal to the cycle count after hand-optimization (+&#x2F;- some small margin if there is non-determinism). This is sensitive to regressions while having a very low false-positive rate due to being (approximately) deterministic. reply jacquesm 13 hours agorootparentprevThe easy way to achieve that is to freeze the assembly once it is generated and to keep the C inlined around as documentation, as well as a way to regenerate the whole thing should it come to that (and then, indeed you&#x27;ll need to audit the diff to make sure the code generator didn&#x27;t just optimize away your carefully unrolled loops). reply asvitkine 12 hours agorootparentIs there any tooling for that or are you talking hypothetically? reply jacquesm 12 hours agorootparentJust standard unix tooling, what else do you need? It&#x27;s as powerful a set of text manipulation tools as you could wish for. reply 8n4vidtmkvmk 13 hours agorootparentprevIf the assembly is that important I&#x27;d find a way to put it into my unit tests. Create a \"golden\" for the assembly and it should trigger a diff if it changes. reply mcguire 14 hours agoparentprevIn the 1970s, the alternative to C was assembly. In fact, I can remember hearing stories of the fights needed to pry every-day, normal developers---not systems programmers, not power users---off of assembly to a \"higher level language\".It wasn&#x27;t until the 90s that it became clear that C was not appropriate for applications work (and this was in the era of 4-16MB machines), although that took a long time to sink in. reply Thiez 14 hours agorootparentIn the 1960s they already had languages such as Lisp, Fortran, Algol, Basic... Even Pascal is two years older than C, and ML also came out around that time.The statement \"the alternative to C was assembly\" is simply incorrect. reply jacquesm 13 hours agorootparentFor practical purposes - involving real world constraints in memory size, cpu power and storage - C was the tool of choice, it ran on just about everything, allowed you to get half decent performance without having to resort to assembler and was extremely memory efficient compared to other languages. Compilers were affordable (Turbo C for instance, but also many others such as Mark Williams C) even for young people like me (young then...) and there was enough documentation to get you off the ground. Other languages may have been available (besides the ubiquitous BASIC, and some niche languages such as FORTH) but they were as a rule either academic, highly proprietary and very, very expensive.So that left C (before cfront was introduced). And we ran with it, everybody around was using C, there wasn&#x27;t the enormous choice in languages that you have today, you either programmed in C or you were working in assembler for serious and time-critical work. reply pjmlp 1 hour agorootparentModula-2 and Pascal dialects compilers were also quite affordable, many of which being sold by companies that were selling the same C compilers, there were even product packages to get all languages in one go.Easily proven by looking into computing magazine archives.So lets not distorce history. reply jacquesm 29 minutes agorootparentI&#x27;m not &#x27;distorting history&#x27;, I&#x27;m just relating what was practical. Yes, there was Modula-2 and yes there was Pascal. But both felt extremely academic and restricted. Pascal still lives on today in the form of Delphi, which has to be a record for being in continuous use as a complete environment. I even paid for both Pascal and Modula-2 on the BBC Micro but performance was just horrible compared to the BASIC that came with that machine in spite of being compiled, compilation took a long time, even for simple programs. Wirth&#x27;s books were enlightening though and I took a lot of lessons and algorithms from them and ported them to C (some of those I&#x27;m still using today!). reply pjmlp 4 minutes agorootparentYes you definitly are, given how Modula-2 and Pascal were widely adopted across the European continent, specially in demoscene circles in the PC and Amiga ecosystems.As if the BBC Micro was an example of the industry adoption at large during those days. marcosdumay 13 hours agorootparentprevOn practice those were either proprietary or required beefy machines that the people writing C couldn&#x27;t get.On the limited environment where C got created, it was the only option. And everybody suddenly adopted that limited environment, because it was cheap. And then it improved until you could use any of those other languages, but at that point everybody was using C already. reply StableAlkyne 13 hours agorootparentFortran predates C by over a decade, and dozens of compilers existed for it by the mid-60s. Much of that legacy code is still in use to this day in scientific computing. One example: John Pople won his Nobel prize for work he did (and implemented in Fortran) in computational chemistry - the prize was delayed until &#x27;98 but he did the work in the 60s. The software he commercialized it into, Gaussian, still gets releases to this day and remains one of the most popular computational chemistry packages.It&#x27;s really dependent on which field you&#x27;re in. Not all scientific computing requires a beefy computer, but for a very long time it (and I guess LISP) dominated scientific computing. That said, I think it&#x27;s a very good point to bring up the network effect of using C - if I need to hire a developer in 1985, it&#x27;s probably easier to find someone with industry (not academic) experience who knows C than it is to find someone who knows Fortran.I do kinda prefer Fortran to C though, it&#x27;s so much cleaner to do math in. Maybe somewhere there&#x27;s an alternate universe where IBM invented C and Bell invented Fortran to win the popularity war. reply jacquesm 12 hours agorootparentI tried to get access to FORTRAN and it was just way too expensive and required machines that I would not have been able to get close to. C ran on anything from Atari STs, IBM PCs, Amiga&#x27;s and any other machine that an ordinary person could get their hands on.The other mainstream language at the time was BASIC, comparable to the way PHP is viewed today by many.And with the advent of the 32 bit x86 era GCC and djgpp as well as early Linux systems really unlocked a lot of power. Before then you&#x27;d have to have access to a VAX or a fancy workstation to get that kind of performance out of PC hardware. It&#x27;s funny how long it took for the 386 to become fully operational, many years after it was launched you had to jump through all kinds of hoops to be able to use the system properly, whereas on a 68K based system costing a tiny fraction that was considered completely normal. reply mcguire 11 hours agorootparentThere was a freely available FORTRAN on the Fred Fish Amiga disks in the late 80s. It came with a weird license---free for everything, but it couldn&#x27;t be used for military or military-related things.The 386 was hampered by backwards compatibility with the weird memory architecture for the 286 and 8086, IIRC. 68Ks were just soooo much easier. reply jacquesm 10 hours agorootparentOh cool, I never knew that. 386 flat mode was easy enough, but only djgpp unlocked that properly, everything else was a hodgepodge of the weirdest memory models.I remember making a bootloader for my own OS using TurboC that somehow had to fish four files from a minix based filesystem and dump them in memory at certain addresses and then switch to flat mode and start executing the kernel which would then initialize the system properly. That was some really weird mixed mode voodoo to switch back and forth between protected mode and real mode to be able to both use BIOS calls to fetch blocks from disk and to be able to park the data in the right spots in contiguous memory.Very tricky stuff to get right, it took me forever before I had the first indication that something was executing after the inevitable hail Mary jump to the first instruction in the loaded kernel. But I got it to work. I actually had a guitar footpedal hooked to the reset button because it took me too many dives under the desk to recover from a crash. That was a very slow development cycle without any chance of debugging. At some point I had 8 leds hooked up to the printer port to use some &#x27;out&#x27; opcodes to tell me where I had gotten to in the code. Poor mans emulator :) reply StableAlkyne 12 hours agorootparentprevMy perspective is a bit biased by scientific computing, I do more of that than enterprise stuff (and Python has been fine for personal use). It&#x27;s cool to see the perspective of someone who was around for the early stages of it though.How did people see Fortran back then - nowadays it&#x27;s seen as outdated but fast, but was it seen as interesting, and what drove you to seek it out?Other side question if it&#x27;s okay, I keep seeing references to VAXen around historical documents and usenet posts from the 80s and 90s, what made them special compared to other hardware you had back then? reply jacquesm 11 hours agorootparentMy one experience with FORTRAN was when working for a big dutch architect who made spaceframes, I built their cad system and a colleague built the finite element analysis module based on an existing library. We agreed on a common format and happily exchanged files with coordinates, wall thicknesses and information about the materials the structure was made out of and forces in one direction and a file with displacements in the other. It worked like a charm (combined C and FORTRAN). I thought it was quite readable, it felt a bit archaic but on the whole not more archaic than COBOL which I had also worked with.The reason that library existed in FORTRAN was that it had a native &#x27;vector&#x27; type and allowed for decent optimization on the proper hardware (ie: multiply and accumulate) which we did not have. But the library had been validated and was approved for civil engineering purposes, porting it over would have been a ton of work and would not have served any purpose, besides it would have required recertification.As for VAXen: A VAX 11&#x2F;780 is a 32 bit minicomputer, something the size of a large fridge (though later there were also smaller ones and today you could probably stick one on a business card). It had a - for the time - a relatively large amount of memory, and was a timesharing system, in other words, multiple people used the same computer via terminals.They weren&#x27;t special per se other than that a whole raft of programmers from those days cut their teeth on them either because they came across them in universities or because they worked with them professionally. They were &#x27;affordable&#x27; in the sense that you did not need to be a multinational or a bank in order to buy one, think a few hundred thousand $ (which was still quite a fortune back then).I had occasional access to one through the uni account of a friend, but never did any serious work with them. The first powerful machine I got my hands on was the Atari ST, which had a 68K chip in it and allowed the connection of a hard drive. Together those two things really boosted my capabilities, suddenly I had access to a whole 512K of RAM (later 1M) and some serious compute. Compared to a time shared VAX it was much better, though the VAX had more raw power.Concurrent to that I programmed on mainframes for a bank for about a year or so, as well as on the BBC Micro computer (6502 based) and the Dragon 32 (a UK based Color Computer clone).Fun times. Computing back then was both more and less accessible than it is today. More because the machines were so much simpler, less because you didn&#x27;t have the internet at your disposal to look stuff up. reply mcguire 10 hours agorootparentprevFORTRAN didn&#x27;t officially grow a program stack until FORTRAN 90 (?), although I&#x27;m told some of the earlier FORTRAN 77-era compilers supported it.I remember meeting people who could not wrap their heads around the idea that function parameters weren&#x27;t all passed by reference. The idea of recursion would have caused them to detonate. reply grumpyprole 13 hours agorootparentprevIIRC, Mac OS Classic was written in Pascal, as were other operating systems. C just won the popularity contest. reply marcosdumay 13 hours agorootparentThat was about a decade after C had already won. reply grumpyprole 13 hours agorootparentThe Xerox Alto was early 70&#x27;s and that GUI OS was written in Pascal. I always thought Pascal was better designed and less bizarre than C. Null terminated strings were particularly a bad idea. reply mcguire 10 hours agorootparent\"Why Pascal is Not My Favorite Programming Language\", Brian W. Kernighan, April 2, 1981:https:&#x2F;&#x2F;www.cs.virginia.edu&#x2F;~evans&#x2F;cs655&#x2F;readings&#x2F;bwk-on-pas...One of the major problems, as I recall, was that Wirth&#x27;s basic Pascal definition was very limited---the max 256 character strings, for example. So the makers of \"production\" Pascal compilers added extensions to do all of the things that you would want to do and unfortunately those extensions were all incompatible. reply pjmlp 1 hour agorootparentA famous rant ignoring Pascal dialects, while C still lacked a standard and was a bunch of dialects all over the place. reply marcosdumay 12 hours agorootparentprevOh, by 73. Impressive. I didn&#x27;t know that.Still, that was a much more powerful machine than the ones people wrote C for. And when the cheap segment of those \"fridge computers\" became powerful enough to run whatever you wanted to put on it, people started using small workstations. And when those workstations became powerful enough, we got PCs.It&#x27;s only when the PCs got powerful enough that we could start to ignore the compiler demands and go with whatever language fit us better. (The later reductions all were based on cross-compiling, so they don&#x27;t matter here.) reply pjmlp 1 hour agorootparentGo check the capabilities of systems written in high level languages like ESPOL and NEWP in 1961.Let not say that a 1961 system is more powerful than a PDP-11. reply pjmlp 1 hour agorootparentprevMesa not Pascal. replymcguire 11 hours agorootparentprevHow many Lisp Machines did Texas Instruments sell? (I mean outside of that one lab at UT Austin.) :-)I&#x27;m talking about applications developers who came out of the small mainframe&#x2F;minicomputer world of the 70s and into the workstation&#x2F;microcomputer world of the 80s. They started with assembly, and prying them off of it was as hard as convincing engineers to use FORTRAN. Convincing those application developers to use a garbage collected language, Java, was hard in the 90s. reply notacoward 12 hours agorootparentprevThe fact that those things existed does not refute the GP&#x27;s point. Many companies well into the 80s at least had programmers and codebases that had to be weaned away from assembly, despite the fact that higher-level alternatives had existed for a while. That&#x27;s just empirical fact, regardless of the reasons. I myself started programming in 68K assembly on the original Mac because I couldn&#x27;t afford a compiler and interpreted languages (there were at least Lisp and Forth) couldn&#x27;t be used to write things like desk accessories. Remember, gcc wasn&#x27;t always something one could just assume for any given platform. The original statement is correct; yours is not, because of limited perspective. reply memefrog 9 hours agorootparentprevIt&#x27;s quite clear to me that C is appropriate for applications work. Most applications I use on a daily basis are written in C (and were written after the 90s), and most of the rest are written in C++. What makes you think you can&#x27;t write applications in C? reply pjmlp 13 hours agorootparentprevOnly inside Bell Labs, the world outside was enjoying high level systems programming languages since 1958 with the introduction of JOVIAL. reply mcguire 10 hours agorootparentWhere by \"the world outside\" you mean DoD contractors? reply pjmlp 3 hours agorootparentEveryone that was using JOVIAL, ESPOL, PL&#x2F;I, PL&#x2F;S, PL&#x2F;X, PL.8, PL&#x2F;M, Mesa, ALGOL 60 and 68 based languages, Modula-2, Solo Pascal, Concurrent Pascal, Lisp, BASIC compilers,....Burroughs, IBM, DEC, Xerox, ETHZ, MIT, Intel,.... reply overgard 14 hours agorootparentprevThe sheer amount of software that you&#x27;re likely using right now that&#x27;s written in C would seem to contradict your claim. reply SubjectToChange 12 hours agorootparentThe market share of C in desktop, server, and other \"enterprise\" applications has drastically dropped since the 90s. Nowadays it&#x27;s quite rare to see C chosen for new projects where it isn&#x27;t required. In fact, despite of how pervasive it is, a huge amount of C code cannot be built on a pure C toolchain, i.e. C is essentially like Fortran. reply mcguire 10 hours agorootparentprevIt still hasn&#x27;t entirely sunk in. :-)Plus, legacy code. reply daymanstep 14 hours agorootparentprevWhy is C inappropriate for applications work? reply grumpyprole 14 hours agorootparentThe technical arguments should be obvious, e.g. spending ones complexity budget on manual memory management and avoiding footguns. But one amusing anecdote is that the open source GNOME project founders were so traumatized by their experience building complex GUI apps in C (already a dubious idea 20 years ago), that they started building a C# compiler and the Mono project was born. reply memefrog 9 hours agorootparentYou don&#x27;t spend \"complexity budget\" on manual memory management. Manual memory management is much simpler and easier than trying to manage complex arrangements where things are being allocated and deallocated all over the place, all the time.Gnome programs are largely still written in C, but it isn&#x27;t actually C. Not really. It&#x27;s glib, which is almost a whole new language written on top of C. It&#x27;s its own little world and it&#x27;s not a good world. For example, it calls abort() whenever it fails to allocate memory. reply grumpyprole 2 hours agorootparent> You don&#x27;t spend \"complexity budget\" on manual memory management.Of course you do, especially in applications where there is no benefit to be gained versus using a GC. This is why Java was such a huge success, despite offering very little else over C++ other than GC (I think OCaml is a much better example of a GC language). Consider that an entire book has been written on such details as move semantics. For most GUI apps, a GC or other automatic memory management has proved fine.> Gnome programs are largely still written in C, but it isn&#x27;t actually C.It&#x27;s still C whatever libraries are used. It&#x27;s still manual memory management with footguns. This is why they created \"Vala\". reply memefrog 2 hours agorootparent>Of course you do, especially in applications where there is no benefit to be gained versus using a GC.I am afraid you misunderstood my comment. Of course C isn&#x27;t good for writing code that calls &#x27;malloc&#x27; millions of times per second. That&#x27;s just bad code, which you can write in any language. You should not be dynamically allocating memory all over the place. If you have sane allocation strategies, then having to &#x27;manually&#x27; manage them is completely fine.>This is why Java was such a huge success, despite offering very little else over C++ other than GC (I think OCaml is a much better example of a GC language).Java is the quintessential example of a language that was made popular through marketing and hype.Getting reasonable performance out of the JVM requires far greater expertise than doing the same in C. The JVM&#x27;s GC is insanely complicated and has a million different knobs which can drastically affect performance. Or they can apparently do nothing. Until you turn other knobs...>Consider that an entire book has been written on such details as move semantics.There are no &#x27;move semantics&#x27; in C. Yet another way in which it is superior to C++. C++, which is a horrible language designed by nerds who enjoy standardese more than they love their own children, has &#x27;move semantics&#x27; bolted on with an arcane &#x27;rvalue references&#x27; mechanism that gets more complicated in every version of the standard.>For most GUI apps, a GC or other automatic memory management has proved fine.Retained-mode UI is something that is only reasonable with automatic memory management. The way that lifetimes of objects works in those APIs really does require a garbage collector because it&#x27;s all so dynamic.The immediate-mode UI approach, which has many other benefits as well, works perfectly fine with manual memory management.>It&#x27;s still C whatever libraries are used. It&#x27;s still manual memory management with footguns. This is why they created \"Vala\".Objective-C is more like C than \"glib\" C is. As the suckless guys said:\"glib - implements C++ STL on top of C (because C++ sucks so much, let&#x27;s reinvent it!), adding lots of useless data types for \"portability\" and \"readability\" reasons. even worse, it is not possible to write robust applications using glib, since it aborts in out-of-memory situations. glib usage is required to write gtk+ and gnome applications, but is also used when common functionality is needed (e.g. hashlists, base64 decoder, etc). it is not suited at all for static linking due to its huge size and the authors explicitly state that \"static linking is not supported\".\" reply seabass-labrax 12 hours agorootparentprevIn 2023, you&#x27;ll be hard pushed to find a GNOME application actually using C# and Mono. The vast majority of GNOME components are written in C, with a large number of them written in Vala and some in Rust and JavaScript. reply grumpyprole 11 hours agorootparentIt was indeed a big yak to shave. Cloning a Microsoft technology probably wasn&#x27;t a good idea for OSS adoption either. reply TillE 14 hours agorootparentprevTry writing a generic, reusable data structure in C. It&#x27;s agony. reply bluetomcat 14 hours agorootparentYou don’t need to write generic and reusable data structures in C. You write a data structure suited for the problem at hand, which often means that it’s going to be simpler and more performant because of the known constraints around it. reply grumpyprole 13 hours agorootparentIt could be more performant because of the known constraints around it, or it could be an ad-hoc, informally-specified, bug-ridden, slow implementation of half of some data structure. At least with a generic and resuable data structure you have a known reliable building block. Again, performance over safety. reply commonlisp94 12 hours agorootparent> It could be more performantNo, it almost always is. The designers of a generic library can&#x27;t anticipate the use case, so can&#x27;t make appropriate tradeoffs.For example, compare `std::unordered_map` to any well written C hash table. The vast majority of hash tables will never have individual items removed from them, but a significant amount of complexity and performance is lost to this feature. reply SubjectToChange 11 hours agorootparentNo, it almost always is.A library author can spend ridiculous amounts of time refining and optimizing their implementations, far more than any application programmer could afford or justify.The designers of a generic library can&#x27;t anticipate the use case, so can&#x27;t make appropriate tradeoffs.This is definitely not true. Take C++ for instance, not only is it possible to specialize generic code for particular types, but it&#x27;s absolutely routine to do so. Furthermore, with all sorts of C++ template features (type traits, SFINAE, CRTP, Concepts, etc) even user-defined types can be specialized, in fact it&#x27;s possible to provide users with all sorts of dials and knobs to customize the behavior of generic code for their own use case. This functionality is not just a quality-of-life improvement for library users, it has profound implications for performance portability.For example, compare `std::unordered_map` to any well written C hash table.std::unordered_map is a strawman. There are a plethora of generic C++ hash tables which would match, if not soundly outperform, their C counterpart. Also, even if we blindly accepted your claim, then how do you explain qsort often being beaten by std::sort or printf and its variants being crushed by libfmt? What about the fact that Eigen is a better linear algebra library than any alternative written in C? reply memefrog 9 hours agorootparentYes a library author can spend a lot of time refining and optimising their generic data structure, but can never escape that it is generic.No amount of optimisation will make a hash table designed for items to be removed competitive with one where items do not need to be removed.>Take C++ for instance, not only is it possible to specialize generic code for particular types, but it&#x27;s absolutely routine to do so.So it&#x27;s not a generic data structure, then. When you specialise a template, you essentially write a concrete data structure for a particular type. Rather than writing a big generic data structure that&#x27;s inefficient then specialise it to the particular type, it is much easier just to write that specialised data structure in the first place.>std::unordered_map is a strawman. There are a plethora of generic C++ hash tables which would match, if not soundly outperform, their C counterpart.How is it a strawman? It&#x27;s in the standard library.>Also, even if we blindly accepted your claim, then how do you explain qsort often being beaten by std::sort or printf and its variants being crushed by libfmt?printf is on the order of 50 years old. libfmt as written about 5 minutes ago. Do you take into account in your comparison the many more years in which printf has been useful? Do you take into account the amount of time it takes printf to compile vs a huge C++ library like libfmt?Do you take into account all the code that has been slowed down by C++ programmers writing bad code and assuming a sufficiently smart compiler will inline everything for them? Do you take into account all the horrifically slow iostreams code out there?qsort and std::sort do completely different things. Comparing them is absurd. qsort takes the size and comparison operator at runtime. std::sort requires them to be specified at compile times. I frequently use qsort in a way that you simply could not use std::sort, because those things are runtime-variable.The proper comparison to std::sort is the implementation of a sorting algorithm written in C, specialised to the code it was written to work with. Then you can debate &#x27;is it worth using this for the minor performance gain&#x27; etc. But comparing it to qsort is inane and demonstrates you don&#x27;t even know what the two functions do. reply commonlisp94 10 hours agorootparentprev> A library author can spend ridiculous amounts of timeThat&#x27;s true. But simply having knowledge of the goal and a few simplifying assumptions can beat all the optimization in the world. In other words, a polished sub-optimal approach isn&#x27;t as good as just having a better approach. `std::unordered_map` is heavily optimized, but can&#x27;t make any tradeoffs because it&#x27;s a general tool.> plethora of generic C++ hash tables which would match, if not soundly outperform, their C counterpart.Post one.> not only is it possible to specialize generic code for particular types, but it&#x27;s absolutely routine to do so.Yep, it can do type base specialization, not application based specialization though. That requires a programmer.> how do you explain qsort often being beaten by std::sorta standard library C function often cannot be inlined to remove the comparison function pointer call, whereas std::sort trivially can.If you wrote one yourself for a particular problem, it would not have this issue. This is actually a great example of where C excels because the choice of sorting algorithm so much depends on the kind of data you are sorting.Let me be clear about my claim: tailor made solutions to each problem will almost always be faster than generic solutions. Do you really disagree with that? If you want to argue that maybe it&#x27;s not productive to work that way, that&#x27;s a different argument. reply c-cube 8 hours agorootparent> post oneAbseil or folly both have optimized hashtables, I believe. Rust&#x27;s standard HashMap follows the same design. It involves SIMD to look for a bucket whose hash matches the query&#x27;s so redoing it in C every time you need a hash table will be quite impractical. reply SubjectToChange 10 hours agorootparentprevLet me be clear about my claim: tailor made solutions to each problem will almost always be faster than generic solutions. Do you really disagree with that?I disagree with it in the sense that I disagree with the statement \"A human will always be able to write the same or better assembly than a C compiler, because humans can learn the compiler&#x27;s tricks and make optimizations which the compiler is not allowed to make.\" It&#x27;s a true statement, but it&#x27;s so detached and irrelevant that it hardly matters.Generic code has proven itself time and time again, even Go caved in and supported it. reply commonlisp94 4 hours agorootparentThe assembly example isn&#x27;t a good comparison. We have compilers that can generate a lot of assembly tricks most programmers wouldn&#x27;t write. We don&#x27;t have a way compiler that can analyze the logical constraints of a programming problem and simplify the data structures in the library.> Generic code has proven itself time and time again, even Go caved in and supported it.I&#x27;m not saying anything against the language feature generics. There is plenty of use for them even in a self contained code base. reply mcguire 10 hours agorootparentprevFor one example,https:&#x2F;&#x2F;github.com&#x2F;tmmcguire&#x2F;rust-toys&#x2F;blob&#x2F;master&#x2F;alternati...is a program that mmap&#x27;s an anagram dictionary file and builds a fast-n-dirty hashmap dictionary over the file data. It took about an afternoon to write and was pretty decent.https:&#x2F;&#x2F;maniagnosis.crsr.net&#x2F;2014&#x2F;08&#x2F;letterpress-cheating-in... reply snovv_crash 5 hours agorootparentprevUnordered map is a known design issue, on the same order as std::vector. C doesn&#x27;t even have std::vector> reply NavinF 13 hours agorootparentprevThat must be why every C project has its own string, dynamic array, hashtable, etc. It&#x27;s definitely more performant to have several different implementations of the same thing fighting for icache reply commonlisp94 13 hours agorootparentIt&#x27;s a nice thought, but in practice C binaries are orders of magnitude smaller than any other language. Also compilers make that tradeoff for inlining all the time. reply overgard 13 hours agorootparentprevTo be fair, most C++ projects (outside of embedded and games) use STL for string&#x2F;dynamic array&#x2F;hashtable, and while that standardization is certainly convenient I&#x27;m not sure STL is generally faster than most hand written C data structures, even with the duplicated code. reply mcguire 10 hours agorootparentprevEntirely true. Unfortunately, that comes at a cost of programming time and effort and a decent amount of risk. reply StillBored 14 hours agorootparentprevAgony might be a bit much, and i&#x27;m not trying to defend C because this is one of the strong reasons for using C++&#x2F;STL...But, generally one should just reach for a library first before doing a complex data structure regardless of language. And for example, the linux kernel does a fine job of doing some fairly complex data structures in a reusable way with little more than the macro processor and sometimes a support module. In a way the ease of writing linked lists&#x2F;etc are why there are so many differing implementations. So, if your application is GPL, just steal the kernel functions, they are reasonably well optimized, and tend to be largely debugged, are standalone, etc. reply sn_master 13 hours agorootparentprevTry doing the same in Go and it&#x27;s even worse. reply commonlisp94 13 hours agorootparentprevThat&#x27;s writing some other language in C syntax. You use arrays or you write a specialized version for the use case. reply memefrog 9 hours agorootparentprevWhat does that have to do with writing an application? reply mcguire 10 hours agorootparentprevThe short answer is that C makes it easy to do things that you probably shouldn&#x27;t ought to be doing. (The the answer to the opposite, \"what work is C appropriate for?\" is systems and embedded stuff, where doing-things-you-probably-shouldn&#x27;t is largely the name of the game.)Another answer is that C doesn&#x27;t have much in the way of guardrails; in a world where programmer time is much more expensive than machine time, guardrails make programming much faster. reply memefrog 9 hours agorootparentEvery language makes it easy to do things that you probably shouldn&#x27;t be doing. I don&#x27;t know how many times I&#x27;ve seen naive accidentally-quadratic string handling code in high level languages, for example.Your answer is just buzzword after buzzword. What makes C bad for writing applications? reply Gibbon1 13 hours agorootparentprevWhen talking about hot path optimizations though assembly is still a good alternative. reply latenightcoding 14 hours agoparentprevRead your article (and cloudfare&#x27;s) and as someone who uses musttail heavily I don&#x27;t understand the hype, as you mentioned in your blog: you can get tail call optimizations with (-O2), musttail just gives you that guarantee which is nice, but the article makes it sound as if it unlocks something that was not possible before and interpreters will greatly benefit from it, but it&#x27;s more reasonable to ask your user to compile with optimizations on than it is to ask them to use a compiler that supports musttail (gcc doesn&#x27;t). Moreover, musstail has a lot of limitations it would be hard to use in more complex interpreter loops reply mtklein 13 hours agorootparentOrdinarily you&#x27;re at the whim of the optimizer whether calls in tail position are made in a way that grows the stack or keeps it constant. musttail guarantees that those calls can and are made in a way that does not let the stack grow unbounded, even without other conventional -On optimization. This makes the threaded interpreter design pattern safe from stack overflow, where it used to be you&#x27;d have to make sure you were optimizing and looking carefully at the output assembly.If nothing else musttail aids testing and debugging. Unoptimized code uses a lot more stack, both because it hasn&#x27;t spent the time to assign values to registers, but people often debug unoptimized code because having values live on the stack makes debugging easier. The combination of unoptimized code and calls in tail position not made in a way that keeps stack size constant means you hit stack overflow super easily. musttail means that problem is at least localized to the maximum stack use of each function, which is typically not a problem for small-step interpreters. Alternatives to musttail generally involve detecting somehow whether or not enough optimization was enabled and switching to a safer, slower interpreter if not positive... but that just means you&#x27;re debug and optimized builds work totally differently, not at all ideal! reply kaba0 4 hours agoparentprevI do buy it in case of C++, but C? You can’t even have a proper data structure with it due to it being so inexpressive - and surely data structures are one of the most significant factors of performance.Besides, the industry hands down chose C++ for the truly performance-oriented workloads. reply stjohnswarts 4 hours agorootparentYeah I don&#x27;t use c any longer unless I absolutely have to. I mostly do embedded so that happens sometimes. I much prefer c++11 on up. reply jfengel 13 hours agoparentprevWith modern CPUs, that kind of hand-tuned assembly gets rarer and rarer. Pipelines and caching and branch prediction make it hard to know what&#x27;s actually going to be faster. And even when you do know enough about the CPU, you only know that CPU -- sometimes only one model of a CPU.There&#x27;s still a niche for it, but it&#x27;s tiny and it keeps getting tinier. reply izacus 13 hours agorootparentThat... really isn&#x27;t all that true. I find that myth being mostly perpetuated by people who don&#x27;t do any kind of performance work or have any understanding just how terribly unperformant most code out there is. reply jfengel 13 hours agorootparentThat is my observation as a compiler writer. reply SubjectToChange 13 hours agoparentprevOf course the problem is that the vast corpus of legacy C code was not written with such aggressive compilers in mind. reply muldvarp 16 hours agoprev> In effect, Clang has noticed the uninitialized variable and chosen not to report the error to the user but instead to pretend i is always initialized above 10, making the loop disappear.No. This is what I call the \"portable assembler\"-understanding of undefined behavior and it is entirely false. Clang does not need to pretend that i is initialized with a value larger than 10, there is no requirement in the C standard that undefined behavior has to be explainable by looking at it like a portable assembler. Clang is free to produce whatever output it wants because the behavior of that code is literally _undefined_.Also, compilers don&#x27;t reason about code the same way humans do. They apply a large number of small transformations, each of these transformations is very reasonable and it is their combination that results in \"absurd\" optimization results.I agree that undefined behavior is a silly concept but that&#x27;s the fault of the standard, not of compilers. Also, several projects existed that aimed to fully define undefined behavior and produce a compiler for this fully defined C, none of them successful. reply mpweiher 16 hours agoparent1. The people creating the C standard were adamant that just following the standard was not sufficient to produce a \"fit-for-purpose\" compiler. This was intentional.2. They were also adamant that being a \"portable assembler\" with predictable, machine-level semantics was an explicit goal of the standard.3. The C standard actually does have text giving a list of acceptable behaviours for a compiler and \"silently remove the code\" is not in that list. And this text used to be normative, but was later made non-normative.So I blame the people who messed with the standard, and guess who those people were? reply moefh 14 hours agorootparent> The C standard actually does have text giving a list of acceptable behaviours for a compilerThe exact opposite is explicitly stated in the standard (from C11 section 3.4.3): undefined behavior behavior, upon use of a nonportable or erroneous program construct or of erroneous data, for which this International Standard imposes no requirementsThe standard then lists some examples of undefined behavior, and it&#x27;s true that \"silently removing the code\" is not in the list. Still, I think it&#x27;s pretty clear that it&#x27;s acceptable behavior, since the standard just stated it imposes no requirements. reply mpweiher 14 hours agorootparent\"Permissible undefined behavior ranges from ignoring the situation completely with unpredictable results, to behaving during translation or program execution in a documented manner characteristic of the environment (with or without the issuance of a diagnostic message), to terminating a translation or execution (with the issuance of a diagnostic message).\"Note \"permissible\" and \"ranges from ... to\".Again, this used to be normative in the original ANSI standard. It was changed in later versions to no longer be normative. Exactly as I wrote. reply mike_hock 13 hours agorootparentWhich is logically equivalent to imposing no requirements. \"ignoring the situation completely with unpredictable results\" does not meaningfully constrain the possible behaviors. reply mpweiher 12 hours agorootparentThat turns out not to be the case.“Ignoring” is not “taking action based on”Ignoring is, for example, ignoring the fact that an array access is out of bounds and performing the array access.Ignoring is not noticing that there is undefined behavior and removing the access and the entire loop that contains the access. Or a safety check. reply mike_hock 1 hour agorootparentSo, generally, optimizations shouldn&#x27;t be allowed? Dead code removal shouldn&#x27;t be allowed? Substituting constants shouldn&#x27;t be allowed? Because \"ignoring\" UB is pretty much what the compiler did, and then let its optimization passes run to their conclusion.> ignoring the fact that an array access is out of bounds and performing the array accessThe idea that this is even meaningful is precisely the \"portable assembler\" misconception. reply mpweiher 29 minutes agorootparentExcept the misconception is that it is not.\"Committee did not want to force programmers into writing portably, to preclude the use of C as a “high-level assembler:”https:&#x2F;&#x2F;www.open-std.org&#x2F;JTC1&#x2F;SC22&#x2F;WG14&#x2F;www&#x2F;docs&#x2F;n897.pdfp10, line 39\"C code can be portable. \"line 30 replyUser23 14 hours agorootparentprevI think you’re misinterpreting. Maybe it’s clearer if we elide the relative subclause: undefined behavior behavior … for which this International Standard imposes no requirementsThat is an obvious definition of what is undefined behavior. It’s not giving license to do whatever. That said the ship has sailed and what implementors do obviously matters more than what the standard says. reply iso8859-1 14 hours agorootparentIf there are no requirements on what it&#x27;s doing, how is that not a license to do whatever?There is not even a requirement that a theoretical program that contains e.g. only preceding code, would still maintain any invariants. So I don&#x27;t see what an instance of \"whatever\" that violates \"no requirements\" would look like. reply User23 10 hours agorootparentRead with an either an atypical or malicious degree of literalism the standard supports ransomwaring your machine and indeed your entire network in the face of undefined behavior.What it actually means is the standard doesn’t require doing the impossible, not that a program error is license to generate malicious code. That’s why it gives a (now formerly) normative list of possible approaches. reply nlewycky 9 hours agorootparentNo maliciousness is required. \"1 + 2\" produces \"3\" only because the standard defines it so -- it is therefore required that 1 + 2 produce 3. When the standard does not say what to do, there is no requirement.You said \"it&#x27;s not a license to do whatever\" which is only true because it isn&#x27;t a license. The code can still do whatever, because there is no requirement that it do anything other than \"whatever\".You seem to be arguing from a position that the code has meaning unless somehow UB gets involved, but the reality is that these bits and bytes don&#x27;t mean anything until the spec tells us what meaning it has. reply mpweiher 5 hours agorootparent> until the spec tells us what meaning it has.That&#x27;s a commonly held belief, but wrong. My first C compiler predated the ANSI C standard. Yet the code very much had meaning, just not in terms of the C standard.The C standard defines the minimum a C compiler has to do to be in compliance with the C standard. It is not a complete definition, and this is intentional. reply nlewycky 4 hours agorootparent> > until the spec tells us what meaning it has.> That&#x27;s a commonly held belief, but wrong. My first C compiler predated the ANSI C standard. Yet the code very much had meaning, just not in terms of the C standard.Much like &#x2F;* plain English comments *&#x2F; have meaning, just not in terms of the C standard.Talking about prestandard C isn&#x27;t relevant because we&#x27;re talking about what a standards conforming compiler can do with undefined behaviour per the text of the standard. I do not find your counterexample compelling.> The C standard defines the minimum a C compiler has to do to be in compliance with the C standard.The standard does not define what a compiler has to do. Instead, it defines the C abstract machine as well as syntax attached to behaviour in terms of that abstract machine. When a program which is restricted to that syntax is executed, it must have the effects (upon the C abstract machine*) as specified in the standard.Sometimes the standard doesn&#x27;t specify anything for a given syntax in a given abstract machine state, and sometimes the standard explicitly specifies that \"the behavior is undefined\".> It is not a complete definition, and this is intentional.I&#x27;m not sure what you mean. Compiler extensions exist (and are generally regarded as a necessary evil), is that what you&#x27;re referring to? Or are you referring to implementation-defined things (all of which are explicitly called out in the standard)? Or something else? A citation, if you can?* Notably the C language says nothing about the real machine. Supposing you have an I&#x2F;O port at address 0x9000, accessing \"*((char*)0x9000) = 1;\" does not need to access memory address 0x9000 at all. Of course, compiler engineers are not silly and implemented it as accessing 0x9000 on the underlying machine. Similarly the standard committee is careful to ensure that the language it defines can be implemented without needed the overhead of a VM or interpreter, though sometimes they get that wrong. (For example, see the issues combining multiple alloca() and C99&#x27;s \"int foo[*];\" in the same function.)* reply mpweiher 20 minutes agorootparent> we&#x27;re talking about what a standards conforming compiler can doNo. You may be, I am not.I am talking about what a reasonable C compiler can do, and what the ANSI standards committee intended.Adhering to the ANSI&#x2F;ISO standard is at best a necessary condition for producing a useful C compiler. It is most definitely not a sufficient condition. As I&#x27;ve pointed out many times before, this was intentional.And the existence of pre-standard C compilers that worked is, of course, clear evidence that it is not a necessary condition either. Or at least was not.The C standard leaves a lot \"undefined\" or \"implementation defined\" that is actually well-defined on a concrete machine the compiled code runs on. If you seriously think the intention of all this was to allow demons to fly out of nostrils or for compilers to start mining bitcoins, which is all perfectly legal by the standard, well, I don&#x27;t really know what to say.Particularly because the creators of the standards clearly stated so. In the very standard itself. Now they didn&#x27;t make that language mandatory, so yeah, you can make a \"standards compliant\" compiler that violates that intent. But it will be a sucky compiler.C ≠ The ANSI&#x2F;ISO C standard.pwdisswordfishc 15 hours agorootparentprevCitation needed. Which people? What did they actually say? What was the text that supposedly forbade this interpretation of UB? Please don&#x27;t tell me this is again that tired wankery over \"permissible\" versus \"possible\". As if the choice of synonym mattered. reply 3836293648 14 hours agorootparentIt&#x27;s a rather infamous change between C89 and C99 where the description of UB was changed from basically don&#x27;t do this to please do this and compilers can do whatever they want if you do reply _kst_ 13 hours agorootparentThe definition of \"undefined behavior\" did not change in the way you describe between C89&#x2F;C90 and C99. In both editions, one possible consequence of undefined behavior is \"ignoring the situation completely with unpredictable results\" -- i.e., compilers can do whatever they want.There is no \"don&#x27;t do this\" or \"please do this\" in either edition. Both merely describe the possible consequences if you do.C90: undefined behavior: Behavior, upon use of a nonportable or erroneous program construct, of erroneous data, or of indeterminately-valued objects, for which the Standard imposes no requirements. Permissible undefined behavior ranges from ignoring the situation completely with unpredictable results, to behaving during translation or program execution in a documented manner characteristic of the environment (with or without the issuance of a diagnostic message), to terminating a translation or execution (with the issuance of a diagnostic message).If a \"shall\" or \"shall not\" requirement that appears outside of a constraint is violated, the behavior is undefined. Undefined behavior is otherwise indicated in this Standard by the words \"undefined behavior\" or by the omission of any explicit definition of behavior. There is no difference in emphasis among these three; they all describe \"behavior that is undefined.\"C99: undefined behavior behavior, upon use of a nonportable or erroneous program construct or of erroneous data, for which this International Standard imposes no requirements NOTE Possible undefined behavior ranges from ignoring the situation completely with unpredictable results, to behaving during translation or program execution in a documented manner characteristic of the environment (with or without the issuance of a diagnostic message), to terminating a translation or execution (with the issuance of a diagnostic message). EXAMPLE An example of undefined behavior is the behavior on integer overflow.(Some of the wording in the C90 definition was moved to the Conformance section in C99.) reply mpweiher 12 hours agorootparent“Permissible” ≠ “possible” reply _kst_ 12 hours agorootparentTrue -- but how does that affect the semantics?Both definitions say that undefined behavior can be dealt with by \"ignoring the situation completely with unpredictable results\". There are no restrictions on what can happen.(The standard joke is that it can make demons fly out of your nose. Of course that&#x27;s not physically possible, but it would not violate the standard.) reply mpweiher 6 hours agorootparentIgnoring ≠ taking action based onThe standard joke is a joke, because it is wrong. reply nlewycky 3 hours agorootparent> The standard joke is a joke, because it is wrong.No, it is a joke because it is silly.It is correct and intended for pedagogy. replympweiher 14 hours agorootparentprev\"Permissible\" and \"possible\" are not synonyms. reply memefrog 9 hours agorootparentprevIf they mean the same thing, why was it changed? Hint: they don&#x27;t mean the same thing. At all. reply _kst_ 14 hours agorootparentprevC is not a \"portable assembler\".An assembly language program specifies a series of CPU instructions.A C program specifies runtime behavior.That&#x27;s a huge semantic difference. reply mpweiher 12 hours agorootparent\"Committee did not want to force programmers into writing portably, to preclude the use of C as a “high-level assembler:”https:&#x2F;&#x2F;www.open-std.org&#x2F;JTC1&#x2F;SC22&#x2F;WG14&#x2F;www&#x2F;docs&#x2F;n897.pdfp10, line 39\"C code can be portable. \"line 30 reply petergeoghegan 16 hours agoparentprev> No. This is what I call the \"portable assembler\"-understanding of undefined behavior and it is entirely false.\"C has been characterized (both admiringly and invidiously) as a portable assembly language\" - Dennis RitchieThe idea of C as a portable assembler is not without its problems, to be sure -- it is an oxymoron at worst, and a squishy idea at best. But the tendency of compiler people to refuse to take the idea seriously, even for a second, just seems odd. The Linux kernel&#x27;s memory-barriers.txt famously starts out by saying:\"Some doubts may be resolved by referring to the formal memory consistency model and related documentation at tools&#x2F;memory-model&#x2F;. Nevertheless, even this memory model should be viewed as the collective opinion of its maintainers rather than as an infallible oracle.\"Isn&#x27;t that consistent with the general idea of a portable assembler?> I agree that undefined behavior is a silly concept but that&#x27;s the fault of the standard, not of compilers.The people that work on compilers have significant overlap with the people that work on the standard. They certainly seem to share the same culture. reply qsort 16 hours agorootparent> But the tendency of compiler people to refuse to take the idea seriously, even for a second, just seems odd.It&#x27;s not taken seriously because it shouldn&#x27;t be taken seriously. It&#x27;s a profoundly ignorant idea that&#x27;s entirely delusional about reality. Architectures differ in ways that are much more profound than how parameters go on the stack or what arguments instructions take. As a matter of fact the C standard bends over backwards in the attempt of not specifying a memory model.Any language that takes itself seriously is defined in terms of its abstract machine. The only alternative is the Perl way: \"the interpreter is the specification\", and I don&#x27;t see how that&#x27;s any better. reply petergeoghegan 15 hours agorootparent> It&#x27;s not taken seriously because it shouldn&#x27;t be taken seriouslyI really don&#x27;t know what you&#x27;re arguing against. I never questioned the general usefulness of an abstract machine. I merely pointed out that a large amount of important C code exists that is in tension with the idea that of an all important abstract machine. This is an empirical fact. Is it not?You are free to interpret this body of C code as \"not true ISO C\", I suppose. Kind of like how the C standard is free to remove integer overflow checks in the presence of undefined behavior. reply nickelpro 15 hours agorootparentprev> As a matter of fact the C standard bends over backwards in the attempt of not specifying a memory model.I mean, C explicitly specifies a memory model and has since C11 reply grotorea 13 hours agorootparentprevI wonder what&#x27;s the best solution here then. A different language that actually is portable assembly, or has less undefined behaviour or simpler semantics (e.g RIIR), or making -O0 behave as portable assembly? reply _kst_ 13 hours agorootparentStep 1: Define just what \"portable assembly\" actually means.An assembly program specifies a sequence of CPU instructions. You can&#x27;t do that in a higher-level language.Perhaps you could define a C-like language with a more straightforward abstract machine. What would such a language say about the behavior of integer overflow, or dereferencing a null pointer, or writing outside the bounds of an array object?You could resolve some of those things by adding mandatory run-time checks, but then you have a language that&#x27;s at a higher level than C. reply dale_glass 13 hours agorootparent> Perhaps you could define a C-like language with a more straightforward abstract machine. What would such a language say about the behavior of integer overflowWhatever the CPU does. Eg, on x86, twos complement.> or dereferencing a null pointerWhatever the CPU does. Eg, on X86&#x2F;Linux in userspace, it segfaults 100% predictably.> or writing outside the bounds of an array object?Whatever the CPU does. Eg, on X86&#x2F;Linux, write to whatever is next in memory, or segfault.> You could resolve some of those things by adding mandatory run-time checks, but then you have a language that&#x27;s at a higher level than C.No checks needed. Since we&#x27;re talking about \"portable assembly\", we&#x27;re talking about translating to assembly in the most direct manner possible. So dereferencing a NULL pointer literally reads from address 0x0. reply dooglius 13 hours agorootparentprev> What would such a language say about the behavior of integer overflowTwo&#x27;s complement (i.e. the result which is equivalent to the mathematical answer modulo 2^{width})> dereferencing a null pointerA load&#x2F;store instruction to address zero.> writing outside the bounds of an array objectA store instruction to the corresponding address. It&#x27;s possible this could overwrite something important on the stack like a return address, in which case the compiler doesn&#x27;t have to work around this (though if the compiler detects this statically, it should complain rather than treating it as unreachable) reply mpweiher 6 hours agorootparentprevThe reason not to define these things is exactly so C can be used as a high-level assembler, and the answer is always “whatever it is that the CPU naturally does”\"Committee did not want to force programmers into writing portably, to preclude the use of C as a “high-level assembler:”https:&#x2F;&#x2F;www.open-std.org&#x2F;JTC1&#x2F;SC22&#x2F;WG14&#x2F;www&#x2F;docs&#x2F;n897.pdfp10, line 39\"C code can be portable. \"line 30 reply mpweiher 15 hours agorootparentprevThat&#x27;s an interesting opinion.But it has very little to do with the C programming language. reply muldvarp 9 hours agorootparentprev> The idea of C as a portable assembler is not without its problemsThe main problem is that C is not a \"portable assembler\". You mainly argue that it should be, but it simply isn&#x27;t (and hasn&#x27;t been for a long time if it ever was).> The people that work on compilers have significant overlap with the people that work on the standard. They certainly seem to share the same culture.Isn&#x27;t that beside the point? If you want C to be a \"portable assembler\" you have to write a standard that specifies its behavior. The compilers will then follow. reply spookie 15 hours agoparentprev> Also, compilers don&#x27;t reason about code the same way humans do. They apply a large number of small transformations, each of these transformations is very reasonable and it is their combination that results in \"absurd\" optimization results.So true.It baffles me how sometimes I hear colleagues of mine just \"assuming\" that the compiler will deal with something. Something that does require a really high level reasoning to come true.It&#x27;s absurd. reply somenameforme 15 hours agorootparentIMO it all comes down to the, &#x27;Premature optimization is the root of all evil.&#x27; That saying was, at its best, not great. But it seems at some point down the road the &#x27;premature&#x27; part of that sentence was lost to history and it became something much worse. It goes some way towards explaining why we now need machines that would be considered supercomputers, just a couple of decades prior, to run a text editor.Unreal Engine is a beautiful example of this. The source code of that engine is absolutely full of &#x27;premature optimizations.&#x27; For instance repeatedly converting a Quaternion to a Rotator (Euler angles) is basically never going to get red-lined on a profiler, let alone be a bottleneck. Yet there&#x27;s a caching class used in the engine for this exact purpose. It&#x27;s all of these little &#x27;premature optimizations&#x27; that end up creating a system that runs vastly better than most any other engine out there, feature for feature. reply mike_hock 13 hours agorootparentIt&#x27;s a dogma pendulum like \"gotos are evil,\" \"YAGNI,\" object-oriented design (is good&#x2F;bad), etc.A pattern or anti-pattern gets identified and lessons drawn from it. Then people take the lesson as dogma and drive it to absurd extremes. Naturally this doesn&#x27;t have the desired effect, and then the baby gets thrown out with the bathwater, people do the exact opposite and take that to absurd extremes.Caching potentially expensive (relatively speaking) operations isn&#x27;t \"premature optimization,\" it&#x27;s a design principle. It&#x27;s much harder to retrofit something like this into a project after the fact than having and using it from the start.\"Premature optimization\" is applying complicated micro-optimizations early on that won&#x27;t survive any moderate code change. reply 6D794163636F756 14 hours agorootparentprevIt depends on the compiler really. C is nice is that you can choose a compiler fit for your purpose but it makes my next example harder to I&#x27;m going to discuss go. I was doing leetcode recently and one of the problems was to combine some set of sorted linked arrays into one bigger array. There are a few ways to do this but I ran two of them to see which was better.1.) I select the lowest from the set of first elements in the arrays, add it to the end of my new list, then increment the iterator for that array. 2.) Dump all of them into one array then sort the new array entirely.Surprisingly the second option was faster and didn&#x27;t have a higher memory cost. From what I could tell this was because it used fewer memory allocations, could run better optimizations, and the standard library in go has a good sorting algorithm. One of the greatest skills I think we can develop as programmers is knowing when to trust the compiler and when not to.All of this is to say I agree with you on principle but there is nuance and a degree to which we can trust the compiler, but only if we&#x27;ve chosen one that we are familiar with and that is well suited for the task at hand. reply almostnormal 14 hours agorootparentNot necessarily just a matter of details of the assembly, but also of cache utilization. reply overgard 14 hours agoparentprev> No. This is what I call the \"portable assembler\"-understanding of undefined behavior and it is entirely false. Clang does not need to pretend that i is initialized with a value larger than 10, there is no requirement in the C standard that undefined behavior has to be explainable by looking at it like a portable assembler. Clang is free to produce whatever output it wants because the behavior of that code is literally _undefined_.You&#x27;re kind of lawyering this. Sure, it&#x27;s \"undefined\", but is that useful to anyone outside of compiler writers? How useful is it to have a program that&#x27;s very fast but entirely wrong? If the behavior is undefined, I want an error, not a free license for the compiler to do whatever the hell it wants. reply muldvarp 2 minutes agorootparent> How useful is it to have a program that&#x27;s very fast but entirely wrong?This only affects you if your program has undefined behavior, at that point your program was wrong anyway, you were just lucky that the compiler compiled it into something that works. Taking a different compiler or a different target architecture and you might not be lucky. So even the old \"portable assembly\" kind of undefined behavior is actually the opposite of portable.> Sure, it&#x27;s \"undefined\", but is that useful to anyone outside of compiler writers?It may surprise you that compiler writers are not evil people that take joy in the suffering of their users. They implement these aggressive opti",
    "originSummary": [
      "Prioritizing performance over correctness in C and C++ programming languages can result in broken programs.",
      "Issues with uninitialized variables, null pointers, and undefined behavior are common in C and C++ due to this prioritization.",
      "The Go programming language is presented as an alternative with a different philosophy that prioritizes safety and security."
    ],
    "commentSummary": [
      "The discussions revolve around programming languages and their suitability for different tasks, such as prioritizing performance or safety features.",
      "C and C++ are considered to prioritize performance but may lack safety features compared to languages like Rust.",
      "There is a debate about the limitations and benefits of Rust compared to C++ and the importance of addressing the gap between high-level languages and hardware."
    ],
    "points": 239,
    "commentCount": 458,
    "retryCount": 0,
    "time": 1692376030
  },
  {
    "id": 37175200,
    "title": "Broadband monopolies push bill that would crush the ability to stand up to them",
    "originLink": "https://www.techdirt.com/2023/08/18/with-hr-3557-broadband-monopolies-are-pushing-a-bill-that-would-crush-your-towns-ability-to-stand-up-to-them/",
    "originBody": "TECHDIRT GREENHOUSE FREE SPEECH DEALS JOBS SUPPORT TECHDIRT OpenAI Says GPT-4 Is Great For Content Moderation, But Seems… A Bit Too Trusting After Canada Starts Taxing News Links, Canadians Are Upset That They Can’t Follow News Of Wildfires On Facebook With HR 3557, Broadband Monopolies Are Pushing A Bill That Would Crush Your Town’s Ability To Stand Up To Them Broadband from the this-is-why-we-can't-have-nice-things dept Fri, Aug 18th 2023 05:27am - Karl Bode For thirty-plus years, giant telecom monopolies have worked tirelessly to crush all broadband competition. At the same time, they’ve lobbied state and federal governments so extensively, that the vast majority of politicians are feckless cardboard cutouts with little real interest in market or consumer health. The result has been fairly obvious: Americans pay some of the highest prices in the developed world for sluggish, slow broadband with historically abysmal customer service. Telecom lobbyists love to insist that often-shitty U.S. broadband is the envy of the modern world (it isn’t). They also love to argue that the only reason U.S. broadband isn’t even more awesome is because of “too much government regulation,” unnecessary red tape, and “bureaucracy.” In this way they get to have their cake (enjoy unchecked monopoly power free from competition or regulatory oversight) and eat it too (demonize any government effort to do anything about monopoly power as the antithesis of progress). It’s an endless cycle where your broadband monopoly gets more powerful and the government gets weaker. Often under the pretense of “deregulation” and “reform.” It’s a pretty successful con. Telecom giants like Comcast and AT&T have effectively lobotomized the country’s top federal telecom regulator (the FCC) for going on the better part of a decade. They also have the majority of Congress under their bootheel, to the point where we can’t pass even basic consumer protection reforms, or nominate and seat any popular reformers to federal agencies. Even when you see “antitrust reform” performatively mentioned in Congress, telecom is never included. And this is all before the looming right wing Supreme Court’s Chevron Deference ruling strips away any remaining independent authority the FCC (and every other federal regulatory agency) has left. With the feds rendered useless on consumer protection and monopoly busting, telecom lobbyists have increasingly taken aim at the last vestiges of state and local government power. During the Trump FCC, that involved stripping away your town’s or city’s local authority over everything from cell tower placement to utility pole rates (again under the pretense that mean ‘ole Mayors, not unchecked monopolization and consolidation, is what’s holding back better broadband). The Ajit Pai era net neutrality repeal tried to ban states (unsuccessfully) from protecting broadband consumers. 16 States have passed laws banning your town or city from building its own broadband. House Republicans even tried to ban community-owned broadband networks entirely in the middle of a pandemic that painfully showcased the importance of affordable, reliable broadband. The goal throughout is obvious: AT&T, Verizon, Comcast, Charter, CenturyLink and other telecom giants want to be free to rip you off with high prices and substandard service. They want to be free of all meaningful competition. And they want local, state, and federal governments absolutely powerless to do anything about it. If there are any rules, they want to write them to their personal benefit. It’s a campaign they’ve been winning for decades. Nineteen proposed new telecom laws just stumbled forth from the the House Energy and Commerce Committee. One of them, HR 3557 (the American Broadband Deployment Act of 2023) focus on “pre-empting” any remaining local government authority over telecom giants. This is being presented, once again, as a “streamlining” of unnecessarily bureaucratic government power. In reality, HR 3557 would make it all but impossible for local governments to have much of a say in telecom infrastructure placement (regardless of environmental or historical impact), negotiate fair rates with telecom giants for things like rights of way, or utility pole usage, or have much of a any role in terms of consumer protection. From Doug Dawson, a widely respected industry consultant: [HR 3557] “Eliminates cable franchise renewals and eliminates the ability of local governments to require rules such as an ISP having to serve the whole community, the local government requiring PEG channels, or the local government requiring customer service standards.” It’s worth noting that the human beings actually involved in local governments weren’t invited to the single hearing on this subject, which speaks volumes: “When the committee held an initial hearing on broadband permitting streamlining, including a draft of the American Broadband Deployment Act, no state or local government was invited to testify.” In telecom policy conversations, local governments are always framed as some kind of faceless bureaucrats hell bent on ruining everybody’s good time for no coherent reason. But a lot of the systems telecom lobbyists are trying to dismantle serve important functions: “Local permitting and cable franchising processes are intended to make sure that communications infrastructure is deployed equitably and in the public interest, that work is done safely and in a way that protects valuable public resources, including the rights of way. Local governments are the stewards of these finite public resources.” It’s no coincidence that this new lobbying push comes as local governments around the country increasingly eye building their own fiber networks with an eye on affordability and even coverage (something that’s very popular among long-neglected consumers). As Dawson notes, AT&T and Comcast certainly don’t want your piddly Mayor standing in the way of them doing whatever they want: “The biggest killer is that the law would give holders of franchise agreements the ability to cancel the agreement without losing any rights-of-ways included in the agreement. This would also kill local franchise fees, a major source of revenue for many governments. Perhaps the most severe provision is that franchise contract holders can eliminate any contract provisions they deem to be commercially infeasible.” To be clear: some of the telecom bills winding through Congress are actually helpful. One would renew the FCC’s authority to conduct spectrum auctions, bizarrely lapsed due to a recent bout of government incompetence. Another would make broadband grants tax exempt (a boon to telecoms big and small). But as Dawson quite correctly notes, legislation like HR 3557 is seeded in there in the hopes it worms its way into a broader bill under the pretense of a broader telecom reform package. I’d be genuinely surprised if the bill itself wasn’t written by an AT&T or Comcast lawyer (probably using ALEC as a proxy): “This bill is going for a home run to eliminate local regulations these big companies don’t like. I’ve written recently about regulatory capture, and this is an ultimate example of changing the laws to get what the big monopoly providers want…This bill is the ultimate example of the biggest companies in telecom flexing their power and influence to bypass some of the last vestiges of regulation.” As the federal government becomes (quite intentionally) more dysfunctional, feckless, and corrupt, most meaningful telecom policy fights have shifted to the state or local level. In town after town, locals now find themselves fighting block by block against monopoly power, with less and less meaningful support from the feckless and captured federal government. Now, industry is eyeing the killing blow. Filed Under: american broadband deployment act, broadband, community broadband, corruption, fcc, hr 3557, local government, monopoly, municipal broadband, pre-emption, regulatory reform, telecom 7 CommentsLeave a Comment If you liked this post, you may also be interested in... Comcast, AT&T Try To Kill New Requirements To Be Transparent About Their Shitty Pricing Techdirt Podcast Episode 362: Gigi Sohn On Community Broadband Massachusetts Poised To Make Calls Free For Prison Inmates And Families Verizon Fails Again, Shutters Attempted Zoom Alternative BlueJeans After Paying $400 Million For It Dish, EchoStar Confirm Plans For Completely Pointless Merger Comments on “With HR 3557, Broadband Monopolies Are Pushing A Bill That Would Crush Your Town’s Ability To Stand Up To Them” Subscribe: RSS Leave a comment Filter comments in by Time Filter comments as Threaded Filter only comments that are Unread 7 Comments Collapse all replies This comment is new since your last visit. Anonymous Coward says: August 18, 2023 at 5:44 am and all in Congress just keep going along with the big telecoms wants as they have been encouraged to do so by the same companies handing out contributions for whatever they want to use them for! why do these fuckers get voted in time after time, shitting on the people they’re supposed to represent? why should we as customers put up with one of the worst broadband and customer services in the world? we’re supposed to be leaders in technology but really all we are are leaders in paying astronomical fees for a shit product, while paying the bosses absolute fortunes for keeping us in the Dark Ages!! Reply View in chronology Make this comment the first word Make this comment the last word This comment is new since your last visit. RuhRoh says: August 18, 2023 at 6:38 am It's your favorite foreign movie (Peg) “Eliminates… the local government requiring PEG channels” Getting rid of pesky community cable by law rather than by simply losing all their subscribers. Clever! Reply View in chronology Make this comment the first word Make this comment the last word This comment is new since your last visit. Pixelation says: August 18, 2023 at 7:43 am “When the committee held an initial hearing on broadband permitting streamlining, including a draft of the American Broadband Deployment Act, no state or local government was invited to testify.” Why invite Senators either? I mean, just pay them and be on your way. We all know. Collapse replies (1) Reply View in chronology Make this comment the first word Make this comment the last word This comment is new since your last visit. Threaded [2] Thad (profile) says: August 18, 2023 at 10:51 am Re: Why invite Senators either? (pssst the “H” in “HR 3557” is for “House”) Reply View in chronology Make this comment the first word Make this comment the last word This comment is new since your last visit. David says: August 18, 2023 at 8:31 am That's an alarmist headline The problem is that everything has an alarmist headline by now, and it is getting hard to call out the difference to “Transsexual liberals are cutting off your children’s penises to feed them to woke walruses masquerading as baby seals” and its ilk. Reply View in chronology Make this comment the first word Make this comment the last word This comment is new since your last visit. ECA (profile) says: August 18, 2023 at 11:28 am Correction “vast majority of politicians are feckless cardboard cutouts ” no no no. These are hand puppets. And its a wonder that hand is so FAR up their back sides. Even their lips are full of BS. Reply View in chronology Make this comment the first word Make this comment the last word This comment is new since your last visit. Nemo says: August 18, 2023 at 4:49 pm Yet another awful internet bill, yet... Somehow, the all-good-guys DNC can’t seem to stop the evil RNC, who surely must be behind it all. That’s how it works, right, DNC so good that it’s never criticized by name, RNC so evil that if they accidentally do something good, they’ll never be praised for it. Does Mikey have the right to set the bias that way? Sure, and he even has the right to delete any criticism of said obvious policy, too. Of course, that sends another message, and it ain’t a good one. But the blatant display of bias here is enough to cause me to discount any articles it crops up in, because I know I won’t get the whole truth, plus I’ll get yet another unrelated rant about who the “/actual/ bad guys” are, and how they must be stopped so the DNC can prevent bills like this from becoming law. Oh, wait, neither Party was mentioned here, so that can only mean that the actual danger lies on the Left, this time. Reply View in chronology Make this comment the first word Make this comment the last word Add Your Comment Your email address will not be published. Required fields are marked * Have a Techdirt Account? Sign in now. Want one? Register here Name Email Subscribe to the Techdirt Daily newsletter URL Subject Comment * Comment Options: Use markdown. Use plain text. Make this the First Word or Last Word. No thanks. (get credits or sign in to see balance) what's this? OpenAI Says GPT-4 Is Great For Content Moderation, But Seems… A Bit Too Trusting After Canada Starts Taxing News Links, Canadians Are Upset That They Can’t Follow News Of Wildfires On Facebook Follow Techdirt Essential Reading The Techdirt Greenhouse Read the latest posts: Winding Down Our Latest Greenhouse Panel: The Lessons Learned From SOPA/PIPA From The Revolt Against SOPA To The EU's Upload Filters Did We Miss Our Best Chance At Regulating The Internet? Read All » Trending Posts Social Engineering Meets Hacking With Prompt Hacking With HR 3557, Broadband Monopolies Are Pushing A Bill That Would Crush Your Town's Ability To Stand Up To Them More People Realizing KOSA Is A 1st Amendment Nightmare Techdirt Deals BUY NOW The 2023 American Sign Language Mastery Super Bundle Techdirt Insider Discord The latest chatter on the Techdirt Insider Discord channel... Mike Masnick: yeah, it's all virtual oh geeze, yeah, in person would be weird mildconcern: Yeah that was part of what I was reacting to. And part of why I thought maybe someone would recognize you, given where you live. Mike Masnick: oh yeah. if it were local... eugh. that would be awkward mildconcern: yeah running into someone at the grocery store? \"oh hi there, mr had to write sixteen marketing emails...\" Mike Masnick: hahaha mildconcern: But on th eother hand sometimes my sister joins me to work in a coffee shop on days when she doesn't have so many meetings and I do get more done when she's there, even though she'd hardly shame me for not focusing John Roddy: I'd be more of a people person if it weren't for all the people Mike Masnick: yeah, i mean on actual focusmate, i think about 40 to 50% of people i pair with are not even in the US. mildconcern: something about the implied pressure is real as I put it once, I like persons a great deal. I hate people. My vacation this year was hiking in up the Canadian Rockies. I ended up avoiding Banff because of its popularity and going to the other parks more. thadboyd: azcentral reports that James Larkin has died by suicide. [article] Mike Masnick: yeah. someone sent that to me last night. tragic. i'm trying to write up something today. bigtroublewingcong: Looking forward to listening to the latest podcast episode. I met with them early into 2023, right after Twitter announced the first round of changes to the API calls. I was worried that would negatively effect Block Party. I’ve heard really good things about the privacy extension from my infosec counterparts at other media orgs that worked with them to test it out. Mike Masnick: privacy party is great. only a small part of the discussion though candescence: So Patreon completely bungled payment processing this month Apparently part of it is because they started moving payment processing to their Dublin office (possibly for tax minimization purposes) and triggered a lot of red flags with fraud prevention processes Samuel Abram: Man, I’m feeling great: someone paid $25.35 for my entire discography on Bandcamp today! Mike Masnick: Nice! Samuel Abram: Thank you, your Maz-esty! Remember when I said that someone paid $25.35 for my entire discography on Bandcamp? Someone else just did! and I get paid twice as much! candescence: So would it be accurate to say that the movie/TV studios saw what Netflix was doing, wanted to get ahead of the streaming revolution and avoid getting completely left behind like the music/record industry did, and just rushed into streaming as quickly as possible? tomacamot: I think the studios did get left behind, Netflix was the only legit game in town for a very long time. Then HBO showed they could launch and control their own and it opened the flood gates, where they rushed in and made the space terrible as quickly as possible mildconcern: It's kind of funny to contrast what Doctorow says happened with audio books and Audible became the only platform & game in town, vs the Streaming Wars where *everyone* started a streaming service and it's just an unholy mess. I wonder if part of it is that the market for TV/Movies is so much larger than audiobooks, which could never support that much diversity BentFranklin: I have purchased entire discographies before. People are like, who is Endorphwind and why does your iTunes have 27 albums by Endorphwind? Mike Masnick: i mean, the problem with both of those is the proprietary/silo'd nature of each. the better scenario is one in which you have standardized formats/playlists/favorites that you can move between services, or standardized files you have access to regardless of service. John Roddy: Also, books became digitized and marketed well before the other fields we're used to. So the aggressive DRM that plagued early versions of all those was able to become accepted. bigtroublewingcong: I don't see how the subscription model for Audible, or Audiobooks, is successful. Anyone else listen to books in a much shorter time than one month? Having to wait 3-4 weeks for another credit is odd to me. It especially sucks when you're listening to a series. There are other options of course - Apple Books, and if your local library is on Libby - but even then you might not find what you're looking for if the book is exclusively on Audible or if there's a waiting list for a title on Libby. mildconcern: in a way they do in the backend, I'm sure. There aren't really proprietary video formats in either audiobooks or ebooks or movies. The barriers between them are legal & imposed by their creators or the platforms. Which is part of what makes it infuriating when their nickel & diming corners you. Right now I am subscribed to zero streaming services. Partly because I usually round-robin them and only have one going at a time, and between a very busy June for work and being out of the country most of July for vacation, I just axed the last one and didn't pick up another. Instead I'm reading a lot of books and remarking on the fact of how little I miss streaming. For me I get the audible 1-a-month because it's a freebie for some credit card I have. I just mix in audible audiobooks with podcasts and library audiobooks in the rotation and it works out fine. For me having 6-10 holds for books in Libby at a time works out that something I want to read by listening is up at any given time. It helps that as a MA resident I have access to the Boston Public Library as well as my local town; their collection is pretty vast. Mike Masnick: Yeah, we play the rotation game as well. And I use Libby for ebooks all the time. I rarely do audiobooks, because right now i have a backlog of about 1200 podcasts. mildconcern: Hah. I did a Great Podcast Culling during my vacation because of the backlog. It was liberating. Mike Masnick: i need to at some point mildconcern: I realized I was listening to several where the hosts ran out of material for their original concept and were just shooting the shit, and similar problems. Mike Masnick: re: streaming, some of the free streaming services are better than i expected. i got sucked into \"jury duty\" on amazon's \"freevee\" thing. and tubi seems to get some good movies mildconcern: I find I prefer podcasts for short drives, walks & cleaning the house, and audiobooks for long drives & long hikes, so vacation skewed more towards books I ended up reading & listening to about six books in 3 weeks which was pretty nice. except the one written by a former student that I couldn't get past the 1/3rd point. I have to lie to her sometime about how I liked it. Right now when I'm feeling braindead I flip the Roku Channel on and it's truly one of the most amazing collections of D-movie level crap I've ever seen. Sometimes I like crap. But it's impressive. Cathy Gellis: Tubi's catalog is quite good IMO and so is the app, but I understand it may be a Fox property now? mildconcern: Didn't Fox entertainment stuff get swallowed by the Disney whale? The other reason I'm staying off paid streaming though is that a friend pointed out that it felt like crossing a picket line right now. And as much as I suspect the SAG & Writers union is misguided in some of their aims, crossing a picket line is definitely something I don't do if I can help it If nothing else, my great uncle will come out of his grave and haunt me. Samuel Abram: The WGA and SAG-AFTRA have both said that they have not advocated a boycott of streaming services, and if you want to help them, donate to the entertainment community fund: [link] This fund helps make sure that striking writers and actors don't go broke because of the strike bigtroublewingcong: Yeah, I'm envious. My local library does not have the best selection of audiobooks (at least that I'm interested in listening to), and those that are popular atm (Oppenhiemer) , there's a 6 month wait. I recently listened to Three Body Problem during a road trip and I was hooked. Finished it quick but couldn't find The Dark Forest anywhere except for Apple Books. On a side note, the preview for the series on Netflix arriving in January looks pretty good. bode000: jury duty was a great show. Mike Masnick: it was so well done. though i keep hearing them say \"nothing like this had ever been done before\" but that's not true. i've definitely seen shows like that before. but this was by far, the most well done version of it John Roddy: Lol today's Twitter news will be fun Take one look at it and you'll see a mountain of nuances that roughly nobody will notice Cathy Gellis: What news? These days it all blurs together... John Roddy: Subpoena with gag order Cathy Gellis: Oh, the DC Circuit decision? Yeah... candescence: So Nintendo has been patenting mechanics and parts of the loading screen for Tears of the Kingdom: [article] Which frankly shouldn't be a thing since software patents, but it's not the first time a game company has patented parts of a loading screen (Namco infamously patented loading screen mini-games and basically only used it for a few games but stopped everyone else from exploring the idea). tomacamot: Are we not doing prior art anymore? deadspatula: The patent office long abandoned (if it ever did) proactively searching for any prior art that is not detailed in an academic journal. Very little of software programming makes it into an academic journal. mildconcern: It's kind of incredible to me that it's gone from \"of course, duh\" to \"impossible Luddite\" in such a short time to insist on having a phone with a headphone jack. Samuel Abram: I wish phones had headphone jacks as well. I _hate_ bluetooth headsets. Too unreliable mildconcern: With me and bluetooth headphones it is a race between whether I lose them or forget to charge them. so I just bought a Sony Xperia 1 V after holding onto my Pixel 4a 5G a bit too long. I need a phone with eSim support and wouldn't get one without a headphone jack, and as far as I can tell the Sony lineup is literally the only phone on the market that satisfies both. I have a pet theory that the rise of people listening to music on speakers and using the speakerphone in public is tied to the death of the headphone jack tomacamot: Nah that was happening in the blackberry days on the subways in Boston. Nothing new there at all. Mike Masnick: my phone still has a headphone jack because it's ancient. though i do use bluetooth headsets these days but i did recently see a positive review of a phone that still had a jack... lemme see if i can find it ah, the asus zenfone 10 is the one i heard about tomacamot: You can always use a USB-C to 2.5mm headphone jack dongle. I don't see what the big deal is. I used that dongle for a couple years while bluetooth headphones grew up. Now I have two sets that I use for different things, and it all works great. I rarely charge my headsets and they hold their charge for months when not being used. That said, I don't use them every day, so that use case would be different. mildconcern: A friend of mine has this phone and loves it. She wanted the phone jack but mostly liked the smaller size I don't want to have to carry around an extra thing, for one, and a dongle is the type of thing I'd lose constantly It's also just annoying to suddenly need an adapter to access the single feature of the phone I probably use the most. BentFranklin: Well, well, Mr. White. Apparently sometimes it IS RICO. candescence: For context, it's been reported that the Georgia indictments against Trump that are being planned involve, among other things, RICO charges. tomacamot: That was my first thought as well, glad I wasn't the only one Mike Masnick: Cathy Gellis: [video] mildconcern: Friend of mine pointed out that Trump's a Philly indictment away from sweeping the NL East. Mike Masnick: lol. i had not realized that, but that's hilarious mildconcern: There are apparently some investigations going on into attempts to seat a false slate of electors in PA so HOPE ISN'T DEAD YET. deadspatula: On Ken's current podcast Serious trouble, it was said that \"in Georgia, it almost always **is** RICO.\" Mike Masnick: yeah, i heard that too. looking forward to their follow up podcast on the georgia indictment, which they said will come out tomorrow. but apparently georgia's rico law is... different. special. John Roddy: That describes most of Georgia. Especially in terms of how pardons work. mildconcern: Finding a GA jury without at least one person who's willing to vote Trump innocent no matter what though will be some serious needle-threading bigtroublewingcong: I'd be interested to read Techdirt's take on the recent NYT vs OpenAI drama deadspatula: Good News! According to the crystal ball, its coming this afternoon. mildconcern: \"NYT sues someone for reading it.\" [article] well well well, if it isn't the consequences of our own government's actions Become an Insider! Recent Stories Friday 19:39 Netflix's Foray Into Video Game Streaming Is Getting Slightly More Interesting (0) 15:40 Social Engineering Meets Hacking With Prompt Hacking (19) 13:41 Appeals Court Says Woman Can Continue To Sue Over $8,000 Civil Forfeiture (5) 12:07 More People Realizing KOSA Is A 1st Amendment Nightmare (10) 10:47 Jordan's King Approves Bill That Criminalizes Online Anonymity, Publication Of Police Officers Names/Photos (10) 10:44 Daily Deal: The Complete Adobe Mastery Bundle (0) 09:32 After Canada Starts Taxing News Links, Canadians Are Upset That They Can’t Follow News Of Wildfires On Facebook (45) 05:27 With HR 3557, Broadband Monopolies Are Pushing A Bill That Would Crush Your Town's Ability To Stand Up To Them (7) Thursday 19:36 OpenAI Says GPT-4 Is Great For Content Moderation, But Seems… A Bit Too Trusting (10) 15:33 Sexy Sandwiches: PornHub Goes After Kebab Shop Over Signs, Logos (28) More Tools & Services Twitter Facebook RSS Podcast Research & Reports Company About Us Advertising Policies Privacy Contact Help & Feedback Media Kit Sponsor / Advertise More Copia Institute Insider Shop Support Techdirt Brought to you by Floor64 Proudly powered by WordPress. Hosted by Pressable. This site, like most other sites on the web, uses cookies. For more information, see our privacy policy",
    "commentLink": "https://news.ycombinator.com/item?id=37175200",
    "commentBody": "Broadband monopolies push bill that would crush the ability to stand up to themHacker NewspastloginBroadband monopolies push bill that would crush the ability to stand up to them (techdirt.com) 237 points by rntn 20 hours ago| hidepastfavorite151 comments SenAnder 15 hours ago[HR 3557] “Eliminates cable franchise renewals and eliminates the ability of local governments to require rules such as an ISP having to serve the whole community, the local government requiring PEG channels, or the local government requiring customer service standards.”This is a federal bill, but aren&#x27;t federal powers limited to regulating inter-state commerce? Yet the powers it strips from state legislatures are clearly aimed at intra-state commerce. reply LocalH 15 hours agoparentWickard v Filburn broke that, in ruling that a man growing more than the “legal limit” of wheat for his own use was nonetheless “affecting” interstate commerce. reply phrz 15 hours agoparentprevCongress&#x27;s Commerce Clause power in the Constitution is notorious for being very broadly interpreted in the modern era. Here, Congress is either regulating a \"channel\" of interstate commerce (the internet) or intrastate economic activity that interferes with interstate commerce (local ISP rules making nationwide ISP business more burdened). reply Philorandroid 18 hours agoprevIt&#x27;s fascinating that the author implies more regulatory power over telecoms would solve this, even though they&#x27;re plainly buying that same regulatory power when it&#x27;s advantageous. If \"the vast majority of politicians are feckless cardboard cutouts with little real interest in market or consumer health\" anyways, it&#x27;d seem a superfluous effort to give an agency more power only to sell it out later, right? reply jrh3 17 hours agoparentThe Telecom Act of 1996 started the current mess. I argue it was partly responsible for the dotcom bust. It killed the incentive to create broadband, and the internet without broadband is not that useful. It&#x27;s a regulatory mess. reply joecool1029 16 hours agorootparentYou&#x27;re probably being unfairly downvoted by people associating this act with the CDA but you&#x27;re absolutely right. That act basically killed the booming industry for last-mile fiber by forcing the incumbent companies to lease out last mile access. Fast forward a few more years to 2004, the startups that put those lines in are gone and the incumbents won the ability to stop leasing most of their infra out: https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20160818001129&#x2F;http:&#x2F;&#x2F;www.ictreg... reply tguvot 11 hours agorootparentin Israel similar regulation created a bunch of ISP that were riding on infrastructure of the only incumbent telecom and cable companies. What resulted in lower prices for everybody without stalling upgrades of infrastructure. I got 2013 vdsl2 i think with 150&#x2F;20 or something. Nowdays it&#x27;s same with fiber deployment.In same way mobile companies got regulated what created a big market for mvnos what dropped prices by factor or 3-4.The problem not with unbundling but with how regulation was done and what loopholes it created (no idea what went down, but based on article many people spent a bunch of time in court fighting it). Though, my personal guess that incumbent telecom that were unbundled had also mobile businesses and decided to go for mobile broadband and just to let copper die. In Israel telecom&#x2F;cable companies were forbidden from operating mobile network.As anecdote, after I moved to states I had a chat on some network conference with somebody who claimed that he is very liberal and was complaining about quality&#x2F;price of broadband&#x2F;mobile in USA. I suggested to do same reforms as in Israel to what he replied that this is extremely crazy approach. reply PaulDavisThe1st 17 hours agoparentprevThe author actually implies that banning local municipalities from having any regulatory capacity when it comes to broadband (and, it seems cable) is a bad idea.They already have that capacity now; the proposed house bill would remove it. reply SenAnder 15 hours agorootparentIt&#x27;s instructive to consider why local politicians are so much more hostile to ISP monopolies than the centralized, federal politicians. I think it&#x27;s a combination of being closer to your constituents, legislating for people you meet every day, and economics - there are many local politicians to brib-lobby, but relatively few federal ones, giving orders of magnitude better return on investment. reply PaulDavisThe1st 15 hours agorootparentYou make the claim that local politicians are \"much more hostile\" to ISP monopolies that federal ones. But what&#x27;s the evidence for this?I know of several members of the house & senate who are severely hostile to ISP monopolies, but power at the federal level lies mostly with the FCC, thus blunting the effectiveness of any particular elected representative.At the local level, get the mayor pissed off at you (and a legal framework that allows it), and you (may) have a problem. reply SenAnder 14 hours agorootparentMy evidence is that if it were the reverse, then ISPs would be lobbying for states rights instead. reply thfuran 18 hours agoparentprevMost government agencies aren&#x27;t primarily staffed by politicians. reply pempem 17 hours agorootparentThey are just primarily gutted by politicians reply nielsbot 17 hours agoparentprevof course, some regulation is good and some is bad. more regulation is not always bad as libertarians would have you believe. reply wing-_-nuts 19 hours agoprevHaving access to fast municipal internet is going to be a requirement for every home I buy going forward. That restricts my possible relocation options, but it&#x27;s worth it to not have to deal with monopoly companies that can simply dictate whatever terms they like. Imagine if other utilities were private and had similar powers. reply ChrisMarshallNY 18 hours agoparentThere&#x27;s been a couple of stories about people (usually fairly young couples) that brought houses, on the specific guarantee from their local \"broadband\" monopoly, that they would have the service, and found out only after moving in, that they did not, in fact, have the service, and would need to pay many thousands of dollars, to get substandard service.The companies that made the guarantees were allowed to say \"oops, we goofed. Our bad.\", without having to pay a dime, or even say sorry. reply tw04 16 hours agorootparentThis literally happened to me. Looked at a house, Comcast said they serviced the address. First I checked online, then I called in on top of that just to make absolutely sure. Bought the house, ordered my Comcast, tech shows up on the day of install and says: \"Sorry, we don&#x27;t actually service this address, not sure what happened\". I call in and they basically said tough shit, there&#x27;s no way we&#x27;re ever running service to that neighborhood. reply tguvot 11 hours agorootparentBefore I bought house I opened access panel on a side of the house to make sure that there is coax&#x2F;etc going into the house and asked neighbors about availability of the service reply zlg_codes 15 hours agorootparentprevWow, the gall of those people. It should be punishable for a business to lie to you like this. You made a financial decision based on information that the business should have on file. reply ChrisMarshallNY 14 hours agorootparentApparently, the reason they do it, is that it qualifies them for some kinds of favors&#x2F;kickbacks, if they are listed as serving an area, and it also may prevent rivals from serving that area.They tend to have a lot of local politicians in their pocket.Ars Technica tends to cover this crap. They were not fans of Ajit Pai. reply jmholla 14 hours agorootparentprev> It should be punishable for a business to lie to you like this.Agreed. Are there routes to sue these corporations? I think there are laws against financial decisions dependent on information provided by others. reply barbazoo 18 hours agorootparentprevHow would one get such a guarantee, surely it&#x27;s not just the availability check by address because I wouldn&#x27;t expect that to be binding. reply spamizbad 17 hours agorootparentWell, story time. Because I went through this process.I purchased a condo in a building that Comcast (A cable internet ISP) claimed to service. I even called ahead before putting an offer on the unit to verify I&#x27;d have them as an option, since they were the only high speed internet option available besides slow DSL or 4G. Sure enough, Comcast told me they service that address.Fast forward to near the move-in date, I call Comcast to transfer my service to this location. They tell me sorry, we can&#x27;t do that, we don&#x27;t service this address. I tell them this is impossible, because not only am I on your coverage map, but I called a month ago and you told me you service it. They said sorry, nothing they could do, and that I should try Comcast business or pay something like $4000 for a build-out.Well, I was desperate and called Comcast business to see if I could get a business line in my very residential condo. Weirdly, they allowed it. But I had to pay $200 for a setup fee and then roughly $100&#x2F;month for what was basically 50mbps internet, locked in a 2 year contract. I had no choice, so I ate the cost - which looked much better than the $4000 option. But then Comcast said \"Hey, we want to install a distribution box in your building, can we do that?\" and I had to wrangle with the condo board to get that thing installed. About 3 months later I finally had Comcast internet, locked into an expensive contract. But because Comcast had installed a distribution box in the building, at least my neighbors could now actually get the service Comcast claimed they offered on the map (even for regular home internet). After 2 years my contract was up and I was able to switch to residential internet at a lower rate.I suspect if this was a SFH rather than a single unit in a 28-unit condo building I&#x27;d be screwed and have to shell out the $4K. reply em-bee 16 hours agorootparentprobably not easy to achieve, but i think the contract needs to be made with the property owners, that is, if their property doesn&#x27;t have the required internet service, they need to pay to fix it or allow you to cancel the contract. reply michaelt 17 hours agorootparentprevA legally binding guarantee? I doubt anyone will give you one.But if you&#x27;re buying a home you have other options - for example, you can just buy a house that already has a working broadband connection. The homeowner will give you the wifi password to run a speed test if you ask nicely.If the property doesn&#x27;t have broadband already, there are other signs you can sometimes spot - cables going into other people&#x27;s properties, street cabinets and handholes with the company&#x27;s branding, nearby wifi networks with supplier names in the SSID, and suchlike. reply Analemma_ 14 hours agorootparentprevYou can&#x27;t. Several people have shared stories about trying to get it in writing from Comcast (and it is always Comcast) that service is available at a particular address before they move there, specifically to avoid this issue, and the CSRs will not do it. They&#x27;re very careful not to make a paper trail with discoverable evidence. reply ChrisMarshallNY 17 hours agorootparentprevI am quite sure that there was never anything binding. reply foobarian 18 hours agorootparentprev> the specific guaranteeAh, so it was in writing and backed up by an escrow account? :-D reply ChrisMarshallNY 17 hours agorootparentVery doubtful.Probably a Web site, and, in one that I read, actual verbal assurance, by sales person. reply ilyt 18 hours agoparentprevHonestly infrastructure itself like fiber to the homes should be operated separately from the ISPs. Would be far easier to have a competition if new player in town would have to only get their connectivity up to some central spot and then pay per client connected, rather than have to manage their fiber anywhere they go. reply gottorf 18 hours agorootparentYeah, there&#x27;s a good argument to be made that the wire (be it fiber, coax, or whatever) itself should be treated as a public utility, since it is a natural monopoly. Several countries do operate like that. reply tialaramex 18 hours agorootparentThis is in effect the regime in the UK for example. The incumbent Telco, BT Openreach, are regulated to offer \"last mile\" for the same fee to their closely related customer business BT and to third parties.In rural areas BT are required to offer service, if you live somewhere really crazy (like up a mountain) they can make you pay costs, but they can&#x27;t say \"No\". On the other hand in a city where a dozen outfits might want to run cable, BT automatically are allowed, everybody else needs to get an OK.It&#x27;s not perfect but it means that for the actual Internet stuff it&#x27;s irrelevant, everybody can get a choice, I pay a lot for great customer service, static IPv4 and v6 and zero censorship, there are cheaper options, there are options with so-called \"unlimited\" usage, but the choice doesn&#x27;t impact the cable in the ground.Because I live in a city I could buy faster but crappier service from a cable company, or a dedicated fibre Internet company but that wouldn&#x27;t be an option in a village somewhere.And yes, nobody is building new copper. If a company tells you fibre is too expensive they&#x27;re telling you they can&#x27;t afford to be a Telco, they&#x27;re a badly run business, chances are the unacceptable costs are in their C-suite not buried in the street. reply rjsw 17 hours agorootparentThis isn&#x27;t true everywhere in the UK.Neither Openreach nor City Fibre have laid fibre in my area of a big city, the only date given for when they will do it is sometime before 2026. A dedicated fibre internet company has cabled my street though.I just switched from an ISP that uses the Openreach infrastructure, probably the same one you are using from your description, to the dedicated fibre internet company as it was the only way I could get a faster connection. reply te_chris 14 hours agorootparentprevThe UK is a bad example because Openreach have done a shit job rolling out fibre. The govt bottled it and stopped them fully separating from BT after lobbying.NZ is a good example: our BT was actually forced to fully separate retail and wholesale businesses (Spark and Chorus). They have a national fibre network that operates as a utility and fibre internet is ubiquitous and cheap. reply tialaramex 13 hours agorootparentI&#x27;m much less bothered about \"fibre Internet\". It&#x27;s a bigger number, people like bigger numbers, but they generally don&#x27;t matter very much.1Gbps symmetric would be cheaper here than my current 40Mbps. But, it would come from a typical mediocre \"CGNAT is fine for reading Facebook and watching Netflix\" company, whereas my ISP gives me a &#x2F;48 to put all my stuff in so I can use it from anywhere without some dubious tunnelling hack.A long time ago now, 1996, I moved into my first shared student house. We had Always On, because we were a household of nerds and we knew that&#x27;s what we wanted. That&#x27;s a shared (between maybe five people, more when girlfriends are in) 56kbps Internet link. But what matters isn&#x27;t bandwidth it&#x27;s the Always On nature of the connectivity. Within months, modern habits like searching for the answers to questions on the Web as a reflex, became normal in that house, because everybody had Internet all the time.Now, I&#x27;m not suggesting 56kbps is good enough in 2023. But I don&#x27;t find I have ever wished for 1Gbps rather than 40Mbps. Not even \"Sometimes I wonder if it&#x27;s worth it\". It just never arises as a consideration. 1Gbps is more, but more than plenty is just irrelevant. It&#x27;s like I&#x27;ve never been bothered that my electricity supply is only 100A. I&#x27;ve never felt like I&#x27;d need more, so, who cares ? reply deprecative 5 hours agorootparentIt seems like the misunderstanding &#x2F; issue you have is that you don&#x27;t appear to download anything. As someone that downloads plenty (video games, large binaries in general) I&#x27;m at 1.2Gbps and would definitely need more in the next few future years. Would I be fine with 500Mbps&#x2F;500Mbps? Sure but I&#x27;d be grumpy but at least it would be symmertrical. reply te_chris 3 hours agorootparentI have 1gbps but it’s DOCSIS so up is mediocre. I’d rather a (much) slower symmetric fibre connection any day replygregw2 15 hours agorootparentprevAgreed. But you are 27 years late to this argument at least in the US. In 1996, when the Internet was hot, telcom providers promised to spend tens of billions building out fiber infra US-wide as long as Congress guaranteed them they owned the fiber and would not have to act as a public carrier as they had to do with their copper (phone, xDSL internet). My understanding is that was granted in the Telecommunications Act of 1996. I confess I am finding it hard to find the smoking gun making this so clear but it was moderately clear at the time. The legislation did require unbundling of the copper elements to competitive local exchange (telco) entities which then sprung up but slowly died under the onslaught of Baby Bell marketing and technical neglect.A personal anecdote illustrating the technical neglect: In the competitive DSL era pre-fiber, I once spent weeks trying to get my local CLEC to fix my intermittent DSL connection in my suburban dwelling and their hands were tied because they were in turn dependent on the local Bell company to actually service&#x2F;debug last-mile issues and the local Bell company was not really incented to debug intermittent issues for others&#x27; customers promptly if they could keep their ticket-closing metrics up. They also didn&#x27;t really want to invest anything more than absolutely necessary in the copper they had to share with others when they could spend their capital on new fiber. I was able to show them the packet and ping drops in service on my connections and even the DSL modem&#x27;s outbound connection logs along with timestamps proving the intermittent nature of the issue but it took about a dozen calls and several in-person visits to get the copper fixed. I spent maybe... 20 hours trying to get it fixed and I cannot imagine any but the smallest fraction of people being both aware and persistent to overcome such obstacles.In subsequent years, the telcom providers made a point of disabling copper whenever installing fiber so once you were upgraded, you were fully locked in and could no longer competitively downgrade and shop for copper DSL once you went fiber.Quite a racket. reply gottorf 15 hours agorootparent> Quite a racket.No arguments from me there. Trust-busting and clamping down on anticompetitive behavior has not been a forte of the federal government in decades. reply cma 17 hours agorootparentprevThe US used to do that for DSL, at least in some states. reply marcosdumay 18 hours agorootparentprevYeah, that doesn&#x27;t work. Or rather, that&#x27;s both not necessary and not sufficient.You are now at the mercy of the fiber operator. He will be the one that gets all of the profits, and who is going to crush you. You just added some random extra parties that add almost no value, but you are required by law to deal with them... what is not a big issue, because they are in a competitive market and won&#x27;t give you any trouble.What does work is regulating the hell out of the fiber operator. At the extreme, making it answer to you instead of to profits. And that works the same whether the internet service is bundled or unbundled. (But then that creates some other problems, nothing is trouble-free.) reply PaulDavisThe1st 17 hours agorootparent> You are now at the mercy of the fiber operator. He will be the one that gets all of the profits, and who is going to crush you.The proposal is that last mile fiber is considered a public utility. You may have noticed that other public utilities (e.g. water, gas, electricity) are tightly regulated. reply marcosdumay 17 hours agorootparent> The proposal is that last mile fiber is considered a public utility.Well, that part isn&#x27;t up there on the comment. reply PaulDavisThe1st 17 hours agorootparentFair dinkum.But you agree that a public utility wouldn&#x27;t \"crush you\" ? reply marcosdumay 17 hours agorootparentWell, that will depend on what the local lawyers mean when they say \"public utility\". On the general usage of the word, yes, I do agree.But I&#x27;d be wary of any law declaring it. The result depends on the details, not on broad categorization. reply ap-andersson 15 hours agorootparentprevIt works when the company that takes care of the fiber is owned by the city and have more goals than to make money. Just like the company that create the electricity grid. When they have goals both in terms of how many people they reach with fiber within the area aswell as making money. Then you have a way of creating fiber and an open market where any ISPs can connect to the city-wide or region-wide fiber network and sell their services. Instead of competing in regards to the physical network close to the customer they compete when it comes to redundant connections to the city, quality customer support, prices, public IPs etc. This model is used all over Sweden (and I assume other countries in europe) to provide affordable internet. There are ofcourse still areas here that are only served by a single ISP with their own network. Often there can be a combination of those monopoloy networks and open networks within a single city. Depending on when the houses where built and who the estate owner is etc. Its sometimes cheaper for a smaller estate owner to sign with a single ISP since the initial installation cost may be lower. The end customer will of course pay higher prices for the services going forward.The electricity works the same. One company owned by the city builds the electricity infrastructure. Then you pick whatever company you want to buy the electricity from.I can pick between 10+ companies for Internet and many more than that for electricity in my town of around 60k residents.Works fine as long as the company that takes care of that part does its job. You do put all trust in that one company to not be a douchebag. But seems to work here. Does of course not mean that it will work everywhere.edit: Seems to work in some parts of the US aswell: https:&#x2F;&#x2F;www.fiercetelecom.com&#x2F;broadband&#x2F;open-infra-inc-got-i...https:&#x2F;&#x2F;techblog.comsoc.org&#x2F;2021&#x2F;10&#x2F;19&#x2F;open-access-fiber-net...An old PDF with some interesting facts, even if they are outdates by now: https:&#x2F;&#x2F;www.ssnf.org&#x2F;globalassets&#x2F;in-english&#x2F;facts-and-stati... reply linsomniac 17 hours agorootparentprevWe had a local ISP that ~10 years ago was doing fiber build outs in new neighborhoods (they had been around for 20 years as dial-up, DSL, and Colo). They told me they had slowed down on that because of the amount of manpower required for doing locates was killing them. reply syradar 2 hours agoparentprevCome live in Sweden! Most cities have a \"City Net\" which is municipal fiber. I recently moved apartments and the new place had both coax and fiber. I just went on an ISP website input my apartment details and two days later I had 500&#x2F;500 Mbps for $39.14 &#x2F; month.One can also use a compare service like Bredbandsval (\"val\" means both choice and whale) https:&#x2F;&#x2F;www-bredbandsval-se.translate.goog&#x2F;?_x_tr_sl=sv&_x_t... reply taylodl 19 hours agoparentprevFrom a consumer perspective it&#x27;s the worst of both worlds - they operate like a utility in that there&#x27;s physical infrastructure needed to provide service to your home, but unlike a utility there&#x27;s little to no regulation and oversight. reply gottorf 18 hours agoparentprev> That restricts my possible relocation optionsYou&#x27;re underselling the problem! That would limit you to a handful (or a fistful, if we&#x27;re being generous) of municipalities in the whole country.I&#x27;ve lived in places where there was no municipal internet, but had two or three competing broadband providers. That kept prices down and services fast, and may be a suitable alternative. reply tivert 18 hours agoprevSpeaking of telecom regulation, whatever happened to net neutrality? Why has the Biden administration not managed to install a new FCC commissioner (so I suppose we&#x27;re still technically in the Ajit Pai era)? I mean, we&#x27;re already starting to get into the next presidential election cycle, for pete&#x27;s sake.It seems pretty clear to me that doing the right thing on this stuff isn&#x27;t a priority for anyone. reply trostaft 18 hours agoparent> Speaking of telecom regulation, whatever happened to net neutrality?There was a good verge article on thishttps:&#x2F;&#x2F;www.theverge.com&#x2F;2023&#x2F;7&#x2F;20&#x2F;23800161&#x2F;gigi-sohn-fcc-no... reply marcosdumay 18 hours agoparentprevAFAIK, the US doesn&#x27;t have it anymore, and it&#x27;s common for their ISPs to sell access to their clients for big service providers. reply dragonwriter 17 hours agorootparentThe US, qua US, doesn&#x27;t, but California and a number of other states have taken action on it, and for that and some other reasons, general practice is basically neutrality-ish in the US. reply sidewndr46 17 hours agorootparentBut US states can&#x27;t regulate interstate commerce. So it&#x27;s moot. reply dragonwriter 17 hours agorootparent> But US states can&#x27;t regulate interstate commerce.This is wrong: so long as it is neither discriminating against interstate trade (that is, as long as it treats interstate and in-state trade equally), nor acting in areas where Congress has explicitly or implicitly, by adopting its own regulations, prohibited state action, yes, they can.And while the FCC anti-neutrality regulation was asserted in court to preempt state action, that arguement failed to prevail. reply tstrimple 13 hours agorootparentThe California market is so large it&#x27;s often more cost effective for companies to just adopt CA standards instead of creating split markets. We&#x27;ve seen ripples throughout the auto industry due to CA laws. Complaints from farmers about how they treat their pigs was also due to a CA law.https:&#x2F;&#x2F;www.desmoinesregister.com&#x2F;story&#x2F;money&#x2F;agriculture&#x2F;20...> \"California is the nation&#x27;s most-populous state, and the producers say that the way the pork market works, with cuts of meat from various sources being combined before sale, it is likely all pork will have to meet California standards, regardless of where it is sold.\" replydragonwriter 18 hours agoparentprev> Why has the Biden administration not managed to install a new FCC commissionerBecause the Senate is a thing, and a very dysfunctional one at that. reply tivert 18 hours agorootparent> Because the Senate is a thing, and a very dysfunctional one at that.Tom Wheeler was confirmed with without a filibuster-proof Democratic majority. I don&#x27;t think the reason is \"the Senate sucks.\"It seems to me that the Biden administration initially nominated someone who wouldn&#x27;t get confirmed, but the FCC is such a low priority for them so they didn&#x27;t course correct for years. reply dragonwriter 18 hours agorootparent> Tom Wheeler was confirmed with without a filibuster-proof Democratic majority. I don&#x27;t think the reason is \"the Senate sucks.\"Tom Wheeler was confirmed in 2013; the degree and nature of dysfunction in the Senate has changed since the first year of Obama’s first (edit: second, duh) term. reply jshier 15 hours agorootparentprevWheeler was also a former small ISP CEO, so everyone assumed he&#x27;d be in big telco&#x27;s pockets. That he turned into the main driver of full net neutrality was shocking. reply delfinom 18 hours agoparentprev>Why has the Biden administration not managed to install a new FCC commissionerBecause Trump gutted the government so badly that it&#x27;s taking years to do the congressional dance to approve replacements for many departments. Congress isn&#x27;t helping either being basically a failed political body. reply lesuorac 18 hours agorootparentGood thing that the Constitution allows for the Executive branch to immediately appoint and replace any vacancy while Congress is out of session for the summer.> Article II, Section 2, Clause 3:> The President shall have Power to fill up all Vacancies that may happen during the Recess of the Senate, by granting Commissions which shall expire at the End of their next Session.Too bad the Democrats are intentionally hamstringing Biden by pretending to be in session all summer long despite not actually working. reply dragonwriter 17 hours agorootparentWere the Democrats to move to adjourn without a pro-forma session, every Republican + Joe Manchin and Krysten Sinema would vote against it, since it would end-run their hostage-taking on nominees. (The GOP led House would also object, and their consent is usually required for a recess sufficient to trigger recess appointments, but that disagreement itself would allow the President to use the extraordinary, and never yet exercised, power of his office to declare an adjournment in the case of a disagreement between the houses of Congress on the matter, so while it would be a major escalation to bypass it, the House objection wouldn’t be insurmountable — the failure of a majority in the Senate, though, would.)(Still think they should do it, even though it would be a break from long-established [0] practice, but it wouldn’t have any practical effect other than setting up another debate for the next election.)[0] long enough to be a bipartisan norm, actually not that long in historical terms. reply meltyness 16 hours agoprevAnd also get rid of MVNOs. reply paws 14 hours agoparentWhy? reply zlg_codes 15 hours agoprevFriendly reminder that the Obama Administration invested billions in broadband companies, in an effort to encourage them to build out their fiber plants and improve access speeds.Do you know what they did with that money? Blew it on useless upgrading projects like digitizing their old drafts.May as well have flushed it down the toilet. I&#x27;m perfectly fine with government imminent domain-ing that shit and selling it back to people at fair prices. Business didn&#x27;t build those networks, government hand-outs taken from citizens&#x27; tax revenue built the network in this country.There will be a point where people strike back against ISPs by attacking the infrastructure itself. If they won&#x27;t upgrade it, damage it and make them upgrade it. reply switch007 15 hours agoparentShould have used the billions to create competition instead reply MrMorden 14 hours agoparentprevThe government gave large incumbent ISPs money to do exactly what they did (anything but actually providing internet access). If, as you claim, the money was intended to somehow benefit their customers, it would have been taken back. reply zlg_codes 14 hours agorootparentI think we&#x27;ve seen how the government handles its loans, especially if they&#x27;re spelled like PPP. reply Thetawaves 15 hours agoparentprevGovernment money is regularly used to build access to new &#x2F; remote places.Should I provide examples or would that be considered cherry picked evidence? reply zlg_codes 14 hours agorootparentYou&#x27;re missing the point. ISPs did not build out their plants to support more bandwidth with Obama money. Serving a handful of remote areas to have the appearance of it isn&#x27;t enough. Why isn&#x27;t the US covered in fiber? We spent the money to make it happen, and it didn&#x27;t happen. reply Thetawaves 11 hours agorootparentI think I disagree on this premise - government subsidies for telecommunications over the last 20 years have largely served to connect new and under served markets. If you have broadband (by the pitiful FCC definition) you have not been a target of investment. reply jcrben 13 hours agoparentprevWhat are \"old drafts\"? reply zlg_codes 12 hours agorootparentLiterally drafts of the cable plant, as it occurs on the street. I worked for a firm who contracted through various ISPs to digitize their equipment plant drafts via AutoCAD and SPATIALnet back in 2010. Our contract ended up falling through. I&#x27;m not fully sure why, but I was part of a hiring frenzy in the firm&#x27;s area, that ended up laying off a bunch of people after the Comcast contract fell through. There was a class action and everything, they paid for training or unemployment for two years.It wasn&#x27;t that bad of a job. I worked four 10s and could grab coffee, blast some music, and knock out the cable plant. Accuracy and speed are all that really mattered. The worst part was how picky drafting standards were and how poor the Python scripts they cobbled into AutoCAD were at actually meeting their standards. Lots of manual offsetting. I wish I had known enough Python at the time, because I might&#x27;ve been able to get a foot into their infra staff or something by improving the drafting workflow. reply DoneWithAllThat 13 hours agoparentprevDo you have any evidence of this at all? reply BSEdlMMldESB 13 hours agoparentprevthey did that because they had the petro dollar systemthis is the same system that allowed most americans to not pay taxes and also downsized the IRSthey thought they were going to be able to keep this system around indefinitely, but nope. I&#x27;m basing it all on guesswork, but I think that system ended this summer. the USA fed and gov is going to be at war by the next summer (debt ceiling expiry), or they&#x27;re gonna get their cred destroyed even further. reply josephd79 17 hours agoprevHow about Verizon and ATT give us the fiber connections they promised us 30 years ago. We&#x27;ve already paid them for it. reply e40 17 hours agoparentSonic.net moved into my area last year and offered 10Gbps service for $40&#x2F;mo (now $50).At the time, I was on Comcast. 65&#x2F;15 Mbps for $130&#x2F;mo. I had this service for 10+ years and I was unable to upgrade to faster speeds without paying more.I was one of the first people in my area to switch. Once I did, I got a call from Comcast saying they&#x27;d lower my bill to $50&#x2F;mo. I saw their (and AT&T) trucks in my area and got ads in my mailbox for $40&#x2F;mo 1Gbps connections.The problem is, most places in the US do not have competition and Comcast and AT&T will not lift a finger to provide better service. reply rolobio 16 hours agorootparentThere was a similar situation when Google Fiber was rolled out in Provo Utah. Comcast essentially had a monopoly (they&#x27;re the only ones allowed to put their cables on the power lines), they charge huge amounts for their internet, Google Fiber buries their fiber lines and suddenly Comcast drops prices begging people to stay.I had to use Comcast for years, they lied to me many times and I finally escaped to a place with a different provider. Suddenly, this year Comcast comes and buries fiber lines in my area.I will deliberately avoid Comcast, competition is absolutely required to keep prices down. reply jxramos 14 hours agorootparentI am beginning to accumulate instances of recording when Comcast lied to me personally. They patently lied straight to my face (over phone, over chat) on numerous distinct points. The most recent was outright fraudulent not canceling my phone plan despite 3 separate requests. They lied about my home having its previous tenant using their services. It did not, the last customer was apparently the original home owner who had RG59 cable installed. The tech who installed the system pretty much point blank said this house could not have had Comcast cable in the last decade or more because we switched to RG6 years ago.I don&#x27;t get how such a company can tolerate bald face liars working for them in so many segments of their staff, it&#x27;s mind boggling and makes me think there are scumbags at the top who encourage this stuff or knowingly look the other way. reply andruby 13 hours agorootparentWhen have they scammed enough customers to attract a proper class action lawsuit?(I&#x27;m asking this as a non-American who is more used to governments passing consumer protection laws) reply linsomniac 17 hours agorootparentprev\"We don&#x27;t care, we don&#x27;t have to, we&#x27;re the phone company.\" reply dctoedt 13 hours agorootparent> We don&#x27;t care, we don&#x27;t have to, we&#x27;re the phone company.\"Hah! Haven&#x27;t thought of that one in years. (You&#x27;re dating yourself, BTW.)For young whippersnappers, this is from https:&#x2F;&#x2F;vimeo.com&#x2F;355556831 — a Lily Tomlin bit on SNL in the 70s, reprising one of her famous recurring characters from Laugh-In in the late 60s. reply nonameiguess 17 hours agoparentprevI laugh so hard at this every time it comes up. I live 5 blocks from AT&T world headquarters and they don&#x27;t even offer service of any kind at my address, let alone fiber. Spectrum is the only option. reply revlolz 16 hours agorootparentISPs collude and have deals on which of them are zoned where. It&#x27;s not a conspiracy, it&#x27;s just reality. Go to any area in the US and whoever the major isp is, only has dysfunctional att or a crappy satalite provider as their \"competition.\" if Cox, Comcast, and spectrum (pick three big names) had to compete in every area the consumers would have a lot more options. Yes, you can&#x27;t force business to sercice areas, but I think the collusion of these companies is what should be regulated. We all know it&#x27;s happening and when they do, if the regulators treated them as a single entity, we&#x27;d have the antitrust violations and breakups consumers are so desperate for.When Fiber disruptors like frontier, Google, or local metropolitans enter the picture: suddenly the ISPs have a lucrative deals because they finally have to freaking compete. Suddenly the data caps are non issue and consumers can get blazing fast speeds with no infrastructure changes because they are holding out.Regulators need to prevent this in the USA, but have been captured by the isp lobbies. Cable crooks is what I call them, because that&#x27;s all ISPs are now, crooks. They&#x27;ll have techs steal or break your equipment. They&#x27;ll hide evidence when damage was caused by their techs. They&#x27;ll lie when outages occur due to their own infrastructure failures despite sending out contractors to repair. They&#x27;ll say whatever they need to, no matter how fraudulent, to tack fees and monthly charges to your account. They&#x27;ve weaseled their way out of being classified as utilities despite that being exactly what they are.I loathe the ISPs in USA. Of course they will push bills like this. I see no end to the hell of having them the as tollmen of the internet. reply wrayjustin 15 hours agorootparentRegulated, you say?Take a look at regulated monopolies: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Government-granted_monopolyThe issue is ... they are granted exclusive rights by the local government. reply unethical_ban 14 hours agorootparentprevConspiracies are often reality.If ISPs have backroom deals that amounts to collusion in the market, that is a conspiracy.While I&#x27;m here, I have an anecdote.I just moved from an old house to a new apartment a mile away. The house had gigabit from ATT and another ISP for 60&#x2F;mo.The apartment only offers spectrum and ATT. ATT top plan is 45 Mbps symmetrical, and spectrum has Gbe down&#x2F;35Mbps up, each for $90.I&#x27;m all for municipal internet. reply MichaelZuo 16 hours agorootparentprevWhy would they?Spectrum&#x27;s profits aren&#x27;t even that high, so why would AT&T want to compete with them chasing down pennies, even 5 blocks away from HQ? reply MrMorden 14 hours agorootparentAmerican ISPs without competition charge double what Norwegian ones do for substantially worse service. That money isn&#x27;t used for physical plant; if it isn&#x27;t going to profits, where is it being spent? reply MichaelZuo 12 hours agorootparentYou can read Spectrum&#x27;s annual financial report and see the numbers yourself?I&#x27;m not really sure what your asking me, do you want my opinion on whether they&#x27;re making it up? reply djbusby 14 hours agorootparentprevExecutive compensation, stock buybacks (which is an extension of the former). reply zardo 14 hours agorootparentprevIf executives that live near the office are embarrassed about not using their own product? reply TuringNYC 16 hours agoprevCant wait for Elon and Starlink to disrupt this industry. A good product offering would cut thru the incumbents like a hot knife through butter. reply trailingComma 16 hours agoparentI can&#x27;t wait until its more than just Elon doing it.Replacing one monopoly with another is not the way to go. reply p1mrx 16 hours agorootparentStarlink is only a monopoly in locations without traditional broadband. It&#x27;s not even a very good alternative in dense locations, where you compete with neighbors for bandwidth. Though perhaps they can serve enough users to influence prices a bit. reply SenAnder 15 hours agorootparentprevIt&#x27;s not replacing, it&#x27;s adding a player, and diluting the monopoly. reply rayiner 19 hours agoprev [–] Full disclosure: I represent telecom companies, but I’m speaking only for myself.> [The bill] eliminates the ability of local governments to require rules such as an ISP having to serve the whole communitySuch requirements kill fiber development. Laying fiber is expensive, and having to lay it through neighborhoods where most people won’t or can’t subscribe just increases the price for everyone.It’s not just the traditional telcos or cable companies. There is a reason Google Fiber has this concept of “fiberhoods” where you need a certain level of demonstrated interest in subscription before they’ll build in those areas. The city of Baltimore wanted to kick out Comcast and have someone build fiber across the city. Verizon wouldn’t do it because of the coverage requirements. Google wouldn’t do it either. The city is now looking at building the network itself, but it has no money: https:&#x2F;&#x2F;www.thebaltimorebanner.com&#x2F;politics-power&#x2F;local-gove...Many of the other things the article complains about are similarly roadblocks to development. It’s actually the same exact thing as NIMBY regulations that stop housing development. Again, look at the places Google ended up deploying fiber. If you ignore webpass, every deployment is in states that are low-regulation generally (Utah, Georgia, Colorado, Texas, etc.) reply tw04 19 hours agoparent>Such requirements kill fiber development. Laying fiber is expensive, and having to lay it through neighborhoods where most people won’t or can’t subscribe just increases the price for everyone.Odd, laying fiber was deemed \"too expensive\" to lay in a community where we have a family cabin. Instead, someone formed a co-op. Everyone is getting wired, and the speeds:price is SIGNIFICANTLY less than Comcast, with symmetric up&#x2F;down to boot.I appreciate you&#x27;ve got a job to do and a talk track, but it&#x27;s simply not accurate. What you MEAN to say is: wiring everyone in a community results in a margin profile that&#x27;s below what large Telco executives find acceptable, so they focus on areas with high adoption rates and low deployment costs and tell community&#x27;s that it&#x27;s just \"too expensive\" to do anything else. reply jjoonathan 19 hours agorootparentI wish we gave companies even 1&#x2F;10th the flak that we give people for acting entitled. This right here is a perfect example, but it happens all the time. reply rayiner 18 hours agorootparentprevSure, small co-ops can have cost structures for smaller projects big companies often cannot match. That’s true of any kind of business. That doesn’t change my point.Again, you don’t need to rely on assumptions about the motivations of “large Telco executives.” Look at what Google did with Fiber. reply tw04 18 hours agorootparent>Sure, small co-ops can have cost structures for smaller projects big companies often cannot match. That’s true of any kind of business. That doesn’t change my point.That&#x27;s just ridiculous across the board. I guarantee, with 100% confidence, that a small local co-op does not have a cost structure below the big Telco&#x27;s. My co-op pay SIGNIFICANLTY more for:RoutersSwitchesConduitFiberONTsTrenching CrewsSupportThey pay less for:Executives???It&#x27;s laughable that you say it&#x27;s true of any business that small businesses pay less than large. I can tell you what the discounts are for switches that I&#x27;ve sold in the past to a Fortune 500 vs. Joe Shmoe&#x27;s Trucking - large corporations are frequently paying HALF of what a small business would for the same thing due to their volume. reply rayiner 17 hours agorootparentWal-Mart also gets large discounts because of its size. But that doesn’t mean it can open a small grocery store in a town that’s too small to support a normal Wal-Mart. That’s also true of Walgreens, or Best Buy, or lots of other large chains. Big companies have high organizational overhead that makes it hard for them to do small scale projects.And it’s not a matter of having fat margins. Wal-Mart’s margin is under 3%. Verizon’s wireline operating income margin is usually under 10%, often under 5%. reply tw04 15 hours agorootparentWalmart literally has small grocery stores:https:&#x2F;&#x2F;www.google.com&#x2F;maps&#x2F;place&#x2F;Walmart+Neighborhood+Marke... reply speff 14 hours agorootparentThat&#x27;s not a small grocery store despite the name. And there&#x27;s a supercenter less than a mile away from that, so that example is not even relevant to their point. reply rayiner 10 hours agorootparentYeah, Wal-Mart Neighborhood Markets are average sized standalone supermarkets, like Safeway. And that area is obviously quite populous—there’s a Sam’s Club (also Wal-Mart), and Aldi, a Food Lion, and a Fresh Market all within a quarter mile it looks like. reply speff 17 hours agorootparentprevI&#x27;m more-or-less convinced that people who complain about executive pay and its impact to end users don&#x27;t know how to do basic math. Let&#x27;s take AT&T as an example. From a rough search[1], they make let&#x27;s say $70m total. Now let&#x27;s see the number of subscribers they have using another rough search[2] - 217m. That&#x27;s about 30 cents _every year_ from each sub for executive pay.What&#x27;s likely is the co-op doesn&#x27;t have the same level of support, uptime, or redundancy major telcos need to sustain. Every bit of which adds a hefty amount to the overall cost.[1] https:&#x2F;&#x2F;www1.salary.com&#x2F;ATANDT-INC-Executive-Salaries.html[2] https:&#x2F;&#x2F;www.wallstreetzen.com&#x2F;stocks&#x2F;us&#x2F;nyse&#x2F;t&#x2F;statistics reply ilyt 18 hours agorootparentprev...the company famous for shuttering anything that doesn&#x27;t make ridiculous profit margins is not a good example for that. reply rayiner 18 hours agorootparentThe point of Google Fiber was to spur broadband development to benefit Google’s other businesses. I don’t think Google Fiber has ever made a profit. https:&#x2F;&#x2F;www.fool.com&#x2F;investing&#x2F;2020&#x2F;09&#x2F;18&#x2F;reports-of-google-.... I haven’t seen Fiber numbers broken out specifically, but the “Other Bets” segment which is mostly Fiber and Verily looses about $900 million per quarter. reply f-securus 18 hours agorootparentprevPointing to google as a positive example hasn’t made since in quiet some time. reply flylikeabanana 17 hours agorootparent> Pointing to google as a positive example hasn’t made sense in quite some time.I don&#x27;t usually get pedantic about typos, but the twofer here really made it hard to understand what you were saying reply f-securus 8 hours agorootparentI&#x27;m ignorant. What is incorrect? reply rayiner 5 hours agorootparentprevWhat does “positive” mean in this context? What’s relevant is that Google has a tremendous financial incentive to prove fiber can be built cheaply, because it has a much more profitable product built on top of broadband. And they couldn’t do it. reply mindslight 18 hours agorootparentprevGoogle, the surveillance company with the attention span of a gnat? Why are you holding them up as an exemplar? They can&#x27;t even stick with software projects that create returns over years, of course they failed at infrastructure that creates returns over decades. reply gwright 19 hours agorootparentprevYour two examples leave some questions.You seem to be saying that your cabin community was able to find a solution that would not be acceptable to a large telco. Why isn&#x27;t that OK? Why should the large company be forced to do something they don&#x27;t want to do if, by your example, other organizations are capable of servicing those communities?To rephrase the question: What, if anything, prevents smaller organizations or non-profits or niche companies from servicing areas that large telcos will only do through regulatory mandates? Can the business&#x2F;regulatory climate be improved to facilitate these smaller organizations? Are there existing regulations (for example access to poles or conduits) in some areas that block smaller organizations? reply tw04 18 hours agorootparent>You seem to be saying that your cabin community was able to find a solution that would not be acceptable to a large telco. Why isn&#x27;t that OK? Why should the large company be forced to do something they don&#x27;t want to do if, by your example, other organizations are capable of servicing those communities?Because they&#x27;re also actively lobbying to kill any local co-op formation. Successfully in many states. They tried here and got shot down, then proclaimed they were going to build out fiber themselves in the co-op&#x27;s targeted service area (they didn&#x27;t).There are states where they were successful in getting laws passed preventing \"wasteful government spending on broadband networks\" - the end result of this will be people who literally have no possible way to EVER get broadband. reply gwright 13 hours agorootparent> There are states where they were successful in getting laws passed preventing \"wasteful government spending on broadband networks\"The devil is in the details but arguing that municipalities shouldn&#x27;t compete with private businesses is not the same thing as arguing that private businesses shouldn&#x27;t have other private competitors.I have no doubt that telcos lobby heavily to restrict competition. Last mile infrastructure regulation is complicated but I&#x27;m more in favor of a level playing field (i.e. regulation) for access to poles&#x2F;conduits&#x2F;rights-of-way than having municipalities operate their own broadband architecture or even worse operate and then protect themselves from competition by other providers. reply tivert 18 hours agorootparentprev> Because they&#x27;re also actively lobbying to kill any local co-op formation. Successfully in many states.How exactly do they do that? reply dragonwriter 18 hours agorootparentI suspect the same way PG&E has fought public power expansion: channel corporate propaganda through astroturf taxpayer groups misleading about the costs. reply PaulDavisThe1st 17 hours agorootparentprevIn all the various ways that corporations manage to get legislation passed.These corporations are not stopping local co-op formation. They are lobbying for laws that severely limit (and in some cases, prevent) their ability to operate. reply tivert 15 hours agorootparent> They are lobbying for laws that severely limit (and in some cases, prevent) their ability to operate.That&#x27;s what I&#x27;m curious about. What&#x27;s in those laws they&#x27;re lobbying for? reply nobody9999 13 hours agorootparent>That&#x27;s what I&#x27;m curious about. What&#x27;s in those laws they&#x27;re lobbying for?See[0] for yourself. You keep \"asking questions\" about stuff that&#x27;s decades old. It makes me wonder if you&#x27;re not asking in good faith. Please prove me wrong.[0] https:&#x2F;&#x2F;broadbandnow.com&#x2F;report&#x2F;municipal-broadband-roadbloc... reply jjoonathan 16 hours agorootparentprevWhy don&#x27;t you read the article that we are supposed to be discussing and find out? reply speff 16 hours agorootparentRight back at you? The bill in the article is a call for deregulation. Zero to do with killing competition reply nobody9999 13 hours agorootparentprev>How exactly do they do that?Through groups like ALEC[0]. And that&#x27;s nothing new.[0] https:&#x2F;&#x2F;alec.org&#x2F; reply jjoonathan 18 hours agorootparentprev> Why isn&#x27;t that OK?Ask the telcos lobbying to stop it. That&#x27;s the problem. reply gavinhoward 19 hours agoparentprevUh huh, so is that the only thing the bill does not let local governments decide? Of course not.Let local governments regulate for their city. If they make bad decisions, they will reap the consequences.In any case, telcos should never get immunity from any local laws and regulations.Edit: And it&#x27;s not like telcos can&#x27;t go to city council meetings and explain, with numbers, why certain regulations are bad.In addition, I bet that if the telcos were forced to build an entire neighborhood, they would actually lower their prices to get more people to sign up in order to better recoup their costs. That would be a good thing!Telcos want the monopoly without regulations. But if you&#x27;re a monopoly, you have to be regulated or you&#x27;re going to abuse your position.So I don&#x27;t feel sorry for telcos at all. reply ilyt 18 hours agorootparentAlso building fiber infrastructure for city is multi-decade investment. For corporation its whatever next fiscal year result investment.Small city with fiber everywhere is pretty attractive place for people that can work remotely and that brings money to local economy. reply wing-_-nuts 19 hours agoparentprevWhy is running fiber somehow more expensive than dsl, cable, or power cables? Spoiler; It&#x27;s not. Chattanooga&#x27;s EPB runs fiber to every home that has power.Internet should be treated like the essential utility it is. If we were successfully able to run electricity to farm houses in the 1930s, I see no reason at all they shouldn&#x27;t have fiber internet in 2023. reply packetlost 18 hours agorootparentThe fiber is, to my knowledge, cheaper than the equivalent copper per mile. There&#x27;s bigger than you&#x27;d think costs basically every step of the way to lay a new line regardless of the medium, with the local power utility often times being a major hangup. The question is almost never about the cost of laying fiber vs laying copper, it&#x27;s about laying a new line (fiber) or laying nothing (use existing copper).You have to get permission from every land owner whose ditch&#x2F;yard you need to dig up. Using poles is usually not an option because they&#x27;re typically owned by the local power utility who either won&#x27;t let ISPs use them at all or drastically increase operating costs to the point where it&#x27;s not feasible. Power supply for actively powered equipment can be hard in lower density (ie. rural) areas (from a bureaucratic standpoint). Copper nodes can sometimes be passively powered, but there&#x27;s not much in fiber optics that can outside of GPON splitters. reply gottorf 18 hours agorootparent> The question is almost never about the cost of laying fiber vs laying copper, it&#x27;s about laying a new line (fiber) or laying nothing (use existing copper).Yep, exactly. 99.99% of the cost of laying anything (underground, above ground, wherever) is in the permitting and digging&#x2F;hanging. The cost of the material itself and the labor of handling it is rounding error. reply rayiner 16 hours agorootparentprev> Why is running fiber somehow more expensive than dsl, cable, or power cables?Because we’re running fiber in the 21st century while DSL, cable, and power have mostly already been in the ground for decades. The cost of building any kind of infrastructure has increased exponentially over the decades. We literally could not build today a lot of the infrastructure we already have in the ground—e.g. the New York subway.> Chattanooga&#x27;s EPB runs fiber to every home that has power.EPB got a $110 million grant from the ARRA ($1,000 per fiber subscriber), and also leverages economies of scale because the fiber network is used both for the electric grid and the fiber service.I think that’s actually a great way to deploy fiber, but it doesn’t tell you anything about the economics of a fiber provider that isn’t the electric utility. reply mint2 19 hours agoparentprevThe bill does way more than that, all horrible things. Care to comment on them?Also, I lived for a time in Irvine Ca, one of the nation’s high tech hubs. Apparently Irvine did not have a whole community requirement on fiber. Parts of the city had google fiber and also att fiber. But Guess what att offered my neighborhood?My neighborhood was one of the fairly central areas developed in the 70s and they only offered 5mb&#x2F;s DSL.In one of the highest tech areas of the nation and surrounded by fiber networks, my neighborhoods internet options was cox cable or att DSL that they happily charged the same price for their 5&#x2F;1 DSL service that cox charged for 50&#x2F;10. Not only that, they spammed adds for att fiber just to add insult to injury.Sounds like community requirements are very much needed to prevent neighborhood red lining. reply JJMcJ 18 hours agorootparentEven Silicon Valley did not really get residential fiber until about 10 or so years ago.Speaking of tech hubs. reply rayiner 16 hours agorootparentprevI have two different fiber lines into my house in my traditionally red county. Ask yourself why internet service is so bad in your affluent California towns, where Internet companies have infinitely more leverage and lobbying power than telcos. reply mint2 14 hours agorootparentWhy do people try to make everything about red versus blue?Are you saying all red states are 100% fiber covered meccas? Sounds like your area is good but so was the block half a mile over in irvine. Congrats on living half a block over?The point about internet companies having more lobbying power is odd as internet companies should want more connectivity not bad DSL.And the OC is traditionally a Republican stronghold in CA and only recently changed. The city of Irvine has switched back and forth between dysfunctional politicians from both parties.Why are you jumping to an us vs them red blue scenario in every situation? reply rayiner 13 hours agorootparent> Why do people try to make everything about red versus blue?In general, blue states have more regulations on building things while red states have less regulations on building things. If you’re wondering why Google, a California company headquartered in the Bay Area, invested in fiber in places like Utah and Texas and Kansas, rather than in its own back yard, it’s worth considering whether red versus blue has something to do with that. And if your theory is that fiber doesn’t get built because of “lobbying”—explain why fiber doesn’t get built in California, where internet companies have all the power (and as you observe, have strong incentives to encourage building fiber). reply mint2 9 hours agorootparentHashtag completely ignores that my example was of google fiber and att fiber both in Irvine CA. Got to score those sweet red team points, facts won’t stop the points! replyhiatus 19 hours agoparentprevMaybe they wouldn&#x27;t have to trench and lay fiber if they could make use of the public utility poles. But even that has been fraught.https:&#x2F;&#x2F;arstechnica.com&#x2F;tech-policy&#x2F;2018&#x2F;01&#x2F;att-and-comcast-... reply axus 19 hours agoparentprevI&#x27;d think the local governments know what they&#x27;re getting into, and if not they figure it out after a few years. Nobody is requiring providers to enter those local markets and be unprofitable.Telecoms could raise local prices until covering 100% of the area is profitable. \"Local government requiring customer service standards\" might be a harder thing for them to comply with. reply rayiner 6 hours agorootparentLocal governments don’t care if their regulations keep out fiber, just like they don’t care if their regulations keep out housing development. When I lived in Baltimore, Verizon was trying to wire it up with fiber. The city wanted Google to come in and it wouldn’t. A decade later, there’s still no fiber in Baltimore. https:&#x2F;&#x2F;arstechnica.com&#x2F;information-technology&#x2F;2013&#x2F;08&#x2F;snubb...Raising prices doesn’t work, because the other customers won’t pay that much more for fiber versus cable. My parents just switched from fiber to cable because they liked the TV packages better. reply ilyt 18 hours agoparentprevThe town doesn&#x27;t want to connect few streets to the internet.The town wants internet available everywhere because even if boomer parent might not care, their kids when grow up might want to have stable internet for work, same with any new developments, good internet becomes number one priority for many people buying homes.It might be difference between small town slowly dying and prospering (because people moving in to work remotely will spend in local economy).Yeah there will always be cases of cities not being reasonable and wanting telco to fork in on putting 10km of fiber per farmer living in vast area (which would be better served by radio), but overall giving for-profit big corporations so much power for city development is insane. reply stupidmanager 18 hours agoparentprev> Such requirements kill fiber development. Laying fiber is expensive, and having to lay it through neighborhoods where most people won’t or can’t subscribe just increases the price for everyone.I&#x27;m sorry, but I just don&#x27;t see it. I&#x27;ve worked with and for several telcos, I know the value of a customer that is locked into older infrastructure. Fiber is not more expensive, it&#x27;s upgradable and properly done it&#x27;s reasonably future-proof and Telcos know it. So no, these requirements do not kill fiber. These requirements force telcos like comcast to be competitive and not selective where fiber is installed. I know this because directional drilling is a very low-cost installation at about $10 a foot, permits for a neighborhood run you about $5000 and fiber runs will cost another $6 a foot. Now fiber network gear can be expensive, but again I remind you that I&#x27;ve worked with telcos... they already have most of the big bad gear in place and only need to put in more expensive singlemode runs to rural areas. So I call bullshit.So heres my life because of telcos that make these complaints and politicians just don&#x27;t give a shit: I&#x27;ve been in my house for a few decades and until this year my only choice was Comcast for anything over 100mbit internet. I spend $250 a month because Comcast forces me to bundle my internet with TV and Phone (and they call often to have me add cell and security). Then a local company came into the neighborhood this year offering Gigabit fiber for 1&#x2F;4 the cost I&#x27;m spending now.All of a sudden, Comcast, Centurylink and even the local utility company are out spending money I guess they didn&#x27;t have to upgrade their networks to support fiber. 7 months of my yard (easement and telco junction) has been home to a variety of heavy machinery, as they run new upgraded infrastructure using directional drilling.Somewhere in June I get an email from comcast that my internet was upgraded \"for free\" and now I have 1.2gb&#x2F;40mbit, doubling my paid speed and if I sign a 2-year term today (with 6mo payment penalty for canceling), I&#x27;ll pay 50% less and receive unlimited internet if I put in their modem. Let&#x27;s just say I signed up with the local company and that activates this next month for synchronous 1gb fiber for $59 a month.> It’s not just the traditional telcos or cable companies. There is a reason Google Fiber has this concept of “fiberhoods” where you need a certain level of demonstrated interest in subscription before they’ll build in those areas.You know why google fiber wasn&#x27;t successful? It&#x27;s because people are lazy. If I wasn&#x27;t motivated to kill off TV and Phone services that I NEVER use, I&#x27;d just stay with Comcast. Comcast will match the Internet only service price of $59 for 1gb internet the day I call to cancel. I have zero reason to change, but amazingly I can and NOW Comcast is flexible with pricing and options. reply rayiner 9 hours agorootparent> All of a sudden, Comcast, Centurylink and even the local utility company are out spending money I guess they didn&#x27;t have to upgrade their networks to support fiber.It doesn’t sound like Comcast built fiber in your story. 1.2 gig down&#x2F;40 meg up sounds like cable.> You know why google fiber wasn&#x27;t successful? It&#x27;s because people are lazyI didn’t say anything about Google Fiber being successful or not. I’m asking why Google wouldn’t agree to these community coverage requirements. reply flangola7 16 hours agoparentprevWhy do you come here and tell lies? reply MisterBastahrd 18 hours agoparentprevGood. Because the end result is that someone eventually WILL bring fiber or a fiber alternative and the other company will be SOL for having a service that is never available for part of the community.Right now I have a situation where AT&T has fiber across most of my city, but not my neighborhood. And Spectrum has fiber in my neighborhood, but not my side of the street. So I&#x27;m stuck with T-Mobile wireless after having used AT&T DSL for the past 4 years because neither Spectrum nor AT&T will run fiberThe aforementioned requirement would have pushed fiber everywhere. There&#x27;s zero difference between the homes on my side of the street and the other side. Or the homes in my neighborhood and the next one over. Same size, same prices, same sort of people in the same tax brackets with the same economic conditions.I&#x27;d rather see a company lose out on an entire market than establish itself only over part of it. Internet access is opportunity. reply JamesBarney 17 hours agorootparentYou&#x27;d rather no one had fiber than some people have fiber? reply MisterBastahrd 16 hours agorootparentYes. Because full demand is better than fractured demand. reply mindslight 18 hours agoparentprev [–] The communications monopolies are quasi-governmental entities whose primary business is crafting plausible sounding narratives about why they can&#x27;t be bothered to do anything without one-way handouts from the de jure government. In reality municipal fiber has no problem building out out complete cities and towns, with obvious mandates to the serve the whole population, and from what I&#x27;ve seen they&#x27;re doing a great job. Regardless of density, infrastructure has an intrinsic capital cost that needs to be accounted on the order of a decade, and moribund dinosaurs based around short term revenue extraction aren&#x27;t capable of doing that.It sounds like Baltimore&#x27;s problem is, as you said, having no money. Getting an advance from a loan shark when you have no money is a poor idea, as you will be under their thumb and paying it back forever.My own experience: GPON. moderate density (power goes out at least several times a year due to trees), under $80&#x2F;mo fixed (no continual price hikes, no deliberately confusing fees, no contract), full gigabit up&#x2F;down with no usage-based gouging, no incentive to surveil my traffic and sell the proceeds. If in 30 years 1Gb is considered slow and it&#x27;s stuck there because \"government\", I&#x27;ll let the municipal fiber doomers say I told you so - assuming Ma Bell isn&#x27;t still offering 384k ADSL on the two pairs of copper they&#x27;ll have left. reply rayiner 6 hours agorootparent> It sounds like Baltimore&#x27;s problem is, as you said, having no moneyThat’s true of most municipalities. And they have higher priorities for infrastructure expenditures. Cities and states need to spend $745 billion just to bring water infrastructure up to existing health and environmental standards. Broadband is way behind lead pipes or crumbling bridges on governments’ list of priorities.> Regardless of density, infrastructure has an intrinsic capital cost that needs to be accounted on the order of a decade, and moribund dinosaurs based around short term revenue extraction aren&#x27;t capable of doing that.I heard this a decade ago, when Google was going to show up the “dinosaurs.” How is that going? reply JJMcJ 18 hours agorootparentprev [–] They get the monopoly without the universal service requirements that the utility and wire-line phone companies have. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Telecom giants are seeking to limit local government's authority over telecom infrastructure through proposed legislation, leading to consumer frustration.",
      "Local governments are expressing a growing interest in establishing their own fiber networks, contributing to the push for increased control.",
      "The conversation also encompasses various issues such as the removal of headphone jacks on phones, ongoing investigations involving Trump, and difficulties associated with online anonymity."
    ],
    "commentSummary": [
      "Consumers in the United States face challenges and frustrations in obtaining reliable and affordable internet service.",
      "Concerns are raised about broadband monopolies, lack of regulation, and competition in the industry.",
      "Suggestions include treating internet infrastructure as a public utility and creating separate entities for infrastructure."
    ],
    "points": 237,
    "commentCount": 151,
    "retryCount": 0,
    "time": 1692364661
  },
  {
    "id": 37176960,
    "title": "Learning async Rust with entirely too many web servers",
    "originLink": "https://ibraheem.ca/posts/too-many-web-servers/",
    "originBody": "Ibraheem Ahmed Posts Contact Learning Async Rust With Entirely Too Many Web Servers August 11, 2023 I've found that one of the best ways to understand a new concept is to start from the very beginning. Start from a place where it doesn't exist yet and recreate it yourself, learning in the process not just how it works, but why it was designed the way it was. This isn't a practical guide to async, but hopefully some of the background knowledge it covers will help you think about asynchronous problems, or at least fulfill your curiosity, without boring you with too many details. ..It's still really long. Contents A Simple Web Server A Multithreaded Server A Non-Blocking Server A Multiplexed Server Futures A Reactor Scheduling Tasks An Async Server A Functional Server A Graceful Server Back To Reality Pinning async/await A Tokio Server Afterword A Simple Web Server We'll start our journey into async programming with the simplest of web servers, using nothing but the standard networking types in std::net. Our server just needs to accept HTTP requests and reply with a basic response. We'll ignore most of the HTTP specification, or write any useful application code, for the entirety of this post, focusing instead on the basic flow of the server. HTTP is a text-based protocol built on top of TCP, so to start we have to accept TCP connections. We can do that by creating a TcpListener. use std::net::TcpListener; fn main() { let listener = TcpListener::bind(\"localhost:3000\").unwrap(); } And listening for incoming connections, handling them one by one. use std::net::{TcpListener, TcpStream}; use std::io; fn main() { // ... loop { let (connection, _) = listener.accept().unwrap(); if let Err(e) = handle_connection(connection) { println!(\"failed to handle connection: {e}\") } } } fn handle_connection(connection: TcpStream) -> io::Result { // ... } TCP connections are represented by the TcpStream type, a bidirectional stream of data between us and the client. It implements the Read and Write traits, abstracting away the internal details of TCP and allowing us to read or write plain old bytes. As a server, we need to receive the HTTP request. We'll initialize a small buffer to hold the request. fn handle_connection(connection: TcpStream) -> io::Result { let mut request = [0u8; 1024]; // ... Ok(()) } And then call read on the connection, reading the request bytes into the buffer. read will fill the buffer with an arbitrary number of bytes, not necessarily the entire request at once. So we have to keep track of the total number of bytes we've read and call it in a loop, reading the rest of the request into the unfilled part of the buffer. use std::io::Read; fn handle_connection(mut connection: TcpStream) -> io::Result { let mut read = 0; let mut request = [0u8; 1024]; loop { // try reading from the stream let num_bytes = connection.read(&mut request[read..])?; // keep track of how many bytes we've read read += num_bytes; } Ok(()) } Finally, we have to check for the byte sequence \\r\\n\\r\\n, which indicates the end of the request. fn handle_connection(mut connection: TcpStream) -> io::Result { let mut read = 0; let mut request = [0u8; 1024]; loop { // try reading from the stream let num_bytes = connection.read(&mut request[read..])?; // keep track of how many bytes we've read read += num_bytes; // have we reached the end of the request? if request.get(read - 4..read) == Some(b\"\\r\\n\\r\\n\") { break; } } Ok(()) } It's also possible for read to return zero bytes, which can happen when the client disconnects. If the client disconnects without sending an entire request we can simply return and move on to the next connection. Again, don't worry too much about sticking to the HTTP specification, we're just trying to get something working. fn handle_connection(mut connection: TcpStream) -> io::Result { let mut read = 0; let mut request = [0u8; 1024]; loop { // try reading from the stream let num_bytes = connection.read(&mut request[read..])?; // the client disconnected if num_bytes == 0 { // 👈 println!(\"client disconnected unexpectedly\"); return Ok(()); } // keep track of how many bytes we've read read += num_bytes; // have we reached the end of the request? if request.get(read - 4..read) == Some(b\"\\r\\n\\r\\n\") { break; } } Ok(()) } Once we've read in the entire request, we can convert it to a string and log it to the console. fn handle_connection(stream: TcpStream) -> io::Result { let mut read = 0; let mut request = [0u8; 1024]; loop { // ... } let request = String::from_utf8_lossy(&request[..read]); println!(\"{request}\"); Ok(()) } Now we have to write our response. Just like read, a call to write may not write the entire buffer at once. We need a second loop to ensure the entire response is written to the client, with each call to write continuing from where the previous left off. use std::io::Write; fn handle_connection(mut connection: TcpStream) -> io::Result { // ... // \"Hello World!\" in HTTP let response = concat!( \"HTTP/1.1 200 OK\\r\\n\", \"Content-Length: 12\\n\", \"Connection: close\\r\\n\\r\\n\", \"Hello world!\" ); let mut written = 0; loop { // write the remaining response bytes let num_bytes = connection.write(response[written..].as_bytes())?; // the client disconnected if num_bytes == 0 { println!(\"client disconnected unexpectedly\"); return Ok(()); } written += num_bytes; // have we written the whole response yet? if written == response.len() { break; } } } And finally, we'll call flush to ensure that the response is written to the client 1. fn handle_connection(mut connection: TcpStream) -> io::Result { let mut written = 0; loop { // ... } // flush the response connection.flush() } There you go, a working HTTP server! $ curl localhost:3000 # => Hello world! A Multithreaded Server Alright, so our server works. But there's a problem. Take a look at our accept loop. let listener = TcpListener::bind(\"localhost:3000\").unwrap(); loop { let (connection, _) = listener.accept().unwrap(); if let Err(e) = handle_connection(connection) { // ... } } See the problem? Our server can only serve a single request at a time. Reading and writing from/to a network connection isn't instantaneous, there's a lot of infrastructure between us and the user. What would happen if two users made a request to our server at the same time, or ten, or ten thousand? Obviously this isn't going to scale, so what do we do? We have a couple of options, but by far the simplest one is to spawn some threads. Spawn a thread for each request and our server becomes infinitely faster, right? fn main() { // ... loop { let (connection, _) = listener.accept().unwrap(); // spawn a thread to handle each connection std::thread::spawn(|| { if let Err(e) = handle_connection(connection) { // ... } }); } } In fact, it probably does! Maybe not infinitely, but with each request being handled in a separate thread, the potential throughput of our server increases significantly. How exactly does that work? On Linux, as well as most other modern operation systems, every program is run as a separate process. While it seems like every active program is run at the same time, it's only physically possible for a single CPU core to execute a single task at a time, or possibly two with hyperthreading. To allow all programs to make progress, the kernel constantly switches between them, pausing one program to give another a chance to run. These context switches happen on the order of milliseconds, providing the illusion of paralellism. The kernel scheduler can take advantage of multiple cores by distributing its workload across them. Each core manages a subset of processes 2, meaning that some programs do in fact get to run in parallel. cpu1 cpu2 cpu3 cpu4 |----|----|----|----|p1p3p5p7| |____| |____|| |____||____| p4| p8|| p6 |____|p2 |____||| p3| p7||| This type of scheduling is known as preemptive multitasking. The kernel decides when one process has been running for too long and preempts it, switching to someone else. Processes work well for distinct programs because the kernel ensures that separate processes aren't allowed to access each other's memory. However, this makes context switching more expensive because the kernel has to flush certain parts of memory before performing a context switch to ensure that memory is properly isolated 3. Threads are similar to processes 4 except they are allowed to share memory with other threads in the parent process, which is what allows us to share state between threads within the same program. Scheduling works much the same way. The key insight regarding thread-per-request is that our server is I/O bound. Most of the time inside handle_connection is not spent doing compute work, it's spent waiting to send or receive some data across the network. Functions like read, write, and flush perform blocking I/O. We submit an I/O request, yielding control to the kernel, and it returns control to us when the operation completes. In the meantime, the kernel can execute other runnable threads, which is exactly what we want! In general, most of the time it takes to serve a web request is spent waiting for other tasks to complete, like database queries or HTTP requests. Multithreading works great because we can utilize that time to handle other requests. A Non-Blocking Server It seems like threads do exactly what we need, and they're easy to use, so why not stop here? You may have heard that threads are too heavyweight and context switching is very expensive. Nowadays, that's not really true. Modern servers can manage tens of thousands of threads without breaking a sweat. The issue is that blocking I/O yields complete control of our program to the kernel until the requested operation completes. We have no say in when we get to run again. This is problematic because it makes it very difficult to model two operations: cancellation, and selection. Imagine we wanted to implement graceful shutdown for our server. When someone hits ctrl+c, instead of killing the program abruptly, we should stop accepting new connections but still wait for any active requests to complete. Any requests that take more than thirty seconds to finish are killed as the server exits. This poses a problem when dealing with blocking I/O. Our accept loop blocks until the next connection comes in. We can check for the ctrl+c signal before or after a new connection comes in, but if the signal is triggered during a call to accept, we have no choice but to wait until the next connection is accepted. The kernel has complete control over the execution of our program. loop { // check before we call `accept` if got_ctrl_c() { break; } // **what if ctrl+c happens here?** let (connection, _) = listener.accept().unwrap(); // this won't be checked until *after* we accept a new connection if got_ctrl_c() { break; } std::thread::spawn(|| /* ... */); } What we want is to listen for both the incoming connection and the ctrl+c signal, at the same time. Like a match statement, but for I/O operations. loop { // if only... match { ctrl_c() => { break; }, Ok((connection, _)) = listener.accept() => { std::thread::spawn(|| ...); } } } It turns out that this is almost impossible to do with blocking I/O. The best thing we can do is open up a TCP connection to ourselves to free up the loop, which feels extremely hacky to say the least. And what about timing out long running requests after thirty seconds? We could set a flag that tells threads to stop, but how often would they check it? We again run into the problem that we lose control of our program during I/O and have no choice but to wait until it completes. There's really no good way of force cancelling a thread. Problems like these are where threads and blocking I/O fall apart. Expressing event-based logic becomes very difficult when the kernel holds so much control over the execution of our program. But what if there was a way to perform I/O without yielding to the kernel? It turns out there is a second way to perform I/O, known as non-blocking I/O. As the name suggests, a non-blocking operation will never block the calling thread. Instead it returns immediately, returning an error if the given resource was not available. We can switch to using non-blocking I/O by putting our TCP listener and streams into non-blocking mode. let listener = TcpListener::bind(\"localhost:3000\").unwrap(); listener.set_nonblocking(true).unwrap(); loop { let (connection, _) = listener.accept().unwrap(); connection.set_nonblocking(true).unwrap(); // ... } Non-blocking I/O works a little differently. If the I/O request cannot be fulfilled immediately, instead of blocking, the kernel simply returns the WouldBlock error code. Despite being represented as an error, WouldBlock isn't really an error condition. It just means the operation could not be performed immediately, giving us the chance to decide what to do instead of blocking. use std::io; // ... listener.set_nonblocking(true).unwrap(); loop { let connection = match listener.accept() { Ok((connection, _)) => connection, Err(e) if e.kind() == io::ErrorKind::WouldBlock => { // the operation was not performed // ... } Err(e) => panic!(\"{e}\"), }; connection.set_nonblocking(true).unwrap(); // ... } Imagine we called accept when there were no incoming connections. With blocking I/O, the accept would have blocked until a new connection came in. Now instead of yielding control to the kernel, WouldBlock puts the control back in our hands. Our I/O doesn't block, great! But what do we actually do when something isn't ready? WouldBlock is a temporary state, meaning at some point in the future the socket should become ready to read or write from. So technically, we could just spin until the socket becomes ready. loop { let connection = match listener.accept() { Ok((connection, _)) => connection, Err(e) if e.kind() == io::ErrorKind::WouldBlock => { continue; // 👈 } Err(e) => panic!(\"{e}\"), }; } But spinning is really just worse than blocking directly. When we block for I/O, the OS gives other threads a chance to run. So what we really need is to build some sort of a scheduler for all of our tasks, doing what the operating system used to handle for us. Let's walk things through from the beginning again. We create a TCP listener. let listener = TcpListener::bind(\"localhost:3000\").unwrap(); Set it to non-blocking mode. listener.set_nonblocking(true).unwrap(); And then start our main loop. The first thing we'll do is try accepting a new TCP connection. // ... loop { match listener.accept() { Ok((connection, _)) => { connection.set_nonblocking(true).unwrap(); // ... }, Err(e) if e.kind() == io::ErrorKind::WouldBlock => {} Err(e) => panic!(\"{e}\"), } } Now, we can't just continue serving that connection directly and forget about everyone else. Instead, we have to keep track of all our active connections. // ... let mut connections = Vec::new(); // 👈 loop { match listener.accept() { Ok((connection, _)) => { connection.set_nonblocking(true).unwrap(); connections.push(connection); // 👈 }, Err(e) if e.kind() == io::ErrorKind::WouldBlock => {} Err(e) => panic!(\"{e}\"), } } But we can't keep accepting connections forever. We don't have the luxury of OS scheduling anymore, so we need to handle running a little bit of everything in every iteration of the main loop. After trying to accept once, we need to deal with the active connections. For each connection, we have to perform whatever operation is needed to move the processing of the request forward, whether that means reading the request, or writing the response. // ... loop { // try accepting a new connection match listener.accept() { // ... } // attempt to make progress on active connections for connection in connections.iter_mut() { // 🤔 } } Uhh... If you remember the handle_connection function from before: fn handle_connection(mut connection: TcpStream) -> io::Result { let mut request = [0u8; 1024]; let mut read = 0; loop { let num_bytes = connection.read(&mut request[read..])?; // 👈 // ... } let request = String::from_utf8_lossy(&request[..read]); println!(\"{request}\"); let response = /* ... */; let mut written = 0; loop { let num_bytes = connection.write(&response[written..])?; // 👈 // ... } connection.flush().unwrap(); // 👈 } We perform three different I/O operations, read, write, and flush. With blocking I/O we could write our code sequentially, but now we have to deal with the fact that at any point when performing I/O, we could face WouldBlock and won't be able to make progress. We can't simply drop everything and move on to the next active connection, we need to keep track of its current state in order to resume from the correct point when we come back. We can represent the three possible states of handle_connection in an enum. enum ConnectionState { Read, Write, Flush } Remember, we don't need separate states for things like converting the request to a string, we only need states for places where we might encounter WouldBlock. The Read and Write states also need to hold on to some local state for the request/response buffers and the number of bytes that have already been read/written. These used to be local variables in our function, but now we need them to persist across iterations of our main loop. enum ConnectionState { Read { request: [u8; 1024], read: usize }, Write { response: &'static [u8], written: usize, }, Flush, } Connections start in the Read state with an empty buffer and zero bytes read, the same variables we used to initialize at the very start of handle_connection. // ... let mut connections = Vec::new(); loop { match listener.accept() { Ok((connection, _)) => { connection.set_nonblocking(true).unwrap(); let state = ConnectionState::Read { // 👈 request: [0u8; 1024], read: 0, }; connections.push((connection, state)); }, Err(e) if e.kind() == io::ErrorKind::WouldBlock => {} Err(e) => panic!(\"{e}\"), } } Now we can try to drive each connection forward from its current state. // ... loop { match listener.accept() { // ... } for (connection, state) in connections.iter_mut() { if let ConnectionState::Read { request, read } = state { // ... } if let ConnectionState::Write { response, written } = state { // ... } if let ConnectionState::Flush = state { // ... } } } If the connection is still in the read state, we can continue reading the request same as we did before. The only difference is that when we receive WouldBlock, we have to move on to the next connection. // ... 'next: for (connection, state) in connections.iter_mut() { if let ConnectionState::Read { request, read } = state { loop { // try reading from the stream match connection.read(&mut request[*read..]) { Ok(n) => { // keep track of how many bytes we've read *read += n } Err(e) if e.kind() == io::ErrorKind::WouldBlock => { // not ready yet, move on to the next connection continue 'next; // 👈 } Err(e) => panic!(\"{e}\"), } // did we reach the end of the request? if request.get(*read - 4..*read) == Some(b\"\\r\\n\\r\\n\") { break; } } // we're done, print the request let request = String::from_utf8_lossy(&request[..*read]); println!(\"{request}\"); } // ... } We also have to deal with the case where we read zero bytes. Before we could simply return from the connection handler and the state would be cleaned up for us, but now we have to remove the connection ourselves. Because we're currently iterating through the connections list, we'll store a separate list of indices to remove after we finish. let mut completed = Vec::new(); // 👈 'next: for (i, (connection, state)) in connections.iter_mut().enumerate() { if let ConnectionState::Read { request, read } = state { loop { // try reading from the stream match connection.read(&mut request[*read..]) { Ok(0) => { println!(\"client disconnected unexpectedly\"); completed.push(i); // 👈 continue 'next; } Ok(n) => *read += n, // not ready yet, move on to the next connection Err(e) if e.kind() == io::ErrorKind::WouldBlock => continue 'next, Err(e) => panic!(\"{e}\"), } // ... } // ... } } // iterate in reverse order to preserve the indices for i in completed.into_iter().rev() { connections.remove(i); // 👈 } Once we finish reading the request, we have to transition into the Write state and attempt to write the response. The control flow around writing the response is very similar to reading, transitioning to the Flush state once we finish. if let ConnectionState::Read { request, read } = state { // ... // move into the write state let response = concat!( \"HTTP/1.1 200 OK\\r\\n\", \"Content-Length: 12\\n\", \"Connection: close\\r\\n\\r\\n\", \"Hello world!\" ); *state = ConnectionState::Write { // 👈 response: response.as_bytes(), written: 0, }; } if let ConnectionState::Write { response, written } = state { loop { match connection.write(&response[*written..]) { Ok(0) => { println!(\"client disconnected unexpectedly\"); completed.push(i); continue 'next; } Ok(n) => { *written += n; } Err(e) if e.kind() == io::ErrorKind::WouldBlock => { // not ready yet, move on to the next connection continue 'next; } Err(e) => panic!(\"{e}\"), } // did we write the whole response yet? if *written == response.len() { break; } } // successfully wrote the response, try flushing next *state = ConnectionState::Flush; } And after we successfully flush the response, we can mark the connection as completed and have it removed from the list. if let ConnectionState::Flush = ConnectionState { match connection.flush() { Ok(_) => { completed.push(i); // 👈 }, Err(e) if e.kind() == io::ErrorKind::WouldBlock => { // not ready yet, move on to the next connection continue 'next; } Err(e) => panic!(\"{e}\"), } } That's it! Here's the new high-level flow of the server: fn main() { // bind the listener let listener = TcpListener::bind(\"localhost:3000\").unwrap(); listener.set_nonblocking(true).unwrap(); let mut connections = Vec::new(); loop { // try accepting a connection match listener.accept() { Ok((connection, _)) => { connection.set_nonblocking(true).unwrap(); // keep track of connection state let state = ConnectionState::Read { request: Vec::new(), read: 0, }; connections.push((connection, state)); }, Err(e) if e.kind() == io::ErrorKind::WouldBlock => {} Err(e) => panic!(\"{e}\"), } let mut completed = Vec::new(); // try to drive connnections forward 'next: for (i, (connection, state)) in connections.iter_mut().enumerate() { if let ConnectionState::Read { request, read } = state { // ... *state = ConnectionState::Write { response, written }; } if let ConnectionState::Write { response, written } = state { // ... *state = ConnectionState::Flush; } if let ConnectionState::Flush = state { // ... } } // remove any connections that completed, iterating in reverse order // to preserve the indices for i in completed.into_iter().rev() { connections.remove(i); } } } Now that we have to manage scheduling ourselves.. things are a lot more complicated. And now for the moment of truth... $ curl localhost:3000 # => Hello world! It works! A Multiplexed Server Our server can now handle running multiple requests concurrently on a single thread. Nothing ever blocks. If some operation would have blocked, it remembers the current state and moves on to run something else, much like the kernel scheduler was doing for us. However, our new design introduces two new problems. The first problem is that everything runs on the main thread, utilizing only a single CPU core. We're doing the best we can to use that one core efficiently, but we're still only running a single thing at a time. With threads spread across multiple cores, we could be doing much more. There's a bigger problem though. Our main loop isn't actually very efficient. We're making an I/O request to the kernel for every single active connection, every single iteration of the loop, to check if it's ready. A call to read or write, even if it returns WouldBlock and doesn't actually perform any I/O, is still a syscall. Syscalls aren't cheap. We might have 10k active connections but only 500 of them are ready. Calling read or write 10k times when only 500 of them will actually do anything is a massive waste of CPU cycles. As the number of connections scales, our loop becomes less and less efficient, wasting more time doing useless work. How do we fix this? With blocking I/O the kernel was able to schedule things efficiently because it knows when resources become ready. With non-blocking I/O, we don't know without checking. But checking is expensive. What we need is an efficient way to keep track of all of our active connections, and somehow get notified when they become ready. It turns out, we aren't the first to run into this problem. Every operating system provides a solution for exactly this. On Linux, it's called epoll. epoll(7) - I/O event notification facility The epoll API performs a similar task to poll(2): monitoring multiple file descriptors to see if I/O is possible on any of them. The epoll API can be used either as an edge-triggered or a level-triggered interface and scales well to large numbers of watched file descriptors. Sounds perfect! Let's try using it. epoll is a family of Linux system calls that let us work with a set of non-blocking sockets. It isn't terribly ergonomic to use directly, so we'll be using the epoll crate, a thin wrapper around the C interface. To start, we'll initialize an epoll instance using the create function. // ```toml // [dependencies] // epoll = \"4.3\" // ``` fn main() { let epoll = epoll::create(false).unwrap(); // 👈 } epoll::create returns a file descriptor that represents the newly created epoll instance. You can think of it as a set of file descriptors that we can add or remove from. In Linux/Unix, everything is considered a file. Actual files on the file system, TCP sockets, and external devices are all files that you can read/write to. A file descriptor is an integer that represents an open \"file\" in the system. We'll be working with file descriptors a lot throughout the rest of the article. The first file descriptor we have to add is the TCP listener. We can modify the epoll set with the epoll::ctl command. To add to it, we'll use the EPOLL_CTL_ADD flag. use epoll::{Event, Events, ControlOptions::*}; use std::os::fd::AsRawFd; fn main() { let listener = TcpListener::bind(\"localhost:3000\").unwrap(); listener.set_nonblocking(true).unwrap(); // add the listener to epoll let event = Event::new(Events::EPOLLIN, listener.as_raw_fd() as _); epoll::ctl(epoll, EPOLL_CTL_ADD, listener.as_raw_fd(), event).unwrap(); // 👈 } We pass in the file descriptor of the resource we are registering, the TCP listener, along with an Event. An event has two parts, the interest flag, and the data field. The interest flag gives us a way to tell epoll which I/O events we are interested in. In the case of the TCP listener, we want to be notified when new connections come in, so we pass the EPOLLIN flag. The data field lets us store an ID that will uniquely identify each resource. Remember, a file descriptor is a unique integer for a given file, so we can just use that. You'll see why this is important in the next step. Now for the main loop. This time, no spinning. Instead we can call epoll::wait. epoll_wait(2)- wait for an I/O event on an epoll file descriptor The epoll_wait() system call waits for events on the epoll(7) instance referred to by the file descriptor epfd. The buffer pointed to by events is used to return information from the ready list about file descriptors in the interest list that have some events available. A call to epoll_wait() will block until either: a file descriptor delivers an event; the call is interrupted by a signal handler; or the timeout expires. epoll::wait is the magical part of epoll. It lets us block until any of the events we registered become ready, and tells us which ones did. Right now that's just until a new connection comes in, but soon we'll use this same call to block for read, write, and flush events that we were previously spinning for. The fact that epoll::wait is \"blocking\" might put you off, but remember, it only blocks if there is nothing else to do, where previously we would have been spinning and making pointless syscalls. This idea of blocking on multiple operations simultaneously is known as I/O multiplexing. epoll::wait accepts a list of events that it will populate with information about the file descriptors that became ready. It then returns the number of events that were added. // ... loop { let mut events = [Event::new(Events::empty(), 0); 1024]; let timeout = -1; // block forever, until something happens let num_events = epoll::wait(epoll, timeout, &mut events).unwrap(); // 👈 for event in &events[..num_events] { // ... } } Each event contains the data field associated with the resource that became ready. for event in &events[..num_events] { let fd = event.data as i32; // ... } Remember when we used the file descriptor for the data field? We can use it to check whether the event is for the TCP listener, which means there's an incoming connection ready to accept: for event in &events[..num_events] { let fd = event.data as i32; // is the listener ready? if fd == listener.as_raw_fd() { // try accepting a connection match listener.accept() { Ok((connection, _)) => { connection.set_nonblocking(true).unwrap(); // ... } Err(e) if e.kind() == io::ErrorKind::WouldBlock => {} Err(e) => panic!(\"{e}\"), } } } If the call still returns WouldBlock for whatever reason, we can just move one and wait for the next event. Now we have to register the new connection in epoll, just like we did the listener. for event in &events[..num_events] { let fd = event.data as i32; // is the listener ready? if fd == listener.as_raw_fd() { // try accepting a connection match listener.accept() { Ok((connection, _)) => { connection.set_nonblocking(true).unwrap(); let fd = connection.as_raw_fd(); // register the connection with epoll let event = Event::new(Events::EPOLLINEvents::EPOLLOUT, fd as _); epoll::ctl(epoll, EPOLL_CTL_ADD, fd, event).unwrap(); // 👈 } Err(e) if e.kind() == io::ErrorKind::WouldBlock => {} Err(e) => panic!(\"{e}\"), } } } This time we set both EPOLLIN and EPOLLOUT, because we are interested in both read and write events, depending on the state of the connection. Now that we register connections, we'll get events for both the TCP listener and individual connections. We need to store connections and their states in a way that we can look up by file descriptor. Instead of a list, we can use a HashMap. let mut connections = HashMap::new(); loop { // ... 'next: for event in &events[..num_events] { let fd = event.data as i32; // is the listener ready? if fd == listener.as_raw_fd() { match listener.accept() { Ok((connection, _)) => { // ... let state = ConnectionState::Read { request: [0u8; 1024], read: 0, }; connections.insert(fd, (connection, state)); // 👈 } Err(e) if e.kind() == io::ErrorKind::WouldBlock => {} Err(e) => panic!(\"{e}\"), } continue 'next; } // otherwise, a connection must be ready let (connection, state) = connections.get_mut(&fd).unwrap(); // 👈 } } Once we have the ready connection and it's state, we can try to make progress the exact same way we did last time. Nothing changes about the way we read or write from the stream, the only difference is that we only ever do I/O when epoll tells us to. Before we had to check every single connection to see if something became ready, but now epoll handles that for us, so we avoid any useless syscalls. // ... // epoll told us this connection is ready let (connection, state) = connections.get_mut(&fd).unwrap(); if let ConnectionState::Read { request, read } = state { // connection.read... *state = ConnectionState::Write { response, written }; } if let ConnectionState::Write { response, written } = state { // connection.write... *state = ConnectionState::Flush; } if let ConnectionState::Flush = state { // connection.flush... } Once we've finished reading, writing, and flushing the response, we remove the connection from our map and drop it, which automatically unregisters it from epoll. for fd in completed { let (connection, _state) = connections.remove(&fd).unwrap(); // unregister from epoll drop(connection); } And that's it! Here's the new high-level flow of our server: fn main() { // create epoll let epoll = epoll::create(false).unwrap(); // bind the listener let listener = /* ... */. // add the listener to epoll let event = Event::new(Events::EPOLLIN, listener.as_raw_fd() as _); epoll::ctl(epoll, EPOLL_CTL_ADD, listener.as_raw_fd(), event).unwrap(); let mut connections = HashMap::new(); loop { let mut events = [Event::new(Events::empty(), 0); 1024]; // block until epoll wakes us up let num_events = epoll::wait(epoll, 0, &mut events).unwrap(); let mut completed = Vec::new(); 'next: for event in &events[..num_events] { let fd = event.data as i32; // is the listener ready? if fd == listener.as_raw_fd() { match listener.accept() { Ok((connection, _)) => { // ... // add the connection to epoll let event = Event::new(Events::EPOLLINEvents::EPOLLOUT, fd as _); epoll::ctl(epoll, EPOLL_CTL_ADD, fd, event).unwrap(); // keep track of connection state let state = ConnectionState::Read { request: [0u8; 1024], read: 0, }; connections.insert(fd, (connection, state)); } continue 'next; } // otherwise, a connection is ready let (connection, state) = connections.get_mut(&fd).unwrap(); // try to drive it forward based on its state if let ConnectionState::Read { request, read } = state { // connection.read... *state = ConnectionState::Write { response: response.as_bytes(), written: 0, }; } if let ConnectionState::Write { response, written } = state { // connection.write... *state = ConnectionState::Flush; } if let ConnectionState::Flush = state { // connection.flush... } } for fd in completed { let (connection, _state) = connections.remove(&fd).unwrap(); // unregister from epoll drop(connection); } } } And... $ curl localhost:3000 # => Hello world! It works! Futures Alright, our server can now process multiple requests concurrently on a single thread. And thanks to epoll, it's pretty efficient at doing so. But there's still a problem. We got so caught up in gaining control over the execution of our tasks, and then scheduling them efficiently ourselves, that in the process the complexity of our code has increased dramatically. What went from a simple, sequential accept loop has become a massive event loop managing multiple state machines. And it's not pretty. Making our original server multi-threaded was as simple as adding a single line of code in thread::spawn. If you think about it, our server is still a set of concurrent tasks, we just manage them all messily in a giant loop. This doesn't seem very scalable. The more features we add to our program, the more complex the loop becomes, because everything is so tightly coupled together. What if we could write an abstraction like thread::spawn that let us write our tasks as individual units, and handle the scheduling and event handling for all tasks in a single place, regaining some of that sequential control flow? This idea is generally referred to as asynchronous programming. Let's take a look at the signature of thread::spawn. pub fn spawn(f: F) -> JoinHandle where F: FnOnce() -> T + Send + 'static, T: Send + 'static; thread::spawn takes a closure. Our version of thread::spawn however, could not take a closure, because we aren't the operating system and can't arbitrarily preempt code at will. We need to somehow represent a non-blocking, resumable task. // fn spawn(task: T); trait Task {} Handling a request is a task. Reading or writing from/to the connection is also a task. A task is really just a piece of code that needs to be run, representing a value that will resolve sometime in the future. Future, that's a nice name isn't it. trait Future { type Output; fn run(self) -> Self::Output; } Hmm.. that signature doesn't really work. Having run return the output directly means it must be blocking, which is what we're trying so hard to avoid. We instead want a way to attempt to drive the future forward without blocking, like we've been doing with all our state machines in the event loop. What we're really doing when we try to run a future is asking it if the value is ready yet, polling it, and giving it a chance to make progress. trait Future { type Output; fn poll(self) -> Option; } That looks more like it. Except wait, poll can't take self if we want to call it multiple times, it should probably take a reference. A mutable reference, if we want to mutate the internal state of the task as it makes progress, like ConnectionState. trait Future { type Output; fn poll(&mut self) -> Option; } Alright, imagine a scheduler that runs these new futures. impl Scheduler { fn run(&self) { loop { for future in &self.tasks { future.poll(); } } } } That doesn't look right. After initiating the future, the scheduler should only try to call poll when the given future is able to make progress, like when epoll returns an event. But how do we know when that happens? If the future represents an I/O operation, we know it's able to make progress when epoll tells us it is. The problem is the scheduler won't know which epoll event corresponds to which future, because the future handles everything internally in poll. What we need is for the scheduler to pass each future an ID, so that the future can register any I/O resources with epoll using the same ID, instead of their file descriptors. That way the scheduler has a way of mapping epoll events to runnable futures. impl Scheduler { fn spawn(&self, mut future: T) { let id = rand(); // poll the future once to get it started, passing in it's ID future.poll(event.id); // store the future self.tasks.insert(id, future); } fn run(self) { // ... for event in epoll_events { // poll the future associated with this event let future = self.tasks.get(&event.id).unwrap(); future.poll(event.id); } } } You know, it would be nice if there was a more generic way to tell the scheduler about progress than tying every future to epoll. We might have different types of futures that make progress in other ways, like a timer running on a background thread, or a channel that needs to notify tasks that a message is available. What if we gave the futures themselves more control? Instead of just an ID, what if we give every future a way to wake itself up, notifying the scheduler that it's ready to make progress? A simple callback should do the trick. #[derive(Clone)] struct Waker(Arc); impl Waker { fn wake(&self) { (self.0)() } } trait Future { type Output; fn poll(&mut self, waker: Waker) -> Option; } The scheduler can provide each future a callback, that when called, updates the scheduler's state for that future, marking it as ready. That way our scheduler is completely disconnected from epoll, or any other individual notification system. Waker is thread-safe, allowing us to use background threads to wake futures. Right now all of our tasks are connected to epoll anyways, but this will come in handy later. A Reactor Consider a future that reads from a TCP connection. It receives a Waker that needs to be called when epoll returns the relevant EPOLLIN event, but the future won't be running when that happens, it will be idle in the scheduler's queue. Obviously, the future can't wake itself up, someone else has to. All I/O futures need a way to give their wakers to epoll. In fact, they need more than that, they need some sort of background service that drives epoll, so we can register wakers with it. This service is commonly known as a reactor. The reactor is a simple object holding the epoll descriptor and a map of tasks keyed by file descriptor, just like we had before. The difference is that instead of the map holding the TCP connections themselves, it holds the wakers. thread_local! { static REACTOR: Reactor = Reactor::new(); } struct Reactor { epoll: RawFd, tasks: RefCell>, } impl Reactor { pub fn new() -> Reactor { Reactor { epoll: epoll::create(false).unwrap(), tasks: RefCell::new(HashMap::new()), } } } To keep things simple, the reactor is a thread-local object, mutated through a RefCell. This is important because the reactor will be modified and accessed by different tasks throughout the program. The reactor needs to support a couple simple operations. Adding a task: impl Reactor { // Add a file descriptor with read and write interest. // // `waker` will be called when the descriptor becomes ready. pub fn add(&self, fd: RawFd, waker: Waker) { let event = epoll::Event::new(Events::EPOLLINEvents::EPOLLOUT, fd as u64); epoll::ctl(self.epoll, EPOLL_CTL_ADD, fd, event).unwrap(); self.tasks.borrow_mut().insert(fd, waker); } } Removing a task: impl Reactor { // Remove the given descriptor from epoll. // // It will no longer receive any notifications. pub fn remove(&self, fd: RawFd) { self.tasks.borrow_mut().remove(&fd); } } And driving epoll. We'll be running the reactor in a loop, just like we were running epoll in a loop before. It works exactly the same way, except all the reactor has to do is wake the associated future for every event. Remember, this will trigger the scheduler to run the future later, and continue the cycle. impl Reactor { // Drive tasks forward, blocking forever until an event arrives. pub fn wait(&self) { let mut events = [Event::new(Events::empty(), 0); 1024]; let timeout = -1; // forever let num_events = epoll::wait(self.epoll, timeout, &mut events).unwrap(); for event in &events[..num_events] { let fd = event.data as i32; // wake the task if let Some(waker) = self.tasks.borrow().get(&fd) { waker.wake(); } } } } Great, now we have a simple reactor interface. But all of this is still a little abstract. What does it really mean to call wake? Scheduling Tasks We have a reactor, now we need a scheduler to run our tasks. One thing to keep in mind is that the scheduler must be global and thread-safe because wakers are Send, meaning wake may be called concurrently from other threads. static SCHEDULER: Scheduler = Scheduler { /* ... */ }; #[derive(Default)] struct Scheduler { // ... } We want to be able to spawn tasks onto our scheduler, just like we could spawn threads. For now, we'll only handle spawning tasks that don't return anything, to avoid having to implement a version of JoinHandle. To start, we'll probably need some sort of list of tasks to run, guarded by a Mutex to be thread-safe. struct Scheduler { tasks: Mutex>> } impl Scheduler { pub fn spawn(&self, task: impl Future + Send + 'static) { self.tasks.lock().unwrap().push(Box::new(task)); } pub fn run(&self) { for task in tasks.borrow_mut().iter_mut() { // ... } } } Remember, futures are only polled when they are able to make progress. They should always be able to make progress at the start, but after that we don't touch them until someone calls wake. There are a couple of ways we could go about this. We could just store a HashMap of tasks with a status flag that indicates whether or not the task was woken, but that means we would have to iterate through the entire map to find out which tasks are runnable. While this isn't incredibly expensive, there is a better way. Instead of storing every spawned task in the map, we'll only store runnable tasks in a queue. use std::collections::VecDeque; type SharedTask = Arc + Send>>; #[derive(Default)] struct Scheduler { runnable: Mutex>, } The types will make sense soon. When a task is spawned, it's pushed onto the back of the queue: impl Scheduler { pub fn spawn(&self, task: impl Future + Send + 'static) { self.runnable.lock().unwrap().push_back(Arc::new(Mutex::new(task))); } } The scheduler pops tasks off the queue one by one and calls poll: impl Scheduler { fn run(&self) { loop { // pop a runnable task off the queue let task = self.runnable.lock().unwrap().pop_front(); if let Some(task) = task { // and poll it task.try_lock().unwrap().poll(waker); } } } Notice that we don't even really need a Mutex around the task because it's only going to be accessed by the main thread, but removing it would mean unsafe. We'll settle with try_lock().unwrap() for now. Now for the important bit, the waker. The beautiful part of our run queue is that when a task is woken, it's simply pushed back onto the queue. impl Scheduler { fn run(&self) { loop { // pop a runnable task off the queue let task = self.runnable.lock().unwrap().pop_front(); if let Some(task) = task { let t2 = task.clone(); // create a waker that pushes the task back on let wake = Arc::new(move || { SCHEDULER.runnable.lock().unwrap().push_back(t2.clone()); }); // poll the task task.try_lock().unwrap().poll(Waker(wake)); } } } } This is why the task needed to be reference counted — it's not owned by the scheduler, it's referenced by the queue, as well as wherever the waker is being stored. In fact the same task might be on the queue multiple times at once, and the waker might be cloned all over the place. Once we've dealt with all runnable tasks, we need to block on the reactor until another task becomes ready 5. Once a task becomes ready, the reactor will call wake and push the future back onto our queue for us to run it again, continuing the cycle. pub fn run(&self) { loop { loop { // pop a runnable task off the queue let Some(task) = self.runnable.lock().unwrap().pop_front() else { break }; let t2 = task.clone(); // create a waker that pushes the task back on let wake = Arc::new(move || { SCHEDULER.runnable.lock().unwrap().push_back(t2.clone()); }); // poll the task task.lock().unwrap().poll(Waker(wake)); } // if there are no runnable tasks, block on epoll until something becomes ready REACTOR.with(|reactor| reactor.wait()); // 👈 } } Beautiful. ...ignoring the Arc> clutter. Alright! Together, the scheduler and reactor form a runtime for our futures. The scheduler keeps tracks of which tasks are runnable and polls them, and the reactor marks tasks as runnable when epoll tells us something they are interested in becomes ready. trait Future { type Output; fn poll(&mut self, waker: Waker) -> Option; } static SCHEDULER: Scheduler = Scheduler { /* ... */ }; // The scheduler. #[derive(Default)] struct Scheduler { runnable: Mutex>, } type SharedTask = Arc + Send>>; impl Scheduler { pub fn spawn(&self, task: impl Future + Send + 'static); pub fn run(&self); } thread_local! { static REACTOR: Reactor = Reactor::new(); } // The reactor. struct Reactor { epoll: RawFd, tasks: RefCell>, } impl Reactor { pub fn new() -> Reactor; pub fn add(&self, fd: RawFd, waker: Waker); pub fn remove(&self, fd: RawFd); pub fn wait(&self); } We've written the runtime, now let's try to use it! An Async Server It's time to actually write the tasks that our scheduler is going to run. Like before, we'll use enums as state machines to manage the different states of our program. The difference is that this time, each task will manage it's own state independent from other tasks, instead of having the entire program revolve around a messy event loop. To start everything off, we need to write the main task. This task will be pushed on and off the scheduler's run queue for the entirety of our program. fn main() { SCHEDULER.spawn(Main::Start); SCHEDULER.run(); } enum Main { Start, } impl Future for Main { type Output = (); fn poll(&mut self, waker: Waker) -> Option { // ... } } Our task starts off just like before, creating the TCP listener and setting it to non-blocking mode. // impl Future for Main { fn poll(&mut self, waker: Waker) -> Option { if let Main::Start = self { let listener = TcpListener::bind(\"localhost:3000\").unwrap(); listener.set_nonblocking(true).unwrap(); } None } Now we need to register the listener with epoll. We can do that using our new Reactor. // impl Future for Main { fn poll(&mut self, waker: Waker) -> Option { if let Main::Start = self { // ... REACTOR.with(|reactor| { reactor.add(listener.as_raw_fd(), waker); }); } } Notice how we give the reactor the waker provided to us by the scheduler. When a connection comes, epoll will return an event and the Reactor will wake the task, causing the scheduler to push our task back onto the queue and poll us again. The waker keeps everything connected. We now need a second state for the next time we're run, Accept. The main task will stay in the Accept state for the rest of the program, attempting to accept new connections. enum Main { Start, Accept { listener: TcpListener }, // 👈 } fn poll(&mut self, waker: Waker) -> Option { if let Main::Start = self { // ... *self = Main::Accept { listener }; } if let Main::Accept { listener } = self { match listener.accept() { Ok((connection, _)) => { // ... } Err(e) if e.kind() == io::ErrorKind::WouldBlock => { return None; } Err(e) => panic!(\"{e}\"), } } None } If the listener is not ready, we can simply return None. Remember, this tells the scheduler the future is not yet ready, and it will be rescheduled once the reactor wakes us. If we do accept a new connection, we need to again set it to non-blocking mode. fn poll(&mut self, waker: Waker) -> Option { if let Main::Start = self { // ... } if let Main::Accept { listener } = self { match listener.accept() { Ok((connection, _)) => { connection.set_nonblocking(true).unwrap(); // 👈 } Err(e) if e.kind() == io::ErrorKind::WouldBlock => return None, Err(e) => panic!(\"{e}\"), } } None } And now we need to spawn a new task to handle the request. fn poll(&mut self, waker: Waker) -> Option { if let Main::Start = self { // ... } if let Main::Accept { listener } = self { match listener.accept() { Ok((connection, _)) => { connection.set_nonblocking(true).unwrap(); SCHEDULER.spawn(Handler { // 👈 connection, state: HandlerState::Start, }); } Err(e) if e.kind() == io::ErrorKind::WouldBlock => return None, Err(e) => panic!(\"{e}\"), } } } The handler task looks similar to before, but now it manages the connection itself along with its current state, which is identical to ConnectionState from earlier. struct Handler { connection: TcpStream, state: HandlerState, } enum HandlerState { Start, Read { request: [u8; 1024], read: usize, }, Write { response: &'static [u8], written: usize, }, Flush, } The handler task starts by registering its connection with the reactor to be notified when the connection is ready to read/write to. Again, it passes the waker so that the scheduler knows when to run it again. impl Future for Handler { type Output = (); fn poll(&mut self, waker: Waker) -> Option { if let HandlerState::Start = self.state { // start by registering our connection for notifications REACTOR.with(|reactor| { reactor.add(self.connection.as_raw_fd(), waker); }); self.state = HandlerState::Read { request: [0u8; 1024], read: 0, }; } // ... } } The Read, Write, and Flush states work exactly the same as before, but now when we encounter WouldBlock, we can simply return None, knowing that we'll be run again once our future is woken. // impl Future for Handler { fn poll(&mut self, waker: Waker) -> Option { if let HandlerState::Start = self.state { // ... } // read the request if let HandlerState::Read { request, read } = &mut self.state { loop { match self.connection.read(&mut request[read..]) { Ok(0) => { println!(\"client disconnected unexpectedly\"); return Some(()); } Ok(n) => *read += n, Err(e) if e.kind() == io::ErrorKind::WouldBlock => return None, // 👈 Err(e) => panic!(\"{e}\"), } // did we reach the end of the request? let read = *read; if read >= 4 && &request[read - 4..read] == b\"\\r\\n\\r\\n\" { break; } } // we're done, print the request let request = String::from_utf8_lossy(&request[..*read]); println!(\"{}\", request); // and move into the write state let response = /* ... */; self.state = HandlerState::Write { response: response.as_bytes(), written: 0, }; } // write the response if let HandlerState::Write { response, written } = &mut self.state { // self.connection.write... // successfully wrote the response, try flushing next self.state = HandlerState::Flush; } // flush the response if let HandlerState::Flush = self.state { match self.connection.flush() { Ok(_) => {} Err(e) if e.kind() == io::ErrorKind::WouldBlock => return None, // 👈 Err(e) => panic!(\"{e}\"), } } } Notice how much nicer things are when tasks are independent, encapsulated objects? At the end of the task's lifecycle, it removes its connection from the reactor and returns Some. It will never be run again after that point. fn poll(&mut self, waker: Waker) -> Option { // ... REACTOR.with(|reactor| { reactor.remove(self.connection.as_raw_fd()); }); Some(()) } Perfect! Our new server looks a lot nicer. Individual tasks are completely independent of each other, and we can spawn new tasks just like threads. fn main() { SCHEDULER.spawn(Main::Start); SCHEDULER.run(); } // main task: accept loop enum Main { Start, Accept { listener: TcpListener }, } impl Future for Main { type Output = (); fn poll(&mut self, waker: Waker) -> Option { if let Main::Start = self { // ... REACTOR.with(|reactor| { reactor.add(listener.as_raw_fd(), waker); }); *self = Main::Accept { listener }; } if let Main::Accept { listener } = self { match listener.accept() { Ok((connection, _)) => { // ... SCHEDULER.spawn(Handler { connection, state: HandlerState::Start, }); } Err(e) if e.kind() == io::ErrorKind::WouldBlock => return None, Err(e) => panic!(\"{e}\"), } } None } } // handler task: handles every connection struct Handler { connection: TcpStream, state: HandlerState, } enum HandlerState { Start, Read { request: [u8; 1024], read: usize, }, Write { response: &'static [u8], written: usize, }, Flush, } impl Future for Handler { type Output = (); fn poll(&mut self, waker: Waker) -> Option { if let HandlerState::Start = self.state { REACTOR.with(|reactor| { reactor.add(self.connection.as_raw_fd(), waker); }); self.state = HandlerState::Read { /* .. */ }; } if let HandlerState::Read { request, read } = &mut self.state { // ... self.state = HandlerState::Write { /* .. */ }; } if let HandlerState::Write { response, written } = &mut self.state { // ... self.state = HandlerState::Flush; } if let HandlerState::Flush = self.state { // ... } REACTOR.with(|reactor| { reactor.remove(self.connection.as_raw_fd()); }); Some(()) } } Andd.... $ curl localhost:3000 # => Hello world! It works! A Functional Server With this new future abstraction, our server is much nicer than before. Futures get to manage their state independently, the scheduler gets to run tasks without worrying about epoll, and tasks can be spawned and woken without worrying about any of the lower level details of the scheduler. It really is a much nicer programming model. It is nice that tasks are encapsulated, but we still have to write everything in a state-machine like way. Granted, Rust makes this pretty easy to do with enums, but could we do better? Looking at the two futures we've written, they have a lot in common. Each future has a number of states. At each state, some code is run. If that code completes successfully, we transition into the next state. If it encounters WouldBlock, we return None, indicating that the future is not yet ready. This seems like something we can abstract over. What we need is a way to create a future from some block of code, and a way to combine two futures, chaining them together. Given a block of code, we need to be able to construct a future... sound like a job for a closure? fn future_fn(f: F) -> impl Future where F: Fn(), { // ... } The closure probably also needs to mutate local state. fn future_fn(f: F) -> impl Future where F: FnMut(), { // ... } And it also needs access to the waker. fn future_fn(f: F) -> impl Future where F: FnMut(Waker), { // ... } And.. it needs to return a value. An optional value, in case it's not ready yet. In fact, we can just copy the signature of poll, because that's really what this closure is 😅 fn poll_fn(f: F) -> impl Future where F: FnMut(Waker) -> Option, { // ... } Implementing poll_fn doesn't seem too hard, we just need a wrapper struct that implements Future and delegates poll to the closure. fn poll_fn(f: F) -> impl Future where F: FnMut(Waker) -> Option, { struct FromFn(F); impl Future for FromFn where F: FnMut(Waker) -> Option, { type Output = T; fn poll(&mut self, waker: Waker) -> Option { (self.0)(waker) } } FromFn(f) } Alright. Let's try reworking the main task to use the new poll_fn helper. We can easily stick the code of the Main::Start state into a closure. fn main() { SCHEDULER.spawn(listen()); SCHEDULER.run(); } fn listen() -> impl Future { let start = poll_fn(|waker| { let listener = TcpListener::bind(\"localhost:3000\").unwrap(); listener.set_nonblocking(true).unwrap(); REACTOR.with(|reactor| { reactor.add(listener.as_raw_fd(), waker); }); Some(listener) }); // ... } Remember, Main::Start never waits on any I/O, so it's immediately ready with the listener. We can also use poll_fn to write the Main::Accept future. fn listen() -> impl Future { let start = poll_fn(|waker| { // ... Some(listener) }); let accept = poll_fn(|_| match listener.accept() { Ok((connection, _)) => { connection.set_nonblocking(true).unwrap(); SCHEDULER.spawn(Handler { connection, state: HandlerState::Start, }); None } Err(e) if e.kind() == io::ErrorKind::WouldBlock => None, Err(e) => panic!(\"{e}\"), }); } On the other hand, accept always returns None because we want it to be called every time a new connection comes in. It runs for the entirety of our program. We have our two task states, now we need a way to chain them together. fn chain(future1: F1, future2: F2) -> impl Future where F1: Future, F2: Future { // ... } Hm, that doesn't really work. The second future will need to access the output of the first, the TCP listener. Instead of chaining the second future directly, we have to chain a closure over the first future's output. That way the closure can use the output of the first future to construct the second. fn chain(future1: T1, chain: F) -> impl Future where T1: Future, F: FnOnce(T1::Output) -> T2, T2: Future { // ... } That seems better. We might as well be fancy and have chain be a method on the Future trait. That way we can call .chain as a postfix method on any future. trait Future { // ... fn chain(self, chain: F) -> Chain where F: FnOnce(Self::Output) -> T, T: Future, Self: Sized, { // ... } } enum Chain { // ... } That looks right, let's try implementing it! The Chain future is a generalization of our state machines, so it itself is a mini state machine. It starts off by polling the first future, holding onto the transition closure for when it finishes. enum Chain { First { future1: T1, transition: F }, } impl Future for Chain where T1: Future, F: FnOnce(T1::Output) -> T2, T2: Future, { type Output = T2::Output; fn poll(&mut self, waker: Waker) -> Option { if let Chain::First { future1, transition } = self { // poll the first future match future1.poll(waker) { // ... } } } } Once the first future is finished, it constructs the second future using the transition closure, and starts polling it: enum Chain { First { future1: T1, transition: F }, Second { future2: T2 }, } impl Future for Chain where T1: Future, F: FnOnce(T1::Output) -> T2, T2: Future, { type Output = T2::Output; fn poll(&mut self, waker: Waker) -> Option { if let Chain::First { future1, transition } = self { // poll the first future match future1.poll(waker.clone()) { Some(value) => { // first future is done, transition into the second let future2 = (transition)(value); // 👈 *self = Chain::Second { future2 }; } // first future is not ready, return None => return None, } } if let Chain::Second { future2 } = self { // first future is already done, poll the second return future2.poll(waker); // 👈 } None } } Notice how the same waker is used to poll both futures. This means that notifications for both futures will be propagated to the Chain parent future, depending on its state. Hm... that doesn't actually seem to work: error[E0507]: cannot move out of `*transition` which is behind a mutable reference --> src/main.rs:182:33182let future2 = (transition)(value);^^^^^^^^^^^^ move occurs because `*transition` has type `F`,which does not implement the `Copy` trait Oh right, transition is an FnOnce closure, meaning it is consumed the first time it is called. We only ever call it once based on our state machine, but the compiler doesn't know that. We can wrap it in an Option and use take to call it, replacing it with None and allowing us to get an owned value. This is a common pattern when working with state machines. enum Chain { First { future1: T1, transition: Option }, // 👈 Second { future2: T2 }, } // ... fn poll(&mut self, waker: Waker) -> Option { if let Chain::First { future1, transition } = self { match future1.poll(waker.clone()) { Some(value) => { let future2 = (transition.take().unwrap())(value); // 👈 *self = Chain::future2 { future2 }; } None => return None, } } // ... } Perfect. Now the chain method can simply construct our Chain future in it's starting state. trait Future { // ... fn chain(self, transition: F) -> Chain where F: FnOnce(Self::Output) -> T, T: Future, Self: Sized, { Chain::First { future1: self, transition: Some(transition), } } } Alright. Where were we... oh right, the main future! fn listen() -> impl Future { let start = poll_fn(|waker| { // ... Some(listener) }); let accept = poll_fn(|_| match listener.accept() { // ... }); } We can combine the two futures using our new chain method: fn listen() -> impl Future { poll_fn(|waker| { // ... Some(listener) }) .chain(|listener| { // 👈 poll_fn(move |_| match listener.accept() { // ... }) }) } Huh, that seems really nice! Gone is our manual state machine, our listen method can now be expressed in terms of simple closures! fn main() { SCHEDULER.spawn(listen()); SCHEDULER.run(); } fn listen() -> impl Future { poll_fn(|waker| { let listener = TcpListener::bind(\"localhost:3000\").unwrap(); // ... REACTOR.with(|reactor| { reactor.add(listener.as_raw_fd(), waker); }); Some(listener) }) .chain(|listener| { poll_fn(move |_| match listener.accept() { Ok((connection, _)) => { // ... SCHEDULER.spawn(Handler { connection, state: HandlerState::Start, }); None } Err(e) if e.kind() == io::ErrorKind::WouldBlock => None, Err(e) => panic!(\"{e}\"), }) }) } It's too good to be true! We can convert the connection handler to a closure-based future just like we did with the main one. To start we'll separate it out into a function that returns a Future. fn listen() -> impl Future { poll_fn(|waker| { // ... }) .chain(|listener| { poll_fn(move |_| match listener.accept() { Ok((connection, _)) => { // ... SCHEDULER.spawn(handle(connection)); // 👈 None } // ... }) }) } fn handle(connection: TcpStream) -> impl Future { // ... } The first state, HandlerState::Start, is a simple poll_fn closure that registers the connection with the reactor and immediately returns. fn handle(connection: TcpStream) -> impl Future { poll_fn(move |waker| { REACTOR.with(|reactor| { reactor.add(connection.as_raw_fd(), waker); }); Some(()) }) } The second state, HandlerState::Read, can be chained on quite easily. It initializes its local request state on the stack and moves it into the future, allowing the future to own its state. fn handle(mut connection: TcpStream) -> impl Future { poll_fn(move |waker| { // ... }) .chain(move |_| { let mut read = 0; let mut request = [0u8; 1024]; // 👈 poll_fn(move |_| { loop { // try reading from the stream match connection.read(&mut request[read..]) { Ok(0) => { println!(\"client disconnected unexpectedly\"); return Some(()); } Ok(n) => read += n, Err(e) if e.kind() == io::ErrorKind::WouldBlock => return None, Err(e) => panic!(\"{e}\"), } // did we reach the end of the request? let read = read; if read >= 4 && &request[read - 4..read] == b\"\\r\\n\\r\\n\" { break; } } // we're done, print the request let request = String::from_utf8_lossy(&request[..read]); println!(\"{request}\"); Some(()) }) }) } HandlerState::Write and HandlerState::Flush can be chained on the same way. fn handle(connection: TcpStream) -> impl Future { poll_fn(move |waker| { // REACTOR.register... }) .chain(move |_| { // connection.read... }) .chain(move |_| { let response = /* ... */; let mut written = 0; poll_fn(move |_| { loop { match connection.write(response[written..].as_bytes()) { Ok(0) => { println!(\"client disconnected unexpectedly\"); return Some(()); } Ok(n) => written += n, Err(e) if e.kind() == io::ErrorKind::WouldBlock => return None, Err(e) => panic!(\"{e}\"), } // did we write the whole response yet? if written == response.len() { break; } } Some(()) }) }) .chain(move |_| { poll_fn(move |_| { match connection.flush() { Ok(_) => {} Err(e) if e.kind() == io::ErrorKind::WouldBlock => { return None; } Err(e) => panic!(\"{e}\"), }; REACTOR.with(|reactor| reactor.remove(connection.as_raw_fd()); Some(()) }) }) } It's beautiful. Uhhhh... error[E0382]: use of moved value: `connection` --> src/main.rs:59:1251fn handle(mut connection: TcpStream) -> impl Future {-------------- move occurs because `connection` has type `TcpStream`, which does not implement the `Copy` trait 52poll_fn(move |waker| {------------- value moved into closure here 53REACTOR.with(|reactor| { 54reactor.add(connection.as_raw_fd(), waker);---------- variable moved due to use in closure ... 59.chain(move |_| {^^^^^^^^ value used here after move ... 66match connection.read(&mut request[read..]) {---------- use occurs due to use in closure error[E0382]: use of moved value: `connection` // ... Hmm.... All of our futures use move closures, meaning they take ownership of the connection. There can only be one owner of the connection though. Guess they shouldn't be move closures? error[E0373]: closure may outlive the current function, but it borrows `connection`, which is owned by the current function --> src/main.rs:52:1352poll_fn(|waker| {^^^^^^^^ may outlive borrowed value `connection` 53REACTOR.with(|reactor| { 54reactor.add(connection.as_raw_fd(), waker);---------- `connection` is borrowed herenote: closure is returned here --> src/main.rs:52:552/ poll_fn(|waker| { 53| REACTOR.with(|reactor| { 54| reactor.add(connection.as_raw_fd(), waker); 55| }); ...128| }) 129| })|______^ help: to force the closure to take ownership of `connection` (and any other referenced variables), use the `move` keyword52poll_fn(move |waker| {++++ That doesn't seem to work either. The connection needs to live somewhere. What if we only move it into the first future, and have the rest of the futures borrow it? error[E0382]: use of moved value: `connection` --> src/main.rs:59:1251fn handle(mut connection: TcpStream) -> impl Future {-------------- move occurs because `connection` has type `TcpStream`, which does not implement the `Copy` trait 52poll_fn(move |waker| {------------- value moved into closure here 53REACTOR.with(|reactor| { 54reactor.add(connection.as_raw_fd(), waker);---------- variable moved due to use in closure ... 59.chain(|_| {^^^ value used here after move ... 66match connection.read(&mut request[read..]) {---------- use occurs due to use in closure Nope, that doesn't work either. Under the hood, our chained futures look something like this. The first future owns the connection, and the rest borrow from it. enum Handle { Start { connection: TcpStream, } Read { connection: &'??? TcpStream } } Which of course, doesn't make much sense. Once the state transitions into Read, the connection from Start is dropped, and we have nothing to reference. So how did this work when we were writing futures manually? struct Handler { connection: TcpStream, state: HandlerState, } enum HandlerState { /* ... */ } Right, the connection lived in the outer struct. Maybe we can write another one of those future helpers that allows us to reference some data stored in an outer future? Something like this: struct WithData { data: D, future: F, } Seems simple enough. We should be able to construct the future such that it can capture a reference to the data. We can use a closure, just like we did with chain: impl WithData { pub fn new(data: D, construct: impl Fn(&D) -> F) -> WithData { let future = construct(&data); WithData { data, future } } } WithData can implement Future by simply delegating to the inner future: impl Future for WithData where F: Future, { type Output = F::Output; fn poll(&mut self, waker: Waker) -> Option { self.future.poll(waker) } } Now we should be able to wrap our future in WithData, giving connection a place to live even after it is returned.. and everything should work! fn handle(connection: TcpStream) -> impl Future { WithData::new(connection, |connection| { from_fn(move |waker| { // ... }) .chain(move |_| { let mut request = [0u8; 1024]; let mut read = 0; from_fn(move |_| { // ... }) }) .chain(move |_| { let response = /* ... */; let mut written = 0; from_fn(move |_| { // ... }) }) .chain(move |_| { from_fn(move |_| { // ... }) }) }) } A little funky, but if it works... error: lifetime may not live long enough --> src/main.rs:53:952WithData::new(connection, |connection| { |----------- return type of closure `Chain, [closure@src/bin/play.rs:60:16: 86:10], impl Future>, [closure@src/bin/play.rs:87:16: 113:10], impl Future>, [closure@src/bin/play.rs:114:16: 130:10], impl Future>` contains a lifetime `'2` || |has type `&'1 TcpStream` 53/ from_fn(move |waker| { 54| REACTOR.with(|reactor| { 55| reactor.add(connection.as_raw_fd(), waker); 56| }); ...129| }) 130| })|__________^ returning this value requires that `'1` must outlive `'2` It couldn't be that easy could it. What a weird error message too. return type of closure `Chain, [closure @src/bin/play.rs:60:16: 86:10], impl Future>, [closure@src/bin/ play.rs:87:16: 113: 10], impl Future>, [closure@src/bin/play.rs :114:16: 130:10], impl Future>` contains a lifetime `'2` Alright, so, the giant chained future we pass to WithData contains a reference to the connection. That's what we want, for the future to borrow the connection, right? `connection` has type `&'1 TcpStream` ... returning this value requires that `'1` must outlive `'2` Hmmm, nowhere in our WithData struct did we actually specify that the future borrows from the data. It seems Rust can't figure out the lifetimes without that. So.. we should probably add a lifetime to WithData right? struct WithData { data: D, future: F, } error[E0392]: parameter `'data` is never used --> src/bin/play.rs:160:17160struct WithData {^^^^^ unused parameter= help: consider removing `'data`, referring to it in a field, or using a marker such as `PhantomData` Adding PhantomData seems like an easy fix. struct WithData { data: D, future: F, _data: PhantomData, } The future does reference &'data D, so that sort of makes sense. Now in the constructor, we should say that the future borrows from the data: impl WithData where F: Future + 'data, // 👈 { pub fn new( data: D, construct: impl Fn(&'data D) -> F, // 👈 ) -> WithData { let future = construct(&data); WithData { data, future, _data: PhantomData, } } } And that should work, right? All the lifetimes are written out and make sense: error[E0597]: `data` does not live long enough --> src/bin/play.rs:172:30167impl WithData----- lifetime `'data` defined here ... 172let future = construct(&data);----------^^^^^-||borrowed value does not live long enoughargument requires that `data` is borrowed for `'data` ... 178}- `data` dropped here while still borrowed error[E0505]: cannot move out of `data` because it is borrowed --> src/bin/play.rs:174:13167impl WithData----- lifetime `'data` defined here ... 172let future = construct(&data);----------------||borrow of `data` occurs hereargument requires that `data` is borrowed for `'data` 173WithData { 174data,^^^^ move out of `data` occurs here Or... not. Why doesn't this work? `data` dropped here while still borrowed Wait a minute, that's the same error message we got when we removed move from our future closures?! But the data does have a place to live now... doesn't it? Hmm.. actually, the second error is telling us that moving data is wrong too: cannot move out of `data` because it is borrowed That... actually makes sense. The future we construct borrows the data that lives on the stack. Once we move it, it's no longer in the same place on the stack. Its address changes, so the future's reference to the data is actually invalidated. ## Before Moving ┌─────────────┐ │0101001010010│ data: │001... │ ◄──────── &future.data │ │ │ │ └─────────────┘ ## After Moving ??? ◄──────── &future.data ┌─────────────┐ │0101001010010│ data: │001... │ │ │ │ │ └─────────────┘ We gave the data a place to live, but we didn't give it a stable place to live. It turns out, this is a well-known problem in Rust. What we're trying to create is called a self-referential struct, and it's not possible to do safely. Back when our entire future state was in the Handler struct, there was no self-referencing going on. Everything just worked off the Handler. But now that we're trying to split our futures up into subtasks, we need a way for them to access the data independently. So is it not possible? Well... We could allocate the data l using Rc and clone the pointer into each of the futures. That way the futures get a stable pointer to the data on the heap, and it's only deallocated after all the futures complete. The code is about to get pretty ugly. fn handle(connection: TcpStream) -> impl Future { let connection = Rc::new(connection); // 👈 let read_connection_ref = connection.clone(); let write_connection_ref = connection.clone(); let flush_connection_ref = connection.clone(); poll_fn(move |waker| { // ... }) .chain(move |_| { // ... poll_fn(move |_| { let connection = &*read_connection_ref; loop { match (&mut connection).read(&mut request) { // ... } } // ... }) }) .chain(move |_| { // ... poll_fn(move |_| { let connection = &*write_connection_ref; // ... }) }) .chain(move |_| { poll_fn(move |_| { let connection = &*flush_connection_ref; // ... }) }) } Oh no.. error[E0277]: `Rc` cannot be sent between threads safely --> src/main.rs:90:3790SCHEDULER.spawn(handle(connection));----- ^^^^^^^^^^^^^^^^^^ `Rc` cannot be sent between threads safely|required by a bound introduced by this call ... 100fn handle(mut connection: TcpStream) -> impl Future { |------------------------ within this `impl Future` Using Rc in our handler makes it !Send. Even though the connection is only used internally within the future and futures are only ever run by the main thread, we need to use an Arc to satisfy the compiler. fn handle(connection: TcpStream) -> impl Future { let connection = Arc::new(connection); // 👈 // ... } A little sad, but at least it compiles. Our server has no more manual state machines and is looking pretty clean. A lot cleaner than when we started with epoll manually, even with the messy Arc business. fn main() { SCHEDULER.spawn(listen()); SCHEDULER.run(); } fn listen() -> impl Future { poll_fn(|waker| { let listener = TcpListener::bind(\"localhost:3000\").unwrap(); // ... REACTOR.with(|reactor| { reactor.add(listener.as_raw_fd(), waker); }); Some(listener) }) .chain(|listener| { poll_fn(move |_| match listener.accept() { Ok((connection, _)) => { // ... SCHEDULER.spawn(handle(connection)); None } // ... }) }) } fn handle(connection: TcpStream) -> impl Future { let connection = Arc::new(connection); let read_connection_ref = connection.clone(); let write_connection_ref = connection.clone(); let flush_connection_ref = connection.clone(); poll_fn(move |waker| { REACTOR.with(|reactor| { reactor.add(connection.as_raw_fd(), waker); }); Some(()) }) .chain(move |_| { let mut request = [0u8; 1024]; let mut read = 0; poll_fn(move |_| { // ... }) }) .chain(move |_| { let response = /* ... */; let mut written = 0; poll_fn(move |_| { // ... }) }) .chain(move |_| { poll_fn(move |_| { // ... REACTOR.with(|reactor| { reactor.remove(flush_connection_ref.as_raw_fd()); }); Some(()) }) }) } And of course... $ curl localhost:3000 # => Hello world! It works! A Graceful Server Whew, that was a lot. One last thing before we finish. To put our task model to the test, we can finally implement the graceful shutdown mechanism we discussed earlier. Imagine we wanted to implement graceful shutdown for our server. When someone hits the keys ctrl+c, instead of killing the program abruptly, we should stop accepting new connections and wait for any active requests to complete. Any requests that take more than 30 seconds to handle are killed as the server exits. There are a couple things we have to do to set this up. Firstly, we have to actually detect the signal. On Linux, ctrl+c triggers the SIGINT signal, so we can use the signal_hook crate to wait until the signal is received. use signal_hook::consts::signal::SIGINT; use signal_hook::iterator::Signals; fn ctrl_c() { let mut signal = Signals::new(&[SIGINT]).unwrap(); let _ctrl_c = signal.forever().next().unwrap(); } There's a problem though. forever().next() blocks the thread until the signal is received. Now that our server is async, that means calling ctrl_c() on the main thread will block the entire program. Instead, we need to represent the ctrl+c signal as a future that resolves when it is received. Something like this. fn ctrl_c() -> impl Future { poll_fn(move |waker| { // ... }) } So how do we listen for the signal asynchronously? We could register a signal handler with epoll, but we could also use this as an opportunity to learn about handling blocking tasks in an async program. There will be times when the only way to get what you want is through a blocking API, but you can't simply call it on the main thread. Instead, you can run the blocking work on a separate thread, and notify the main thread when it completes. fn spawn_blocking(blocking_work: impl FnOnce()) -> impl Future { // run the blocking work on a separate thread std::thread::spawn(move || { blocking_work(); }); poll_fn(|waker| { // ??? })) } The question is, how do we know when the work is done? The blocking work is run on a separate thread, outside of the future. It needs access to the waker so it can notify the future when it completes. We only get access to the waker when the future is first polled, so the state needs to start out as None. We also need a flag that tells the future that the work has completed, in case the work completes before the future is even polled. These two pieces of state can be stored inside a Mutex. let state: Arc)>> = Arc::default(); Once the thread completes the work, it must set the flag to true and call wake if a waker has been stored. It's fine if a waker hasn't been stored yet, the future will see the flag when it's first polled and return immediately. fn spawn_blocking(blocking_work: impl FnOnce() + Send + 'static) -> impl Future { let state: Arc)>> = Arc::default(); let state_handle = state.clone(); // run the blocking work on a separate thread std::thread::spawn(move || { // run the work blocking_work(); // mark the task as done let (done, waker) = &mut *state_handle.lock().unwrap(); *done = true; // wake the waker if let Some(waker) = waker.take() { waker.wake(); } }); poll_fn(|waker| { // ... })) } Now the future needs to access the state and check if the work has completed yet. If not, it stores its waker and returns None, to be woken later when the work does complete. fn spawn_blocking(blocking_work: impl FnOnce() + Send + 'static) -> impl Future { let state: Arc)>> = Arc::default(); let state_handle = state.clone(); // run the blocking work on a separate thread std::thread::spawn(move || { // ... }); poll_fn(move |waker| match &mut *state.lock().unwrap() { // work is not completed, store our waker and come back later (false, state) => { *state = Some(waker); None } // the work is completed (true, _) => Some(()), }) } The future returned by spawn_blocking serves as an asynchronous version of JoinHandle. We can wait asynchronously on the main thread while the blocking work is run on a separate thread. fn ctrl_c() -> impl Future { spawn_blocking(|| { let mut signal = Signals::new(&[SIGINT]).unwrap(); let _ctrl_c = signal.forever().next().unwrap(); }) } spawn_blocking is an extremely convenient abstraction for dealing with blocking APIs in an async program. Alright, we now have a future that waits for the ctrl+c signal! If you remember from back when our server used blocking I/O, we wondered how to watch for the signal in a way that aborts the connection listener loop immediately after the signal arrives. We realized we needed some way to listen for both incoming connections, and the ctrl+c signal, at the same time. Because accept was blocking, it wasn't that simple. But with futures, it's actually possible! We can implement this as another future wrapper. Given two futures, we should be able to create a wrapper future that selects between either of the future's outputs, depending on which future completed first. fn select(left: L, right: R) -> Select { Select { left, right } } struct Select { left: L, right: R } enum Either { Left(L), Right(R) } impl Future for Select { type Output = Either; fn poll(&mut self, waker: Waker) -> Self::Output { // ... } } It turns out that the implementation of the select future is really simple. We just attempt to poll both futures and return when the first one resolves. impl Future for Select { type Output = Either; fn poll(&mut self, waker: Waker) -> Option { if let Some(output) = self.left.poll(waker.clone()) { return Some(Either::Left(output)); } if let Some(output) = self.right.poll(waker) { return Some(Either::Right(output)); } None } } Because we pass the same waker to both futures, any progress in either future will notify us, and we can check if either of them completed. It really is that simple. Now back to our main program. fn listen() -> impl Future { poll_fn(|waker| { let listener = TcpListener::bind(\"localhost:3000\").unwrap(); // ... }) .chain(|listener| { poll_fn(move |_| match listener.accept() { Ok((connection, _)) => { // ... SCHEDULER.spawn(handle(connection)); None } Err(e) if e.kind() == io::ErrorKind::WouldBlock => None, Err(e) => panic!(\"{e}\"), }) }) } We can combine the TCP listener task with the ctrl+c listener using our new select combinator. This way we can listen for both at the same time: fn listen() -> impl Future { poll_fn(|waker| { // ... }) .chain(|listener| { let listen = poll_fn(move |_| match listener.accept() { Ok((connection, _)) => { // ... SCHEDULER.spawn(handle(connection)); None } Err(e) if e.kind() == io::ErrorKind::WouldBlock => None, Err(e) => panic!(\"{e}\"), }); select(listen, ctrl_c()) }) } The TCP listener task never resolves — remember, it represents the loop from our synchronous server. ctrl_c() can resolve though, so we need to chain on another task to handle the shutdown signal. fn listen() -> impl Future { poll_fn(|waker| { // ... }) .chain(|listener| { let listen = /* ... */; select(listen, ctrl_c()) }) .chain(|_ctrl_c| graceful_shutdown()) } fn graceful_shutdown() -> impl Future { // ... } Now we need to implement the rest of our shutdown logic. Once the shutdown signal is received, we wait at most thirty seconds for any active requests to complete before shutting down. This sounds like another use case for select! Either thirty seconds elapse, or all active requests complete. fn graceful_shutdown() -> impl Future { let timer = /* ... */; let request_counter = /* ... */; select(timer, request_counter).chain(|_| { poll_fn(|waker| { // graceful shutdown process complete, now we actually exit println!(\"Graceful shutdown complete\"); std::process::exit(0) }) }) } All we need to do now is create the two futures for our shutdown conditions. First we need a timer. Of course, we can't simply call thread::sleep because it's a blocking function. But we could run it through spawn_blocking, and use the handle to represent our timer future. Note that there are ways to build async timers around epoll, but that's out of scope for this article. use std::thread; use std::time::Duration; fn graceful_shutdown() -> impl Future { let timer = spawn_blocking(|| thread::sleep(Duration::from_secs(30))); let request_counter = /* ... */; select(timer, request_counter).chain(|_| { poll_fn(|waker| { // graceful shutdown process complete, now we actually exit println!(\"Graceful shutdown complete\"); std::process::exit(0) }) }) } That was simple enough. Now for the main shutdown condition. For us to know when all active requests are completed, we'll need a counter for active requests. We can keep the counter local to our listen future, and increment/decrement it whenever tasks are spawned, or complete. fn listen() -> impl Future { let tasks = Arc::new(Mutex::new(0)); poll_fn(|waker| { // ... }) .chain(move |listener| { let listen = poll_fn(move |_| match listener.accept() { Ok((connection, _)) => { // increment the counter *tasks.lock().unwrap() += 1; // 👈 let handle_connection = handle(connection).chain(|_| { poll_fn(|_| { // decrement the counter *tasks.lock().unwrap() -= 1; // 👈 Some(()) }) }); SCHEDULER.spawn(handle_connection); None } Err(e) if e.kind() == io::ErrorKind::WouldBlock => None, Err(e) => panic!(\"{e}\"), }); select(listen, ctrl_c()) }) .chain(|_ctrl_c| graceful_shutdown()) } Notice how the decrement of the counter is chained onto the connection handler, so the decrement actually happens from within the spawned task, after it completes. A task counter is great, but we need a little more than that. We can't just check for tasks == 0 in a loop, we need the shutdown handler to be notified when the last task completes. And for that, the connection handler that completes needs access to the shutdown handler's waker. What we need is similar to the spawn_blocking solution we created earlier, except instead of a boolean flag, we need a counter. We can wrap up all this state into a small struct. #[derive(Default)] struct Counter { state: Mutex)>, } impl Counter { fn increment(&self) { let (count, _) = &mut *self.state.lock().unwrap(); *count += 1; } fn decrement(&self) { let (count, waker) = &mut *self.state.lock().unwrap(); *count -= 1; // we were the last task if *count == 0 { // wake the waiting task if let Some(waker) = waker.take() { waker.wake(); } } } fn wait_for_zero(self: Arc) -> impl Future { poll_fn(move |waker| { match &mut *self.state.lock().unwrap() { // work is completed (0, _) => Some(()), // work is not completed, store our waker and come back later (_, state) => { *state = Some(waker); None } } }) } } When wait_for_zero is first called it stores its waker in the counter state before returning. Now the task that calls decrement and sees that it was the last active task can simply call wake, notifying the caller of wait_for_zero. When the shutdown handler is woken, it will see that the counter is at zero and shut down the program. Now we can replace our manual counter with the Counter object. fn listen() -> impl Future { let tasks = Arc::new(Counter::default()); // 👈 let tasks_ref = Arc::new(Counter::default()); poll_fn(|waker| { // ... }) .chain(move |listener| { let listen = poll_fn(move |_| match listener.accept() { Ok((connection, _)) => { connection.set_nonblocking(true).unwrap(); // increment the counter tasks.increment(); // 👈 let tasks = tasks.clone(); let handle_connection = handle(connection).chain(|_| { poll_fn(move |_| { // decrement the counter tasks.decrement(); // 👈 Some(()) }) }); SCHEDULER.spawn(handle_connection); None } Err(e) if e.kind() == io::ErrorKind::WouldBlock => None::, Err(e) => panic!(\"{e}\"), }); select(listen, ctrl_c()) }) .chain(|_ctrl_c| graceful_shutdown(tasks_ref)) // 👈 } And our graceful shutdown handler can use wait_for_zero to wait until all the active tasks are complete. Once they are, or the timer elapses, the graceful shutdown is met and the program will exit. fn graceful_shutdown(tasks: Arc) -> impl Future { poll_fn(|waker| { let timer = spawn_blocking(|| thread::sleep(Duration::from_secs(30))); let request_counter = tasks.wait_for_zero(); // 👈 select(timer, request_counter) }).chain(|_| { // graceful shutdown process complete, now we actually exit println!(\"Graceful shutdown complete\"); std::process::exit(0) }) } And that's it! Now if you start the server and hit ctrl+c, it will exit immediately, without blocking for another connection. $ cargo run ^C # => Graceful shutdown complete $Looking Back Well, that was quite the journey. Our server is looking pretty good now. From threads, to an epoll event loop, to futures and closure combinators, we've come a long way. There is some manual work that we could abstract over even further, but overall our program is relatively clean. Compared to our original multithreaded program, our code is still clearly more complex. However, it's also a lot more powerful. Composing futures is trivial, and we were able to express complex control flow that would have been very difficult to do with threads. We can even still call out to blocking functions without interrupting our async runtime. There must be a price to pay for all this power, right? Back To Reality Now that we've thoroughly explored concurrency and async ourselves, let's see how it works in the real world. The standard library defines a trait like Future, which looks remarkably similar to the trait we designed. pub trait Future { type Output; fn poll(self: Pin, cx: &mut Context) -> Poll; } However, there are a few noticeable differences. The first is that instead of a Waker argument, poll takes a &mut Context. It turns out this isn't much of a difference at all, because Context is simply a wrapper around a Waker. impl Context { pub fn from_waker(waker: &'a Waker) -> Context { /* ... */ } pub fn waker(&self) -> &'a Waker { /* ... */ } } And Waker, along with a few other utility methods, has the familiar wake method. impl Waker { pub fn wake(self) { /* ... */ } } Constructing a Waker is a little more complicated, but it's essentially a manual trait object just like the Arc we used for our version. All of that happens through the RawWaker type, which you can check out yourself. The second difference is that instead of returning an Option, poll returns a new type called Poll.. which is really just a rebranding of Option. pub enum Poll { Ready(T), Pending, } The final difference is a little more complicated. Pinning Instead of poll taking a mutable reference to self, it takes a pinned mutable reference to self — Pin. What is Pin, you ask? #[derive(Copy, Clone)] pub struct Pin { pointer: P, } Huh. That doesn't seem very useful. It turns out, what makes Pin special is how you create one: impl Pin { pub fn new(pointer: P) -> Pin where P::Target: Unpin { /* ... */ } pub unsafe fn new_unchecked(pointer: P) -> Pin { /* ... */ } } impl Deref for Pin { type Target = P::Target; } impl DerefMut for Pin where P::Target: Unpin { type Target = P::Target; } So you can only create a Pin safely if T is Unpin... what's Unpin? pub auto trait Unpin {} /// A marker type which does not implement `Unpin`. pub struct PhantomPinned; impl !Unpin for PhantomPinned {} Unpin seems to be automatically implemented for all types except PhantomPinned. So creating a Pin is safe, except for types that contain PhantomPinned? And Pin just dereferences to T normally? All of this seems a little useless. There is a point to it all though, and it goes back to a problem we ran into earlier. Remember when we tried creating a self-referential struct to hold our task state but it wouldn't work, so we ended up having to allocate our task state with an Arc? It was a bit unfortunate, and it turns out that you actually can create self-referential structs with a little bit of unsafe code, and avoid that Arc allocation. The problem is that you can't just go handing out a self-referential struct in general, because as we realized, moving a self-referential struct breaks its internal references and is unsound. struct SelfReferential { counter: u8, // (X) state: FutureState } enum FutureState { First { counter_ptr: *mut u8 } // self-referentially points to `counter` (X) // ... } let mut future1 = SelfReferential::new(); future1.poll(/* ... */); let mut moved = future1; // move it // unsound! `counter_ptr` still point to the old stack location of `counter` moved.poll(/* ... */); This is where Pin comes in. You can only create a Pin if you guarantee that the T will stay in a stable location until it is dropped, meaning that any self-references will remain valid. For most types, Pin doesn't mean anything, which is why Unpin exists. Unpin essentially tells Pin that a type is not self-referential, so pinning it is completely safe and always valid. Pin will even hand out mutable references to Unpin types and let you use mem::swap or mem::replace to move them around. Because you can't safely create a self-referential struct, Unpin is the default and implemented by types automatically. If you did want to create a self-referential future though, you can use the PhantomPinned marker struct to make it !Unpin. Pinning a !Unpin type requires unsafe, so because poll requires Pin, it cannot be called safely on a self-referential future. let mut future = SelfReferential::new(); // SAFETY: we never move `future` let pinned = unsafe { Pin::new_unchecked(&mut future) }; pinned.poll(/* ... /*); Notice that you can move around the future all you want before pinning it because the self-references are only created after you first call poll. Once you do pin it though, you must uphold the Pin safety contract. There are a couple safe ways of creating a pin though, even for !Unpin types. The first way is with Box::pin. let mut future1: Pin> = Box::pin(SelfReferential::new()); future1.as_mut().poll(/* ... */); let mut moved = future1; moved.as_mut().poll(/* ... */); At first glance this may seem unsound, but remember, Box is an allocation. Once the future is allocated it has a stable location on the heap, so you can move around the Box pointer all you want, the internal references will remain stable. The second way you can safely create a pin is with the pin! macro. use std::pin::pin; let mut future1: Pin = pin!(SelfReferential::new()); future1.as_mut().poll(/* ... */); With pin!, you can safely pin a struct without even allocating it! The trick is that pin! takes ownership of the future, making it impossible to access except through the Pin, which remember, will never give you a mutable reference if T isn't Unpin. The T is completely hidden and thus safe from being tampered with. Pin is a common point of confusion around futures, but once you understand why it exists, the solution is pretty ingenious. async/await Alright, that's the standard Future trait. pub trait Future { type Output; fn poll(self: Pin, cx: &mut Context) -> Poll; } So how do we use it? The futures crate is where all the useful helpers live. Functions like poll_fn that we wrote before, and combinators like map and and_then, which we called chain. use futures::{FutureExt, future::{ready, poll_fn}}; let future = poll_fn(|_| Poll::Ready(1)) .and_then(|x| poll_fn(|_| Poll::Ready(x + 1))) .and_then(|x| poll_fn(|_| println!(\"{x}\"))); But even with these helpers, as we found out, it's a little cumbersome to write async code. It's still a shift from the simple synchronous code we're used to. Maybe not as drastic as a manual epoll event loop, but still a big change. It turns out there's actually another way to write futures in Rust, with the async/await syntax. Instead of using poll_fn to create futures, you can attach the async keyword to functions: async fn foo() -> usize { 1 } An async function is really just a function that returns an async block: fn foo() -> impl Future { async { 1 } } Which is really just a function that returns a poll_fn future: fn foo() -> impl Future { poll_fn(|| Poll::Ready(1)) } The magic comes with the await keyword. await waits for the completion of another future, propagating Poll::Pending until the future is resolved. async fn foo() { let one = one().await; let two = two().await; assert_eq!(one + 1, two); } async fn two() -> usize { one().await + 1 } async fn one() -> usize { 1 } Under the hood, the compiler transforms this into manual state machines, similar to the ones we created with those combinators: fn foo() -> impl Future { one() .and_then(|one| two().and_then(move |two| poll_fn(move |_| Poll::Ready((one, two))))) .and_then(|(one, two)| poll_fn(move |_| Poll::Ready(assert_eq!(one, two + 1)))) } fn two() -> impl Future { one().and_then(|one| poll_fn(move |_| Poll::Ready(one + 1))) } fn one() -> impl Future { poll_fn(|_| Poll::Ready(1)) } Which, as we know all too well, translates into a huge manual state machine that looks something like this: enum FooFuture { One(OneFuture), Two(usize, TwoFuture), } impl Future for FooFuture { type Output = (); fn poll(&mut self, cx: &mut Context) -> Poll { if let FooFuture::One(f) = self { match f.poll(cx) { Poll::Ready(one) => *self = Self::Two(one, TwoFuture(OneFuture)), Poll::Pending => return Poll::Pending, } } if let FooFuture::Two(one, f) = self { match f.poll(cx) { Poll::Ready(two) => { assert_eq!(*one + 1, two); return Poll::Ready(()); } Poll::Pending => return Poll::Pending, } } None } } struct TwoFuture(OneFuture); impl Future for TwoFuture { type Output = usize; fn poll(&mut self, cx: &mut Context) -> Poll { match self.0.poll(waker) { Poll::Ready(one) => Poll::Ready(one + 1), Poll::Pending => Poll::Pending, } } } struct OneFuture; impl Future for OneFuture { type Output = usize; fn poll(&mut self, cx: &mut Context) -> Poll { Poll::Ready(1) } } ... but async/await removes all of that headache. Of course, we aren't actually doing any I/O here so the futures are mostly useless, but you can imagine how helpful this would be for our web server. In fact, it's even better than the combinators. With async functions, you can hold onto local state across await points! async fn foo() { let x = vec![1, 2, 3]; bar(&x).await; baz(&x).await; println!(\"{x:?}\"); } After going through implementing futures ourselves, we can really appreciate the convenience of this. Under the hood the compiler has to generate a self-referential future to give bar and baz access to the state. struct FooFuture { x: Vec, // (X) state: FooFutureState, } enum FooFutureState { Bar(BarFuture), Baz(BazFuture), } struct BarFuture { x: *mut Vec /* pointer to (X)! */ } struct BazFuture { x: *mut Vec /* pointer to (X)! */ } The compiler takes care of all the unsafe code involved in this, allowing us to work with local state just like we would in a regular function. For this reason, the futures generated by async blocks or functions are !Unpin. async/await removes any complexity that remained with writing futures compared to synchronous code. After implementing futures manually, it almost feels like magic! A Tokio Server So far we've only been looking at how Future works, we haven't discussed how to actually run one, or do any I/O. The thing is, the standard library doesn't provide any of that, it only provides the bare essential types and traits to get started. If you want to actually write an async application, you have to use an external runtime. The most popular general purpose runtime is tokio. tokio provides a task scheduler, a reactor, and a pool to run blocking tasks, just like we wrote earlier, but it also provides timers, async channels, and various other useful types and utilities for async code. On top of that, tokio is multi-threaded, distributing async tasks to take advantage of all your CPU cores. The core ideas behind tokio are very similar to the async runtime we wrote ourselves, but you can read more about it's design in this excellent blog post. It's time to write our final web server, this time using the standard Future trait and tokio. Tokio applications begin with the #[tokio::main] macro. Under the hood, this macro spins up the runtime and runs the async code in main. #[tokio::main] async fn main() { // ... } Tokio does it's best to mirror the standard library for most of it's types. For example, tokio::net::TcpListener works exactly like std::net::TcpListener, except with async methods. Any interactions with epoll and the reactor are hidden under the hood. use tokio::net::{TcpLis",
    "commentLink": "https://news.ycombinator.com/item?id=37176960",
    "commentBody": "Learning async Rust with entirely too many web serversHacker NewspastloginLearning async Rust with entirely too many web servers (ibraheem.ca) 211 points by lukastyrychtr 18 hours ago| hidepastfavorite34 comments quectophoton 4 minutes agoThat chain of errors when dealing with async code and closures matches my experience when I tried to use the simplest web framework I could find (Tide, IIRC). That experience is what made me give up on Rust whenever I see async is involved.I like this post because it explains the debugging process, and makes me want to give another try to async Rust. reply ComputerGuru 9 hours agoprevIf anyone is interested in a real-world but still meant for educational purposes example (a la minix), I wrote a generic tcp proxy in rust&#x2F;tokio some years ago, specifically for use as a teaching example to demonstrate how to correctly handle what would, at first blush, seem to be an incredibly straightforward task: https:&#x2F;&#x2F;github.com&#x2F;mqudsi&#x2F;tcpproxyI&#x27;ve updated it over the years (moving from chaining futures to using async, using the latest tokio, etc) to keep it relevant.In particular, correctly splitting a duplex connection into send&#x2F;receive streams and then aborting one side of the connection when the other closes without missing events is trickier than it should be. reply Groxx 9 hours agoparentI am relieved that the source is just shy of 200 lines, because my initial thought was \"there&#x27;s some bookkeeping, sure, but that doesn&#x27;t sound too bad\".(I&#x27;m actually surprised it&#x27;s that small, and it&#x27;s clearly written for clarity not size. nicely done!)For anyone not used to more than simple concurrency stuff though, yeah, loads of subtle footguns. And they&#x27;re often the sort of thing you might not notice in normal manual tests. Thanks for the link and maintaining it! reply ComputerGuru 8 hours agorootparentThanks. Perhaps I did go overboard with that disclaimer.. probably because I myself made the mistake of initially using [0] the oh-so-convenient tokio::io::copy() instead of writing my own copy method that would drop the other half of the connection when one side was closed.The copy_with_abort() routine is still taking the easy way out in this not-optimized-for-heavy-production-use sample because it uses a broadcast channel per connection to reactively signal that the other half of the connection should be closed (rather than timing out every x ms to see if an abort flag has been set). In the real world, I&#x27;d probably replace the join! macro with a manual event loop to be able to do the same but without creating a broadcast channel per-connection.(I maintain an extremely lightweight \"awaitable bools\" library for rust [1] that is perfect for this kind of thing (roughly equivalent to a \"bounded broadcast_channel of queue length 1, but each \"channel\" is only a single (optionally stack-allocated) byte) — but it&#x27;s for event loops in synchronous code and not async executor compatible.)[0]: https:&#x2F;&#x2F;github.com&#x2F;mqudsi&#x2F;tcpproxy&#x2F;commit&#x2F;0164ef836a49f2f738...[1]: https:&#x2F;&#x2F;github.com&#x2F;neosmart&#x2F;rsevents reply Matthias247 4 hours agoprevThe article looks great! I like that it explains both classic IO for a webserver (which helps since a lot of developers don&#x27;t even know that read() and write() might return without all data being processed) and then proceeds from non-blocking IO to async&#x2F;await.However there seems one thing worthwhile to point out:> All to implement graceful shutdown.It isn&#x27;t true that async IO is required for that. Blocking IO calls can also be interrupted via signals. For the use-case of Ctrl+C that is mentioned in the blog post even the simple setup which unblock the syscall and let it return EINTR are successful. But even custom in-application cancellation from different threads works via signals. E.g. building a Thread::interrupt() that unblocks IO on a different thread is possible.Most classical applications (e.g. proxy-servers) that went for the nonblocking route did it indeed for bigger scalability and lower memory footprint than using a thread per connection model. In the last couple of years and especically in Rust I however feel that most applications choose async either because the library ecosystem forces them or because there&#x27;s just an assumption of missing out on something if not using it. There&#x27;s rarely measurements performed with both setups that actually quanitfy any win or loss of using async IO. reply ibraheemdev 4 hours agoparentYeah you&#x27;re right regarding signal handlers (though I&#x27;m not sure the windows equivalent), and I was planning on adding a note about the alternative. The main thing I wanted to point out was that async&#x2F;await as a model is built such that expressing complex control flow with arbitrary inputs becomes very simple. Nowadays thread-per-request will work well performance wise for most, but async&#x2F;await became the default in various ecosystems because it&#x27;s a more expressive model, especially useful in server-level code, which more or less forces it to be used by everyone. The advantage becomes apparent when you need to compose more complex logic within a system, which async makes seamless (though in Rust specifically things are harder because of the interaction between async and the borrow checker). reply kjuulh 11 hours agoprevLoved the article =DThese runtimes seems heavily scewed towards being used by IO bound application.While rayon can help with CPU bound tasks. I wonder if these mix at all, it may not be desired at all. But I think fairly interesting nonetheless.I know that tokio doesn&#x27;t like being blocked by anything. You will get a hard error, if you do a blocking operation when not being spawn_blocking via. tokio. Rayon, probably doesn&#x27;t trigger this warning, as it is technically not doing any WouldBlock operations.you would probably do a spawn_blocking for rayon as you would for IO bound operations.Anyways, mixing CPU and IO bound operations on the same CPU&#x2F;machine is probably the same as mixing oil and water, and would probably be a pain in the neck to maintain and get good utilization.It is actually smack bang in the middle of the tokio docs.rs page: https:&#x2F;&#x2F;docs.rs&#x2F;tokio&#x2F;latest&#x2F;tokio&#x2F;index.html#cpu-bound-task...It is also a bit interesting how these paradigms compare with Golang green threads, which also seems to yield without a lot of syntactic sugar. The same for elixir. These languages also seem to solve the IO bound problem quite well using this paradigm (you obviously doesn&#x27;t get as much control as you do for rust), but powerful nonetheless. reply skippyboxedhero 10 hours agoparentThe section just above the part you have linked also explains that tokio lets you pick the runtime scheduler - https:&#x2F;&#x2F;docs.rs&#x2F;tokio&#x2F;latest&#x2F;tokio&#x2F;runtime&#x2F;index.html#runtim... - so you can run on single or multiple threads (the default is the latter with core and blocking threads as mentioned in the section you linked).I think you can mix them (or you can, as mentioned in the link, have a separate runtime for CPU-bound tasks) but it is probably easier to use Rayon. reply BooneJS 7 hours agoprevNot a Rust dev, but I thought this tutorial was great the way it stepped from the obvious, through the nitty-gritty performance enhancements, before ending up using an elegant feature that you probably wouldn&#x27;t appreciate very much without knowing what it&#x27;s doing for you under the hood. reply threeseed 5 hours agoprevI think you missed one which is based on io_uring [1].In my benchmarks with a slightly tweaked version it was 2x faster than Nginx and and 30x faster than Python&#x27;s SimpleHttpServer.[1] https:&#x2F;&#x2F;github.com&#x2F;DataDog&#x2F;glommio&#x2F;blob&#x2F;master&#x2F;examples&#x2F;hype... reply satvikpendem 8 hours agoprevIf you want to build more of a production web backend, I also recommend the book Zero To Production In Rust by Luca Palmieri [0], it&#x27;s awesome.[0] https:&#x2F;&#x2F;www.zero2prod.com reply SnowProblem 9 hours agoprevI enjoyed the async part where the author built up Future and a runtime from first principles. If the topic interests you, these two videos are good follow-ups into Rust async [1] [2]. Rust&#x27;s model is a little different and more powerful than other languages.[1] https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ThjvMReOXYM[2] https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=9_3krAQtD2k reply acheong08 2 hours agoprevI know nothing about Rust but this was a good read reply awwaiid 8 hours agoprevWhat a great walk-through, good for both Rust and unixyness! reply amelius 10 hours agoprevThe problem with async programming, or cooperative multitasking (as it was popularized in the Windows 3.1 era) is that the CPU is a resource too. Threads are a better way of slicing up CPU time. reply SnowProblem 9 hours agoparentAsync is a bit trendy right now and in my experience has a way of infecting a codebase. That said, I like the way it reads for server code. In a project I&#x27;m working on, we use both: explicit threads and channels the CPU-bound work and an async REST server on a single thread for handing requests and reading the database. It works nicely. But we do have a clear separation boundary between the two. Also, here&#x27;s a related post that surprised me. Poster says spawning a thread per connection works fine for their server at 50K+ connections. Context switching and spawns not a problem? Maybe not always. https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;17593699&#x2F;tcp-ip-solving-... reply toast0 9 hours agorootparent50K is not really very many connections. How about 1M? reply SnowProblem 8 hours agorootparentTrue, and C10M is the new C10K. I was just surprised it works well using that many OS threads rather than needing green threads or async. reply xedrac 10 hours agoparentprevIt is clearly not an ideal abstraction for anything CPU bound. But for anything IO bound, it is a much more natural way to tame the complexities of concurrency. reply amelius 10 hours agorootparentThe problem is that systems evolve. What&#x27;s IO bound today may be CPU bound tomorrow. And then you&#x27;ll have to rethink and depending on what language you use you may even have the \"what color is my function\" problem. reply Dowwie 10 hours agorootparentWhat do you mean by this claim that what is io bound today may be cpu bound tomorrow? reply toast0 9 hours agorootparentThere&#x27;s two ways to understand that. What I think is the likely intention is the requirements may change, such that pieces that currently don&#x27;t do much computation start to do a lot. Easiest one to think about is adding encryption. Your http server may have been bottlenecked on disk or network i&#x2F;o, but your https server may be bottlenecked on cpu; not a great example because the cpu work in TLS is in bits and pieces and will probably share nicely.The other way is that sometimes a little more load perturbs the system so things take a lot longer. I&#x27;ve had systems that work fine until you hit X% cpu, then it jumps to 90%+, because of say lock contention; sometimes N is 80% so whatevs, but sometimes it&#x27;s 25%, and then you need to find and fix the bottleneck. reply seized 5 hours agorootparentprevThe transition from spinning disks to SATA&#x2F;SAS flash to NVMe. reply bfrog 7 hours agoparentprevI mean this too can be dealt with in Rust with a pool of threads dealing with the computational tasks that respond with futures.E.g. pool of 10 threads does computational heavy task requests and responds when done to the async i&#x2F;o bound task. reply jjnoakes 9 hours agoprevI will look it up later, but maybe someone here knows off the top of their head. Does the rust tcp listener accept not fail with an EINTR equivalent upon receipt of SIGINT? reply chubs 12 hours agoprevThis is a fantastic way of explaining the concepts! I love it, thanks for posting. reply FridgeSeal 11 hours agoprev [–] The section under “a non blocking server” is probably the best description of the biggest issue with the “why not spin out blocking calls on threads” model. reply diarrhea 10 hours agoparent [–] I wonder how much that is obsoleted by io_uring by now?The article mentions how non-blocking IO is the way to gain back control otherwise conceded to the kernel in the case of blocking IO. However, non-blocking IO has to be laboriously implemented in user code. Is that true still? What if we used the threading model but relied on io_uring? reply ComputerGuru 9 hours agorootparentYou still need async (or an event loop model) because otherwise your threads will block waiting for the io_uring result when they could be put to better use (namely submitting new io_uring jobs or conveying the results of completed ones).Note that the io_uring approach isn&#x27;t too different (just more universalized) than how Windows has always implemented async operations (with overlapped and io completion ports). Code written for that environment originally just used the event loop model but it&#x27;s easier&#x2F;better ergonomics to wrap it in async and use that instead (e.g. how C#&#x27;s async&#x2F;await works) because you can avoid callback hell, state passing, etc. and just write code \"linearly\" with cooperative yield points invisibly stashing and retrieving the \"stack\" for you. reply memefrog 9 hours agorootparentWhat? The total opposite is true! &#x27;async&#x2F;await&#x27; is callback hell. It&#x27;s the barest syntactic sugar over it, but it&#x27;s definitely callback hell. You write code sequentially if you use threads (whether they&#x27;re userspace M:N or N:1 threads, or 1:1 kernel threads). reply ComputerGuru 8 hours agorootparentSorry, not callback hell (that&#x27;s what JS had before async&#x2F;await) but certainly not code that linearly handles a connection from start to end, either. (Threaded code is certainly \"linear\" but I meant from the perspective of walking through the lifetime of a connection, one connection at a time linearly.) reply memefrog 9 hours agorootparentprev [–] You can use a \"threading model\" with readiness-based or completion-based non-blocking IO. There are (userspace-)threaded runtimes based on epoll&#x2F;etc. and also those based on io_uring&#x2F;IOCP&#x2F;etc. reply FridgeSeal 4 hours agorootparent [–] As a commenter in the other sub-thread pointed out, you still need async capabilities to make the most of io_uring API’s (I’m a huge fan on”f io_uring).Whilst you can do this, I still think the best approach is “actual-async”. The idea of “spin up this worker and shunt the data across to it just so it can block” strikes me as somewhat wasteful. If you know you’re going to have to wait, you’re better off not expending resources doing so, and instead use the time to do useful work instead. reply memefrog 2 hours agorootparent [–] \"Spin up this worker\" is trivial: one memory allocation, probably from a free list, to allocate a thread stack, setting a couple of pointers, and a function call. Doing any kind of I&#x2F;O is much heavier-weight. Thread stacks don&#x27;t have to even be very large. It doesn&#x27;t expend any additional resources to have a userspace thread blocked on a socket. You can just have a pointer to the thread as the userdata of the SQE.It doesn&#x27;t make any sense to say &#x27;use the time to do useful work instead&#x27;. That&#x27;s what you do when you block: in a threaded model, when you block you do &#x27;io_uring_get_sqe&#x27;, &#x27;io_uring_prep_read&#x27; (or whatever), &#x27;io_uring_set_userdata&#x27; &#x27;io_uring_submit&#x27; and then you switch contexts (withor some equivalent) to another thread that is ready. When you have no ready threads you just call &#x27;io_uring_wait_cqe&#x27;, and for each completion you do &#x27;io_uring_get_userdata&#x27;, get a pointer to the thread, record the result of the operation and append the thread to a runqueue to be resumed.From the perspective of the thread, you write int e = read(fd, buf, sizeof buf); if (e < 0) err(1, \"read: %s\", strerror(-e));and it all feels completely sequential. Underneath it is stackful coroutines. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The article focuses on learning asynchronous programming in Rust by building multiple web servers.",
      "It covers various topics including concurrent programming with threads, non-blocking I/O, efficient event handling with epoll, implementing a reactor and scheduler, creating futures and using closures, handling TCP connections, and graceful shutdown.",
      "The article provides code snippets and detailed explanations to demonstrate the concepts and techniques involved in building efficient and responsive servers using asynchronous programming in Rust."
    ],
    "commentSummary": [
      "The article focuses on the difficulties of learning async Rust and managing multiple web servers.",
      "It provides examples and resources for debugging and learning async Rust.",
      "Commenters share their experiences and suggest additional resources for building web backends in Rust, discussing the benefits and challenges of async programming."
    ],
    "points": 211,
    "commentCount": 33,
    "retryCount": 0,
    "time": 1692372538
  },
  {
    "id": 37179094,
    "title": "Police are getting DNA data from people who think they opted out",
    "originLink": "https://theintercept.com/2023/08/18/gedmatch-dna-police-forensic-genetic-genealogy/",
    "originBody": "Search for: POLITICS JUSTICE NATIONAL SECURITY WORLD TECHNOLOGY ENVIRONMENT SPECIAL INVESTIGATIONS VOICES PODCASTS VIDEOS DOCUMENTS BECOME A MEMBER ABOUT POLICIES AND REPORTS BECOME A SOURCE JOIN NEWSLETTER © THE INTERCEPT ALL RIGHTS RESERVED TERMS OF USE PRIVACY BECOME A MEMBER The DNA kit genetic genealogist CeCe Moore used to help a woman find her biological mother on June 8, 2015. Photo: MediaNews Group via Getty Images POLICE ARE GETTING DNA DATA FROM PEOPLE WHO THINK THEY OPTED OUT Forensic genetic genealogists skirted GEDmatch privacy rules by searching users who explicitly opted out of sharing DNA with law enforcement. Jordan Smith August 18 2023, 11:10 a.m. CECE MOORE, AN actress and director-turned-genetic genealogist, stood behind a lectern at New Jersey’s Ramapo College in late July. Propelled onto the national stage by the popular PBS show “Finding Your Roots,” Moore was delivering the keynote address for the inaugural conference of forensic genetic genealogists at Ramapo, one of only two institutions of higher education in the U.S. that offer instruction in the field. It was a new era, Moore told the audience, a turning point for solving crime, and they were in on the ground floor. “We’ve created this tool that can accomplish so much,” she said. Genealogists like Moore hunt for relatives and build family trees just as traditional genealogists do, but with a twist: They work with law enforcement agencies and use commercial DNA databases to search for people who can help them identify unknown human remains or perpetrators who left DNA at a crime scene. The field exploded in 2018 after the arrest of Joseph James DeAngelo as the notorious Golden State Killer, responsible for more than a dozen murders across California. DNA evidence collected from a 1980 double murder was analyzed and uploaded to a commercial database; a hit to a distant relative helped a genetic genealogist build an elaborate family tree that ultimately coalesced on DeAngelo. Since then, hundreds of cold cases have been solved using the technique. Moore, among the field’s biggest evangelists, boasts of having personally helped close more than 200 cases. The practice is not without controversy. It involves combing through the genetic information of hundreds of thousands of innocent people in search of a perpetrator. And its practitioners operate without meaningful guardrails, save for “interim” guidance published by the Department of Justice in 2019. The last five years have been like the “Wild West,” Moore acknowledged, but she was proud to be among the founding members of the Investigative Genetic Genealogy Accreditation Board, which is developing professional standards for practitioners. “With this incredibly powerful tool comes immense responsibility,” she solemnly told the audience. The practice relies on public trust to convince people not only to upload their private genetic information to commercial databases, but also to allow police to rifle through that information. If you’re doing something you wouldn’t want blasted on the front page of the New York Times, Moore said, you should probably rethink what you’re doing. “If we lose public trust, we will lose this tool.” Despite those words of caution, Moore is one of several high-profile genetic genealogists who exploited a loophole in a commercial database called GEDmatch, allowing them to search the DNA of individuals who explicitly opted out of sharing their genetic information with police. The loophole, which a source demonstrated for The Intercept, allows genealogists working with police to manipulate search fields within a DNA comparison tool to trick the system into showing opted-out profiles. In records of communications reviewed by The Intercept, Moore and two other forensic genetic genealogists discussed the loophole and how to trigger it. In a separate communication, one of the genealogists described hiding the fact that her organization had made an identification using an opted-out profile. The communications are a disturbing example of how genetic genealogists and their law enforcement partners, in their zeal to close criminal cases, skirt privacy rules put in place by DNA database companies to protect their customers. How common these practices are remains unknown, in part because police and prosecutors have fought to keep details of genetic investigations from being turned over to criminal defendants. As commercial DNA databases grow, and the use of forensic genetic genealogy as a crime-fighting tool expands, experts say the genetic privacy of millions of Americans is in jeopardy. Moore did not respond to The Intercept’s requests for comment. “If we can’t trust these practitioners, we certainly cannot trust law enforcement.” To Tiffany Roy, a DNA expert and lawyer, the fact that genetic genealogists have accessed private profiles — while simultaneously preaching about ethics — is troubling. “If we can’t trust these practitioners, we certainly cannot trust law enforcement,” she said. “These investigations have serious consequences; they involve people who have never been suspected of a crime.” At the very least, law enforcement actors should have a warrant to conduct a genetic genealogy search, she said. “Anything less is a serious violation of privacy.” CeCe Moore appears as a guest on “Megyn Kelly Today” on Aug. 14, 2018. Photo: Zach Pagano/NBCU Photo Bank/NBCUniversal via Getty Images The Wild West Forensic genetic genealogy evolved from the direct-to-consumer DNA testing craze that took hold roughly a decade ago. Companies like 23andMe and Ancestry offered DNA analysis and a database where results could be uploaded and searched against millions of other profiles, offering consumers a powerful new tool to dig into their heritage through genetics. It wasn’t long before entrepreneurial genealogists realized this information could also be used to solve criminal cases, especially those that had gone cold. While the arrest of the Golden State Killer captured national attention, it was not the first case solved by forensic genetic genealogy. Two weeks earlier, genetic genealogists Margaret Press and Colleen Fitzpatrick joined officials in Ohio to announce that “groundbreaking work” had allowed authorities to identify a young woman whose body was found by the side of a road back in 1981. Formerly known as “Buckskin Girl” for the handmade pullover she wore, Marcia King was given her name back through genetic genealogy. “Everyone said it couldn’t be done,” Press said. MOST READ Police Are Getting DNA Data From People Who Think They Opted Out Jordan Smith Pakistan Confirms Secret Diplomatic Cable Showing U.S. Pressure to Remove Imran Khan Ryan Grim, Murtaza Hussain Secret Pakistan Cable Documents U.S. Pressure to Remove Imran Khan Ryan Grim, Murtaza Hussain The type of consumer DNA information used in forensic genetic genealogy is far different from that uploaded to the Combined DNA Index System, or CODIS, a decades-old network administered by the FBI. The DNA entered in CODIS comes from individuals convicted of or arrested for serious crimes and is often referred to as “junk” DNA: short pieces of unique genetic code that don’t carry any individual health or trait information. “It’s not telling us how the person looks. It’s not telling us about their heritage or their phenotypic traits,” Roy said. “It’s a string of numbers, like a telephone number.” In contrast, the DNA testing offered by direct-to-consumer companies is “as sensitive as it gets,” Roy said. “It tells you about your origins. It tells you about your relatives and your parentage, and it tells you about your disease propensity.” And it has serious reach: While CODIS searches the DNA of people already identified by the criminal justice system, the commercial databases have the potential to search through the DNA of everyone else. Individuals can upload their test results to any number of databases; at present, there are five main commercial portals. Ancestry and 23andMe are the biggest players in the field, with databases containing roughly 23 million and 14 million profiles. Individuals must test with the companies to gain access to their databases; neither allow DNA results obtained from a different testing service. Both Ancestry and 23andMe forbid police, and the genetic genealogists who work with them, from accessing their data for crime-fighting purposes. “We do not allow law enforcement to use Ancestry’s service to investigate crimes or to identify human remains” absent a valid court order, Ancestry’s privacy policy notes. The two companies provide regular transparency reports documenting law enforcement requests for user information. MyHeritage, home to some 7 million DNA profiles, similarly bars law enforcement searches, but it does allow individuals to upload DNA results obtained from other sources. And then there are FamilyTreeDNA and GEDmatch, which grant police access but give users the choice of opting in or out. Both allow anyone to upload their DNA results and have upward of 1.8 million profiles. But neither company routinely publicizes the number of customers who have opted in, said Leah Larkin, a veteran genetic genealogist and privacy advocate from California. Larkin writes about issues in the field — including forensic genetic genealogy, which she does not practice — on her website the DNA Geek. Larkin estimates that roughly 700,000 GEDmatch profiles are opted in. She suspects that even more are opted in on FamilyTreeDNA; opting in is the default for the company’s U.S. customers and “it’s not obvious how to opt out.” But even opting out of law enforcement searches doesn’t guarantee that a profile won’t be accessed: A loophole in GEDmatch offers users working with law enforcement agencies a back door to accessing protected profiles. A source showed The Intercept how to exploit the loophole; it was not an obvious weakness or one that could be triggered mistakenly. Rather, it was a back door that required experience with the platform’s various tools to open. GEDmatch’s parent company, Verogen, did not respond to a request for comment. Law enforcement officials leave the home of accused serial killer Joseph James DeAngelo in Citrus Heights, Calif., on April 24, 2018. Photo: Justin Sullivan/Getty Images An Open Secret In forensic genetic genealogy circles, the GEDmatch loophole had long been an open secret, sources told The Intercept, one that finally surfaced publicly during the Ramapo College conference in late July. Roy, the DNA expert, was giving a presentation titled “In the Hot Seat,” a primer for genealogists on what to expect if called to testify in a criminal case. There was a clear and simple theme: “Do not lie,” Roy said. “The minute you’re caught in a lie is the minute that it’s going to be difficult for people to use your work.” As part of the session, David Gurney, a professor of law and society at Ramapo and director of the college’s nascent Investigative Genetic Genealogy Center, joined Roy for a mock questioning of Cairenn Binder, a genealogist who heads up the center’s certificate program. Gurney, simulating direct examination, walked Binder through a series of friendly questions. Did she have access to DNA evidence or genetic code during her investigations? No, she replied. Could she see everyone who’d uploaded DNA to the databases? No, she said, only those who’d opted in to law enforcement searches. Roy, playing the part of opposing counsel, was pointed in her cross-examination: Was Binder aware of the GEDmatch loophole? And had she used it? Yes, Binder said. “How many times?” Roy asked. “A handful,” Binder replied. “Maybe up to a dozen.” Binder’s answers quickly made their way into a private Facebook group for genetic genealogy enthusiasts, prompting a response from the DNA Doe Project, a volunteer-driven organization led by Press, one of the women who identified the Buckskin Girl. Before joining Ramapo College, Binder had worked for the DNA Doe Project. In a statement posted to the Facebook group, Pam Lauritzen, the project’s communications director, said the loophole was an artifact of changes GEDmatch implemented in 2019, when it made opting out the default for all profiles. “While we knew that the intent of the change was to make opted-out users unavailable, some volunteers with the DNA Doe Project continued to use the reports that allowed access to profiles that were opted out,” she wrote. That use was neither “encouraged nor discouraged,” she continued. Still, she claimed the access was somehow “in compliance” with GEDmatch’s terms of service — which at the time promised that DNA uploaded for law enforcement purposes would only be matched with customers who’d opted in — and that the loophole was closed “years ago.” It was a curious statement, particularly given that Press, the group’s co-founder, was among the genealogists who discussed the GEDmatch loophole in communications reviewed by The Intercept. In 2020, she described the DNA Doe Project using an opted-out profile to make an identification — and devising a way to keep that quiet. Press referred The Intercept’s questions to the DNA Doe Project, which declined to comment. In July 2020, GEDmatch was hacked, which resulted in all 1.45 million profiles then contained in the database to be briefly opted in to law enforcement matching; at the time, BuzzFeed News reported, just 280,000 profiles had opted in. GEDmatch was taken offline “until such time that we can be absolutely sure that user data is protected against potential attacks,” Verogen wrote on Facebook. In the wake of the hack, a genetic genealogist named Joan Hanlon was asked by Verogen to beta test a new version of the site. According to records of a conversation reviewed by The Intercept, Press and Moore, the featured speaker at the Ramapo conference, discussed with Hanlon their tricks to access opted-out profiles and whether the new website had plugged all backdoor access. It hadn’t. It’s unclear if anyone told Verogen; as of this month, the back door was still open. Hanlon did not respond to The Intercept’s requests for comment. In January 2021, GEDmatch changed its terms of service to opt everyone in for searches involving unidentified human remains, making the back door irrelevant for genealogists who only worked on Doe cases, but not those working with authorities to identify perpetrators of violent crimes. Undisclosed Methods Exploitation of the GEDmatch loophole isn’t the only example of genetic genealogists and their law enforcement partners playing fast and loose with the rules. Law enforcement officers have used genetic genealogy to solve crimes that aren’t eligible for genetic investigation per company terms of service and Justice Department guidelines, which say the practice should be reserved for violent crimes like rape and murder only when all other “reasonable” avenues of investigation have failed. In May, CNN reported on a U.S. marshal who used genetic genealogy to solve a decades-old prison break in Nebraska. There is no prison break exception to the eligibility rules, Larkin noted in a post on her website. “This case should never have used forensic genetic genealogy in the first place.” “This case should never have used forensic genetic genealogy in the first place.” A month later, Larkin wrote about another violation, this time in a California case. The FBI and the Riverside County Regional Cold Case Homicide Team had identified the victim of a 1996 homicide using the MyHeritage database — an explicit violation of the company’s terms of service, which make clear that using the database for law enforcement purposes is “strictly prohibited” absent a court order. “The case presents an example of ‘noble cause bias,’” Larkin wrote, “in which the investigators seem to feel that their objective is so worthy that they can break the rules in place to protect others.” MyHeritage did not respond to a request for comment. The Riverside County Sheriff’s Office referred questions to the Riverside district attorney’s office, which declined to comment on an ongoing investigation. The FBI also declined to comment. Violations have even come from inside the DNA testing companies. Back in 2019, GEDmatch co-founder Curtis Rogers unilaterally made an exception to the terms of service, without notifying the site’s users, to allow police to search for someone suspected of assault in Utah. It was a tough call, Rogers told BuzzFeed News, but the case in question “was as close to a homicide as you can get.” It appears that violations have also spread to Ancestry, which prohibits the use of its DNA data for law enforcement purposes unless the company is legally compelled to provide access. Genetic genealogists told The Intercept that they are aware of examples in which genealogists working with police have provided AncestryDNA testing kits to the possible relatives of suspects — what’s known as “target testing” — or asked customers for access to preexisting accounts as a way to unlock the off-limits data. A spokesperson for Ancestry did not answer The Intercept’s questions about efforts to unlock DNA data for law enforcement purposes via a third party. Instead, in a statement, the company reiterated its commitment to maintaining the privacy of its users. “Protecting our customers’ privacy and being good stewards of their data is Ancestry’s highest priority,” it read. The company did not respond to follow-up questions. As it turns out, the genetic genealogy work in the Golden State Killer case was also questionable: The break that led to DeAngelo came after genealogist Barbara Rae-Venter uploaded DNA from the double murder to MyHeritage, according to the Los Angeles Times. Rae-Venter told the Times that she didn’t notify the company about what she was doing but that her actions were approved by Steve Kramer, the FBI’s Los Angeles division counsel at the time. “In his opinion, law enforcement is entitled to go where the public goes,” Rae-Venter told the paper. Just how prevalent these practices are may never fully be known, in part because police and prosecutors regularly seek to shield genetic investigations from being vetted in court. They argue that what they obtain from forensic genetic genealogy is merely a tip, like information provided by an informant, and is exempt from disclosure to criminal defendants. That’s exactly what’s happening in Idaho, where Bryan Kohberger is awaiting trial for the 2022 murder of four university students. For months, the state failed to disclose that it had used forensic genetic genealogy to identify Kohberger as a suspect. A probable cause statement methodically laying out the evidence that led cops to his door conspicuously omitted any mention of genetic genealogy. Kohberger’s defense team has asked to see documents related to the genealogy work as it prepares for an October trial, but the state has refused, saying the defense has no right to any information about the genetic genealogy it used to crack the case. Prosecutors said it was the FBI that did the genetic genealogy work, and few records were created in the process, leaving little to turn over. But the state also argued that it couldn’t turn over information because the family tree the FBI created was extensive — including “the names and personal information of … hundreds of innocent relatives” — and the privacy of those individuals needed to be maintained. According to the state, it shouldn’t even have to say which genetic database — or databases — it used. Kohberger’s attorneys argue that the state’s position is preposterous and keeps them from ensuring that the work undertaken to find Kohberger was above board. “It would appear that the state is acknowledging that the companies are providing personal information to the state and that those companies and the government would suffer if the public were to realize it,” one of Kohberger’s attorneys wrote. “The statement by the government implies that the databases searched may be ones that law enforcement is specifically barred from, which explains why they do not want to disclose their methods.” A hearing on the issue is scheduled for August 18. An AncestryDNA user points to his family tree on Ancestry.com on June 24, 2016. Photo: RJ Sangosti/The Denver Post via Getty Images “A Search of All of Us” Natalie Ram, a law professor at the University of Maryland Carey School of Law and an expert in genetic privacy, believes forensic genetic genealogy is a giant fishing expedition that fails the particularity requirement of the Fourth Amendment: that law enforcement searches be targeted and based on individualized suspicion. Finding a match to crime scene DNA by searching through millions of genetic profiles is the opposite of targeted. Forensic genetic genealogy, according to Ram, “is fundamentally a search of all of us every time they do it.” While proponents of forensic genetic genealogy say the individuals they’re searching have willingly uploaded their genetic information and opted in to law enforcement access, Ram and others aren’t so sure that’s the case, even when practitioners adhere to terms of service. If the consent is truly informed and voluntary, “then I think that it would be ethical, lawful, permissible for law enforcement to use that DNA … to identify those individuals who did the volunteering,” Ram said. But that’s not who is being identified in these cases. Instead, it’s relatives — and sometimes very distant relatives. “Our genetic associations are involuntary. They’re profoundly involuntary. They’re involuntary in a way that almost nothing else is. And they’re also immutable,” she said. “I can estrange myself from my family and my siblings and deprive them of information about what I’m doing in my life. And yet their DNA is informative on me.” Jennifer Lynch, general counsel at the Electronic Frontier Foundation, agrees. “We’re putting other people’s privacy on the line when we’re trying to upload our own genetic information,” she said. “You can’t consent for another person. And there’s just not an argument that you have consented for your genetic information to be in a database when it’s your brother who’s uploaded the information, or when it’s somebody you don’t even know who is related to you.” Related Orange County Prosecutors Operate “Vast, Secretive” Genetic Surveillance Program To date, efforts to rein in the practice as a violation of the Fourth Amendment have presented some problems. A person whose arrest was built on a foundation of genetic genealogy, for example, might have been harmed by the genealogical fishing expedition but lack standing to bring a case; in the strictest sense, it wasn’t their DNA that was searched. In contrast, a third cousin whose DNA was used to identify a suspect could have standing to bring a suit, but they might be hard-pressed to prove they were harmed by the search. If police are getting hits to suspects by violating companies’ terms of service — using databases that bar police searching — that “raises some serious Fourth Amendment questions” because no expectation of privacy has been waived, Ram said. Of course, ferreting out such violations would require that the information be disclosed in court, which isn’t happening. At present, the only real regulators of the practice are the database owners: private companies that can change hands or terms of service with little notice. GEDmatch, which has at least once bent its terms to accommodate police, was started by two genealogy hobbyists and then sold to the biotech company Verogen, which in turn was acquired last winter by another biotech company, Qiagen. Experts like Ram and Lynch worry about the implications of so much sensitive information held in for-profit hands — and readily exploited by police. The “platforms right now are the most powerful regulators we have for most Americans,” Ram said. Police regulate “after a fashion, in a fashion, by what they do. They tell us what they’re willing to do by what they actually do,” she added. “But by the way, that’s like law enforcement making rules for itself, so not exactly a diverse group of stakeholders.” For now, Ram said, the best way to regulate forensic genetic genealogy is by statute. In 2021, Maryland lawmakers passed a comprehensive law to restrain the practice. It requires police to obtain a warrant before conducting a genetic genealogy search — certifying that the case is an eligible violent felony and that all other reasonable avenues of investigation have failed — and notify the court before gathering DNA evidence to confirm the suspect identified via genetic genealogy is, in fact, the likely perpetrator. Currently, police use surreptitious methods to collect DNA without judicial oversight: mining a person’s garbage, for example, for items expected to contain biological evidence. In the Golden State Killer case, DeAngelo was implicated by DNA on a discarded tissue. The Maryland law also requires police to obtain consent from any third party whose DNA might help solve a crime. In the Kohberger case, police searched his parents’ garbage, collecting trash with DNA on it that the lab believed belonged to Kohberger’s father. In a notorious Florida case, police lied to a suspect’s parents to get a DNA sample from the mother, telling her they were trying to identify a person found dead whom they believed was her relative. Those methods are barred under the Maryland law. Montana and Utah have also passed laws governing forensic genetic genealogy, though neither is as strict as Maryland’s. MyHeritage DNA kits are displayed at the RootsTech conference in Salt Lake City on Feb. 9, 2017. Photo: George Frey/Bloomberg via Getty Images Solving Crime Before It Happens The rise of direct-to-consumer DNA testing and forensic genetic genealogy raises another issue: the looming reality of a de facto national DNA database that can identify large swaths of the U.S. population, regardless of whether those individuals have uploaded their genetic information. In 2018, researchers led by the former chief science officer at MyHeritage predicted that a database of roughly 3 million people could identify nearly 100 percent of U.S. citizens of European descent. “Such a database scale is foreseeable for some third-party websites in the near future,” they concluded. “All of a sudden, we have a national DNA database, and we didn’t ever have any kind of debate about whether we wanted that in our society.” “All of a sudden, we have a national DNA database,” said Lynch, “and we didn’t ever have any kind of debate about whether we wanted that in our society.” A national database in “private hands,” she added. By the time people started worrying about this as a policy issue, it was “too late,” Moore said during her address at the Ramapo conference. “By the time the vast majority of the public learned about genetic genealogy, we’d been quietly building this incredibly powerful tool for human identification behind the scenes,” she said. “People sort of laughed, like, ‘Oh, hobbyists … you do your genealogy, you do your adoption,’ and we were allowed to build this tool without interference.” Moore advocated for involving forensic genetic genealogy earlier in the investigative process. Doing so, she argued, could focus police on guilty parties more quickly and save innocent people from needless law enforcement scrutiny. In fact, she told the audience, she believes that forensic genetic genealogy can help to eradicate crime. “We can stop criminals in their tracks,” she said. “I really believe we can stop serial killers from existing, stop serial rapists from existing.” “We are an army. We can do this! So repeat after me,” Moore said, before leading the audience in a chant. “No more serial killers!” Update: August 18, 2023, 3:55 p.m. ET After this article was published, Margaret Press, founder of the DNA Doe Project, released a statement in response to The Intercept’s findings. Press acknowledged that between May 2019 and January 2021, the organization’s leadership and volunteers made use of GEDmatch tools that provided access to DNA profiles that were opted out of law enforcement searches, which she described as “a bug in the software.” Press stated: We have always been committed to abide by the Terms of Service for the databases we used, and take our responsibility to our law enforcement and medical examiner partner agencies extremely seriously. In hindsight, it’s clear we failed to consider the critically important need for the public to be able to trust that their DNA data will only be shared and used with their permission and under the restrictions they choose. We should have reported these bugs to GEDmatch and stopped using the affected reports until the bugs were fixed. Instead, on that first day when we found that all of the profiles were set to opt-out, I discouraged our team from reporting them at all. I now know I was wrong and I regret my words and actions. CONTACT THE AUTHOR: Jordan Smith jordan.smith@theintercept.com @chronic_jordan RELATED Orange County Prosecutors Operate “Vast, Secretive” Genetic Surveillance Program DHS Plans to Start Collecting Eye Scans and DNA — With the Help of Defense Contractors LATEST STORIES Norfolk Southern Spent $1.9 Million in Washington as Congress Weakened Rail Safety Bill Prem Thakker - Aug. 18 In the six months since the East Palestine derailment, the railway giant has activated its lobbyists and spread money around Congress. Deconstructed Podcast How a Leaked Cable Upended Pakistani Politics — And Exposed U.S. Meddling Deconstructed - Aug. 18 Journalists Ryan Grim and Murtaza Hussain discuss their reporting on a leaked cable showing how the U.S. contributed to Pakistan’s political crisis. In Trump’s Georgia Indictment, a Tale of Two Election Workers James Risen - Aug. 17 Ruby Freeman resisted Trump, while Misty Hampton embraced him. JOIN THE CONVERSATION Join Our Newsletter Original reporting. Fearless journalism. Delivered to you. I'm in By signing up, I agree to receive emails from The Intercept and to the Privacy Policy and Terms of Use. ABOUT POLICIES AND REPORTS BECOME A SOURCE JOIN NEWSLETTER BECOME A MEMBER TERMS OF USE PRIVACY SECUREDROP © THE INTERCEPT. ALL RIGHTS RESERVED",
    "commentLink": "https://news.ycombinator.com/item?id=37179094",
    "commentBody": "Police are getting DNA data from people who think they opted outHacker NewspastloginPolice are getting DNA data from people who think they opted out (theintercept.com) 209 points by ilamont 16 hours ago| hidepastfavorite156 comments WarOnPrivacy 13 hours agoI&#x27;m a genealogist. I discourage everyone I can from uploading their DNA. For DNA to be secure, there doesn&#x27;t just need to be firm walls, they can&#x27;t ever be breached for a moment - not now or a generation from now.Holders of DNA can&#x27;t be bought out or come under the control of leadership that doesn&#x27;t fully grasp and exercise privacy safeguards. They can&#x27;t allow laws to be bought or leveraged that will compromise their ability to safeguard it.LEO&#x27;s use of DNA is a surveillance method and powerful interests will always feel compelled to use it to hunt people they perceive are enemies. Whatever info we may get by uploading it can&#x27;t possibly be worth the risk to our descendants and relations. reply andersrs 12 hours agoparentThere is always that one asshole in your family that thinks they&#x27;re clever by uploading their DNA to one of the ancestry services. By doing that they&#x27;ve leaked a fair bit of information about their relatives who never consented. reply alexfromapex 11 hours agorootparentThey’re not an asshole the companies are for letting the government search the data without a warrant. This kind of data collection and abuse without informed consent can easily spread and probably already has with modalities like facial recognition and needs to be banned. reply StanislavPetrov 4 hours agorootparent>They’re not an asshole the companies are for letting the government search the data without a warrant.In my opinion trusting anyone with your DNA makes you an asshole. The possibility of a leak, hack, misuse or government search (consensual or non-consensual) approaches 100% very rapidly over time. reply coldtea 1 hour agorootparent>In my opinion trusting anyone with your DNA makes you an assholeIt&#x27;s not like they can&#x27;t get your DNA in several ways without you volunteering it...Or that they need your DNA to get to things about you, unless you&#x27;re living incognito or something... reply greedylizard 12 hours agorootparentprevWhy is this being downvoted? Is it not true? From what I’ve seen, this comment is accurate. Genuinely asking… reply dunefox 44 minutes agorootparentBecause the companies and subsequent parties are the assholes in this case. reply 14 12 hours agorootparentprevI have a dumb brother who I won’t talk to decides to be a shitty career criminal. They took his dna so I’m in the same boat as family uploading it. Not that I am worried about it being used for a crime but I worry in future people will be discriminated on by dna. Life insurance could be more expensive if they know you have a slight chance of x disease for examples. reply skinner927 5 hours agorootparentSorry, you can’t get health insurance because you have a pre-existing condition from 13 generations ago. reply memefrog 5 hours agorootparentprevIf you have a higher chance of getting a disease, why wouldn&#x27;t life insurance be more expensive? Life insurance will also be cheaper if you don&#x27;t have that chance.The point of insurance is to spread random risk around. Nobody complains that young women have cheaper car insurance than young men, or that young people have more expensive car insurance than older people, but cheaper health insurance. Young men are more likely to have car accidents, but less likely to have cancer. The point of insurance is not wealth redistribution or the spreading of systemic risk, but the spreading of random risk. (I mean this in the sense of &#x27;systemic error&#x27; vs &#x27;random error&#x27; that you will remember from high school physics.) reply chmod775 5 hours agorootparentThis directly leads to discrimination against disabled people among other groups.For instance wheelchair bound people have a much lower average live expectancy. The lives of people who are (born) disabled or have some debilitating genetic disease don&#x27;t need society to make their lives even harder.> If you have a higher chance of getting a disease, why wouldn&#x27;t life insurance be more expensive?The answer to that is: Not spreading such risks evenly among everyone is morally reprehensible. Imagine your reward for living in constant pain and having a higher chance of dying early is society kicking you in the balls for the crime of being born like that. reply memefrog 3 hours agorootparent> This directly leads to discrimination against disabled people among other groups.Yes, of course if someone has a disability that puts them at a higher risk of some event, and they want to insure themselves against that event, they&#x27;d pay higher insurance premiums. That&#x27;s like, the entire point of insurance.If you live in an area that is prone to flooding, then you either can&#x27;t insure yourself against flood damage or the insurance premiums are a lot more expensive than someone living in a desert. If you smoke, your health insurance and life insurance premiums are higher. If you have type 1 diabetes, you will probably struggle to get any meaningful amount of life insurance.What alternative are you proposing? That anyone purchasing insurance will automatically be expected to subsidise the insurance premiums of people that are at higher risk? That&#x27;s not what insurance is for. If you want to redistribute wealth from people without disabilities to people with disabilities, then you can do that using taxes. But not by pretending there&#x27;s anything wrong with honest risk assessment in insurance.>The answer to that is: Not spreading such risks evenly among everyone is morally reprehensible. Imagine your reward for living in constant pain and having a higher chance of dying early is society kicking you in the balls for the crime of being born like that.Nobody is being &#x27;kicked in the balls&#x27;. Stop using such emotionally manipulative tactics and such charged language. Insurance is about spreading random risk. It is not for spreading systemic risk.I don&#x27;t think you understand the purpose of insurance at all. reply wlesieutre 5 hours agorootparentprevMy car insurance company knows I have a Y-chromosome and charges me extra for it. Seems to be a universal practice at least in the US. reply StanislavPetrov 4 hours agorootparentA lot of discriminatory practices exist in the US. We should strive to eliminate them, not expand them. reply memefrog 3 hours agorootparentNo, we should not &#x27;strive to eliminate&#x27; them. The entire point of insurance is that it is based on risk assessments that are as accurate as possible, using all the information that is available. It is not a wealth redistribution mechanism, but a randomness redistribution system. If you know that you have an illness, and don&#x27;t tell your insurance company, then you&#x27;re a fraudster. If you know you have a genetic predisposition to illness, that&#x27;s no different.Discrimination is not inherently a bad thing. There are specific lists of special reasons, and discrimination on those bases is considered bad and has widely been made unlawful. Usually, insurance is an exception! And it should be. I don&#x27;t see why men should subsidise the health insurance of women or why women should subsidise the car insurance of men. I don&#x27;t see why the young should subsidise the health insurance of the old. That&#x27;s not the point of insurance. reply coldtea 1 hour agorootparent>No, we should not &#x27;strive to eliminate&#x27; them. The entire point of insurance is that it is based on risk assessments that are as accurate as possible, using all the information that is available.And we should change the law so that point of insurance is made illegal, and insurance companies can only use generic, broad, information about a person, not bend over so that they can maximize their profit margins and minimize their risks. reply ghusbands 1 hour agorootparentprevYou&#x27;re pushing a very limited view of insurance, here. There are plenty of cases in the world where insurance is a \"randomness redistribution system\" across a whole population, where the lottery of genetics is also considered part of that randomness, avoiding building in discrimination. replycjbgkagh 11 hours agoparentprevIn my view DNA privacy is already defeated, enough people have already submitted that the intersection of distant relatives really narrows down who a given sample could be. When I submitted my own I had a long list of distant relatives on both sides come up and I suspect that is pretty typical for Europeans. reply rolph 16 hours agoprev>> The loophole, which a source demonstrated for The Intercept, allows genealogists working with police to manipulate search fields within a DNA comparison tool to trick the system into showing opted-out profiles. In records of communications reviewed by The Intercept, Moore and two other forensic genetic genealogists discussed the loophole and how to trigger it. In a separate communication, one of the genealogists described hiding the fact that her organization had made an identification using an opted-out profile. > they can likely often construct a case without even mentioning the genetic tracing The fact you have to trick the system to do something should give pauseThis sort of Exceeding Access isn&#x27;t being used to violate copyright or expose Gov wrongdoing. There is zero politician outrage over it, purchased or otherwise. reply 14 12 hours agorootparentprevIf this was a “hacker” who got caught doing this you know damn well that key point would be used to say “unauthorized access” reply dylan604 10 hours agorootparenthopefully, they&#x27;re not using wget with the work around or they&#x27;d really be screwed reply EvanAnderson 13 hours agoparentprevIf incrementing a counter in a URL got somebody sent to jail this absolutely should render evidence acquired this way inadmissible at the very least. reply kstenerud 4 hours agoprevAnd if this doesn&#x27;t make the hair stand up on the back of your neck:---In fact, Moore told the audience, she believes that forensic genetic genealogy can help to eradicate crime. “We can stop criminals in their tracks,” she said. “I really believe we can stop serial killers from existing, stop serial rapists from existing.”“We are an army. We can do this! So repeat after me,” Moore said, before leading the audience in a chant. “No more serial killers!”---There is nothing more dangerous than a true believer. reply vGPU 3 hours agoprev> In a statement posted to the Facebook group, Pam Lauritzen, the project’s communications director, said the loophole was an artifact of changes GEDmatch implemented in 2019, when it made opting out the default for all profiles. “While we knew that the intent of the change was to make opted-out users unavailable, some volunteers with the DNA Doe Project continued to use the reports that allowed access to profiles that were opted out,” she wrote. That use was neither “encouraged nor discouraged,” she continued. Still, she claimed the access was somehow “in compliance” with GEDmatch’s terms of service — which at the time promised that DNA uploaded for law enforcement purposes would only be matched with customers who’d opted in — and that the loophole was closed “years ago.”Huh?> In July 2020, GEDmatch was hacked, which resulted in all 1.45 million profiles then contained in the database to be briefly opted in to law enforcement matching; at the time, BuzzFeed News reported, just 280,000 profiles had opted in.How rather convenient.Realistically, I think there’s likely a bit of parallel construction going on too, likely making up flimsy excuses to hide the fact that some crimes were solved with the use of surveillance programs that have not been revealed to the general public. I’d be extremely surprised if the CIA doesn’t have a secret copy of all major commercial DNA databases.If they were using Mitre to try to build a database of [actual, physical] fingerprints by scraping social media images, there’s no way they’d leave such low hanging fruit… hanging. reply justinclift 11 hours agoprevSuper ironic: \"If you’re doing something you wouldn’t want blasted on the front page of the New York Times, Moore said, you should probably rethink what you’re doing.\"Then proceeds to deliberately search the DNA of people who explicitly opted out of sharing genetic information with police. reply theptip 15 hours agoprevSeems to be a CPRA violation for CA citizens?https:&#x2F;&#x2F;www.bytebacklaw.com&#x2F;2022&#x2F;02&#x2F;how-do-the-cpra-cpa-vcdp...Though not sure if law enforcement exemptions apply, AFAICT you need a subpoena to get a company to disclose sensitive personal information like DNA. reply tcoff91 16 hours agoprevThis definitely seems like a CFAA violation. reply chrisjj 16 hours agoprevhttps:&#x2F;&#x2F;archive.ph&#x2F;LUC20 reply LispSporks22 14 hours agoprevJesus what a shit show. What’s the point if the sites can change their ToS and flip opt-out to opt-in at whatever whimsy they do choose. Needs to be some kind of uniform privacy enforced. reply freitzkriesler2 12 hours agoprevCats already out of the bag. Cousins already uploaded this stuff to 23andme. Really annoying. reply paulpauper 15 hours agoprevpolice&#x2F;feds will look for anything to get an edge to make cases easier for them reply Zigurd 14 hours agoparentThat is, in fact, an optimistic position. Police are so ineffective at solving crimes that \"easier\" and \"getting an edge\" overstate the possibility of a publicly minded motivation to cheat.Instances like the Massachusetts crime lab scandal should destroy all confidence in evidence handling: https:&#x2F;&#x2F;slate.com&#x2F;news-and-politics&#x2F;2021&#x2F;05&#x2F;massachusetts-cr...All evidence handling and analysis should be performed by an independent agency, maybe answerable to courts, not cops. reply rolph 13 hours agorootparenti would go a step further, and insist that test results of evidentiary DNA be provided for defense discovery, before probative DNA [sample from accused] is even touched by an examiner from forensic services lab.as is the only thing stopping probative DNA from ending up in the evidence lane is a promise not to abuse the opportunity, that also says nothing about \"by mistake\" occurances reply zlg_codes 15 hours agoprevMore and more, the governments of the world try to erode the status of the lone, average human, for they think their efforts will protect countries and governments.Fear has been the primary motivator in the world of government ever since 9&#x2F;11. America is so scared of itself it has turned inward, against itself. She&#x27;s willing to forget about the 4th Amendment, the 13th Amendment, and even her own founding document, as long as they get a little more data they can abuse on their own citizens.At what point do we accuse the government of treason? None of this invasion of privacy was part of the deal, and Americans stand to gain nothing from these false assertions of privacy and opting out.Our government is betraying us and the dominant ideology is to lay down and take it. This country will never improve until we can fight back against surveillance. They couldn&#x27;t keep us safe during 9&#x2F;11, and none of their desperate \"security\" efforts have protected us.Again I ask, when do we accuse the government of betraying us and the social contract? reply jamesdwilson 14 hours agoparent[...] But O good Lord! What strange phenomenon is this? What name shall we give to it? What is the nature of this misfortune? What vice is it, or, rather, what degradation? To see an endless multitude of people not merely obeying, but driven to servility? Not ruled, but tyrannized over? These wretches have no wealth, no kin, nor wife nor children, not even life itself that they can call their own. They suffer plundering, wantonness, cruelty, not from an army, not from a barbarian horde, on account of whom they must shed their blood and sacrifice their lives, but from a single man; not from a Hercules nor from a Samson, but from a single little man. Too frequently this same little man is the most cowardly and effeminate in the nation, a stranger to the powder of battle and hesitant on the sands of the tournament; not only without energy to direct men by force, but with hardly enough virility to bed with a common woman! Shall we call subjection to such a leader cowardice? Shall we say that those who serve him are cowardly and faint-hearted? If two, if three, if four, do not defend themselves from the one, we might call that circumstance surprising but nevertheless conceivable. In such a case one might be justified in suspecting a lack of courage. But if a hundred, if a thousand endure the caprice of a single man, should we not rather say that they lack not the courage but the desire to rise against him, and that such an attitude indicates indifference rather than cowardice? When not a hundred, not a thousand men, but a hundred provinces, a thousand cities, a million men, refuse to assail a single man from whom the kindest treatment received is the infliction of serfdom and slavery, what shall we call that? Is it cowardice? Of course there is in every vice inevitably some limit beyond which one cannot go. Two, possibly ten, may fear one; but when a thousand, a million men, a thousand cities, fail to protect themselves against the domination of one man, this cannot be called cowardly, for cowardice does not sink to such a depth, any more than valor can be termed the effort of one individual to scale a fortress, to attack an army, or to conquer a kingdom. What monstrous vice, then, is this which does not even deserve to be called cowardice, a vice for which no term can be found vile enough, which nature herself disavows and our tongues refuse to name? [...]–Étienne de La Boétie&#x27;s Discourse on Voluntary Servitude (1548) reply Terr_ 13 hours agorootparent> If two, if three, if four, do not defend themselves from the one [...] Two, possibly ten, may fear one; but when a thousand, a million men, a thousand cities, fail to protect themselves against the domination of one manI get that the author is trying to motivate people, but logically that&#x27;s a straw-man: Nobody actually thinks that the average individual Dirt-Farmer-Guy is being oppressed solely because they&#x27;re terrified of Shiny-Hat-Guy&#x27;s bulging biceps (2) and shouty voice (1).No, each Dirt-Farmer&#x27;s decision-making comes from a fear of very large numbers of violent angry men or institutions capable of destroying them financially and socially, fears which are often entirely justified.If things were truly as straightforward as Étienne is suggesting, he wouldn&#x27;t need to write about it: He could walk up to any random dude and say: \"Hey, you&#x27;re getting screwed, with two of us we could kick the Shiny-Hat-Guy&#x27;s ass\". And they&#x27;d do it, since every single person they&#x27;d meet would automatically join the mob or at least stand aside. reply zlg_codes 14 hours agorootparentprevThat was an interesting read! I relate to that very much, thanks for sharing. We read all about the rise and fall of governments, of political goals, of cultures... and yes, there is a certain moral failing or disconnected apathy that allows the greedy and sociopathic to prey upon their own kind. It&#x27;s rather depressing to think of so many people convinced they can do nothing, by a group of people who is so scared of their people they sign deals with businesses behind closed doors.I&#x27;m convinced many of our \"leaders\" could not argue their positions adequately if they were forced to defend them. I remember reading about events like the Million Man March on Washington DC, and I wonder how America would handle a massive, peaceful demonstration communicating the general discontent of the citizen with this potentially great country.It seems there was a period in American history where the common man COULD and DID stand up for their countrymen, for the health and endurance of the entire country instead of a handful of rich fucks. Why do we not see these shows of solidarity in the modern age? I ask mostly rhetorically but the America of today looks and feels characteristically different from what it sells itself as or even who it was a mere 50 years ago. reply snerbles 13 hours agorootparent> Why do we not see these shows of solidarity in the modern age?When did you last sit down and have dinner with your next-door neighbor? Discuss the local happenings and politics of the neighborhood in person?You might be able to answer that question in the affirmative. But many more don&#x27;t. We&#x27;re too busy isolating ourselves from one another to grow any form of culture from which organized efforts would spring. reply zlg_codes 11 hours agorootparentGreat point, the feeling of community has slowly faded from many parts of the country. Not all, of course. Hard to do it completely. But the loss of \"third places\" -- places you can exist with others in a non-vocational or business context -- is probably a big part of it.Many places still sort of exist through stuff like farmer&#x27;s markets, some clubs, libraries, swap meets, etc, but they seem less generalized for socializing.I haven&#x27;t met with my neighbors or sat down to chat with them. It does feel kind of alien and, dare I say it, rude to intrude on someone&#x27;s life that way. Maybe it&#x27;s not really an intrusion, and an atmosphere of fear and distrust has trained us to separate. I remember my parents meeting people and scheduling times to hang out all the time. Children from different families would mingle while the adults mingled, everyone got some dose of community.I couldn&#x27;t tell you where programming hobbyists meet up in my area. I might have to go up to Tacoma before I find any no-or-low-cost hacker groups. But, don&#x27;t many communities also have common places they go routinely? I&#x27;m thinking gaming and TTRPG, TCG shops might be a good start to build a third place, despite being a business themselves. reply sph 13 hours agoparentprev> Again I ask, when do we accuse the government of betraying us and the social contract?\"Ah, it&#x27;s simple. It&#x27;s the fault of this government, but when my party gets finally voted in, things will change.\"And so the circle of the naivety perpetuates. We might hope for a better future only when citizens will realise that both sides are exactly the same, and that they&#x27;ve been lied to since we invented the career politician. Apparently 4 years is how long it takes people to forget whatever bullshit they were sold last time.https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;AnarchismBut seeing how everybody is politicised and ultra-partisan today, I can only shake my head and despair. People get the government they deserve. reply zlg_codes 11 hours agorootparentBoth-sidesism? This goes beyond political party. Creating parties was where we fucked up. First-past-the-post almost ensured that our elections would end up becoming team sports, at that point.I&#x27;d be much more trusting of democracy or even representative democracy if the demos had a real say -- We should be voting on issues more than we do people. People can betray trust or twist a vote&#x27;s meaning. Most of politics, as practiced, is sleight of hand and misleading people. If we vote on issues and then also vote on people whose leadership we trust to execute said issue conclusion, we&#x27;d get much closer to something representing the will of the people while also guarding against populist BS. That is the supposed goal of representative democracies, and yet in practice it&#x27;s bread, circuses, and zero accountability from the top. Losing an election is not a replacement for consequences or taking responsibility for defying the will of your constituents.But, you can&#x27;t sell that as a sport to people and foment tribal thoughts as easily, so that&#x27;s no good. &#x2F;s reply sph 11 hours agorootparent> you can&#x27;t sell that as a sport to people and foment tribal thoughts as easilyPanem et circenses. My niche theory on why we&#x27;ve become so politicised, is because it&#x27;s become entertainment. Trash reality TV.Today the circenses are not the gladiators fighting for their lives, but the Orange Man vs Old Geezer sitcom on dinner time TV and in the front page of your newspapers. One will find there is little difference between the trashy TV fan and the person avidly following political debates.Meanwhile those reality stars keep stealing and making their friends richer, disregarding any laws because they&#x27;re the ones making them. reply mikem170 10 hours agorootparentprev> I&#x27;d be much more trusting of democracy or even representative democracy if the demos had a real sayThe Swiss do a much better job of this! There the people can petition for a referendum to add or delete any law or amend the constitution. They can do this at the municipal, canton (state) or federal level. The result is that politicians know that they need to negotiate with motivated minorities. The people have a veto over the politicians. reply tamimio 13 hours agorootparentprev>People get the government they deserve. Spot on reply krisoft 12 hours agoparentprev> Fear has been the primary motivator in the world of government ever since 9&#x2F;11.Ah. I really don’t want to tell you what basis to build your private mythology on but fear as the primary motivator did not start with 9&#x2F;11.We feared the bear so we become the hunters and killed it. We feared the night so we made fire. We feared the others in the next valley so we sharpened our sticks.We feared the flood so we built dams. We feared death so we invented delusions to placate ourselves.Even if you somehow constrain yourself to the history of the US government, would you say the cold war was not driven by fear? reply zlg_codes 11 hours agorootparentPerhaps it&#x27;s better to call it another wave, or another style of fear. The point is that the events of 9&#x2F;11 scared Americans enough to hand over their freedoms with the PATRIOT Act. The impact of surveillance everywhere in society has had an overall chilling effect on public discourse and activity. People act differently when they know they&#x27;re being watched.I&#x27;m reminded of Ben Franklin: \"Those who would give up essential Liberty, to purchase a little temporary Safety, deserve neither Liberty nor Safety.\" reply Paul-Craft 11 minutes agorootparent> The point is that the events of 9&#x2F;11 scared Americans enough to hand over their freedoms with the PATRIOT Act.I don&#x27;t recall being asked if I wanted to hand over any freedoms to anyone. Nobody asked. This was done to me, not done for me. reply mikem170 10 hours agorootparentprevBefore 9&#x2F;11 we were told to fear the U.S.S.R., right up until the day they fell apart. Then there was global warming, crime, terrorists, immigrants, trans people, and who knows what next.They always want to keep us afraid, it seems. It doesn&#x27;t help that people in general are not good at qualifying risk. reply gumballindie 14 hours agoparentprevNot an american, but the EU&#x2F;UK are following the same trend.What is the proposed alternative? As we can see there are bad actors in our society that pose a higher risk than ever before, and their tools are ever more sophisticated. reply kelnos 13 hours agorootparentAre these bad actors actually that big of a threat, though? And are they really that smart&#x2F;sophisticated that they can elude more standard, \"old school\" investigative methods?The problem is that we just don&#x27;t know, and law enforcement agencies aren&#x27;t giving us a detailed breakdown of which plots were foiled (or at least successfully prosecuted after the fact) via privacy-invading means vs. old-fashioned police work. Of course they&#x27;ll never give us this data; we probably don&#x27;t even hear about most investigations, even after the fact.Just trust them? No thanks. They are very publicly incompetent in many ways (e.g. all airline \"security\" procedures developed post-9&#x2F;11 -- except for locking and armoring cockpit doors -- seems pointless, and don&#x27;t catch people during sanctioned penetration testing), and I don&#x27;t see why they deserve any blind trust here.We don&#x27;t know if this sort of dragnet genetic database trawling will broadly close cases. Sure, it worked with the Golden State Killer, when no other methods seem to have worked. But that&#x27;s just a single data point. And I&#x27;d rather that the occasional -- very occasional, as it turns out -- serial killer goes free, rather than live in a police state with no privacy.This is a meandering way for me to say: we on the outside cannot propose alternatives, because we have scant data and little understanding of what works and what doesn&#x27;t. And the people in power consider it a feature that we don&#x27;t have access to this information. reply Obscurity4340 11 hours agorootparentThat&#x27;s the most annoying part. They have literally every other tool and technology and scientific equipment&#x2F;personnel to find out (sometimes even parallel construct) whatever they need for a case, why do they need to have access to ALL your private data and thoughts? How did thry ever solve a crime before the mass proliferation of all the data-rich personal tech we have today? reply WeylandYutani 12 hours agorootparentprev\"I would rather have one serial killer get away with it\" would make for a hell of a sound-bite for your opponent in an election campaign.Honestly this issue was already decided. No new arguments have been presented. I&#x27;m old enough to remember it. One side talks about hypotheticals and constitutional principles. The other side holds up a photo of some poor murdered child. Can&#x27;t win this one. reply gumballindie 13 hours agorootparentprevOh believe me they are. Even back when the london olympics took place people were quietly muttering about the risk of terrorist attacks. To be fair the UK&#x2F;MI6 are doing one hell of a job at keeping people safe, but the risk is massive. If the US wouldn&#x27;t be as paranoid as it is believe me it would be worse. I am not justying the level of government oversight, I am genuinely curious what the alternatives are. reply WarOnPrivacy 13 hours agoparentprev> Again I ask, when do we accuse the government of betraying us and the social contract?With kindness, I offer that voting for officials who&#x27;ve expanded surveillance isn&#x27;t in harmony with the above sentiment. Neither is us failing to speak out to news orgs that are rarely willing to elevate surveillance abuses over far less important content.Part of the equation: Better behavior by us. reply Aerbil313 13 hours agoparentprevYou are, right now, in a we-gotta-do-something mindset. This is natural and understandable. You could revolt against the landlord back in the old days.People don&#x27;t understand how big has the world become. Because they can&#x27;t. The scale of the current world is unintelligible. Economy, resources, war, geopolitics, politics. The way we live our lives is not under our control, it&#x27;s not under anyone&#x27;s control. The average person has no more freedom than an ant in his colony. An emergent collective mind rules the world, comprised of the technology and desires of the mankind. You can&#x27;t predict the outcome of a certain quantum state, but in the grand scheme of things everything moves deterministically as per the laws of Newton.Read some Ted Kaczynski. reply barrysteve 11 hours agorootparentIt is not difficult conceptually to control that.You just scoop out the centralized means of access to resources and the semi-anarchist masses don&#x27;t have anything to with their power.You can&#x27;t predict quantum states, but you sure can build walls around valuable resources and imprison unpredictable quantum technologists.All it takes is a conspiracy&#x2F;agreement among the heads of resources industry and the world is &#x27;owned&#x27; again.Not advocating for that outcome, it&#x27;s just unfortunately true. reply zapdrive 15 hours agoparentprevDon&#x27;t forget the attacks on the first and the second amendment. reply koolba 15 hours agorootparentWithout the 1st and 2nd, it’s pretty hard to stop attacks on the 4th or 6th. reply rgrieselhuber 14 hours agorootparentOne of the issues that has emerged is a strange fixation (which the Anti-Federalists warned of) on the Bill of Rights as the source of these rights. But the Bill of Rights is merely a non-exhaustive index, not a grantor, of our natural rights. These rights do not depend on a document, they exist regardless. reply koolba 13 hours agorootparent> These rights do not depend on a document, they exist regardless.Damn straight!One approach I’ve tried in the past is to explain that the people start with all rights, the government starts with zero privileges, and the explicit examples codified in the Constitution are simply bare minimum examples of lines that shall never be crossed.The militia prefatory clause of the 2nd amendment is a great example of this as explained by Scalia in Heller. It’s not that that the right to bear arms is solely for members of a militia. It’s simply one example of how the individual freedom (that innately exists!) may be exercised. reply rolph 13 hours agorootparentyes it would be difficult to succeed when one rounds up a militia of torches and pitchforks, vs an opposor equipped with muskets.an inherent right to defend ones self includes ability to equip to do so effectively reply memefrog 5 hours agorootparentprevThat&#x27;s meaningless. &#x27;Rights&#x27; are a legal concept. They exist in law, nowhere else. You cannot just assert that they &#x27;exist&#x27;. Where do they exist? Where are they enumerated? Who decides what is and isn&#x27;t a &#x27;right&#x27;? If I say I have a right, is that determinative? Is it based on what people thought in the 18th century, or what we think today? Much of what we think today is influenced by how people have interpreted those documents, so basing it on people&#x27;s views today means it&#x27;s essentially circular.People assert they have all sorts of rights all the time. Most of them conflict with other rights that other people assert exist, and even other rights that they themselves assert exist. What do we do about this?I actually think &#x27;rights&#x27; legislation is pretty stupid. It&#x27;s a lot easier to write an Act that says &#x27;Every one has the right to a free, public and comprehensive secular education&#x27; than it is to write an Act that provides a free, public and comprehensive secular education system. The latter requires sorting out what all of those things actually mean in practice. What level of education do you provide for free? What level of choice do people have about their children&#x27;s education, vs the view that as a society we should protect children from the &#x27;bad&#x27; decisions of their parents? That also means protecting them from their parents&#x27; good decisions. Are we okay with that? What does it mean for education to be secular. Are they allowed to learn about religion? Are they allowed to close the school at lunchtime and teach religion in the afternoon, unofficially, as often happens? Concrete systems are much more important and much more effective than any abstract statement of &#x27;rights&#x27;. reply edrxty 14 hours agorootparentprevIt&#x27;s frustrating because unless it&#x27;s written in stone Americans won&#x27;t even pretend to agree on it, we&#x27;re a very chaotic culture that craves the predictability of rules and laws (unless they impact me specifically). There&#x27;s no concept in American society of a universal ethical standard at even the most fundamental level, probably stemming from how much inequality exists. reply memefrog 5 hours agorootparent> There&#x27;s no concept in American society of a universal ethical standard at even the most fundamental levelWhen I grew up, which was not long ago, we viewed America as that curiously Christian country of the West. Everyone else was very secular, but those American? They&#x27;re all Christians, they&#x27;re crazily religious.Maybe this has become less true over the last decade or so, but I think that you&#x27;ll find that the percentage of Americans that describe themselves as Christian is still very high. It seems that there is a pretty universal ethical standard at the most fundamental level. It just turns out that, like all things in life, people disagree about how to translate broad, abstract moral claims into concrete policies. You might agree on a &#x27;separation of church and state&#x27; or &#x27;free speech&#x27; but that doesn&#x27;t mean you agree on what that means in practice. Does it mean that public officials shouldn&#x27;t be allowed to display religious symbols, like it does in France? Does it mean that Islamic headscarves on women and crucifix necklaces are banned in schools? Does the UK have separate religion and state? Certainly its political process is less influenced by religious voting blocs than America&#x27;s. But its head of state is Supreme Governor of the Church of England. These things are complicated. reply rgrieselhuber 14 hours agorootparentprevI think the reason for this is because natural law assumes individual responsibility, and things have gotten far too comfy for most people to want that. So they outsource it to text and there are many experts at manipulating text. reply edrxty 14 hours agorootparentThat&#x27;s an incredibly good way of putting it. As long as you can justify your comfort over someone else&#x27;s, you golden. reply sixstringtheory 14 hours agorootparentprevDo you have some alternative in mind? If you don&#x27;t communicate an idea, you don&#x27;t even have the chance to agree on it because many people may not even consider it.I really fail to imagine how a society can arrive at a universal ethical standard without writing a couple ideas down here and there. You&#x27;re asking for a utopian society of mind readers, which hits me as just a touch unreasonable. reply kelnos 13 hours agorootparentI&#x27;m not convinced a society can arrive at a universal ethical standard, period.I was about to say, \"we can at least agree that murder is bad\", but I&#x27;m not sure that&#x27;s even the case, given that it seems like some people would think it&#x27;s ok to murder their political opponents if given the chance. reply rgrieselhuber 13 hours agorootparentprevThe standard used to be the concept of Imago Dei. Regardless of one’s individual beliefs it sets up an axiomatic basis for the worth of every individual and balancing that with the needs of a society. reply greedo 11 hours agorootparentI&#x27;m sure that&#x27;ll work well in a polytheistic world. Oh wait, we&#x27;ve already tried that. replyedrxty 14 hours agorootparentprevSay what you want about the second, the fastest growing groups to embrace it are black communities and the LGBTQ community and they as a whole take it fast more seriously, borderline professionally, than any other group I&#x27;ve ever seen. I used to be a skeptic but seeing that has really been eye opening. reply CatWChainsaw 9 hours agoparentprevWhen something is known, it becomes easier to be controlled and manipulated. And soon the government, both the elected ones and the incorporated ones, will know everything about everyone.But sure, AI will empower the average joe. reply WeylandYutani 13 hours agoparentprevHave you ever considered that the people who vote for the government don&#x27;t agree with you? Who decides what this social contract is? reply zlg_codes 11 hours agorootparent> Who decides what this social contract is?I think about this question a lot. So much of our philosophy of government is about some nebulous \"contract\", as if we agreed to be governed. Sometimes you&#x27;ll be asked, \"Do you believe in the rule of law?\" Why would one need to believe in it? Is it a religion? (I think it is one, personally) Government sometimes likes to claim a \"monopoly\" on violence as well. One generally cannot trade or purchase violence per se, so to act like it&#x27;s a market, or that a government has any truly effective means of preventing the choice to commit violence, is silly to me. Police are typically late to the scene of a crime, after all, and even with their monopoly are terrible at de-escalation or deterring.I think the social contract is different in every society, and changes based on the makeup of the groups. It&#x27;s an amorphous thing that is always referenced, but never spelled out. It irks me that it gets referred to sometimes, but I think if we have them, they should be bidirectional and mutually beneficial.In general, I think a government who expects something but doesn&#x27;t offer anything in return is merely tyrannical. If we&#x27;re going to go on with these fantasies of contracts without signatures and choices without markets, then the least that can be done is for a government to act in good faith that they are protecting or improving the lives of those they gave themselves permission to rule over.As an American I do not see my \"representatives\" representing or helping me. reply memefrog 5 hours agorootparent>I think about this question a lot. So much of our philosophy of government is about some nebulous \"contract\", as if we agreed to be governed.I don&#x27;t think this is actually true? Social contract theory is one of many, and has some pretty fundamental flaws. The theory isn&#x27;t really a philosophy of government, either. It&#x27;s a theory to explain the legitimacy of the state, and essentially answer the question: why do people follow the law? The idea is that people have consented to be governed. It probably made more sense back in the day that we were much less governed than we are now. You had the opportunity to go and live in the woods, essentially ungovernable. And people chose to stay part of society, tacitly agreeing to be governed in exchange for the benefits that come along with it. But there are obvious flaws in that idea. For one thing, minors follow the law and are expected to do so, but can&#x27;t contract.I think &#x27;social contract&#x27; theory is weak.>Government sometimes likes to claim a \"monopoly\" on violence as well. One generally cannot trade or purchase violence per se, so to act like it&#x27;s a market, or that a government has any truly effective means of preventing the choice to commit violence, is silly to me. Police are typically late to the scene of a crime, after all, and even with their monopoly are terrible at de-escalation or deterring.This is again not true. Governments don&#x27;t \"claim a monopoly on violence\". States have been described by theorists as being characterised by their (implicit) claim to a monopoly on the legitimate use of force. There are obvious flaws in that idea, like the legitimacy of self-defence. But it certainly has nothing to do with whether the government has \"any truly effective means of preventing the choice to commit violence\", because it&#x27;s about legitimate use of force. The government can certainly pass laws that determine what is and isn&#x27;t legitimate use of force. reply barrysteve 12 hours agoparentprevIt&#x27;s not fear, or not just fear.It&#x27;s grief.The concept of a corporation and instutional society has died and we don&#x27;t really want to admit it.The government is the last leg standing.. otherwise it&#x27;s just everyone out for themselves.Rational thinking and debate is not leading the way, it&#x27;s following. Getting the kind of verbal and rational agreements the baby boomers enjoyed, in today&#x27;s system, is not happening.It is trivially easy to release personalized media that pumps up the grief and isolates people even more, then offer political and commercial products as a salve.We all pretend the primary cause is an great computing conspiracy, and we are being manipulated by our devices.Primarily, people have changed and tech is capitalizing on a more emotional and feelings based populace, whilst it&#x27;s leaders head for dry land and buy up farmland.The popular Nietschze quote about the death of God and washing away infinite blood, doesn&#x27;t go far enough. The conscious, alienated, knowledge of what should be and the subconscious social experience of grief - combined together - is absolutely deadly. reply mistrial9 14 hours agoparentprev> we accuse the governmentthis is a partisan topic, since +1 million adults in the USA are actively enrolled and paid by the systems that demand identification at each step, most wear a uniform, and their employers are entrenched in the political process.high-minded words plus the air used to say them, equals what? in reality I mean, not on chat boards reply gunapologist99 14 hours agorootparentthe postal service? blue collar welfare recipients? union workers? reply edrxty 14 hours agorootparentWalmart? McDonald&#x27;s? Amazon? I&#x27;m not even sure what we&#x27;re doing whistling about but I guess that&#x27;s the point? reply Anon_Forever 16 hours agoprevIn our lifetime, there will be a government system that will record DNA data for every baby born. It&#x27;ll happen, just a matter of time. reply ImJamal 16 hours agoparentThis is already happening in California (since the 80s). I&#x27;m not sure about other states.https:&#x2F;&#x2F;www.cbsnews.com&#x2F;news&#x2F;california-biobank-dna-babies-w... reply dmitrygr 15 hours agorootparentOne of the many reasons i had told my SO that we have to leave CA before having any kids. reply menus 14 hours agorootparentI understand criticisms against CA, but thinking this does not happen in other states regardless of their political affiliation is naivety at best.The linked article clearly says \"Like many states..\" but does not list which states.The only way you are beating this is by birthing at home and hoping no complications occur. reply ImJamal 14 hours agorootparentWhile other states may also collect DNA, it is amongst the worst since they do not later destroy it.>Some states destroy the blood spots after a year, 12 states store them for at least 21 years.>California, however, is one of a handful of states that stores the remaining blood spots for research indefinitely in a state-run biobank. reply dylan604 14 hours agorootparentprevisn&#x27;t it standard practice to take a blood sample from the newborn? i just automatically assumed this was part of the intended tests for that sample reply ImJamal 14 hours agorootparentThe problem is that it is not just used for running tests to see if the child is healthy.From the article>But while the state may not be making money off your child&#x27;s DNA, Lorey admitted that there is the potential for outside researchers to profit off your child&#x27;s genetic material.And>Law enforcement also can — and does — request identified blood spots. We found at least five search warrants and four court orders, including one to test a child&#x27;s blood for drugs at birth. reply dylan604 14 hours agorootparentThat&#x27;s my point. I just assumed DNA samples were being taken as well. Generously, I&#x27;d assume part of that was some sort of paternity testing since Maury Povich isn&#x27;t on the air any longer. replyjstarfish 15 hours agoparentprevIt&#x27;s always been a bit disturbing that there is no accounting for your tissue or organs after they&#x27;re removed.The cops don&#x27;t need to swipe your DNA from a complimentary drink during questioning. They&#x27;ll just pull your foreskin out of cold storage. reply hammock 14 hours agorootparent> It&#x27;s always been a bit disturbing that there is no accounting for your tissue or organs after they&#x27;re removed.The hospital definitely has an accounting for them. Typically tissue or organs removed are sent to pathology, where they may be further tested and&#x2F;or sold for research, data or other purposes. It&#x27;s a dirty secret that hospitals make a ton of money off of parts of your body that they cut out. reply SoftTalker 14 hours agorootparentprevWho puts a foreskin in cold storage? Though I know of one mother who saved her son&#x27;s for a scrapbook, and I thought that was very strange. reply andersrs 12 hours agorootparentprev> They&#x27;ll just pull your foreskin out of cold storage.It&#x27;s fucked up how normalized circumcision is. Apparently some hospitals do it without even asking. Imagine your son&#x27;s penis being mutilated so some person can have child-sacrfice skin cream. reply dylan604 14 hours agorootparentprev>there is no accounting for your tissue or organs after they&#x27;re removed.something I had never thought about, but what does an organ transplant do to these tests if a sample was taken from a recipient? reply hammock 14 hours agorootparentOrgan transplants have the DNA of the donor, not the DNA of the recipient. reply dylan604 14 hours agorootparentright...so is there a way of taking a sample from the recipient and have dna show up from the donor in a way that would confuse a police inquiry? reply hammock 12 hours agorootparentHave them sample the transplanted organ replyandrewxdiamond 16 hours agoparentprevWhat is the impact of this?I have the same aversion to government power built into my bones but I can’t think of a concrete way the government would be able to abuse this capability to assert power over me. reply noman-land 15 hours agorootparentYou can conjure many insane possibilities in a future unknown.DNA could be tested for traits that are \"more likely to cause criminality\". People with those traits can be more heavily scrutinized and surveiled. Or have their employment opportunities limited.DNA could be multiplied and planted as evidence.DNA could be cloned, or used in scientific testing without consent.DNA could be used for targeted biological warfare.People leave traces of DNA everywhere they go. Who knows what type of detection mechanisms will exist in the future?There&#x27;s also the very likely scenario that a central database like this becomes a prime target and leaks. It&#x27;s borderline guaranteed. reply miguelmota 15 hours agorootparentSocial stratification, genetic elitism, genetic profiling, bio-surveillance, etc. are all very real concerns. Brave New World will become non-fiction. reply drdaeman 12 hours agorootparentReally? What are the signs of this coming?While racism is definitely a thing today, it seem to be dying. Slowly, but the trend is certain: modern society is way less racist than it was, say, a century ago (or worse, a few centuries ago). People stop caring about ethnic origins. The care about cultures and nationalities those days (notice how even the meaning of \"racism\" had shifted to account for this), and those are rapidly becoming less and less correlated with genetics.While people won&#x27;t stop being xenophobic (unless, idk, some miracle or catastrophe happens), in the modern world, when it comes to identity, genes are rapidly losing battle to memes. reply tamimio 13 hours agorootparentprev>There&#x27;s also the very likely scenario that a central database like this becomes a prime target and leaks.Leaks&#x2F;bugs already blamed, in the article:>GEDmatch tools that provided access to DNA profiles that were opted out of law enforcement searches, which she described as “a bug in the software.” reply drdaeman 12 hours agorootparentprev> DNA could be used for targeted biological warfare.I&#x27;m no biologist, but I&#x27;ve heard that ethnic bioweapons (in a way portrayed in science fiction or conspiracy theories) are basically a myth and&#x2F;or convenient propaganda fuel. reply greedo 11 hours agorootparentRead The White Plague by Frank Herbert. Scared the heck out of me as a teen. Considering how humanity still hasn&#x27;t escaped tribalism even after two hundred millennia, just the thought of genealogically targeted viruses are a wonderful thought. reply noman-land 11 hours agorootparentprevI&#x27;m far from a biologist as well but we&#x27;re talking about an unknown future. We&#x27;re entering an era of personalized medicine. Maybe you can&#x27;t target an ethnic group but you could target a specific person. You could theoretically poison the water in a whole city to target one person. Maybe not today. Maybe not tomorrow. But in 10 years? 20 years? 50 years? reply SpaghettiCthulu 9 hours agorootparentprevThere are known cases of certain groups having increased protection against certain diseases: https:&#x2F;&#x2F;www.nature.com&#x2F;articles&#x2F;nature.2011.9342Could there be some genes already circulating in certain ethnicities that would protect from a specially designed virus? reply m463 14 hours agorootparentprevThey could clone you, force the clone to perform a crime, then arrest you for the crime based on dna evidence. reply drdaeman 12 hours agorootparentMost sci-fi stories involving human cloning that cover legal aspects seem to predict that laws will be updated to account for a possibility that crime was performed by a clone. Laws tend to lag behind technologies, but not too drastically.It&#x27;s also much cheaper to just fabricate evidence (cf. XKCD #538 aka $5 wrench vs security). Worked well since time immemorial, and doesn&#x27;t leave a clone. reply plagiarist 13 hours agorootparentprev> DNA could be tested for traits that are \"more likely to cause criminality\". People with those traits can be more heavily scrutinized and surveiled. Or have their employment opportunities limited.I don&#x27;t think you need to consider other possibilities, this is a good enough example. And unfortunately it is not insane in the sense of paranoid, because this is what Nazis would be doing with it. Or NK jailing entire families for one member&#x27;s crimes but basing it on DNA matches. reply Sohcahtoa82 11 hours agorootparentYou don&#x27;t have to be paranoid to think police wouldn&#x27;t do that. They already are.https:&#x2F;&#x2F;projects.tampabay.com&#x2F;projects&#x2F;2020&#x2F;investigations&#x2F;p...TL;DR - Pasco County in Florida was using \"predictive policing\", where based on various statistics, they would predict who would commit crimes and harass the ever-loving shit out of them until they moved out of the county. reply donmcronald 15 hours agorootparentprev> What is the impact of this?Maybe guilt by association? Imagine going into a business, having some DNA based system identify you, and being denied entry because the majority of your relatives are criminals.Realistically, I&#x27;d say the opposite will happen though. Being related to someone wealthy or influential will automatically get you special treatment and you won&#x27;t even have to ask \"do you know who I am?\"> but I can’t think of a concrete way the government would be able to abuse this capability to assert power over meI think the war on drugs in the US is a pretty good example. If I say it was used to marginalized and disenfranchise one specific group of people, everyone knows what group I&#x27;m talking about, so, IMO, that&#x27;s a good indication it was intentionally targeted at that group.Now imagine the same thing, but you&#x27;re in the targeted group and, instead of having the police roaming your neighbourhood, you&#x27;re simply locked out of all the \"opt-in\" systems that are necessary to have a decent life; banking, real-estate, licensing, etc.. Maybe you&#x27;re even prevented from shopping at stores that have reasonable prices and have to overpay for food because you&#x27;re a \"bad person\".Opting in to beneficial systems, with less beneficial defaults, is the new way of discriminating IMO. reply gunapologist99 15 hours agorootparentprevCheck out a great sci-fi movie named Gattaca.Remember that you shed cells everywhere you go, so soon the tech will be advanced enough where we can do nearly real-time DNA matching. If you sneeze, a sniffer could pick that up and figure out who you are.Imagine a camera that films not things that are visible, but people who were there, at that protest, in that store, in that hospital, boarding that plane. It&#x27;s practically irrefutable (or currently legally is, even though it&#x27;s inherently flawed.)And you can never change that identifier. Once that data is out, it&#x27;s out.The last headline in that article, \"Solving Crime Before It Happens\" could have easily been entitled \"Minority Report\" (another great sci-fi movie that&#x27;s not so fictitious anymore.) reply foxyv 15 hours agorootparentThe thing that broke my brain about Minority Report is, that after stopping the murder, they could have just let the people go a few days later. The person would know they couldn&#x27;t get away with the crime and then wander off to take up pottery or whatever. Instead they Haloed them all for no good reason. No victim to seek retribution and no reason to restrain them any more.At the same time, when you look at real life justice systems through the same lens we look at Gattaca and Minority Report it looks even more bizarre. We are pretty much running criminal training camps almost designed to make people more criminal, and then after they get out of the camps we structure our society to almost force them back into crime to survive. It&#x27;s bonkers. reply pessimizer 14 hours agorootparentIt seems bonkers, until you realize that that person who gets 5 years in prison for his 4th petty shoplifting offense is generating hundreds of thousands of dollars of checks being written to people who work within and who are contractors for the justice system. And on the streets, fighting crime is another place where massive checks are written in order to protect the public from small-time street and property crime.If people are robbing other people for $100, especially in 2023 dollars, that&#x27;s too stupid to be a failure of society, that has to be because small-time crime is a resource for a lot of justice system-connected industries, and as long as maintaining the level of it doesn&#x27;t pit those industries against real estate interests, they can lobby for crime.I think there are really three kinds of crime:1) Crimes of need, where people need to feed themselves or their loved ones, so resort to crime because they&#x27;re willing to risk their lives and their freedom,2) Crimes of stupidity, where people just don&#x27;t understand how unlikely they are to get away with something, or how bad the punishment could be, so they undervalue the cost of undertaking those crimes for the benefit they stand to gain, and3) Crimes of compulsion, where people have enough, and mostly understand the costs and the benefits, yet risk their lives and freedom for more for some irrational reason; degenerate gamblers.We can prevent all crimes of need immediately and easily. It&#x27;s more difficult to prevent crimes of stupidity, but pouring education into everyone is the answer. It&#x27;s idiopathic crimes of compulsion that are hard to deal with, because people have wildly different reasons for their compulsions.As a society, we pour all of our efforts into crimes of compulsion, the only kind of crime that we&#x27;re virtually guaranteed to be ineffective at stopping, and bad at controlling. Where the discussions between political factions are about whether we should kill them, give them therapy, drug them, corral them far away from people, let you look them up on a website after they&#x27;re free, refuse them work, let them vote, etc., in the context of assuming that the vast majority of crime has unique causes and solutions. To assume that, we have to ignore that people are still sticking other people up for $100. reply whatshisface 14 hours agorootparent>pouring education into everyone is the answer.That sounds good until you realize that algebra won&#x27;t help... You&#x27;re proposing a \"scared straight\" program, essentially. reply gunapologist99 14 hours agorootparentprevYou forgot the crimes of \"I can get away with it\", or else perhaps you don&#x27;t live in San Francisco or Jalisco or Sinaloa. reply rolph 14 hours agorootparentprevthought crimes:https:&#x2F;&#x2F;repository.law.umich.edu&#x2F;mlr&#x2F;vol118&#x2F;iss5&#x2F;4&#x2F;https:&#x2F;&#x2F;repository.law.umich.edu&#x2F;cgi&#x2F;viewcontent.cgi?article... [PDF] reply Joeri 14 hours agorootparentprevPoliticians don’t get votes for reducing crime, they get votes for being tough on crime. Building out ever larger repression systems instead of investing in prevention and rehabilitation is the better political strategy. reply anigbrowl 15 hours agorootparentprevBut it&#x27;s very very profitable. reply ROTMetro 15 hours agorootparentprevIf you are called the &#x27;Justice&#x27; system you are out of a job when there&#x27;s no longer a need to implement &#x27;Justice&#x27; because you solved the issue higher up the food chain. Why would they put themselves out of work? reply marcosdumay 15 hours agorootparentprevRight now, the most likely outcome is that you will get convicted of a crime somebody else did because you \"won\" the lottery of being the false positive on the database. reply code_duck 15 hours agorootparentprevThere could be various forms of discrimination by the government or private entities based on genetic characteristics. For instance, you could be denied health insurance or required to undergo a therapy or treatment based on genetic traits. If a government was to become more abusive, they could practice some form of eugenics such as forced sterilization. reply donmcronald 15 hours agorootparent> undergo a therapy or treatment based on genetic traitsPerson X has a genetic predisposition that results in anger control issues in 87% of people, so they must subscribe to weekly anger management counselling or they&#x27;ll be denied access to public areas such as malls and schools. The government certified and licensed suppliers are A, B, C.Imagine the profits of legally compelling people to buy your stuff. History shows there would be a long lineup of people eager to exploit something like that. reply memefrog 5 hours agorootparent87% is a huge number. If person X has that genetic predisposition then what&#x27;s wrong with that rule? If as a society you allow the government to impose &#x27;weekly counselling&#x27; on people for some reasons, then you open it up to being imposed on people for other reasons too.I don&#x27;t think the government should be imposing anger management counselling on people in the first place. That has nothing to do with concern about DNA, and everything to do with concern about the government being able to tell me what to do when I&#x27;ve not been convicted of a crime. reply donmcronald 3 hours agorootparent> If person X has that genetic predisposition then what&#x27;s wrong with that rule?A lot of it would be based on junk science and the low rate of offenders, because the diagnosis is bullshit, would be touted as evidence of the value the program is providing. reply memefrog 3 hours agorootparentSo the problem is basing policy on junk science. Is basing policy on junk science okay in some fields, but suddenly bad when it applied to genetics? Of course not.What if it&#x27;s not based on junk science, but on good science? reply zlg_codes 14 hours agorootparentprevI think in such a system, the people would rightfully target the law as the enemy and ramp things up until enforcing the law becomes too dangerous to attempt. reply pessimizer 14 hours agorootparentToo late. There&#x27;s too much surveillance - how would you even discuss it with each other? The first thing they&#x27;re going to do is target your phone and computers. Expect terrorism charges. reply RandallBrown 15 hours agorootparentprevIt will be harder to get away with crimes if everyone&#x27;s DNA is on file.Of course if you recently visited the place where a crime took place you might also be falsely accused.I suppose they could also use it to track your movements if there was some way to massively collect DNA samples from the environment. reply rolph 15 hours agorootparentThere is some way to massively collect DNA samples from the environment.https:&#x2F;&#x2F;www.newscientist.com&#x2F;article&#x2F;2375624-air-pollution-m...https:&#x2F;&#x2F;www.bbc.com&#x2F;future&#x2F;article&#x2F;20230606-how-air-pollutio...https:&#x2F;&#x2F;www.sciencedirect.com&#x2F;science&#x2F;article&#x2F;pii&#x2F;S096098222...these can be deployed at great density in an array providing granularity made to order. reply jart 13 hours agorootparentWow this sounds like a slam dunk for my next YC application. reply pessimizer 14 hours agorootparentprevOr they could bust a place where religious services were held in secret, or an apartment where gay people gather to socialize, or an underground abortion clinic, suck up the DNA and get warrants for everybody.That isn&#x27;t being falsely accused, it&#x27;s worse. reply WarOnPrivacy 13 hours agorootparentprev> It will be harder to get away with crimes if everyone&#x27;s DNA is on file.A core problem with any surveillance is that it is disproportional and only available to the powerful. If access to surveillance were as universal as possible, powerful interests would suddenly find the will to wind it back. reply sublinear 15 hours agorootparentprevThey can derive health data from your DNA. Say if we finally move to \"single payer health care\"... but this is america so you get a tax penalty for being more prone to illness.Now imagine they have the wrong DNA on file for you! reply peyton 14 hours agorootparentprevIf you are born in an area that later hosts a separatist movement, you can be denied freedom of movement using a saliva swab. I believe the mostly likely abuse is to erode support for political factions. reply SoftTalker 14 hours agorootparentprevI hate to go Godwin but within living memory we have an example of what governments do if they have (or think they have) information on your heritage or genetic background.Or go back a few more generations, even here in the USA you might legally have been declared to be 3&#x2F;5 of a person.You think people have really changed since then? I don&#x27;t. reply memefrog 5 hours agorootparent>Or go back a few more generations, even here in the USA you might legally have been declared to be 3&#x2F;5 of a person.Oh my god can we stop this absurd meme. Nobody was ever &#x27;declared to be 3&#x2F;5 of a person&#x27;. The point of the 3&#x2F;5 compromise was to reduce the power of states with slaves. It was purely about counting the population of the state for the purpose of assigning seats in Congress. To suggest that it was racist to multiply the number of slaves by 0.6 before adding them to the non-slave population is truly insane. If it had been 1.0 then it would have given slave-owners more political power. reply mrguyorama 14 hours agorootparentprevMany states in america had laws that would allow for castrating \"undesireables\" and not that long ago. reply pessimizer 14 hours agorootparentprevDefinitely had, not just think they had: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;IBM_and_the_HolocaustLack of a detailed census in your country was indisputably protective for Jews during the Holocaust. Plenty of people only discovered themselves that they had matrilineal Jewish descent during the Holocaust, because the Nazis had all those punchcards. reply throw7 15 hours agorootparentprevbaby steps... and then you have the movie gattaca. reply dylan604 14 hours agorootparentprevthose very bones with that built in aversion contain the very identifiers used to hunt you down reply Vvector 15 hours agorootparentprevWatch Gattaca. reply zlg_codes 15 hours agoparentprevAnd that system deserves to be targeted, because nobody deserves access to that data. reply arsome 15 hours agorootparentBarely event matters, if your great aunt sends her DNA to some online heritage service, the game is basically over. Unfortunately, like it or not, your DNA isn&#x27;t yours. reply drdaeman 12 hours agorootparent> Unfortunately, like it or not, your DNA isn&#x27;t yours.The current trends seem to go against this, saying that even things like image, voice, or memories about us are all somehow private even in a public setting, and cannot be used without a permission of their owner. DNA is essentially in the same category - even more so, we leave it just about everywhere, yet most people think about it as something extremely intimate, much more so than a picture from a public venue (where opinions sort of diverge).And whenever I agree on disagree, I can totally understand why this is happening and why the current trends are like this. It&#x27;s basically a reaction of the society trying to protect itself from abuse by the entities of similar (large) scale.All this stuff is basically a (relatively) new dilemma of the information age, where we&#x27;ve gained an ability to store, analyze and transfer large arrays of data efficiently. Paired with technologies (such as cameras or sequencers) becoming more affordable to deploy at scale.Sadly, consumer technologies (empowering \"normal\" people) drastically lag behind business and government tech, so before your casual Joe ever gets a chance to have some meaningful (and not really privacy-breaking; although there&#x27;s rarely an incentive to develop tech that doesn&#x27;t break this) use cases, large corporations and governments ruin everything. reply zlg_codes 15 hours agorootparentprevPerhaps not in the current legal climate, but those can be changed. Since DNA is the source code to your body, I think we&#x27;re in for some interesting times. It can be argued that your DNA is a part of you, since it made you, and it can be made illegal to gather or even sequence our DNA unless certain thresholds are crossed.Like it or not, politics is not a singular immutable thing. We can reframe things, just as governments do to justify their garbage. Society is but putty, and we can mold it to our liking, or sit quietly like livestock and await government to decide what we&#x27;re allowed to think and feel. reply PeterisP 13 hours agorootparentIt seems that the point which parent post wanted to make with \"your DNA is not really yours\" is that matching your DNA does not really need your DNA, as the DNA of your relatives (e.g. that aunt which opted-in to some genetic testing) is sufficient - your DNA isn&#x27;t really yours because all your blood relatives share big parts of it, so their consent to use their DNA effectively provides most of your DNA as well. reply dylan604 14 hours agorootparentprevEven if we change it today, wouldn&#x27;t all of the docile little sheep that used ancestry.com or 23andMe type sites provide such a baseline that for generations future humans could be traced back. Supposedly, they can track back a very large portion of the population to Genghis Khan reply tehlike 16 hours agoparentprevnot quite needed. People already volunteer this information. It only takes one relative to identify with reasonable certainty who you are based on a random blood sample because of this. reply andersrs 12 hours agoparentprevHow do you know it&#x27;s not already happening? It&#x27;s standard practice to do bunch of &#x27;tests&#x27; done at birth. reply lowbloodsugar 16 hours agoprev [–] Using a back door. I expect charges and jail time, as is done with other CFAA violators like Aaron Schwartz. &#x2F;s replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Forensic genetic genealogists are using a loophole in the GEDmatch DNA database to access DNA data from individuals who have opted out of sharing with law enforcement.",
      "This technique has helped solve cold cases, but it raises concerns about privacy and the lack of regulation.",
      "Ancestry and 23andMe do not allow law enforcement access, but MyHeritage and GEDmatch do with user consent, and GEDmatch has a loophole for protected profiles."
    ],
    "commentSummary": [
      "The use of DNA data by law enforcement raises concerns about privacy violations and abuse of genetic information.",
      "There is a loophole that allows genealogists working with law enforcement to access profiles of individuals who have opted out of sharing their DNA.",
      "The lack of public outrage and political attention towards these privacy violations is concerning and raises broader questions about government oversight, personal freedoms, and ethical issues associated with DNA databases."
    ],
    "points": 209,
    "commentCount": 156,
    "retryCount": 0,
    "time": 1692379693
  },
  {
    "id": 37174758,
    "title": "Worldcoin ignored initial order to stop iris scans in Kenya, records show",
    "originLink": "https://techcrunch.com/2023/08/15/worldcoin-in-kenya/",
    "originBody": "Login Join TechCrunch+ Search TechCrunch+ Startups Venture Security AI Crypto Apps Events More (opens in a new window) (opens in a new window) (opens in a new window) (opens in a new window) (opens in a new window) Link Copied Crypto Worldcoin ignored initial order to stop iris scans in Kenya, records show Annie Njanja@annienjanja / 1:54 PM EDT•August 15, 2023 Comment Image Credits: Worldcoin (opens in a new window) Months before Kenya finally banned iris scans by Sam Altman’s crypto startup Worldcoin, the Office of the Data Protection Commissioner (ODPC) had ordered its parent company, Tools for Humanity, to stop collecting personal data. The ODPC had in May this year instructed the crypto startup to stop iris scans and the collection of facial recognition and other personal data in Kenya, a letter sent to Worldcoin and seen by TechCrunch shows. Tools for Humanity, the company building Worldcoin, did not stop taking biometric data until early this month when Kenya’s ministry of interior and administration, a more powerful entity, suspended it following its official launch. Worldcoin’s official launch led to a spike in the number of people queuing up to have their eyeballs scanned in exchange for “free money,” drawing the attention of authorities. The letter shows that ODPC had instructed Worldcoin to cease collecting data for intruding on individuals’ privacy by gathering biometric data without a well-established and compelling justification. Further, it said Worldcoin had failed to obtain valid consent from people before scanning their irises, saying its agents failed to inform its subjects about the data security and privacy measures it took, and how the data collected would be used or processed. “Your client is hereby instructed to cease the collection of all facial recognition data and iris scans, from your subscribers. This cessation should be implemented without delay and should include all ongoing and future data processing activities,” said Rose Mosero, in a letter to Tools for Humanity that outlined the concerns. The letter, addressed to Ariana Issaias of Coulson Harney (Bowmans), the law firm representing the crypto startup, also restricted Worldcoin from processing the collected data further and instructed the safe storage of collected information. Details of ODPC’s attempt to stop the collection of biometric data have emerged in a new petition filed before the High Court by the data protection authority. The deputy data commissioner of compliance, Oscar Otieno, in an affidavit filed in court in August, said that it started the “assessment” of the respondents (Tools for Humanity and Sense Marketing Limited) in 2022. In May this year, it carried out further inquiry on their processing activities and directed that they cease processing sensitive personal data immediately. “The applicant (ODPC) is aware that despite the suspension and directive to cease processing of personal data, the respondents continued to process the said personal data. It took the public directive by the cabinet ministry of interior and coordination to halt the operations of the respondents (Tools for Humanity and Sense Marketing),” said Otieno in the affidavit. The ODPC sought the court’s help to have Worldcoin compelled to preserve the data it collected from Kenyans, as it finalizes (the multi-agency) investigations around security, privacy, and the legality of using “financial incentive” to obtain biometric data. Since the filing of the petition, the High Court has barred Worldcoin from collecting data from Kenyans and directed it, its agents, its representatives and its employees to preserve all information collected locally from April 19 to August 8. This has emerged after Worldcoin activities were suspended in Kenya on August 2, by Kithure Kindiki, the country’s cabinet secretary for interior and national administration. Kindiki said the ban will remain in place until the authorities determine “the absence of any risks to the general public whatsoever.” “Relevant security, financial service and data protection agencies have commenced inquiries and investigations to establish the authenticity and legality of the aforesaid activities, and the safety and protection of the data being harvested, and how the harvesters intend to use the data,” said Kindiki. Worldcoin claims to be creating a new “human identity (World ID) and financial network” through iris scans done by “Orb,” the company’s spherical scanners to “verify your World ID,” and its own cryptocurrency “WLD.” Kenya was one of the first countries where Worldcoin launched sign-ups and had been one of the biggest markets for takeup. After the global official launch at the end of July, locals who had received the tokens could sell them for USDT (the stablecoin pegged to the U.S. dollar) on crypto exchanges or to “brokers” in exchange for cash. In Kenya, that promise of “free money” quickly spread across the country, leading to an influx of people at the recruitment (Orb) stations, which drew the attention of top government officials, leading to the suspension of Worldcoin iris scans. The crypto startups said it hopes to resume activities in Kenya soon. Alongside the many issues that skeptical peers in the technology industry have been raising about the Worldcoin project and its bigger business ambitions, there are growing concerns about how those efforts to build a biometric database using the promise of free cryptocurrency have exploited economically disadvantaged people. Also, some of these issues have been there in plain sight. An MIT Technology Review investigation — published last year — found that it “used deceptive marketing practices, was collecting more personal data than it acknowledged, and failed to obtain meaningful informed consent.” Please login to comment Login / Create Account TechCrunch Disrupt Sept 19-21 San Francisco, CA Register Now Sign up for Newsletters See all newsletters (opens in a new window) Daily Week in Review Startups Weekly Event Updates Advertising Updates TechCrunch+ Announcements TechCrunch+ Events TechCrunch+ Roundup Email Subscribe (opens in a new window) (opens in a new window) (opens in a new window) (opens in a new window) (opens in a new window) Copy Tags africa kenya Worldcoin Crypto Worldcoin ignored initial order to stop iris scans in Kenya, records show Annie Njanja 1:54 PM EDT•August 15, 2023 Months before Kenya finally banned iris scans by Sam Altman’s crypto startup Worldcoin, the Office of the Data Protection Commissioner (ODPC) had ordered its parent company, Tools for Humanity, to ... AI How Index Ventures jumped to the front of the AI GPU line Connie Loizos 3:10 AM EDT•August 19, 2023 Earlier this week, the New York Times shone a light on some of the desperation that founders are experiencing as they try and fail to secure compute power for their nascent artificial intelligence ... Transportation Cruise told by regulators to ‘immediately’ reduce robotaxi fleet 50% following crash Kirsten Korosec 9:21 PM EDT•August 18, 2023 Cruise, the self-driving car subsidiary of GM, has been asked to reduce its robotaxi fleet by 50% in San Francisco following a crash Thursday night with a fire truck. The California Department of M... Social Zepotha is huge on TikTok, but it’s no Goncharov Morgan Sung 4:36 PM EDT•August 18, 2023 The seminal 1987 horror film “Zepotha” is back on TikTok. Reaction videos to the film’s gory forest scenes dominate user feeds. TikTok users are digging through their parents’ wardrobes to recreate... AI AI2 drops biggest open dataset yet for training language models Devin Coldewey 4:29 PM EDT•August 18, 2023 Language models like GPT-4 and Claude are powerful and useful, but the data on which they are trained is a closely guarded secret. The Allen Institute for AI (AI2) aims to reverse this trend with a... Social Roblox faces a new class action lawsuit alleging it facilitates child gambling Taylor Hatmaker 4:05 PM EDT•August 18, 2023 In a new class action lawsuit filed in the Northern District of California this week, two parents accuse Roblox of illegally facilitating child gambling. While gambling is not allowed on the platfo... TechCrunch Disrupt 2023 Going to TechCrunch Disrupt 2023 is cheaper when you bundle Lauren Simonds 4:00 PM EDT•August 18, 2023 Anyone with a Costco card knows you save more when you buy in bulk. Now apply that same theory to TechCrunch Disrupt 2023, and you can save a bundle when you take your team, your clients or your st... Market Analysis Is JPMorgan turning a corner on climate finance? Tim De Chant, Dominic-Madori Davis 3:45 PM EDT•August 18, 2023 JPMorgan Chase doesn’t have the best reputation in the climate sector. But there’s some evidence to suggest the bank is turning a corner. Apps Bluesky buckled following Twitter/X’s announcement about the end of blocks Sarah Perez 3:29 PM EDT•August 18, 2023 Twitter, er X, competitor Bluesky buckled following Elon Musk’s announcement that X will no longer support the “block” function in favor of mutes only. Users on Bluesky were seein... Startups Bad CTOs mean startups have millions of dollars’ worth of cap table dead weight Haje Jan Kamps 3:05 PM EDT•August 18, 2023 Welcome to Startups Weekly. Sign up here to get it in your inbox every Friday. This week, I’ve been looking at the evolution of tech startups. The journey from two or three co-founders to an exit o... Transportation Cruise robotaxi involved in a crash with fire truck, one passenger injured Kirsten Korosec 2:58 PM EDT•August 18, 2023 A Cruise robotaxi and an emergency vehicle crashed late Thursday night and left a passenger injured. The crash is the latest in a string of incidents that occurred this week after winning approval ... Space SpaceX’s new Bandwagon program is a big threat to small launch providers Aria Alamalhodaei 1:49 PM EDT•August 18, 2023 SpaceX is expanding its rideshare program with a new series of missions aimed at meeting the demand for launches to mid-inclination orbits. The new program, which was quietly announced at a space i... Space Pentagon urges US space companies to stay vigilant against foreign intelligence Aria Alamalhodaei 1:24 PM EDT•August 18, 2023 Investments, joint ventures or acquisitions could be vehicles for foreign adversaries to gain a foothold in the U.S. space industry, the Pentagon said in a new bulletin published today. The new gui... Venture TechCrunch+ Roundup: Reaching $1M ARR, tech job market rundown, women-led VC firms Walter Thompson 1:00 PM EDT•August 18, 2023 Two years ago, unicorns roamed the earth in herds so large, they shook the earth from Palo Alto to San Francisco. Startups I’ve never seen so many crap startups Matthew Panzarino, Neesha A. Tambe 12:54 PM EDT•August 18, 2023 Startups are so full of shit right now. The pipes are jammed and there are so many companies that are full to bursting with the desire to un-pack them. We’ve just been through determining the sha... Apps Musk says X’s ‘block’ feature is going away Brian Heater 12:46 PM EDT•August 18, 2023 Part of the X (née Twitter) roadmap? Off-handed reply? Simple attempt to get a rise out of people? Time will tell. The one thing we can say for sure is that X’s owner responded to a post on the pla... Market Analysis As net retention plummets, AI could be the savior software companies need Alex Wilhelm 12:30 PM EDT•August 18, 2023 There could be good news just around the corner, provided services with generative AI become as powerful as expected, and are as in demand as hoped. Apps Amazon tries to boost its TikTok-like shopping feed by asking influencers to submit videos — for $25 each Aisha Malik 12:16 PM EDT•August 18, 2023 Amazon is looking to boost its TikTok-style “Inspire” shopping feed and is offering to pay influencers $25 a video, but some creators are mocking the low rate. The company sent out an e... Enterprise SUSE goes private again Frederic Lardinois 12:04 PM EDT•August 18, 2023 SUSE, the German Linux vendor and acquirer of enterprise tools like Rancher and NeuVector, has had its fair share of owners since it was founded in 1992. There was Novell, which acquired it in 2003... Media & Entertainment How to cancel Disney+ and avoid the price hike Lauren Forristal 11:29 AM EDT•August 18, 2023 Many subscribers are fed up with Disney+ and its price hikes. The streaming service announced last week that it will increase the price of its ad-free plan on October 12, raising the tier by about ... Crypto Checkout.com cuts ties with Binance, which is mulling legal action in response Jacquelyn Melinek 11:28 AM EDT•August 18, 2023 Credit cards payments processor Checkout.com is no longer servicing Binance, the world’s largest crypto exchange, a spokesperson from the exchange told TechCrunch. “There is no impact on our servic... About TechCrunch Staff Contact Us Advertise Crunchboard Jobs Site Map Legal Terms of Service Privacy Policy TechCrunch+ Terms Your Privacy Choices Code of Conduct About Our Ads Trending Tech Topics Tech Layoffs ChatGPT Threads FAQ Facebook (opens in a new window) Twitter (opens in a new window) YouTube (opens in a new window) Instagram (opens in a new window) LinkedIn (opens in a new window) Mastodon (opens in a new window) © 2023 Yahoo.All rights reserved.Powered by WordPress VIP (opens in a new window) .",
    "commentLink": "https://news.ycombinator.com/item?id=37174758",
    "commentBody": "Worldcoin ignored initial order to stop iris scans in Kenya, records showHacker NewspastloginWorldcoin ignored initial order to stop iris scans in Kenya, records show (techcrunch.com) 200 points by JoachimS 21 hours ago| hidepastfavorite176 comments pierat 15 hours agoHere in tech bro world we have so many innovations for you! Why not try our:- Imaginary scam money (in 17,382 flavors, including eyeballs)!- Expensive unregulated taxi!- Expensive unregulated hotel!- Picture of monkey (formerly valuable)!- Imaginary restaurant that serves bad food!- Expensive unregulated television!- Another picture of monkey (never valuable)!- Twitter but it sucks now!- The news but it also sucks and steals your personal information!Plus, try our greatest achievement yet:- Expensive unregulated scam concert tickets!EDIT: the real trend with Silly-Con Valley is that every major venture is an adventure in removing regulations that We (collectively) bought with 10&#x27;s of thousands of lives. And these VCs come through, and seek to destroy regulation for a pound of profit, and some scraps to others.These services always start cheap since they are subsidized by VCs to buy growth and scale. It soon will change, and get worse and cost more, if not outright re-regulated out of existence.... For the same reasons why the regulation was there in the first place.There&#x27;s a few companies working on true innovations. But most SV is just remixes on \"deregulation and illegality as a service\" reply CamelCaseName 14 hours agoparentPeople forget how terrible the experience was prior to these companies, and when the industry changes, they point to incumbents forced to innovate as a way to say the tech companies were unnecessary.Taxis is the low hanging fruit, non-hotellike rentals is another, cable TV&#x2F;DVD rentals is a third.However, I have no explanation for NFTs. reply Hoasi 14 hours agorootparent> However, I have no explanation for NFTs.Simple. A multi-level-marketing scheme build on the free money&#x2F;web3&#x2F;crypto trend, successfully taking the existing art market speculative practices into the digital realm. reply ChadNauseam 15 hours agoparentprev> - Expensive unregulated taxi!> - Expensive unregulated hotel!> - Expensive unregulated television!All of these are better than the alternative, or people wouldn&#x27;t use them reply cognaitiv 15 hours agorootparentI feel like the people who complain about Uber&#x2F;Lyft from a service perspective never used taxis extensively. Living in Chicago (Lakeview) for years while traveling for work made me absolutely hate taxis. When scheduling, they would no-show at 5 in the morning causing missed flights. Rides from the airport would require standing in line many times over an hour, especially on a Thursday night. They all absolutely reeked of body odor. The drivers would consistently scam “card machine broken, cash only” or “I forgot to turn on the meter” and unless you threatened to report them, they would take advantage of passengers. Drivers were sketchy and rarely matched the credentials on the taxi medallion.I’ve also lived in areas where taxi service was essentially nonexistent. I wonder how many DUIs and related accidents have been prevented by ride share apps.Traveling abroad in Europe the apps work simply regardless of my command of the local language to explain my destination and keeps the drivers honest so they aren’t taking “the long way”.How is anyone supporting taxis as superior to this? There was absolutely no accountability.From an business model perspective, I would wager that eventually you could get this to a point of sustainability that doesn’t require armies of engineers and various support staff, a la Twitter.Just don’t try to say taxis were better. reply perardi 14 hours agorootparentLiving in Chicago (Lakeview) for years while traveling for work made me absolutely hate taxis.Hello from up here in Edgewater.I realize there are huge problems with the finances and liabilities of Uber…but taxis before ride shares were a pure nightmare, from a UX perspective.Uber brought us…* Deterministic pricing (for the most part)* Flawless ubiquitous credit card transactions* The ability to point to a random location on a map and just magically have a car take you thereI know Uber’s finances are shit…but you know what? I would gladly pay more, because you get a car right to your door that delivers you to an arbitrary location with nobody extorting you for extra physical cash. reply version_five 10 hours agorootparentprevAgreed. I take taxis now in many places because they&#x27;re now better than uber, but pre-uber they were not. What I used to like best about taking uber was sticking it to the taxi industry. They were a textbook \"disruptor\". I&#x27;m glad there&#x27;s a credible threat to taxis that means they had to improve and look over their shoulder. In the markets I travel frequently, uber sucks now though, and I&#x27;ve gone back to taxis, which also suck, just less, and are way better than the pre-uber days. reply ever1337 13 hours agorootparentprevAnecdotally, ive personally lived in areas (california central valley, rural new england) where lyft and uber were virtually nonexistent and local taxi companies were the only option. ive had horrible experiences \"reserving\" rides with uber and lyft only to have nobody show up at the designated time, leading to missed trains. Taxis have always been far more reliable for me in rural areas, provided I call in advance and within their hours of operation. when i&#x27;m in cities, I find public transit to be more sensible terms of cost and reliability than any other option. I don&#x27;t mind paying cash, I prefer it.I cant help but feel as though a lot of the people defending these &#x27;rideshare&#x27; companies on HN are living in coastal city bubbles. It&#x27;s simply not an option in many places, and the apps will outright lie to you that they&#x27;re able to get you a ride. reply monetus 12 hours agorootparentI live in a rural area, where the taxis, Uber, and lyft compete. The taxi companies don&#x27;t offer calls in advance, or reserved rides, not one or four companies that could cover my area. You would have to hire a limosouine driver. Lyft is by far cheaper on average, but consistently fewer drivers. Hilariously, Uber is the reliable service for reservations. reply engcoach 4 hours agorootparentprevTaxis in SF were the absolute worst. I haven’t tried them since Uber rolled out and rightfully stole business reply NegativeK 14 hours agorootparentprevI used taxis in Chicago maybe three times.But while rideshares can be better for me than listening to some taxi driver go off on some misogynist rant, that doesn&#x27;t mean that they&#x27;re better once you start taking into account wage problems, increase in CO2 production, etc.But seriously, taxis in Chicago can get fucked. They were so terrible. reply cognaitiv 13 hours agorootparentI don’t buy wage problems because my estimate on Chicago taxis was most medallions were held by investors who were not drivers and most drivers were undocumented with less protection than Uber provides.I buy the CO2 aspect. Many cases where Uber is now more convenient than public transport vs. El is better than a taxi reply gardenhedge 14 hours agorootparentprevSome taxis use apps which give all the same benefits plus any local regulations in place. reply dmd 13 hours agorootparentShow me one taxi service anywhere in the world that did that before Uber forced them to to compete. reply pierat 15 hours agorootparentprevGiven that Uber&#x27;s only quarter in the black was the most recent, AND most of it was from capitalized assets, well, it&#x27;s just a failing business, but scaled big!It&#x27;s a common trope for VC&#x27;s to fund, fund, fund for that sweet hockey stick growth. And they know that it takes money to make money.So yeah, the fact that these businesses have been better is because they were subsidized by VC&#x27;e to get you as a customer. Enshittification process is already well full in effect, and will get more expensive and worseBut hey, Uber cashed out for the early Ponzi investors. Probably won&#x27;t pan out past this point. reply TylerE 15 hours agorootparentprevAnecdotally, amongst my peer group AirBnBing is waaaay down. Pricing is out of control (even more than hotels), and there&#x27;s usually a long chore list AND expensive cleaning fee on top. reply tomp 15 hours agorootparentTrue, but I buy AirBnB specifically for things that you can’t get in a hotel.An entire villa with pool in Tuscany. An apartment with a kitchen. A flat with the view of Acropolis in Athens (maybe you can get that in a hotel, but you can never be sure lest they rebook you to a different room.) reply TylerE 14 hours agorootparentAt least in the US, those sort of places don&#x27;t really exist, or if they do the pricing is outrageous (like $1000+&#x2F;night).Suite&#x2F;extended stay hotels with full kitchens are fairly common here, too. reply CamperBob2 14 hours agorootparentAt least in the US, those sort of places don&#x27;t really exist, or if they do the pricing is outrageous (like $1000+&#x2F;night).Not true in the slightest. This place ( https:&#x2F;&#x2F;www.airbnb.com&#x2F;rooms&#x2F;48299044 ) was an incredible bargain the last time I was in Scottsdale for a couple of weeks, even at $220&#x2F;night + fees. reply FireBeyond 14 hours agorootparentI saw $220&#x2F;night for that place plus fees on the listing, but the moment I selected any non weekday it jumped to $402&#x2F;night + fees. Fees which amount to an additional $507 for a 3 night stay ($295 cleaning, $212 for AirBnB).All in, my stay is $1,900 for 3 night. $633&#x2F;night. Might not be $1,000 a night, but definitely not as bargain-ish as you make it out to be.https:&#x2F;&#x2F;imgur.com&#x2F;3dJOGNn reply CamperBob2 12 hours agorootparentYeah, the fixed fees make it less attractive when staying only a few nights (hence my other comment).I&#x27;d challenge you to find anything like that in a hotel property, at pretty much any price. reply TylerE 14 hours agorootparentprevScottsdale is not Tuscany. reply CamperBob2 14 hours agorootparentAnd Tuscany isn&#x27;t in the US.For stays of a couple of days, I&#x27;ll generally stick with hotels, but for anything longer than a week hotels are pointlessly expensive for what you get. replydave_sullivan 15 hours agorootparentprevIt was great in the beginning! But yes, it&#x27;s gone down hill, I avoid now. reply djaychela 14 hours agorootparentprevThat&#x27;s not a great argument. They may be different in some ways, but that doesn&#x27;t mean better.I recently looked for airbnb in Cardiff for pycon UK. Many of them are more expensive than a hotel, with fewer facilities and less guarantee of service.Uber has never been better than cabs where I live.YT may offer more choice than the TV, but there&#x27;s an awful lot of race to the bottom junk and VPN shilling on there. reply shlubbert 15 hours agorootparentprevThey may have been better at one point, but at least in my social circle pretty much everybody has given up on AirBnB due to numerous bad experiences and constantly complains about content now being spread across a dozen streaming services. reply mvdtnz 5 hours agorootparentprevSure if you ignore second order effects and externalities. reply heavyset_go 13 hours agorootparentprevThese were all subsidized to be much cheaper or free than competitors for years. reply mrguyorama 14 hours agorootparentprevIt had nothing to do with artificially low prices? reply soligern 7 hours agoparentprevUber is fantastic, much better than some street taxi you have to find and hail. AirBnB is the only way I can realistically find multi room houses to stay in on vacations, hotels don’t offer that and there aren’t resorts everywhere. Not sure what you’re referring to with the imaginary restaurant and unregulated television. reply lucasyvas 8 hours agoparentprevOur industry rewards grifters and&#x2F;or rent seekers much more than it does true innovation.The worthwhile innovation that does happen skirts all the rules and guns for illegal monopoly, wearing it as a badge of honor. Too twisted for my taste. reply gumballindie 15 hours agoparentprev- Intellecual Property TheftThere, I extended the list with the most recent addition to the pile. reply brunops 15 hours agoparentprevConcert ticket prices in the US just blew my mind. Never noticed that one. reply AndrewKemendo 14 hours agoparentprevOoh tell me more about “picture of monkey”I was looking for a place to invest my savingsSounds promising reply AdamJacobMuller 15 hours agoparentprev> - Expensive unregulated television!> - Expensive unregulated scam concert tickets!What are these two? reply pierat 15 hours agorootparentNetflix&#x2F;Paramount&#x2F;Max&#x2F;Hulu&#x2F;etcThey sell a subscription to shows, and then remove or enshittify their service. It&#x27;s the equivalent of shrinkflation, where you buy 10$ of something, and it&#x27;s 80% the size of last week.Ticketmaster, and their new bot storefront. reply mrguyorama 14 hours agorootparentImagine if campbells could pull soup out of the cans in your cupboard while talking about \"licensing issues\" reply jstarfish 12 hours agorootparentHey, it works for Rockstar doing that with every Grand Theft Auto soundtrack. replyjacquesm 19 hours agoprevThe law is not for tech bros, they just see it as a signpost that you can pretend not to have read or be aware of. It invariably ends badly in the long run and in the short term everybody else suffers. Highly annoying. reply JohnFen 18 hours agoparent> It invariably ends badly in the long runNot invariably, sadly. Uber, for example, didn&#x27;t seem to be overly hurt by their lawbreaking. reply burkaman 16 hours agorootparentThere&#x27;s a recent book about this, if anyone is curious how they did it: https:&#x2F;&#x2F;press.princeton.edu&#x2F;books&#x2F;ebook&#x2F;9780691249773&#x2F;disrup... reply pas 10 hours agorootparentany chance that you could provide a tl;dr? thanks! reply alexb_ 16 hours agorootparentprevUnfortunately. Uber has made it normal for people to work for poverty wages to make their asset depreciate even faster, all because they managed to pump a shitload of money into a money losing proposition. Getting a personalized driver right now should be a luxury expense - Uber dumping money that they will never make back into it doesn&#x27;t change that. Uber drivers should be paid fairly, like employees, and not as independent contractors. reply missedthecue 16 hours agorootparentHave you ever driven for Uber? As long as you&#x27;re getting rides, it pays quite well after accounting for vehicle fuel and maintenance.The only time it doesn&#x27;t make sense in my experience is if you&#x27;re in a low-traffic area. reply jacquesm 16 hours agorootparentprevUber has just posted their first profitable quarter ever. No idea if they will be able to sustain that. reply 4ggr0 16 hours agorootparentdamn, they must&#x27;ve sold a lot of real estate assets to achieve this &#x2F;s reply jacquesm 15 hours agorootparentClose enough:\"Uber reported a net income of $394 million in the second quarter. That number includes a $386 million unrealized gain from equity investments, so it&#x27;s not quite as good as it looks. \"https:&#x2F;&#x2F;www.fool.com&#x2F;investing&#x2F;2023&#x2F;08&#x2F;02&#x2F;uber-is-profitable...It will be interesting to see if they manage to close at least one bookyear in the black. If with a windfall like that they can&#x27;t manage then they likely never will. reply jacquesm 18 hours agorootparentprevYes, that&#x27;s a good one, they might just squeak by. reply fallingknife 17 hours agorootparentprevI&#x27;m very happy that Uber broke the law that protected the cab cartel. Now I can conveniently get a ride wherever I want and never have to deal with a sleazy incompetent cab company ever again. When I travel to other countries I never have to deal with their shitty taxi scams. reply pessimizer 16 hours agorootparentI would absolutely prefer a cab to Uber now. The pricing was better, the service was better, we weren&#x27;t expected to mutually review each other, and I could flag one down on the street. If I walked to a taxi stand, it was instant satisfaction.The only things that improved with Uber were price and coverage, and they tried to fool us into seeing other improvements that didn&#x27;t exist, largely by painting cab drivers as scary, stinky, subhuman swindlers and implying people that drove Uber were all part timers who usually worked at real jobs. Now the prices are sky high and the things take as long or longer as cabs did to show up.Maybe there&#x27;s room for an Uber in tiny places that don&#x27;t need cab companies or even full time cabbies, but everywhere else, they&#x27;ve just added another layer of rentseeking over a familiar experience. We could have gotten rid of the medallion system without replacing it with this thing. Let&#x27;s make gigwork illegal so Uber will have to contract with local companies, or reduce themselves to people they&#x27;re willing to employ. reply TylerE 15 hours agorootparentDoesn&#x27;t have to be a tiny place. My college town of 100k had like...3 cabs for the entire town - and it was a party school.Street hailing never existed. reply CamelCaseName 14 hours agorootparentprev> The only things that improved with Uber were price and coverageOkay, but price and coverage are very, very important? reply jacquesm 17 hours agorootparentprevNew boss, same as the old.Middlemen will always try to extract maximum profits, and even if they look better in the short term in the longer term they&#x27;ll be just as bad or worse, but more entrenched. reply JohnFen 17 hours agorootparentprevI don&#x27;t think \"the ends justify the means\" arguments are terribly persuasive, personally. And any company or person who is willing to break the law to succeed is not trustworthy enough to be comfortable doing business with.They may be good now, but the instant that they see a method of increasing their profit by screwing someone, including customers, over then that&#x27;s what they&#x27;ll do. reply mrguyorama 17 hours agorootparentprevYeah, thanks so much for fucking with our city&#x27;s perfectly working taxi industry.There&#x27;s more to the world than NYC reply toomuchtodo 16 hours agorootparentYou will never fix self centered or low empathy people, but have a chance with the systems we must all participate in. Choose how you spend your time accordingly. Talk is cheap, all that matters is outcomes. reply ska 17 hours agorootparentprevIt certainly seemed that way at first, now I&#x27;m not convinced. They seem to be recapitulating most or all of the bad behaviors. And more expensive often enough I have to check, used to just assume it would be comparable or better unless obvious reason for shortage. reply monetus 12 hours agorootparentCan you get prices ahead of time with the taxis in your area? reply ska 11 hours agorootparentDepends on the area, but qualified yes - many local cab companies now have apps (in response to uber) and some of those will give decently accurate quotes. In some places e.g. airport fares are fixed rate anyway, so you can just check. replyPeterStuer 3 hours agoparentprevWell, if the law would deal with people the way they do with companies, you would never be convicted of any crime. It would be the shirt you wore at the day of the crime that would be sent to the cleaners, and you could choose to pay the bill for getting it back or not. reply throwthat1 16 hours agoparentprevThe laws are for people, not companies... Which is why you create an LLC if you want to get away with murder reply jacquesm 15 hours agorootparentDon&#x27;t get me started on that one. Corporate personhood... reply pierat 15 hours agorootparentWhat&#x27;s the saying? \"I&#x27;ll believe corporations are people when the government executes one in Texas.\" ..? reply jacquesm 13 hours agorootparentThat&#x27;s a good one.It really bugs me that this ever passed in any country that has the concept. Companies are technically immortal and if they are given similar rights to people it is unavoidable that they will become superior to people on account of their life span. reply sillysaurusx 18 hours agoparentprevIf you invert your sentences, they become true:The law is not for entrepreneurs, they just see it as a signpost that you have to be aware of. It invariably ends ok in the long run and in the short term everybody calls them tech bros.Raise your hands if you’d rather go back to a world without Airbnb. Yes, there’s a negative externality aspect — if your neighbors are suddenly renting out their place to random people, that can get painfully annoying for you. But I bet if you did a methodical poll, most people would choose not to un-invent Airbnb.Self driving cars, ditto. Cruise’s fleet is finally deployed all around SF, according to pg. It’s about to become as ubiquitous as electricity. And in the beginning, so many people argued that it’s against the law and therefore shouldn’t be developed. Then it quietly shifted to well, maybe the law should change.It’s good to obey the law. I certainly try. But treating it as some kind of holy grail of ethics is fraught with peril. You’re outsourcing your thinking to the lowest common denominator: it’s what people in positions of power feel is justice. Sometimes it is. Sometimes it isn’t. And when it isn’t, do you really want to be the kind of person that believes it should be obeyed no matter the tradeoffs?This isn’t a hypothetical for me. People have asked many times if I was worried that someone will try to come after me for making books3 available. Till one week ago, I wasn’t. But if the world really wants to say that I’m causing suffering by making books available to machine learning researchers, I have very little leverage to argue that I am not in fact doing that… except ethics. Because without books3, only OpenAI is able to train powerful large models, because they’re the only ones that can get away with it. Is that justice?You’re an inspiration to me in many ways. I still remember you showing me your workshop, and how friggin cool it was. I’ve tried to channel your maker spirit over the years to be even half as talented. But I just don’t understand where this bitterness comes from against “tech bros”; it’s a fairly common theme in your writing. Sweeping generalizations are such dangerous territory, in terms of history proving that you were mistaken.Now, maybe this Kenya business is terrible. I think it’s pretty dystopian. But that’s a separate question: evaluate each startup on its merits, and crucify the Theranos frauds. This can be done on an individual basis. reply jacquesm 18 hours agorootparentThat&#x27;s pretty simple: I can&#x27;t stand it that people with such an opportunity for improving the world around them would squander it and wreck it. That makes me bitter.As for whether if you invert it it becomes true: there are exceptions but for the most part the lawbreakers sooner or later end up running into the limits, be they SBF, Thiel, Musk or any other of the ethically challenged individuals that the tech world puts on a pedestal. Money seems to have structurally perverted our world and the rule of law is just about the last barrier that helps keep society functioning.Tear that down and you lose a lot more than just some &#x27;minor inconveniences&#x27;. The law is the ultimate representation of the rules by which we play. Starting off by throwing out the rulebook in a way that will result in net negatives is a clear example of externalization: profits for the owners and investors and the damage for everybody else.That is not how we&#x27;re going to get to a nicer and more sustainable future. There is a lot of fuss about the kleptocrats in Russia and how they rape their country and their fellow men. Rightly so. But the tech bros aren&#x27;t that much better, they just sell it better.As for AirBnB disappearing: yes, please.> Now, maybe this Kenya business is terrible.Maybe?No, seriously: it is terrible, there is absolutely no way in hell that this is justifiable, it is with distance the worst thing Sam Altman has ever done and that plus OpenAi&#x27;s blatant attempts at regulatory capture are enough to make me regret ever defending him on HN before because I thought that he was different.So, that leaves pc and his brother for now, the rest of the tech bro billionaires can go jump in a lake. reply fallingknife 17 hours agorootparent> the lawbreakers sooner or later end up running into the limits, be they SBF, Thiel, Musk or any other of the ethically challenged individuals that the tech world puts on a pedestal.That&#x27;s quite the accusation. What laws have Musk and Thiel broken? reply jacquesm 17 hours agorootparentJust one for each then:https:&#x2F;&#x2F;www.reuters.com&#x2F;legal&#x2F;elon-musks-2018-tweet-tesla-un...https:&#x2F;&#x2F;www.reuters.com&#x2F;article&#x2F;gawker-lawsuit-frankel-idUSL...Or maybe you like tax evasion better:https:&#x2F;&#x2F;prospect.org&#x2F;economy&#x2F;one-weird-trick-force-billionai...And no, Thiel wasn&#x27;t convicted of anything. But in my view this was a complete perversion of the law. And that&#x27;s taking into account that I think everybody associated with Gawker is scum.Billionaires should pay their taxes rather than avoid them (what a term, it&#x27;s just a spin on having enough money to be able to buy your way out of paying tax like everybody else) and they should not be able to use the law as their personal attack dog. reply sillysaurusx 17 hours agorootparentAccording to the article, not only was Thiel not convicted of anything, he wasn’t guilty of anything. Florida had already changed their laws.I’m at a doctor’s appointment, but I wanted to quickly thank you for explaining your side. I disagree with some of it — perhaps even most - but the underlying motive is a good one. I just worry that you throw too many of us into the lake.Thiel, for example. Your possibly justified outrage against a few have made it more likely for you to argue that some of them are terrible when they don’t seem to be. reply jacquesm 17 hours agorootparentI noted that Thiel wasn&#x27;t convicted, but that does not mean that what he did was right or that it was legal, merely that he may well be insulated enough that he can get away with such stuff where you and I could not. And that in itself is a perversion of the law in its own right.Thiel and Musk lack ethics, they see the world as their property and carve it up with the same ease as the rulers of old did and never mind the consequences. With such power there should be a matching sense of responsibility.This lack of ethics seems to be the default for billionaires, it is very rare to see people that wealthy that use their wealth in a positive sense, more often than not it is used as a weapon and to acquire even more wealth at a cost to society and the environment in general.Good luck at the doctor&#x27;s! reply sillysaurusx 16 hours agorootparentThe part I don’t understand is that you feel Gawker was scum. Thiel removed Gawker’s ability to be scum. Thus, by logic, the world was improved.Isn’t that the core of what you’re saying you wish billionaires did? Improve the world?Quoting you:> I can&#x27;t stand it that people with such an opportunity for improving the world around them would squander it and wreck it.This seems like the crux of our disagreement. I feel the law is a means to an end. Is it correct that you feel the law is the end of the debate? Or that people who can afford to accept the penalties under the law are scum for choosing to accept such penalties?I’m trying to make your worldview consistent and complete, but there might be a Gödel problem here. reply mrguyorama 14 hours agorootparent>Thiel removed Gawker’s ability to be scum. Thus, by logic, the world was improved.I mean, this is just textbook ends justifying the means right? It doesn&#x27;t matter what someone does if you like the outcome? reply jacquesm 16 hours agorootparentprevIt is possible to believe that both parties in a lawsuit are scum.Gawker was scum because of what they did to Hogan.Thiel was scum because of what he did to Gawker.The two are not mutually exclusive. Thiel used Hogan in much the same way that Hogan was used by Gawker: to further their own goals.> I feel the law is a means to an end.It is a reasonably practical approach to a - hopefully - minimal set of rules that society needs to make it all work. Having parties that perform in extra-legal ways breaks that principle and (1) requires the continued expansion of the volume of law to close the holes and (2) creates a non-level playingfield where the rich get to use their money to improve their own station at the expense of everybody else. Nobody should have that kind of power.> Is it correct that you feel the law is the end of the debate?No, I think it is very well possible that you find the need to change laws, amend them or remove them based on evaluation by the various legislative bodies, judges and advocates. But once something is written into law things bifurcate considerably compared between say the USA and the EU: in the USA the letter of the law is what drives the process, in the EU it is the spirit of the law that drives the process. This isn&#x27;t as clear cut as I would like it to be, there are examples of the reverse on both sides but it serves as a useful shortcut. And, incidentally, it is also why US companies tend to have a hard time in Europe when faced with lawsuits that they think they can escape on a technicality: such tricks rarely work here and can easily make your problems worse.> Or that people who can afford to accept the penalties under the law are scum for choosing to accept such penalties?I&#x27;m not sure I can follow you there. What do you mean exactly?> I’m trying to make your worldview consistent and complete, but there might be a Gödel problem here.Or it may simply be that to fully understand someone&#x27;s worldview you&#x27;d have to be that person and that anything else is just an approximation.I&#x27;ve met > 5 andI&#x27;ve met > 5 andThe somewhat religious belief in progress is non-representative of the human experience.It seems the other way around. You&#x27;d have to be willfully blind to ignore that the human experience consists of technological progress.> The function of the human race isn&#x27;t to secure commercial services of convenience at any cost.Who can say what the function of the human race is? I worry that we in software are becoming detached from reality in a strange way. I suspect your sentiment is common among the tech industry, and yet it seems the opposite of empirical observation -- the basis of science.> It is possible that your beliefs don&#x27;t correspond to the goals of local or global communities.Sodomy, for example. To ram the point home, suppose you were born a few hundred years prior. Are you sure it would be unethical to engage in buttsex in the privacy of your own home with a consenting adult? Everyone&#x27;s fine with that now, but it would quite literally get you executed not so long ago:https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Buggery_Act_1533> This meant that a convicted sodomite’s possessions could be confiscated by the government, rather than going to their next of kin, and that even priests and monks could be executed for the offence—even though they could not be executed for murder. In moving what had previously been an offence tried by ecclesiastical courts into the secular ones, Henry may have intended it as a simple expression of political power along with other contemporary acts such as Submission of the Clergy Act 1533 and one year before the Act of Supremacy 1534. However Henry later used the law to execute monks and nuns (thanks to information his spies had gathered) and take their monastery lands—the same tactics had been used 200 years before by Philip IV of France against the Knights Templar.The Knights Templar were a powerful organization, yet many of them were sentenced to death on the basis of buttsex being unjust.I fear we live in an era where, metaphorically speaking, the buttsex corporations engage in is being framed as unjust, even though it seems pretty fair to me. Coinbase, Uber, Airbnb... It&#x27;s hard to find anyone here that actually thinks startups are a good idea anymore. Or at least, if people speak up and say that they&#x27;re fine, they tend to be shouted down.> In summary, we have laws because other people exist and we live in a modern economy.Our views don&#x27;t seem so modern. I think history may look back on us the way we look at the people in the 1500s. reply rubiquity 18 hours agorootparentprev> Raise your hands if you’d rather go back to a world without AirbnbStep outside of the software bubble we’re in and I’d guess 80% or more people would prefer a world without Airbnb. A significant part of the population does not use Airbnb and is also experiencing negative impacts of a housing shortage and affordability problems. reply fallingknife 17 hours agorootparentThe number of housing units has not kept up with population growth. There&#x27;s your housing shortage. Blaming Airbnb for this is laughable. reply ska 17 hours agorootparentThe lack of builds is the primary cause, sure. But parent is not wrong that in a lot of places airbnb is clearly making the rental market worse. reply phone8675309 17 hours agorootparentprevIt’s not laughable if it’s exacerbating the problem reply username332211 17 hours agorootparentprev>Step outside of the software bubble we’re in and I’d guess 80% or more people would prefer a world without Airbnb.I have, and the ability to travel (affordably) seems fairly important to working class folks. The people I&#x27;ve seen complain about AirBnb are the same sort of people who sneer at Ryanair - definitely not \"the masses\".Then again, things may be different in the USA. I&#x27;ve always assumed the 40 year old man who has never seen the ocean is some sort of a ridiculous stereotype, but who knows. reply rurp 15 hours agorootparentI live in a pretty typical American middle class neighborhood far from any tech centers and Airbnb is almost universally hated around here, for pretty much the usual reasons you hear (disruptive guests, housing availability, etc). Airbnb clientele is heavily skewed towards techies and upper-middle class in my experience. Folks traveling on a limited budget either can&#x27;t afford Airbnb or can&#x27;t spare the extra time they take compared to a hotel. reply JohnFen 16 hours agorootparentprevIf you&#x27;re on a budget, you&#x27;re not using AirBnb (at least in the US). You&#x27;re using budget motels. reply username332211 15 hours agorootparentIs that also true if you are (or are traveling with) a woman? I&#x27;m not much of a motel person and am mostly working with stereotypes here[1], but a cheap motel does not strike me as the place where a woman can safely return home by herself late in the evening.I guess, cheap AirBnbs may be at similar locations, but that doesn&#x27;t seem to be necessarily (or usually) true. And often you can&#x27;t quite figure out how unsafe the place is ahead of time, so you rent something and roll with it, but that&#x27;s a discussion for another time.[1] Then again, so is everyone else. A guy a few comments down presented statistics, which were somehow refuted trough the careful deployment of a stereotype. reply JohnFen 14 hours agorootparent> Is that also true if you are (or are traveling with) a woman?I don&#x27;t think gender is a factor here. But it depends on the neighborhood you&#x27;re in, not whether or not it&#x27;s a motel.However, that&#x27;s not pertinent to the point that I was making, which is that Airbnbs are more of a luxury option, not a cost-saving option. The comment I was replying to appears to be asserting that being opposed to Airbnbs is elitist because it&#x27;s being opposed to affordable options. In my experience in the US, that doesn&#x27;t track. Airbnbs tend to be more expensive than someone who runs lean is likely to choose. reply jdminhbg 17 hours agorootparentprev> Step outside of the software bubble we’re in and I’d guess 80% or more people would prefer a world without AirbnbThis is delusional. Here&#x27;s one survey, by YouGov, pegging their liked-to-dislike ratio at 3.4: https:&#x2F;&#x2F;today.yougov.com&#x2F;topics&#x2F;travel&#x2F;explore&#x2F;website&#x2F;Airbn...The software bubble is nothing compared to a political bubble. reply harperlee 17 hours agorootparentSure, there’s no bias whatsoever in that survey, surely the old grandma living on an unspecified european city center that is against airbnb is as likely to respond as the young FAANG-salaried international US traveller that wants to travel cheap and authentic. reply jdminhbg 16 hours agorootparentOn the one hand, we have survey data, with which we can quibble on methodology. On the other hand, we have an HN poster who just really doesn&#x27;t like Airbnb and pulls a number from his nether regions guessing that everyone actually agrees with him. Truly a conundrum as to which might be closer to the truth. reply harperlee 16 hours agorootparentNo conundrum, we can reject both. reply jdminhbg 16 hours agorootparentI&#x27;d rather keep the survey data from the respected polling firm, actually. No need to assign it a weight of 100% truth, but certainly useful. reply trilobyte 16 hours agorootparentprevNo need to hide the information on the methodology of the survey:\"YouGov RatingsYouGov Ratings measures Airbnb’s popularity and fame every quarter. The latest data is based on 1532 nationally representative interviews of the US population, collected during Q2 2023.\" reply jacquesm 17 hours agorootparentprevI suggest looking across the US border for a bit. reply JeremyNT 16 hours agorootparentprev> Raise your hands if you’d rather go back to a world without Airbnb.I&#x27;m here, raising my hand!Zoning requirements exist for a reason. In this AirBNB hellscape, we now have entirely unregulated hotels in my nominally residential neighborhood. I live in a tourist town and it gets the worst kind of tourists, there to drink and play loud music to all hours of the morning.These companies can fuck right off. Sometimes they accidentally improve things on one axis by ignoring regulations that are no longer relevant or overly burdensome, only to make something much worse on another. They&#x27;re blunt instruments of criminality - they indiscriminately tear through both the useless red tape as well as the proper regulations that exist for entirely good reasons. reply manuelabeledo 17 hours agorootparentprev> It’s good to obey the law. I certainly try. But treating it as some kind of holy grail of ethics is fraught with peril. You’re outsourcing your thinking to the lowest common denominator: it’s what people in positions of power feel is justice. Sometimes it is. Sometimes it isn’t. And when it isn’t, do you really want to be the kind of person that believes it should be obeyed no matter the tradeoffs?Nice, so we should be allowed to break the law if we feel that something is not right?Yes, laws may be unethical or immoral. There is a system in place to change them, though, at least in a democratic government. Self-driving cars are allowed to be in the streets because laws have changed. AirBnB is allowed to operate because the laws have changed. And I would rather have that, a slow process of adaptation, than a random guy letting their crazy inventions roam free just because he feels like he&#x27;s \"right\". reply EnergyAmy 17 hours agorootparent> Nice, so we should be allowed to break the law if we feel that something is not right?I mean... yes? That&#x27;s the whole point of things like jury nullification and giving judges leeway in their sentencing. The law is not ethics. There&#x27;s some correlation, but it&#x27;s up to us as a society to apply it in an ethical way, and try to keep them aligned as much as possible. reply JohnFen 16 hours agorootparentBreaking the law as a means of agitating for change isn&#x27;t necessarily unethical. But an important part of that is accepting the legal consequences for the lawbreaking -- that&#x27;s the part that accelerates change.Breaking the law in order to enhance your profit is an entirely different thing, and there is no high ground there. reply username332211 16 hours agorootparentSo, breaking the law in and of itself doesn&#x27;t accelerate change? I guess the corn laws are still a thing, alcohol is still illegal in America as is marijuana.A few years back the United states had the highest corporate taxes in the OECD, yet nobody was actually paying them in full. What happened? Congress lowered taxes.I have a question. Are you an altruist? If so, how can you square that with obeying laws that bring misery to others? Aren&#x27;t others entitled to joy and happiness? reply JohnFen 14 hours agorootparent> So, breaking the law in and of itself doesn&#x27;t accelerate change?Not really, no. The part of civil disobedience that accelerates change is when people are seen to be punished for the laws.I don&#x27;t know about the history of corn laws, but with both alcohol and marijuana, it wasn&#x27;t the breaking of the laws itself that caused the laws to be changed, it was people getting punished for engaging in activities that others thought should not be illegal. If nobody is seen as being punished by the law, then most people won&#x27;t be energized to change them because it looks like nobody&#x27;s being unjustly harmed.> how can you square that with obeying laws that bring misery to others?I don&#x27;t know that I bring misery to others in the laws that I follow. But your question is impossible to answer as stated -- what about laws that bring misery to some but justice to others? The world isn&#x27;t usually black and white, and that includes laws.My only point in this discussion is that there may be a moral high ground in breaking some laws under some circumstances. But making a profit is never such a moral high ground.Companies that break laws to increase their profits are simply criminals, not bringers of justice. reply waffleiron 16 hours agorootparentprevThere is a big difference between breaking the law for ethical reasons (e.g. Rosa Parks) and breaking the law because you want to make bigger profits. reply manuelabeledo 16 hours agorootparentprevI don’t think you have considered the slippery slope that comes after. reply alexb_ 16 hours agorootparentprevYes, actually, I absolutely would love to go back to a world without Airbnb. reply sillysaurusx 16 hours agorootparentHow about Uber? Are we so insular that we won’t agree it was a good thing that drunk people can call for a driver at 2am? reply input_sh 16 hours agorootparentWhat kind of false equivalence is this? It&#x27;s Uber or drunk driving, literally no other option?There is no Uber in my country (nor Lyft, nor anything similar), yet I always make it back home when I&#x27;m drunk, alive and without a need to sit behind the wheel. So does everyone else. reply mola 16 hours agorootparentprevAre we so insular as to think that lobbying for the destruction of workers rights world wide is much worse than waiting more time for a cab? reply alexb_ 14 hours agorootparentprevYes, absolutely. Uber poured a shitload of money they will never make back and now convince people that they should be able to get a driver on demand for cheap. If you need a ride, call a friend&#x2F;family member&#x2F;anyone who can trust you to spot them for gas. reply jacquesm 16 hours agorootparentprevThe &#x27;gig economy&#x27; has eroded about 100 years of progress in workers rights. The price of that erosion will not be visible for another 30 years or so, but when the bill is presented I suspect it won&#x27;t be pretty. reply hnhg 17 hours agorootparentprevThat question is so loaded because it begs for a loss of knowledge about Airbnb, and that’s not something I would not want to lose. However, do I think Airbnb is a net gain for humans? No. But I wouldn’t “uninvent it”, in the literal sense. reply jjoonathan 17 hours agorootparentprev> Raise your hands if you’d rather go back to a world without Airbnb.Hand raised. reply candiddevmike 17 hours agorootparentprevI would like a world without Airbnb, yes. They ruin communities, and swindle tourists. reply mola 16 hours agorootparentprevDisrupting the law as an ideal is not the same as \"It’s good to obey the law. I certainly try. But treating it as some kind of holy grail of ethics is fraught with peril\"Idealizing being indifferent to the law is pulling the rug under the whole idea of democracy and rule of law. It has dire consequences. Much dire than a less than perfect taxi cab experience. reply boringg 17 hours agorootparentprev> Raise your hands if you’d rather go back to a world without Airbnb.Two hands raised! reply optimalsolver 15 hours agorootparentprevJust keep a look out for those hidden cameras on your next Air BnB stay:https:&#x2F;&#x2F;www.theatlantic.com&#x2F;technology&#x2F;archive&#x2F;2019&#x2F;03&#x2F;what-... reply balaji1 17 hours agorootparentprevThere has to be survivor bias when we look at law breakers who made it. Tho when they do make it, they become huge... ie Airbnb is an exception. reply heavyset_go 13 hours agoparentprevThe law is for everyone else, they&#x27;re free to break them. reply olalonde 16 hours agoparentprevWho are the victims here? The people who voluntarily had their iris scanned? reply boh 16 hours agorootparentYes. People also voluntarily give up their civil rights and are duped into unreasonable debts. How often do you read the ToS for most of the services you consume? Consumer protections operate in the understanding that people cannot be expected to know the intricacies of all the various laws and agreements that may negatively impact them should they agree to terms when consuming a good or service. reply olalonde 15 hours agorootparentHow were they harmed by this? And why shouldn&#x27;t people be free to voluntarily share a scan of their iris with other people? reply jacquesm 15 hours agorootparentApologies for butting in, but I don&#x27;t think you are arguing in good faith here.How about we change the angle a bit: why do you think this happened in Kenya and not in Germany? reply olalonde 14 hours agorootparentTo be clear, I don&#x27;t personally endorse Worldcoin and am not an investor, nor do I have particular admiration for Sam Altman. I just fundamentally question the notion of \"victimless\" crimes. In my view, consensual transactions between adults shouldn&#x27;t be illegal and it seems to me that this is what is occurring here. As to why this is happening in Kenya, I wouldn&#x27;t be surprised if they failed to \"persuade\" the right bureaucrats (a problem that many African entrepreneurs face[0]). According to Reuters, Worldcoin is currently \"orbing\" in 20 countries by the way[1].[0] https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=eqD3QbzSsIs[1] https:&#x2F;&#x2F;www.reuters.com&#x2F;technology&#x2F;openais-sam-altman-launch... reply soligern 7 hours agorootparentAt one point in the 70s, the Indian government started offering people money to voluntarily get sterilized. These people didn’t have a free choice in the matter, their situation in life compelled them, in this particular case financially. It’s not an infringement of someone’s freedom, rather an exploitation of the poor situation that individual is already in. reply olalonde 7 hours agorootparentWhy call this situation an \"exploitation\" when all parties involved are better off from the transaction? And if it is truly a \"life or death\" situation, how is it moral to ban a life saving option?If Kenyans are getting life-saving money in exchange for their iris scan, how is banning this arrangement helping them? Aren&#x27;t they in a better position than you, or government bureaucrats, to judge what is best for them? reply peyton 15 hours agorootparentprevI believe Worldcoin is live in Germany. Also, it’s kind of unreasonable to expect a startup to pull off a global launch without a hitch. Assuming good faith, I suspect issues will be resolved over time. reply FireBeyond 14 hours agorootparentYes, that&#x27;s entirely why they&#x27;ve gone into mostly developing countries (I&#x27;d think it&#x27;d be easier for a startup to pull of a global launch focusing on more developed countries, for a variety of reasons) offering people almost a week&#x27;s salary to have their eyeball scanned (Kenya&#x27;s average monthly salary is USD$420, and Worldcoin was offering effectively $70 to sign up). reply JohnFen 13 hours agorootparentprev> Assuming good faithThe tech industry in general lost the \"benefit of the doubt\" years ago. That&#x27;s not WC&#x27;s fault, but WC could have mitigated some of that if they at least put some effort into not appearing shady.Particularly since they&#x27;re connected to cryptocurrency, which is one of the scummier segments of the industry to begin with. reply jacquesm 13 hours agorootparentprevTwo EU countries are already investigating them (France and Germany). replyCatWChainsaw 11 hours agorootparentprevIf WeChat required iris scans to work, would the Chinese \"voluntarily\" be doing it?I&#x27;m specifically making this example about WeChat because it&#x27;s basically impossible to exist in China without it and has the power imbalances inherent in dealing with the CCP that make it \"voluntary\" the same way donating money to someone with a gun pointed at your chest is \"voluntary\", since libertarians have a deliberately extremely warped view of that word. reply olalonde 8 hours agorootparentDid Kenyans have a comparable metaphorical \"gun pointed at their chest\" when they signed up for Worldcoin? reply kstrauser 18 hours agoprevI’m having a hard time not being snarky and sarcastic about this. Worldcoin is a solution to no particular problem, designed to replace government functions with their own profit-driven replacements. I’m not the slightest surprised they’re ignoring those same governments telling them not to do something. reply 93po 10 hours agoparentThis is almost word for word an argument I see every time Worldcoin is mentioned and it’s interesting how uniform of a talking point it is reply serjtawer 17 hours agoparentprev\"designed to replace government functions with their own profit-driven replacements\"They should have marketed it to US Republicans. reply mrguyorama 13 hours agorootparentThey don&#x27;t approve of those kinds of things unless you bring them in on the take. reply lincolnq 18 hours agoparentprev> \"solution to no particular problem\"I deeply disagree. While Worldcoin&#x27;s execution seems questionable at best, the idea seems like a solution to a problem that we (society) definitely have, namely the real-people problem. Worldcoin or something like it, if properly implemented, makes it possible to distinguish between real people and bots. This is a real problem that we have today, is getting rapidly worse, and till now this problem has only been solved in shitty ways by governments. reply tcgv 16 hours agorootparentWorldcoin is just a centralized &#x2F; privately owned database of iris scans and issued user IDs that integrates with the blockchain.> solution to a problem that we (society) definitely have, namely the real-people problem> till now this problem has only been solved in shitty ways by governmentsThe solution Worldcoin provides is \"trust us for knowing who is real-people\". I fail to see how that&#x27;s better than the way governments solve the problem. reply nroets 14 hours agorootparentGovernments regularly do terrible things in the banking system: Printing money, capital controls and mind boggling amount of red tape. With this red tape they can punish anyone who disagrees with them. reply mrguyorama 13 hours agorootparentOh yeah, all that abhorrent red tape like \"If you are a bank you have to prove you aren&#x27;t doing funny things with people&#x27;s money\" and \"if you provide financial services you need to make an honest effort to not fund like, actual terrorists, or north korea\" and \"We thought we learned our lesson about unregulated stocks back when it caused the great depression\" reply kredd 16 hours agorootparentprevEh, we could kinda resolve the problem by having a government auth system, and you can get some OpenID like response from it. Then private companies could just use that for identification (like in Sweden, a lot of apps have that BankID or whatever its called). We have something similar in Canada in a couple of provinces, but they’re exposed to government portals only.However bringing that theme into US is a no-brainer because of the distrust in the government or some other issues. reply JohnFen 13 hours agorootparentI would very strongly prefer the government do this over a private company. The government already knows my identity anyway, so I lose nothing. Plus, I think that the greatest threats to our freedom and liberty in the US comes from corporations rather than the government. reply JohnFen 16 hours agorootparentprev> This is a real problem that we have todayI am very far from convinced that this is a problem that needs to be solved so badly that we should sacrifice any amount of privacy for it. Especially to a corporation.And despite WC&#x27;s claims, their scheme does involve sacrificing some privacy. reply flangola7 16 hours agorootparentprevI see this too.I read a paper that looked at Sybil attacks in the age of modern generative AI. In short, the internet is unviable without a clear human-or-bot signal. Until now that signal was inherent: most things a human can easily do a bot cannot; captchas, targeted cyberhacks, interactive realistic phone calls. reply malthaus 18 hours agoprevThere is zero chance Worldcoin will not be shut down in any country the second they reach significant volume above what they get now with the PR hype and free money customer attraction scheme with a touch of anachronistic crypto hype.It&#x27;s so terribly out of touch with the real world in a way not even the most die hard crypto bro&#x27;s could dream up a dystopian scenario where this would fly.And what&#x27;s with that terribly photoshopped picture of the 2; as if to double down on how fake the motives behind this scheme are. reply DigiDigiorno 17 hours agoparentThe average crypto bro might be more against iris scanning than the general population. reply lawn 16 hours agorootparentNo, the average crypto bro doesn&#x27;t care about crypto, privacy or anything like that. The average crypto bro only cares about the opportunity to profit, and will gladly let the devil himself scan their iris as long as they get some digital tokens they can dump to someone else.Truly unfortunate, because what Worldcoin is doing is completely opposite of the original cryptocurrency ideal. reply BLanen 17 hours agorootparentprevNo, because the average crypto bro will get tricked into thinking anything is a good idea and secure when you mention &#x27;blockchain&#x27;. reply malthaus 15 hours agorootparentprevfor every 1 dreamy utopian hacker crypto bro you have 99 running a get rich quick scheme, if they can pump and dump the worldcoin, they will, even if it would include ripping the eyeballs off the customers reply toenail 17 hours agorootparentprevWhat about the crypto gals? reply DigiDigiorno 11 hours agorootparentThose crypto gals over there? total bros reply gmerc 1 hour agoprevIndia shows us how to solve this. Require a legal representative in the country you can jail. reply karaterobot 16 hours agoprevIt&#x27;s not clear to me from this article whether ignoring a demand from Kenya&#x27;s ODPC was a crime. The article says nothing about it. Is it? It&#x27;s conceivable that it&#x27;s the equivalent of a cease and desist letter, if the ODPC has no specific authority. That would explain why a company with a lot of lawyers would just ignore it, and why it was escalated to another group as a response. reply slim 13 hours agoprevthis company is trafficking in identity. it is trying to build the ultimate human tracking system where every human&#x27;s transaction is logged and tied to his biometrical properties. it&#x27;s the antithesis of freedom. and the fact sam altman has no moral issues with doing this to Africans is telling. I think he&#x27;s close to achieving his transition ... to a villain reply mcpackieh 19 hours agoprevWorldcoin went to Kenya because they thought they&#x27;d be above the law. Sam Altman should be extradited to Kenya to face justice. reply wincy 19 hours agoparentI mean he effectively is above Kenyan law, there is a zero percent chance the United States is going to extradite Sam Altman to Kenya. reply wslh 19 hours agorootparentTo be precise, he cannot visit Kenya or any other country with strong ties and extradition agreements with Kenya.I don&#x27;t know anything about US and Kenya agreements. reply some_random 19 hours agorootparentI think it&#x27;s more of a tongue in cheek joke about the fact the US will undoubtedly refuse to extradite until legal proceedings against him in the US (and his probable prison sentence) concludes. reply yowzadave 18 hours agorootparentDid I miss something? Is Sam Altman in actual legal jeopardy? You&#x27;re not confusing him with Sam Bankman-Fried? reply jacquesm 18 hours agorootparentprevAt least he won&#x27;t have to be afraid of Kenyan cruise missiles or rockets.But it may well end up in the Hague because of the callous way that this has been done and the amount of sympathy it has gathered all over the world and that would curb Altman&#x27;s ability to travel considerably. reply some_random 18 hours agorootparentHe&#x27;s going to end up in a US prison for most of his life, he&#x27;s not going to be doing any traveling. And what&#x27;s this about cruise missiles? reply ChadNauseam 18 hours agorootparentAre you sure you&#x27;re not thinking of Sam Bankman-Fried? reply jacquesm 18 hours agorootparentprevI think you have your parties muddled up. reply flangola7 16 hours agorootparentprevWhile I hope the US will treat AI development with that level of tenacity, I wouldn&#x27;t count on it reply anigbrowl 17 hours agorootparentprevYou&#x27;re mixing him up with Sam Bankman-Fried, no? reply flangola7 16 hours agorootparentprevHow can you have a trial without a defendant there? reply JumpCrisscross 14 hours agorootparentprevKenya and the U.S. have had an extradition agreement since 1935 [1].[1] https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;List_of_United_States_extrad... reply reaperducer 19 hours agoparentprevSam Altman should be extradited to Kenya to face justice.What&#x27;s the justice system like in Kenya these days?I know nothing of law enforcement in Kenya, but there are a number of countries that would be happy to give someone like him safe harbor. reply mola 16 hours agorootparentI don&#x27;t know if a person that actively tries to dinner law making deserve a just justice system reply CatWChainsaw 15 hours agoprevAt this point, why do we even bother pretending to be dismayed that techbros and their vanity projects have no respect for anything? If you just assume that they&#x27;re doing something harmful that enriches themselves (and I mean literally enriches) and we just haven&#x27;t had a news cycle about it yet, we could save so much time giving them the benefit of the doubt and just go straight to handing out fines in the nine-digit range to make them cut their shit out. reply rubyn00bie 19 hours agoprev [10 more] [flagged] oefrha 19 hours agoparentI don’t think exploiting lax regulation, ineffective law enforcement, and financial hardship to scoop up biometric data for cheap has anything to do with “savior”. reply banannaise 18 hours agorootparentThey tend to justify it, both themselves and to the world, by claiming the product is here lift people in the global south out of poverty and bring them into the modern world. That&#x27;s textbook white saviorism.That&#x27;s how they handwave away the fact that their actual goal is exploiting lax regulation, ineffective law enforcement, and financial hardship to scoop up biometric data for cheap. reply jacquesm 18 hours agorootparentprevThat&#x27;s just standard techbro ops 101. reply malthaus 18 hours agoparentprevif altman continues to fall upwards he&#x27;ll end up going \"full elon\" reply progrus 19 hours agoparentprevMakes him very easy to manipulate, sadly. reply nroets 19 hours agoparentprevIs it \"white savior complex\" or is it a belief in laissez faire capitalist ideas ? reply isk517 18 hours agorootparentI think &#x27;Tony Stark complex&#x27; would be more appropriate. Feels like these people watched Ironman 2 and imagine themselves in Tony&#x27;s shoes as he address congress. reply acheong08 17 hours agoparentprevJust savior complex. You don’t have to be white to have it reply goodbyesf 19 hours agoparentprev [–] No such thing as white savior complex. White savior complex is mislabeled white exploitation complex. Nobody is a saint. Everyone acts in accordance to their own selfish interests. Even white people. Altman is doing this not to save or benefit kenyans but for his own selfish interests. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Crypto startup Worldcoin defied an order from the Office of the Data Protection Commissioner (ODPC) in Kenya to halt the collection of personal data, including iris scans.",
      "The ODPC had previously directed Worldcoin to stop collecting data in May, but the company persisted until it was suspended by the Ministry of Interior and Administration in August.",
      "The ODPC has taken legal action to preserve the data collected by Worldcoin while investigations into security, privacy, and legality issues are underway."
    ],
    "commentSummary": [
      "The controversy surrounding Worldcoin and their use of iris scans in Kenya is discussed, raising concerns about privacy and data security.",
      "Ride-sharing services like Uber and Airbnb are examined, with discussions on the impact of these platforms on traditional industries and concerns about labor rights and safety regulations.",
      "The role of regulation in the tech industry is explored, with considerations on the need for oversight to protect consumers and prevent negative consequences such as monopolies and unethical practices."
    ],
    "points": 200,
    "commentCount": 176,
    "retryCount": 0,
    "time": 1692361902
  }
]
