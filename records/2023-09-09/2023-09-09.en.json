[
  {
    "id": 37434117,
    "title": "Bun v1.0.0",
    "originLink": "https://bun.sh/blog/bun-v1.0",
    "originBody": "Docs Guides Blog Bun 1.0 Jarred Sumner, Ashcon Partovi, Colin McDonnell · September 8, 2023 Bun 1.0 is finally here. Bun is a fast, all-in-one toolkit for running, building, testing, and debugging JavaScript and TypeScript, from a single file to a full-stack application. Today, Bun is stable and production-ready. Install Bun curl npm brew docker curl -fsSL https://bun.sh/installbash Upgrade Bun bun upgrade Bun is an all-in-one toolkit We love JavaScript. It's mature, it moves fast, and its developer community is vibrant and passionate. It's awesome. However, since Node.js debuted 14 years ago, layers and layers of tooling have accumulated on top of each other. And like any system that grows and evolves without centralized planning, JavaScript tooling has become slow and complex. Why Bun exists Bun's goal is simple: eliminate slowness and complexity without throwing away everything that's great about JavaScript. Your favorite libraries and frameworks should still work, and you shouldn't need to unlearn the conventions you're familiar with. You will however need to unlearn the many tools that Bun makes unnecessary: Node.js — Bun is a drop-in replacement for Node.js, so you don't need: node npx — bunx is 5x faster nodemon — Bun has a built-in watch mode! dotenv, cross-env — Bun reads .env files by default Transpilers — Bun can run .js, .ts, .cjs, .mjs, .jsx, and .tsx files, which can replace: tsc — (but you can keep it for typechecking!) babel, .babelrc, @babel/preset-* ts-node, ts-node-esm tsx Bundlers — Bun is a JavaScript bundler with best-in-class performance and an esbuild-compatible plugin API, so you don't need: esbuild webpack parcel, .parcelrc rollup, rollup.config.js Package managers — Bun is an npm-compatible package manager with familiar commands. It reads your package.json and writes to node_modules, just like other package managers, so you can replace: npm, .npmrc, package-lock.json yarn, yarn.lock pnpm, pnpm.lock, pnpm-workspace.yaml lerna Testing libraries — Bun is a Jest-compatible test runner with support for snapshot testing, mocking, and code coverage, so you no longer need: jest, jest.config.js ts-jest, @swc/jest, babel-jest jest-extended vitest, vitest.config.ts While these tools are each good in their own right (mostly), using them all together inevitably creates fragility and a slow developer experience. They perform a lot of redundant work; when you run jest, your code will be parsed 3+ times by various tools! And the duct tape, plugins, and adapters required to stitch everything together always frays eventually. Bun is a single integrated toolkit that avoids these integration problems. Each tool in this toolkit provides a best-in-class developer experience, from performance to API design. Bun is a JavaScript runtime Bun is a fast JavaScript runtime. Its goal is to make the experience of building software faster, less frustrating, and more fun. Node.js compatibility Bun is a drop-in replacement for Node.js. That means existing Node.js applications and npm packages just work in Bun. Bun has built-in support for Node APIs, including: built-in modules like fs, path, and net, globals like __dirname and process, and the Node.js module resolution algorithm. (e.g. node_modules) While perfect compatibility with Node.js isn't possible — looking at you node:v8 — Bun can run virtually any Node.js application in the wild. Bun is tested against test suites of the most popular Node.js packages on npm. Server frameworks like Express, Koa, and Hono just work. As do applications built using the most popular full-stack frameworks. Collectively, these libraries and frameworks touch every part of Node.js's API surface that matters. Full-stack applications built with Next.js, Remix, Nuxt, Astro, SvelteKit, Nest, SolidStart, and Vite work in Bun. Note — For a detailed breakdown of Node.js compatibility, check out: bun.sh/nodejs. Speed Bun is fast, starting up to 4x faster than Node.js. This difference is only magnified when running a TypeScript file, which requires transpilation before it can be run by Node.js. Bun runs a \"hello world\" TypeScript file 5x faster than esbuild with Node.js. Unlike Node.js and other runtimes that are built using Google's V8 engine, Bun is built using Apple's WebKit engine. WebKit is the engine that powers Safari and is used by billions of devices every day. It's fast, efficient, and has been battle-tested for decades. TypeScript and JSX support Bun has a JavaScript transpiler that's baked into the runtime. That means you can run JavaScript, TypeScript, and even JSX/TSX files, no dependencies needed. TypeScript JSX/TSX bun index.ts ESM & CommonJS compatibility The transition from CommonJS to ES modules has been slow and full of terrors. After ESM was introduced, Node.js took 5 years before supporting it without an --experimental-modules flag. Regardless, the ecosystem is still full of CommonJS. Bun supports both module systems, all the time. No need to worry about file extensions, .js vs .cjs vs .mjs, or including \"type\": \"module\" in your package.json. You can even use import and require(), in the same file. It just works. import lodash from \"lodash\"; const _ = require(\"underscore\"); Web APIs Bun has built-in support for the Web standard APIs that are available in browsers, such as fetch, Request, Response, WebSocket, and ReadableStream. const response = await fetch(\"https://example.com/\"); const text = await response.text(); You no longer need to install packages like node-fetch and ws. Bun's built-in Web APIs are implemented in native code, and are faster and more reliable than the third-party alternatives. Hot reloading Bun makes it easier for you to be productive as a developer. You can run Bun with --hot to enable hot reloading, which reloads your application when files change. bun --hot server.ts Unlike tools that hard-restart the entire process, like nodemon, Bun reloads your code without terminating the old process. That means HTTP and WebSocket connections don't disconnect and state isn't lost. Plugins Bun is designed to be highly-customizable. You can define plugins to intercept imports and perform custom loading logic. A plugin can add support for additional file types, like .yaml or .png. The Plugin API is inspired by esbuild, which means that most esbuild plugins will just work in Bun. import { plugin } from \"bun\"; plugin({ name: \"YAML\", async setup(build) { const { load } = await import(\"js-yaml\"); const { readFileSync } = await import(\"fs\"); build.onLoad({ filter: /\\.(yaml|yml)$/ }, (args) => { const text = readFileSync(args.path, \"utf8\"); const exports = load(text) as Record; return { exports, loader: \"object\" }; }); }, }); Bun APIs Bun ships with highly-optimized, standard-library APIs for the things you need most as a developer. In contrast to Node.js APIs, which exist for backwards compatibility, these Bun-native APIs are designed to be fast and easy-to-use. Bun.file() Use Bun.file() to lazily load a File at a particular path. const file = Bun.file(\"package.json\"); const contents = await file.text(); It returns a BunFile, which extends the Web standard File. The file contents can be lazily loaded in various formats. const file = Bun.file(\"package.json\"); await file.text(); // string await file.arrayBuffer(); // ArrayBuffer await file.blob(); // Blob await file.json(); // {...} Bun reads files up to 10x times faster than Node.js. Bun.write() Use Bun.write() is a single, flexible API for writing almost anything to disk — string, binary data, Blobs, even a Response object. await Bun.write(\"index.html\", \"\"); await Bun.write(\"index.html\", Buffer.from(\"\")); await Bun.write(\"index.html\", Bun.file(\"home.html\")); await Bun.write(\"index.html\", await fetch(\"https://example.com/\")); Bun writes files up to 3x faster than Node.js. Bun.serve() Use Bun.serve() to spin up an HTTP server, WebSocket server, or both. It's based on familiar Web-standard APIs like Request and Response. Bun.serve({ port: 3000, fetch(request) { return new Response(\"Hello from Bun!\"); }, }); Bun can serve 4x more requests per second than Node.js. You can also configure TLS using the tls option. Bun.serve({ port: 3000, fetch(request) { return new Response(\"Hello from Bun!\"); }, tls: { key: Bun.file(\"/path/to/key.pem\"), cert: Bun.file(\"/path/to/cert.pem\"), } }); To support WebSockets alongside HTTP, simply define an event handler inside websocket. Compare this with Node.js, which doesn't provide a built-in WebSocket API and requires a third-party dependency like ws. Bun.serve({ fetch() { ... }, websocket: { open(ws) { ... }, message(ws, data) { ... }, close(ws, code, reason) { ... }, }, }); Bun can serve 5x more messages per second than ws on Node.js. bun:sqlite Bun has built-in support for SQLite. It has an API that's inspired by better-sqlite3, but is written in native code to be faster. import { Database } from \"bun:sqlite\"; const db = new Database(\":memory:\"); const query = db.query(\"select 'Bun' as runtime;\"); query.get(); // => { runtime: \"Bun\" } Bun can query SQLite up to 4x faster than better-sqlite3 on Node.js. Bun.password Bun also supports APIs for common, but complex things you wouldn't want to implement yourself. You can use Bun.password to hash and verify passwords using bcrypt or argon2, no external dependencies required. const password = \"super-secure-pa$$word\"; const hash = await Bun.password.hash(password); // => $argon2id$v=19$m=65536,t=2,p=1$tFq+9AVr1bfPxQdh... const isMatch = await Bun.password.verify(password, hash); // => true Bun is a package manager Even if you don't use Bun as a runtime, Bun's built-in package manager can speed up your development workflow. Gone are the days of staring at that npm spinner as your dependencies install. Bun may look like the package managers you're used to — bun install bun add[--dev|--production|--peer] bun removebun update— but it doesn't feel like them. Install speeds Bun is orders of magnitude faster than npm, yarn, and pnpm. It uses a global module cache to avoid redundant downloads from the npm registry and uses the fastest system calls available on each operating system. Benchmarked by installing the dependencies for a starter Remix project. Running scripts Chances are, you haven't ran a script directly with node in a while. Instead, we often use our package managers to interface with the frameworks and CLIs to build our apps. npm run dev You can replace npm run with bun run to save 150ms milliseconds every time you run a command. These numbers may all seem small, but when running CLIs, the perceptual difference is huge. Running npm run is noticably laggy— —whereas bun run feels instantaneous. And we're not just picking on npm. In fact, bun runis faster than the equivalent in yarn and pnpm. Script runner Avg. time npm run 176ms yarn run 131ms pnpm run 259ms bun run 7ms 🚀 Bun is a test runner If you’ve written tests in JavaScript before, you’re probably familiar with Jest, which pioneered the \"expect\"-style APIs. Bun has a built-in testing module bun:test that is fully Jest-compatible. import { test, expect } from \"bun:test\"; test(\"2 + 2\", () => { expect(2 + 2).toBe(4); }); You can run your tests with the bun test command. bun test You also get all the benefits of the Bun runtime, including TypeScript and JSX support. Migration from Jest or Vitest is easy. Any imports from @jest/globals or vitest will be internally re-mapped to bun:test, so everything works, even without code changes. index.test.ts import { test } from \"@jest/globals\"; describe(\"test suite\", () => { // ... }); In a benchmark against the test suite for zod, Bun was 13x faster than Jest and 8x faster than than Vitest. Running the test suite for Zod Bun's matchers are implemented in fast native code — expect().toEqual() in Bun is 100x faster than Jest and 10x faster than Vitest. To get started, you can speed up your CI using bun test. In Github Actions, use the official oven-sh/setup-bun action. .github/workflows/ci.yml name: CI on: [push, pull_request] jobs: test: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - uses: oven-sh/setup-bun@v1 - run: bun test And to make things that even nicer, Bun automatically adds annotations to your test failures, so your CI logs are easy to read. Bun is a bundler Bun is a JavaScript and TypeScript bundler and minifier that can be used to bundle code for the browser, Node.js, and other platforms. CLI bun build ./index.tsx --outdir ./build It's heavily inspired by esbuild and provides a compatible plugin API. import mdx from \"@mdx-js/esbuild\"; Bun.build({ entrypoints: [\"index.tsx\"], outdir: \"build\", plugins: [mdx()], }); Bun's plugin API is universal, meaning it works for both the bundler and the runtime. So that .yaml plugin from earlier can be used here to support .yaml imports during bundling. Using esbuild's own benchmarks, Bun is 1.75x faster than esbuild, 150x faster than Parcel 2, 180x times faster than Rollup + Terser, and 220x times faster than Webpack. Bundling 10 copies of three.js from scratch, with sourcemaps and minification. Since Bun's runtime and bundler are integrated, it means that Bun can do things that no other bundler can do. Bun introduces JavaScript macros, a mechanism for running JavaScript functions at bundle-time. The value returned from these functions are directly inlined into your bundle. index.ts release.ts import { getRelease } from \"./release.ts\" with { type: \"macro\" }; // The value of `release` is evaluated at bundle-time, // and inlined into the bundle, not run-time. const release = await getRelease(); CLI bun build index.ts // index.ts var release = await \"bun-v1.0.0\"; This is a new paradigm for bundling JavaScript, and we're excited to see what you build with it. Bun more thing... Bun provides native builds for macOS and Linux, but there's been one notable absence: Windows. Previously, to run Bun on Windows, you would need to install Windows Subsystem for Linux... but not anymore. For the first time, we're excited to release an experimental, native build of Bun for Windows. While the macOS and Linux builds of Bun are production-ready, the Windows build is highly experimental. At the moment, only the JavaScript runtime is supported; the package manager, test runner, and bundler have been disabled until they are more stable. The performance has also not been optimized — yet. We'll be rapidly improving support for Windows over the coming weeks. If you're excited about Bun for Windows, we'd encourage you to join the #windows channel on our Discord for updates. Thank you Bun's journey to 1.0 would have not been possible without Bun's amazing team of engineers and the growing community of contributors. We'd like to thank those who helped us get here. Node.js & its contributors: Software is built on the shoulder of giants. WebKit & its contributors, especially Constellation: Thank you for making WebKit faster, you're amazing. The nearly 300 contributors who have helped build Bun over the past two years! What's next? Bun 1.0 is just the beginning. We’re developing a new way to deploy JavaScript and TypeScript to production. And we’re hiring low-level systems engineers if you want to help us build the future of JavaScript. You can also: Join our Discord server to hear the latest about Bun. Follow us on X/Twitter for JavaScript memes and daily updates from Jarred and the team. Star us on Github — it pays the bills! (/s) Install Bun curl npm brew docker curl -fsSL https://bun.sh/installbash Upgrade Bun bun upgrade Changelog since v0.8 If you were using Bun before 1.0, there are a few changes since Bun 0.8. Next.js, Astro, and Nest.js are now supported! The deprecated bun dev command has been removed. Running bun dev will now run the \"dev\" script in your package.json. Bun now supports the following Node.js APIs: child_process.fork() and IPC. fs.cp() and fs.cpSync(). fs.watchFile() and fs.unwatchFile(). Unix sockets in node:http. Hot reloading now supports Bun.serve(). Previously, this was only possible if the server was defined as a default export. server.ts Bun.serve({ fetch(request) { return new Response(\"Reload!\"); }, }) CLI bun --hot server.ts Resources Docs Guides Discord GitHub Blog Toolkit Runtime Package manager Test runner Bundler Package runner Project Roadmap Contributing License Baked with ❤ in San Francisco We're hiring →",
    "commentLink": "https://news.ycombinator.com/item?id=37434117",
    "commentBody": "Bun v1.0.0Hacker NewspastloginBun v1.0.0 (bun.sh) 914 points by tuananh 19 hours ago| hidepastfavorite310 comments Jarred 18 hours agoI work on Bun. Happy to answer any questionsCould the mods change the link to the blog post? It explains better than the github release pageBlog post: https:&#x2F;&#x2F;bun.sh&#x2F;blog&#x2F;bun-v1.0 dang 15 hours agoparentOk, changed from https:&#x2F;&#x2F;github.com&#x2F;oven-sh&#x2F;bun&#x2F;releases&#x2F;tag&#x2F;bun-v1.0.0. Jarred 14 hours agorootparentnext [1 more] Thank you reply lhnz 17 hours agoprevnext [–]> The transition from CommonJS to ES modules has been slow and full of terrors. > Bun supports both module systems, all the time. No need to worry about file > extensions, .js vs .cjs vs .mjs, or including \"type\": \"module\" in your > package.json. > > You can even use import and require(), in the same file. It just works.This is the highlight for me. The Node.js ecosystem is more-or-less completely broken otherwise. This might save it.(I think that the most impressive thing about Bun isn&#x27;t its performance but the pragmatic, developer-friendly choices that have been consistently made by Jarred.) reply Touche 17 hours agoparentThis problem is very old at this point. I&#x27;m doubtful that Bun has \"solved it\" any more than other tools. They&#x27;ve just selected a different set of trade-offs that will result in a different set of packages not working. Is there a reason to think they&#x27;ve cracked some code that other tools were unable to? reply Jarred 15 hours agorootparentIn Bun, you can use import and require in the same file. There&#x27;s three steps for what makes this work:1) We patched JavaScriptCore to load ES Modules synchronously when they don&#x27;t use top-level await. The main tradeoff here is that requiring an ES Module which uses top-level await is unsupported (Bun throws an exception when you try to do this)2) To support require() inside ES Modules, we add `import.meta.require` and have a transpiler integration to convert calls to module.require() or require() into import.meta.require(). This either loads the file as an ES Module or as a CommonJS module, depending on what the transpiler says it is3) We rely on certain heuristics to decide whether a script is an ES Module or a CommonJS module. If they use certain sloppy mode or CommonJS-only features, it becomes CommonJS. If they use ESM features or it&#x27;s somewhat ambiguous, it becomes an ES Module. reply TimTheTinker 9 hours agorootparentWhile I appreciate the convenience that will result from this excellent engineering, I&#x27;m concerned that this could result in a lot of mixed module files that now can only work with Bun.Is there an option to require each file to use either CJS or ESM features, but not both? If not, may I suggest adding that option? reply moritzwarhier 9 hours agorootparentSeems like a case for ESLint and I agree with you.Mixed require and import (the latter in both its static and dynamic variants) is already possible with Webpack and Vite.I hate it and would complain about any code introducing this in any kind of review.It&#x27;s great for integration, full stop.This is an inconvenience where tradeoffs really show and demand to study the behavioral&#x2F;semantic differences.Funnily enough, I still find Bun interesting.Regarding import.meta., I already love Vite&#x27;s dynamic import transpilation features. They aim to work almost transparently and often do (I am not even talking about the glob feature here).That being said, I&#x27;m unsure if Bun&#x27;s way of bridging the module ecosystem gap using import.meta will be as useful.If you ask me, frontend code should ban Node&#x2F;CJS&#x2F;require entirely or transpile it into static or dynamic ESM imports; respectively.Any case where this is not possible unambiguously is a case for human intervention and code rewrite&#x2F;conversion. reply imbnwa 3 hours agorootparent>If you ask me, frontend code should ban Node&#x2F;CJS&#x2F;require entirely or transpile it into static or dynamic ESM imports; respectively.>Any case where this is not possible unambiguously is a case for human intervention and code rewrite&#x2F;conversion.Good god, yes reply jwalton 11 hours agorootparentprevI’ve often wondered why node doesn’t do 1 in this list. It would solve 95% of the problems, I’m sure. reply jcheng 10 hours agorootparentprevFor 1), what about requiring an ES module that doesn’t itself use top-level await, but imports another ES module that uses top-level await? reply Jarred 10 hours agorootparentThat throws since we cannot make it synchronous. It works by reading the internal state of the Promise and getting the value out of it if the Promise is fulfilled. reply lhnz 17 hours agorootparentprevMaybe the trade-offs are better?https:&#x2F;&#x2F;twitter.com&#x2F;threepointone&#x2F;status&#x2F;1698271991927648643 reply eyelidlessness 17 hours agorootparentprevThe compiler is the bundler is the runtime. The reason it’s such a problem on Node is because the tools are separate and often conceptually at odds. reply Touche 16 hours agorootparentNo, it&#x27;s a problem because the formats are fundamentally incompatible and it&#x27;s impossible to infer the author&#x27;s intent. A package with no imports&#x2F;exports or requires could be either ESM or CJS and no heuristic can solve for that reality. reply AaronFriel 16 hours agorootparentHow common are packages with no imports, exports, requires, or \"module.exports=\"?I imagine that&#x27;s quite rare, because such a package would only be imported or required for its side effects; and because that package cannot import or require any others, could you safely just assume that if it was `require()`ed use CJS, and if it was `import`ed, use ESM? reply Touche 16 hours agorootparentRare things still happen a lot at the scale of npm. And due to transitive dependencies it winds up affecting a lot of actual users. And this is just one example of an incompatibility, there are many more. Bun didn&#x27;t discover a silver bullet here that dozens of other tools in the past missed on. reply AaronFriel 15 hours agorootparentDo you have an empirical basis for that? I&#x27;m curious because on one hand, Bun is advertising they are solving a major challenge for library authors, really betting quite heavily on that being persuasive for adoption.The risk for Bun&#x27;s adoption is that they&#x27;re wrong, of course.The risk for Node&#x27;s usage is that they&#x27;re right, and library authors begin urging users to use Bun because it&#x27;s 100x easier than making a useful library with Node. (This will happen very slowly, but things that happen very slowly can start happening all at once very quickly.) reply fkyoureadthedoc 12 hours agorootparentprev> And this is just one example of an incompatibility, there are many moreSuch as? If you could provide 5-10 of your many examples and why you think that Bun&#x27;s approach doesn&#x27;t solve them it would be very helpful. reply throw10920 9 hours agorootparentYeah, I don&#x27;t believe GP. Their assertions that Bun hasn&#x27;t solved this (or that the heuristic used is inadequate) are basically based on speculation without any evidence. reply 3np 5 hours agorootparentJarred even came here and agree with them. It&#x27;s nothing controversial. Just nuance. No need to flame. DYOR. replyjwalton 11 hours agorootparentprevAssuming it has no imports or requires, and no references to meta, it’s a bare JavaScript file, and whether you treat it as esm or cjs shouldn’t matter, no? reply lhorie 7 hours agorootparentJS has two top level grammars, one defaults to loose mode and the other defaults to strict mode, among other nuances.Possibly the most devious nuance is whether the spec&#x27;s appendix B applies, which affects whether html comment syntax is valid (yes, this is a thing). The html comment token can therefore be parsed either as a comment or as a series of operators depending on the grammar being used.Effectively, this means it&#x27;s possible to craft a program that does different things in CJS vs ESM mode. replyRapzid 12 hours agoparentprevI&#x27;ve been creating module projects as default for nearly a year now. It&#x27;s been largely fine for the past 6 months since Typescript 5.0 released with the \"bundler\" resolution strategy.Very rarely run into issues but have gotten around with pnpm patch and meta modifications in the past until projects have fixed issues..My take is 2023 is the year of the module. The water is fine. reply Rapzid 10 hours agorootparentI don&#x27;t usually comment on downvotes and I have just under 5k karma so it&#x27;s uhh, just no thing to me typically..It&#x27;s also against the guidelines, but again 5k karma...That said, kinda curious now downvoted into negative for sharing my, extensive, experience creating module type projects.. Hrrmmm. reply swyx 15 hours agoparentprevagree. i ought to be a javascript expert by now but nothing makes me feel dumber than navigating all the type:module and .js&#x2F;cjs&#x2F;mjs&#x2F;ts stuff. for a production app of course you should be clear about what you are writing. but for prototyping Bun&#x27;s permissiveness lets me write code first and worry about the rest later. reply arjvik 14 hours agorootparent> for a production app of course you should be clear about what you are writingAgree in sentiment, but I don&#x27;t think this even applies to the module&#x2F;import mess. My experience has been that the difficulty is in using different packages that made different choices, and making them interop with your own code. I have still yet to make top-level await work in a Typescript codebase where I need to import nontrivial packages. I don&#x27;t think you should ever need to worry about the specific way your modules are imported, not in prototyping or in production. reply pests 6 hours agorootparentprevI&#x27;ve been writing JavaScript for a long... long... time and I&#x27;ve kinda zoned out the last few years with regards to ESM vs CSJI only know that I perfer writing import over require as those semantics and syntax make more sense to me. reply afgrant 2 hours agorootparentFor the benefit of the future reader, I’m guessing you meant “CJS”, short for CommonJS. reply vorpalhex 16 hours agoparentprevThis is what I pushed Node to support when they proposed their split syntax and I&#x27;m very happy to see Bun adopt this. It is the \"correct\" way as far as I&#x27;m concerned.Node&#x27;s split ecosystem has really hurt the entire language and runtime. reply defen 16 hours agorootparentIs there a quick summary of the problem somewhere? I haven&#x27;t worked on frontend stuff in nearly a decade. reply acemarke 16 hours agorootparentFrom a package maintainer standpoint, trying to support both ESM and CJS in the same published package is a _nightmare_.I wrote an extensive post a few weeks ago detailing all the pain that I&#x27;ve dealt with and problems I&#x27;ve run into this year trying to modernize the Redux packages to fully support ESM and CJS:- https:&#x2F;&#x2F;blog.isquaredsoftware.com&#x2F;2023&#x2F;08&#x2F;esm-modernization-...I&#x27;ve gotten a lot of feedback from other maintainers saying they&#x27;ve run into similar issues.Also had a couple podcast discussions following up on that topic:- https:&#x2F;&#x2F;syntax.fm&#x2F;show&#x2F;661&#x2F;supper-club-shipping-esm-with-mar...- https:&#x2F;&#x2F;changelog.com&#x2F;jsparty&#x2F;290 reply no_wizard 10 hours agorootparentI maintain a lot of packages consumed by thousands of engineers internally at my job.We don’t have super rigid standards in many ways, however that experience has lead me to wonder why so many engineers are struggling with dual support or cjs and ESM.That said, none of those packages are redux level of downloads, and imagine you hit more edge cases than I do in thatEdit: originally stated hundreds. Turns out we’ve grown enough that I can say thousands now reply yoz 13 hours agorootparentprevOh my god, thank you for this. I expected a bad situation, but I underestimated the badness by several orders of magnitude. Makes me want to never touch JS again. reply matheusmoreira 5 hours agorootparentprevI&#x27;m having trouble understanding why ESM was needed in the first place. I&#x27;ve always found the require system to be very elegant. What benefits does the module syntax provide?I forked and customized an old Javascript templating engine and have published it as npm packages. Should I spend effort migrating to the new way? reply defen 14 hours agorootparentprevThat blog post is exactly what I was looking for, thanks! reply meepmorp 11 hours agorootparentprevJesus, I thought python packaging sucked, but wow. reply wdb 11 hours agorootparentprevStill not clear to me what ESM exactly fixes. CJS works pretty well for me. The amount of pain ESM gives in unit tests is enough to ignore ESM. Maybe Bun will make a difference here. reply brundolf 10 hours agorootparentBy being declarative instead of imperative:- The dependencies of a module can be scraped without running the code- The subset of declarations used in an import can be knownThis allows modules to be loaded in parallel, and also allows for things like tree-shaking. The biggest benefits are for web browsers, but all around it&#x27;s a more constrained way to express dependencies, which allows the bundler&#x2F;runtime to take more liberties. reply WorldMaker 10 hours agorootparentprevCJS does not work in browsers. Bundlers fake it well enough you might not feel that pain regularly, but ESM was designed for use in browsers and CJS wasn&#x27;t. reply lf-non 3 hours agorootparentYou could get those benefits through special syntax that chose to not deviate from commonjs semantics.We are in this mess because tc39 explicitly chose to not give a damn about nodejs ecosystem.None of the secondary benefits of ESM to commonjs semantics incompatibility (like recursive imports, top level awaits etc) are IMHO worth the ecosystem disruption. replypier25 4 hours agoparentprevIt&#x27;s anecdotal but I switched to ESM in Node a couple of years ago. Never experienced any problem.My stack is usually Fastify with official plugins and a PG client. reply lemper 6 hours agoparentprevyes, definitely and completely broken. require and import differentiation the most retarded changes, broke my build. spent sometime to understand the substantial difference, turned out it&#x27;s nothing too substantial. reply rubyn00bie 15 hours agoparentprevEvery few years I end up having to write a bunch of JavaScript-- and recently it was time again for me to dig in. The `import` vs `require` thing caused me HOURS of pain. The modern JS ecosystem is truly painful if you&#x27;re not using a react app or some off-the-shelf solution-- and I am not, I&#x27;m writing a small library. I honestly can&#x27;t even fathom how difficult and maddening it has to be for folks just getting started.The fact Bun solves that problem is more than enough of a reason for me to give it a try, I&#x27;m honestly fucking stoked to try it out, and I never thought I&#x27;d have those feelings for yet another JS runtime or build tool. Big thanks to the Bun folks, I&#x27;m looking forward to gaining some sanity in my day. reply colordrops 15 hours agoparentprevSeems like a bad idea to support both. Encourages bad behavior and half-ass code. I&#x27;ve had no problem moving codebases to es6 without a ton of effort.Maybe at most, hide the capability behind an execution flag. reply recursive 15 hours agorootparentThe problem isn&#x27;t your code. It&#x27;s the dependencies of your dependencies. reply sintaxi 12 hours agorootparentprevYou may not be aware that node created a situation where ESM maximizes compatibility when consuming libraries and CJS maximizes compatibility when producing libraries. Its a circular incentive paradigm. I suspect you are consuming libraries using \"import\" and everything \"just works\". Well, under the hood you are likely importing many libraries that use CJS \"module.exports\" because that is what libraries use to ensure their library can be used with both import&#x2F;ESM AND require&#x2F;CJS.The only solution to this problem is to upgrade require work for importing ESM. Once that is implemented ESM will become the natural choice for those publishing libraries. Until that happens library authors are going to continue to use CJS so their libraries are available to everyone. reply WorldMaker 10 hours agorootparentThe last version of Node that only supported CJS libraries has already long faded out of LTS. In my opinion, more libraries should just rip the band-aid off and entirely stop publishing CJS. Sure that will upset some downstream dependencies, but semver major tag it, and many of the downstream dependencies need the kick in the pants to move to ESM anyway. reply 3np 5 hours agorootparentNode.js v12 doesn&#x27;t have proper ESM support and went out of LTSCursory glance looks like for modules - 17 implemented - 17 partially implemented - 7 unimplementedThe question isn&#x27;t just how many? but also which ones?. Anecdotally, I&#x27;ve been test driving bun for a large application with millions of existing customers. So far, the only issue I&#x27;ve had isn&#x27;t with bun per se, it&#x27;s with patch-package not yet supporting the lock file (bun.lockb).Bun is without question faster than yarn by a wide margin. And I say this as someone who really loves yarn. reply jedahan 13 hours agorootparentAll good questions - and every person has different needs.The fact is each potential adopter either needs to go through and comb over the compatibility page (not what I would expect with a drop-in replacement); or just try and see if it works, and be surprised later if they run into an unimplemented module because they were operating under an incorrect assumption. reply kevlened 16 hours agoparentprevIn the section related to node.js compat, they state:> Note — For a detailed breakdown of Node.js compatibility, check out: bun.sh&#x2F;nodejs.The detailed breakdown explicitly states which modules are not supported. reply TheFreim 15 hours agorootparentDrop-in replacement [1]---[1] Not a drop-in replacement reply IshKebab 14 hours agorootparent\"Drop-in replacement\" doesn&#x27;t imply perfect 1:1 compatibility with no missing features or differences. Otherwise there would be no such thing as a drop-in replacement (in the software world at least). reply TheFreim 13 hours agorootparentI think the definition on Wikipedia is correct, otherwise a \"drop-in\" replacement is no different than any other replacement, making it a meaningless term.> [Drop-in replacement] refers to the ability to replace one hardware or software component with another one without any other code or configuration changes being required and resulting in no negative impacts.https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Drop-in_replacement reply jstummbillig 12 hours agorootparentI don&#x27;t see a conflict by that definition. The drop in could easily or partially be interpreted from the perspective of the receiver and does not have to be a static property of the replacement. reply nonethewiser 8 hours agorootparentprevMy feeling is that not all replacements have feature parity, but a drop in replacement does. reply IshKebab 12 hours agorootparentprevSure, and for many projects it can be replaced without any other code or configuration changes. reply bastawhiz 14 hours agorootparentprevIf a drop-in replacement isn&#x27;t almost assuredly 1:1 compatible then _what the heck is it_? The nodejs compat page for Bun notes that base64 encoding is still incomplete. Where do you draw the line? reply WA 14 hours agorootparentprev> Otherwise there would be no such thing as a drop-in replacement (in the software world at least).That&#x27;s obviously wrong, because there are things that could be different while the API&#x2F;compatibility is still matching 1:1, such as:- speed, memory usage, memory safety- additional features, more capabilities- simple licensing stuffImho, a drop-in replacement actually suggests that you can simply swap out the runtime and expect your code to work out of the box. reply pxc 13 hours agorootparentTo me it mostly implies that wherever the replacement is supported, it doesn&#x27;t require substantial reconfiguration or learning a different interface. It&#x27;s about that approach, even when the execution of that approach is limited or incomplete in scope.It does generally suggest a high degree of compatibility to me though. reply 3np 5 hours agorootparentprevpodman is a drop-in replacement for docker but yarn is not a drop-in replacement for npm. Makes sense? reply jedahan 13 hours agorootparentprevEither I missed this on first read-through, or they just added it.It seems the note mentioning this feels buried for me under a large banner image, instead of near all the other text about compatibility.Anyway, glad it is there, hope that their communications design improves in the future as at least a few others got caught with mismanaged expectations. reply keb_ 17 hours agoprevCongrats!This has probably been asked before, but has there been any thoughts about moving community chat to a platform other than Discord? Discord has been brought up many times on HN for its accessibility&#x2F;privacy&#x2F;proprietary lock-in concerns that don&#x27;t seem to be in line with the spirit of open-source. Also see [1].[1] https:&#x2F;&#x2F;drewdevault.com&#x2F;2021&#x2F;12&#x2F;28&#x2F;Dont-use-Discord-for-FOSS... reply Liquix 16 hours agoparentNot likely even in light of how important it is to not use Discord. In the comments of the bun 0.6 announcement, a question similar to yours was downvoted almost enough to get flagged:https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=35970869And in the comments of the bun 0.8 announcement, the same question generates very little interest and some well every other project uses it, so...:https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37244294 reply toastal 16 hours agorootparentYet we should still continue to press against proprietary chat. Developers are the kind of folks wise enough about technology to know better than to support this. There are very good reasons to at a minimum support a bridge. If we have to teach new developers raised on Discord, then that’s a great opportunity for them.> Choosing proprietary tools and services for your free software project ultimately sends a message to downstream developers and users of your project that freedom of all users—developers included—is not a priority.— Matt Lee reply epolanski 9 hours agorootparentI see this issue so overblown.Discord is just an added communication channel, mostly for the community.Relevant discussions happen on GH.I am part of numerous programming discords and I just see no issue with them being on discord, again, starting from the fact being there is far from being a requirement for anything really. reply RunSet 2 hours agorootparent> I am part of numerous programming discords and I just see no issue with them being on discordHas Discord ever asked you to provide and confirm your phone number to continue using it? reply nonethewiser 8 hours agorootparentprevWell if that’s your concern lets start with proprietary remote repositories such as github and all the CI providers. That’s a lot more critical to the development process than a chat app. reply keb_ 6 hours agorootparentI prefer to compare apples to apples. Git is distributed. If you host your repo on Github, you can very well just push that same Git repo to Sourcehut or your private Git server.But otherwise, yeah, I would warn against potential vendor lock-in, especially if that service is not open-source. reply toastal 4 hours agorootparentYeah, the lock-in will come with CI & and the pull-request model that requires an account in this case. The former Microsoft GitHub largely ate all the competition with its own ‘free’ (gratis) offering in Actions, but you could seek out a different CI or self-host. The latter could be easily circumvent by offering a mailing list or maintainer email—or mirror elsewhere—but it’s rare to see this with projects on Microsoft GitHub.Well, and joining most discussions require an account, and if your alternative communication platform is Discord, we see all the same issues of lock-in. reply toastal 6 hours agorootparentprevMatt Lee’s quote comes from an article about why you would want to leave the walls of Microsoft GitHub. I would agree that would be ideal too, but developers are even more reluctant with that one—if you think suggesting libre coms gets you a downvote here, try suggesting not Microsoft GitHub. reply KRAKRISMOTT 13 hours agorootparentprevHacker news is proprietary too reply fkyoureadthedoc 12 hours agorootparentI don&#x27;t think anyone uses it for community chat &#x2F; support. You can also content without logging in, its content is search indexed, and it doesn&#x27;t try to convince you to spend money on it. reply MatthiasPortzel 11 hours agorootparentSo HN wasn’t a perfect example. What about GitHub. You can’t use GitHub’s search feature unless you’re logged in, and it very much encourages you to spend money on it.The Discord-hate is a double standard that is not applied to any service (to the extent that comments criticizing Discord appear with extreme regularity on threads that should be completely unrelated). reply keb_ 6 hours agorootparentGit is distributed.> Discord-hate is a double standard that is not applied to any serviceWhat does this mean? Dropbox&#x2F;Amazon&#x2F;Google&#x2F;Windows get criticism across the web and on HN regularly, some of those far more than Discord.> to the extent that comments criticizing Discord appear with extreme regularity on threads that should be completely unrelatedI don&#x27;t get it. Are you implying a conspiracy? reply tyre 10 hours agorootparentprevGithub issues are indexed by google and searchable. reply SparkyMcUnicorn 10 hours agorootparenthttps:&#x2F;&#x2F;www.answeroverflow.comAnd I think Deno uses it. reply KRAKRISMOTT 11 hours agorootparentprevNo, but if your account at one of the big techs gets stuck in bureaucratic hell, the only way to get support is to make a fuss here. reply keb_ 12 hours agorootparentprevFOSS projects don&#x27;t organize on HN, it&#x27;s a public link aggregator. reply spencerchubb 11 hours agoparentprevAre there any FOSS alternatives to Discord that are free (as in money) reply keb_ 7 hours agorootparentZulip is free for open source projects.Creating a channel on Matrix.org is free. reply kylemh 15 hours agoparentprevDiscord&#x27;s accessibility has improved quite a bit. Even a screenreader user in the article&#x27;s source section agrees:> What I can tell you is that, to my surprise, Discord’s accessibility has apparently improved in recent years, and more blind people are using it now. One of my blind friends told me that most Discord functionality is very accessible and several blind communities are using it. He also told me about a group of young blind programmers who are using Discord to discuss the development of a new open-source screen reader to replace the current Orca screen reader for GNOMEDiscord is honestly a great place for FOSS to house their communications. I find all of the articles claims very haphazard:> When you choose Discord, you are legitimizing their platform and divesting from FOSS platformsIt is legit? It&#x27;s free? It has loads of compelling features, is very accessible, and - most importantly... Also, choosing Discord does not take value away from FOSS communication platforms.> Use IRCIt isn&#x27;t IRC which is very inaccessible to lots of people new to computers and software in general. reply keb_ 14 hours agorootparent> Discord&#x27;s accessibility has improved quite a bit. Even a screenreader user in the article&#x27;s source section agrees:Yes, but this ignores the others issues the post brings up: Users who cannot afford new enough hardware to make the resource-intensive client pleasant to use are also left by the wayside.Or: Discord also declines service to users in countries under US sanctions, such as Iran.> Discord is honestly a great place for FOSS to house their communications ... Discord does not take value away from FOSS communication platforms.The blog&#x27;s author, and others such as myself disagree. Discord chats are not indexible by search engines, so solutions are harder to find. You need a Discord account, and you need to join the channel to even see chat and use the search feature. Discord is proprietary and non-extensible because of it. Lastly, Discord is also profit-motivated, so they can shut things down or add limitations because they need to maintain a profit, and there would be nothing we can do about it. \"Enshittification\" as HN users love to say, is practically inevitable.> It isn&#x27;t IRC which is very inaccessible to lots of people new to computers and software in general.Which client are you speaking of? :) The beauty of IRC, Matrix, XMPP, etc is that you have the choice and freedom (without being legally threatened by Discord Inc.) to build your own client. reply epolanski 9 hours agorootparentBut discord is a better experience than IRC or any other chat I know of, and I say it as someone who pioneered #quakenet, #freenode and #libera on IRC.Instead of bashing library authors that have already so much to think, why don&#x27;t you propose a discord replacement and pay for it, while providing the same ease of use for the users and the same features from channels, threads, third party apps&#x2F;plugins, video conferencing, etc? reply keb_ 6 hours agorootparent> But discord is a better experience than IRC or any other chat I know of, and I say it as someone who pioneered #quakenet, #freenode and #libera on IRC.I&#x27;m glad you enjoy Discord! And thanks for your hard work. But I disagree, and all of the issues with Discord I pointed out above still persist despite your love for the UX.> Instead of bashing library authors that have already so much to thinkI never bashed library authors.> why don&#x27;t you propose a discord replacement and pay for itI engage in communities that use Zulip and Matrix. Zulip is free for open-source projects [1], and I donate to a small community that hosts its own Matrix server.> while providing the same ease of use for the users and the same features from channels, threads, third party apps&#x2F;plugins, video conferencing, etc?We&#x27;re kinda getting away from the point here. No one is suggesting that there is a FOSS alternative to Discord that has 100% feature parity.[1] https:&#x2F;&#x2F;zulip.com&#x2F;for&#x2F;open-source&#x2F; reply nonethewiser 8 hours agorootparentprev> Users who cannot afford new enough hardware to make the resource-intensive client pleasant to use are also left by the wayside.Wait… people can’t run web browsers? reply keb_ 6 hours agorootparentBy \"client\", they mean the web application that is Discord, which is CPU and RAM intensive especially for folks with older hardware. reply Liquix 14 hours agorootparentprev> choosing Discord does not take value away from FOSS communication platforms.it does though. it&#x27;s the same vicious cycle that allowed microsoft to gain control of the OS market: developers write programs for windows (because that&#x27;s where the users are) and users run windows (because that&#x27;s where the programs run). the more people agree to use discord, the more it becomes \"the place where thecommunity is\", the harder it becomes for any community to not use it.9&#x2F;10 discord users don&#x27;t understand or care about this at all. which is why it&#x27;s of utmost importance that developers - especially open source developers, presumably developing open source software for a reason - encourage discussion on other platforms. reply pxc 13 hours agorootparentprevRequiring stakeholders (users, contributors, whatever) in a free software project to use non-free software to fully participate in the community is a disservice to the movement, the users, and software freedom generally.There&#x27;s some room for debate about offering Discord as a bridged option. But having the official community chat only on Discord? How is there even a question? reply MatthiasPortzel 11 hours agorootparentThis argument also applies to GitHub, yet I’ve never seen an open source project criticized for hosting issues on GitHub.Both are proprietary websites owned by for-profit companies. Both require you to create an account in order to participate in discussion. reply keb_ 6 hours agorootparentA couple points:1. Git is distributed by design. Hosting on Github tends to not be controversial because that code can also live on Gitea&#x2F;Sourcehut&#x2F;your private git server at the same time. If Github goes down, it does not really matter. Very different from Discord, where there is no way to actually backup server&#x2F;channel data, and attempting to do so may be a violation of the ToS and get you IP banned.2. Your argument hinges on the fact that you have never seen an open-source project criticized, but it does happen. The blogpost in the parent comment even suggests not hosting on Github. reply pxc 10 hours agorootparentprevMost sizeable F&#x2F;OSS organizations track bugs somewhere other than GitHub for exactly that reason!Don&#x27;t get me wrong. I get small developers defaulting to infrastructure they don&#x27;t have to set up and maintain themselves, and I understand wanting to meet people where they&#x27;re at. But it&#x27;s definitely a problem that GitHub plays such a central role in F&#x2F;OSS development, too. reply nonethewiser 8 hours agorootparentprevNon free software? Either this seems misleading or Im confused. You don’t need to pay to participate in the discord. The server owners may have costs but thats not a burden on the community and is always going to be the case. reply keb_ 6 hours agorootparentYou may be unfamiliar with the term \"free software\". See the Wikipedia article: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Free_software reply toastal 15 hours agorootparentprevAccessibility also refers to the hardware & network speeds of the users machine. Discord is a heavy web app (that also pings back a lot of analytics) with users actively using ‘heavy’ features like sending videos. It’s also subject to US sanctions or internal bans where entire countries can be blocked or do the blocking. Speaking of blocking, Discord could block a community member for a non-community-related reason (or by mistake) & there will be no way to resolve it since the community is not in control of the server.Free as in gratis, sure. But as in libre? No, it’s definitely proprietary & it’s free because users are the product (data collected and upselling Nitro); not every user wants to give up their privacy freedoms to participate. Discord’s not federated so users will be required to create an account & agree to the ToS & CoC of Discord, not the community running it. Discord has also been hostile towards folks trying to make alternative clients to meet usability needs & certain kind of bots.Without IRCV3 & bouncer it would be a difficult&#x2F;unexpected experience for a new user. Luckily IRC isn’t the only libre option. If you want to keep the system requirements low XMPP MUCs are good & allow federation. If you want newer bells & whistles at the cost of system requirements federated Matrix can be considered (tho centralization concerns around Matrix.org having the most users, most used server, most used client, & controls the spec). There are bridges between all of these that you can choose as many or as few as meets the community needs such as a community-hosted XMPP main server in a neutral country with bridges to IRC & Discord. reply mrinterweb 14 hours agoprevSince Bun is VC backed, what is the monetization plan? One of the things I consider with new tech is \"how likely will this tech still be actively developed in N years.\" Bun will need to make money somehow or funding will be pulled.I see bun&#x27;s licensing is MIT, and that is fantastic. So that does give me some hope it won&#x27;t die should the business go under. I hope the business succeeds, but I&#x27;m curious should I adopt bun, what might the upsell be down the road. reply crishoj 14 hours agoparentBusiness plan is outlined on https:&#x2F;&#x2F;oven.sh&#x2F;:Oven will provide incredibly fast serverless hosting & continuous integration for backend & frontend JavaScript apps — and it will be powered by Bun.It will support popular frontend frameworks like Next.js, Vite, SvelteKit, SolidStart and many more — along with backend frameworks like Express, Fastify, NestJS and more.The plan is to run our own servers on the edge in datacenters around the world. Oven will leverage end-to-end integration of the entire JavaScript stack (down to the hardware) to make new things possible. reply paxys 6 hours agorootparentConsidering there are dozens of mainstream serverless hosting providers out there already, with more popping up every day and pricing going down to ~free, I can&#x27;t really see this being a viable business model anymore. reply gsuuon 6 hours agorootparentI mean, it can if they do it better than everyone else and eat their lunch reply fschuett 14 hours agoparentprevSince it&#x27;s a bundler, I guess something like \"bun deploy\" to make money from hosting JS apps. It&#x27;s a common strategy, getting mass developer adoption first, then soft-pushing for their private hosting of applications. reply bsimpson 8 hours agoparentprevThere was a rad HMR devserver called Pundle. It was instant-fast, but it was also maintained by one guy in a poor country.Trying to keep up with one guy&#x27;s side project caused me so much pain that I moved everything to Rollup and never looked back.VC funded and random side project clearly have different concerns, but the ultimate risk with either is \"if the creator can&#x27;t support me, then what\" reply xavdid 13 hours agoprevCongrats! Your blog post paints a very compelling value proposition for simpler, all-in-one (yet extensible) software. I find I&#x27;m more compelled these days by \"batteries included\" software than \"bring your own everything\", so I&#x27;m excited to try this out.It reminds me as a runtime version of Rome tools, which had a similar goal (replace a bunch of software with a single faster one). It went under and has [transition to OSS under a new team](https:&#x2F;&#x2F;biomejs.dev&#x2F;blog&#x2F;annoucing-biome). I hope you find more success than they did! It&#x27;s certainly a hard problem to solve. reply kaizoku111 6 hours agoparentI agree with \"batteries included\", if node.js and co etc. had a good harmonious ecosystem to begin with we wouldn&#x27;t need such an approach. Looking at the way Apple does things, they own and control the hardware and OS which allows them to deeply optimise their systems and also provide an ease of mind knowing all their devices will work seamlessly across the board. Having an all-in-one toolkit reduces overhead of running around finding the perfect solutions, when it is already right in front of them. reply cmbothwell 17 hours agoprevThe proposition of replacing the layered morass of node-based tooling (node, ts-node nodemon, tsc, jest, ts-jest, webpack, BABEL, 2 incompatible module specs, UMD insanity, 3 package managers!) and the Cambrian explosion of config files that it leads to is super compelling.The tooling situation around JavaScript is certainly my biggest pain point around it and turns a really very capable and pleasant language (ES6 + TS) into a complete chore. Here’s hoping that Bun can deliver.It has to be a similar feeling as going from CMake to Cargo. reply zx2c4 18 hours agoprevI would be interested to learn from somebody with experience using both Bun and Deno: which one is actually the more compelling Node successor? Bun&#x27;s website makes some impressive performance claims over Deno. Are these true in practice? And if so, why? Seems like Deno also has similar goals. Also, are there large philosophical differences between the two projects? Like Bun tries to reimplement the kitchen sink but Deno wants a new post-Node way of doing things? (Just guessing, no idea if that&#x27;s true.)Any seasoned users with time spent on both? reply afavour 18 hours agoparentI’m not over the moon with it but I’m kind of interested to know why I need a Node successor at all. Both Bun and Deno are VC funded tools so I have base level suspicion around monetization and longevity.It seems Bun’s major selling point is performance. I can’t say I’ve really run into massive performance concerns with Node. It isn’t earth shatteringly fast but I’m way more likely to run into IO constraints than Node speed issues.Deno’s major selling point was that it was Node Done Right in many ways: better packaging, ES6 all the way, etc. (a pitch I was sold on!) but it seems they gave up trying to create a new ecosystem and instead are adding Node compatibility.Alongside all of this I&#x27;m encouraged by a number of recent Node improvements like having its own test runner and built in .env support. So I’m struggling to see good reason to use either Bun or Deno. Even if I were to switch I&#x27;d need to make sure I have a concrete path back to Node should the new generation tool become unviable. reply madsbuch 17 hours agorootparentIt is well explained in the blog article: https:&#x2F;&#x2F;bun.sh&#x2F;blog&#x2F;bun-v1.0#why-bun-existsThis is extremely compelling for frontend DX. reply afavour 17 hours agorootparentThat kind of speaks to my point, though: a number of the features listed there (e.g. test runner, .env file support, watch mode) have either been recently added to Node or will be soon (and are available today as experimental flags).The bundler stuff is certainly more compelling though the page doesn&#x27;t specify what makes it better than esbuild except that it comes built-in... but that&#x27;s where, for me, VC concerns raise their head. If I go all in on Bun bundler, what happens if the company switches their priority towards monetization and neglects the bundler? I&#x27;m going to have to unroll all the configuration work I will have done and go back to an external bundling library. And it&#x27;s still not entirely clear what I gain! reply fkyoureadthedoc 12 hours agorootparentIf it delivers on the promise of solving the require vs import module nonsense that would be enough for me. Maybe node copies that too, but that&#x27;s also a win imo. reply ShadowBanThis01 9 hours agorootparentDoes Deno suffer from that in the first place? I don&#x27;t know what that issue even is, so I&#x27;m just asking. reply Rapzid 16 hours agorootparentprevGetting VC funded HHVM vibes.Not sure how they plan on monetizing. reply afavour 16 hours agorootparentSeems they both have similar plans: serverless hosting, continuous integration, etc. etc.All valid ideas. But the involvement of VCs makes me wonder what kind of scale they&#x27;re going to be expected to achieve and what will happen if they don&#x27;t. reply Rapzid 13 hours agorootparentI&#x27;m super skeptical of the viability, much less the desirability, of language VM specific CI and hosting services..Feels like an acquisition by Cloudflare&#x2F;Vercel is a more likely exit scenario.. But then if we get an HHVM repeat and most of the benefits are just introduced into Node proper what&#x27;s the real value to the aquirer? Aqui-hire? Deno has raised at least $25m though, and bun $7m..I guess most startups fail so maybe there is just no answer. reply bsimpson 8 hours agorootparentGoogle is failing me - what&#x27;s the VC spin on HHVM? reply Rapzid 3 hours agorootparentVC spin?HipHop Virtual Machine was created over a decade ago to address serious performance issues with PHP. This spurred(lit a fire?) serious efforts to address the issues in PHP proper. Over a rather short period of time PHP became performant enough that HHVM was sunsetted.I think the history here would call into question the viability of Bun as a monetary investment. It may end up a net good for the ecosystem , but if the major benefits can just be incorporated back into Node proper what are the ROI prospects? replyTheAceOfHearts 18 hours agoparentprevThese tools are way too young for anyone to have actually spent a lot of time using them.Bun is bundling everything and making it really fast, while also striving to maintain as much compatibility as possible with Node. It doesn&#x27;t throw away the existing ecosystem.Deno took on too much of an adversarial perspective towards the Node ecosystem and now they&#x27;re working towards re-adding support.So in terms of a successor, I&#x27;d say the only option is Bun because it&#x27;s still trying to maintain compatibility with Node while innovating with new features. reply mirkodrummer 18 hours agoparentprevNot a seasoned users, mostly played with Deno. To me Deno seems more oriented to be an alternative Node runtime with security as first principle and built-in support for Typescript, JSX with some tooling like linter. It&#x27;s also based on V8. My best guess it&#x27;s what Ryan Dahl wanted Node to be as an afterthought. Bun, technically speaking is based on Webkit, but can&#x27;t really say why, seems a better all-in-on tool(also remember rome?) and not only a runtime. Also with compatibility with current frameworks out of box, Deno wasn&#x27;t npm compatible some time ago and I wonder if it ever meant to be and not a pivotal change on the run reply azu 4 hours agorootparent> technically speaking is based on Webkit, but can&#x27;t really say whyWhy Bun uses WebKit&#x2F;JSC was described here:> One of the reasons why Bun bet on JavaScriptCore instead of embracing the server-side V8 monoculture is because JavaScriptCore and WebKit&#x2F;Safari are strongly tied together. This means that Bun can often use implementations of Web APIs from WebKit&#x2F;Safari directly, without having to reimplement them. This is a great example of that.via https:&#x2F;&#x2F;bun.sh&#x2F;blog&#x2F;bun-v0.7.1#messageport-messagechannel-ar... reply ShadowBanThis01 9 hours agorootparentprevIt&#x27;s known that Deno tacked on NPM support.For new, from-scratch projects done by someone who doesn&#x27;t know Node anyway, why not use Deno? I just started writing the server side of a mobile app with it, and I didn&#x27;t even know JS, TS, or have any experience with routing frameworks. I had server-side queries working in a matter of days, and I don&#x27;t claim to be fast at all.The issues cited in the Bun PR, like the morass of modules and related performance problems, don&#x27;t seem to exist in plain Deno. Or am I missing something? I don&#x27;t anticipate ever integrating anything from NPM, so I&#x27;m actually disappointed (but understanding of the motivation) to see Deno hedge on the \"fresh start\" idea. reply e1g 18 hours agoparentprevWe&#x27;re a full-stack TypeScript shop, and I manage ~50 internal libs and ~500K LOC of TS. Last month I tested out both Deno and Bun as alternative runtimes for us. TLDR: for any semi-complex codebase we have, Bun almost always works, Deno almost never works. We now run all our tests in both Node.js and Bun, and gave up on trying to make Deno happen. reply ketzo 18 hours agorootparentIf you don&#x27;t mind sharing, what are some of the issues you&#x27;ve had with Bun so far? reply e1g 18 hours agorootparentnext [–]1. Missing `node:http2` 2. Missing `node:test`, so it&#x27;s more difficult to execute the same test files within Bun as we do via Node. I wrote a custom Bun loader to mock parts of `node:test`. 3. Vite and ESLint do not work. 4. Still occasionally segfaults, and it&#x27;s difficult to find out why&#x2F;where. 5. Surprisingly, some code runs slower in Bun than in Node. For example, generating JWE with symmetric encryption. But this might be WebCrypto vs OpenSSL. 6. Subtle differences between WebKit and V8 (e.g., how they handle dates). reply jaktet 16 hours agorootparentHave you tried since v0.7? Vite support was supposedly added then reply e1g 7 hours agorootparentSo it has, thanks for pointing that out. I goofed as I actually actually meant to write Vitest, which remains broken in v1.0. reply tarasglek 3 hours agorootparentI am annoyed with the bombastic claims behind bun.I wasted a day trying to get vite to work when they first announced it. Really excited about not needing >1gb of ram to compile a react project... Boggles my mind that react bundling uses more RAM than compiling linux.It is still unable compile http:&#x2F;&#x2F;chatcraft.org due to some problem with wasm plugin.They also said that bunx --bun option was a pre-1.0 workaround, and didn&#x27;t keep that promise.Performance-wise their claims are suspect, safari js engine was always better at startup and memory use at the expense of a relatively weak JIT. They paired that up with a ton of stuff reimplemented in native code to make their cli and hello world workflows fast. This means people will be in for a perf surprise when they start bottlenecking in JS hotpaths. reply wdb 18 hours agorootparentprevI haven&#x27;t been able to get any work code working in Bun yet. All my personal&#x2F;pet projects work fine, though. Speed is impressive when it works.I did raise issues with repros for it only wasn&#x27;t able to try to fix the issues myself. Building Bun is not working for me reply ShadowBanThis01 9 hours agorootparentprevWhat were your \"semi-complex\" codebases written in and for? Were they testing native Deno, or its integration of NPM packages?I have never used Node and am creating a new project from scratch, so I don&#x27;t know how worried to be about your commentary. reply e1g 7 hours agorootparentThe \"semi-complex\" code is legacy code, aka revenue code. Started with plain JS in CJS on Node 12 and evolved to strict TS&#x2F;ESM on Node 20. A lot of cruft built up from that multi-year evolution.These days, if you&#x27;re authoring from scratch, just write idiomatic TS in ESM, and you&#x27;ll be fine. Even if targeting only Node, prefer to use Web standards (e.g., fetch, Request&#x2F;Response, WebCrypto, Web Streams, URL, AbortController) as Node is migrating in that direction, and standard-compliant code will give you optionality in runtimes (Bun&#x2F;Node&#x2F;Workers). reply ShadowBanThis01 6 hours agorootparentThanks for the reply! I&#x27;m just writing TS code that utilizes Deno&#x2F;Oak and their MySQL support, to present a REST-style API. I don&#x27;t know enough to say whether these depart from the standards you&#x27;re recommending. If they do, I don&#x27;t know how I would do routing and API support using only the things you mentioned. I&#x27;m a one-man band writing both a mobile app and the server to support it. I also know very little about scaling, which I anticipate hiring outside expertise on.I want to invest my time wisely and learn portable techniques, but I realize the scope of my ignorance may exceed what you can address in a comment forum! reply schemescape 18 hours agoparentprevIf I recall correctly, Bun doesn’t support Windows, unlike Node&#x2F;Deno.Edit: sounds like this is changing. Thanks for the correction! reply jakegmaths 17 hours agorootparentIt has experimental support as of this release: https:&#x2F;&#x2F;bun.sh&#x2F;blog&#x2F;bun-v1.0#bun-more-thing reply schemescape 17 hours agorootparentInteresting! The original link has no Windows binaries, so I assumed nothing had changed. reply schemescape 8 hours agorootparentprevThe link has been changed to the Bun 1.0 blog post which specifically mentions experimental&#x2F;incomplete Windows support. reply evbogue 18 hours agoparentprevDoes Bun support url imports for module loading? reply lioeters 14 hours agorootparentI was curious about this too, whether Bun supports URL module imports. Skimmed through the documentation a few times, and I believe it does not.But, the command `bun install` supports NPM and custom registries, as well as Git and .tgz URLs.https:&#x2F;&#x2F;bun.sh&#x2F;docs&#x2F;cli&#x2F;install#git-dependencies reply wdb 11 hours agorootparentprevI think you can achieve this via a bun plugin reply manojlds 18 hours agoparentprevDeno wanted a post-Node way but they have gone back on their original ambitions (which never resonated with me, to be frank) and now have a pretty limited compatbility whereas Bun has full compatibility with Node. reply ignoramous 18 hours agorootparentPer their own docs, Bun is not fully Node compatible [0]. In my experience, even for APIs its docs claim full-compatibility has some sharp edges. That said, Bun&#x27;s node-compat story is better than Deno&#x27;s.While Node&#x27;s performance story keeps improving release over release [1].[0] https:&#x2F;&#x2F;archive.is&#x2F;NCzRQ[1] https:&#x2F;&#x2F;twitter.com&#x2F;lemire&#x2F;status&#x2F;1699459534190698999 reply re-thc 18 hours agoparentprevDeno wanted to be different but never did enough to force its way. Maybe if they had 10x the funding to rewrite the ecosystem. Now it&#x27;s in limbo.Bun aims to be a better replacement to Node. There&#x27;s less to consider so it&#x27;s just a matter of if it&#x27;s compatible enough and faster &#x2F; better to warrant the switch. A lot easier to swallow. reply ShadowBanThis01 9 hours agorootparentThere&#x27;s plenty to consider if you don&#x27;t care about Node compatibility. From what I&#x27;ve read (including in this thread and on the Bun PR page), Node seems pretty messy, with modules coming from different sources in different ways. In Deno you just import with a URL.I know very little about JS and TS and \"modules,\" but from a newcomer that&#x27;s how it all looks. I&#x27;m happy to have any further insight! reply ggregoire 18 hours agoprevIf Bun is able to run and bundle a TypeScript React app out-of-the-box, what are the benefits of using Vite.js on top of it?I&#x27;m confused cause this guide on the official site showcases how to use Bun + Vite.js to build a TypeScript React app. [1]There is also this issue on their Github. [2]Can Vite.js be used to handle more complicated scenarios &#x2F; advanced use cases that Bun doesn&#x27;t handle? My use of Vite.js is pretty basic (start & build with the default TS+React config) so maybe I&#x27;m missing something here.--[1] https:&#x2F;&#x2F;bun.sh&#x2F;guides&#x2F;ecosystem&#x2F;vite[2] https:&#x2F;&#x2F;github.com&#x2F;oven-sh&#x2F;bun&#x2F;issues&#x2F;250 reply jaktet 16 hours agoparentVite still leverages node, esbuild, swc, tsc, etc for parts it’s not directly responsible for.Granted I have no experience with bun yet, my take on it is that you can leverage bun for running the local dev server (instead of node), leverage bun for bundling (instead of esbuild or tsc or rollup or an amalgamation of them), and leverage bun for transpiring instead of Babel and typescript.What vite provides is an easy to configure setup for developing frontend applications with a nice DevX when working locally. reply brundolf 10 hours agoparentprevIt&#x27;s a big ask to get people to adopt an ecosystem wholesale. Compatibility with the existing ecosystem is a key goal of Bun, so that people can start using it immediately on their existing codebases and then adopt it gradually for more and more stuff reply jadbox 17 hours agoparentprevI&#x27;m new around here, I&#x27;ve only seen people use Vite with bun for HMR, but imho, it&#x27;s not great to combine them just yet as there&#x27;s config complexity. reply ggregoire 16 hours agorootparentI thought Bun had HRM out-of-the-box but it&#x27;s not working? Not sure. https:&#x2F;&#x2F;github.com&#x2F;oven-sh&#x2F;bun&#x2F;issues&#x2F;833 reply fyzix 13 hours agoparentprevMy guess is that you can leverage the vite&#x27;s plugin ecosystem...postcss,tailwind,terser etc.And most of the new meta frameworks(nuxt,sveltekit,astro,solidstart,qwik) runs on vite so that might pave a path for adoption. reply nsonha 11 hours agoparentprevthat&#x27;s like asking why need vite when you have tsc. I assume bun does not \"run Typescript React app\", it only does the jsx,tsx transpiling out of the box. reply Jarred 15 hours agoprevWe originally planned to release yesterday, but there were test failures in fetch() body streaming that needed to be fixed. The blog post was not meant to be public until Bun 1.0 was available on GitHub, but the blog post link was publicly accessible and our RSS feed had a bug that didn&#x27;t hide draftsThe specific bug ended up not being in fetch() body streaming, but in our JavaScriptCore binding for getting a property from an object that may not have defined the property. Not all of our code was checking that the value was an object (only that it was a JSCell, which usually is an object, but things like symbols and BigInt are not JSObject)Thread from yesterday: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37424724 reply CoolCold 4 hours agoparentDoc&#x27;s install section for Linux missing DEB&#x2F;RPM, please update docs.Extra hint - you may provide text snippet for Ansible playbook&#x2F;taskset with proper sha256&#x2F;similar checksumming for installing via \"Download from Internet, not from your distro repos\", the same for Puppet (which gonna be bit more complicated).Will ease up a bit system&#x27;s administrators work - SAX - system administrator experience, if you wanna name it that way :) reply padjo 17 hours agoprevLooks great but the fact that it uses zig which is pre 1.0 and describes itself “not for use in production” gives me pause.Realistically how much of a problem is this likely to be? reply shawabawa3 17 hours agoparentI guarantee zig is 100x more production ready than 99% of the 4 million nested dependencies included in the average js project reply vntx 17 hours agorootparentWow, that many guarantees should persuade me to base my tech stack on Bun and Zig.Seriously, I think this question is worth asking. Why was Zig chosen as the language when it’s not even stable, and what implications does this have for the long term viability of the project (besides the fact that its _fast_)? Zig’s head guy isn’t even sure when Zig will hit v.1.0, and Bun’s head guy hasn’t really responded either AFAIK. reply jeroenhd 16 hours agorootparentZig is fast, promising, compatible with existing C libraries, and relatively barebones. The language itself may not be ready for production, but the binaries built in the language work just fine.If Zig dies tomorrow, bun could probably continue using it as-is, perhaps after fixing the bugs they encounter. It&#x27;s \"the API and language spec isn&#x27;t complete yet\" unstable, not \"we haven&#x27;t implemented floating point operations yet\" unstable. So far, only the allocalypse has caused major grief in terms of language changes, as far as I know. reply nusaru 15 hours agorootparentWhat does \"allocalypse\" mean here? Were memory allocations in Zig less explicit in the past? reply hiccuphippo 11 hours agorootparentNo, they changed the allocator API so everyone had to update their code, here&#x27;s the story:https:&#x2F;&#x2F;pithlessly.github.io&#x2F;allocgate.html reply omginternets 14 hours agorootparentprev>The language itself may not be ready for production, but the binaries built in the language work just fine.Why is it not ready for production if the binaries work just fine? reply sroussey 11 hours agorootparentBecause they may yet still change the language spec. reply jeroenhd 5 hours agorootparentprevBecause an update to the compiler could come out next week that completely alters the language. If you&#x27;re developing a product in this language, you&#x27;ll need to put significant effort into keeping it up to date, and any dependencies you&#x27;ve downloaded in source form may not work on the most recent compiler.In one such change, all *Allocator parameters were turned into Allocator parameters (not the missing *). That meant rewriting tons of function bodies and signatures, because passing specific allocators around is one of Zig&#x27;s strengths. The compiled binaries came out just fine, but every major Zig component needed refactoring from one compiler version to the next. reply warent 16 hours agorootparentprevit&#x27;s possible that they chose Zig if this started as an unpaid passion project, and it simply sounded the most interesting to them.Demonstrably by this 1.0 bun release it seems safe to say it ended up being a fine decision, no? reply afavour 15 hours agorootparent> Demonstrably by this 1.0 bun release it seems safe to say it ended up being a fine decision, no?That’s just a decision they’ve made themselves. I honestly think it’s an interesting question: can software built on aRealistically how much of a problem is this likely to be?It is a very young language with momentum and a foundation behind it. I&#x27;m not aware of any pre 1.0 stability guarantees.In fact it is generally recommended to use the nightly release (see: https:&#x2F;&#x2F;ziglang.org&#x2F;learn&#x2F;getting-started&#x2F;) because they are moving quickly.Definitely seems to be in a early adopters and tinkerers phase. reply postalrat 8 hours agoparentprevCalm down Gramps. People have moved on. Rust is yesterday&#x27;s technology. reply nkmnz 36 minutes agoprevIf someone from the Nuxt team is around: I have 5+ projects with different module usage and all of them just log when trying to run bun —bun run dev:ERROR Cannot build module „nuxt“ {} reply danielroe 11 minutes agoparentI&#x27;m not aware of any issues as long as you are on the latest Nuxt and nuxi versions, so it might be easier to help if you open an issue with a reproduction on https:&#x2F;&#x2F;github.com&#x2F;nuxt&#x2F;nuxt&#x2F;issues. reply creativeembassy 18 hours agoprevPersonal experience: Bun has been a flawless drop-in replacement for both NodeJS and npm&#x2F;yarn since I started using it around v0.4. Not only have I had zero issues running it, but it&#x27;s been WAY faster. No benchmarks, but very noticeable, from \"let&#x27;s start a new build and go grab a coffee while waiting for it\" on NodeJS, to \"hit run aaaaand it&#x27;s done.\"I haven&#x27;t thought twice about it. Frankly, I forgot that bun has been happily running behind the scenes for me. I highly recommend anyone using NodeJS to give it a go. reply moralestapia 18 hours agoparentI&#x27;ve worked on several large node.js codebases and builds never took more than a few seconds, def. not \"go grab coffee\" time, so maybe something else was going on. reply isuckatcoding 17 hours agorootparentIt’s not uncommon to have a nodejs library take like 10-15 mins to go through building and testing in GitHub actions CI reply moralestapia 8 hours agorootparent>and testingAnd Bun is going to improve that? reply nonethewiser 16 hours agorootparentprevBut that’s probably more about tests and github resources than raw build times. reply nbittich 16 hours agorootparentAverage angular apps take at least 4 min in release mode on machine. replyOriPekelman 18 hours agoprevOh its a Friday. Deploying on Fridays is what we do. Here you go ... Bun 1.0 officially deployed on Platform.sh https:&#x2F;&#x2F;platform.sh&#x2F;blog&#x2F;bun-support-is-here&#x2F; enjoy. reply OriPekelman 18 hours agoparentAlso. As I am excited. Here you go for a one-click deploy .. https:&#x2F;&#x2F;github.com&#x2F;OriPekelman&#x2F;express-bun&#x2F; Very unofficial. Very. reply Nezteb 16 hours agoparentprevSlightly hijacking this thread to ask: I&#x27;ve not heard of Platform.sh before. Do y&#x27;all have a free&#x2F;hobby plan for someone wanting to become familiar with the it? If not, no worries. reply OriPekelman 2 hours agorootparentWe are not big on free. We like money :) And people like that we will probably be around in a decade (and won&#x27;t stop free as soon as we&#x27;ve locked enough people -in). We do have a no-strings-attached free trial ... reply dudus 17 hours agoprevThere was some criticism yesterday about bun being stable using a language (zig) that isn&#x27;t considered stable. Do you care to comment about it?Ref: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37422894 reply solatic 16 hours agoparentZig isn&#x27;t an interpreted language; once the code is compiled, the produced artifact doesn&#x27;t change. Stability doesn&#x27;t really play a factor there.Sure, the instability of Zig may increase the maintenance costs for Jarred, to use updated versions of Zig. But this has no effect on the features that Bun provides. The risk that a change to Zig would be so consequential that they would actually prevent Jarred from continuing to work on Bun, or would otherwise force Jarred to fork Zig, that risk is so low as to be inconsequential.(disclaimer: not associated with either bun or zig, the above are pure opinions) reply kaba0 15 hours agorootparentThat in itself is no good argument -- it surely has some bug, and if, say, zig changes in the meanwhile and it can no longer compile the previous code then it can be problematic from a maintenance POV.With that said, it is probably fine to use for most ordinary apps, but I wouldn&#x27;t yet build a bank infrastructure on top for example. reply swyx 15 hours agorootparentprevalso stability is more of a statement about api design than internals reply zengid 15 hours agorootparentprevNot OP but I think they meant Zig isn&#x27;t 1.0 and therefore could be considered \"not ready for prod\". I&#x27;m not claiming anything about Zig; I can only hope that the Bun folks have done their due diligence and ran it through fuzzing&#x2F;ASAN&#x2F;etc before making the 1.0 stamp of approval. reply albedoa 15 hours agorootparentThat&#x27;s the point being addressed by the comment you are responding to. reply mrinterweb 14 hours agoparentprevThere was a FUD theme with some of the \"zig isn&#x27;t stable (>=1.0) so how can I trust bun\" threads. So long as bun is stable, does it matter that zig is not 1.0 for the developer using bun? So long as zig is reliable enough for the developers of bun, I don&#x27;t see the concern. reply psanchez 15 hours agoprevJarred congrats for the release!I&#x27;ve been following the progress of bun since your initial announcement and today I decided to give it a try, just to play around.Haven&#x27;t done much with it, but even for the 5 min I played with it I&#x27;m kind of impressed so far.- Superquick install PLUS did not require root (like many other installs)- It identified I was using fish shell and added to path (nice!)- I ran a very quick bench on \"npm install\" vs \"bun install\" on one of the projects I have, and the performance is amazing. 50seconds vs 4.5 seconds on the first install. Moreover re-executing \"bun install\" takes 122ms on my machine. Removing node_modules and re-executing it takes 769ms (because of course, it uses a local cache elsewhere, but still). Amazing.I&#x27;ll probably continue exploring tomorrow and see whether it is able to run the rest of the backend&#x2F;frontend or whether it gives me a hard time. I&#x27;ve seen there are certain things that are not 100% compatible with node yet, but since the initial impressions are great I&#x27;ll explore further.BTW A code formatter and a linter would be a great addition to bun.I know there is this ticket: https:&#x2F;&#x2F;github.com&#x2F;oven-sh&#x2F;bun&#x2F;discussions&#x2F;712But one of the advantages of integrating both things in bun is that it makes it the perfect standard tool to be used inside of a team. So no extra installations from other projects, no extra mental burden of what to use, etc... bun would be the perfect dev companion with both ;)Probably a linter is a different beast (and not sure you or the rest of people working in bun want to get in there... probably not important right now), but a formatter seems doable and it does add a lot of value from my point of view. Given that bun already runs, installs, tests and bundles, to the very least _formatting_ seems like a natural addition to the family. To me a formatter is part of the standard toolset for developers nowadays.Once again, thanks a lot for the effort to you and the rest of the people contributing to the project!(edit: re-formatted my comment :p) reply brundolf 18 hours agoprevBun ships features and improvements fast and often, which is greatBut from anecdotes, I have the impression people still run into bugs and missing functionality semi-commonly. I&#x27;m sure it works great for small&#x2F;personal projects, but I&#x27;ve been hesitant to recommend it for production use at my workplace because of this impressionSo my question is: how feature-complete&#x2F;stable&#x2F;secure is it right now, what does the v1.0 label say about that, and what are the long-term plans&#x2F;prioritization&#x2F;guarantees around this area? reply JeremyJaydan 17 hours agoprevLove bun, but I disagree that blog post explains better what v1 is, but rather explaining what bun is in general.It hardly mentions anything until the very bottom on what&#x27;s changed to reach v1, the github release page on the other hand clearly outlines it.Personally found the blog post to read like documentation rather than a release announcement. reply tlarkworthy 18 hours agoprevYou write typescript and unit test without tsc, jest, webpack&#x2F;esbuild or a ton of config files. bun projects can be super lean and still cough out a tested bundle.js for execution on a browser.I love it, it super simplifies project and for minimalists it&#x27;s perfect. reply iainmerrick 12 hours agoparentHow do you do type-checking? Do you just run TSC with “noEmit: true”, like you’d do with any other bundler?TSC is simultaneously the most valuable and the most flaky part of your typical JS project setup. That’s the main part I’d be interested in replacing with a different tool. reply tacone 15 hours agoparentprevAnd the speed of package installs, bundling and test running might make up for very fast pipelines. reply jbverschoor 2 hours agoprevHi Jarred,The docs say that Bun uses clonesfiles &#x2F; hardlinks (yay). But it also states that clonefiles don&#x27;t benefit space saving:> This benefit does not extend to macOS, which uses clonefile for performance reasonsAs far as I know, clonefiles are COW, which should not take any space except the extra inode. reply tiffanyh 9 hours agoprevDumb question: since Bun is MIT licensed - why doesn’t Node just merge Buns code into Node?https:&#x2F;&#x2F;bun.sh&#x2F;docs&#x2F;project&#x2F;licensing reply leeoniya 7 hours agoparent\"just\" :_D reply swyx 7 hours agoparentprevbecause the projects have different goals and are coded in different languages. reply leeoniya 7 hours agorootparent...and based on different JavaScript engines. reply dfabulich 16 hours agoprevHow does Bun support CJS and ESM in the same file? Is it transpiling CJS to ESM? Or is it transpiling ESM to CJS?ESM can use top-level await and CJS can&#x27;t. So this can&#x27;t possibly work, right? &#x2F;&#x2F; x.mjs export const x = await &#x27;x&#x27;; &#x2F;&#x2F; y.cjs console.log(require(&#x27;.&#x2F;x.mjs&#x27;).x);And, indeed, it doesn&#x27;t work in Bun. When I `bun y.cjs` it gives me this error message: TypeError: require() async module \"&#x2F;tmp&#x2F;x.mjs\" is unsupported. use \"await import()\" instead.… but using \"await import()\" instead is exactly what I was trying to avoid! I can use \"await import()\" in Node, too.But it looks like it does work in Bun if I drop the `await` from y.mjs. So, is it just transpiling ESM to CJS, and failing out if the ESM uses top-level await?EDIT: I see the documentation page https:&#x2F;&#x2F;bun.sh&#x2F;docs&#x2F;runtime&#x2F;modules has a \"low-level details\" section, explaining how import(CJS) works (by transpiling CJS to ESM), but it doesn&#x27;t say anything there about how require(ESM) works, which is unfortunate, because that&#x27;s by far the most interesting part! I&#x27;ve filed a doc bug on this. https:&#x2F;&#x2F;github.com&#x2F;oven-sh&#x2F;bun&#x2F;issues&#x2F;4601 reply ayewo 14 hours agoparentI believe Jarred has answered this upthread: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37437848 reply TheAceOfHearts 17 hours agoprevI love that you engage with the community on both HN and Twitter. It&#x27;s always interesting to see your polls on how certain features should be implemented.Any plans for other interesting experimental features (like macros)?I don&#x27;t know how much this is still a problem, but a few years ago one area where I used to experience a bit of pain was that package.json scripts would get pretty unwieldy and supporting windows required using third-party tools. Have you consider experimenting a bit with the scripts or are you happy with the state of that feature? reply zengid 18 hours agoprevfrom that blog post:\"Unlike Node.js and other runtimes that are built using Google&#x27;s V8 engine, Bun is built using Apple&#x27;s WebKit engine. WebKit is the engine that powers Safari and is used by billions of devices every day. It&#x27;s fast, efficient, and has been battle-tested for decades.\"That&#x27;s really interesting, does WebKit do less JITing or something to be faster for startup? reply billywhizz 16 hours agoparentbun startup is fast compared to other JS runtimes but imo this is little or nothing to do with JSC versus v8 as the javascript engine. i did some experiments a while back and wrote them up here if you want to take a look. https:&#x2F;&#x2F;just.billywhizz.io&#x2F;blog&#x2F;on-javascript-performance-03... reply leeoniya 7 hours agorootparentawesome writeup, as always. reply KaoruAoiShiho 13 hours agoprevAre there any downsides? Cause from this blog post it sounds like I should just ditch everything I was doing and move completely to Bun. reply vichle 11 hours agoparentThis is what I thought. After some fiddling it became clear that compatibility will be an issue for more applications than they claim.It&#x27;s probably fine for new projects though. reply jrvarela56 9 hours agoparentprevI’ve been thinking about this anf trying it out. The only obviously bad thing is that the ‘drop-in replacement’ is bs: they’re aiming for it but there are a bunch of node std lib modules missing. Despite that it seems to work just fine for my Expo app and RNW project. reply Fervicus 15 hours agoprevThe fact that Bun has taken VC funding [0] (through Oven, the company behind Bun) makes me skeptical. There is also no mention of this on the project&#x27;s homepage.[0] - https:&#x2F;&#x2F;oven.sh&#x2F; reply leejoramo 14 hours agoparentI am skeptical of the long term viability of such projects that rely on VC funding.However, if I recall correctly, the early days of node.js was mostly funded by Joyent. It took time and some major conflicts for Node to be controlled by a foundation. reply omginternets 14 hours agorootparentJoylent isn&#x27;t a VC fund, though, is it? reply jzelinskie 18 hours agoprevCongrats on the launch! The NextJS guide[0] claims that bun doesn&#x27;t support all the node APIs to run the dev server, is that still the case with 1.0?[0]: https:&#x2F;&#x2F;bun.sh&#x2F;guides&#x2F;ecosystem&#x2F;nextjs reply Jarred 18 hours agoparentWe landed Next.js pages directory support two days ago and forgot to update that guide reply notsrg 17 hours agorootparentAny docs for migrating an existing Nextjs project? No rush but would be great to have :) reply jzelinskie 18 hours agorootparentprevAwesome! Reading through the install script now -- would you considering using installing to $XDG_DATA_HOME and falling back to `~&#x2F;.bun`? reply coder543 17 hours agoprevHow compatible is Bun with Remix[0]?I’ve been loosely following the progress of Bun for awhile, but I haven’t actually tried it. The blog post you linked does make it sound very intriguing.[0]: http:&#x2F;&#x2F;remix.run&#x2F; reply Jarred 17 hours agoparentRemix in Bun works on Linux. The built version also works on macOS, but the dev version is blocked on us upgrading WebKit. Intl.ListFormat which Remix uses depends on a newer version of ICU which the current version of WebKit uses but we didn’t want to upgrade WebKit immediately before 1.0 so we held off for this release. reply seymon 3 hours agoprevHas anyone managed to run a non trivial Nest.js application with bun already?With non trivial I mean an application using a lot of Nest.js features and libraries like TypeORM, Swagger-UI. reply evnix 2 hours agoparentNot nestJS, but built around express typeorm and the rest and the code base is 5 years old so you can imagine.Bun has seriously been a god send. I am so happy that we can finally do top level awaits and it allowed us to delete a lot of hacky code that we had in place just to make node and all the build dependencies happy. reply attractivechaos 15 hours agoprevOn your github release page [1], there are both \"bun-darwin-x64.zip\" and \"bun-darwin-x64-baseline.zip\". What is the difference between them? Why the \"aarch64\" binaries don&#x27;t have the baseline versions?In addition, your \"bun-linux-x64.zip\" doesn&#x27;t work on CentOS7 due to glibc compatibility. Would be good to provide a more portable binary.[1] https:&#x2F;&#x2F;github.com&#x2F;oven-sh&#x2F;bun&#x2F;releases&#x2F;tag&#x2F;bun-v1.0.0 reply IshKebab 15 hours agoparentHonestly if you run CentOS 7 you have to expect that most binaries won&#x27;t work due to glibc compatibility issues. It&#x27;s like 95% of the reason musl exists.I am amazed and not at all amazed that GCC has never got a --compatible-with-old-linux flag.To be fair MacOS doesn&#x27;t really either, but people tend not to run 9 year old versions of MacOS. reply eimthefea 18 hours agoprevCongratulation to the project, it seems incredible.I don&#x27;t know that much so I have some questions, sorry if they&#x27;re already answered. (share link if any if its possible)Do you plan to support as much as possible the Node.js API (99%) or most features and make your own API for lets say Clustering module and such ?Speaking of Cluster module, do you want to recreate Node.js Cluster module, or do you plan to create your own way for multi-processing using Bun in a more performant way ?I&#x27;ve seen Deno putting a lot of effort into the platform around their runtime, making deploying Deno app easy, is that your goal too ?I&#x27;ve seen that you use Zig instead of C++, what do you like the most about Zig while working on Bun ?In anyway, I hope the project will make the JSRuntime world better, its promising. reply khiner 4 hours agoprevIt’s been so fun watching Bun progressing as quickly as it has! Truly incredible work, and the blog post is full of real value and time saved for future me from beginning to end - huge congrats on the 1.0.0 release, excited to see where bun goes from here! reply j-rom 7 hours agoprevIs there an example one step above \"Hello world\" that new users can take a look at? There are a bunch of guides for different API&#x27;s &#x2F; constructs but I&#x27;m wondering if there&#x27;s a canonical example to get started.Guides: https:&#x2F;&#x2F;bun.sh&#x2F;guides reply oefrha 18 hours agoprev> It reads your package.json and writes to node_modules, just like other package managers, so you can replace:> ...> pnpmpnpm&#x27;s flagship feature is global deduplication of packages, so sadly bun&#x27;s package manager doesn&#x27;t seem to be a replacement. Is there any plan or intention to support pnpm-like disk saving? (I suppose not having to esbuild etc. everywhere already helps.)That said, I&#x27;m very impressed with the speed of `bun add` with already cached packages. Literally instant. reply Cu3PO42 18 hours agoparentBun already supports that [0]. It is the default behavior on Linux, but can also be enabled on macOS.[0] https:&#x2F;&#x2F;bun.sh&#x2F;docs&#x2F;install&#x2F;cache#saving-disk-space reply thunderbong 16 hours agorootparentAny chance of this coming to Windows? Most of our developers are on Windows systems. reply hiccuphippo 16 hours agorootparentKeep track of this issue: https:&#x2F;&#x2F;github.com&#x2F;oven-sh&#x2F;bun&#x2F;issues&#x2F;43According to that, the speed benefits will probably not be as noticeable in windows. reply oefrha 17 hours agorootparentprevNice! I was looking at du(1) output on macOS which appears to indicate all files are duplicated. It probably just can’t tell the files are clonefile’d. reply Jarred 17 hours agorootparentThere is a very obscure undocumented api in macOS for detecting if two files are equal block-by-block but yeah I don’t think most tools can tell when files are clonefile’d reply Cu3PO42 17 hours agorootparentJust a note on your documentation: it says \"this benefit does not extend to macOS\" about saving disk space. I find that to be slightly misleading. Since arguably the most common FS for macOS is now APFS, it does save significant disk space unless one were to modify the node_modules files. reply lolinder 17 hours agoparentprevYou&#x27;re jumping to conclusions: I just tried the package.json below, and bun&#x27;s node_modules folder is smaller than pnpm&#x27;s (3.9M with pnpm vs 3.4M with bun), and as a sibling noted, bun is also deduplicating globally.That, coupled with the fact that bun installs twice as fast when no packages are cached (634ms compared to 1.3s) and 100x as fast when all packages are cached (6ms to 639ms), I think it&#x27;s fair to say that bun can replace pnpm.Here&#x27;s the package.json I tried: { \"dependencies\": { \"express\": \"^4.18.2\" } }% reply cobbzilla 14 hours agoparentprevI had difficulty using Bun with Verdaccio, a private&#x2F;local npm repository.I know it’s possible to get it to work, but I didn’t have time to fiddle all the bits.If Bun made this easier, I’d switch from pnpm immediately. reply Cu3PO42 17 hours agoprevMy experiences with Bun so far have been excellent. Its package manager and bundler in particular are extremely fast and pleasant to use. Not needing to care about transpilation or using ts-node for development is also wonderful. For all the tools I cared about, compatibility has been well documented.I would have trusted it in production before 1.0 and moreso now. Unfortunately, I cannot use it for most projects right now. I package my applications with Nix for deployment and Nix and bundling JS dependencies is mostly not a great story right now. buildNpmPackage works just fine most of the time, but requires that I use npm to bundle my dependencies.Of course, this is no fault of Bun whatsover. Bun can emit a yarn.lock that is compatible with Yarn 1. If it could also emit a package-lock.json that might unblock my use case. The more ideal solution would be to build an equivalent of buildNpmPackage that deals directly with Bun, but I&#x27;m afraid the effort would not be worth it right now. reply mirkodrummer 18 hours agoprevIt really seems impressive to me. I think I&#x27;ll try it as a tool first, later as a runtime. Just wondering why has been built using Apple&#x27;s WebKit engine vs V8, other then what they say on the blog which is just shallow infos. Anyone has a link to share or any better explanation? reply jeroenhd 16 hours agoparentBoth engines are really fast, both of them have places where they beat the other. For a while, JavaScriptCore was the fastest Javascript runtime, then V8 took over again, and now Spidermonkey is the fastest if you cherry pick the right tests.The places where WebKit lags behind aren&#x27;t the places Bun really cares about. I&#x27;m honestly quite glad they add some diversity to Javascript land.I recall reading a comment that JavaScriptCore was chosen because of performance. I believe JSC is quicker to start up, and I wouldn&#x27;t be surprised if it wasn&#x27;t faster at executing the type of code Bun executes as well. reply petabytes 7 hours agoprevA few weeks ago, I tried to compile a little bit of TS code and was shocked at how long it took. 5 seconds! I can&#x27;t believe people put up with this. Glad to see there is a solution. reply Guillaume86 16 hours agoprevSeems very cool but hitting 1.0 without full windows support do not inspire me confidence. Using tools that consider your environment a second class citizen is never a great idea... I will give it a try in WSL though. reply drschwabe 15 hours agoparentConsider switching to Linux, I think you will see this trend a lot more. reply metaltyphoon 13 hours agorootparentWhat trend? The ignorant trend where a niche group of dev thinks Windows support should be second class, even though it ranks highest used by personal and professional developers year after year?I use all 3 OSes and this superiority complex is tiresome reply nsonha 10 hours agorootparent> superiority complexwhat do you base this ad hominem on?If you try to convince your company to deploy servers on a windows environment instead of linux, you better have a really extraodinary reason, that&#x27;s just a fact. If Windows is any good it&#x27;s because of the software ran on it (games and related drivers?), despite the OS reply60 more comments... GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Bun 1.0 is a toolkit designed to streamline JavaScript and TypeScript development, replacing multiple tools and offering compatibility with existing Node.js applications.",
      "It comes with TypeScript, JSX support, and inbuilt Web APIs, making it a capable JavaScript runtime that can reportedly handle more requests per second than Node.js.",
      "Additional features include WebSockets support and package management. The company that developed Bun 1.0 is situated in San Francisco and is currently recruiting staff."
    ],
    "commentSummary": [
      "The discussion is centered on Bun, a tool in the Node.js ecosystem that supports both CommonJS and ES modules, with users highlighting both pros and cons.",
      "The conversation also sheds light on using Discord and GitHub as communication platforms for open-source projects.",
      "The tool Bun is compared to other tools like Deno and Vite, with additional concerns raised regarding its stability and licensing."
    ],
    "points": 914,
    "commentCount": 311,
    "retryCount": 0,
    "time": 1694184063
  },
  {
    "id": 37435515,
    "title": "Maybe Rust isn’t a good tool for massively concurrent, userspace software",
    "originLink": "https://bitbashing.io/async-rust.html",
    "originBody": "Bit Bashing Moar About the author Async Rust Is A Bad Language Sep 8, 2023 But to get at whatever the hell I mean by that, we need to talk about why async Rust exists in the first place. Let’s talk about: Modern Concurrency: They’re Green, They’re Mean, & They Ate My Machine Suppose we want our code to go fast. We have two big problems to solve: We want to use the whole computer. Code runs on CPUs, and in 2023, even my phone has eight of the damn things. If I want to use more than 12% of the machine, I need several cores. We want to keep working while we wait for slow things to complete instead of just twiddling our thumbs. Sending a message over the Internet, or even opening a file1 takes eternities in computer time—we could literally do millions of other things meanwhile. And so, we turn to our friends parallelism and concurrency. It’s a favorite hobby of CS nerds to quibble over distinctions between the two, so to oversimplify: Parallelism is about running code in parallel on several CPUs. Concurrency is about breaking a problem into separate, independent parts. These are not the same thing—single-core machines have been running code concurrently for half a century now—but they are related. So much online well akshually-ing ignores how we often break programs into concurrent pieces so that those pieces can run in parallel, and interleave in ways that keep our cores crunching! (If we didn’t care about performance, why would we bother?) How do I concurrency? One of the simplest ways to build a concurrent system is to split code into multiple processes. After all, the operating system is a lean, mean, concurrency machine, conspiring with your hardware to make each process think it has the whole box to itself. And the OS’s scheduler gives us parallelism for free, running time slices of any process that’s ready on an available CPU core. Once upon a time this was the way, and we still employ it today whenever we pipe shell commands together. All hail CubeDrone But this approach has its limitations. Inter-process communication is not cheap, since most implementations copy data to OS memory and back.2 Mutex-Based Concurrency Considered Harmful, or, Hoare Was Right Some people, when confronted with a problem, think, “I know, I’ll use threads,” and then two they hav erpoblesms. – Ned Batchelder We can avoid these overheads using threads—processes that share the same memory. Common wisdom teaches us to connect them with mysterious beasts, like mutexes, condition variables, and semaphores. This is a dangerous game! Simple mistakes will plague you with race conditions and deadlocks and other terrible diseases that fill your code with bugs, but only on Tuesdays when it’s raining and the temperature is is a multiple of three. And god help you if you want to learn how this stuff actually works on modern hardware.3 There is Another Way. In his 1978 paper, Communicating Sequential Processes, Tony Hoare suggested connecting threads with queues, or channels, which they can use to send each other messages. This has many advantages: Threads enjoy process-like isolation from the rest of the program, since they don’t share memory. (Bonus points for memory-safe languages that make it hard to accidentally scramble another thread!) Each thread has a very obvious set of inputs (the channels it receives from) and outputs (the channels it sends to). This is easy to reason about, and easy to debug! Instrument the channels for powerful visibility into your system, measuring each thread’s throughput. Channels are the synchronization. If a channel is empty, the receiver waits until it’s not. If a channel is full, the sender waits. Threads never sleep while they have work to do, and gracefully pause if they outpace the rest of the system. After decades of mutex madness, many modern languages heed Hoare’s advice and provide channels in their standard library. In Rust, we call them std::sync::mpsc::sync_channel. Most software can stop here, building concurrent systems with threads and channels.4 Combine them with tools to parallelize CPU-intensive loops (like Rust’s Rayon or Haskell’s par), and you’ve got a powerful cocktail. But… Ludicrous Speed, go! Some problems demand a lot of concurrency. The canonical example, described by Dan Kagel as the C10K problem back in 1999, is a web server connected to tens of thousands of concurrent users. At this scale, threads won’t cut it—while they’re pretty cheap,5 fire up a thread per connection and your computer will grind to a halt. To solve this, some languages provide a concurrency model where: Tasks are created and managed in userspace, i.e., without the operating system’s help. A runtime schedules these tasks onto a pool of OS threads, usually sized so that each CPU core gets a thread, to maximize parallelism. This scheme goes by many names—green threads, lightweight threads, lightweight processes, fibers, coroutines, and more—complete with pedantic nerds endlessly debating the subtle differences between them. Rust comes at this problem with an “async/await” model, seen previously in places like C# and Node.js.6 Here, functions marked async don’t block, but immediately return a future or promise that can be awaited to produce the result. fn foo() -> i32 { /* returns an int when called */ } async fn bar() -> i32 { /* returns a future we can .await to get an int */ } pain.await On one hand, futures in Rust are exceedingly small and fast, thanks to their cooperatively scheduled, stackless design. But unlike other languages with userspace concurrency, Rust tries to offer this abstraction while also promising the programmer total low-level control. There’s a fundamental tension between the two, and the poor async Rust programmer is perpetually caught in the middle, torn between the language’s design goals and the massively-concurrent world they’re trying to build. Rust attempts to statically verify the lifetime of every object and reference in your program, all at compile time. Futures promise the opposite: that we can break code and the data it references into thousands of little pieces, runnable at any time, on any thread, based on conditions we can only know once we’ve started! A future that reads data from a client should only run when that client’s socket has data to read, and no lifetime annotation will tells us when that might be. Send help Assuring the compiler that everything will be okay runs into the same challenges you see when working with raw threads. Data must either be marked Send and moved, or passed through references with 'static lifetimes. Both are easier said than done. Moving (at least without cloning) is often a non-starter, since it’s common in async code to spawn many tasks that share common state. And references are a pain too—there’s no thread::scope equivalent to help us bound futures’ lifetimes to anything short of “forever”. fn foo(&big, &chungus) is out, async fn foo(&BIG_GLOBAL_STATIC_REF_OR_SIMILAR_HORROR, sendable_chungus.clone()) is in. And unlike launching raw threads, where you might have to deal with these annoyances in a handful of functions, this happens constantly due to async’s viral nature. Since any function that calls an async function must itself be async,7 you need to solve this problem everywhere, all the time. Just Arc my shit up A seasoned Rust developer will respond by saying that Rust gives us simple tools for dynamic lifetimes spanning multiple threads. We call them “atomic reference counts”, or Arc. While it’s true that they solve the immediate problem—borrows check and our code compiles—they’re far from a silver bullet. Used pervasively, Arc gives you the world’s worst garbage collector. Like a GC, the lifetime of objects and the resources they represent (memory, files, sockets) is unknowable. But you take this loss without the wins you’d get from an actual GC! Don’t buy the “GC is slow” FUD—the claim is a misunderstanding of latency vs. throughput at best and a bizarre psyop at worst. A modern, moving garbage collector gets you more allocation throughput, less fragmentation, and means you don’t have to play Mickey Mouse games with weak pointers to avoid cycle leaks. You can even trick systems programmers into leveraging GC in one of the world’s most important software projects by calling it “deferred destruction”. More on that another day. Other random nonsense Because Rust coroutines are stackless, the compiler turns each one into a state machine that advances to the next .await.8 But this makes any recursive async function a recursively-defined type! A user just trying to call a function from itself is met with inscrutable errors until they manually box it or use a crate that does the same. There’s an important distinction between a future—which does nothing until awaited—and a task, which spawns work in the runtime’s thread pool… returning a future that marks its completion. There’s nothing keeping you from calling blocking code inside a future, and there’s nothing keeping that call from blocking the runtime thread it’s on. You know, the entire thing we’re trying to avoid with all this async business. Running away Mixed together, this all gives async Rust a much different flavor than “normal” Rust. One with many more gotchas, that is harder to understand and teach, and that pushes users to either: Develop a deep understanding of how these abstractions actually work,9 writing complicated code to handle them, or Sprinkle Arc, Pin, 'static, and other sacred runes throughout their code and hope for the best. Rust proponents (I’d consider myself one!) might call these criticisms overblown. But I’ve seen whole teams of experienced developers, trying to use Rust for some new project, mired in this minutia. To whatever challenges teaching Rust has, async adds a whole new set. The degree to which these problems just aren’t a thing in other languages can’t be overstated either. In Haskell or Go, “async code” is just normal code. You might say this isn’t a fair comparison—after all, those languages hide the difference between blocking and non-blocking code behind fat runtimes, and lifetimes are handwaved with garbage collection. But that’s exactly the point! These are pure wins when we’re doing this sort of programming. Maybe Rust isn’t a good tool for massively concurrent, userspace software. We can save it for the 99% of our projects that don’t have to be. …a file which could also be on the other side of the Internet! Thanks, NFS! ↩ We could cut down on IPC overhead by sharing memory between the processes, but this gives away one of the main advantages of multiple processes: that the OS isolates them from each other. ↩ Mara Bos recently put out a fantastic book that despite targeting Rust specifically, does a wonderful job of explaining the fundamentals of low-level concurrency in any language. If you don’t have time for a whole book, I’ve done my best to sum it up in a few pages. ↩ Of course I’m simplifying here. Not every program can be expressed as a DAG, and you’ll still find good occasions for other primitives—say, atomic flags to indicates changes in global state. Still, Hoare’s model is a great default, and I’ve always found it helpful to think about how data flows through my system. ↩ Each thread has a 4kB control block in Linux, and switching between threads requires a trip to the operating system scheduler. This context switch to the OS’s memory is much more expensive than a normal function call. ↩ Uniquely, Rust doesn’t provide a runtime for its futures in the language, delegating instead to libraries like Tokio. This is great for users—Rust’s build tooling (cargo) and ecosystem gives developers the freedom to choose alternatives that better suit unique environments they find themselves in. But it’s a detail that’s largely immaterial to our discussion; one can imagine a world where Tokio is built into the language and all the same rules apply. ↩ You can break the chain by commanding the entire runtime to block on the completion of a future, but you probably shouldn’t do this pervasively since it isn’t composable. If a function blocks on a future, and that future calls a function that blocks on a future, congrats! The runtime panics! ↩ Learn more in Without Boats’s Futures and Segmented Stacks or the C++ paper P1364: Fibers under the magnifying glass. ↩ Amos Wenger AKA fasterthanlime’s Pin and Suffering is a fantastic and snarky intro. ↩ Contact: mattbitbashing.io mrkline CompareAndSwap Yet another programming blog. Thoughts on software and related misadventures.",
    "commentLink": "https://news.ycombinator.com/item?id=37435515",
    "commentBody": "Maybe Rust isn’t a good tool for massively concurrent, userspace softwareHacker NewspastloginMaybe Rust isn’t a good tool for massively concurrent, userspace software (bitbashing.io) 626 points by mrkline 17 hours ago| hidepastfavorite522 comments Animats 15 hours agoOK, I suppose I should write to this.As I&#x27;ve mentioned before, I&#x27;m writing a high performance metaverse client. Here&#x27;s a demo video.[1] It&#x27;s about 40,000 lines of Rust so far.If you are doing a non-crappy metaverse, which is rare, you need to wrangle a rather excessive amount of data in near real time. In games, there&#x27;s heavy optimization during game development to prevent overloading the play engine. In a metaverse, as with a web browser, you have to take what the users create and deal with it. You need 2x-3x the VRAM a comparable game would need, a few hundred megabits per second of network bandwidth to load all the assets from servers, a half dozen or so CPUs running flat out, and Vulkan to let you put data into the GPU from one thread while another thread is rendering.So there will be some parallelism involved.This is not like \"web-scale\" concurrency, which is typically a large number of mini-servers, each doing their own thing, that just happen to run in the same address space. This is different. There&#x27;s a high priority render thread drawing the graphics. There&#x27;s a update thread processing incoming events from the network. There are several asset loading and decompression threads, which use up more CPU time than I&#x27;d like. There are about a half dozen other threads doing various miscellaneous tasks - handling moving objects, updating levels of detail, purging caches, and such.There&#x27;s considerable locking, but no \"static\" data other than constants. No globals. Channels are used where appropriate to the problem. The main object tree is single ownership, and used mostly by the update thread. Its links to graphics objects are Arc reference counted, and those are updated by both the update thread and the asset loading threads. They in turn use reference counted handles into the Rend3 library, which, via WGPU and Vulkan, puts graphics content (meshes and textures) into the GPU. Rendering is a loop which just tells Rend3 \"Go\", over and over.This works out quite well in Rust. If I had to do this in C++, I&#x27;d be fighting crashes all the time. There&#x27;s a reason most of the highly publicized failed metaverse projects didn&#x27;t reach this level of concurrency. In Rust, I have about one memory related crash per year, and it&#x27;s always been in someone else&#x27;s \"unsafe\" code. My own code has no \"unsafe\", and I have \"unsafe\" locked out to prevent it from creeping in. The normal development process is that it&#x27;s hard to get things to compile, and then it Just Works. That&#x27;s great! I hate using a debugger, especially on concurrent programs. Yes, sometimes you can get stuck for a day, trying to express something within the ownership rules. Beats debugging.I have my complaints about Rust. The main ones are:- Rust is race condition free, but not deadlock free. It needs a static deadlock analyzer, one that tracks through the call chain and finds that lock A is locked before lock B on path X, while lock B is locked before path A on path Y. Deadlocks, though, tend to show up early and are solid problems, while race conditions show up randomly and are hard to diagnose.- Async contamination. Async is all wrong when there&#x27;s considerable compute-bound work, and incompatible with threads running at multiple priorities. It keeps creeping in. I need to contact a crate maintainer and get them to make their unused use of \"reqwest\" dependent on a feature, so I don&#x27;t pull in Tokio. I&#x27;m not using it, but it&#x27;s there.- Single ownership with a back reference is a very common need, and it&#x27;s too hard to do. I use Rc and Weak for that, but shouldn&#x27;t have to. What&#x27;s needed is a set of traits to manage consistent forward and back links (that&#x27;s been done by others) and static analysis to eliminate the reference counts. The basic constraints are ordinary borrow checker restrictions - if you have mutable access to either parent or child, you can&#x27;t have access to the other one. But you can have non-mutable access to both. If I had time, I&#x27;d go work on that.- I&#x27;ve learned to live without objects, but the trait system is somewhat convoluted. There&#x27;s one area of asset processing that really wants to be object oriented, and I have more duplicate code there than I like. I could probably rewrite it to use traits more, but it would take some bashing to make it fit the trait paradigm.- The core graphics crates aren&#x27;t finished. There was an article on HN a few days ago about this. \"Rust has 5 games and 50 game engines\". That&#x27;s not a language problem, that&#x27;s an ecosystem problem. Not enough people are doing non-toy graphics in Rust. Watch my video linked below.[1] Compared to a modern AAA game title, it&#x27;s not that great. Compared to anything else being done in Rust (see [2]) it&#x27;s near the front. This indicates a lack of serious game dev in Rust. I&#x27;ve been asked about this by some pro game devs. My comment is that if you have a schedule to meet, the Rust game ecosystem isn&#x27;t ready. It&#x27;s probably about five people working for a year from being ready.[1] https:&#x2F;&#x2F;video.hardlimit.com&#x2F;w&#x2F;tp9mLAQoHaFR32YAVKVDrz[2] https:&#x2F;&#x2F;gamedev.rs&#x2F; reply Dinux 12 hours agoparentWe&#x27;ve been building our robotic simulators in Rust for the past 3 years and I have the exact same experience. So far, I think, we&#x27;ve encountered maybe 5 actual runtime bugs over the last 3 years. Sure rust has some problems and yes the async isn&#x27;t fully there yet, but overal the benefits outweigh the problems. reply jvanderbot 11 hours agorootparentAsync as a paradigm seems so against what GP was discussing. If I understood, and from my experience, we&#x27;re talking more about concurrent execution with carefully-designed priorities, locks, and timing requirements. This is closer to the embedded &#x2F; systems-level concurrency, if I understand it right. Are we really expecting a coroutine&#x2F; async style to just lift into this world? reply acedTrex 10 hours agorootparentThis was my thoughts, async is just ONE valid approach to the ultimate problem of \"do multiple things at once\" it is not the end all be all of approaches reply NalNezumi 1 hour agorootparentprevOut of curiosity, is this robotics simulator open source&#x2F;available? reply JoshTriplett 12 hours agoparentprev> Rust is race condition free, but not deadlock free. It needs a static deadlock analyzer, one that tracks through the call chain and finds that lock A is locked before lock B on path X, while lock B is locked before path A on path Y.That sounds like a great idea. Something in the style of lockdep, that (when enabled) analyzes what locks are currently held while any other lock is taken, and reports any potential deadlocks (even if they haven&#x27;t actually deadlocked).That would require some annotation to handle cases of complex locking, so that the deadlock detection knows (for instance) that a given class of locks are always obtained in address order so they can&#x27;t deadlock. But it&#x27;s doable. reply elabajaba 6 hours agorootparentThere&#x27;s tracing-mutex that builds a dag of your locks when you acquire them and panics (at runtime) if it could deadlock: https:&#x2F;&#x2F;github.com&#x2F;bertptrs&#x2F;tracing-mutexparking_lot has a deadlock detection feature for when you deadlock that iirc tells you what deadlocked (so you&#x27;re not trying to figure it out with a debugger and a lot of time) https:&#x2F;&#x2F;amanieu.github.io&#x2F;parking_lot&#x2F;parking_lot&#x2F;deadlock&#x2F;i...I also just found out about https:&#x2F;&#x2F;github.com&#x2F;BurtonQin&#x2F;lockbud which seems to detect deadlocks and a few other issues statically? (seems to require compiling your crate with the same version of rust as lockbud uses, which from the docs is an old 1.63 nightly build?) reply wrsh07 8 hours agorootparentprevGoogle has acquired before: https:&#x2F;&#x2F;abseil.io&#x2F;docs&#x2F;cpp&#x2F;guides&#x2F;synchronization#thread-ann...It&#x27;s quite nice, but for cpp not rust reply nine_k 5 hours agorootparentprevI wonder if locks may have some thread-local registry, at least in debug builds.If locks can be numbered or otherwise ordered, it would be easy to enforce a strict order of taking locks and an inverse strict order of releasing them, by looking up in the registry which locks your thread is currently holding. This would prevent deadlocks.This, of course, would require to have an idea of all the locks you may want to hold, and their relative order (at least partial), as Dijkstra described back in the day. But thinking about locks is ahead of time is a good idea anyway. reply hedora 9 hours agoparentprev> Async is all wrong when there&#x27;s considerable compute-bound work, and incompatible with threads running at multiple prioritiesThe priority thing is relatively easy to fix:Either create multiple thread pools, and route your futures to them appropriately.Or, write your own event loop, and have it pull from more than one event queue (each with a different priority).It should be even easier than that, but I don’t know of a crate that does the above out of the box.One advantage of the second approach is (if your task runtime is bounded) that you can have soft realtime guarantees for high priority stuff even when you are making progress on low priority stuff and running at 100% CPU. reply astrange 6 hours agorootparentThis doesn&#x27;t help with priority inversions; since you don&#x27;t know who is waiting on a future&#x2F;promise until it starts waiting on it, you can&#x27;t resolve them until then, which means you can have work running at too low a priority. It&#x27;s not structured enough. reply winrid 14 hours agoparentprevI&#x27;m doing basically the same thing in Java for an MMO and the JDK makes it so easy. Just move objects via concurrent queues from network to model creation to UI threads. It&#x27;s actually quite boring, and fast! reply Animats 14 hours agorootparentIs there video or a demo? reply winrid 13 hours agorootparentI don&#x27;t have anything recorded from the past few years. Here&#x27;s an old video:https:&#x2F;&#x2F;youtu.be&#x2F;L7XIFC2SawY?si=qN7TNxZi-P05uXVaIt&#x27;s basically a custom 3D multithreaded OSM renderer, and the assets are a custom binary format. Uses very little network bandwidth.Hoping to have an update this year that shows the updated graphics. I wrote a UI framework to improve my productivity (live hot reloading of UI components written with HTML with one way data binding. I had to do this because the game is gonna have so many UIs and I got tired of writing them in Java 8 style Java. Soon I can resume work on the game after sidewaysdata.com is doneish (also using the UI library to build the desktop&#x2F;mobile timing application). reply winrid 13 hours agorootparentYou can sign up to be notified if I ever get it done :) here https:&#x2F;&#x2F;tdworldgame.com&#x2F; reply Animats 13 hours agorootparentprevNice.The \"many UI\" problem is large in Rust. Egui needs far too much Rust code per dialog box. Someone was working on a generator, but I haven&#x27;t looked in on that project in a while. reply winrid 12 hours agorootparentI actually quite liked egui. It was Rust that felt too slow to write. Also the egui template project with eframe and no app code yet took 15 seconds for an incremental compile. The entire game so far compiles and starts faster than that in Java, so... replyo11c 7 hours agoparentprev> Single ownership with a back reference is a very common need, and it&#x27;s too hard to do.I&#x27;ve been collecting a list[1] of what memory-management policies programmers actually want in their code; it is far more extensive than any particular language actually implements. Contributions are welcome!I already had back reference on the list, but added some details. When the ownership is indirect (really common) it is difficult to automate.One thing that always irritates me: Rust&#x27;s decision to make all objects moveable really hurts it at times.[1] https:&#x2F;&#x2F;gist.github.com&#x2F;o11c&#x2F;dee52f11428b3d70914c4ed5652d43f... reply Animats 5 hours agorootparentYes, back-linked objects are probably going to have to be pinned. reply elcritch 13 hours agoparentprevGood luck on the metaverse app! I&#x27;d love to see more interesting metaverse takes.One quibble though. Rust isn&#x27;t race condition free, it&#x27;s data race free. You can still end up with race conditions outside of data access. https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=23599598 reply sillysaurusx 14 hours agoparentprevCheering for your metaverse app. Hope to hear more about it. I suspected you might be doing gamedev but this is the first time you’ve shown extensive work.One challenge with rust is that (for better or worse) most gamedev talent is C++. If you ever open source it I’d be interested in contributing, though I’m not sure how effective the contributions would be.Good luck! reply Animats 13 hours agorootparentEmail sent.I&#x27;m not that interested in self-promotion here as I am in getting more activity on Rust graphics development. I think the Rust core graphics ecosystem needs about five good graphics people for a year to get unstuck. Rust is a good language for this sort of thing, but you&#x27;ve got to have reliable heavy machinery down in the graphics engine room.Until that exists, nobody can bet a project with a schedule and a budget on Rust. The only successful commercial high-detail game title I know of that uses Rust is a sailing race simulator. They simply linked directly to \"good old DX11\" (Microsoft Direct-X 11) and wrote the game logic in Rust. Bypassed Rust&#x27;s own 3D ecosystems completely. reply d3ckard 2 hours agorootparentAny pointers on what exactly is missing?I am neither a Rust guy or a graphics guy, but I have some interest in what is missing in the ecosystem. reply xeonmc 12 hours agorootparentprevIs it the one by the same guy who made the gold-standard moddable racing simulator? reply Animats 10 hours agorootparentIt&#x27;s \"Hydrofoil Generation\".[1] The only game on the \"Released\" page of the Rust gaming group that looks post-2000.[1] https:&#x2F;&#x2F;arewegameyet.rs&#x2F;games&#x2F;released&#x2F; reply thegeekpirate 8 hours agorootparentprevHe co-founded and was the lead dev of Kunos Simulazioni, which made Assetto Corsa (https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;244210&#x2F;Assetto_Corsa&#x2F;).I miss his Twitch streams! https:&#x2F;&#x2F;www.twitch.tv&#x2F;kunosstefano reply throw10920 8 hours agoparentprev> Async contaminationI&#x27;ve always wondered why the \"color\" of a function can&#x27;t be a property of its call site instead of its definition. That would completely solve this problem - you declare your functions once, colorlessly, and then can invoke them as async anywhere you want. reply sznio 6 minutes agorootparent`std::thread::spawn()` and `.join()` are the ultimate async implementation. reply lmm 7 hours agorootparentprev> I&#x27;ve always wondered why the \"color\" of a function can&#x27;t be a property of its call site instead of its definition. That would completely solve this problem - you declare your functions once, colorlessly, and then can invoke them as async anywhere you want.If you have a non-joke type system (which is to say, Haskell or Scala) you can. I do it all the time. But you need HKT and in Rust each baby step towards that is an RFC buried under a mountain of discussion. reply OvermindDL1 7 hours agorootparentYou can do it without HKTs with an effects system, which you can think of as another kind of generics that causes the function to be sliced in different ways depending on how it&#x27;s called. There is movement in Rust to try to do this, but I wish it was done before async was implemented considering async could be implemented within it... reply ditsuke 2 hours agorootparentprevThe rust guys are working on this very problem with the keyword generics proposal https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;inside-rust&#x2F;2022&#x2F;07&#x2F;27&#x2F;keyword-ge... reply kprotty 8 hours agorootparentprevIf a function calls something that does something async, that can&#x27;t be evaluated synchronously due to 1) no setup; could be async IO and require being called in the context of an async runtime (library feature, not language feature) and 2) blocking synchronously on an async task in an async runtime can result in deadlocks from task waiting on runtime IO polling but the waiting preventing the runtime from being polled. reply throw10920 7 hours agorootparent> could be async IO and require being called in the context of an async runtimeThe compiler already has knowledge that a function is being called as async - what prevents it from ensuring that a runtime is present when it does?> blocking synchronously on an async task in an async runtime can result in deadlocks from task waiting on runtime IO polling but the waiting preventing the runtime from being polledWhat prevents the runtime from preempting a task? reply kprotty 17 minutes agorootparent> what prevents it from ensuring that a runtime is present when it does?The runtime being a library instead of a language&#x2F;compiler level feature. Custom runtimes is necessary for systems languages as they can have specialized constraints.EDIT: Note that it&#x27;s the presence of a supported runtime for the async operation (e.g. it relies on runtime-specific state like non-blocking IO, timers, priorities, etc.), not only the presence of any runtime.> What prevents the runtime from preempting a task?Memory efficient runtimes use stackless coroutines (think state machines) instead of stackful (think green threads &#x2F; fibers). The latter comes with inefficiencies like trying to guess stack sizes and growing them on demand (either fixing pointers to them elsewhere or implementing a GC) so it&#x27;s not always desirable.To preempt the OS thread of a stackful coroutine (i.e. to catch synchronously blocking on something) you need to have a way to save its stack&#x2F;registers in addition to its normal state machine context which is the worst of both worlds: double the state + the pointer stability issues from before.This is why most stackful coroutine runtimes are cooperatively scheduled instead, requiring blocking opportunities to be annotated so the runtime can workaround that to still make progress. reply kevincox 7 hours agorootparentprevI most runtimes you can just call something like `block_on`. There are some things to be careful about to avoid starving other takes but most general-purpose runtimes will spawn more threads as needed. Similarly blocking in an asynx task is generally not much of an issue for these runtimes for the same reasons.It isn&#x27;t like JavaScript where there is truly only one thread of execution at a time and blocking it will block everything. reply ay 1 hour agoparentprevAs a past active SecondLife user back in the day (circa 15 years ago), and a short-stunt OpenSimulator dev, I had been thinking a lot about how much better SecondLife could be if it had the modern tech absorbed - thanks for doing this! :-) I did a short return to try SL recently, and the lagginess of the viewer made me sad.Is there a ML to subscribe to, to learn when the viewer is more generally available for testing? Thanks again! reply Reticularas 1 hour agoparentprevWhat you&#x27;ve just described is basically every networked video game, the majority of which are happily running via c++.(Plus some increase in content load over the network, which does exist ala runtime mod loading, streaming, etc) reply pjc50 30 minutes agorootparentYes? Not architecturally different, but with fewer bugs. People are always complaining about bugs in videogames. reply bigyikes 11 hours agoparentprevI’m working on an unrelated project that does some stuff similarly to you. I’m at 4k lines right now.Just wondering, how long did it take you to hit 40k lines? I’m a new Rust developer and it’s taken me ages to get this far.I totally relate to your experience though. When I finally get my code to compile, it “just works” without crashes. I’ve never felt so confident in my code before. reply Animats 10 hours agorootparent> how long did it take you to hit 40k lines?3 years. reply bigyikes 10 hours agorootparentImpressive dedication! I hope I can make it that long. The project looks cool and the technical details sound even cooler.Thanks for the perspective. reply jksmith 5 hours agorootparentprev>When I finally get my code to compile, it “just works” without crashes. I’ve never felt so confident in my code before.This isn&#x27;t a new idea for a desirable state. Same experience with Modula-2 three decades ago. A page or more of compiler errors to clear, then suddenly adiabatic. A very satisfying experience. reply jstx1 13 hours agoparentprev> Yes, sometimes you can get stuck for a day, trying to express something within the ownership rules.This is a big problem. Fast iteration time is very valuable.And who likes doing this to themselves anyway? Isn&#x27;t it a very frustrating experience? How is this the most loved language? reply ghosty141 12 hours agorootparent> And who likes doing this to themselves anyway? Isn&#x27;t it a very frustrating experience? How is this the most loved language?The thing is, these dependencies do exist no matter what language you use if they stem from an underlying concept. In that case rust just makes you explicitly write them which is a good thing since in C++ all these dependencies would be more or less implicit and everytime somebody edits the code he needs to think all these cases through and get a mental model (if he sees it at all!). In Rust you at least have the lifetime annotations which make it A: obvious there is some special dependency going on and B: show the explicit lifetimes etc.So what I&#x27;m saying, you need to put in this work no matter which language you choose, writing it down is then not a big problem anymore. If you don&#x27;t think about these rules your program will probably work most of the time but only most of the time, and that can be very bad for certain scenarios. reply throw10920 9 hours agorootparent> So what I&#x27;m saying, you need to put in this work no matter which language you chooseThis is very false. Managed-memory languages don&#x27;t require you to even think about lifetimes, let alone write them down.Yes, I understand that this is for efficiency - but claiming that you have to think about lifetimes everywhere is just wrong, and irrelevant when discussing topics (prototyping&#x2F;design work&#x2F;scripting) where you don&#x27;t care about efficiency. reply pkolaczk 2 hours agorootparent> Managed-memory languages don&#x27;t require you to even think about lifetimes, let alone write them down.Memory is only one of many types of resources applications use. Memory-managed languages do nothing to help you with those resources, and effectively managing those resources is way harder in those languages than in Rust or C++. reply jjnoakes 8 hours agorootparentprevLifetimes are still important in managed languages. You just have to track them in your head, which is fallible. The difference is that if you get it wrong in a managed language, you get leaks or stale objects or other logic bugs. In rust you get compile time errors. reply nine_k 5 hours agorootparentWhile this is correct, it&#x27;s still much easier to think about lifetimes in managed languages. The huge majority of allocated objects gets garbage-collected after a very short time, when they leave the context (similar to RAII).Mostly you need to think about large and&#x2F;or important objects, and avoid cycles, and avoid unneeded references to such objects that would live for too long. Such cases are few.The silver lining is that if you make a mistake and a large object would have to live slightly longer, you won&#x27;t have to wrangle with the lifetime checker for that small sliver of lifetime. But if you make a big mistake, nothing will warn you about a memory leak, before the prod monitoring does. reply pkolaczk 2 hours agorootparent> The huge majority of allocated objects gets garbage-collected after a very short time, when they leave the context (similar to RAII).Those objects are also virtually no problem in languages like Rust or C++. Those are local objects whose lifetimes are trivial and they are managed automatically with no additional effort from the developer. reply throw10920 8 hours agorootparentprev> The difference is that if you get it wrong in a managed language, you get leaks or stale objects or other logic bugs.Can you provide concrete examples of this? I&#x27;ve literally never had a bug due to the nature of a memory-managed language. reply zdragnar 5 hours agorootparentOnce upon a time (at least through IE7) Internet Explorer had separate memory managers for javascript and the DOM. If there was a cycle between a JS object and a DOM object (a DOM node is assigned as a property of an object, and another property was assigned as an event handler to the DOM node) then IE couldn&#x27;t reclaim the memory.Developers of anything resembling complex scripts (for the time) had to manually break these cycles by setting to null the attributes of the DOM node that had references to any JS objects.Douglas Crockford has a little writeup here[0] with a heavy-handed solution, but it was better than doing it by hand if you were worried another developer would come along and add something and forget to remove it.Other memory managed languages also have to deal with the occasional sharp corners. Most of the time, this can be avoided by knowing to clean up resources properly, but some are easier to fall for than others.Oracle has a write up on hunting Java memory leaks [1] Microsoft has a similar, but less detailed article here[2]Of course, sometimes a \"leak\" is really a feature. One notorious example is variable shadowing in the bad old days of JS prior to the advent of strict mode. I forget the name of the company, but someone&#x27;s launch was ruined because a variable referencing a shopping cart wasn&#x27;t declared with `var` and was treated as a global variable, causing concurrent viewers to accidentally get other user&#x27;s shopping cart data as node runs in a single main thread, and concurrency was handled only by node&#x27;s event loop.[0] https:&#x2F;&#x2F;www.crockford.com&#x2F;javascript&#x2F;memory&#x2F;leak.html[1] https:&#x2F;&#x2F;docs.oracle.com&#x2F;en&#x2F;java&#x2F;javase&#x2F;17&#x2F;troubleshoot&#x2F;troub...[2] https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;core&#x2F;diagnostics&#x2F;de... reply astrange 6 hours agorootparentprevYou can certainly get memory abandonment, which is like a leak but for memory that&#x27;s still referenced and is just never going to be used again. reply tsimionescu 2 hours agorootparentI will note that in GC literature at least, that is still considered a leak.In an ideal world, we could have a GC that reclaimed all unused memory, but that turns out to be impossible because of the halting problem. So, we settle for GCs that reclaim only unreachable memory, which is a strict subset of unused memory. Unused reachable memory is a leak. reply OvermindDL1 7 hours agorootparentprevCMEs in Java are a constant thorn to many Java programmers as a lifetime violation bug. Hell even NPEs are too for that matter, lol. reply Galanwe 7 hours agorootparentprev> The thing is, these dependencies do exist no matter what language you useSure, but in a lot of cases, these invariants can be trivially explained, or intuitive enough that it wouldn&#x27;t even need explanation. While in Rust, you can easily spend a full day just explaining it to the compiler.I remember spending litteral _days_ tweaking intricate lifetimes and scopes just to promise Rust that some variables won&#x27;t be used _after_ a thread finishes.Some things I even never managed to be able to express in Rust, even if trivial in C, so I just rely on having a C core library for the hot path, and use it from Rust.Overall, performance sensitive lifetime and memory management in Rust (especially in multithreaded contexts) often comes down to:1) Do it in _sane_ Rust, and copy everything all over the place, use fancy smart pointers, etc.2) Do it in a performant manner, without useless copies, without over the top memory management, but prepare a week of frustrating development and a PhD in Rust idiosyncrasies. reply efficax 6 hours agorootparent> Some things I even never managed to be able to express in Rust, even if trivial in C, so I just rely on having a C core library for the hot path, and use it from Rust.i can’t think of anything you can do in c that you can’t do in unsafe rust, and that has the advantage that you can both narrow it down to exactly where you need it and only there, and your can test it in miri to find bugs reply LegionMammal978 5 hours agorootparentTo be fair, unsafe Rust has an entirely new set of idiosyncrasies that you have to learn for your code not to cause UB. Most of them revolve around the many ways in which using references can invalidate raw pointers, and using raw pointers can invalidate references, something that simply doesn&#x27;t exist in C apart from the rarely-used restrict qualifier.(In particular, it&#x27;s very easy to inadvertently trigger the footgun of converting a pointer to a reference, then back to a pointer, so that using the original pointer again can invalidate the new pointer.)Extremely pointer-heavy code is entirely possible in unsafe Rust, but often it&#x27;s far more difficult to correctly express what you want compared to C. With that in mind, a tightly-scoped core library in C can make a lot of sense; more lines of unsafe code in either language leave more room for bugs to slip in. reply Galanwe 6 hours agorootparentprev> i can’t think of anything you can do in c that you can’t do in unsafe rustThat is not my point.There is a world between \"you can do it\" and \"you will do it\".Some things in Rust are doable in theory, but end up being so insane to implement that you won&#x27;t do it in practice. That is my point. reply imtringued 1 hour agorootparentprev>use fancy smart pointers, etc.The thing is, you think your code is safe and it most likely is, but mathematically speaking, what you are doing is difficult or even impossible to prove correct. It is akin to running an NP complete algorithm on a problem that is easier than NP. Most practical problem instances are easy to solve, but the worst case which can&#x27;t be ruled out is utterly, utterly terrible, which forces you to use a more general solution than is actually necessary. reply maccard 1 hour agorootparentDon&#x27;t let perfect be the enemy of good.Since smart pointers because ubiquitous in c++, I&#x27;ve (personally) had only a handful of memory and lifetime issues. They were all deduceable by looking at where we \"escape hatched\" and stored a raw ptr that was actually a unique pointer, or something similar. I&#x27;ll take having one of those every 18 months over throwing away my entire language, toolchain,ecosystem and iteration times. reply throw10920 9 hours agorootparentprev> How is this the most loved language?Personal preference and pain tolerance. Just like learning Emacs[1] - there&#x27;s lots of things that programmers can prioritize, ignore, enjoy, or barely tolerate. Some people are alright with the fact that they&#x27;re prototyping their code 10x more slowly than in another language because they enjoy performance optimization and seeing their code run fast, and there&#x27;s nothing wrong with that. I, myself, have wasted a lot of time trying to get the types in some of my programs just right - but I enjoy it, so it&#x27;s worth it, even though my productivity has decreased.Plus, Rust seems to have pushed out the language design performance-productivity-safety efficiency frontier in the area of performance-focused languages. If you&#x27;re a performance-oriented programmer used to buggy programs that take a long time to build, then a language that gives you the performance you&#x27;re used to with far fewer bugs and faster development time is really cool, even if it&#x27;s still very un-productive next to productivity-oriented languages (e.g. Python). If something similar happened with productivity languages, I&#x27;d get excited, too - actually, I think that&#x27;s what&#x27;s happening with Mojo currently (same productivity, greater performance) and I&#x27;m very interested.[1] https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37438842 reply pkolaczk 3 hours agorootparent> even if it&#x27;s still very un-productive next to productivity-oriented languages (e.g. Python).The thing is, for many people, including me, Rust is actually a more productive language than Python or other dynamic languages. Actually writing Python was an endless source of pain for me - this was the only language where my code did not initially work as expected more times than it did. Where in Rust it works fine from the first go in 99% of cases after it compiles, which is a huge productivity boost. And quite surprisingly, even writing the code in Rust was faster for me, due to more reliable autocomplete &#x2F; inline docs features of my IDE. reply 59nadir 1 hour agorootparentprev> Some people are alright with the fact that they&#x27;re prototyping their code 10x more slowly than in another language because they enjoy performance optimization and seeing their code run fast, and there&#x27;s nothing wrong with that.Disclaimer: I&#x27;ve sort of bounced off of Rust 3 or so times and while I&#x27;ve created both long-running services in it as well as smaller tools I&#x27;ve basically mostly had a hard time (not enjoying it at all, feeling like I&#x27;m paying a lot in terms of development friction for very little gain, etc.) and if you&#x27;re the type to write off most posts with \"You just don&#x27;t get it\" this would probably just be one more on the pile. I would argue that I do understand the value of Rust, but I take issue with the idea that the cost is worth it in the majority of cases, and I think that there are 80% solutions that work better in practice for most cases.From personal experience: You could be prototyping your code faster and get performance in simpler ways than dealing with the borrow checker by being able to express allocation patterns and memory usage in better, clearer ways instead and avoid both of the stated problems.Odin (& Zig and other simpler languages) with access to these types of facilities are just an install away and are considerably easier to learn anyway. In fact, I think you could probably just learn both of them on top of what you&#x27;re doing in Rust since the time investment is negligible compared to it in the long run.With regards to the upsides in terms of writing code in a performance-aware manner:- It&#x27;s easier to look at a piece of code and confidently say it&#x27;s not doing any odd or potentially bad things with regards to performance in both Odin and Zig- Both languages emphasize custom allocators which are a great boon to both application simplicity, flexibility and performance (set up limited memory space temporarily and make sure we can never use more, set up entire arenas that can be reclaimed or reused entirely, segment your resources up in different allocators that can&#x27;t possibly interfere with eachother and have their own memory space guaranteed, etc.)- No one can use one-at-a-time constructs like RAII&#x2F;`Drop` behind your back so you don&#x27;t have to worry about stupid magic happening when things go out of scope that might completely ruin your cache, etc.To borrow an argument from Rust proponents, you should be thinking about these things (allocation patterns) anyway and you&#x27;re doing yourself a disservice by leaving them up to magic or just doing them wrong. If your language can&#x27;t do what Odin and Zig does (pass them around, and in Odin you can inherit them from the calling scope which coupled with passing them around gives you incredible freedom) then you probably should try one where you can and where the ecosystem is based on that assumption.My personal experience with first Zig and later Odin is that they&#x27;ve provided the absolute most productive experience I&#x27;ve ever had when it comes to the code that I had to write. I had to write more code because both ecosystems are tiny and I don&#x27;t really like extra dependencies regardless. Being able to actually write your dependencies yourself but have it be such a productive experience is liberating in so many ways.Odin is my personal winner in the race between Odin and Zig. It&#x27;s a very close race but there are some key features in Odin that make it win out in the end:- There is an implicit `context` parameter primarily used for passing around an allocator, a temp-allocator and a logger that can be implicitly used for calls if you don&#x27;t specify one. This makes your code less chatty and let&#x27;s you talk only about the important things in some cases. I still prefer to be explicit about allocators in most plumbing but I&#x27;ll set `context.allocator` to some appropriate choice for smaller programs in `main` and let it go- We can have proper tagged unions as errors and the language is built around it. This gives you code that looks and behaves a lot like you&#x27;ll be used to with `Result` and `Option` in Rust, with the same benefits.- Errors are just values but the last value in a multiple-value-return function is understood as the error position if needed so we avoid the `if error != nil { ... }` that would otherwise exist if the language wasn&#x27;t made for this. We can instead use proper error values (that can be tagged unions) and `or_return`, i.e.: doing_things :: proc() ParsingError { parsed_data := parse_config_file(filename) or_return ... }If we wanted to inspect the error this would instead be: &#x2F;&#x2F; The zero value for a union is `nil` by default and the language understands this ParsingError :: union { UnparsableHeader, UnparsableBody, } UnparsableHeader :: struct { ... } UnparsableBody :: struct { ... } doing_things :: proc() { parsed_data, parsing_error := parse_config_file(filename) &#x2F;&#x2F; `p in parsing_error` here unpacks the tag of the union &#x2F;&#x2F; Notably there are no actual \"constructors\" like in Haskell &#x2F;&#x2F; and so a type can be part of many different unions with no syntax changes &#x2F;&#x2F; for checking for it. switch p in parsing_error { case UnparsableHeader: &#x2F;&#x2F; In this scope we have an `UnparsableHeader` function_that_deals_with_unparsable_header(p) case UnparsableBody: function_that_deals_with_unparsable_body(p) } ... }- ZVI or \"zero-value initialization\" means that all values are by default zero-initialized and have to have zero-values. The entire language and ecosystem is built around this idea and it works terrifically to allow you to actually talk only about the things that are important, once again.P.S. If you want to make games or the like Odin has the absolute best ecosystem of any C alternative or C++ alternative out there, no contest. Largely this is because it ships with tons of game related bindings and also has language features dedicated entirely to dealing with vectors, matrices, etc., and is a joy to use for those things. I&#x27;d still put it forward as a winner with regards to most other areas but it really is an unfair race when it comes to games. reply pshc 12 hours agorootparentprevDebugging rare crashes and heisenbugs is more frustrating, and in non-safe languages, a chronic problem.Whereas after you prove the safety of a design once, it stays with you. reply jstx1 12 hours agorootparentIt stays with you until you need to change something and find yourself unable to make incremental changes.And in many use cases people are throwing Rust (and especially async Rust) on problems solved just fine with GC languages so the safety argument doesn’t apply there. reply brigadier132 12 hours agorootparent> change something and find yourself unable to make incremental changeswhy do you believe this becomes the case with rust code? reply imtringued 1 hour agorootparentprevThe safety argument is actually the reason why you can use Rust in those cases to begin with. If it was C or C++ you simply couldn&#x27;t use it for things like webservers due to the safety problems inherent to these languages. So Rust creeps into the part of the market that used to be exclusive to GC languages. reply maccard 1 hour agorootparentWhat do you think nginx and Apache are written in? reply throw10920 9 hours agorootparentprevSo you use a safe, garbage-collected language like Python, and iterate 5x as fast as Rust. Problem solved. It&#x27;s 2023 - there are at least a dozen production-quality safe languages. reply pkolaczk 2 hours agorootparent> and iterate 5x as fast as Rust.I&#x27;ve been involved in Java, Python, PHP, Scala, C++, Rust, JS projects in my career. I think I&#x27;d notice a 5x speed difference in favor of Python if it existed. But I haven&#x27;t. reply buildartefact 8 hours agorootparentprevYou’re seriously suggesting writing a game engine in Python? reply throw10920 8 hours agorootparentYou accidentally responded to the wrong comment. I never mentioned a game engine. reply Turskarama 7 hours agorootparentIt doesn&#x27;t really matter, there doesn&#x27;t exist a problem space where both Rust and Python are reasonable choices.Case in point, I once wrote a program to take a 360 degree image and rotate it so that the horizon followed the horizontal line along the middle, and it faced north. I wrote it in python first and running it on a 2k image took on the order of 5 minutes. I rewrote it in rust and it took on the order of 200ms.Could I iterate in Python faster? Yes, but the end result was useless. reply throw10920 7 hours agorootparent> there doesn&#x27;t exist a problem space where both Rust and Python are reasonable choicesThis thread, and many other threads about Rust, are filled with people arguing the exact opposite - that Rust is a good, productive language for high-level application development. I agree with you, there&#x27;s relatively little overlap - that&#x27;s what I&#x27;m arguing for! reply SantalBlush 6 hours agorootparentprevThis thread is about writing a game engine, so GP didn&#x27;t \"accidentally\" respond to the wrong comment. Their question is on-topic.If your comments aren&#x27;t relevant to writing a game engine, then they&#x27;re not relevant to this thread. reply throw10920 4 hours agorootparent> This thread is about writing a game engineThis is false. This \"thread\" is not \"about\" anything. The top-level comment was about writing a game engine, and various replies to that thread deviated from that topic to a greater or lesser extent. Nobody has the authority to decide what a thread is \"about\".Additionally, the actual article under consideration is about Rust&#x27;s design in general. That makes my comments more on topic than one about game engines in particular, and so it should be pretty clear that if you&#x27;re going to assume anything about my comments, then it would not be that they&#x27;re about game engines. replydevjab 5 hours agorootparentprevI think you may be misunderstanding what GP means. It&#x27;s about spending a day working on issues. You&#x27;re either doing it before you launch your iteration, or you&#x27;re doing it after. GP thinks it&#x27;s better to spend the time before you push the change. From a quality perspective it&#x27;s hard to see how anyone could disagree with that, but I can certainly see why there would be different preferences from programmers.I don&#x27;t personally mind debugging, too much, but if your goal is to avoid bugs in your running software, then Rust has some serious advantages. We mainly use TypeScript to do things, which isn&#x27;t really comparable to Rust. But we do use C when we need performance, and we looked into Rust, even did a few PoCs on real world issues, and we sort of ended up in a situation similar to GP. Rust is great though a bit \"verbose\" to write, but its eco-system is too young to be \"boring\" enough for us, so we&#x27;re sticking with C for the time being. But being able to avoid running into crashes by doing the work before your push your code is immensely valuable in fault-intolerant systems. Like, we do financial work with C, it cannot fail. So we&#x27;re actually still doing a lot of the work up-front, and then we handle it by rigorously testing everything. Because it&#x27;s mainly used for small performance enhancement, our C programs are small enough to where this isn&#x27;t an issue, but it would be a nightmare to do with 40.000 lines of C code. reply otikik 11 hours agorootparentprevThe “beats debugging” part I took it as meaning “it is better than spending that day debugging”.I have fought the ownership rules and lost (replaced references by integers to a common vector-ugly stuff, but I was time constrained). But I have seen people spend several weeks debugging a single problem, and that was really soul-crushing. reply yazaddaruvala 8 hours agoparentprevOut of curiosity, why not go all in on Tokio? Make everything a future, including writing to the GPU.And are you using an ECS based architecture? Do you feel you’d have a different opinion if you were? reply benreesman 11 hours agoparentprevI don’t know what you mean by web-scale, you’d be mistaken if you meant “the multi-threaded services that power giant internet properties”.If you want extreme low contention extreme high-utilization, you’re doing threading and event-driven simultaneously, there are no easy answers on heavily contended data structures because you can’t duplicate to exploit immutability if mere insane complexity is an alternative, and mistakes cost millions in real time.There’s a reason why those places scout so heavily for the lock-free&#x2F;wait-free galaxy brains the minute they finish their PhDs. reply rhaps0dy 11 hours agoparentprevWhat’s the server for a metaverse client? Is there a standardized protocol, or a particularly popular one you’re targeting? reply Animats 10 hours agorootparentIt&#x27;s a client for Second Life or Open Simulator. reply LukaD 11 hours agoparentprevRust is not race condition free, it guarantees no data races though. reply 0xDEF 14 hours agoparentprevnext [–]\"I&#x27;ve learned to live without objects, but the trait system is somewhat convoluted. There&#x27;s one area of asset processing that really wants to be object oriented, and I have more duplicate code there than I like. I could probably rewrite it to use traits more, but it would take some bashing to make it fit the trait paradigm.\"Can you expand on this? I come from the C# world and the Rust trait system feels expressive enough to implement the good parts of OOP. reply bombela 14 hours agorootparentI understand this not as objects are missing, after all, struct with methods and traits are objects aren&#x27;t they? But more like the lack of hierarchical inheritance, that is most often used in OOP to conveniently share common code with added specialization. Override only the methods you want. You can do it with Traits of course, but it&#x27;s much more verbose. You can technically use the defer trait to simulate a sort of method inheritance, but it is frowned upon as it should be reserved for smart-pointer like objects (so the doc says). reply Animats 14 hours agorootparentThat&#x27;s about what I was going to say. Traits have no data of their own. If you need that, you have to construct it, with a data object in each trait instance and access functions for it. It turns the notion of inheritance inside out. Awkward enough that it&#x27;s only done if absolutely necessary. reply radicalbyte 13 hours agorootparentprevI&#x27;m from the C# world and am working through learning Rust... in C# we&#x27;ve largely moved away from using inheritance. Not sure that it&#x27;s a good thing but \"best practise\" results in serialisation being implemented differently (serialisers which use attributes, or for more advanced teams serialisation wired in at compile time targeted by attributes - advantage here being that the state doesn&#x27;t have to be public). reply wvenable 9 hours agorootparentI still use inheritance in C# although it is only used for is-a relationships and those aren&#x27;t that common. But when you need it for that, it&#x27;s usually pretty important.I also think it&#x27;s much more common to see it in library &#x2F; framework code and not in application code. reply vacuity 8 hours agorootparentUI in Rust without inheritance is tricky. There&#x27;s still no great UI framework written in Rust yet, though not for lack of trying! I&#x27;m interested to see how Bevy&#x27;s UI turns out. They&#x27;re currently exploring the design space and requirements for production-grade UI, actually. reply Turskarama 7 hours agorootparentprevIt&#x27;s \"prefer composition over inheritance\" though, not \"never use inheritance\".There is a time and a place for it. reply lmm 7 hours agorootparentprevDoes delegate support delegating everything (except what you&#x27;re specifically implementing for your own struct) yet? That&#x27;s the way to do it. reply silisili 13 hours agoparentprevLooks great!Without judgment I must ask, what made you decide to target metaverse specifically? Is it more of a fun challenge, or do you see it having a bright&#x2F;popular future? reply Animats 10 hours agorootparentI was really bored during COVID lockdown and needed a hard problem. I may say more about metaverse stuff in another place, but don&#x27;t want to derail the Rust issues. reply Ygg2 11 hours agoparentprev> There was an article on HN a few days ago about this. \"Rust has 5 games and 50 game engines\".That&#x27;s not a serious article. That&#x27;s a humourous video.Source: https:&#x2F;&#x2F;youtu.be&#x2F;TGfQu0bQTKc?t=169 reply vacuity 8 hours agorootparentIt has some truth to it, still. reply Ygg2 1 hour agorootparentNot really. To get to 50 game engines you need some creative accounting. The real joke would be 3 engines and 0 profitable games. reply m4tthumphrey 12 hours agoparentprev> As I&#x27;ve mentioned before, I&#x27;m writing a high performance metaverse client.Why? (Serious question) reply ipaddr 9 hours agorootparentStarted 3 years ago during covid when metaverse looked attractive. In 3 years many of these AI applications will face the same questions. reply PUSH_AX 2 hours agorootparentWill they? AI has adoption already, the metaverse is still waiting for meaningful adoption. You could argue that it’s never coming. reply RetpolineDrama 13 hours agoparentprev>The normal development process is that it&#x27;s hard to get things to compile, and then it Just Works. That&#x27;s great! I hate using a debugger, especially on concurrent programs. Yes, sometimes you can get stuck for a day, trying to express something within the ownership rules. Beats debugging.This is a far superior workflow when you factor in outcomes. More up front time to get a \"correct\"&#x2F;more-reliable output scales infinitely better than than churning out crap that you need to wrap in 10,000 lines of tests to keep from breaking&#x2F;validate (See: the dumpster-fire that is Rails) reply Someone 12 hours agorootparent> This is a far superior workflow when you factor in outcomes.I’m a strong-typing enthousiast, too, but still, I’m not fully convinced that’s true.It seems you can’t iterate fast at all in Rust because the code wouldn’t compile, but can iterate fast in C++, except for the fact that the resulting code may be&#x2F;often is unstable.If you need to try out a lot of things before finding the right solution, the ability to iterate fast may be worth those crashes.Maybe, using C++ for fast iterations, and only using various tools to hunt down issues the borrow checker would catch on the iteration you want to keep beats using Rust.Or do Rust programmers iterate fast using unsafe where needed and then fix things once they’ve settled on a design? reply throw10920 9 hours agorootparent> It seems you can’t iterate fast at all in Rust because the code wouldn’t compileYup, this is correct - and the reason is because Rust forces you to care about efficiency concerns (lifetimes) everywhere. There&#x27;s no option to \"turn the borrow checker off\" - which means that when you&#x27;re in prototyping mode, you pay this huge productivity penalty for no benefit.A language that was designed to be good at iteration would allow you to temporarily turn the borrow checker off, punch holes in your type system (e.g. with Python&#x27;s \"Any\"), and manage memory for you - and then let you turn those features on again when you&#x27;re starting to optimize and debug. (plus, an interactive shell and fast compilation times - that&#x27;s non-negotiable) Rust was never designed to be good at prototyping.I heard a saying a few years ago that I like - \"it&#x27;s designed to make hardware [rigid, inflexible programs], not software\". (it&#x27;s from Steve Yegge - I could track it down if I cared) reply buildartefact 8 hours agorootparent>There&#x27;s no option to \"turn the borrow checker off\" - which means that when you&#x27;re in prototyping mode, you pay this huge productivity penalty for no benefitThat’s not really true. The standard workaround for this is just to .clone() or Rc> to unblock yourself, then come back later and fix it.It is true that this needs to be done with some care otherwise you can end up infecting your whole codebase with the “workaround”. That comes with experience. reply throw10920 8 hours agorootparent> It is true that this needs to be done with some care otherwise you can end up infecting your whole codebase with the “workaround”It&#x27;s a \"workaround\" precisely because the language does not support it. My statement is correct - you cannot turn the borrow-checker off, and you pay a significant productivity penalty for no benefit. \"Rc\" can&#x27;t detect cycles. \".clone()\" doesn&#x27;t work for complex data structures. reply mtsr 1 hour agorootparentYou can’t turn off undefined behavior in C++ either. Lifetimes exist whether the language acknowledges them or not.Except if you go to a GC language, but then you’re prototyping other types of stuff than you’d probably pick Rust for. reply lmm 7 hours agorootparentprevYou can use unsafe if you really want to \"turn the borrow-checker off\", no? reply throw10920 7 hours agorootparentNo, because that doesn&#x27;t give you automatic memory management, which is the point. When I&#x27;m prototyping, there&#x27;s zero reason for me to care about lifetimes - I just want to allocate an object and let the runtime handle it. When you mark everything in your codebase unsafe (a laborious and unnecessary process that then has to be laboriously undone), you still have to ask the Rust runtime for dynamic memory manually, and then track the lifetimes in your head. reply lmm 6 hours agorootparentIf you&#x27;re saying you want GC&#x2F;Arc then that&#x27;s more than just \"turning off the borrow checker\". reply throw10920 4 hours agorootparentPedantry. Later on in my comment I literally say \"manage memory for you\" - it should be pretty clear that my intent was to talk about a hypothetical language that allowed you to change between use of a borrow checker and managed memory, even if I didn&#x27;t use the correct wording (\"turn off the borrow checker\") in that particular very small section of it. replyqueuebert 8 hours agorootparentprevThe dev cycle is slower, yes, but once it compiles, there is no debug cycle. reply throw10920 8 hours agorootparentWildly false. Rust&#x27;s design does virtually nothing to prevent logic errors. reply jandrewrogers 7 hours agorootparentprevSo then tests are optional?Most bugs are elementary logic bugs expressible in every programming language. reply pjmlp 5 hours agorootparentprevI have found someone that never introduces logic errors, and found out a way to use dependent types in Rust. &#x2F;s reply imtringued 1 hour agorootparent95% of my \"logic errors\" are related to surprise nulls (causing a data leak of sensitive data) or surprise mutability. The idea that there is no debug cycle is ridiculous but I am confident that there will be less of them in Rust. reply Sharlin 11 hours agorootparentprevI think mostly you just need less iteration with Rust because the language seems to guide you towards nice, clean solutions once you learn not to fight the borrow checker.Rust programmers don&#x27;t iterate using unsafe because every single line of unsafe gives you more to think and worry about, not less. But they might iterate using more copying&#x2F;cloning&#x2F;state-sharing-with-ref-counting-and-RefCell than necessary, and clean up the ownership graph later if needed. reply tsimionescu 2 hours agorootparentThe point of iteration is not typically to find the best implementation for a given algorithm, it&#x27;s to find the best algorithm for solving a given problem.I can see the argument that Rust encourages by its design a clean implementation to any given algorithm. But no language&#x27;s design can guide you to finding a good algorithm for solving a given problem - you often need to quickly try out many different algorithms and see which works best for your constraints. reply throw10920 9 hours agorootparentprev> I think mostly you just need less iteration with Rust because the language seems to guide you towards nice, clean solutions once you learn not to fight the borrow checker.That&#x27;s not iteration. That&#x27;s debugging. \"Iteration\" includes design work. Rust&#x27;s requirement to consider memory management and lifetimes actively interferes with design work with effectively zero contributions towards functional correctness (unlike types, which actually help you write less buggy code - but Rust&#x27;s type system is not unique and is massively inferior to the likes of Haskell and Idris), let alone creating things. reply rkangel 11 hours agorootparentprevIn Rust you have the option to Box and&#x2F;or Rc everything. That gets you out of all the borrowing problems at the cost of rubtime performance (it basically puts you in the C++ world). This is a perfectly reasonable way to program but people forget about it due to the more \"purist\" approach that&#x27;s available. But it&#x27;s a good way to go for iteration and simplicity, and (in my opinion) still miles better than C++, due to the traits, pattern matching, error handling, and tooling. reply Animats 13 hours agorootparentprevI tend to agree, but pro game dev is a hell where people demand that a new feature be demoed for the producer by 1 PM tomorrow. I have the luxury of not being under such pressure. reply jonstewart 6 hours agoparentprevThis is very interesting. How do you manage latency of events coming over the network?Do... you... wind up having to set TCP_NODELAY?•͡˘㇁•͡˘ reply Animats 5 hours agorootparentEmbarrassingly, yes, because I can&#x27;t turn off delayed ACKs from Rust. reply hexane360 11 hours agoparentprev>It&#x27;s probably about five people working for a year from being ready.The trouble is, we actually have tens&#x2F;hundreds of people, all working on their own. The blessing and curse of open source development reply generalenvelope 15 hours agoparentprevaside: I love egui reply gigel82 10 hours agoparentprev> If I had to do this in C++, I&#x27;d be fighting crashes all the time.Why? I&#x27;d take modern C++ over Rust every day of the week. reply lordnacho 17 hours agoprevI find myself in this weird corner when it comes to async rust.The guy&#x27;s got a point in that doing a bunch of Arc, RwLock, and general sharing of state is going to get messy. Especially once you are sprinkling &#x27;static all over the place, it infects everything, much like colored functions. I did this whole thing once back when I was starting off where I would Arc stuff, and try to be smart about borrow lifetimes. Total mess.But then rust also has channels. When you read about it, it talks about \"messages\", which to me means little objects. Like a few bytes little. This is the solution, pretty much everything I write now is just a few tasks that service some channels. They look at what&#x27;s arrived and if there&#x27;s something to output, they will put a message on the appropriate channel for another task to deal with. No sharing objects or anything. If there&#x27;s a large object that more than one task needs, either you put it in a task that sends messages containing the relevant query result, or you let each task construct its own copy from the stream of messages.And yet I see a heck of a lot of articles about how to Arc or what to do about lifetimes. They seem to be things that the language needs, especially if you are implementing the async runtime, but I don&#x27;t understand why the average library user needs to focus so much on this. reply fnordpiglet 17 hours agoparentI find the criticisms a little strange - async doesn’t imply multithreaded, and you don’t need to annotate everything shared with magic keywords if you’re async within the same thread because there’s no sharing. Only one future at a time is running on the thread and they’re within the same context.When moving between threads I do what you suggest here and use channels to send signals rather than having a lot of shared state. Sometimes there is a crucial global state something that’s easier to just directly access, but I just write struct that manages all the Arc&#x2F;RwLock or whatever other exclusive access mechanism I need for the access patterns. From the callers point of view everything is just a simple function call. When writing the struct I need to be thoughtful of sharing semantics but it’s a very small struct and I write it once and move on.I also don’t understand their concern about making things Send+Sync. In my experience almost everything is easily Send+Sync, and things that aren’t shouldn’t or couldn’t be.I get that sometimes you just want to wear sweatpants and write code without thought of the details, but most languages that offer that out of the box don’t really offer efficient concurrency and parallelism. And frankly you rarely actually need those things even if the “but it’s cool” itch is driving you. Most of the time a nodejs-esque single threaded async program is entirely sufficient, and a lot of the time Async isn’t even necessary or particularly useful. But when you need all these things, you probably need to hike up your sweatpants and write some actual computer code - because microseconds matter, profiled throughput is crucial, and nothing in life that’s complex is easy and anyone selling you otherwise is lying. reply brundolf 16 hours agorootparent> Sometimes there is a crucial global state something that’s easier to just directly access, but I just write struct that manages all the Arc&#x2F;RwLock or whatever other exclusive access mechanism I need for the access patterns. From the callers point of view everything is just a simple function call. When writing the struct I need to be thoughtful of sharing semantics but it’s a very small struct and I write it once and move on.This is a recurring pattern I&#x27;ve started to notice with Rust: most things that repeatedly feel clunky, or noisy, or arduous, can be wrapped in an abstraction that allows your business logic to come back into focus. I&#x27;ve started to think this mentality is essential to any significant Rust project. reply fnordpiglet 16 hours agorootparentYeah it was a bit of a block for me as well, I don’t know where it came from, but I resisted wrapping things. Reality is breaking things up into crates is encouraged anyway, and just abstracting complexity away is Not That Hard, and can usually be pretty small and concise to boot.I think I’m used to other languages provided a lot of these abstractions or having some framework that manages it all. The frameworks in rust tend to be pretty low level (with a few notable exceptions) so perhaps that’s where it comes from. reply brundolf 16 hours agorootparentWell for one- creating abstractions always comes with a tradeoff, so it&#x27;s good to have some basic skepticism around them. But Rust embraces them, for better and worse. It equips you to write extremely safe and scalable abstractions, but it&#x27;s also designed in a way that assumes you&#x27;re going to use those capabilities (mainly, being really low-level and explicit by default), and so you&#x27;re going to have a harder time if you avoid themAnother thing, for me, was that I came from mostly writing TypeScript, which is the opposite: the base language is breezy without abstractions, and the type system equips you to strongly-type plain data and language features, so you&#x27;ll have a great time if you stick to thoseBut yeah, it&#x27;s been interesting to see how different the answers to these questions can be in different languages! reply Pauan 16 hours agorootparentRust embraces abstractions because Rust abstractions are zero-cost. So you can liberally create them and use them without paying a runtime cost.That makes abstractions far more useful and powerful, since you never need to do a cost-benefit analysis in your head, abstractions are just always a good idea in Rust. reply awused 13 hours agorootparent\"Zero-cost abstractions\" can be a confusing term and it is often misunderstood, but it has a precise meaning. Zero-cost abstractions doesn&#x27;t mean that using them has no runtime cost, just that the abstraction itself causes no additional runtime cost.These can also be quite narrow: Rc is a zero-cost abstraction for refcounting with both strong and weak references allocated with the object on the heap. You cannot implement something the same more efficiently, but you can implement something different but similar that is both faster and lighter than Rc. You can make a CheapRc that only has strong counts, and that will be both lighter and faster by a tiny amount, or a SeparateRc that stores the counts separately on the heap, which offers cheaper conversions to&#x2F;from Rc. reply Pauan 13 hours agorootparentI am very aware of the definition of zero-cost.We&#x27;re talking about the comparison between using an abstraction vs not using an abstraction.When I said \"doesn&#x27;t have a runtime cost\", I meant \"the abstraction doesn&#x27;t have a runtime cost compared to not using the abstraction\".If you want your computer to do anything useful, then you have to write code, and that code has a runtime cost.That runtime cost is unavoidable, it is a simple necessity of the computer doing useful work, regardless of whether you use an abstraction or not.Whenever you create or use an abstraction, you do a cost-benefit analysis in your head: \"does this abstraction provide enough value to justify the EXTRA cost of the abstraction?\"But if there is no extra cost, then the abstraction is free, it is truly zero cost, because the code needed to be written no matter what, and the abstraction is the same speed as not using the abstraction. So there is no cost-benefit analysis, because the abstraction is always worth it. reply awused 13 hours agorootparentThe way you used it in your parent comment didn&#x27;t make it clear that you were using it properly, hence my clarification. I&#x27;m honestly still not sure you&#x27;ve got it right, because Rust abstractions, in general, are not zero-cost. Rust has some zero-cost abstractions in the standard library and Rust has made choices, like monomorphization for generics, that make writing zero-cost abstractions easier and more common in the ecosystem. But there&#x27;s nothing in the language or compiler that forces all abstractions written in Rust to be free of extra runtime costs. reply Pauan 9 hours agorootparentI never said that ALL abstractions in Rust are zero-cost, though the vast majority of them are, and you actually have to explicitly go out of your way to use non-zero-cost abstractions. reply awused 1 hour agorootparentAre you sure about that?>Rust embraces abstractions because Rust abstractions are zero-cost. So you can liberally create them and use them without paying a runtime cost.>you never need to do a cost-benefit analysis in your head, abstractions are just always a good idea in RustAgain though, and ignoring that, \"zero-cost abstraction\" can be very narrow and context specific, so you really don&#x27;t need to go out of your way to find \"costly\" abstractions in Rust. As an example, if you have any uses of Rc that don&#x27;t use weak references, then Rc is not zero-cost for those uses. This is rarely something to bother about, but rarely is not never, and it&#x27;s going to be more common the more abstractions you roll yourself. replybrundolf 15 hours agorootparentprevThere&#x27;s always a complexity cost even when there isn&#x27;t a runtime cost. It just so happens that in Rust, the benefits tend to outweigh the costs reply Pauan 13 hours agorootparentThe whole point of an abstraction is to remove complexity for the user.So I assume you mean \"implementation complexity\" but that&#x27;s irrelevant, because that cost only needs to be paid once, and then you put the abstraction into a crate, and then millions of people can benefit from that abstraction. reply brundolf 12 hours agorootparentYou&#x27;ve got a very narrow view that I&#x27;d encourage you to be more open-minded aboutNo abstraction is perfect. Every abstraction, when encountered by a user, requires them to ask \"what does this do?\", because they don&#x27;t have the implementation in front of their eyesThis may be an easy question to answer- maybe it maps very obviously to a pattern or domain concept they already know, or maybe they&#x27;ve seen this exact abstraction before and just have to recall itIt may be slightly harder- a new but well-documented concept, or a concept that&#x27;s intuitive but complex, or a concept that&#x27;s simple but poorly-namedOr it may be very hard- a badly-designed abstraction, or one that&#x27;s impossible to understand without understanding the entire systemBut the simplest, most elegant, most intuitive abstraction in the world has nonzero cognitive cost. We abstract despite the cost, when that cost is smaller than the cost of not abstracting. reply pkolaczk 1 hour agorootparentThe whole point of abstraction is to replace the need of understanding all the details of the implementation with a more general and simpler concept. So while the abstraction itself may have a non zero cognitive cost for the end user, this cost should be lower than the cognitive cost of the full implementation that the abstraction hides. Hence the net cognitive cost of proper abstraction is negative.Abstractions allow systems to scale. Without them, it would be impossible to work on a system that&#x27;s 1M lines of code long, because you&#x27;d have to read and understand all 1M lines before doing anything. reply Pauan 9 hours agorootparentprevEven the costs you are talking about are a one-time cost to read the documentation and learn the abstraction. And the long-term benefits of the abstraction are far greater than the one-time costs. That&#x27;s why we create abstractions, because they are a net gain. If they were not a net gain, we would simply not create them. reply politician 14 hours agorootparentprev> abstractions are just always a good ideaThe \"zero-cost\" phrase is deceptive. There&#x27;s a non-zero cognitive cost to the author and all subsequent readers. A proliferation of abstractions increases the cost of every other abstraction further due to complex interactions. This is true of in all languages where the community has embraced the idea of abstraction without moderation. reply fnordpiglet 13 hours agorootparentWell, the intent of an abstraction is it comes at a non zero cost to the author but a substantial benefit to the user&#x2F;reader. If it’s a cost to everyone why are you doing it at all?Rust embraces zero to low cost abstraction at the machine performance level, although to get reflective or runtime adaptive abstractions you end up losing some of that zero cost as you need to start boxing and moving things into heaps and using vtables, etc. IMO this is where rust is weakest and most complex. replylikeabbas 15 hours agorootparentprev> async doesn’t imply multithreadedAsync the keyword doesn’t, but Tokio forces all of your async functions to be multi thread safe. And at the moment, tokio is almost exclusively the only async runtime used today. 95% of async libraries only support tokio. So you’re basically forced to write multi thread safe code even if you’d benefit more from a single thread event loop.Rust async’s set up is horrid and I wish the community would pivot away to something else like Project Loom. reply Pauan 15 hours agorootparentNo, tokio does not require your Futures to be thread-safe.Every executor (including tokio) provides a `spawn_local` function that spawns Futures on the current thread, so they don&#x27;t need to be Send:https:&#x2F;&#x2F;docs.rs&#x2F;tokio&#x2F;1.32.0&#x2F;tokio&#x2F;task&#x2F;fn.spawn_local.htmlI have used Rust async extensively, and it works great. I consider Rust&#x27;s Future system to be superior to JS Promises. reply likeabbas 13 hours agorootparentSo you’re stuck choosing a single CPU or having to write send and sync everywhere. There’s a lot of use cases where you would want a thread-per-core model like Glommio to take advantage of multiple cores while still being able to write code like it’s a single thread.> I have used Rust async extensively, and it works great. I consider Rust&#x27;s Future system to be superior to JS Promises.Sure, but it’s a major headache compared to Java VirtualThreads or goroutines reply Pauan 9 hours agorootparent> So you’re stuck choosing a single CPU or having to write send and sync everywhere. There’s a lot of use cases where you would want a thread-per-core model like Glommio to take advantage of multiple cores while still being able to write code like it’s a single thread.thread_local! exists, and you can just call spawn_local on each thread. You can even call spawn_local multiple times on the same thread if you want.You can have some parts of your programs be multi-threaded, and then other parts of your program can be single-threaded, and the single-threaded and multi-threaded parts can communicate with an async channel...Rust gives you an exquisite amount of control over your programs, you are not \"stuck\" or \"locked in\", you have the flexibility to structure your code however you want, and do async however you want.You just have to uphold the basic Rust guarantees (no data races, no memory corruption, no undefined behavior, etc.)The abstractions in Rust are designed to always uphold those guarantees, so it&#x27;s very easy to do. reply threeseed 6 hours agorootparent> Rust gives you an exquisite amount of control over your programsIt does.Problem is that there isn&#x27;t the documentation, examples etc to help navigate the many options. reply veber-alex 11 hours agorootparentprev> So you’re stuck choosing a single CPU or having to write send and sync everywhere. There’s a lot of use cases where you would want a thread-per-core model like Glommio to take advantage of multiple cores while still being able to write code like it’s a single thread.No your not, you spawn a runtime on each thread and use spawn_local on each runtime. This is how actix-web works and it uses tokio under the hood.https:&#x2F;&#x2F;docs.rs&#x2F;actix-rt&#x2F;latest&#x2F;actix_rt&#x2F; reply fnordpiglet 10 hours agorootparentYea this is exactly what I do. It makes everything much cleaner. reply adamch 14 hours agorootparentprevWow, I&#x27;ve been using tokio for years and never knew about this. Thanks! reply awused 15 hours agorootparentprev>but Tokio forces all of your async functions to be multi thread safeWhile there are other runtimes that are always single-threaded, you can do it with tokio too. You can use a single threaded tokio runtimes and !Send tasks with LocalSet and spawn_local. There are a few rough edges, and the runtime internally uses atomics where a from-the-ground-up single threaded runtime wouldn&#x27;t need them, but it works perfectly fine and I use single threaded tokio event loops in my programs because the tokio ecosystem is broader. reply brabel 15 hours agorootparentprevSo with another async runtime it&#x27;s possible to write async Rust that doesn&#x27;t need to be thread-safe??? Can you show some example? reply awused 15 hours agorootparentYou don&#x27;t even need other runtimes for this. Tokio includes a single-threaded runtime and tools for dealing with tasks that aren&#x27;t thread safe, like LocalSet and spawn_local, that don&#x27;t require the future to be Send. reply Pauan 15 hours agorootparentprevEvery executor (including tokio) supports spawning Futures that aren&#x27;t Send:https:&#x2F;&#x2F;docs.rs&#x2F;tokio&#x2F;1.32.0&#x2F;tokio&#x2F;task&#x2F;fn.spawn_local.htmlThere is a lot of misinformation in this thread, with people not knowing what they&#x27;re talking about. reply Cu3PO42 17 hours agoparentprevI really like the message passing paradigm. And languages like Erlang have shown that its an excellent choice... for distributed systems. But writing code like that is a very diffferent experience from, say, async JavaScript, which feels more like writing synchronous code with green threads (except you have to deal with function coloring as well). I believe people will try to write code in a way that is already familiar to them, leading them down the path of Arc and RwLock in Rust. reply rkangel 11 hours agorootparent> But writing code like that is a very diffferent experience from, say, async JavaScript,I write a fair amount of code in Elixir professionally and this isn&#x27;t how I view it.There are some specific Elixir&#x2F;Erlang bits of ceremony you need to do to set up your supervision tree of GenServers, but then once that&#x27;s done you get to write code that feels like so gle threaded \"ignore the rest of the world\" code. Some of the function calls you&#x27;re making might be \"send and message and wait for a response\" from GenServers etc. but the framework takes care of that.I wrote some driver code for an NXP tag chip. Driving the inventory process is a bit involved, you have to do a series of things, set up hardware, turn on radio, wait a bit, send data, service the SPI the whole time in parallel. With the right setup for the hardware interface I just wrote the whole thing as a sequence, it was the simplest possible code you could imagine for it. And this at the same time as running a web server, and servicing hardware interrupts that cause it to reload the state of some registers and show them to each connected web session. reply johnmaguire 17 hours agorootparentprevGo also uses goroutines and channels to facilitate message passing, or as they describe it, \"sharing memory by communicating.\"I imagine Rust to be a language far more similar to Go, in both use cases and functionality, than JS. reply ncruces 16 hours agorootparentAnd in the end, almost everything ends up using Mutex, RWMutex, WaitGroup, Once, and some channels that exist only to ever be closed (like Context.Done), and only if you need to select around them.It&#x27;s great, but message passing it is not. reply jzelinskie 16 hours agorootparentAs a quite senior Go developer, I&#x27;d like to +1 this a ton. You&#x27;re far more likely to have shocking edge cases unaccounted for when using channels. I consider every usage very, very carefully. Just like every other language, I think the ultimate solution is to build higher-level abstractions for concurrency patterns (e.g. errgroup) and, now that Go has generics, it&#x27;s the right time to start building them.If you haven&#x27;t seen this paper, I bet you&#x27;ll find at least one or two new bugs that you didn&#x27;t know about: https:&#x2F;&#x2F;songlh.github.io&#x2F;paper&#x2F;go-study.pdf reply bboozzoo 12 hours agorootparentThe first one is indeed non-obvious, but the remaining snippets presented as bugs would not pass a review unless hidden inside 1k+ LOC PRs. Some are so blatantly obvious (seriously for loop and not passing current value as variable?) that I&#x27;m surprised that authors have listed them as if they&#x27;re somehow special. reply xh-dude 11 hours agorootparentprevI still like channels because they may be a net reduction in the number of concurrency primitives in use, which complicates quantification in the paper - their taxonomy is great, though. Channels have some sharp corners. reply za3faran 10 hours agorootparentReducing the number of concurrency primitives does not imply reduction in complexity. On the contrary in fact, I&#x27;ve seen the messes created by golang in large production systems. Here&#x27;s a good article: https:&#x2F;&#x2F;www.uber.com&#x2F;blog&#x2F;data-race-patterns-in-go&#x2F; reply Pauan 16 hours agorootparentprevIf you choose to use Mutex, that&#x27;s on you.Rust gives you channels (both synchronous blocking channels and async channels), and they work great, there is nothing stopping you from using them. reply KMag 15 hours agorootparentI&#x27;m pretty sure the gp was talking about Go Mutex, not Rust Mutex. reply Pauan 15 hours agorootparentAh, my mistake. reply troupo 15 hours agorootparentprevBecause all languages and developers assume that Erlang is only about message passing. And they completely ignore literally everything else: from immutable structures to the VM providing insane guarantees (like processes not crashing the VM, and monitoring) reply Cu3PO42 16 hours agorootparentprev> I imagine Rust to be a language far more similar to Go, in both use cases and functionality, than JS.I mostly agree. But I would wager that for a significant amount of people their first exposure to \"async\" is JS and not any number of other languages. And when you try to write async Rust the same way as you might write async JS, things just aren&#x27;t that pretty. reply satvikpendem 16 hours agoparentprev> But then rust also has channels. When you read about it, it talks about \"messages\", which to me means little objects. Like a few bytes little. This is the solution, pretty much everything I write now is just a few tasks that service some channels. They look at what&#x27;s arrived and if there&#x27;s something to output, they will put a message on the appropriate channel for another task to deal with. No sharing objects or anything. If there&#x27;s a large object that more than one task needs, either you put it in a task that sends messages containing the relevant query result, or you let each task construct its own copy from the stream of messages.The dream of Smalltalk and true OOP is still alive. reply bluGill 16 hours agorootparentWhy does Smalltalk constantly get credit for being true OOP? Simula was doing OOP long before Smalltalk. Most languages choose Simula style OOP, and reject the things that make Smalltalk different.If you say Smalltalk is better OOP I might agree, but calling it \"true\" is not correct. reply dgb23 15 hours agorootparentBecause the term was coined by Alan Kay, who apparently later said he probably should have called it message oriented (paraphrasing).There&#x27;s also a written conversation you can find online where he disqualifies pretty much all of the mainstream languages of being OO.A lot of people, like you, say that OO == ADTs. Or rather, what ever Simula, C++ and Java are doing. Some will say that inheritance is an integral part of it, other&#x27;s say it&#x27;s all about interfaces.But then there&#x27;s people who say that Scheme and JavaScript are more object oriented than Java and C#. Or that when we&#x27;re using channels or actors we&#x27;re now _really_ doing OOP.There&#x27;s people who talk about patterns, SOLID, clean code and all sorts of things that you should be adhering to when structuring OO code.Then there&#x27;s people who say that OO is all about the mental model of the user and their ability to understand your program in terms of operational semantics. They should be able to understand it to a degree that they can manipulate and extend it themselves.It&#x27;s all very confusing. reply Rochus 14 hours agorootparent> Because the term was coined by Alan KayThis is pretty unlikely. See https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36879311. reply mkl 11 hours agorootparent> The term \"object-oriented\" was applied to a programming language for the first time in the MIT CSG Memo 137 (April 1976)That&#x27;s publications though. Alan Kay says he used it in conversation in 1967: http:&#x2F;&#x2F;userpage.fu-berlin.de&#x2F;~ram&#x2F;pub&#x2F;pub_jf47ht81Ht&#x2F;doc_kay...There&#x27;s probably also a distinction to be made between \"object-oriented\" and \"object-oriented programming\". reply Rochus 11 hours agorootparentThe referenced research also considers the publications by Kay and his team (including his theses and the Smalltalk-72 and 76 manuals) and other uses of the term. I think Kay mixes things up in retrospective; in his 1968 thesis he used the terms \"object language\" and \"object machine\", but not \"object-oriented\"; imagine giving your new breakthrough method a name, but then not using that name anywhere in the publication; that seems unthinkable, especially with an accomplished communicator like Kay. The first time \"object-oriented\" appears in a publication of his or his team is in 1978. reply Rochus 14 hours agorootparentprev> Most languages choose Simula style OOPRight, including Smalltalk 76 and 80 onwards themselves. Remember Kay&#x27;s statement \"actually I made up the term object-oriented and I can tell you I did not have C++ in mind, so the important thing here is I have many of the same feelings about Smalltalk\" (https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=oKg1hTOQXoY&t=636s); the reason he refers to Smalltalk this way in his 1997 talk was likely the fact that Smalltalk-80 has more in common with Simula 67 than his brain child Smalltalk-72. Ingalls explicitly refers to Simula 67 in his 2020 HOPL paper.> and reject the things that make Smalltalk differentWhich would mostly be its dynamic nature (Smalltalk-76 can be called the first dynamic OO language) and the use of runtime constructs instead dedicated syntax for conditions and loops (as it is e.g. the case in Lisp). There are a lot of dynamic OO languages still in use today, e.g. Python. Also Smalltalk-80 descendants are still in use, e.g. Pharo. reply KMag 16 hours agorootparentprevAlan Kay is generally credited with coming up with the term \"object-oriented\", so for better or for worse, many people defer to his definition and his embodiment of ideas when looking for a strict definition of the term. reply Rochus 13 hours agorootparent> many people defer to his definition and his embodiment of ideas when looking for a strict definition of the term.I consider the definition e.g. used by IEEE as sufficiently strict, see e.g. https:&#x2F;&#x2F;ethw.org&#x2F;Milestones:Object-Oriented_Programming,_196..., but - as you say - it&#x27;s not the defintion used by Kay. reply moomin 15 hours agorootparentprevHonestly, though, that’s like crediting William Burroughs with Blade Runner. reply macintux 16 hours agorootparentprevErlang often crops up in these conversations. reply otabdeveloper4 3 hours agorootparentprevOOP was a shit idea that needed to die. reply harpiaharpyja 16 hours agoparentprevI remember picking up this sort of advice from a professor way back in college. It&#x27;s a godsend. Structure the problem as data flowing between tasks and connect them up with queues, avoid sharing state. It&#x27;s just a better way to deal with multithreading no matter what language you use. reply bluGill 16 hours agorootparentThere is a time any place for sharing state and data. However it is extremely complex to make that work, and so if at all possible don&#x27;t. In general the only time I can&#x27;t use queues is when I&#x27;m writing the queue implementation (I&#x27;ve done this several times - turns out there are a number of different special cases in my embedded system where it was worth it to avoid some obscure downside to the queues I already had).When you need the absolute best performance sharing state is sometimes better - but you need a deep understanding of how your CPUs share state. A mutex or atomic write operation is almost always needed (the exceptions are really weird), and those will kill performance so you better spend a lot of time minimizing where you have them. reply brigadier132 12 hours agorootparentprevAsync is not a solution for data parallelism. reply samsquire 15 hours agorootparentprevI like this too.I would also suggest looking into ringbuffers and LMAX Disruptor pattern.There is also Red Planet Lab&#x27;s Rama, which takes the data flow idea and uses it to scale. reply mrkline 17 hours agoparentprevHoare Was Right.(But if you&#x27;re only firing up a few tasks, why not just use threads? To get a nice wrapper around an I&#x2F;O event loop?) reply kccqzy 17 hours agorootparentExactly. People are too afraid of using threads these days for some perceived cargo-cult scalability reasons. My rule of thumb is just to use threads if the total number of threads per process won&#x27;t exceed 1000.(This is assuming you are already switching to communicating using channels or similar abstraction.) reply jandrewrogers 16 hours agorootparentThe performance overhead of threads is largely unrelated to how many you have. The thing being minimized with async code is the rate at which you switch between them, because those context switches are expensive. On modern systems there are many common cases where the CPU time required to do the work between a pair of potentially blocking calls is much less than the CPU time required to yield when a blocking call occurs. Consequently, most of your CPU time is spent yielding to another thread. In good async designs, almost no CPU time is spent yielding. Channels will help batch up communication but you still have to context switch to read those channels. This is where thread-per-core software architectures came from; they use channels but they never context switch.Any software that does a lot of fine-grained concurrent I&#x2F;O has this issue. Database engines have been fighting this for many years, since they can pervasively block both on I&#x2F;O and locking for data model concurrency control. reply otabdeveloper4 3 hours agorootparentThe cost of context switching in \"async\" code is very rarely smaller than the cost of switching OS threads. (Exception is when you&#x27;ree using a GC language with some sort of global lock.)\"Async\" in native code is cargo cult, unless you&#x27;re trying to run on bare metal without OS support. reply nu11ptr 16 hours agorootparentprevThe challenge is that async colors functions and many of the popular crates will force you to be async, so it isn&#x27;t always a choice depending on which crates you need. reply adrienthebo 16 hours agorootparentPlease excuse my ignorance, I haven&#x27;t done a ton of async Rust programming - but if you&#x27;re trying to call async Rust from sync Rust, can you not just create a task, have that task push a value through a mpsc channel, shove the task on the executor, and wait for the value to be returned? Is the concern that control over the execution of the task is too coarse grained? reply Pauan 16 hours agorootparentYes, you can do that. You can use `block_on` to convert an async Future into a synchronous blocking call. So it is entirely possible to convert from the async world back into the sync world. reply likeabbas 6 hours agorootparentBut you have to pull in an async runtime to do it. So library authors either have to force everyone to pull in an async runtime or write two versions of their code (sync and async). reply nu11ptr 16 hours agorootparentprevThere are ways to call both from both for sure, but my point is if you don&#x27;t want any async in your code at all...that often isn&#x27;t a choice if you want to use the popular web frameworks for example. reply winternewt 12 hours agorootparentprevI can&#x27;t both perform blocking I&#x2F;O and wait for a cancellation signal from another thread. So I need to use poll(), and async is a nice interface to that. reply dralley 17 hours agorootparentprev99% of the use cases that ought to use async are server-side web services. If you&#x27;re not writing one of those, you almost certainly don&#x27;t need async. reply colejohnson66 17 hours agorootparentOr desktop programs. Many GUI frameworks have a main thread that updates the layout (among other things) and various background ones. reply bluGill 16 hours agorootparentAsync and GUI threads are different concepts. Of course most GUIs have an event loop which can be used as a form of async, but with async you do your calculations in the main thread, while with GUIs you typically spin your calculations off to a different thread.Most often when doing async you have a small number of tasks repeated many times, then you spin up one thread per CPU, and \"randomly\" assign each task as it comes in to a thread.When doing GUI style programming you have a lot of different tasks and each task is done in exactly one thread. reply jayd16 13 hours agorootparentHmm I would say the concepts are intertwined. Lots of GUI frameworks use async&#x2F;await and the GUI thread is just another concurrency pattern that adds lock free thread exclusivity to async tasks that are pinned to a single thread. reply SkiFire13 16 hours agorootparentprevAsync for GUIs is also nice. Not essential, but allows you to simply lot of callback code reply makapuf 17 hours agorootparentprevNote that if you \"just\" write responses to queries without yielding execution, you don&#x27;t need async, you just write Sync handlers to an async framework. (Hitting dB requests in a synchronous way is not good for your perf though, you better have a mostly read &#x2F; well cached problem) reply adrienthebo 17 hours agorootparentprevA particularly interesting use case for async Rust without threads is cooperative scheduling on microcontrollers[1]; this article also does a really good job of explaining some of the complications referenced in TFA.[1]: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36790238 reply tel 17 hours agorootparentprevWaiting asynchronously on multiple channels&#x2F;signals. Heterogenous select is really nice. reply simias 16 hours agorootparentIt really is, but I still favour \"unsexy\" manual poll&#x2F;select code with a lot of if&#x2F;elseing if it means not having to deal with async.I fully acknowledge that I&#x27;m an \"old school\" system dev who&#x27;s coming from the C world and not the JS world, so I probably have a certain bias because of that, but I genuinely can&#x27;t understand how anybody could look at the mess that&#x27;s Rust&#x27;s async and think that it was a good design for a language that already had the reputation of being very complicated to write.I tried to get it, I really did, but my god what a massive mess that is. And it contaminates everything it touches, too. I really love Rust and I do most of my coding in it these days, but every time I encounter async-heavy Rust code my jaw clenches and my vision blurs.At least my clunky select \"runtime\" code can be safely contained in a couple functions while the rest of the code remains blissfully unaware of the magic going on under the hood.Dear people coming from the JS world: give system threads and channels a try. I swear that a lot of the time it&#x27;s vastly simpler and more elegant. There are very, very few practical problems where async is clearly superior (although plenty where it&#x27;s arguably superior). reply vacuity 8 hours agorootparent> but I genuinely can&#x27;t understand how anybody could look at the mess that&#x27;s Rust&#x27;s async and think that it was a good design for a language that already had the reputation of being very complicated to write.Rust adopted the stackless coroutine model for async tasks based on its constraints, such as having a minimal runtime by default, not requiring heap allocations left and right, and being amenable to aggressive optimizations such as inlining. The function coloring problem (\"contamination\") is an unfortunate consequence. The Rust devs are currently working on an effects system to fix this. Missing features such as standard async traits, async functions in traits, and executor-agnosticism are also valid complaints. Considering Rust&#x27;s strict backwards compatibility guarantee, some of these will take a long time.I like to think of Rust&#x27;s \"async story\" as a good analogue to Rust&#x27;s \"story\" in general. The Rust devs work hard to deliver backwards compatible, efficient, performant features at the cost of programmer comfort (ballooning complexity, edge cases that don&#x27;t compile, etc.) and compile time, mainly. Of course, they try to resolve the regressions too, but there&#x27;s only so much that can be done after the fact. Those are just the tradeoffs the Rust language embodies, and at this point I don&#x27;t expect anything more or less. I like Rust too, but there are many reasons others may not. The still-developing ecosystem is a prominent one. reply mplanchard 6 hours agorootparentprevI read comments like this and feel like I’m living in some weird parallel universe. The vast majority of Rust I write day in and day out for my job is in an async context. It has some rough edges, but it’s not particularly painful and is often pleasant enough. Certainly better than promises in JS. I have also used system threads, channels, etc., and indeed there are some places where we communicate between long running async tasks with channels, which is nice, and some very simple CLI apps and stuff where we just use system threads rather than pulling in tokio and all that.Anyway, while I have some issues with async around futur composition and closures, I see people with the kind of super strong reaction here and just feel like I must not be seeing something. To me, it solves the job well, is comprehensible and relatively easy to work with, and remains performant at scale without too much fiddling. reply lelanthran 13 hours agorootparentprev> It really is, but I still favour \"unsexy\" manual poll&#x2F;select code with a lot of if&#x2F;elseing if it means not having to deal with async.> I fully acknowledge that I&#x27;m an \"old school\" system dev who&#x27;s coming from the C world and not the JS world, so I probably have a certain bias because of that, but I genuinely can&#x27;t understand how anybody could look at the mess that&#x27;s Rust&#x27;s async and think that it was a good design for a language that already had the reputation of being very complicated to write.I&#x27;m in the same \"old school\" system dev category as you, and I think that modern languages have gone off the deep end, and I complained about async specifically in a recent comment on HN: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37342711> At least my clunky select \"runtime\" code can be safely contained in a couple functions while the rest of the code remains blissfully unaware of the magic going on under the hood.And we could have had that for async as well, if languages were designed by the in-the-trenches industry",
    "originSummary": [
      "The author clarifies the purpose of Async Rust, a programming language focusing on modern concurrency, differentiating between parallelism and concurrency and outlining the limitations of code-splitting.",
      "Mutex-based concurrency is deemed detrimental due to risks of race conditions and deadlocks; thus, use of channels - or queues - for inter-thread communication is advised. However, for high-level concurrency problems, threads might not suffice, prompting Rust's \"async/await\" model.",
      "Despite these advantages, Async Rust presents challenges, such as ensuring compiler safety of objects and ubiquitous use of Arc (Atomic Reference Count). The suitability of Rust's massively concurrent userspace software application remains questionable."
    ],
    "commentSummary": [
      "The discourse covers diverse subjects around programming in Rust such as memory safety, concurrency, graphics development, productivity, and memory management.",
      "Participants' shared experiences shed light on the advantages and challenges of using Rust and its applicability for various use cases.",
      "The interaction also provides comparisons with other languages like Python and Go, and discusses multiple programming concepts like inheritance and abstraction, offering a view into Rust's strengths, weaknesses, and continuous efforts for enhancements."
    ],
    "points": 626,
    "commentCount": 522,
    "retryCount": 0,
    "time": 1694189455
  },
  {
    "id": 37433186,
    "title": "Aardvark'd: The Fog Creek documentary, 18 years later",
    "originLink": "https://mtlynch.io/aardvarkd/",
    "originBody": "Michael Lynch Blog Retrospectives Projects Book Reports About Aardvark'd: The Fog Creek Documentary, 18 Years Later September 8, 2023 12-minute read software development • entrepreneurship • mvp In 2005, Joel Spolsky’s software company, Fog Creek, filmed a documentary about their summer internship program. The film is called Aardvark’d: 12 Weeks with Geeks, and it follows four college interns as they design, implement, and launch a completely new software product. That’s not the interesting part. Looking back on this documentary 18 years later, it’s striking how many interviews it captured with people who would go on to greater fame and success: Paul Graham and Jessica Livingston, months after they co-founded Y Combinator Steve Huffman, and Alexis Ohanian, months after they launched reddit Aaron Swartz, months before he joined reddit and years before he founded Demand Progress Joel Spolsky and Michael Pryor before their mega-hits like StackOverflow and Trello Aardvark’d sold about 5,000 copies on DVD, mostly to fans of Joel’s blog, but it quickly faded from popular consciousness. As a longtime Joel Spolsky fanboy, I’ve always been curious to watch Aardvark’d. I was delighted that the film’s producer recently published it for free on YouTube at 1080p resolution. At the time of this writing, Aardvark’d has only 41 views on YouTube, which is surprisingly low given the rarity of its interviews. Aardvark’d currently has only 41 views on YouTube. What was going on in 2005? To understand what makes Aardvark’d a fun watch, you need to understand what was going on with indie software in 2005. Fog Creek Software At the time of filming, Joel Spolsky was 40 years old. He had co-founded Fog Creek in 2000 with Michael Pryor. Aside from the founders, Fog Creek had six employees. They sold two products: FogBugz, a bug-tracking application, and CityDesk, a web publishing tool. The company was profitable enough to get by without external investors, but they weren’t experiencing any kind of exponential hypergrowth. Joel Spolsky, Fog Creek co-founder, in 2005 Y Combinator Paul Graham and Jessica Livingston had just co-founded Y Combinator, which would become one of the most successful startup accelerators in the world, launching companies like Airbnb, Dropbox, and Stripe. Y Combinator co-cofounders Paul Graham and Jessica Livingston in 2005 Graham was 41 years old, and Livingston was 34. Seven years prior, Graham had sold his startup Viaweb to Yahoo for $50M. He then became popular online for his essays about startups and software. Livingston was not active in the startup community at the time, having come from a career in marketing. Graham and Livingston had been dating for two years but weren’t married yet. The documentary interviews them in the middle of Y Combinator’s first batch of startups, which included a then-unknown social media platform called reddit. reddit reddit had launched a few months before the documentary began filming, and it wasn’t yet on anyone’s radar. At the time, reddit only allowed users to post links — there was no commenting. Fark, digg, and slashdot were still the dominant platforms for social link sharing. The reddit homepage in 2005 Early in 2005, college roommates Steve Huffman and Alexis Ohanian drove to Boston to attend one of Paul Graham’s lectures about startups. After the talk, Graham had dinner with Huffman, Ohanian, and a few other attendees. The conversations inspired Graham to create Y Combinator, and reddit was in the first batch of investments. reddit co-founders (left to right) Alexis Ohanian, Aaron Swartz, and Steve Huffman in 2005 Aaron Swartz was 19 at the time of filming. He already impacted the early web as one of the authors of the RSS specification and a founding contributor to Creative Commons. An undergrad at Stanford in 2005, Swartz was also accepted into Y Combinator’s first batch. When his company stalled, Graham suggested he merge with reddit. “Back when they were getting started, they were terrified” As a documentary, Aardvark’d is not very good. The filmmaker didn’t have much experience, so the shots are always uncomfortably close to people’s faces, often with harsh lighting and mediocre sound quality. Joel Spolsky isn’t this luminescent in real life. The film flits from topic to topic without ever landing on a cohesive story. Is it about the interns’ project? Or is it about the interns themselves? Or is it a story about Fog Creek as a company? Still, I found it compelling. Towards the end of the movie, Jessica Livingston captures so crisply what makes the film engaging: A lot of these tech startup founders who are extremely successful, back when they were getting started, they were terrified. They were very unsure of what they were doing. They questioned things, and I’m sure doubted themselves… And so to see these people as vulnerable people at one point in time is interesting to me. This vulnerability is what makes the film’s interviews with Steve Huffman so fascinating. Huffman is currently the target of widespread ire for cutting third-party clients out of the platform they helped build. But in 2005, Huffman was just a lovably doofy kid. In his interview, he admits that he had such intense nightmares about reddit having an outage that he slept with his laptop in bed with him. Steve Huffman in 2005 (left) and in 2017 (right) (photo by Cody Glenn/Web Summit, used under CC-BY-2.0) The infuriating launch day scene There’s one Aardvark’d scene that drives me crazy. The main storyline of the documentary is the interns’ summer project. Originally codenamed Aardvark, the interns’ app would eventually take the name Copilot. No, not the AI coding assistant. Fog Creek Copilot was a tool that let people provide remote computer assistance to friends, family, and co-workers. Fog Creek Copilot let people provide remote computer assistance to friends, family, and co-workers. So, it’s the end of the internship, and Fog Creek is finally launching Copilot. This is the make-or-break moment for all the work we’ve watched the interns do throughout the movie. The interns and employees compete to predict when their first sale will come through. Some guessed it would happen within a minute of launch, while others thought it might take up to an hour. Fog Creek employees and interns make optimistic predictions about the first sale of Copilot But the sale doesn’t come. As each minute rolls by, the interns glumly cross out predictions that turned out to be too optimistic. You’re watching the team grow increasingly worried that their product might be a complete flop. Fog Creek interns anxiously awaiting their first customer As a founder, I found this moment extremely relatable. There have been so many times where I put weeks or months of work into something that I was sure people would love. Then, I launched it only to discover that I was completely wrong and nobody was interested. But the thing about failed software launches is that the failure isn’t a moment — it’s the minutes then hours after launch as hope drains away. Even if you don’t get the results you want immediately, there’s a desperate possibility that it could land on the front page of Hacker News or fall into the lap of someone with a huge audience. But every minute that ticks by, you know your chances of success are creeping ever closer to zero. The documentary does a great job of capturing that anxiously ambiguous time for the Fog Creek interns. And then it just… forgets what it was doing. There’s no resolution whatsoever! We cut to the next scene, and Joel is popping champagne. It’s not even clear if there’s been a sale or if they’re just celebrating the launch. You never see anyone sighing in relief or admitting defeat. What are we celebrating, exactly? It would be like if you ended the story of Little Red Riding Hood by saying, “And then Little Red Riding Hood realized her grandmother was a wolf! Suddenly, the wolf threw her to the floor and bared his razor-sharp teeth inches from her neck. Anyway, she ended up being fine. The End.” Quotable moments The documentary’s interviews are fun overall, but a couple of quotes delighted me. Paul Graham, on developers and businesspeople I think the relationship between hackers and business guys — at least in the beginning — is that you need hackers, and you don’t need business guys. -Paul Graham Aaron Swartz, on schoolwork vs. hobby projects You don’t have to be in this fake world of school doing some silly assignment that has no real purpose. You can build something that’s actually useful. You can go put it up on your website, and people can really use it. If you can build something real, why spend your life doing stuff that’s fake? -Aaron Swartz Fog Creek didn’t finance the documentary In researching the documentary, one of the big surprises was that Fog Creek didn’t finance it. I had remembered Aardvark’d as essentially a vanity project that Fog Creek funded as advertising. Re-reading the job posting, I realized it was more of an angel investor model: We’re looking for a filmmaker who will finance and make the film themselves and own the rights. We want someone who can promote the film to typical documentary outlets. Spolsky said in his blog that he paid the filmmaker a $5k stipend and $5k for expenses. In a later column he wrote for Inc. magazine, he says, “We ended up paying the filmmaker about $30,000.” Letting an external filmmaker assume ownership worked, apparently. Fog Creek no longer cares about Copilot or Aardvark’d. They’ve taken the interns’ development blog offline, and Joel has let many of the Copilot links on his blog die, but the filmmaker still cared enough about Aardvark’d to upload a high-def copy to YouTube 18 years later. The artifacts of Aardvark After Fog Creek released Copilot, Joel Spolsky published the original functional spec. The link to the actual PDF is now dead, but the Internet Archive has a copy. Joel Spolsky’s original functional spec for Fog Creek Copilot (codename Aardvark) Fog Creek adapted open-source VNC code for the Copilot client, so they were required under the GPL to publish their source code. I unfortunately couldn’t find the source code for the original version of Copilot that the interns wrote. The earliest version I could find was from 2011. By that point, they had rewritten the C# codebase in C++. What happened to the interns? Tyler Griffin Hicks-Wright accepted a full-time position at Fog Creek after his internship and worked there for several years. He left in 2012 to start a photo backup startup called Snaposit. He sought funding from his Aardvark’d co-star, Paul Graham, but Y Combinator rejected Tyler’s pitch. Tyler shuttered the business a year later. Tyler Griffin Hicks-Wright, software development intern on Aardvark In 2014, Fog Creek restructured to spin out Trello, its ultra-successful project management app. As part of the restructuring, Fog Creek sold the Copilot product to Tyler for an undisclosed sum. He ran Copilot on the side for eight years before shutting it down in April 2022. Michael Lehenbauer took a job at Microsoft after his Aardvark’d internship. He left in 2011 to join Firebase as employee #2, which I can only assume means he’s now relaxing on a superyacht somewhere. Michael Lehenbauer, software development intern on Aardvark Ben Pollack worked at Fog Creek for several years. He seems to have never caught the startup bug (Edit: Ben responded to say that he has worked mainly at startups, though not as early-stage as Fog Creek), mainly working at larger, more established companies. He has followed in Joel’s footsteps in blogging, as he writes regularly about software, technology, and his passion for functional programming, sometimes engaging in geeky online arguments with Tyler. Ben Pollack, software development intern on Aardvark Yaron Guez worked for several medtech and enterprise-y SaaS businesses. He’s the co-founder of a buzzwordy consulting firm and a dev manager at ServiceNow. Yaron Guez, project management intern on Aardvark Liz Gordon’s satisfying career trajectory One of the most affable characters in Aardvark’d is Liz Gordon, Fog Creek’s then recently-hired office manager. Liz is presented in the film as the non-nerd outsider at Fog Creek. She ends up having to coddle and indulge a bunch of college interns, most of whom have somewhat inflated egos as subjects of a documentary. “There’s always a better way to do something, and that’s what [the interns] are always trying to figure out… what star trooper is going to kick some other superhero’s butt, and how they’re going to do it. Or what’s the best way to use a lightsaber.” -Liz Gordon In one scene, she’s being interviewed on her birthday. Nobody remembered, so she had to buy herself a birthday hat. While she’s explaining this to the camera, one of her co-workers shushes her for making too much noise. On her birthday! Liz Gordon being shushed on her birthday at the Fog Creek office It turns out Liz stuck with Fog Creek and rose along with the company, eventually taking on the role of Head of People. When Fog Creek spun out Trello into its own company, Liz became Trello’s VP of People and retained the position when Atlassian acquired Trello. She’s now Liz Hall and is a C-suite executive at Splash, where I presume nobody tries to shush her on her birthday. Liz Hall is now Chief People Officer at Splash. Edit: According to a comment from Ben Pollack in response to this post, the sound was not actually a “shush”: this coworker right here was starting to say “shit fuck shit dammit” on camera as he discovered that a stale precompiled header was getting picked up on the build box and then realized Lerone was rolling, so you’re hearing me halt myself before saying a pile of profanity on camera. Make Better Software: The Training Series Five years later, Fog Creek collaborated once again with Aardvark’d producer, Boondoggle Media, on a video course called Make Better Software: The Training Series. Fog Creek used to sell this course for $2,000, but now Boondoggle Media has released it free on YouTube. I’m watching it, and it’s pretty good. It’s kind of like a video version of Joel Spolsky’s best blog posts. The series shows how Joel puts his many software philosophies into practice at Fog Creek. Most of the Fog Creek characters from Aardvark’d are still there. You get to see slightly more grown-up versions of Tyler and Ben, who had at that point had several years of real-world experience. Tyler (left) and Ben (right) appear as full-time Fog Creek employees in Make Better Software five years after the filming of Aardvark’d. Watch the films Both movies are available for free on YouTube. If you’re a fan of Joel Spolsky, Paul Graham, or Aaron Swartz, I think Aardvark’d is worth a watch. Aardvark’d: 12 Weeks with Geeks And if you’re a superfan of Joel Spolsky’s blog, Joel on Software, you’ll enjoy Make Better Software. Make Better Software: The Training Series Be the first to know when I post cool stuff Subscribe to get my latest posts by email. Only blog posts All posts (monthly retrospectives, book reports, etc.) Share on Twitter Facebook LinkedIn Discuss on Hacker News Reddit Crafted with ❤ in Western Massachusetts. · © 2023 This work is licensed under a Creative Commons Attribution 4.0 International License.",
    "commentLink": "https://news.ycombinator.com/item?id=37433186",
    "commentBody": "Aardvark&#x27;d: The Fog Creek documentary, 18 years laterHacker NewspastloginAardvark&#x27;d: The Fog Creek documentary, 18 years later (mtlynch.io) 437 points by mtlynch 20 hours ago| hidepastfavorite149 comments gecko 17 hours agoThis is honestly quite a trip to read (I&#x27;m the Benjamin Pollack in the movie). I did want to make two small corrections, though: In one scene, she’s being interviewed on her birthday. Nobody remembered, so she had to buy herself a birthday hat. While she’s explaining this to the camera, one of her co-workers shushes her for making too much noise. On her birthday!No, this coworker right here was starting to say \"shit fuck shit dammit\" on camera as he discovered that a stale precompiled header was getting picked up on the build box and then realized Lerone was rolling, so you&#x27;re hearing me halt myself before saying a pile of profanity on film. In retrospect, Liz talking about her birthday and me suddenly cussing like a drunk sailor would&#x27;ve been a much better take. I regret the error. [Benjamin Pollack] seems to have never caught the startup bug, mainly working at larger, more established companies.I worked at Fog Creek (max ~60 employees during my tenure, usually more like 40) from 2005 to 2014, Khan Academy (~120 if you count contractors) from 2015 to 2017, Spreedly (~40) from 2017 to 2018, and Bakpax (there were a dozen of us) from 2018 to 2021 (we got acquired, I wanted to stay at startups, so I didn&#x27;t stay once we were bought), and another small startup briefly after that before settling at The Knot Worldwide. Yes, I&#x27;m currently at a very large company (~6500), but I&#x27;m a bit confused at how you&#x27;d come up with that summary of my career.I honestly really enjoyed the article, though, and neither of these are exactly big errors; just some extra color I wanted to provide.[Edit: I&#x27;m also happy to answer any questions anyone has about the movie or about that time at Fog Creek.] reply mtlynch 17 hours agoparentAuthor here. Cool to see your response here!>I&#x27;m a bit confused at how you&#x27;d come up with that summary of my career.I worded that poorly, you&#x27;re right. I meant early-stage startups at the scale of Fog Creek when you started. I&#x27;ve updated the post.>No, this coworker right here was starting to say \"shit fuck shit dammit\" on camera as he discovered that a stale precompiled header was getting picked up on the build box and then realized Lerone was rolling, so you&#x27;re hearing me halt myself before saying a pile of profanity on camera.Ah, thanks for the context!I watched that scene over and over trying to figure out what happened. It sounds like a \"shush\" but it&#x27;s also weirdly stretched out. Liz seems to have heard it as a shush, as she shushes herself after. It shows Michael look over at you, but it&#x27;s not clear if he was reacting to the noise.There&#x27;s an imdb trivia item[0] about how you and Liz disagree about whether it was a shush, but it&#x27;s unsourced, so it was hard to put much stock in it. This is a much more satisfying answer.I&#x27;ve updated the post to link to your comment here.>I&#x27;m also happy to answer any questions anyone has about the movie or about that time at Fog Creek.How do you feel about the movie looking back? I notice on your website that you recommend people watch it \"if [they]’re feeling masochistic.\" Is it just the awkwardness of being the focus of a film at that age or were there things you disliked about how it came out?What did you like&#x2F;dislike about working at Fog Creek? How&#x27;d it change during your tenure?[0] https:&#x2F;&#x2F;www.imdb.com&#x2F;title&#x2F;tt0813987&#x2F;trivia&#x2F;?item=tr0602787&... reply anildash 10 hours agorootparentOne other bit of trivia, Alexis Ohanian drew one of the versions of Fog Creek’s kiwi mascot that was featured on some t-shirts and merch, though never in any of the products. reply mtlynch 10 hours agorootparentWow, I never expected to hear from so many Fog Creek folks!Thanks for sharing that bit of trivia, Anil. How&#x27;d that happen? reply anildash 9 hours agorootparentAt that time Alexis was drawing logos or art for products he advised or knew the founders of, including most notably Hipmunk. I’m not sure if Joel asked him to draw it, or he volunteered, but it happened and then early in my time at Fog Creek, Alexis and I were catching up about some other stuff and he told me that version of the kiwi was his. reply fsckboy 5 hours agorootparentlogos aren&#x27;t just trademarks, they are also themselves copyrighted, and if he never explicitly gave up the rights... reply borski 3 hours agorootparentHe&#x27;d have to care, which I can pretty much guarantee he doesn&#x27;t. reply mtlynch 9 hours agorootparentprevGreat bit of trivia. Thank you for sharing! reply gecko 16 hours agorootparentprevnext [–]There&#x27;s an imdb trivia item[0] about how you and Liz disagree about whether it was a shush, but it&#x27;s unsourced, so it was hard to put much stock in it. This is a much more satisfying answer.Liz thought I shushed her for a long time, but I didn&#x27;t even know that until years later, at which point I apologized and explained what actually happened. So I guess there was disagreement in the sense that I didn&#x27;t know she thought that, but we talked that through many years ago.I am aware of the IMDB factoid. Since they also had my bio wrong and gave me a Bacon number of two for years, I have generally just concluded IMDB doesn&#x27;t care about having accurate data, and never felt a need to correct it. How do you feel about the movie looking back? I notice on your website that you recommend people watch it \"if [they]’re feeling masochistic.\" Is it just the awkwardness of being the focus of a film at that age or were there things you disliked about how it came out?On a personal level, there&#x27;s a lot I dislike. There was a lot of pressure on us to have reality-TV-show-like conflicts, which we mostly just didn&#x27;t have. As a result, I end up being the antagonist in quite a few scenes (the building jump experiment is the main one), where it looks like I&#x27;m a bit of an asshole due to how things got edited together. So, normal reality TV show stuff.(Me being awkward and arrogant also does play into it, but, like everyone else, I&#x27;ve grown a lot since then. Seeing how far I&#x27;ve come is at worst a reminder not to let myself be like that again, but usually just ends up making me feel happy I&#x27;ve been able to learn from my mistakes and grow. I can&#x27;t say it bothers me.)I also just kind of feel like it&#x27;s a lousy movie. The soundtrack was literally written on the way to the recording studio, and you can tell. The interviews are usually not asking great questions, as much as rehashing Joel&#x27;s and Paul&#x27;s blogs via interviews. And there&#x27;s the fact the movie is so close to being about reddit and Y Combinator right at their inception, but somehow, just...misses it.I should tone down the \"masochistic\" comment so it doesn&#x27;t sound like I&#x27;m bitter or hate the film. I don&#x27;t. I just don&#x27;t really know it&#x27;s worth a watch in 2023. What did you like&#x2F;dislike about working at Fog Creek? How&#x27;d it change during your tenure?I learned a lot about tech, I got incredible freedom to work how I wanted on what I wanted, I had great coworkers, and I really believed in and used all of our products. They all brought me joy. That was all good. And it wasn&#x27;t a grindstone like some of my friends went through at thefacebook and Google, so I had time to genuinely enjoy my hobbies and be with friends.The dislikes are mostly just versions of me noting that working in an anarchistic environment is great only if you shout loudest and care more than the next person, but I will add that that company was so young in so many ways. We often were figuring out how to do things from base principles instead of hiring people who knew what they were doing, because we weren&#x27;t sure if we knew how to tell that someone knew what they were doing. And when we started to hire our way out, we made Some Mistakes. So, things that fell out of those bits. reply mtlynch 16 hours agorootparentThanks!>(Me being awkward and arrogant also does play into it, but, like everyone else, I&#x27;ve grown a lot since then. Seeing how far I&#x27;ve come is at worst a reminder not to let myself be like that again, but usually just ends up making me feel happy I&#x27;ve been able to learn from my mistakes and grow. I can&#x27;t say it bothers me.)Yeah, there were definitely lines where my first reaction was that the interns come across badly. But I was a year or two younger than you guys at the time, and I thought about how I&#x27;d probably sound if someone asked me to talk on camera about working on software. I&#x27;m thankful that nobody did.>The soundtrack was literally written on the way to the recording studio, and you can tell.Oh, yeah, that does explain the soundtrack.While I was listening to it, I felt like it was written by someone who didn&#x27;t know any programmers, but they were trying to write a song that would appeal to the geeky stereotype of a programmer. reply dylan604 15 hours agorootparentprev> I am aware of the IMDB factoid. Since they also had my bio wrong and gave me a Bacon number of two for years, I have generally just concluded IMDB doesn&#x27;t care about having accurate data, and never felt a need to correct it.I feel like Amazon treats IMDB user submitted data just like reviews on the retail site. They just don&#x27;t care. Anything goes. I&#x27;ve tried to get data corrected on multiple occasions for it to fall on deaf ears. Much like wikipedia where changes are reverted to previously incorrect data because of editor fiefdom turf wars. So you can&#x27;t win either way. reply alexgartrell 14 hours agorootparentprevI had an internship at Fog Creek and would add that it was probably the most friendly and harmonious place I worked, which made it very reality-show-incompatible (and very 21-year-old-me incompatible, I wasn&#x27;t asked back lol). Certainly the representation of you as an asshole was ridiculous IMO.(Since you&#x27;re answering arbitrary Fog Creek questions) In retrospect, do you think it was a mistake to make kiln hg-centric at first? reply gecko 14 hours agorootparentnext [–](Since you&#x27;re answering arbitrary Fog Creek questions) In retrospect, do you think it was a mistake to make kiln hg-centric at first?No; I think it was a mistake to not also support Subversion out-of-the-box.Our customers were overwhelmingly Windows shops, and Git on Windows in 2007 was just unusably bad. It really would not have been a viable option. (I did look at Bazaar and Fossil, which were good players on both Windows and Unix, but neither seemed like a good fit for other reasons.) But Kiln&#x27;s core value prop at the beginning was actually code review, and I think we could&#x27;ve found a cool way to bring in a Phabricator-like patch workflow that would&#x27;ve meshed just fine with Subversion and given our customers a much easier way to get access to Kiln&#x27;s goodness. In that world, Mercurial would be a kind of bonus feature you could use, not the only way into Kiln. The resulting product would&#x27;ve been very different, mind, but I think it would&#x27;ve gone way better.The other three technical mistakes we made, since you didn&#x27;t ask me, were having FogBugz target .NET instead of Java (given the immaturity of Mono at the time only; I love .NET); having Wasabi compile to C# instead of IL (especially given the previous note); and having Copilot directly modifying VNC and its protocol instead of just jacketing it with a small wrapper app. These three decisions collectively slowed the company down a ton at a time when we shouldn&#x27;t have let ourselves do that.I enjoyed working with you, Alex. Glad to see you doing well! reply alexgartrell 13 hours agorootparentIt was a joy to work with you as well :)It&#x27;s a bit harsh but I always feel like Fog Creek might be the cautionary tale in \"what happens if you over hire for capability vs. your requirements?\" I think that a less capable team would have never landed on the \"let&#x27;s maintain our own programming language\" approach w.r.t. Wasabi.As an aside, I do think that targeting Mono was the right thing to do for the universe, as it butterfly-effected tedu into writing weird and wonderful technical blog posts for the next ten years :p reply gecko 12 hours agorootparentnext [–]As an aside, I do think that targeting Mono was the right thing to do for the universe, as it butterfly-effected tedu into writing weird and wonderful technical blog posts for the next ten years :pI&#x27;ve never figured out whether that work broke him or was simply his muse, but I also do confess to liking the result. So not a complete loss. reply tedunangst 10 hours agorootparentI am always happy when I look back on the monobugz days. I think it was a formative experience in evaluating claims like well, of course it works, so many other people already use and depend on it. O RLY? reply kamens 13 hours agorootparentprevhi alex and ben! in before HN downvotes me reply alexgartrell 4 hours agorootparentI still remember when I came to you with my “attachments shouldn’t live in the mssql database” plan and you said “yeah, probably, but doing it any other way would be a million times harder to maintain.” You were 100% right and I think of it often when I encounter someone who is about to do a similar dumb thing for “the right reasons.” reply borski 2 hours agorootparentwait - context? why? i&#x27;m sure you&#x27;re right, as obviously I wasn&#x27;t there don&#x27;t have the clearly important context, but why was it 1000000x harder to maintain if attachments didn&#x27;t live in mssql? reply Throw10987 45 minutes agorootparentNot 100% sure of the rationale in this case. I imagine it might have to do with everyone who runs an instance needs to maintain an additional storage system along with all the associated costs, which is not just storage alone.Databases store stuff really well. If get to the level of needing to configure storage for different tiers of access they can do that, it just takes a bit of work. Of course if your blob data is stored in tables that have OLTP data in them, then you have a bit of work to do to separate it out.This is speaking from recent experience of having to manage random blobs of sensitive data in s3 buckets that engineers have created rather than bothering to put in the main application data store. reply anildash 10 hours agorootparentprevhere’s a well-deserved upvote reply jsight 13 hours agorootparentprevI never understood the disdain for Java that I&#x27;d hear from Spolsky. It wasn&#x27;t perfect, but it was certainly more cross platform than .net at the time. reply codinghorror 9 hours agorootparentI dunno, I&#x27;m with Joel on this one. Not a Java fan. reply krallja 8 hours agorootparentprevI was at the strategic offsite where we decided to go with .NET. Java wasn’t installed on Windows by default.The original version of Wasabi, known as Thistle, was written in Java, by the intern in the class before Aardvark’d. It transpiled ASP to PHP.Every intern class was named after an animal with the next consecutive letter. I don’t remember any of them except Aardvark, and I was a “B????” intern! reply c17r 13 hours agorootparentprev> The soundtrack was literally written on the way to the recording studio, and you can tellYou can still listen to the soundtrack on Amazon Music :-)I bought both the DVD and the soundtrack back in the day. While it&#x27;s no Grammy winner, there are a couple of good ones in there reply atesti 16 hours agoparentprev>I&#x27;m also happy to answer any questions anyone has about the movie or about that time at Fog CreekWhy was FogBugz for your server discontinued silently? I think you had build something really great at the end with the change to .net and the plugin architecture (which would have made it possible to do customizations even in the cloud). Also how kiln integrated was great.Did key people leave so that FogBugz basically stopped to be maintained anymore? Where you still around when they removed the plugins and tried to put it back and maybe switched to elastic search etc.? reply gecko 15 hours agorootparentEverything you&#x27;re asking about happened after I left, so I have no idea. I didn&#x27;t even know they&#x27;d discontinued FogBugz for Your Server.[Edit: We did discontinue Kiln for Your Server while I was there. We nuked that because the support burden was monstrous, to the point we needed three extra SDETs&#x2F;sales engineers purely to handle testing and on-prem bug fixes. It threatened Kiln&#x27;s ability to be profitable. The FogBugz team may&#x27;ve made the same calculus a few years later.] reply mwcampbell 12 hours agorootparentDo you think there&#x27;s anything the development team could have done to reduce the support burden, or that a team developing what we now call an on-prem product should do to minimize the support burden today? I know we have tools now that weren&#x27;t available back then, e.g. containers. And .NET is open source and runs on Linux now, so that might have also helped. reply tedunangst 10 hours agorootparentShipping a VM would have simplified things, but nobody did that, and nobody was going to download that. For Linux, we packaged everything we could, but it was still bring your own MySQL, and people had all sorts of terrible configs.And it was kinda pre-cloud, so usually we got provisioned on some pentium ii forgotten in a closet. reply borski 2 hours agorootparentGod, every time I think it&#x27;s gotten better to ship appliances, it really... hasn&#x27;t.We had an on-prem solution at Tinfoil, because some of our customers needed it (gov, finance, healthcare, random big enterprise co, etc.)We were lucky, in that we at least had Docker; or so we thought. Right up until top 5 investment bank decides to write their own orchestrator and use an internal container repository. Ugh, fine.Oh, and also wants to use their own MySQL db? But, uh, we use Postgres... and Mongo (tech debt)... and... no?So what did we do? We shipped a VM. You told us your VM solution of choice, we handed you a file, you set up our .ovf or .ova or whatever, it phoned home (only while setting up), got licensed, and off you went.Debugging was miserable. We later started adding remote debugging capabilities into our contracts because the support burden was ridiculous.Thing is, we were at least a little smart about it; single codebase, lots of feature flags, lots of internal testing (and our saas customers bled first, before VM customers), etc. I honestly might even do it again, but now there are much better solutions.But all of this is to say: people did install VMs, and people did download them. I don&#x27;t have the numbers in front of me, but I&#x27;d be mightily surprised if less than nearly 70% of our revenue (but not our customer base!) came from on-prem appliances. We sold them at a very significant premium, for obvious reasons. reply justinjlynn 4 hours agorootparentprevHuge respect for making that work in the first place! Would love to hear some kind of retrospective about what wa involved in that - I&#x27;m super curious. reply krallja 8 hours agorootparentprevWe still had about a dozen developers combined on FogBugz+Kiln at the very end.The plug-in API was very bad for performance and security, especially in a multitenant cloud application. That led a team to experimentally reimplement the entire frontend as a single-page app (code named Project Ocelot, whose shirt I am wearing today). Webhooks and a well-designed web API would have been a much tidier solution than the plug-in API.FogBugz For Your Server had constant support costs, like Ben said, but also the application started growing all sorts of supporting services (a QueueService, an ElasticSearch cluster, Redis…) that made the existing InstallerShieid installer a huge cost to maintain.Later, I wrote an “autosetup” script in PowerShell to help developers and support engineers onboard faster, which later became the new installer for FogBugz On-Site &#x2F; Manuscript On Premises. It was designed for a single edition of Windows (Server 2012 iirc?) and SQL Server. We sold a million bucks worth of licenses for that. reply toyg 14 hours agorootparentprevI just assumed they followed the usual commercial trajectory: build server software, realize it&#x27;s much more profitable to sell as service, discontinue on-prem sales. reply codinghorror 9 hours agoparentprevHi Ben! We&#x27;ll always have London.. reply gecko 8 hours agorootparentI&#x27;m happy to always have London, but I could do with forgetting most of Cambridge. reply sfjailbird 17 hours agoprevI am fascinated with the trajectory of Joel and his company. Maybe because I followed it so closely from Joel&#x27;s earliest essays (which are classics and have become commonly accepted wisdom, the source mostly forgotten) and the Fog Creek forums (the Business of software) which had a great cast of characters and drama (tail of the g!) for a couple of years.One of the interesting things is it seems to me like Joel, for all his wisdom, always made weird (I would say wrong but the man is a legend after all) decisions. Like his whole premise was to hire great programmers, give them an office with a door that closes, and watch great software appear. Which would take at least ten years. It was clear that this software was originally CityDesk (a content management system, say no more), then FogBugz (the issue tracker doomed from the start by its name alone), and even Copilot, to circle back to the documentary.The magic never happened, but lo and behold, out of nowhere comes Stack Overflow and makes all of those other ventures an only slightly relevant footnote. And not from any clever Strategy, but completely serendipitously! Turns out Joel was more right than even he probably thought - just press on being great, something great will come out of it. Though not necessarily what you had planned. There is something beautiful about this, to me.I am sure people will tell me how ridiculously mistaken and misunderstood my take is, but it&#x27;s how I read the story. reply chubot 17 hours agoparentI see where you’re coming from, but fog creek was private the whole timeI bet they made a killing from both citydesk and fogbugzThere’s no way to know, but if they had nice offices in Manhattan and were self funded in those days, that’s a clueFogbugz was a solid #2 in the market from what I rememberThere are lots of people making tons of money in areas like CMS and bug trackingThe ones you hear bragging about money are usually trying to attract employees to a marginal businessThe ones who are making money don’t want to attract competitors by talking too much reply veidr 14 hours agoparentprevI forget even who the competitors were, but FAUGUEBOGGEZ (as we called it then) was wildly popular for being less shitty than the #1 at that time. (Maybe it was JIRA, or maybe my memories of having to use JIRA have overwritten every other shitty bug tracking system I hated...?)Anyway, it didn&#x27;t remain so, but IIIRC FogBugz was on top (in terms of being the consensus-better-than-the-actual-market-leader) for at least a few years.Which, if you didn&#x27;t take 50 or 100 million in VC money, is probably a massive success for 99.99% of people.But yeah, nothing compared to the most-used website in the history of programming. reply ayewo 13 hours agorootparentIIRC, there were several competitors with no clear leader [1] but Bugzilla was pretty popular. Then Trac [2] showed up with a clean UI which allowed it to gain mindshare among OSS projects.JIRA ultimately became the market leader due to having a product that sucked less than what was out there and being infinitely customizable. One of the things Atlassian did to gain mindshare was to gift large OSS projects, often under the ASF (Apache Software Foundation) banner, free licenses to JIRA and Confluence.FogBugz was popular if you were a regular reader of Joel’s blog or if you had heard of the Business of Software community. Outside of that bubble, it wasn’t that well known.1: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Comparison_of_issue-tracking_s...2: https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Trac reply emmelaich 12 hours agorootparentprevDefinitely JIRA&#x2F;Atlassian. I remember Joel cursing \"those Australians\" in one blog post.Not literally cursing but you get the idea. reply eichin 13 hours agorootparentprevWe looked at FogBugz as a replacement for RT, but it had some severely opinionated limitation on release flow&#x2F;version numbers that meant it didn&#x27;t fit our existing product releases, let alone our future plans. (I think we were pretty interested in it for the UI and the dynamic velocity modelling? But the presentation&#x2F;demo pretty much ended with the \"so don&#x27;t do that\" discussion :-) reply JoyfulTurkey 13 hours agoparentprevThe office with a door thing was how Microsoft was back in the day, if I remember correct. From the stories I heard, some of the offices were ridiculously small&#x2F;narrow but they still had a door.Joel was a Program Manager for Excel at MS so my guess is he brought that mindset over.Really, I wish more places would go back to that. Being able to work with minimal interruptions is great. reply Calamitous 11 hours agorootparentIronically, after working in cubicles and hurk open floor plans for most of my career, now I have an office with a door. Ten feet from my bedroom. ;) reply borski 2 hours agorootparentprevAlso how Apple was. reply ozim 1 hour agoparentprevIs it really that fascinating?I also followed Joel&#x27;s essays and was more into it back then. But as I look at it now it is generic startup setup. They pivoted enough times to land gold mine. With getting developers do what they like they were able to pivot quite easily and they were onto hiring smart people.In the end that is what sane business person should do, pivot, pivot, pivot until you land great idea. Only thing you cannot pivot are great people because there is limited amount of those and there is unlimited amount of ideas.What bad companies do is sticking to some bad idea that maybe earns money but then they burn through legions of junior devs to keep train going. reply wvenable 15 hours agoparentprev> Fog Creek forums (the Business of software) which had a great cast of characters and drama (tail of the g!) for a couple of years.If you know where to look, some of that cast of characters is still going strong on a forum of a similar design to this day. It&#x27;s a bit crazy.Stack Overflow came right out of Joel&#x27;s complaints about Experts Exchange and is probably the best example of being with the right people at the right time with the right idea. reply toyg 14 hours agorootparent> If you know where to look, some of that cast of characters is still going strong on a forum of a similar design to this day.Uh, where...? reply marktangotango 13 hours agorootparentI would guess this one, but I don&#x27;t think any usernames carried over. Except maybe the one I can&#x27;t recall right now (startup related to streaming video over .gif back in late 90s iirc). reply sfjailbird 13 hours agorootparentI actually know which one he is talking about, but since he didn&#x27;t call it out, I won&#x27;t either (maybe they like it quiet).But what happened was that Joel freaked a bit out over some of the drama on the Business of Software forums and shuttered them, in spite of them being very popular and having a huge community - another one of those weird decisions. In an alternate timeline, they would have been HN. reply thom 10 hours agorootparentNot to drag up dirt, but the drama was someone’s quite public suicide and I suspect Joel concluded the bad PR wasn’t worth the good will generated otherwise. reply hermitcrab 12 hours agorootparentprevI was one of the moderators on Business Of Software. IIRC (its a long time ago) it was finally shuttered because:-it was getting less and less popular-the software that ran it was getting creakyAlso I suppose it was marketing for FogBugz. When Trello and StackOverflow took off, it wasn&#x27;t really needed anymore.Joel was a brilliant writer. I miss his insight. reply wvenable 12 hours agorootparentWhen Joel stopped publishing articles there wasn&#x27;t any content to drive the conversation. However, it was still a pretty popular forum when it was closed by Joel.I think it&#x27;s successor peaked in popularity way after that but started to drop off as there was no obvious way to get new users. The old method of people checking their HTTP logs for referrers to see who was linking to their content and then joining the conversation stopped being a thing. reply mdemare 13 hours agorootparentprevYou’re on it now. reply hermitcrab 12 hours agorootparentI think they are referring to another forum, but I guess they have their reasons for not naming it. reply hermitcrab 12 hours agorootparentAnd it doesn&#x27;t look like forum exists anymore. I guess it also tapped out. reply wvenable 12 hours agorootparentIt did have a redirect but at some point the domain name expired. It was kind of a fun domain to own though. replythefourthchime 12 hours agoparentprevThere was a podcast with Joel and Jeff as they talked through the development of Stackoverflow. It seemed that Joel had hired Jeff to code it, and then discussed what it should be like, and then as Jeff had something to show they talked about where it would go.Meanwhile, there is plenty of software physiology sprinkled all throughout. It was a fascinating podcast.At least that&#x27;s what I remember from it, I haven&#x27;t listened to it since it came out, what... 15 years ago??https:&#x2F;&#x2F;soundcloud.com&#x2F;stack-exchange reply codinghorror 8 hours agorootparent\"hired\" is a bit of a stretch! Joel had some design input, and the original \"let&#x27;s replace this terrible thing with something better\" idea for sure, and Expert-sex-change was the mimeograph, but it was me, Jarrod Dixon and Geoff Dalgas and then Kevin Dente in the earliest days. reply thefourthchime 6 hours agorootparentHoly shit! Thanks for the correction Jeff! reply tom_ 17 hours agoparentprevEverybody I know that used FogBugz seemed to really like it!They also did Trello. reply nicolas_t 14 hours agorootparentI actually liked Fogbugz a hell of a lot more than Jira... Sadly it&#x27;s been sold and is barely a shell of what it was but it had a lot of a premise and was a lot more developer friendly. reply kilroy123 13 hours agorootparentprevI definitely liked it a lot more than Jira back in the day. reply raincole 2 hours agoparentprevYou said it like CityDesk and FogBuz were some miserable failures.Were they? Or they were actually profitable for years?To be honest the whole comment reads very SV vibe. Go big (as big as StackOverflow) or go home. reply ekanes 17 hours agoparentprevI think that&#x27;s the right take. If you&#x27;re are legitimately good, and you press on long enough, (and admittedly you have some luck), you&#x27;ll often win eventually. reply RetroTechie 9 hours agorootparentPersistence. Sometimes being good isn&#x27;t even required, as long as you keep at it. reply fleaflicker 14 hours agoparentprevDon’t forget trello reply hermitcrab 12 hours agoparentprev>(tail of the g!)I was very active on the BOS forums. But that isn&#x27;t jogging any memories. Perhaps it was before my time? reply sfjailbird 11 hours agorootparentA forum member started a topic to point out an issue with the Fog Creek website: On the top-left Fog Creek logo (which could be clicked to go to the main page), the tail of the letter &#x27;g&#x27; was non-clickable. The poster pointed out that this should be fixed. Joel himself (who rarely participated on the forums) commented along the lines that the guy should immediately check himself into a mental hospital.It was pretty hilarious, a lot of people took issue with Joel&#x27;s comment and it was the drama for a few days. Standard web forum stuff :) Hmm, now I wonder if that kind of comment would be judged harder in today&#x27;s climate! reply mixmastamyk 15 hours agoparentprevHome runs are a lot fewer in number than fouls or even base hits. Not entirely surprising. reply iamwil 18 hours agoprevMaybe this is lost to time now, but YC started in Boston. They used to do the summers in Boston, and winter batches in SF. But then PG didn&#x27;t want some other copycat accelerator to call themselves \"the YC of SF\", so they just moved to SF. Perhaps around 2009&#x2F;2010 or so.Anyway, if you want to know what the Boston YC looked like, that&#x27;s where PG is being interviewed. Since Reddit is there, it&#x27;s the first batch, which should be 2005.PG is making chili because it&#x27;s the way he feeds a whole bunch of people at once. YC kept it up throughout the years, and chili is one of the things to remain from the early days, last I heard. Dunno if they&#x27;re still doing that. reply ryanSrich 17 hours agoparentI can&#x27;t recall where I read it, but I thought they moved because they didn&#x27;t see a future in Boston. They thought the VC community just wasn&#x27;t viable there (which seems like a bet that panned out - not many prominent VCs in Boston compared to their peers). reply borski 2 hours agorootparent> We funded the second batch in Silicon Valley. That was a last minute decision. In retrospect I think what pushed me over the edge was going to Foo Camp that fall. The density of startup people in the Bay Area was so much greater than in Boston, and the weather was so nice. I remembered that from living there in the 90s. Plus I didn&#x27;t want someone else to copy us and describe it as the Y Combinator of Silicon Valley. I wanted YC to be the Y Combinator of Silicon Valley. So doing the winter batch in California seemed like one of those rare cases where the self-indulgent choice and the ambitious one were the same.> If we&#x27;d had enough time to do what we wanted, Y Combinator would have been in Berkeley. That was our favorite part of the Bay Area. But we didn&#x27;t have time to get a building in Berkeley. We didn&#x27;t have time to get our own building anywhere. The only way to get enough space in time was to convince Trevor to let us take over part of his (as it then seemed) giant building in Mountain View. Yet again we lucked out, because Mountain View turned out to be the ideal place to put something like YC. But even then we barely made it. The first dinner in California, we had to warn all the founders not to touch the walls, because the paint was still wet. [0]and, from 2007:> The idea that startups would do better to move to Silicon Valley is not even a nationalistic one. It&#x27;s the same thing I say to startups in the US. Y Combinator alternates between coasts every 6 months. Every other funding cycle is in Boston. And even though Boston is the second biggest startup hub in the US (and the world), we tell the startups from those cycles that their best bet is to move to Silicon Valley. If that&#x27;s true of Boston, it&#x27;s even more true of every other city. [1]He goes on in the second essay about why VCs in the valley are more aggressive and more deals get done than in Boston or anywhere else, but I suspect that was a huge part of the reason for the move from Boston[0] http:&#x2F;&#x2F;www.paulgraham.com&#x2F;ycstart.html [1] http:&#x2F;&#x2F;www.paulgraham.com&#x2F;startuphubs.html reply bewuethr 17 hours agorootparentprevThe Social Radars has an episode where they interview PG, covering much of the history of YC: https:&#x2F;&#x2F;www.thesocialradars.com&#x2F;episodes (second from the bottom). reply 2arrs2ells 13 hours agoparentprevThe chili & other crockpot recipes were still going strong in S12 (\"crockpots scale linearly with number of startups\") - but pg was no longer cooking.Batch dinners are catered these days and have been for a while. reply The_Colonel 18 hours agoparentprevThat&#x27;s a rather unbelievable reason to relocate a company. reply lowkey_ 17 hours agorootparentIt&#x27;s more of a loaded term than meant literally.\"The YC of Pittsburgh\" for instance wouldn&#x27;t attract the best talent worldwide, but SF and SV is known globally as the center of tech. If someone replicated YC in the global center of tech, they&#x27;d have a big advantage over YC. reply raverbashing 17 hours agoparentprev> summers in Boston, and winter batches in SFWise idea ;)> copycat accelerator to call themselves \"the YC of SF\", so they just moved to SFYeah I think that if you believe in your idea but runs the risk of this it makes sense. Because SF was the bigger fish, even at the time reply Alex3917 15 hours agoprevTo be fair, the reason this has so few views is because the original was deleted. There are earlier HN threads on this, e.g. here:https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=14236711Regardless, still a great post and highly worth watching. reply dang 14 hours agoparentThanks! Also:Aardvark&#x27;d: 12 Weeks with Geeks - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=13794989 - March 2017 (1 comment)Aardvark&#x27;d (Fog Creek documentary) is now up on YouTube for free - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=2539337 - May 2011 (4 comments)Ask YC: Anyone seen the Aardvark&#x27;d movie with Paul Graham? - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=518580 - March 2009 (1 comment) reply mtlynch 14 hours agoparentprevOh, interesting. I&#x27;d seen it pop up on YouTube before, but the versions I saw were all pretty bad DVD rips. Some of the old threads mention that the versions were uploaded by Boondoggle Media, the film&#x27;s producer and the same uploader here. So maybe the producer took down the old versions and replaced them with a high-quality version, or maybe the official high-quality version was available before and I just never discovered it. reply manicennui 18 hours agoprevI actually bought this on DVD. I miss Joel on Software and hearing about Fog Creek. reply toyg 17 hours agoparentI remember when he made a splash by designing the office so that every developer had a window and a door. I think they later abandoned the idea, but it felt like the first time someone had actually put real thought into developer&#x27;s ergonomics when building an office.Other classics from his blog: why you should never do a Big Rewrite (he was scathing of Mozilla), \"Fire and motion\", relentless advocacy for \"boring\" tech, the historical bits about Excel and Lotus... I&#x27;m sure I&#x27;m forgetting a lot more. It really was a blog worth reading, when most of them were already turning into the \"microblogging\" spam that eventually begat Twitter. reply jodrellblank 13 hours agorootparentOff the back of Joel&#x27;s blog posts I convinced my employer to go with FogCreek CoPilot (remote control &#x2F; remote assist software), and it was such a disappointment; after all the blog posts about how to Do Software Right(tm) I has raised my expectations that the result of all this process and care would surely be as good as anything could reasonably be. It had few features, was unreliable and slow from the UK, and comparatively expensive.It&#x27;s a long time ago so I can&#x27;t remember the details, but it&#x27;s stuck with me for ~15 years as a lesson in not believing the hype, and ... I dunno, you can&#x27;t procedure your way into building amazing things, maybe? Post-hoc looking back from the outside, FogCreek building somewhat generic tools for developers seems very navel-gazing like they didn&#x27;t have a burningly compelling idea (such as StackOverflow was) and you can&#x27;t add more private offices unto business&#x2F;market success. reply toyg 2 hours agorootparentThe compelling idea was supposed to be CityDesk. This was pre-Wordpress, when everyone was building a CMS because normies were paying top dollar to be able to write on the web. Joel described it in a post as \"the future belongs to people who can make JavaScript sing\", which was slightly ahead of time.As many developers did at the time (and still do), they built their own tools, and eventually realized their bugtracker was decent enough to sell to Joel&#x27;s blog readers. FogBugz sales quickly outstripped CityDesk, so they pivoted to selling Dev tools. From there onwards, they were a bit all over the place. They still managed to score StackOverflow and Trello, though... reply hermitcrab 12 hours agorootparentprevI guess it was (at least initially) built by interns. reply mtlynch 17 hours agorootparentprevJoel started his career at Microsoft in Redmond, WA, where it was common for developers to have their own private offices.I was there from 2007-2010, long after Joel had left, but I mostly had a private office the whole time. I had to share an office for the first six months, but then after that, I had my own private office for the rest of my time there. My last year, I got a window office. Most of my co-workers had private offices, too.I got spoiled because that was my first job out of college, and I&#x27;ve never had such a good office setup as I did there. reply allenu 16 hours agorootparentI worked at Microsoft from 2005-2017 and mostly had a private office during that entire period. There were some teams that I joined in the later years that were more \"startupish\" that worked in open spaces, which I really didn&#x27;t like, and you could see the company moving to that model in the mid-2010s.Having a private office spoiled me as well, although I had come from companies that had cubicles. There was nothing like being able to close the door and turn up your music while you were coding. Nowadays, everyone is out in the open with headphones on, of course. reply sgerenser 16 hours agorootparentI worked for Microsoft (not in Redmond) in 2020-2022, and remember seeing on Yammer posts about “Hey look, we’re turning these old abandoned offices (nobody wants to work in a private office anymore, amirite?) into [touchdown spaces&#x2F;mini conference rooms&#x2F;storage areas]!”I don’t know if it was all private offices, but the general feeling was that private offices were going away. Moot point for us as we were a satellite office that never had private offices to begin with. reply vxNsr 12 hours agorootparentwait, you guys actually used yammer???? reply function_seven 17 hours agorootparentprev> I remember when he made a splash by designing the office so that every developer had a window and a door.I can&#x27;t believe it&#x27;s been 20 years since I read this post[0], but I remember how clever it was that each office had a only a single window, but had sight lines to other windows also, making it look like each one was a corner office.[0] https:&#x2F;&#x2F;www.joelonsoftware.com&#x2F;2003&#x2F;09&#x2F;24&#x2F;bionic-office&#x2F; reply carb 1 hour agorootparentprevI thought the Never Rewrite article was about Netscape, not Mozilla or Firefox?Agreed, these are great posts. reply ajmurmann 17 hours agorootparentprev> I remember when he made a splash by designing the office so that every developer had a window and a door. I think they later abandoned the idea, but it felt like the first time someone had actually put real thought into developer&#x27;s ergonomics when building an office.I think Tom DeMarco wrote about this in the 80s. Interesting how we&#x27;ve now even managed to make the computer system itself a high-interrupt environment for developers. OTOH, the trade-off between collaboration and focus is a touch one. reply drjasonharrison 18 hours agoparentprevThe follow-up blog post about automating &#x2F; streamlining the postal form printing just to ship out the ordered DVDs was another great article. reply amerine 17 hours agoparentprevSame!!!! I still have it knocking around somewhere in the basement. Wild to think about where we’ve all gone since that era. Amazing ride. reply tailspin2019 18 hours agoparentprev> I actually bought this on DVDI did too. It was quite motivating to watch at the time! reply mattl 18 hours agoparentprevI was given a copy on DVD when visiting Fog Creek around this time. I vaguely recall it was for sale on Google Video when that was a thing. reply manicennui 18 hours agoprevRIP Aaron Swartz. His being mentioned still makes me feel a bit emotional. reply johnny99k 3 hours agoparentI&#x27;ve never understood the obsession with Aaron Swartz. He clearly violated the IP of many hundreds of people (could be thousands) by releasing content he didn&#x27;t own. He also trespassed on university property to do it.From the stories I heard, he was a complete asshole to people that didn&#x27;t agree with him and was even fired from Reddit at one point.This is authoritarian behavior: I&#x27;m going to do what I want regardless of the law and what you believe because it&#x27;s what I want. I have found that many of the hackers from the 90s and early 2000s that I read about in 2600 were like this. They masqueraded as freedom fighters, but in reality were just authoritarians without power. When their side is in power, they have no problem trampling on the freedoms and rights of the people they dislike.It kind of makes sense to me as an adult. Hackers are authoritarians without power. You don&#x27;t do what they want, so they are going to destroy your website&#x2F;livelihood&#x2F;life. Petty kings without a kingdom. This morphed into the cancel culture we see today and groups like Antifa.His suicide was tragic, but we don&#x27;t need more people with this attitude running a lemonade stand, let alone a tech company or anything important. reply sillysaurusx 1 hour agorootparentYou have no idea what you’re talking about. Aaron was the furthest thing from an authoritarian. Just because freedom fighters break the law does not equate them to authoritarians, and the rest of this is similarly mistaken.That you have no compassion for someone who committed suicide due to copying bits shows a lack of humanity that I hope no one emulates. reply raincole 2 hours agorootparentprev> It kind of makes sense to me as an adult. Hackers are authoritarians without power. You don&#x27;t do what they want, so they are going to destroy your website&#x2F;livelihood&#x2F;life. Petty kings without a kingdom. This morphed into the cancel culture we see today and groups like Antifa.Yeah of course hackers from 90s and cancel culture people on Twitter are the same kind of people.LMAO. reply endgame 11 hours agoparentprevI can&#x27;t believe that all happened over ten years ago. MIT hung him out to dry, and who knows what he could&#x27;ve achieved if that hadn&#x27;t happened? reply manicennui 8 hours agorootparentEven if he never achieved anything, I rather that he be alive. reply ilrwbwrkhv 18 hours agoprevThanks for this write-up. This is absolute gold. It&#x27;s crazy looking back and seeing how different everything was. reply mtlynch 18 hours agoparent>It&#x27;s crazy looking back and seeing how different everything was.Yeah, that struck me as well. For some reason, I expected their tooling to be much more modern, but then you see them running Windows XP, and I have this visceral reaction like, \"Oh no! You can&#x27;t be running that!\"They also go to a \"trade show\" which you find out is actually a ColdFusion conference. But even at the time, that was pretty dated, and the interns admit they&#x27;re not sure what ColdFusion is.I was impressed reading Joel&#x27;s functional spec at how well it holds up. I don&#x27;t think it&#x27;s a very popular way of designing software anymore, but I still prefer big design up front (BDUF), and I suspect Joel probably still works that way. The only thing that felt dated to me about the functional spec was 1) the emphasis on code conventions, which he admitted at the time didn&#x27;t belong in the spec, and 2) how it focused a lot on what would happen in v2 rather than aggressively keeping scope to the MVP. reply mickeyp 18 hours agorootparentYou can&#x27;t corral a bunch of interns -- of potentially unknown skills levels, even with our hindsight of where they wound up -- and expect them to wing their way through a \"greenfield\" project to launch in 10-or-so weeks. Especially not when you&#x27;re filming them also.Imagine them arguing endlessly about how many points to give to the VNC extensions they needed? And at a time when most businesses had maybe heard of agile, but never used it.Functional specs are super-duper common still. I do (often fixed-cost) bespoke software for clients: can you imagine a non-tech client and me handwaving our way through a complex project one sprint at a time? No, thank you.Having said all that, Joel&#x27;s a talented guy, and he probably had a really good idea of what he&#x27;d have to do to build the whole thing. When people like that write the functional spec, you&#x27;re going to wind up with a high-quality document. reply ozim 1 hour agorootparentI think that is my main issue with \"Business Analysts\" I have to work with. Most of the time they have no clue at all about the system and no writing ability.They just throw ideas in Jira tickets and if you start asking questions or clarifications to put ticket back for rewrite they nag you are not agile enough and dragging whole company back to waterfall. reply mojomark 18 hours agorootparentprevThank you for this comment - I&#x27;m a physical systems engineer working with software engineers and trying to bridge the gap from a \"Systems Engineering\" perspective - where on the HW side we use Functional (what the system should do) and Allocated specifications (how the system is physically architected). I struggle with that bridge - it&#x27;s largely a terminology mismatch, which is oddly much more difficult than I expected to overcome. Sometimes finding the right words makes all the difference. I&#x27;d never heard the term BDUF before.I can see that there&#x27;s a belief that the BDUF approach implies the design must be perfected before starting to code. I like a healthy concept sketch to use as a roadmap, and evolving accompanying documentation along the way. I use MBSE tools. I certainly would never say a system design is perfected nor are all requirements ever set in stone (under config control - yes, immutable - no). This helps me see where push back is coming from of the SW Dev side. reply canucker2016 15 hours agorootparentprevHaving read most of Spolsky&#x27;s blog posts, I&#x27;ll make the inference that the spec being functional and having reference to code conventions isn&#x27;t a far stretch for him.He worked at Microsoft in the Excel group, specifically, he was a Program Manager (PM) on Visual Basic for Applications (VBA). see bottom of https:&#x2F;&#x2F;www.joelonsoftware.com&#x2F;2007&#x2F;04&#x2F;25&#x2F;vba-for-macintosh-... and https:&#x2F;&#x2F;www.joelonsoftware.com&#x2F;2006&#x2F;06&#x2F;16&#x2F;my-first-billg-rev...Functional specs and PMs go hand in hand at MS.Microsoft devs, at least in certain groups, used the Hungarian coding convention (Systems aka DOS&#x2F;Windows group had one dialect, Apps aka Office had another dialect) see https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Hungarian_notationThis seeped into VB&#x2F;VBA as well. reply mixmastamyk 15 hours agorootparentprevWindows XP has a lot less bullshit than the recent versions. I&#x27;d definitely take it now over 10 or 11, behind a firewall&#x2F;NAT of course. ;-)Just needs a modernish browser and third-party terminal. cygwin tools or equivalent. reply The_Colonel 11 hours agorootparentQuite possibly the peak Windows version (with service packs). The default UI was certainly tacky, but you could switch to Classic.Windows 7 is a close second. reply hermitcrab 12 hours agorootparentprevWindows XP was so much less intrusive than the more recent versions of Windows. You actually felt like you were in charge, most of the time anyway. reply paulryanrogers 11 hours agorootparentprevIt also lacked a firewall at launch, despite claims to its great security. reply itronitron 16 hours agoprevI watched Startup.com many years ago and haven&#x27;t seen another movie about startups since. I highly recommend it for anyone that wants to be inoculated.https:&#x2F;&#x2F;www.imdb.com&#x2F;title&#x2F;tt0256408&#x2F;?ref_=ttls_li_tt reply c17r 13 hours agoparentThere&#x27;s also \"E-Dreams\" https:&#x2F;&#x2F;www.imdb.com&#x2F;title&#x2F;tt0262021&#x2F; reply sagarkamat 17 hours agoprevI remember watching this documentary a few years ago and thinking1) this concept had so much promise but man they could have made this docu better2) those are some famous names before they became famous3) we need more such docus that capture forever the daily office life at a particular point in time reply nikhilgk 17 hours agoprevThat&#x27;s a good bout of nostalgia - almost felt like watching an episode of Halt and Catch Fire. Joel, PG and Steve Yegge where some of the influential writers of that time who seemed to have a big impact on how people thought about careers, startups and corporate life. reply LizGH 12 hours agoprevHi!Liz (Gordon) Hall over here. Your blog post made my day. I couldn&#x27;t stop laughing and smiling. Seriously, best thing in a while so thank you!Ok, some things:- Considering Ben P. was the one who sent me the article I&#x27;m contractually obliged to agree with the updated \"shh\" being a cut-off \"sh*t\". But, please don&#x27;t edit or change one thing in the article regarding the great shh debate of 2005, it&#x27;s perfect the way it is :)- I was going to say we sold way more copies than 5,000 but after fact checking myself via emails from 2005&#x2F;2006 it is, in fact, around 5,000. It felt more though because many were international copies and I had to find a way to convert the film to PAL, then we all spent like a week hand packaging each dvd leading up to Thanksgiving.- Aardvark&#x27;d was actually Google Video&#x27;s FIRST documentary. And to prove it, I found my old resume circa 2006 which, is so insanely hysterical I will bravely share this part here:• Work directly with CEO Joel Spolsky and CFO Michael Pryor • Contributed to the growth of the company by becoming the abstract layer: I do everything but code • Manage the summer internship program including the: recruiting, interview schedules, travel, living arrangements, and plan the summer event calendar • Oversaw construction expansion as we doubled our office space • Deal directly with building management to maintain office needs • Organize catering schedule, keep kitchen stocked and anticipate all needs of the programmers • Project&#x2F;Production Manager on “Aardvark’d: 12 Weeks With Geeks”, Google Video’s first feature length film, sold over 5,000 copies worldwide- I will swim upstream here and declare I think it&#x27;s a perfect film lol. Seriously though, for me it captures a moment in time that I will forever look fondly upon. I had no idea that it was the starting point for my career in tech. I also love Lerone, the film marker, who has gone on to make great films featured on PBS :) Plus, no one in my life believed the stories I would come home and tell and with the film I finally had proof.- Some key players missing from the post: Ben Kamens and Michael Pryor. Ben went on to be the VP of Eng at Khan Academy and is the CEO of his own company Spring Discovery (https:&#x2F;&#x2F;www.springdiscovery.com&#x2F;) so basically, a badass and nicest guy I know.And Michael... in a million years I never thought I&#x27;d have a career at Fog Creek. My plan was to stay a year then move back into TV Production. But Joel and Michael, they created a company that was way ahead of its time in terms of not only tech but company culture. It was special and I knew I was lucky stumbling into this other world. Michale and Joel pioneered so many things but after 18 years in this industry I can say with confidence they pioneered a people-first culture. I&#x27;m forever grateful to those two. reply mtlynch 11 hours agoparentHi, Liz! Really glad to hear you enjoyed the post!>I will swim upstream here and declare I think it&#x27;s a perfect film lol. Seriously though, for me it captures a moment in time that I will forever look fondly upon.The documentary does a great job of capturing that. In all your scenes, you seem like you&#x27;re having a great time. Your responses in the interviews are so fun and positive, even when you&#x27;re reading mean blog comments about Fog Creek or maybe-or-maybe-not being shushed.I mentioned this in the blog post, but it was satisfying to see how you grew your career as Fog Creek became more successful, and it&#x27;s great to hear how positive an experience you had working there. reply thom 10 hours agoparentprevEven if it only sold 5000 copies, I remember getting the DVD in the swag bag for StackOverflow dev days, so it must have reached a pretty big international audience over time. reply anildash 10 hours agoparentprevLiz we had another couple hundred of those still sitting in boxes in the office as late as when we gave over the space to Trello around 2018. How many did you make?! reply dannb 18 hours agoprevThis is so fun. Thanks for sharing. Does anyone else remember the 6-episode TechStars TV series for Bloomberg from back in 2011? I&#x27;d love to rewatch that, too. https:&#x2F;&#x2F;vimeo.com&#x2F;27175079 reply c17r 13 hours agoparentI don&#x27;t have that one but I do have the 8-episode \"Start-Ups: Silicon Valley\" from 2012.Also \"Startup.com\" from 2001And \"e-Dreams\" from 2001 reply no_wizard 10 hours agoprevAre there any good documentaries about the tech industry from the perspective of companies building themselves?I’ve seen a few about notable blowups and some about big tech, but nothing that follows a startup through their lifecycle or covers the in day to day innards of the business like this one tries to.I saw RevolutionOS and it was good but there aren’t any others I’ve been able to find like it either. reply wallflower 5 hours agoparentWhile it is not what you are looking for exactly, if you have not seen it, the General Magic documentary is extraordinary. It might make you cry.https:&#x2F;&#x2F;www.generalmagicthemovie.com&#x2F; reply pixelmonkey 10 hours agoprevFun article! I bought this DVD back in college, when I was studying computer science then. I was a long time reader of Joel&#x27;s blog, going back to high school. I was going to be working in NYC after college. Back then, there were no real \"tech jobs\" in NYC. It was after dotcom 1.0 crash, but before the post-Google boom. The main companies you could work for in NYC as a programmer were Wall St firms, unless you wanted to end up in a general \"IT department\" for a BigCo.I then got a job offer at Fog Creek when graduating college, incidentally for their Software Management Training Program. I turned down the offer, but one funny detail is that in the job offer package, which Fog Creek FedEx&#x27;ed to my NYC apartment, there was a printed copy of the Aardvark&#x27;d DVD in a DVD case.As for the documentary itself, I remember liking it, but I watched it at that moment. The connection to YCombinator makes total sense to me. Joel was trying to get smart CS grads to stop taking boring internships with BigCo&#x27;s outside of tech where they wouldn&#x27;t actually get end-to-end software product build-and-launch experience. His primary competition in NYC? The Wall St firms (Goldman, Morgan, Lehman, etc.) whose summer internships involved apprenticing on a big internal software system for a couple of months while being marketed to by HR to join that Wall St firm full time after college. YCombinator was trying to convince this same cohort of ambitious CS grads to start startups instead (e.g. the reddit founders at UVa).Today, the competitive landscape for startup summer talent is totally different. The tech companies are the BigCo&#x27;s, in NYC or SV. It&#x27;s probably the Wall St firms who need some help convincing summer interns to join today.Ironically, I turned down the Fog Creek full-time job to work at Morgan Stanley. The latter felt like a more Linux-y job to me, and I was big into Linux and F&#x2F;OSS -- also, student debt bills needed paying.But then just a few years later I ended up quitting that Wall St job to start a startup that went all the way from seed through venture financing and eventually to exit. Fog Creek and Joel remained an inspiration in terms of how we built our engineering culture. See e.g. slides 11-13 here: https:&#x2F;&#x2F;speakerdeck.com&#x2F;amontalenti&#x2F;fully-distributed-and-as... reply pdovy 16 hours agoprevWow this is a blast from the past. I remember watching this in college around 2008 or so, and it leading me to apply for their internship program. I guess as marketing material it worked!I didn&#x27;t get the job, and don&#x27;t honestly remember anything about the technical side of the interview, but I do remember them being very kind and gracious. I happened to be studying abroad in London and they didn&#x27;t bat an eye when they had to buy what I&#x27;m sure was a way more expensive ticket than usual for the on-site.Thanks for posting this - very interesting to see where everyone ended up! reply ekanes 18 hours agoprevSoftware leaders who want to succeed long-term could learn a lot from Spolky&#x27;s leadership style. reply nwoli 18 hours agoprevGreat documentary. I remember seeing it years ago though so it must have been published elsewhere and seen by many more people becuase I doubt that “300 views” count is right reply mtlynch 18 hours agoparentYeah, I recall seeing a low-quality DVD rip on YouTube a few years ago. When I was researching the article, I found lots of places online where Joel and the other people in the documentary had linked to YouTube URLs that are now dead, so I think there were definitely copies on YouTube floating around for a while. reply hermitcrab 3 hours agoprevSo what are Joel and Michael up to these days? Have they retired to roll around in piles of money, Scrooge McDuck style? ;0) reply raldi 3 hours agoparentJoel has leapt into Burning Man with both feet, building a gorgeous and (of course) technically impressive one-dimensional light show out of a giant military whip antenna. reply bufordtwain 14 hours agoprevInteresting article. I enjoyed watching that movie not too long ago which made it even better.A small correction: In the picture of the reddit co-founders the caption is incorrect, it says \"reddit co-founders (right to left) Alexis Ohanian, Aaron Swartz, and Steve Huffman in 2005\". It should be \"left to right\". reply mtlynch 14 hours agoparentThanks for reading and for the correction! I&#x27;ve updated the post. reply jedberg 17 hours agoprev> Aaron Swartz, Steve Huffman, and Alexis Ohanian, months after they launched redditAaron didn&#x27;t launch reddit. He wasn&#x27;t even involved until six months in. reply mtlynch 16 hours agoparentOh, I didn&#x27;t realize it was that late.Swartz, Huffman, and Ohanian are the only YC participants they interview, and they show them all working side-by-side, so I assumed they were all working on Reddit, but I just checked how they introduce Swartz and his title card doesn&#x27;t say Reddit whereas Huffman and Ohanian&#x27;s do.I&#x27;ve corrected the post.Wasn&#x27;t he involved sooner than a year after? I thought it launched in Summer 2005, and then Swartz joined the same year.>Over at reddit.com, we rewrote the site from Lisp to Python in the past week.Aaron Swartz&#x27;s blog post, \"Rewriting Reddit,\" published 2005-12-06http:&#x2F;&#x2F;www.aaronsw.com&#x2F;weblog&#x2F;rewritingredditAnd then this profile of Swartz said he joined in November 2005:>Ohanian and Huffman bought in, and by November 2005, Infogami and Reddit had merged, forming a new umbrella company called Not A Bug.https:&#x2F;&#x2F;qz.com&#x2F;594715&#x2F;when-aaron-swartz-met-paul-graham-his-... reply jedberg 16 hours agorootparentYes you&#x27;re right, he joined them six months in. I&#x27;ll fix my comment. reply marktangotango 13 hours agoprevThe funny thing to me is, knowing Joel, the interns and developers being interviewed where the few, the proud, who could solve fizzbuzz. Nowadays that&#x27;s... quaint given the prevalence of leetcode style interiews. reply meatmanek 12 hours agoparentHaving passed a Fog Creek internship interview a few years later, I can say the questions were definitely harder than fizzbuzz. I don&#x27;t remember the exact questions (One was a technical design question about how to do some sort of optimal screen layout, which ended up being an NP-hard problem). Very similar to the questions asked by Microsoft and Google and many other companies around the same time -- whiteboard coding in C to do some sort of data structure manipulation, etc. reply iamgopal 11 hours agoprevWas Trello from the same company ? It was first awesome sass product I have seen. reply tibbydudeza 13 hours agoprevThey still using Wasabi (inhouse programming language based on VB) ???. reply mathgeek 11 hours agoparentFog Creek ceased to exist and became Glitch several years ago, which was when they split off from anything using Wasabi (I was working on the FogBugz team at the time): https:&#x2F;&#x2F;medium.com&#x2F;make-better-software&#x2F;fog-creek-is-now-gli...It&#x27; now a part of Fastly: https:&#x2F;&#x2F;www.fastly.com&#x2F;press&#x2F;press-releases&#x2F;fastly-announces... reply krallja 8 hours agoparentprevNo, I killed Wasabi https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=9777829FogBugz and Kiln were acquired by a private equity firm five years ago. reply nickpp 18 hours agoprev [–] Loved this energy at the time. So inspiring, even for folks far far away from Joel’s world. Could credit it for quite a few people’s future success.So different from today&#x27;s sentiment of \"Only rich kids can play with startups, you shouldn’t even bother. You need universal healthcare&#x2F;UBI first\". reply facorreia 18 hours agoparentI followed Joel’s posts and learned a lot from them. He inspired me and had a concrete impact on my career and what I value as a software engineer. reply dang 14 hours agorootparentHis posts used to drive me crazy in a love-to-hate way, but I read them regularly because he&#x27;s a good writer. I just disagreed with him about everything.One day I clicked on a link that took me to one of PG&#x27;s Lisp essays. Who was this guy? I&#x27;d never read anything like it.That&#x27;s how I found out about PG, it&#x27;s what nudged me to finally learn Lisp, it&#x27;s what led me to follow YC before it was YC (and HN before it was HN), and thus it&#x27;s why I&#x27;m here. Thanks Joel!https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=791989 reply facorreia 12 hours agorootparentGreat story, thanks for sharing.I believe that Joel&#x27;s ideas like using source control, making a build in one step, having a bug database, having the best tools that money can buy, and writing a spec resonated with me in great part because I worked on ERP-style projects that were often built to support large and complex business processes that were well defined. reply Apocryphon 16 hours agoparentprev [–] No one says that about startups these days. What they do want is low-to-near-zero interest rates. reply ska 14 hours agorootparent [–] Startups in the valley were a thing well before low interest rates were even imagined. Interest rates change the landscape, but it&#x27;s hardly a prerequisite. reply Apocryphon 13 hours agorootparent [–] Sure, but this boom has been really driven by them. No one&#x27;s clamoring for UHC&#x2F;UBI, in contrast to cheap capital. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The post analyzes the documentary \"Aardvark'd\", which tracks interns at Fog Creek Software and includes interviews with accomplished tech industry personalities.",
      "It focuses on the state of independent software development in 2005, including the foundation of Y Combinator and the genesis of Reddit.",
      "It provides criticism for the film's lack of resolution, highlights the release of a video course on improving software creation, and offers links to both the documentary and the course on YouTube."
    ],
    "commentSummary": [
      "The article provides detailed commentary on \"Aardvark'd,\" a documentary by Fog Creek, offering corrections and added context from film participants.",
      "It explores multiple themes, such as Fog Creek Software's history, its product-related challenges and victories, and its relocation from Boston to Silicon Valley.",
      "A significant portion of the discussion revolves around the widespread use of Atlassian's JIRA and the prevalence of functional specifications in software development, offering a nostalgic look into technology's evolution."
    ],
    "points": 437,
    "commentCount": 149,
    "retryCount": 0,
    "time": 1694179605
  },
  {
    "id": 37434918,
    "title": "Procreate Dreams",
    "originLink": "https://procreate.com/dreams",
    "originBody": "SKIP TO PAGE CONTENT Our Apps Explore Support AVAILABLE NOVEMBER 22 Procreate Dreams Procreate Dreams is an all-new animation app packed with powerful tools that anyone can use. Create engaging hand-drawn animations, motion graphics and enhance them with photos, videos and sound. WATCH KEYNOTE EVENT Procreate Dreams has everything you need to create rich 2D animations, expressive videos, and breathtaking stories. DRAW & PAINT All-new drawing experience. Bring gorgeous texture to your animations with all your favorite Procreate brushes and more resolution than ever before. Flick the timeline away to make more room to draw. PERFORMING Now anyone can animate, record motion or effects through touch and instantly respond to the movie as it plays. MULTI-TOUCH TIMELINE A revolutionary timeline made for animation, with fluid gestures that keep you focused on creating. AUDIO & VIDEO Edit video and enrich with sound. Bring your animations to life with dramatic voice overs, and atmospheric music and sound effects. High-resolution video Perform lightning-fast edits as you work with gorgeous 4K ProRes footage. STAGE Set the scene. Create massive sets for characters to come to life, all in a single project. Draw beyond the Stage or keep elements Backstage until the perfect moment. Focus in on the details with simple pinch gestures to Zoom, Pan and Rotate around the stage. Procreate Dreams is packed with everything you need to bring your art and stories to life, and this is only the beginning. LIVE MOTION & EFFECTS Adjust any time. KEYFRAMES Power and precision made simple. REAL-TIME RENDERING Get more time for creativity, instantly playback your movie as you make edits. ONION SKINS Easily activate and customize Onion Skins. TEXT & TYPE Animate type and import custom fonts. File format of the future. All your assets are bundled into one file made for iCloud synchronization and backups. With saved undo history and instant open, the new Procreate file format is made for the next-generation of Procreate products. Instant Open Dive straight into creating. Procreate Dreams’ files open and close in an instant. Automatic Saving Never forget to save, every change you make is instantly saved. iCloud Support Organize and backup with iCloud synchronization. Eternal History Experiment without the risk of losing your work with saved undo history. MADE FOR IPAD & APPLE PENCIL The Perfect Match. From the leading developers for iPad, Procreate Dreams once again delivers an unmatched experience for touch and Apple Pencil. Experience natural and responsive painting, supercharged timeline editing, and more. Art is for everyone. Procreate Dreams is set to welcome a whole new generation of creators. Procreate Dreams No subscriptions. Just $19.99 USD. Available November 22. Email address NOTIFY ME Procreate for iPad Overview What's New Superpowers Brushes Color Accessibility 3D Painting Procreate Dreams Overview Procreate Pocket Overview What's New Procreate Folio Featured Artworks Discussions Support Frequently Asked Handbook Beta Program Connect Instagram Youtube Twitter Facebook Discover Stories & Insight Education Press Careers Terms & Conditions Privacy Policy Cookies Policy English (US) Choose language: English (US) 简体中文 日本語 Made in nipaluna (Hobart), Australia. Copyright 2023 Savage. All rights reserved. Procreate® is a registered trademark of Savage Interactive Pty Ltd.",
    "commentLink": "https://news.ycombinator.com/item?id=37434918",
    "commentBody": "Procreate DreamsHacker NewspastloginProcreate Dreams (procreate.com) 418 points by petecooper 18 hours ago| hidepastfavorite143 comments mkaic 17 hours agoAs a loyal and long-time user of the original Procreate app (I bought my iPad basically exclusively to use it), and someone who&#x27;s been interested in animation for a long time but too intimidated by the software to ever really get into making it myself, I&#x27;m extremely excited about this. If they can bring even a fraction of the usability and user-friendliness Procreate has to Procreate Dreams, I could easily see myself sinking many, many hours into it.As soon as this was announced I instantly sent it to all my artist and animator friends, I think this is going to be a wildly popular app. reply danielvaughn 17 hours agoparentProcreate is easily the best iPad app out there IMO. It&#x27;s simply fantastic. I bought an iPad Pro just for Procreate, it&#x27;s that good. reply nacs 16 hours agorootparentAnother great thing about it -- NO subscriptions or IAPs!They&#x27;ve done some huge updates over the last 5 years and not even charged for a new version. reply boppo1 3 hours agorootparentHow do they make enough money for this? Apple subsidy? reply mkaic 17 hours agorootparentprevI bought my iPad Air for the same reason haha! If Dreams turns out to be as good as I&#x27;m hoping it will be, I may even end up upgrading to an M2 iPad Pro — though I&#x27;d have to really get obsessed with Dreams first for that to happen :P reply emehrkay 15 hours agorootparentprevI can&#x27;t think of a better iPad app. Watching people really use it is magical. The same can be said for Sharpr3D (that is a subscription while procreate is a one time payment) reply redindian75 15 hours agorootparentprevyou should try Infinite Painter, the gestures and customizable UI alone is worth it. reply shannonclaude 16 hours agorootparentprevAgreed—I got it just for that too! reply sillysaurusx 15 hours agoparentprevHey procreate fans, I need your help. I have a broken iPad for an artist friend of mine. The screen’s busted, but it turns on. It’s under Apple Care plus. But I hesitate to use it, because they’ll replace the iPad, and procreate has made the horrible decision not to sync any of the art to iCloud, so my friend will lose all their artwork.Is our best option to pay for a screen replacement? It’ll be hundreds of dollars, but that’s preferable to losing their procreate catalog.I already lost some art of theirs when they were playing around on my iPad, which I was bummed about, so I’m not eager to repeat that experience.EDIT: sorry, I should’ve posted this as a top level comment. I didn’t mean to intrude. I was just trying to salvage a year or so of work. Thank you everyone for your wonderful ideas. reply qmarchi 15 hours agorootparentYou may be able to visit an Apple Authorized Service center (like some BestBuys) and ask if they&#x27;re able to replace the screen without wiping the device. May will accept Apple Care as well.Map: https:&#x2F;&#x2F;getsupport.apple.com&#x2F;repair-locations reply sillysaurusx 15 hours agorootparentThanks! I had no idea Apple worked with Best Buy. Much appreciated. reply Ephil012 7 hours agorootparentprevSimilar to the other commenter’s suggestion, you might want to do a local backup of the iPad that’s encrypted (iirc encrypted backups include more data). Hopefully the procreate artwork will be saved in that backup. However, you need to unlock the iPad first to do that I think. Even though the screen is busted, you can turn on voiceover using Siri and unlock the iPad using that potentially. Although, this requires that the screen is still able to detect touch input despite being broken &#x2F; unable to display anything. Even if you don’t think it can detect touch input it’s still probably worth a shot just in case it can reply dadzilla 15 hours agorootparentprevIf it is a USB iPad, you can plug it into an external display. USB-C to USB-C monitor, or get a USB-C to HDMI or DVI adapter. You can also use a USB or Bluetooth mouse if the digitizer is broken. reply sillysaurusx 15 hours agorootparentWhoa. Does it automatically turn on? Note that I can’t get past the lock screen. Otherwise that’s a wonderful idea and I might try it anyway. Thanks! reply gcr 15 hours agorootparentPlug it into a USB-C dock and plug a USB mouse in. You can tap the lock screen code in that way, or you can type with a USB keyboard.Note: iPads only support USB-C displays that operate in \"DisplayPort over USBC\" mode, not \"HDMI over USBC\" mode (which requires more active circuitry), so only some USBC monitors will work. If you&#x27;re worried, I suggest grabbing a DisplayPort-to-USBC dongle and plug it into the iPad that way.See here for the difference: https:&#x2F;&#x2F;hackaday.com&#x2F;2023&#x2F;01&#x2F;17&#x2F;all-about-usb-c-high-speed-i... reply sillysaurusx 15 hours agorootparentBrilliant, thank you so much.And thank you HN. You’ve helped salvage an artist’s work. Hopefully procreate will back up their art to iCloud one day. reply mkaic 14 hours agorootparentOne of the features discussed in the keynote for this new app&#x27;s announcement is that they are adding iCloud syncing as an option, and that all relevant new features coming to Procreate Dreams will also be added to Procreate. To me that sounds like there&#x27;s a good chance they&#x27;ll add iCloud sync to Procreate soon! reply2arrs2ells 15 hours agorootparentprevIf you back up the iPad locally, will it back up Procreate data? I would expect it to... reply sillysaurusx 15 hours agorootparentI don’t think we can without unlocking the iPad, and there seems to be no way of doing that with a busted screen. Kind of an oof failure mode. reply hedora 14 hours agorootparentIf iCloud backup is on, and your friend didn&#x27;t explicitly disable it for Procreate, then the data should be available for restore via iCloud:https:&#x2F;&#x2F;doncorgi.com&#x2F;blog&#x2F;procreate-icloud-backup&#x2F;I think you can see the last backed-up day (but not list of apps for other devices) somewhere on iCloud.com or in settings on some other iPhone&#x2F;iPad on their account. Alternatively, you could try restoring to a new&#x2F;temporary old iPad.The external monitor + keyboard suggestions in sibling comments could be combined with this advice (or other backup procedures in the article I linked), assuming backup is disabled. reply sillysaurusx 14 hours agorootparentI somehow experienced data loss with procreate at one point, but maybe it was some weird accident. You’re right that procreate seems to advertise iCloud sync. All I know is it didn’t work when I needed it most, so I was leery of just blindly trusting it when the data is currently sitting on my table.Thank you for pointing that out. replyHellDunkel 15 hours agoparentprevIt is really the combination of ipad, pen and procreate where the magic is born. Of cource the app is very well executed an thoughtful. I wish i had more time and energy for drawing and painting. reply FerCala 16 hours agoparentprevNice, are you an illustrator or animator? I&#x27;m a writer&#x2F;director producing short animated videos, do you have a portafolio or something I can watch from you? I would love to collaborate. PD. I don&#x27;t know if this type of comment is allowed, but since is difficult to find animators it is worth it. reply rndmio 18 hours agoprev$20 one time purchase, I think I&#x27;ll be getting this at release. I understand the subscription model but for things like this that I will probably play with for a bit then possibly not come back to for a few months I don&#x27;t want to have to feel like I&#x27;m getting utility from my subscription, I just have it, whenever I want. reply criddell 17 hours agoparentI&#x27;ll buy it even though I have no use for it just because I want to support the company.For me, Procreate is a killer app. It&#x27;s the reason I bought my iPad. IMHO, the $450 or so that it costs to get an iPad + Pencil + Procreate is well worth it.I don&#x27;t understand how they can make something as good as Procreate and sell it for $15. reply bluescrn 16 hours agorootparent> I don&#x27;t understand how they can make something as good as Procreate and sell it for $15.At $15, just about every Apple Pencil owner buys it. The one app basically justifies the existence of the Pencil. If it was a subscription, it&#x27;d have vastly fewer users. And Pencil sales would probably be a fair bit lower, too. reply ghaff 14 hours agorootparentI am horrible at drawing in general (though I do photograph). And even given that $15 is a no-brainer just to play around with.And, yes, I&#x27;d never buy a subscription because it&#x27;s just not a daily driver application (for me). reply jstarfish 16 hours agorootparentprev> I don&#x27;t understand how they can make something as good as Procreate and sell it for $15.They get [kids] on the brushes and other DLC add-ons. reply alden5 5 hours agorootparentprocreate doesn&#x27;t have any in app purchases, there is alot of 3rd parties that sell brushes for procreate reply themagician 15 hours agorootparentprev> I don&#x27;t understand how they can make something as good as Procreate and sell it for $15.Because they knew it was that good. They also had first mover advantage. They probably said, \"Well, if even 1% of everyone with an iPad buys our app…\" and actually knew that would happen. They rock. reply Kon-Peki 17 hours agorootparentprevDo you think that this is an “extension” of the existing app?Existing users will buy the new app. But will new users need to buy both, or only this one? reply bugglebeetle 16 hours agorootparentI imagine the animation features in the exist app will wither relative to Dreams. They’re fairly limited in the existing app, so IMO separating them out and focusing development there is probably for the better. reply bugglebeetle 17 hours agorootparentprevAs a (mostly) former illustrator, I bought Procreate once and made thousands of dollars with it. My Adobe subscription, conversely, felt like little more than a tax on being in a creative field. reply themagician 15 hours agorootparentSo true. What sucks is you have to pay the Adobe tax even if you 100% move your workflow away from Adobe, because inevitably someone is going to send you an .AI file or .PSD. reply dylan604 15 hours agoparentprev>I think I&#x27;ll be getting this at releaseTFA: Available November 22On first view of the website, I read that as November &#x27;22, so I thought I was late to the party. After reading your \"at release\" I see it is Nov 22, (assuming 2023) at this point.Am I over thinking this could be clearer? reply wingerlang 14 hours agorootparentYou&#x27;re overthinking it reply silveira 17 hours agoprev\"No subscriptions. Just $19.99 USD. Available November 22.\"I was sold at \"No subscriptions\". I&#x27;m buying this November 22 and putting a day off in my calendar. reply mortenjorck 16 hours agoparentWith Procreate having been the longest-running one-off purchase app on the App Store that I know of (I literally bought my copy in 2010) I was on the edge of my seat to see whether they were going to finally follow the subscription trend for Dreams.Even though I haven’t had a particular urge to get back into animation again, I think I’m going to have to buy this just to support this business and as a thank-you for 13 years of free updates to Procreate. And to do a little flipbooking for fun. reply safeimp 17 hours agoparentprevI’m a long time Procreate user and am shocked at the value I get out of it for the price. It’s definitely a killer app on the iPad and was the main reason why I picked up the Pencil.Not to go off on too much of a tangent but thinking about animation on my iPad I was suddenly reminded of one of my favorite “toys” (tools?) from my childhood, The Etcha Sketch Animator:https:&#x2F;&#x2F;the80sand90s.com&#x2F;articles&#x2F;etch-a-sketch-animator?for... reply bandergirl 16 hours agoparentprevThis is great but also unfortunate. $19.99 feels too low for this — and I say this as someone who doesn’t use paid&#x2F;subscription apps.$2.99 would have been easily swallowable. reply mejutoco 15 hours agorootparentYou meant $29.99 right? reply petecooper 14 hours agorootparentMy read was: \"$2.99 [per month] would have been easily swallowable.\" reply make3 15 hours agoparentprevthis just tells me they&#x27;re still on VC money and looking to raise more. When they&#x27;ll want to be profitable, they&#x27;ll tighten the screw reply criddell 14 hours agorootparentThe founder (James Cuda) was on a podcast in 2020 and as of that time, he and his wife were the only investors in the company. That year they had $30 million in revenue and 43 employees.I’m guessing any screw tightening will come when Adobe (just a guess) eventually buys it for a lot of money and the company has to raise prices and move to a subscription model to service the debt. reply boppo1 3 hours agorootparentAny idea the podcast? reply tiltowait 14 hours agorootparentprevA quick search didn&#x27;t suggest they&#x27;ve ever raised VC funding. A 2019 interview[1] says they&#x27;d never (at that time) taken any.[1] https:&#x2F;&#x2F;thedesignest.net&#x2F;interview-james-cuda-procreate&#x2F; reply drcode 17 hours agoprevI want to point out that there is an excellent existing iPad app from a small developer called Callipeg, that has most of the same feature set described here (maybe everything except the effects features)I&#x27;ve had a great experience animating in Callipeg with both cell animation and transform animation.It is true though that Procreate is the gold standard for drawing apps, and the drawing functionality in Callipeg isn&#x27;t as polished- So I will be tempted to switch to this new app for animation, if they can match the drawing experience from the core Procreate product. reply catapart 17 hours agoprevHell yeah!Even if this app is problematic from a cross-platform or usability standpoint, the fact that people are making real investments in re-thinking our design tools for different contexts is very exciting. I can&#x27;t wait until we get some better audio, video, drawing, and animation apps built with mobile in mind from the ground-up that AREN&#x27;T indie silos of interactive design and file formats. I know people will be itchy to give me some recommendations here, but I&#x27;m cynical about it because everything I&#x27;ve seen, so far, is \"neat but not for team&#x2F;studio production\" for some reason or another. So it&#x27;s nice to see something that is absolutely certain about how these things actually get used in the industries, and is willing to strike a new path, while focusing on what is required for industry interoperability.Once other people start picking up on this idea, we might get some really awesome new ways for people without specific domain knowledge to be as creative in their output as they are in their own heads. That will be pretty awesome, I think! reply brundolf 17 hours agoparent> problematic from a cross-platform or usability standpointWhat do you mean by this? reply catapart 17 hours agorootparentI mean \"if this app comes out and has limitations on either your OS (desktop or mobile), your method of file replication (iCloud integration can be done even if you&#x27;re using an agnostic file type but it could, alternatively, be tightly-coupled), your third-party hardware (any stylus should work), or any other area of application and binary development that would be detrimental to user freedom\"Basically - even if all those things are locked down, instead of open like they SHOULD* be, it&#x27;s still a net positive.*that&#x27;s my editorializing; all apps SHOULD be web apps (or at least delivered without installation), unless there&#x27;s some reason you simply can&#x27;t get the performance you need out of web assembly (often the case, today; hopefully not often true in the future). reply hotnfresh 16 hours agorootparent> that&#x27;s my editorializing; all apps SHOULD be web appsJesus god, no. I like having excellent accessibility features that actually work and not seeing my battery get mugged and left for dead. reply johnzim 16 hours agorootparentAlso people massively underestimate how great the graphics libraries provided by Apple are. The thought of doing a lot of this stuff in WebTech gives me heartburn.Like our main compositing tool on the web - Canvas is basically Quartz, which I love for that reason but there&#x27;s a _huge_ amount of power that you get from native Toolkits that have been developed in the intervening years. reply hotnfresh 15 hours agorootparentI legit think a lot of Web UI fans have just never, ever done serious work in any of several half-decent-or-better native UI toolkit w&#x2F; supporting libraries. If they had, they’d riot. Such an incredible amount of wasted person-hours, both for the people doing the work and the poor folks stuck using the resulting jank-fest. reply catapart 15 hours agorootparentI&#x27;m actually a big fan of ImGui (via DearImGui, at least) for immediate mode stuff. I can also appreciate Qt for what it&#x27;s good at.As far as experimental stuff, I&#x27;m a very big fan of Makepad&#x27;s 3D rendering context even for forms. Coming from a games background, I prefer the shader model to most other UI implementations. Especially vector based drawing; that stuff is so much harder to deal with. I&#x27;m very happy with what I can achieve in CSS, these days, but it&#x27;s just a million times easier to do any of it with a some planes and a shader. Give me beziers and pixels over box models and anchors any day. reply gochi 15 hours agorootparentprevA lot of this stuff is super easy in webtech, no idea why it gives you heartburn, maybe you&#x27;re just more used to the native toolkits (or Swift in general)? reply catapart 15 hours agorootparentprevYeah, I understand this reaction, but I feel like maybe you&#x27;re limiting your scope of web app to \"browser ui, native-library-consuming application\". What I&#x27;m actually talking about is the WASI and wasm projects and the even more general idea of a compilation and&#x2F;or execution of machine code for a specific CPU&#x2F;OS&#x2F;environment based on contracts within the system interface and the wasm binaries.I know there aren&#x27;t a lot of public examples of any of that, right now, so it&#x27;s hard to be inclusive of that kind of thing when considering &#x27;web apps&#x27;. Maybe I&#x27;m premature in being so loose with the term. But I do think this stuff is closer than a lot of people realize. reply brundolf 15 hours agorootparentI&#x27;m a big supporter of web apps, but even I&#x27;m skeptical you could make a cross-platform app that&#x27;s as tight and physical as Procreate. Much less would I call it \"problematic\" that the devs decided not to (which implies they violated some kind of moral obligation) reply catapart 14 hours agorootparentRight on. Different strokes for different folks! I was only speaking to what I find problematic or less than optimal. My personal experience with browser pointer APIs, native pointer interfacing through libusb (a subset) via wasm, the WebGPU api&#x27;s vulkan-like structure, and custom drawing solutions in wasm all lead me to believe that a drawing app could be entirely performant and responsive to input.I don&#x27;t hold anyone to any moral obligation; I just speak freely about what I find unsavory. I want applications delivered to me through a url, negotiating with my environment for permissions based on what I allow, and performing for me with native capabilities, including performance, integration, and offline functionality. Return on investment notwithstanding, it&#x27;s often possible to achieve these goals with modern technology. It&#x27;s not always, and there are cases where we absolutely should not prioritize these things. Outliers highlighting the example and whatnot.But, all of that aside, I made a specific point to say that even if my apparently sky-high standards are not satisfied, the product is still great. I don&#x27;t feel like I was being negative. I&#x27;m not sure why that implies a moral issue, to you, but I&#x27;m sorry for being unclear! reply criddell 16 hours agorootparentprevA well written native app will always perform better than a well written web app.I&#x27;m considering performance to be more than just UI responsiveness. I include CPU, battery, network, and memory usage. reply brundolf 17 hours agorootparentprevFor what it&#x27;s worth, Procreate supports every relevant file type and iPads have a file manager now, support USB-C flash drives, etc. In my experience compatibility has never been a problem with these apps. reply gallerdude 17 hours agoprevThis looks amazing. Over the last year, I’ve gone from a casual Disney&#x2F;Ghibli fan, to a really deep lover of hand-drawn animation. The expressiveness and attention to detail are astounding.I also really like really smooth and intuitive interfaces, the iPad in particular is extremely natural (albeit at the things it’s designed to do well.)Inside I’m kind of nerding out at the combination of my two loves, I have zero artistic talent, but I will buy this immediately. Maybe I can learn to have ~some artistic talent. reply dagmx 17 hours agoparentI recommend buying the Animators Survival Kit and working through the exercises within. It’s what many animators use as their intro to animation and will teach you most of what you need to know of the mechanics.From there, it’s just a matter of acting and experience reply brundolf 17 hours agoparentprevThis is the way the majority of Procreate users came into it :) reply dagmx 17 hours agoprevThis looks phenomenal. The Savage Interactive team have such great thought about doing UX for iPad and Pencil, that they&#x27;ve really captured the mobile artist market.I used to do 2D animation, and this is what so many people have been hoping Toon Boom would release instead of their half hearted approaches to tablet (not iPad strictly) interfaces in the past.I think this will be really well received, though given the more niche skillset needed, I doubt it&#x27;ll be as popular as regular ProCreateand only $20? That&#x27;s just a killer value proposition. Competing commercial apps are so much more expensive, and free apps leave a lot to desire for iPad interaction.I know a ton of artists who bought an iPad Air or Pro just for ProCreate. I can see a lot of my animator friends doing the same now too for this. reply evujumenuk 15 hours agoprevIn medieval Europe, \"procreate dreams\" were thought to be caused by succubi.This landing page isn&#x27;t about that. reply theoldlove 6 hours agoparentYeah, the name brought me back to dirty sheets in my teenage years. Glad I wasn’t the only one reply xk_id 2 hours agorootparentThe Procreate product page has a heading \"Procreate on your face\", which is so stupid, it must have actually been on purpose. reply aidos 15 hours agoprevTake. My. Money.Not for me, but my eldest picked up procreate recently and was immediately able to create all sorts of amazing things. She’s even been able to create some great animations, but this makes procreate look like a toy in that regard.Feels a lot like ableton live with the way they’ve been able to reinject the playfulness into creating on a screen. Love it. reply can16358p 16 hours agoprevReminds me of Bret Victor&#x27;s lovely talk Inventing on Principle: https:&#x2F;&#x2F;youtu.be&#x2F;PUv66718DIILooking forward to give a try. reply cnees 17 hours agoprev$20 with no subscriptions is an astonishingly low price point! reply mkaic 17 hours agoparentYeah it&#x27;s a stupidly good deal from the looks of it. It&#x27;s very cool of them to resist the industry trend of trying to squeeze recurring revenue out of every product! reply jadtz 17 hours agorootparentHow can they even afford doing this? reply Cu3PO42 16 hours agorootparentQuantity, presumably. Procreate itself ist eben cheaper (or at least it was when I bought it) so the model must be working for them. And I&#x27;m the perfect example why: I&#x27;m not an artist, I barely draw, but I bought Procreate. Why? Because it&#x27;s a really cool tech demo for that expensive new iPad Pro and at €10 one-time it was extremely easy to justify, even if I&#x27;ve only played with it a bit. I imagine a lot of people fall in the same category and bought it even if they&#x27;re not the typical market for digital art apps. reply PaulDavisThe1st 15 hours agoprevThe naming is almost as a bad a new place in weed-legal santa fe (\"Baked & Brew\" ... no, that&#x27;s baked goods, no marijuana products).I mean, at least go for CamelCase ... ProCreate is sort of clear (and said in its own way). Procreate is ... weird. reply konfusinomicon 15 hours agoparentmy first thought was that it&#x27;s an AI girlfriend generator and that someone took it a step further and made an app to create an entire ai family. Sim games are about to get wierd! reply pilgrim0 12 hours agoprevReally curious to get more info on that file format. Seems like it’s structured as a database and has internal addressing schemes and embedded caching structures to allow for partial IO. The idea of persistent history implies that it records changes as events, which is a good fit for an LSM. In any case it must be a container format, as an LSM alone would not suffice, perhaps it could be a filesystem volume disguised as a file with Apple specific tech behind it. reply winkelwagen 18 hours agoprevSuper exciting, procreate is such an awesome program. Bold move of making it portrait. I bought my iPad a long time ago for procreate, best purchase I’ve done. It reawakened illustration for me. Curious what we can make with this. Although I can’t find the minimum requirements anywhere yet. reply og_kalu 18 hours agoprevLooks nice. Too bad they won&#x27;t develop for Android. reply criddell 17 hours agoparentAre there good Android tables with something like the Pencil? If so, then maybe that&#x27;s an opportunity for somebody because there&#x27;s clearly nothing like it on Android (at least that was the case a couple of years ago).The only problem is Procreate have set their price way too low. There&#x27;s no way I&#x27;d want to start working on something as grand as Procreate and then sell it for $15. reply og_kalu 17 hours agorootparentSamsungs tablets are great and I prefer the S-pen to the Apple Pencil. Hardware isn&#x27;t the bottleneck. They just don&#x27;t want to. I think they have some exclusivity deal with Apple. Would explain a few things.Infinite Painter and Hipaint(procreate clone) are really the only android alternatives to what procreate is going for. reply dagmx 17 hours agorootparentAs with anything Android, it comes down to market share and variance. I doubt there’s an exclusivity agreement.Samsung has really great products. How many people are buying that instead of an iPad? So many of my Android using friends will have an iPad.Google let Android on tablets languish for years and the result is they’re such a small part of the marketplace that very few app developers can justify the return on investment.And then even from those few Android tablets, how many have a good pen outside of Samsung?It’s a niche of a niche of a niche to target reply og_kalu 17 hours agorootparentSamsung&#x27;s global tablet market share is still huge even if lagging apple. 23.1 vs 35.4 as of Q1 2023.People are buying android tablets and there are lots of downloads for the apps that do exist on Android.\"Market Share\" would be a silly reason not to expand. The market is evidently there. The only valid reasons are not having the capital to expand or having too small a team. Neither of which really apply to Procreate. Even procreate don&#x27;t give the market share excuse when asked. It&#x27;s not a valid one. reply dagmx 16 hours agorootparentOut of curiosity, where are you getting those numbers? I&#x27;m seeing over 40-55% for iPad in all my links, which is quite significant. I&#x27;m not talking about single quarter shipmentsPeople are buying android tablets. I&#x27;m not arguing that. But what percent of that tablet market has a pen they can target, and has consistent hardware support for everything else like graphics APIs?Having done mobile dev, even across Samsung devices you have high variance in Vulkan support and bugs for example. Deploying even Unreal Engine or Unity games can be a minefield of compatibility testing.It&#x27;s lots of little and big things IMHO that often make it a difficult ROI to swallow. reply Jtsummers 14 hours agorootparentTheir numbers seem to come from here (or wherever this site gets its numbers): https:&#x2F;&#x2F;www.statista.com&#x2F;statistics&#x2F;276635&#x2F;market-share-held...However, those numbers are not about deployed market share but about market share of shipments. Related numbers, certainly, but not the same. reply ilrwbwrkhv 16 hours agorootparentprevAndroid tablet users are poor and don&#x27;t buy apps. reply manicennui 16 hours agorootparentprevI bought a top-of-the-line Samsung tablet a couple years ago to give it a chance. They are not at all comparable to iPads. Android tablets are terrible. reply MikusR 14 hours agorootparentprevProbably no exclusivity. But there have been cases where an app that was only on ios decided to release android version. And immediately all their Apple contacts stopped talking to them. No more featured placement on appstore. reply criddell 16 hours agorootparentprevMaybe the problem is that Android already has decent and established painting apps. Procreate would get a small part of a smaller market. Big risk for not enough reward. reply awfulneutral 16 hours agorootparentprevYeah, this price is frustrating from a small developer perspective. Back when prices were established, tablets weren&#x27;t used for anything serious, so productivity apps were simple and cheap. Now Procreate is used for professional work and it competes with desktop apps that are much more expensive. Users still expect tablet app prices to be unrealistically low. I guess Procreate can do it because they have a huge amount of the market already. But in the long term it isn&#x27;t sustainable to keep improving the same app, if everyone already bought the app. reply dotnet00 16 hours agorootparentprevThe Samsung tablets, especially the most recent ones are great for drawing, so much so that my S8 Ultra has almost completely replaced the larger dedicated pentab I have on my desk.The most capable drawing software on Android right now is probably Clip Studio Paint, which I think has some sort of limited exclusivity arrangement with Samsung (presuming that they paid for the port), as some android-specific features seemed to have a couple of months of Samsung exclusivity before being opened up to all devices. reply freedomben 15 hours agorootparentprevMy wife is an artist and she really likes her Samsung with S-Pen. It&#x27;s pretty nice, and way cheaper than an iPad reply ballenf 17 hours agoparentprevSupporting one platform really, really well or two platforms decently well. Also you would always have divergence in capabilities, so you&#x27;d basically have two separate products and those predictable complaints: \"but my tablet can also do xyz, if you only take advantage of this much-harder-to-use undocumented API that only works on 9% of devices using this OS\".No arguing the situation sucks, however. reply wishfish 15 hours agoprevFound this video of Alex Kunchevsky animating a butterfly in Dreams. If this is how the process actually works, then I could see Dreams being very popular. Simple and intuitive.https:&#x2F;&#x2F;twitter.com&#x2F;kunchevsky&#x2F;status&#x2F;1697439424311853252Of course, I could also see edge cases where the simple & intuitive get in the way of what the artist actually wants to do. Will be interesting to see how it pans out in practice. reply yuck39 15 hours agoparentForgive me if this is a stupid question, but how is it determining how to color the inverse side of the wings of the butterfly in the animation? Did he keyframe that in and exclude it from the animation?Or is the app using vision models to infer that he is trying to animate wings specifically and just assume the perspective needed and do the coloring on the opposite side for him?From a technical standpoint the ladder would be very cool, but I could see how it could be troublesome for artists trying to do \"real animation\". reply nacs 15 hours agorootparent1) That&#x27;s not Dreams, that&#x27;s original Procreate&#x27;s animation tools2) The video is cutting out the drawing of other frames after the first of each layer. reply HellDunkel 15 hours agorootparentprevThis is done in procreate- not dreams. I think there are just a big number of steps skipped in that video. reply nacs 15 hours agoparentprevI don&#x27;t think that&#x27;s Dreams..That&#x27;s just the basic animation flow in Procreate (frame by frame). reply ilrwbwrkhv 16 hours agoprevAustralia keeps producing some of these banger softwares. Best in class. Procreate, Sublime Text. I don&#x27;t know why the government feels so mismatched though. reply Hamuko 16 hours agoparentBut do they balance out Jira? reply ilrwbwrkhv 16 hours agorootparentTouché. reply alpark3 17 hours agoprevFrom the title, I thought Procreate was coming out with another crappy stable diffusion-derived AI image generator. Thank god that&#x27;s not the case. Very excited for this. reply jw1224 16 hours agoparentIt’s sad to see blanket statements like this. Stable Diffusion can be an extraordinarily powerful tool for creatives.I know two professional artists who both hated the concept of AI image generators. But since Photoshop added Generative Fill, I know both have enjoyed using it, and I’ve not heard another complaint since.I’d bet Procreate add AI capabilities sooner or later. Once you’ve tried it in Photoshop, it’s impossible to look back. reply imachine1980_ 15 hours agorootparentthat&#x27;s true, but is quite daunting that all tech art software are implementation of AI image generation, mainly low effort implementations of existing models, is quite rare seeing big announcement in art that isn&#x27;t AI copycats of features this year. reply mannykannot 16 hours agoparentprevFWIW, I was thinking in terms of a conception-timing app. reply Bjorkbat 16 hours agoparentprevThankfully, they&#x27;re already made their stance on AI clear on Twitter https:&#x2F;&#x2F;twitter.com&#x2F;Procreate&#x2F;status&#x2F;1661210079360700417?lan... reply tobr 15 hours agoparentprevThat’s exactly what the name made me think as well, and I was a little confused trying to interpret the page in light of that. This really looks like an amazing app, though. reply kalupa 16 hours agoparentprevI had the exact same thoughts here ...\"Oh man, procreate AI?\" \"oh ... wait, this is kinda neat\" reply gregsadetsky 16 hours agoprevSide note -- although it&#x27;s noted by many people here -- to say that I&#x27;m very pleased to see ... some? seeming pushback against subscription-based models.The other example that comes to mind for a very polished and well loved app is Koala (a great audio sampler&#x2F;sequencer) [0], which sells for a flat $4.99.Subscriptions have advantages of course, such as providing developers with a more sustained income vs one time purchases which necessarily mean a diminishing hourly rate when you take into account indefinite support.But still. I&#x27;m hopeful.[0] https:&#x2F;&#x2F;www.koalasampler.com&#x2F; reply awfulneutral 15 hours agoparentThat&#x27;s so cheap though, you&#x27;d have to sell hundreds of thousands of copies per year to even support a few developers, in the USA anyway. The app store model is driving companies towards subscriptions and micro-transactions, because otherwise like you say users pay a low price once, and get new development and support forever for free. IMO it would be better to raise prices and charge for new versions of apps every year or so, like we used to do, but the app store and user expectations make that unfeasible. reply SSLy 12 hours agoparentprevAnother iPadOS app with ridiculous price to capabilities ratio is Drambo. reply idk1 17 hours agoprevCan I just sat, what a gorgeous homepage, perfect for an animation app. reply popol12 16 hours agoprevAs a french I expected something very different from that link :3 reply atentaten 17 hours agoprevI love the enthusiasm in the comments. I have no expertise, but I have some interest in animation. I’ve never heard of procreate. Can someone share a link to examples using this tool? reply WA 16 hours agoparenthttps:&#x2F;&#x2F;www.youtube.com&#x2F;results?search_query=procreate reply bpicolo 16 hours agoprevThere&#x27;s been a lack of silly solo-made animation content on the web ever since Flash went away. Wonder if this could start a new era of kids making fun things. reply lappet 15 hours agoparentI know! Are there no alternatives to Flash? I miss it so much. reply coldtea 18 hours agoprevI feel like they have neglected Procreate proper for a while now. A lot of the things they&#x27;ve added in the 5.x line are niche, while major features are ignored.Organic brushes (natural media like oil and watercolor behavior, not just controls like jitter) are still MIA, for example. And several more things.And Dreams is more of a diversion. Only a small fraction of users would be interested in animation.But they of course know that they will get those $19.99 anyway, out of curiosity, even if most Procreate users are going to rarely or never really use Dreams. reply 1123581321 17 hours agoparentI&#x27;m more optimistic. Procreate has gotten so many people into digital painting that avoided Photoshop. Dreams will introduce many people to animation. I&#x27;m excited about that because lots of people have ideas and talent but find animation tools too intimidating to explore. reply elicash 14 hours agoparentprevI might get downvoted for this, but it would make sense as one-time purchases lessen the need to provide more regular updates. It becomes unaffordable to continue, so they now are forced to launch separate, new products.Subscriptions can be good! reply jstummbillig 14 hours agoprevReleasing a major software product right now without a fat AI sign on it extrudes and instills enormous amounts of confidence. reply FireInsight 13 hours agoparent\"Dreams\" kind of sounds like some AI thing, which I feared at first. This is much better. reply dbspin 15 hours agoprevI wonder if there&#x27;s any chance of a beta programme? I literally just wrapped principle photography on a short film that has a bunch of animated elements I&#x27;m going to have to figure out how to do for budgetary reasons. Love ProCreate and this looks like a fascinating tool. November is quite a while away! reply howon92 17 hours agoprevNo subscriptions, just $20: what a nice offering. reply benoliver999 14 hours agoprevI will check this out. I currently use the excellent ToonSquid, but I really like Procreate for drawing.ToonSquid does a really cool thing where their flashy marketing video turns out to be a demo project in the app you can look at and edit. Really good for getting underway quickly. reply dylan604 15 hours agoprevIf this works as well as the promo material, then this is hella cool software. I&#x27;m not in the world of 2D animation any more, but I&#x27;ve sent the link to a few people I know that are that this might have flew under they&#x27;re radar. Waiting to hear back responses. reply dang 14 hours agoprevI know there&#x27;s a lot of appetite to discuss this but it isn&#x27;t released yet, so the thread can only go so deep. We want to have space for discussion once the product is out, so downweighting this thread is probably best. reply nocoiner 17 hours agoprevGod bless them for maintaining transparent, user-friendly pricing. Sounds like a bargain at twice the price. reply VyseofArcadia 18 hours agoprevThat&#x27;s a heck of a URL. reply maerF0x0 16 hours agoparentCame to say something similar... Was worried it was SFW to click. \"Procreate\" as in to reproduce.... reply q_andrew 16 hours agoprevI was hoping their big announcement was going to be Procreate for PC, but I&#x27;m happy for all the people out there who will benefit from better accessible tools. reply cush 16 hours agoprevI absolutely love Procreate. Will be downloading this day one reply quakeguy 17 hours agoprevNo subscriptions, no problems with me. reply Gwarzo 16 hours agoprevInteresting name.. I too have dreams where I procreate. reply SanderNL 16 hours agoparentThat sounds .. interesting. Are they REM dreams? reply dessimus 15 hours agorootparentmore like RPM, if you will.. reply cardimart 14 hours agoprevHow cringe is that keynote? Hard to watch reply jrod16 16 hours agoprevOhhhh this is exciting! reply throw1386456 15 hours agoprevtheir timeline reminds me of the lottielab one, with the thumbnails and zooming and all that reply jalino23 16 hours agoprevthis is super cool! reply px43 16 hours agoprev [–] When did this site start having ads? reply criddell 16 hours agoparent [–] I wouldn&#x27;t call this an ad, but I know what you are getting at.I was curious myself so I want back and looked at the early submissions and it looks like submission #6 was the first one similar to this.https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=6That&#x27;s from October 2006, which is 5 years before you made your account. reply px43 14 hours agorootparent [–] That one looks like an actual blog post though, not just a blind link to a website that&#x27;s trying to sell some random product which is completely unrelated to news or hacking.The link here is literally just a video advertising the pre-sale of some tablet app that isn&#x27;t even coming out for a two and a half months. It&#x27;s not open source, nor even available on open platforms. It has nothing to do with code, or security, or anything even mildly development related. It also isn&#x27;t \"news\" in any sense of the word. Not even a press release saying what the app is, just a flashy ad trying to get you to pre-order some app.Futhermore, it was the #1 link on the site when I made my post, which feels a lot like someone paid to have their advertisement pinned to the top of the site. reply FireInsight 13 hours agorootparent [–] Well I upvoted this because I use Procreate the famous iOS drawing app often and think that it&#x27;s cool that the same company is coming out with a high quality OTP app for animation. If this just isn&#x27;t your cup of tea though, that&#x27;s alright. But I wouldn&#x27;t accuse this of being some advert pinned to the top artificially, even if this was outside my tech bubble.There are constantly links to products posted on this site without them being anything more than the marketing site. Heck, there&#x27;s Show HN which sometimes features similar content, but even more explicitly posts that serve as advertisements. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Procreate Dreams is a newly launched animation app, designed for creating hand-drawn animations, motion graphics and more.",
      "The app features multiple tools such as drawing, painting, audio and video editing, stage creation, live motion and effects, keyframes, real-time rendering, onion skins, and text and type animation.",
      "The application, which is compatible with iPad and Apple Pencil, will be available for purchase from November 22 at a price of $19.99 USD."
    ],
    "commentSummary": [
      "The Procreate app, known for its quality and affordability, has excited users with the launch of its Procreate 5X version, introducing a new animation feature.",
      "The upcoming Procreate animation app, Dreams, has elicited mixed reactions, with some users displaying enthusiasm while others question the need for adverts.",
      "Amid positive feedback for the iPad app, discussions have surfaced regarding the potential development of Procreate for Android tablets."
    ],
    "points": 417,
    "commentCount": 143,
    "retryCount": 0,
    "time": 1694187177
  },
  {
    "id": 37433495,
    "title": "Apple vs. Meta: The Illusion of Privacy",
    "originLink": "https://growth.design/case-studies/apple-privacy-policy",
    "originBody": "Apple vs Meta: The Illusion of Privacy{\"@context\":\"https://schema.org\",\"@type\":\"Article\",\"datePublished\":\"2023-09-04T04:00:00.000Z\",\"description\":\"Learn how Apple and Meta use psychology and UX to collect your data while creating an illusion of privacy.\",\"mainEntityOfPage\":{\"@type\":\"WebPage\",\"@id\":\"https://growth.design/case-studies/apple-privacy-policy\"},\"headline\":\"Apple vs Meta: The Illusion of Privacy\",\"image\":[\"https://s3.amazonaws.com/files.growth.design/cms/clm5o01vs000d0tl9dxdkf3aw.png\"],\"dateModified\":\"2023-09-04T04:00:00.000Z\",\"author\":{\"@type\":\"Person\",\"name\":\"Dan Benoni\"},\"publisher\":{\"@type\":\"Organization\",\"name\":\"Growth.Design\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https://growth.design/favicon-96x96.png\"}}}Loading…{\"props\":{\"pageProps\":{\"__typename\":\"CaseStudy\",\"title\":\"Apple vs Meta: The Illusion of Privacy\",\"slug\":\"apple-privacy-policy\",\"id\":\"clm5o06zk7352230tl968lxkju0\",\"description\":\"Learn how Apple and Meta use psychology and UX to collect your data while creating an illusion of privacy.\",\"seoCover\":{\"__typename\":\"S3ImageFieldOutputType\",\"height\":630,\"url\":\"https://s3.amazonaws.com/files.growth.design/cms/clm5o01vs000d0tl9dxdkf3aw.png\",\"width\":1200},\"status\":\"published\",\"placeholder\":{\"__typename\":\"S3ImageFieldOutputType\",\"height\":196,\"url\":\"https://s3.amazonaws.com/files.growth.design/cms/clm5pkvfc000h0tl96w4x3j37.png\",\"width\":349},\"color\":\"#1389e6\",\"niceName\":\"Apple privacy policy\",\"bonusContents\":[{\"__typename\":\"BonusContent\",\"displayName\":\"Ethical design cheat sheet\",\"slug\":\"meta-apple-ethical-cheat-sheet\",\"file\":{\"__typename\":\"S3FileFieldOutputType\",\"url\":\"https://s3.amazonaws.com/files.growth.design/cms/meta-apple-privacy-policy-bonus-cheat-sheet-1-compressed-clm5k3vup00020tl9gyg725j1.pdf\"},\"filename\":\"meta-apple-ethical-cheat-sheet.pdf\",\"image\":{\"__typename\":\"S3ImageFieldOutputType\",\"height\":512,\"url\":\"https://s3.amazonaws.com/files.growth.design/cms/clm5k3wa600050tl90kxhh1qn.png\",\"width\":468}}],\"publishDate\":\"2023-09-04T04:00:00.000Z\",\"author\":\"Dan Benoni\",\"deckUrl\":\"https://s3.amazonaws.com/files.growth.design/cms/slides-apple-privacy-policy-3-clm6wk9jo000k0tl923tv19zl.zip\",\"slidesUrl\":\"\"},\"__N_SSG\":true},\"page\":\"/case-studies/[slug]\",\"query\":{\"slug\":\"apple-privacy-policy\"},\"buildId\":\"u-UqMY4MQ3ZCjuWnQte_3\",\"isFallback\":false,\"dynamicIds\":[27000],\"gsp\":true,\"locale\":\"en-US\",\"locales\":[\"en-US\"],\"defaultLocale\":\"en-US\",\"scriptLoader\":[{\"src\":\"https://www.google.com/recaptcha/api.js?render=6LcIPTMfAAAAAE55SCnKBcG8jCdtq9bSrwgxpWuU\",\"strategy\":\"afterInteractive\"}]}",
    "commentLink": "https://news.ycombinator.com/item?id=37433495",
    "commentBody": "Apple vs. Meta: The Illusion of PrivacyHacker NewspastloginApple vs. Meta: The Illusion of Privacy (growth.design) 360 points by Summershard 20 hours ago| hidepastfavorite330 comments daft_pink 19 hours agoI think it&#x27;s unfair to compare Facebook actively screwing us to Apple not adopting your proposed metric on their product and passively allowing a very popular app in their app store.Not a huge fan of Apple, but they aren&#x27;t Facebook. reply goalieca 18 hours agoparentApple does not have a tracking pixel on half the popular web. Apple&#x27;s main source of income is through luxury hardware and subscription services. Facebook sells your information and attention to willing buyers. reply nicce 18 hours agorootparentApple&#x27;s ad business, however, is growing all the time. And in significant margins.https:&#x2F;&#x2F;www.wired.co.uk&#x2F;article&#x2F;apple-is-an-ad-company-nowhttps:&#x2F;&#x2F;www.statista.com&#x2F;statistics&#x2F;1330127&#x2F;apple-ad-revenue... reply isodev 17 hours agorootparentApple shows ads for apps in the App Store sans behavioural targeting. If there is a kind of “ethical ads” that’s as close as it gets. reply matthew-wegner 16 hours agorootparentApple advertising extends beyond the app store, both for iOS and macOS, and is personalized by default. You can disable this in Settings -> Privacy and Security -> Apple Advertising on both platforms. reply turquoisevar 12 hours agorootparentYou’re right, it’s a bit more than the App Store.AFAIK it also includes ads in the News app and apps that load articles from the News app (e.g. Stocks app).Their fine print also mentions the TV app, but I haven’t seen ads there, so perhaps they’re referring to content suggestions.This seems to be confirmed further down the line in the fine print when it says:> We create segments to deliver personalized ads on the App Store, Apple News, and Stocks.I’d say the main difference between Meta and Apple is that the latter doesn’t combine data from different source and only relies on their own data (what Apple calls “tracking”):> Apple’s advertising platform does not track you, meaning that it does not link user or device data collected from our apps with user or device data collected from third parties for targeted advertising or advertising measurement purposes, and does not share user or device data with data brokers. reply gandalfgreybeer 2 hours agorootparentThe ads on the TV app I think are 30s trailers when playing episodes or movies (only once per session as I’ve experienced) which can immediately be skipped like a recap.It’s the only ad on a streaming service that has never annoyed me (I also like the fact that it’s not targeted). Zero ads are better but their implementation on tv plus is the least irritating I’ve experienced. reply shuckles 7 hours agorootparentprevIt&#x27;s been opt-in since at least 2021: https:&#x2F;&#x2F;appleinsider.com&#x2F;articles&#x2F;21&#x2F;09&#x2F;02&#x2F;apple-pushes-pop-... reply Zambyte 16 hours agorootparentprev> If there is a kind of “ethical ads” that’s as close as it gets.A news paper ad? A builtin board? I think advertisements that hijack your attention are always unethical. You should have to look for ads to see them. reply hinkley 16 hours agorootparentI picked up a copy of Popular Mechanics yesterday and it took me a solid 2 seconds on half a dozen pages to determine if it was an ad or an article. The styles have sort of blended together and I don&#x27;t think that&#x27;s an accident. reply nicce 13 hours agorootparentIt is the same in some digital newspapers. It is also harder to block them as ads. So called ”sponsored” articles. reply LexGray 16 hours agorootparentprevIsn&#x27;t looking at an Apple device just like looking at a newspaper? I seem to recall papers being chock full of ads outside the front page to a far greater extent than the Apple News app.Our society depends on advertising for promoting new services, gaining new customers, and building trust. I would call it a social necessity which makes it very ethical as long as it is truthful. The hijacking that occurs is consensual as you should not visit sites if you disagree with their advertising habits. Even with the App Store almost never open it directly.The ones that cannot be avoided are in the outside world. I would celebrate if every billboard, postal mail item, and other real world advertisement were banned completely as that is the part I have no direct control over. reply gochi 15 hours agorootparentThis is a super fascinating comment, because why wouldn&#x27;t you just want better advertising regulations across the board instead of trying to justify one form while proclaiming the other is harmful? reply lancesells 13 hours agorootparentprev> I would call it a social necessity which makes it very ethical as long as it is truthful.Disagree on this one. Blogs, media, social, word of mouth, etc. would still exist without advertising and would serve the purpose of all of those things. PR teams would become as large as marketing teams, things would get exploited (they already are), but we wouldn&#x27;t be subjected to distraction and manipulation.I don&#x27;t think ads are the most evil thing there is, but society would be fine without them and you would probably see a much smaller imbalance of power in wealth and companies. I&#x27;ll take 1000s of small forums compared to one big Meta. reply throwaway0223 6 hours agorootparentHonest question: what kind of \"blogs\" and \"social\" would survive without advertising? What kind of content creator can produce quality content in the long run, for free?The Verge? Nops. Techcrunch? Also not. AnandTech or Business Insider? No and no. Hackaday? Dead. NYT and Bloomberg? Maybe, and likely not. And what about your top 20 favorite YouTube creators? The majority would be gone.Sure, the long tail of quirky small bloggers would be unaffected -- they don&#x27;t really make any money today from advertising. But a lot of them are bottom-feeders; they consume content produced by others, and re-hash to add their own takes.And we&#x27;re not even talking about the second order effect -- all the ecommerce companies that would be wiped out without qualified leads and traffic. Go to any site - The Verge, Hackaday, Daring Fireball - and see the ads. Most of those companies would disappear.Is this really the web you want to live in? A web with only a handful of publications with large followings who can command premium subscription (read: The Information, NYT, Stratechery, etc), and the top x% of privileged wealthy folks who can afford paying for a bunch of subscriptions?Yes, I would call advertising a social necessity. It&#x27;s like a multi-dimension version of prisoner&#x27;s dilemma - it may not feel you&#x27;re winning, but the alternative option is much worse. reply wkat4242 5 hours agorootparentI already don&#x27;t see ads on any of the sites you mentioned and I haven&#x27;t for a decade thanks to Raymond Hill. Clearly they&#x27;re able to survive with a significant percentage of users saying nope. reply nativeit 6 hours agorootparentprevOut of curiosity, in these flights of fantastical hypotheticals where “advertising” doesn’t exist, or at least the advertising industry, why are we assuming the other features of capitalism would remain? reply rightbyte 15 hours agorootparentprevSure I agree. But there has to be some distinction between annoying but more or less harmless ads, like magazine ads and bus stop ads, and annoying ads, like the ones that might end up under your car wipers, in your bicycle basket, or mail box --- and internet spyware ads, that spy on you and sell your privacy to whoever got a dime. reply rchaud 13 hours agorootparentprevThere are ads in the Apple News app that are the same kind of garbage you&#x27;d see on Google ads. reply r0m4n0 15 hours agorootparentprevIf I&#x27;m going to see an ad, I would way rather see an ad about something I care about vs not. Have you watched the evening news on broadcast TV? That is what untargeted ads look like. I don&#x27;t have IBS but I know the names of every drug that would help me if I did.I&#x27;ve actually found furniture I&#x27;m looking for on websites I didn&#x27;t know existed on Instagram. Why is targeted ads a bad thing? reply goodbyesf 7 hours agorootparentprevWhat&#x27;s with the pathetic apple fanboyism? They are one of the biggest vaccuums of data. They will use that data for money just like everyone else. Apple&#x27;s just late to the ad game.Years ago it was google fanboyism with &#x27;don&#x27;t be evil&#x27;. Now it&#x27;s the unbearable apple privacy fanboys and the insufferable tesla&#x2F;spacex cult members. reply shuckles 7 hours agorootparentWhat&#x27;s the point of this name calling? I could call you a dead-end Apple cynic, of which there are plenty (and they&#x27;re often wrong). reply innagadadavida 18 hours agorootparentprev> In 2022, Apple generated 4.7 billion U.S. dollars with its global advertising business.> By 2022, Facebook&#x27;s ad revenues had hit $135.94 billion.$4.7B is not a small number but no where close to Facebook’s. reply kaba0 18 hours agorootparentAlso, not all ads are the same from an ethical standpoint.Displaying an app ad in the appstore upon searching for a similar term is very different than displaying ads based on your whole life, collected in malicious ways. reply bryan_w 15 hours agorootparentBut is it ok for Apple to show you an ad in the first party Stocks or News app based on what you&#x27;ve searched for and purchased in the App store? reply 2Gkashmiri 17 hours agorootparentprevI don&#x27;t own an apple device now but why does app store have ads ? After paying upwards of $1000+ on a iPhone, why can&#x27;t you expect an ad free experience on a first party app store? reply tgma 2 hours agorootparentThat&#x27;s kind of arbitrary though. Why if they wanted to price it at $2k if it were to be ad free? Would the consumer then prefer ads if offered with such choice?They are taking the risk of repelling their customer who paid $1k+ and still sees ads and they are entitled to the courage of their conviction to take that risk. reply LexGray 16 hours agorootparentprevPerhaps there is some sort of pressure by stockholders to have the ability to promote their own products and services on the device or just some sort of backroom dealings.My personal hope is that Apple course corrects at some point that they do not need to extract the extra cash while damaging the customer experience. The company feels much less customer oriented now and has lost a lot of the premium feel. I have already stopped using their TV app because they have made it nearly non-functional with the amount of promoted content. The News app has an exceptional number of subscription only items in the feed to where I am about to go back to pure RSS. The feeling is like what Google would have done with Google Reader if it was still going stuffing in promotions.I agree first party apps should be advertisement free if they are advertised as being included in the price of the phone. Otherwise it is a hidden bill you are paying with hours or days of your life that you can&#x27;t get back.I would pay for a service that just disabled all first party promotions advertisements. Give me the real price instead of wasting my valuable time with advertisements I would never click. reply csallen 17 hours agorootparentprevBecause Apple has decided so, because it makes them lots of money, and it isn&#x27;t a big enough dealbreaker for consumers to not buy iPhones. I believe the Google Play Store has ads, too. reply threeseed 14 hours agorootparentprev> why does app store have adsBecause it&#x27;s useful.It helps users discover apps that the developer believes is relevant to that keyword.I can&#x27;t think of a better mechanism for doing this without an auction style system. reply nicce 14 hours agorootparentYou could just provide better search interface instead. But that does not bring money.Or show a button to open separate window which shows related apps.But instead, we always want to bring everything instantly under our attention [in same screen, close to the line of sight]. reply vuln 17 hours agorootparentprevThey’re promoted apps, the developer pays to promote their app. This tends to help startups that name their company off some random word like _bumble_. reply MikusR 16 hours agorootparentprevEven settings app on iphones has adds. reply kaba0 15 hours agorootparentThis is the bullshit I&#x27;m talking about in another thread. No it doesn&#x27;t. Telling you about icloud which is like an inherent feature and partially the reason some people buy their phones is absolutely in no way comparable to actual ads.Do you know what has ads in settings? Xiaomi. A relative bought one and I helped him set it up, and you literally had to see an ad to listen to your ringtone!!! reply wkat4242 5 hours agorootparentIf people bought their phone because of iCloud there&#x27;s no need to advertise it to them.What&#x27;s really annoying on iOS is that persistent notification badge to \"finish setting up your account\" even when I choose not to use some apple services. reply querulous 14 hours agorootparentprevit also advertises news, music and apple tv (and probably all their services, those are just the ones i&#x27;ve noticed) reply internet101010 15 hours agorootparentprevThat is simply untrue. reply glitchc 18 hours agorootparentprevVelocity is often more important than the absolute amount in a business context. If velocity is 100% growth, year over year, it holds true for a couple of years, it&#x27;s going to draw significant attention. reply riversflow 14 hours agorootparentThis isn’t really a business context though, it’s an ethical one.I think most people would agree that velocity hardly matters here, what’s been actually done is generally what gets judgement, not where you will be in some time if you do everything the same.What you are describing is essentially pre-crime. reply hinkley 16 hours agorootparentprevApple is worth 3.5x as much as Facebook, so the expectation of revenues is 3.5x higher.If Facebook were Apple&#x27;s size they&#x27;d be doing 450 billion in ads. reply heavyset_go 17 hours agorootparentprevIf we&#x27;re going to get technical, Facebook doesn&#x27;t sell your information, it sells access to its ad network. Apple has an ad network it sells access to, too. reply dazc 18 hours agorootparentprev&#x27;Apple&#x27;s main source of income is through luxury hardware and subscription services.&#x27;So why not keep it that way? I understand the temptation of veering from the path of &#x27;do no evil&#x27; but Apple are not exactly short of revenue?Apple, Google and Meta are currently all three sides of the same coin. Take your pick but don&#x27;t claim any virtue for doing so. reply davidcbc 18 hours agorootparent> So why not keep it that way?Because capitalism incentivizes unsustainable growth at all costs. reply Draiken 17 hours agorootparentDead on. No corporation in the world can stop this once they are big enough.Maybe if you had an already rich individual keeping his company private and making an active effort to not be evil. But come on, let&#x27;s be real... reply fhd2 16 hours agorootparentI&#x27;d doubt anyone would get that rich without a) being incredibly lucky b) lacking any notion of \"good enough\". reply satvikpendem 16 hours agorootparentprevMost of the time, that growth is good for us, so we continue to keep that economic system around. reply wodenokoto 15 hours agorootparentprevThey are already tracking all users across the highest grossing App Store and all text entered into the search bar of the 2nd most used browser flows through their servers.So tracking might not be their business but they can very easily start a big business. reply Timber-6539 18 hours agorootparentprevWhat the difference between Meta&#x27;s tracking pixel and Apple&#x27;s IDFA? reply hedora 17 hours agorootparentFrom the top hit for IDFA (the wikipedia article):> Starting in iOS 14.5, iPadOS 14.5, and tvOS 14.5, users are prompted to decide whether to opt-in or out of IDFA sharing before apps can query it. This choice can be altered in Settings.[2][3] In May, 2021, Verizon-owned advertisement analytics company Flurry Analytics reported that 96% of US users opted out of IDFA sharing.[4] reply amelius 17 hours agorootparent> 96% of US users opted out of IDFA sharingIf it&#x27;s so clear that users don&#x27;t want to be tracked online, why don&#x27;t we just ban it altogether? It would solve a lot of problems. reply GeekyBear 16 hours agorootparent> why don&#x27;t we just ban it altogether?There has been a setting to turn the IDFA completely off for well over a decade.Previously, apps on iOS or Android had access to the unchanging hardware ID number of the device.> Apple notes that it will be phasing out access to the unique device identifier, or UDID, on iOS devices such as iPhones and iPads.This is a big deal, especially for any mobile ad networks, game networks or any app which relies on the UDID to identify users.https:&#x2F;&#x2F;techcrunch.com&#x2F;2011&#x2F;08&#x2F;19&#x2F;apple-ios-5-phasing-out-ud...Apple replaced the hardware ID with a random number (the IDFA) that could be reset by the user at any time, or turned off completely.Google eventually followed suit, although any app that received the. READ_PHONE_STATE permission was immune to the protections.> READ_PHONE_STATE is one of the Android permissions categorized as dangerous. This is because it “allows read only access to phone state, including the phone number of the device, current cellular network information, the status of any ongoing calls, and a list of any Phone Accounts registered on the device”.... it is often requested and misused by other types of applications that do not have any reason for needing it, including malware.https:&#x2F;&#x2F;file.scirp.org&#x2F;Html&#x2F;1-6101658_80235.htmThe recent changes at Apple were to make the IDFA opt out by default and to track the permission to use it per app instead of per device. reply sleepybrett 15 hours agorootparentprev...we don&#x27;t ban it &#x27;because lobbying&#x27;. God forbid we inconvenience the capitol holders and the advertising business. reply rchaud 13 hours agorootparentprevWho has a better chance of getting a meeting with your political representatives to discuss this? You, or Google&#x2F;Facebook? reply r00fus 16 hours agorootparentprevSure, but that requires legislation or executive action.Apple doing it unilaterally on their platform might invite anti-trust concerns. reply Timber-6539 17 hours agorootparentprevIt&#x27;s by default opt-out and am pretty sure the prompt doesn&#x27;t apply for Apple&#x27;s own apps.And since you brought out the opt-out option, one can also block Facebook&#x27;s trackers through uBlock and&#x2F;or DNS filters.The defaults are what matters. From the same Wikipedia article,> Users can opt-out of IDFA via the \"Limit Ad Tracking\" (LAT) setting (and an estimated 20% do).80% users never change the defaults. reply isodev 17 hours agorootparentOn iOS tracking and access to personal information is always opt-in. It’s literally a modal alert asking if you want to give permission when an app requests to access the IDFA for the first time.Apple’s own apps don’t need to display the prompt because as per their privacy policy they don’t collect or use information for tracking purposes (which is also visible in the privacy labels of their apps in the App Store). reply Timber-6539 16 hours agorootparent> Apple’s own apps don’t need to display the prompt because as per their privacy policy they don’t collect or use information for tracking purposes (which is also visible in the privacy labels of their apps in the App Store).This is the privacy policy [0] of an example of their app, Apple News. I quote:\"AdvertisingIn order to deliver great content to you from leading publishers, Apple News is ad supported. If the Personalized Ads setting is on, Apple’s advertising platform may use information about your account, the topics and categories of stories you read, and publications you follow, subscribe to, or turn on notifications for to serve ads that are more relevant to you. We may also use information about your subscriptions to personalize your ads on the App Store.\"[0] https:&#x2F;&#x2F;www.apple.com&#x2F;legal&#x2F;privacy&#x2F;data&#x2F;en&#x2F;apple-news&#x2F; reply isodev 15 hours agorootparentThe summary of each app&#x27;s privacy practices is easier to see at a glance using the App Store Labels: https:&#x2F;&#x2F;www.apple.com&#x2F;privacy&#x2F;labels&#x2F;In this case, you&#x27;re referring to \"Data Linked to You\". \"Data Linked to You\" is based on the account you used to sign in to the News app + your activity within the news app - to create suggestions within the News app.This does not allow Apple to track you from the News app e.g. access the IDFA of the device, sharing it with third parties or other apps. reply Timber-6539 15 hours agorootparentIt&#x27;s made clear from the policy which I took the liberty to quote here that Apple News tracks your interests and uses it to personalize ads not only inside the same app but also Apple&#x27;s App Store. Same policy states that whether you are logged in on the app or not, you will still receive ads.They claim they do not share this data with other third parties but they sure as hell use it for their own advertising ecosystem. reply daft_pink 17 hours agorootparentprevUsing an opt-out is completely different from using third party ad blocking technology and is much more friendly. I can set the IDFA opt-out on my father&#x27;s iPhone and nothing will break, but if I set him up with ublock or dns blocking and it starts breaking websites, he will be totally confused and not recognize what&#x27;s happening. Also, using hacks to block tracking is not 100% reliable and allowing the user to have a specific option like Apple does is better for the user. reply vuln 17 hours agorootparentprev> and am pretty sureTrust me bro. reply 95014_refugee 18 hours agorootparentprevMeta wants to know everything it can about you because other people will pay them for the information.Apple doesn’t.It’s really that simple. reply Timber-6539 18 hours agorootparentTo my knowledge, Apple has not invented a new form of advertising that works without tracking users. reply kaba0 18 hours agorootparentI’m fairly sure there are many forms of advertisement that works without tracking.. like a billboard.Displaying an ad next to search results based on the search query for example is similarly benign. reply charcircuit 17 hours agorootparent>that works without tracking.. like a billboard.Billboards still require tracking. If you had the option of putting a billboard up in 1 of 2 neighborhoods and it would get 10k impressions in either location which one would you choose? The optimal strategy is not to pick randomly. The optimal strategy is to predict the conversion rate of both locations. In order to do that you need to investigate who is likely to see your billboard and learn about their interests to see if they would be likely to be interested. reply cromd 17 hours agorootparentCouldn&#x27;t one say the same of any brick and mortar store? If a shoe store is going to open in my neighborhood, for example, how much data do they need for it to be optimally located? I guess they could seek out the online browsing history of all the friends of all the people living within 1 mile from the shoe store and analyze it.I don&#x27;t doubt that billboards are placed with some careful thought, but tracking is certainly not \"required\" - some aggregate stats about an area should work, especially as there isn&#x27;t much feedback on who saw the billboard and bought a product etc. reply kaba0 15 hours agorootparentprevtracking: the act or process of following something or someoneI haven&#x27;t seen a billboard that would follow me around before. Placing them at popular location depends on existing data (or often just plain-ass thinking, like obviously a hub in the middle of the town will have more people see it compared to the middle of nowhere), and only very very indirectly generates any sort of new data (e.g. if you only place a single ad in a specific place and can correlate that placement with an increase in product sales.. but that is thoroughly unrealistic and I only write it to be nitpicky with myself). reply charcircuit 10 hours agorootparent>I haven&#x27;t seen a billboard that would follow me around before.I&#x27;ve never seen a png file follow me around either. It&#x27;s the people who are selling the advertising space that are doing the tracking. They want to show how valuable of a location they can offer you. reply JohnFen 16 hours agorootparentprev> Billboards still require tracking.What billboard is tracking individuals? reply Xorakios 10 hours agorootparentSmart billboards available through Gannett (largest billboard company in US) and track license plate numbers. I used them in Florida until they were banned in 2020.Billboards that identify car types are still legal AFAIK.https:&#x2F;&#x2F;www.bmediagroup.com&#x2F;news&#x2F;vehicle-recognition-billboa... reply Timber-6539 17 hours agorootparentprevSure. But Apple didn&#x27;t invent billboards and you can be rest assured it (billboard advertising) is never coming up in an iOS update in the future!Enough with carrying water for a megacorp that makes money from selling advertising services. reply kaba0 17 hours agorootparentI am no bootlicker for any corp, but I do value and appreciate Apple’s focus on privacy, and I think that many criticisms of it is just nitpicky and doesn’t help anyone (e.g. calling that buy icloud service label an ad..).On the other hand, I very much await sideloading to be forced out of Apple by the EU. reply FireBeyond 7 hours agorootparent> I am no bootlicker for any corp, but I do value and appreciate Apple’s focus on privacy, and I think that many criticisms of it is just nitpicky and doesn’t help anyone (e.g. calling that buy icloud service label an ad..).Many of the same people who see no issue with this mock and insult Microsoft for promoting Edge etc., in Windows. And will pretzel themselves into explaining how \"that&#x27;s different\". reply lern_too_spel 15 hours agorootparentprev> I think that many criticisms of it is just nitpicky and doesn’t help anyoneThis is true, but many criticisms are valid. Apple News is user-tracking adware that cannot be uninstalled on MacOS. You cannot install an app on any of the iDevices without telling Apple. You cannot get your GPS location on an iDevice without telling Apple. Apple is spending considerable resources growing their ad business, so expect this to grow worse over time; and combined with Apple&#x27;s inclination to deny user control, there is no way to opt out without opting out entirely of iDevices. reply zie 13 hours agorootparentMeanwhile, the only competitor(Google&#x27;s Android) tracks everything you do everywhere.So Apple&#x27;s privacy perspective is way better than Android&#x27;s. Could it be better? Of course, and I&#x27;m fine with trying to pressure them to do more for protecting our privacy, but between the 2, it&#x27;s not even close, Apple is WAY more private with your data than Google will ever be. reply lern_too_spel 12 hours agorootparent> Meanwhile, the only competitor(Google&#x27;s Android) tracks everything you do everywhere.The difference is you can avoid the tracking easily. This is a direct result of prioritizing user control. You can install apps without telling anybody, you can get your GPS location without telling anybody, and so on. Apple, by denying user control, makes privacy worse for users who care, and it will only get worse as Apple ramps up its services business. replyhedora 17 hours agorootparentprevThey are called “display ads”. Apple did not invent them. If your site produces above average content, then display ads are likely more profitable then keyword ads, since they target high quality ad real estate instead of high value eyeballs. reply isodev 17 hours agorootparentprevThe IDFA on iOS is a random device identifier and not tied to your identity. It would allow an advertiser to correlate that it’s the same device that has installed several apps, nothing more. It also resets in certain situations.Facebook on the other hand, creates a grand central repository of everything there is to know about you and sells it to whoever wants to pay. Just like Google. reply halostatue 16 hours agorootparentThe IDFA is also unique per developer, if not per app. reply cscurmudgeon 14 hours agorootparentprevNeither Google or Facebook sell your data. If you get technical, be thorough. reply xbmcuser 7 hours agorootparentprevApple does not need a tracking pixel as it has better information on 50+% of Americans then facebook. Where they live where they eat who they hang out what they spend on all the info is with apple. reply go_prodev 15 hours agorootparentprevI&#x27;m not an Apple device user so I could be mistaken, but Apple devices must be collecting all of this information about their users if Facebook is able to access it. reply beebeepka 15 hours agorootparentThey are collecting lots more. I think the argument is that selling said data is not their business model. At least for now. reply cscurmudgeon 14 hours agorootparentprevThis is an AOL-level understanding of how digital ads work. reply tomcar288 17 hours agorootparentprevI don&#x27;t understand why people are so against Advertisers targetting people based on their data? what are people so afraid of?the way i see it, the worst case scenario is you get an Ad for something you might actually like... reply Keirmot 17 hours agorootparentIf that’s the worst you think it can happen, you lack imagination.I Myanmar fingerprinting helped the military find dissidents, the the US Cambridge Analytica managed to get enough data to influence an election, and there’s many more examples.Besides, if a private company can sell access to you through ads, less benevolent actors can use that access for other more nefarious practices. reply cscurmudgeon 14 hours agorootparentIf that’s the worst you think it can happen, you lack imagination.It is 2023 and you don&#x27;t need ads to influence people. E.g, TikTok not acting on dangerous trends.https:&#x2F;&#x2F;www.vox.com&#x2F;technology&#x2F;2023&#x2F;6&#x2F;1&#x2F;23742757&#x2F;kia-hyundai... reply hotnfresh 17 hours agorootparentprev1) The data are the privacy equivalent of nuclear waste. A company having it is also barely different from the government having it, directly. The data ought not be collected, period. It’s astonishingly dangerous.2) Someone following you around writing notes about everything you do doesn’t stop being creepy-as-fuck harassment just because it’s online and “at scale”. And actually a lot of this transcends the Internet and gets connected with real world activities, blurring the difference even more. It’s wrong when someone does it to a single person for some personal reason, and it’s even more wrong when a megacorp does it to everyone to make a buck.3) It harms the function of markets. Massive nearly-impossible-for-a-small-business-to-attain data-moats protect monopolies and discourage competition. It adds to the already-harmful-to-market-function information imbalance between individuals and companies. reply balderdash 17 hours agorootparentprevIt’s not the targeting, it’s the largely surreptitious compilation of the dossier about people that is so vile.If someone showed up at your house with a folder about a loved one, turns out they had been following them around town, tracking their movements, taking pictures, reading their emails, etc. I don’t think you’d be two thrilled, but hey they’re only going to use that info to target ads…pinky swear… reply thinkling 17 hours agorootparentprevFor one reason, because the data lives on forever, and these companies merge or go out of business eventually, at which point the data ends up in the hands of someone else.Data is also shared with data brokers (Acxiom and the like) which collect unknown quantities of data about you, linked to your actual identity. That data can then affect whether you get a loan or a job.Most importantly, we don&#x27;t know what&#x27;s done with the data and have no control should we want it to be forgotten. reply bloomingeek 13 hours agorootparentprevBecause it&#x27;s none of their damn business! If you are cautious in public around strangers, and you better be, why would any sane person trust a company with their personal data?!?Your question is either super naive or you have a stake in facebook or apple. reply heavyset_go 17 hours agorootparentprev> the way i see it, the worst case scenario is you get an Ad for something you might actually like...That&#x27;s hardly the worst case scenario when there are countless stories like \"Facebook Allowed Advertisers to Target Users Interested in “White Genocide” — Even in Wake of Pittsburgh Massacre\"[1].There&#x27;s also the time Facebook&#x27;s targeted ads were used to facilitate genocide in Myanmar[2][3].[1] https:&#x2F;&#x2F;theintercept.com&#x2F;2018&#x2F;11&#x2F;02&#x2F;facebook-ads-white-supre...[2] https:&#x2F;&#x2F;www.globalwitness.org&#x2F;en&#x2F;campaigns&#x2F;digital-threats&#x2F;r...[3] https:&#x2F;&#x2F;www.amnesty.org&#x2F;en&#x2F;latest&#x2F;news&#x2F;2022&#x2F;09&#x2F;myanmar-faceb... reply charcircuit 17 hours agorootparent>when there are countless stories like \"Facebook Allowed Advertisers to Target Users Interested in “White Genocide”What&#x27;s wrong with that? The more interests available the better ads can be targetted.>There&#x27;s also the time Facebook&#x27;s targeted ads were used to facilitate genocide in MyanmarThe article doesn&#x27;t mention ads were used. It just sounds like Facebook was connecting people based off a common interested people shared. reply Timon3 13 hours agorootparentGenerally speaking it&#x27;s never a good idea to stoke the fire of unfounded fears in people. Doing so directly leads to stochastic terrorism and other horrible things.There are more important things in this world than money. Surely we can all agree that \"better ad targeting\" isn&#x27;t worth human lives? reply potamic 16 hours agorootparentprevAdvertisers can sell you things at higher prices if they know you have more money. The first rule of negotiation in business is that information is power. reply barrysteve 14 hours agorootparentprevI mean, come on. WW2 and all that.What&#x27;s the worst that could happen... sheesh why don&#x27;t we not find out for a change.Watch the 10hr long interview documentary called Shoah and listen to how trains, buildings and institutions were used to do &#x27;the deed&#x27;.It was impossible to tell what was going to happen ahead of time for the victims, they assumed they were heading to a labour camp and being assigned a block of soap and sent to the showers was a good thing...Why does this even need to be said! Do we not know our dark european history?Conserving the known good we have, is not an &#x27;immediate fail&#x27;, as many futurists would indulge in saying...At least you know now where you can discover one reason (of many) as to why some people are wary of collective control. reply makeitdouble 18 hours agorootparentprevLooking at Apple&#x27;s latest reports, their services and App Store revenue has become the main vector of growth. Considering this includes App Store ads, gambling apps and the bulk of it is in-app purchases, I don&#x27;t see Apple having a moral high ground. reply ksec 19 hours agoparentprev>Not a huge fan of Apple, but they aren&#x27;t Facebook.Not a Fan of Facebook, but Facebook never claimed to be the defender of Fundamental Human Right or the Guardian of Privacy.Some people like to label them as evil or the less of evil. I like to label them as evil and hypocrite. reply tobr 14 hours agorootparent> Facebook never claimed to be the defender of Fundamental Human Right“Our Commitment to Human Rights” https:&#x2F;&#x2F;about.fb.com&#x2F;news&#x2F;2021&#x2F;03&#x2F;our-commitment-to-human-ri...> or the Guardian of Privacy.“Upholding Our Commitment to Protecting Your Privacy” https:&#x2F;&#x2F;about.fb.com&#x2F;news&#x2F;2023&#x2F;05&#x2F;upholding-our-commitment-t... reply factorialboy 18 hours agoparentprevIncorrect. Apple actively screws us. Just a couple of years ago, launching apps became incredibly slow for some time. Diagnosis: Apple&#x27;s telemetry web service was having hiccups: https:&#x2F;&#x2F;forums.macrumors.com&#x2F;threads&#x2F;mac-apps-not-opening-or... reply vore 18 hours agorootparentI would be hard pressed to call a transient operational issue of their service \"actively screwing\" you. reply factorialboy 18 hours agorootparentYou missed the point. Apple tracks every app launch. And reports it to an external server. Not localized. Not anonymized. reply tomnipotent 17 hours agorootparentYou didn&#x27;t make a point. App telemetry is absolutely benign compared to the kind of invasive ad tracking that Facebook participates in. There&#x27;s no shortage of horror stories of poorly implemented Facebook Pixel integrations passing sensitive user data that marketers then use to create custom ad campaigns.Most recent examples that come to mind:https:&#x2F;&#x2F;www.extremetech.com&#x2F;internet&#x2F;341111-tax-filing-websi...https:&#x2F;&#x2F;gizmodo.com&#x2F;sat-college-board-tells-facebook-tiktok-...https:&#x2F;&#x2F;www.theguardian.com&#x2F;society&#x2F;2023&#x2F;may&#x2F;27&#x2F;nhs-data-bre...https:&#x2F;&#x2F;themarkup.org&#x2F;pixel-hunt&#x2F;2022&#x2F;12&#x2F;13&#x2F;out-of-control-d... reply Draiken 17 hours agorootparentIt might be less awful, but in no way, shape or form it is benign. reply tomnipotent 17 hours agorootparentApple is using the data first-party only and isn&#x27;t reselling or otherwise making it available for third parties to use. Explain how it&#x27;s not benign, other than \"tracking bad\". How does it harm consumers, or put customers at risk? reply Draiken 16 hours agorootparentBecause it will. It&#x27;s simply inevitable because of the system we live in. At some point or another, they will need to grow revenue and suddenly that trove of data they have collected beforehand, regardless of its initial purpose, will be used to screw customers.The only way to protect against this is to not let them have that in the first place. Once they have it, it&#x27;s impossible to guarantee it won&#x27;t be misused sooner or later. reply vore 15 hours agorootparentApple has a pretty good revenue stream already without using telemetry for advertising, which is why they&#x27;ve been able to position themselves as so privacy focused. Maybe that might change in the future, but like it or not, the Apple ecosystem is lucrative enough already that it seems pretty unlikely they would be nefarious about it anytime soon. reply Draiken 14 hours agorootparentI agree with you. But my point is that how it looks now is irrelevant. The world changes. CEOs change. Incentives change.What won&#x27;t change is the ultimate goal of any company: profit above all else. reply musictubes 13 hours agorootparentHow it looks now is not irrelevant. It is how I decide what to use. If things change in the future I will react to it then. reply tomnipotent 15 hours agorootparentprevI don&#x27;t think you&#x27;re going to convince anyone by pulling some fiction out of thin air and trying to pass it off as inevitable truth. With regards to Apple, there&#x27;s more evidence refuting you than supporting you. reply Draiken 15 hours agorootparentThis inevitability is inherent to our system. It&#x27;s not specific to Apple.I don&#x27;t need to convince anyone of this. History will repeat itself as it always does. reply tomnipotent 14 hours agorootparentWhat an absolutely absurd generalization wrapped in aphorism. There is nothing in history that is absolutely repeated in all instances, nor is \"history repeats itself\" a valid argument that proves anything other than lazy thinking. replysatvikpendem 16 hours agorootparentprevWhat is this false dichotomy? Both can be bad, even if one is less bad than the other. It doesn&#x27;t make either \"benign.\" reply tomnipotent 16 hours agorootparent> It doesn&#x27;t make either \"benign.\"It&#x27;s literally benign by definition. benign adjective a: of a mild type or character that does not threaten health or life b: having no significant effect : harmlessProvide evidence or argument that it&#x27;s not benign. reply satvikpendem 16 hours agorootparentAll tracking is bad, therefore it&#x27;s not benign. Benign tracking is no tracking. reply tomnipotent 15 hours agorootparent> All tracking is badAll absolutes are wrong. I can play that game, too. replythreeseed 14 hours agorootparentprevIt can&#x27;t be done locally since Apple needs the ability to revoke certificates at will. reply threeseed 14 hours agorootparentprevThat wasn&#x27;t a telemetry service.It was the service that validates the application certificates which is fundamental to the security of the platform. reply fmajid 17 hours agoparentprevIf anything the article gives Apple unjustifiable benefit of doubt. Apple exempts itself fron the IDFA transparency requirements it imposes on third-party app developers, and has drawn legal scrutiny in France and the EU, among others:https:&#x2F;&#x2F;gizmodo.com&#x2F;apple-iphone-analytics-tracking-even-whe...Then there is their scanning of iCloud backups for CSAM without being forced to do so by law, something Meta hasn&#x27;t done with WhatsApp, and obviously not Signal either. CSAM today, messages critical of the powers that be tomorrow, they breached a fundamental ethical line in end-to-end encryption and they are thus now completely untrustworthy on encryption.Apple&#x27;s marketing is very effective, but the idea that they are any better than the other Big Tech firms on privacy is just that, marketing fluff without substance if you dig but a little. None of them can be trusted. At this point the only way to really protect your privacy is to connect to the Internet using a MiFI or similar router running open-source software and implementing an outbound firewall blocklist like Jordan Geoghegan&#x27;s unbound-adblock:https:&#x2F;&#x2F;geoghegan.ca&#x2F;&#x2F;unbound-adblock.html reply fh9302 17 hours agorootparentCan you show a source for your iCloud backup CSAM scanning claim? These days iCloud supports E2EE so they have no ability to scan once you enable it.Signal does not support any cloud backups and WhatsApp uses iCloud so this seems like a flawed comparison. reply RedComet 12 hours agorootparentEven with e2ee enabled for iCloud, Apple has access to hashes of the plaintext files. reply giancarlostoro 19 hours agoparentprevI was going to say, nobody believes in any privacy Meta alleges. Even when they do E2EE they still collect anything else about you that they can. reply GeekyBear 19 hours agorootparentNobody believes anything Meta or Google have to say about privacy.Google is currently trying to sell additional ways to spy on users built into the newest version of Chrome as a \"privacy sandbox\".> all of Google&#x27;s documentation about this feature feels like it was written on opposite day, with Google calling the browser-based advertising platform \"a significant step on the path towards a fundamentally more private web.\"https:&#x2F;&#x2F;arstechnica.com&#x2F;gadgets&#x2F;2023&#x2F;09&#x2F;googles-widely-oppos... reply carimura 18 hours agorootparentCorrection: \"Nobody who regularly reads Hacker News believes anything Meta or Google have to say about privacy.\" reply edgyquant 18 hours agorootparentprevWho brought google up? They aren’t relevant to the discussion. reply doublerabbit 18 hours agorootparentHow are they not relevant. They suck data from you for money.Exactly what Twitter, Microsoft and Amazon do too. reply GeekyBear 18 hours agorootparentWhen Google started bragging to it&#x27;s advertising customers that it now buys a copy of everyone&#x27;s credit&#x2F;debit card transaction data, that was my personal bridge too far.> as Google said in a blog post on its new service for marketers, it has partnered with “third parties” that give them access to 70 percent of all credit and debit card purchases.https:&#x2F;&#x2F;www.technologyreview.com&#x2F;2017&#x2F;05&#x2F;25&#x2F;242717&#x2F;google-no... reply soperj 18 hours agorootparentprevAnd Apple now with their ad business. How are they fundamentally different? reply GeekyBear 18 hours agorootparentAdvertising doesn&#x27;t require that you relentlessly spy on users, it&#x27;s just more profitable if you do so. reply Draiken 17 hours agorootparentThen you know what will happen. They will relentlessly spy on their users.This is a for-profit company. It will always do what is more profitable, even if they don&#x27;t do it right away. reply GeekyBear 16 hours agorootparent> Then you know what will happen.There is an interesting lesson you can learn from history: Google Maps vs Apple Maps.Google set up their system to track each individual&#x27;s location history forever, even if the user turned off the setting that Google said would stop this behavior. This data can be handy when you&#x27;re trying to keep map data updated.However, you don&#x27;t have to track each user&#x27;s location constantly to get the benefit.> “We specifically don’t collect data, even from point A to point B,” notes Cue. “We collect data — when we do it — in an anonymous fashion, in subsections of the whole, so we couldn’t even say that there is a person that went from point A to point B.The segments that he is referring to are sliced out of any given person’s navigation session. Neither the beginning or the end of any trip is ever transmitted to Apple. Rotating identifiers, not personal information, are assigned to any data or requests sent to Apple and it augments the “ground truth” data provided by its own mapping vehicles with this “probe data” sent back from iPhones.Because only random segments of any person’s drive is ever sent and that data is completely anonymized, there is never a way to tell if any trip was ever a single individual.https:&#x2F;&#x2F;techcrunch.com&#x2F;2018&#x2F;06&#x2F;29&#x2F;apple-is-rebuilding-maps-f... reply Draiken 14 hours agorootparentThat&#x27;s an awesome story and I&#x27;d love to believe that&#x27;s how it will always be. But I can&#x27;t.I&#x27;m sure we could find great examples of other companies that made similar privacy aware decisions, only to then turn around and throw all that out of the window for increased profits.Call me skeptical, but these entities have one purpose: profits. Why would I trust they won&#x27;t ever misuse my data? reply GeekyBear 11 hours agorootparent> these entities have one purpose: profitsA bit more history.A shareholder once berated Tim Cook for doimg things for reasons other than profit.Tim Cook&#x27;s response:> When we work on making our devices accessible by the blind, I don’t consider the bloody ROI [return on investment]. When I think about doing the right thing, I don’t think about an ROI.”If you want me to do things only for ROI reasons, you should get out of this stock. reply musictubes 13 hours agorootparentprevThat was the point of their post. Apple isn’t collecting that data. They collect very little data for the little advertising they do. Once they start collecting more invasive things like Meta and Google do then sure, avoid them. replydoublerabbit 18 hours agorootparentprevI agree. Apple has always had an advertising business, remember apps with ad banners in the early IOS store?However the fundamental difference is that their model is being an hardware company. reply GeekyBear 18 hours agorootparent> Apple has always had an advertising business, remember apps with ad banners in the early IOS store?Remember what their advertising clients disliked about Apple&#x27;s ad platform compared to the likes of Facebook and Google?> A new report on Advertising Age has revealed what advertisers think of Apple&#x27;s arrogance when it comes to its mobile advertising platform and its tight grip on user data.\"One person familiar with the situation exec said Apple&#x27;s refusal to share data makes it the best-looking girl at the party, forced to wear a bag over her head,\" the AdAge report read.https:&#x2F;&#x2F;www.techtimes.com&#x2F;articles&#x2F;3568&#x2F;20140222&#x2F;apple-cares... reply heavyset_go 17 hours agorootparentThis is a decade-old story, and neither Google nor Facebook sell or share data, they sell access to their ad networks. Apple sells access to their ad network, too. reply smoldesu 18 hours agorootparentprevTheir \"ecosystem\" model is why we need crowbar legislation like Europe&#x27;s DMA to force interoperability. Make no mistake, Apple is playing for keeps just as hard as Google is: https:&#x2F;&#x2F;httptoolkit.com&#x2F;blog&#x2F;apple-private-access-tokens-att...All of these companies deserve their due scrutiny. Specifically around the illusion of privacy though, nobody has further to fall than Apple. reply musictubes 13 hours agorootparentRight, Apple has the most to lose if they resort to the business model of Facebook so they have an incentive to stick to what they are doing. reply smoldesu 6 hours agorootparentTheir userbase is more-or-less captive either way. All of FAANG is boiling the frog, just at different speeds. replyTrainedMonkey 18 hours agorootparentprevThat is because of business models - Apple sells you stuff, Meta collects all the info about you and sells that to other people... It&#x27;s very hard to have privacy when your paycheck depends on selling data. reply paulryanrogers 18 hours agorootparentIncreasingly Apple sells you services and has tried ads, likely will again reply giantrobot 18 hours agorootparentApple sells services? That you elect to use and pay for? The nerve of them! reply paulryanrogers 18 hours agorootparentSorry if the implication wasn&#x27;t obvious. Once they sell B2C services it&#x27;s just a matter of time before that too becomes ad supported, then your data (or at least eye balls) are for sale. reply epistasis 18 hours agorootparentWhy are dollar-for-service inevitably going to switch to ad supported? I can&#x27;t imagine the necessity of that, you already have a paying customer. reply davidcbc 18 hours agorootparentBecause you always have to be squeezing more money from somewhere to keep your stock going up and ads are an easy place to get it reply pulisse 17 hours agorootparentAd serving is a (very) low-margin business, and only profitable with huge impression counts. Apple services (think iCloud storage plans) are high margin, with comparatively few opportunities to serve ads. There would be zero point to injecting ads into service contexts (as opposed to something like App Store views). reply epistasis 16 hours agorootparentprevDo you have some examples of services going from fee-for-service to fee-and-ads-for-service? I am coming up blank. The closest that I can think of are areas that had been as based but then added fees as well, such as TV. reply paulryanrogers 14 hours agorootparentCable TV, Netflix, Kindle, Windows reply amelius 16 hours agorootparentprevSee Smart TVs. reply epistasis 16 hours agorootparentGood point! And I guess that also brings in all the gunk that I hear gets installed on Windows from a lot of systems integrators. Which, funnily enough, has been one of the clear market differentiators for Apple. reply giantrobot 17 hours agorootparentprevThat just doesn&#x27;t follow. You&#x27;re making multiple leaps. First that Apple is going to add or switch to ad support for their services. The second is those ads will be as invasive as Facebook ads. reply paulryanrogers 14 hours agorootparentFair point, yet you pay a premium for Apple hardware and get ads for Apple services constantly. ICloud red dot until you sign up&#x2F;in, media play&#x2F;pause always defaults to opening Apple Music, nags to use Safari, etc replypb7 17 hours agorootparentprevThis is wrong. They do not sell user data. reply bugglebeetle 18 hours agorootparentprevI also don’t believe any privacy that Apple alleges, given their actions in China, attempts at iCloud scanning, etc. Post-Snowden, it would seem naive to believe in any such assertions, beyond the level of “this might protect me okay against average criminals, assuming I install all the latest updates and use features like lockdown mode.” reply kaba0 17 hours agorootparentI don’t see China’s relevance here: they have two choices: play by their rules or leave on the table shitloads of money. Maybe not morally the best decision, but it is not black-and-white evil I would say. For a Chinese person that also has to play by the same rules it is an added choice, and since all are similarly hijacked by the government this aspect doesn’t make it any worse.Also, CP scanning was deliberately proposed as a way to actually enable e2e icloud - but they just didn’t want to be liable, as storing CP encrypted on their servers may also be problematic. So, I don’t see them malicious against privacy at all, in fact that is a core selling point of theirs, it would hurt them greatly to cheapen it out. reply Scoring6931 16 hours agorootparentIt boggles my mind that some people don&#x27;t see the relevance.Apple provides a backdoor into Chinese citizens&#x27; iCloud to the Chinese government, while praising itself as the bastion of privacy.Doing so because of money is all the more hypocritical. reply kaba0 15 hours agorootparentSo what, there is ios and ios China. You are using the former. Would a separate Signal China invalidate the whole protocol?Sure, on a local moral compass it is no good look, but if Chinese people are forced by their governments into that -- is really a private company from another country supposed to fight with them over it? In any other case I think you would agree that private companies should STFU about local laws, right? That fight is on the Chinese people. reply bugglebeetle 17 hours agorootparentprev> I don’t see China’s relevance here: they have two choices: play by their rules or leave on the table shitloads of money.This is also exactly how the US operates WRT state surveillance, so it confuses me that you don’t see the relevance. reply carimura 18 hours agorootparentprevTechnically they backed down from CSAM scanning after public pressure. Can we say the same thing about Google and&#x2F;or Meta? reply xtanx 18 hours agoparentprev> I think it&#x27;s unfair to compare Facebook actively screwing us to Apple not adopting your proposed metricI don&#x27;t think they were comparing. They were basically saying that Apple is complicit to what Facebook (and others) are doing with regard to data collection. reply carimura 18 hours agoparentprevTo be fair they aren&#x27;t. They are demonstrating how Apple is a willing participant obfuscating the actual privacy monstrosities happening by Meta. reply JKCalhoun 19 hours agoparentprevAgree. But the point of the post appears to be to push Apple toward disclosing these bad actors and dark patterns.Shaming Apple might work. (I think we already know that shaming Meta will have no effect.) reply giancarlostoro 19 hours agorootparentYou mean... like this?https:&#x2F;&#x2F;www.apple.com&#x2F;legal&#x2F;transparency&#x2F;https:&#x2F;&#x2F;www.apple.com&#x2F;privacy&#x2F;government-information-request... reply nirvdrum 18 hours agorootparentI&#x27;ve read this a few times and I unfortunately can&#x27;t understand how you meant this since it can be read a few different ways. Those links are for government data requests, but what&#x27;s being requested in a privacy report for apps on the platform. Assuming you&#x27;re asking if Apple should make a site like that but for non-government bad actors, I think the answer is \"yes\". That&#x27;s the sort of transparency report being asked for, but broken down by the app or organization asking for that data. Ideally that would lead to the market pressuring such apps or organizations to only request the data they actually need. reply giancarlostoro 16 hours agorootparentYeah, that&#x27;s all I&#x27;m asking, and maybe its linked to on their pages with info for each app. reply divbzero 14 hours agoparentprevOP is not saying that Apple and Meta are comparable, but rather that Apple should actively protect us to live up to their pro-privacy stance. reply godelski 13 hours agoparentprev> I think it&#x27;s unfair to compare Facebook ... to AppleThey aren&#x27;t?They&#x27;re saying Meta is screwing us and that Apple could do more to protect us. That they spend a lot of time and money talking the talk but they don&#x27;t so much walk the walk. They sure do a bit, but they could do a lot more. Article definitely isn&#x27;t saying Apple is as bad as Meta and Meta is 100% the \"bad guy\" in the story. It&#x27;s just that our castle walls (Apple) are shiny but not strong. The Great Wall isn&#x27;t so great if it isn&#x27;t keeping the Mongolians out and you definitely shouldn&#x27;t be advertising it as such when it doesn&#x27;t. reply KaiserPro 15 hours agoparentprevAnd yet apple make so much noise about privacy, but don&#x27;t activly block access to personal information.Like why do they allow access to the health data stored in the phone?It&#x27;s almost like they need facebook to be the devil so they can say how good they are. reply lost_tourist 15 hours agorootparentYou have to opt in to that tho? Some apps do need your health info because they&#x27;re a health&#x2F;activity app. reply atarian 18 hours agoparentprevAgreed, it’s an apples to oranges comparison. reply josefresco 19 hours agoparentprevApple is allowing nefarious actors into their \"walled garden\". See the \"security theater guy\" referenced in the article. If you want the benefit of having a \"walled garden\" to extort developers (30%) and control customers (offloading not allowed), you need to take responsibility when someone you admit into your walled garden harms users. reply jonhohle 19 hours agoprevI wonder what it will take for people to finally get fed up with creepy advertising companies.I received a letter from Target that by default they’ll sell my information to unaffiliated third parties and I have to call or write a letter to opt-out. I’m sure I agreed to that at some point (and anyone signing up for a loyalty program that doesn’t cost anything should realize that’s what they are agreeing to, even if they are not explicitly told that), but perhaps they should be required to explicitly list the actual costs to the customer along side the benefits.Last week I was picking up a prescription at CVS. In between confirming name and address and signing for payment or receipt of Rx they slipped a marketing agreement that I stupidly agreed to before realizing that it wasn’t an agreement related to the prescription purchase. So in someone’s compromised medical state (assuming), when you just want to get medicine to get back to normal they hide an agreement to sell information.None of this improves my life. I just want to transact money for items and end the relationship until it happens again. I don’t need every advertiser knowing every one of or even habitual purchase I make.If you work in ad-tech or are responsible for these front-end schemes to collect more information:1: screw you2: it’s super creepy and even if you’re not creepy, the stuff you’re working on and the people you are working for are3: seriously, it’s really disgusting, immoral, and deceptive to find all manor of ways to trick people into agreeing to sell personal information that they assume (rightly) is private (even when done in public)4: start leaking information on schemes, tricks, & loopholes so something can be done to destroy invasive ad tech reply heavyset_go 17 hours agoparent> None of this improves my life.Now you&#x27;ll get some ads that recommender systems think they should show you, based on your shopping experience at CVS, that could be potentially embarrassing if you have anyone over, or have someone else using your devices.I was able to guess a family member&#x27;s previously private medical condition based on the ads they got while I was at their place. reply draugadrotten 13 hours agorootparentYou know, I hate privacy-intrusive ads...but if a business would present me with an honest option to click on - \"Show me your best guess what you think I want to buy!\" - I would enjoy clicking on it. When I want. Because I do want to shop, and I do want to buy. I just hate being monitored in secret and nudged in secret to influence my behaviour against my own will. Let me shop - be transparent about your AI recommendations, and I might even buy the suggestion. Just stay away from the shady stuff. reply ianlevesque 15 hours agorootparentprevAnd you validated this with them? Deity help whoever tries to diagnose me based on my ads. reply heavyset_go 2 hours agorootparentYes, we&#x27;re on good terms, know each others&#x27; medical history and it was recognized that there was no malice in asking \"is there a reason I keep seeing ads for X?\" where X is a medication for some condition that&#x27;s more innocuous than asthma. reply endisneigh 19 hours agoparentprev> I wonder what it will take for people to finally get fed up with creepy advertising companies.As long as people get \"free stuff\" people won&#x27;t get fed up. reply Matumio 2 hours agorootparentI went to a routine check-up at the ophthalmologist. Later I got an email with the PDF bill. Except the PDF wasn&#x27;t in the email.I had to visit the site of whatever service provider they use. I had to login with 2FA and accept their terms. The terms allow third parties to send me targeted advertisement based on my medical history. (They are very explicit about that. I guess that&#x27;s progress... This is in Europe.)So the stuff I get \"for free\" when I sell my medical history is the right to view my own medical bills. If I don&#x27;t agree, I just get charged some random amount via my health insurance. I could bother them to share their copy, but by default they don&#x27;t. reply ryandrake 19 hours agorootparentprevWhat \"free stuff\" is OP getting from Target and CVS in exchange for the data they are collecting and sharing? Nothing. We&#x27;re already not getting free stuff and people still aren&#x27;t fed up. reply jonhohle 19 hours agorootparentAdmittedly, Target gives 5% off to RedCard members. So I should know going in that they’re going to want more than my “loyalty”.I suppose that’s the loyalty pact customers are agreeing to. They agree to continue patronizing a business after that business flies behind their back to tell everyone what, when, and where they’re doing in their store.However, if they’re not tracking you with a loyalty card, they’re still tracking you with your normal CC (Walmart has some messed up integrations with third parties around media purchases). Cash, privacy masks, sporadic gate changes, faraday bags, and gloves may be the only way to get around tracking at the moment ;-) reply amelius 16 hours agorootparentprevThe free stuff is the website that shows the ad, at least that&#x27;s what they want you to believe.But ... it&#x27;s not really free since the ad will just make products more expensive, since now you also pay for the adtech that&#x27;s involved (besides paying with your personal data). reply riversflow 14 hours agorootparentIf what you describe were economic reality, ads wouldn’t be a thing. The reality is that ads allow a vendor to reach significantly more customers, paying for the ads.You can see this with the rise of ultra specialty online stores we’ve seen in the last decade thank to targeted advertising. reply amelius 14 hours agorootparentI don&#x27;t see the logical connection between my comment and yours.Yes, ads make people buy more stuff.Is that a good thing? My comment doesn&#x27;t say anything about that.But anyway, my guess is no, because it leads to overconsumption, and exhaustion of natural resources.Also:> 96% of US users opted out of IDFA sharingMeaning that users really do not want to be tracked. reply riversflow 13 hours agorootparentI was replying to this.> will just make products more expensive, since now you also pay for the adtech that&#x27;s involvedThat’s not generally how the economics of advertising works. If it were, advertising wouldn’t be very successful&#x2F;important.People don’t like the idea of being tracked, but my experience is that they like the results.. Especially all the extreme specialty niche products that simply wouldn’t exist without targeted ads. reply amelius 13 hours agorootparentThat&#x27;s a huge assumption on your end, that people like the results of ads more than they do not want to be tracked. replyendisneigh 19 hours agorootparentprevTarget and CVS are not \"advertising companies\". And if you&#x27;d like you can pay cash, no? The indirection (ad company to retailer) is intentional. reply nirvdrum 18 hours agorootparentGiven companies are doing subject tracking with in-store cameras and can use facial recognition to tell who you are, cash isn&#x27;t going to be sufficient. They&#x27;ll be able to build a pretty compelling shopping profile and can tie associate your cash purchases to your profile. Sure, it&#x27;s not 100% fool-proof, but it doesn&#x27;t need to be to be a massive privacy invasion. I suppose you could wear a mask, but that&#x27;s generally frowned upon in stores. reply OmarShehata 17 hours agorootparentThe industry is still struggling to track who&#x27;s clicking on ads properly in all cases...we&#x27;re very far from this idea of tracking cash purchases & building a profile with facial recognition. This sounds like science fiction. Are there any companies actually doing anything like this?Closest thing I know is companies who sell \"foot traffic\" data, of who walks in front of your store. But that&#x27;s done with phones pinging wifi networks passively as you walk, not anything as fancy as facial recognition.Example: https:&#x2F;&#x2F;grapeseedmedia.com&#x2F;blog&#x2F;foot-traffic-data&#x2F; reply nirvdrum 17 hours agorootparentI think the problems with click fraud are orthogonal. They&#x27;re a different domain with different characteristics and different solutions.Facial recognition has been deployed to combat shoplifting [1][2]. Amazon Go is a store built around not needing to check out at a register at all. Microsoft offers Azure Kinect [3] as a way for retailers to track people moving through a store. There&#x27;s no shortage of companies purporting to use AI to analyze in-store video in real-time to analyze customer behavior [4][5]. There was a video shared on this site a few weeks back showing a coffee shop tracking both customers and baristas [6] (more discussion there, including some skepticism).I&#x27;m speculating that if they can track you in the store and build a profile on you that they&#x27;ll be able to track your cash purchases. I don&#x27;t think it&#x27;s a terribly large leap to tie into their point of sale terminals but I don&#x27;t know if any retailer is currently doing that or even planning to do that.[1] -- https:&#x2F;&#x2F;youtu.be&#x2F;g5Xf9Y6-RS4?si=De7EZTyVD66BQPeG[2] -- https:&#x2F;&#x2F;www.nytimes.com&#x2F;2023&#x2F;06&#x2F;28&#x2F;technology&#x2F;facial- recognition-shoplifters-britain.html[3] -- https:&#x2F;&#x2F;azure.microsoft.com&#x2F;en-us&#x2F;products&#x2F;kinect-dk&#x2F;[4] -- https:&#x2F;&#x2F;viso.ai&#x2F;features&#x2F;[5] -- https:&#x2F;&#x2F;twitter.com&#x2F;jowyang&#x2F;status&#x2F;1214657642313871360[6] -- https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37186806 reply yomlica8 17 hours agorootparentprevK-Mart apparently tracks with facial recognition.https:&#x2F;&#x2F;www.abc.net.au&#x2F;news&#x2F;2022-07-13&#x2F;bunnings-kmart-invest... replyspandrew 13 hours agorootparentprevIt doesn&#x27;t matter whether it&#x27;s free or you&#x27;re paying either — your consumer data from the grocery store and other retail purchasers is already tied to the ad grid too. If you buy a can of cat food you&#x27;ll get cat toy ads on Instagram.The harsh reality, despite what privacy pundits might say, is that people... just don&#x27;t really care. And that&#x27;s fine? It&#x27;s great Apple lets me tell an app not to track me. But if they didn&#x27;t? It doesn&#x27;t make material difference to me. Okay I bought cat food and now I see cat toys Instagram ads that I may or may not buy... okay?It&#x27;s not like insurance companies are able to use the data to deny you health coverage or something (yet, anyway). It&#x27;s just used to support more consumerism atm. When that bridge is crossed then people might care, until then ¯\\_(ツ)_&#x2F;¯ reply frankish 13 hours agorootparentDo you not see a problem with ads in Instagram in general? Ads follow us everywhere and there&#x27;s no escape.I&#x27;m personally against ads in my mail, billboards, and pretty much everywhere else where my default context is not to buy something. If I go to a pet store and get cat ads--even based on my preferences shopping there--then I think that would be fair. But ads are currently way too aggressive and essentially stalk us everywhere.Another aspect is how misleading and&#x2F;or manipulative they are. Why aren&#x27;t ads more reasonable with a tl;dr about the product and then some pros&#x2F;cons of it over alternative options? reply MikusR 18 hours agoparentprev>I wonder what it will take for people to finally get fed up with creepy advertising companies.As long as they continue to make shiny new i devices - nothing. reply JohnFen 16 hours agoparentprev> wonder what it will take for people to finally get fed up with creepy advertising companies.I wonder this every day. I got fed up years ago. Now, I&#x27;m simply enraged by it all. And, worse, it&#x27;s an impotent rage since there&#x27;s nothing I can do about it.I already block as much tracking as possible, avoid giving money to companies that engage in these practices (or that make use of the services of companies that engage in these practices), pay in cash in physical stores, avoid online shopping as much as possible, etc.And none of it is enough. Ad companies are at war with people, and are winning. reply godelski 13 hours agoparentprevFYI, most loyalty programs you can sign up for without giving any information if you&#x27;re willing to use a card. If you aren&#x27;t, usually they accept invalid or random phone numbers.Of course this isn&#x27;t a solution and we should resolve the issue, but it is at least a partial stop gap. reply envy2 19 hours agoprevYes, ad-supported social apps collect a ton of data. But the Apple privacy widget list is just a catch-all since people can post anything and Meta uses post content for ad targeting.Have you gone through Apple&#x27;s onboarding flow recently? The process of creating an Apple ID and setting up an iPhone is pretty similar, and has similar click-wrap terms to allow endless data use, including [1], [2], [3], [4], and [5].Apple has done a very good job of marketing privacy. But they engage in pretty much all of the same practices they call others out for.Also, Threads didn&#x27;t launch in Europe because of DMA data separation requirements between products. It has nothing to do with the invasiveness of the data collected per se as is implied here [6].[1] https:&#x2F;&#x2F;www.apple.com&#x2F;legal&#x2F;privacy&#x2F;pdfs&#x2F;apple-privacy-polic... [2] https:&#x2F;&#x2F;www.apple.com&#x2F;legal&#x2F;privacy&#x2F;data&#x2F;en&#x2F;apple-id&#x2F; [3] https:&#x2F;&#x2F;www.apple.com&#x2F;legal&#x2F;sla&#x2F;docs&#x2F;iOS16_iPadOS16.pdf [4] https:&#x2F;&#x2F;www.apple.com&#x2F;legal&#x2F;internet-services&#x2F;itunes&#x2F; [5] https:&#x2F;&#x2F;www.apple.com&#x2F;legal&#x2F;internet-services&#x2F;icloud&#x2F;[6] https:&#x2F;&#x2F;www.theverge.com&#x2F;23789754&#x2F;threads-meta-twitter-eu-dm... reply raspyberr 19 hours agoprevPrivacy blog post. vercel-insights.com, www.google.com, &#x27;Sign up with Google&#x27;, Join 132,793 people from companies like: Microsoft, Amazon, facebook, Google, Disney\"There it is again. That funny feeling.\" reply otterley 16 hours agoparent\"Gotcha! I am very intelligent.\"https:&#x2F;&#x2F;i.kym-cdn.com&#x2F;photos&#x2F;images&#x2F;original&#x2F;001&#x2F;259&#x2F;257&#x2F;342... reply hatefulmoron 16 hours agorootparent>\"the XYZ corp is bad!\">please stop supporting them>\"https:&#x2F;&#x2F;i.kym-cdn.com&#x2F;photos&#x2F;images&#x2F;original&#x2F;001&#x2F;259&#x2F;257&#x2F;342...\" reply daneel_w 18 hours agoparentprevIronic, isn&#x27;t it. And the author apparently has nothing at all to say about Android and Google. reply nirvdrum 18 hours agorootparentThe article is about Apple because Apple is the one billing itself as the vanguard of privacy and as the privacy-preserving opponent of Android. It&#x27;s also quite possible the author doesn&#x27;t have or use an Android device. If you&#x27;ve invested in a platform for reasons related to privacy, I think it&#x27;s quite okay to be concerned when that platform falls short on some pretty big privacy invasions. reply daneel_w 17 hours agorootparentThey bill themselves as the privacy-protecting opponent of Android because iOS&#x2F;iPadOS doesn&#x27;t commit to breaches of privacy the way Google does in, well, pretty much all of their products. So how does Apple fall short, and how are they the ones committing privacy invasions? By allowing third-party applications on the App Store? By not rejecting every app they don&#x27;t like? They&#x27;re doing users the favor of letting them know what information apps can collect so that users can make informed choices. reply nirvdrum 16 hours agorootparentMaybe I misread your intent, but it sounded like a \"gotcha!\" on the original post because the author didn&#x27;t dive into something with even worse privacy protections. Google and Android don&#x27;t need to be brought up every time Apple privacy is being discussed. For a huge swathe of people it&#x27;s an irrelevant point. And, yes, I believe Apple could do better. Being better at privacy than Google isn&#x27;t a monumental hurdle to clear. We can and should push all parties to do better.> They&#x27;re doing users the favor of letting them know what information apps can collect so that users can make informed choices.The whole point of the article is that this information is hard to find and hard to understand. The author is suggesting Apple find a better way to present that data. That would help consumers make a more informed decision. Many people don&#x27;t realize just how pervasive that tracking is. Perhaps surfacing that data would help consumers pressure bad actors into being better citizens.Moreover, I&#x27;d argue they should also use their platform to rein things in. It&#x27;d be nice if they used their position to improve the privacy of their users. It&#x27;s their walled garden. It&#x27;s their platform. It&#x27;s their APIs being used. The App Store already has a bunch of rules, most of which benefit Apple, so I don&#x27;t think it&#x27;s a huge leap to add one that protects consumers. And a lot of the current privacy issues are a result of Apple and Google building a new platform that gives apps unprecedented access to personal data. I think they have a responsibility to clean up that mess.If that means apps like Threads aren&#x27;t viable, so be it. But, I suspect Meta would be able to find a way to make a social media app that doesn&#x27;t need to track so much. reply advisedwang 15 hours agorootparentprevI count 3 articles about or comparing Google products on their site: https:&#x2F;&#x2F;growth.design&#x2F;case-studies reply wiseowise 17 hours agorootparentprevWhy should they? They compare Meta and Apple, aren’t they? reply daneel_w 17 hours agorootparentThe article tries to make it out as if it&#x27;s about privacy and integrity in general. Google is all the way up at the top of the list of crooks together with arseholes like Meta. reply warkdarrior 13 hours agorootparentThat&#x27;s whataboutism at its finest!A: \"I will write an article about Apple&#x27;s and Meta&#x27;s privacy practices.\" B: \"But what about Google???\" reply daneel_w 12 hours agorootparentIt&#x27;s not whataboutery. I&#x27;m not the one being accused of anything here. Meta and Apple are, and there are no good reasons to bring up two of the world&#x27;s top three giants in a privacy abuse discussion while conveniently leaving the third one, the biggest one, out of it. There are only bad reasons for it. replyfh9302 19 hours agoprevThis article seems to conflate Apple for Meta&#x27;s privacy violations. Yes, the OS can always make it more difficult to do fingerprinting and the app store could add even more \"privacy warnings\", but in the end if you use a privacy violating third party app they will always find ways to slurp up all your data. Using this as some kind of argument that Apple doesn&#x27;t care about privacy is dishonest. reply wredue 19 hours agoparentAnd uh. Let be honest with ourselves here.Our alternative is currently android.So instead of meta slurping up all your shit, google vacuums it all up and then some, and lets even more of it trickle in to meta. reply toastal 19 hours agorootparentUnless you go the custom ROM + microG option that 98% of folks would never do… or you embrace the Linux phone OS which has no ‘apps’ (like that banking app that banned you for rooting your other Linux (Android) phone) & the telephony barely works if it even does.This duopoly sucks. reply orf 17 hours agorootparentIt’s telling that you think 98% of users wouldn’t do that. It’s 99.9999% of android users my friend. reply toastal 16 hours agorootparentGood to know that extra 1.9999% was worth a comment. It’s pretty similar to the number of desktop Linux users even (edit: which seem to be over 3% now actually, great). reply orf 14 hours agorootparent1.9999% of android users would form the 19th largest country in the world by population. It’s absolutely worth clarifying a difference of that scale when you’re talking about something niche. reply toastal 14 hours agorootparentAnd I want to be a citizen of that country. The Indian custom ROM hackers can be the ruling class with the amount of CPU it takes to build Android & their good will to release it for us. reply soperj 18 hours agorootparentprevI just use my banking website from my phone. Why install apps? reply toastal 18 hours agorootparentMy bank is detecting Netscape Navigator 4 & you better bet it’s a horrible experience for small viewports, & generally a buggy experience altogether (scoping other sites in my country, they are all just as bad).This is also presupposing the Google doesn’t get its Web Environment Integrity (WEI) initiative foisted upon us allowing the banks to do the same sketchy attestation that they can do with apps from the browser--meaning they could deny you from running an alternative OS, disabling TPM&#x2F;Pluton&#x2F;Secure Boot, to having admin&#x2F;root access like they block it on phones for dubious reasons. reply hoppyhoppy2 17 hours agorootparentprevMy bank and credit union allow me to deposit checks from my phone via the apps; their websites don&#x27;t offer that option. reply toastal 16 hours agorootparentIn my country, bank transfers with vendor is usually done via QR code scanning which isn’t supported on the site. The flow for the site would required adding the vendor (even for a one-time transaction) to your bank contact list, manually inputting all of the account numbers&#x2F;phone&#x2F;email, then going back & selecting it—something no vendor wants to wait on. If you haven’t done it in 20 minutes, you will be logged out with no cancel logout pop-up & paste has been disabled for … ‘security’? reply soperj 13 hours agorootparentprevHonestly can&#x27;t recall the last time I&#x27;ve had to deposit a cheque. reply heavyset_go 17 hours agorootparentprevI&#x27;ve seen authentication flows that require you to login, or confirm logins, via the bank&#x27;s app if you&#x27;re trying to use the account outside of the app itself. reply JohnFen 16 hours agorootparentprevI&#x27;m not even willing to do that. I physically go to a bank branch to interact with my bank. reply toastal 6 hours agorootparentLargely this isn’t possible for e-commerce. Some might say it’s just convenience, bun there are a lot of goods only reasonably available online. reply imwillofficial 19 hours agorootparentprev98%? 100% effectively. reply jkubicek 19 hours agorootparentprevYou can also just not use any Meta apps. It won&#x27;t completely prevent Meta from building a shadow profile on you, but it&#x27;ll help. reply hospitalJail 19 hours agorootparentprevDon&#x27;t you need to use Google on Android for them to even have your data? I&#x27;ve seen this propagated, but I havent experienced it.Anyway, in the decade of using android, I am not sure what privacy has compromised. I havent received any custom ads from just using my phone.If I search stuff on the official google search, yes I do, but if I use incognito, I do not. (For instance, I like seeing sports scores occasionally, but if I search it with google, I&#x27;m bombarded about sports).Google search isnt Android though. reply wredue 17 hours agorootparentGoogle isn’t collecting your ethnic status to retarget ads. I mean, maybe it changes results a bit.They’re collecting ethnic status to sell to Cambridge analytica to steal elections. reply TheMode 19 hours agoparentprevThe OS is the layer below applications. They obviously can control what data is being sent.Now perhaps that our software model doesn&#x27;t make it very convenient, but blaming Apple is completely honest and understandable.We should stop seeing our computers as uncontrollable machines that must leak data, they are human made reply dwaite 18 hours agorootparentCould you propose a way to do this? Looking for anything that resembles PII on-screen and cutting off network access, perhaps? reply kaba0 17 hours agorootparentprevHow exactly does that work, similarly to this self-driving algorithm? if (gonna_hit_another_car()) { dont() } reply sfc32 19 hours agoprevThat was a fun little presentation, nothing super-new there but it did have a good idea about showing the trust level of the application with a badge.All credibility was then swept away by \"Sign up with Google\" to the mailing list on the last page. Hilarious. reply endisneigh 19 hours agoprevIf you want privacy guarantees do not install or use anything connected to the internet. Even HN - with stylometry and a motivated actor it&#x27;s easy to correlate your username here with any other publicly written text. An even more motivated actor could do this with privately written text (you know, all of those data breaches).Stay offline for your safety.This is obviously unrealistic for many in the modern era. So now the question is - regardless of how much or what is collected, which companies are least likely to sell you out, by any means? By pretty much any criteria Apple is near the top of that list. Though, they&#x27;re not the very, very top. Companies like Mullvad offer services in a way such that nothing is collected at all, and since you can pay cash in theory no way to come back to you.Personally, for me - it&#x27;s more important to think about whether or not you trust the organization you&#x27;re dealing with, than whether or not they&#x27;re collecting stuff or not. Of the big tech companies I&#x27;d say I trust Apple the most from their track record, but I am not under any illusion that I have absolute privacy while using Apple products, and neither should you. reply appplication 19 hours agoparentUnless you’re a public figure with troves of available text to your name, I don’t really buy the idea that stylometry could be used to identify normal folks or even link accounts between platforms. I would need to see some reality compelling evidence. Especially because character limits and different use patterns for different platforms could throw a wrench in things. reply LoganDark 19 hours agorootparentThere are probably plenty of people on here with easily identifiable writing styles, either due to neurodivergence (like me) or whatever else. Though, it wouldn&#x27;t be necessary for me because my username is just my real name and I already use it everywhere anyway. reply renewiltord 19 hours agorootparentprevThe HN stylometry site (now dead) was actually pretty effective. reply Scoring6931 16 hours agoparentprevUnless you&#x27;re Chinese, right? https:&#x2F;&#x2F;www.nytimes.com&#x2F;2021&#x2F;05&#x2F;17&#x2F;technology&#x2F;apple-china-ce... reply e93849 18 hours agoparentprevApple collects your data for the same reason Google & Meta do: to sell ads. The only thing Apple is better at is PR. reply airstrike 19 hours agoparentprevyou can easily solve stylometry by just passing all your comments through an LLM that rewrites them in a different style or by creating throwaway accounts for each thread (not hard to automate either) reply JohnFen 16 hours agoparentprevPersonally, I literally cannot think of a tech company that I trust even a little bit. reply YeBanKo 16 hours agoprevSimple fix.Ballot measure to replace the “right to be forgotten” with the “permission to be remembered”, that need to be renewed every, 1-3 years. If companies fails to obtain permission in 3 years, then it must remove your data. Such permission is non transferable, meaning that if you started an account with Good Company, Inc. and it was acquired by Evil Corp, Inc. The latter need to get a new permission under the new name. Oh, and data brokers can’t have your info, unless they ask you for permission.Right to “opt-out of sale” needs to be replaced with “option to opt-in”. Basically meaning you opt out by default and companies need your explicit permission to sell you data. reply RandomWorker 16 hours agoparentI like it, but what if we train a neural network that remembers all the data in its weights? My sense is that these companies are using large (deep neural network) models to make their recommendation systems work. We can&#x27;t ask the neural network to selectively forget a person, at least to my ability. reply kyle-rb 14 hours agoparentprevPlease don&#x27;t force Twitter to delete more of my favorite inactive accounts. reply YeBanKo 14 hours agorootparentContent != pii. reply kyle-rb 12 hours agorootparentA lot of content contains PII, and I&#x27;m pretty sure the &#x27;right to be forgotten&#x27; GDPR laws don&#x27;t distinguish; it&#x27;s just \"your data\" in general that&#x27;s deleted. reply monetus 19 hours agoprevIt is crazy how disingenuous this comic is. I get that it was fun to make, but damn I wish that it informed rather than propagandized. reply boesboes 20 hours agoprevFuck me that’s the worst UX I’ve seen in ages reply flanbiscuit 19 hours agoparentI had the opposite reaction, but I&#x27;m on my laptop. It looks like they are using RevealJS (https:&#x2F;&#x2F;revealjs.com&#x2F;). I mention that because I originally went in thinking of this as an \"article\" with an alternative UX, but in reality it&#x27;s just a slide show.I did just try it on my mobile (Firefox, Android) and this format definitely doesn&#x27;t translate well. I put it in landscape and it just shrink down the desktop site to fit. I feel like they should either encourage people to read on desktop or have an alternative mobile version. reply nicce 18 hours agorootparentOn desktop it was very good. On mobile... well I had to switch to desktop. reply jsnell 19 hours agoparentprevThreads or the site? reply XMasterrrr 19 hours agorootparentBoth. reply lost_tourist 15 hours agoparentprevIt&#x27;s super simple, left&#x2F;right keys for 95% of it, why is that a bad UX? reply slipshady 1 hour agorootparentI could barely read or navigate on mobile despite being prompted to ‘flip to landscape’. I gave up on the page. reply taneq 17 hours agoparentprev\"Use your KEYBOARD ARROWS to view the story\" reminds me of the way Minecraft Legends pops up a hint saying \"Press [left mouse button graphic] to start\" when you click or press space or escape or literally any other commonly used \"ok that&#x27;s nice, please proceed\" key.If you understand my intent well enough to post a passive-aggressive note telling me how I should ask to move to the next part, you understand me well enough to just skip to the next fkn part.Edit: Just launched Minecraft Legends to confirm details and that it still does this. Apparently it&#x27;s changed a bit but still pops up \"Press [left mouse button] to start\" on the splash screen and, if you hit space, changes to \"Press [picture of enter key] to start\" so I feel my point stands.Edit2: Oh and when a cinematic starts... if you hit Esc it pops up a similar tip saying \"Press ␣ to continue.\" WHAT DID YOU THINK I WANT- ugh I&#x27;m over it. reply KineticLensman 19 hours agoparentprevFirst it told me ‘pro-tip’ that I was holding my phone wrong and when I did rotate to landscape mode, it ignored the rotation. I applied some ‘critical ignoring’ at that point, as per a peer article reply 75 more comments... GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The article investigates the tactics employed by Apple and Meta to gather user data under the guise of providing privacy.",
      "It delves into the role of psychology and user experience (UX) techniques in data collection strategies.",
      "While these companies claim to protect user privacy, their underlying methods might contradict these assurances."
    ],
    "commentSummary": [
      "The article raises privacy issues centered around tech companies including Apple, Meta (Facebook's new name), and Google, with users and advertisers expressing concerns over targeted advertising and data collection.",
      "There's a debate on the ethical implications of various tech companies' data practices, with some criticism aimed at Apple's control over user data, while others commend Apple's privacy measures in comparison to other industry leaders.",
      "The dialog also touches on the use of facial recognition technology and intrusive ads, emphasizing the broader need for privacy protection and more transparency from all tech companies."
    ],
    "points": 360,
    "commentCount": 330,
    "retryCount": 0,
    "time": 1694181156
  },
  {
    "id": 37433681,
    "title": "Flexport is rescinding a bunch of signed offer letters",
    "originLink": "https://twitter.com/typesfast/status/1700092765798048093",
    "originBody": "Flexport is rescinding a bunch of signed offer letters for people who were starting as soon as this Monday. I am deeply sorry to those people who were expecting to join our company and won&#39;t be able to at this time. It&#39;s messed up. But no way around it, we have had a hiring…— Ryan Petersen (@typesfast) September 8, 2023",
    "commentLink": "https://news.ycombinator.com/item?id=37433681",
    "commentBody": "Flexport is rescinding a bunch of signed offer lettersHacker NewspastloginFlexport is rescinding a bunch of signed offer letters (twitter.com/typesfast) 343 points by lopkeny12ko 20 hours ago| hidepastfavorite448 comments ok_coo 5 hours agoCan we stop seeing their job postings on HN every other day now?I don’t know how you don’t get blacklisted after something like this. reply throwawayjob123 2 hours agoparentThe way the job postings are abused around here is a bit of a joke, there’s another company who has been hiring their third employee for over a year now, either they have someone and are lying as their first interaction with people or they can’t hire people or maybe they keep firing employee number 3 before they get any shares.Who knows which one it is but I wouldn’t want to work with people like this. An easy solution is just let people comment on job listings, it will soon prevent abuse and allow people to get clarification and learn more about the work environment. reply gundmc 5 hours agoparentprevThey&#x27;re a ycombinator company. All of the job postings are. reply vinay_ys 3 hours agorootparentWhy don&#x27;t the job postings follow the karma system? reply danpalmer 42 minutes agorootparentIt’s a “perk” of Ycombinator investment. From what I understand the exposure is supposed to be the same, probably to help boost early stage companies.I’ve wanted to comment on job listings many times, but it’s part of the deal of being on HN. This isn’t just here for fun, it’s here to promote Ycombinator and further their goals. reply lostlogin 4 hours agorootparentprevAh, so ultra-whitelist that crap behaviour then.More constructively, it would seem the perfect time to demonstrate model behaviour. reply wanderingmind 2 hours agoparentprevIf HN wont block it maybe someone can tell how to block these Flexport jobs with a ublock filter. reply game_the0ry 19 hours agoprevAm I the only one who thinks you should not give a 2 week notice to your current employer when you get an offer, so that in the event your offer gets rescinded, you still have your current job?I get a ton of push back when I suggest this, but am I being unreasonable when I am trying to look out for my own interests when I know my employer wont? My employer can weather a few bad months, but some people can&#x27;t lose income for more than one month.Or are most employees are too scared to piss off some people they might not ever see again anyway? reply Aurornis 8 hours agoparentThis would be good advice in a world where rescinded offers are extremely common and employers refused to take people back after their 2 weeks notice.However, the opposite is true: Rescinded offers are extremely rare. When it does happen at a company of reasonable size, it’s so surprising that it’s a headline like this one. We’re here talking about it because it’s an extraordinary occurrence, not a common thing that happens all the time.When you over-index on rare risks like rescinded offers, you start to lose sight of what you risk by doing things like quitting jobs without notice. Your professional reputation may end up mattering more than you think some day, and disappearing from a job without notice is the kind of thing that people remember you for.Refusing to give any notice because you might possibly have a 1-in-10,000 rescinded offer reminds me of my grandmother-in-law who refused to fly on an airplane out of fear of airplane crashes. She definitely avoided death by airplane crash, but in the process she missed out on a lot of vacations and family events.Don’t overindex on the rare thing. reply NikolaNovak 8 hours agorootparentThis.I know that HN zeitgeist, weirdly, in some strange way likes to be \"interchangeable cogs in a machine\" (focus on standard easily employable tech stack, avoid learning company-specific stuff, change jobs frequently, be easily replaceable); but in a LOT of companies leaving with no notice puts everybody (coworkers, management, business, client - real human beings) in a crazy bad spot.Many large companies have a checkbox on whether a leaving employee is rehireable. I&#x27;ve seen enough people leave then come back, that it may not always be as ok as it seems to burn those bridges - not to mention that in some ways industry is surprisingly \"small\" - people move and bad reputation spreads. If Bob asks Fatima who worked with James, should he hire him - you can bet this&#x27;ll come up. And if that feels like a low hypothetical risk - it&#x27;s a lot higher than risk of rescinded offers. reply Apocryphon 7 hours agorootparent> likes to be \"interchangeable cogs in a machine\"This is totally a response to the employer side. When companies are laying off people en masse with little regard to either performance or years of service rendered, they reveal themselves to regard their workforce as interchangeable cogs. We are living in a market that encapsulates the adage, “your company will let you go without a second thought.” reply aspanu 6 hours agorootparentMy understanding of why companies cannot purposely show that they take perf or years of service into account has more to do with labour law than a lack of caring. You cannot take into account perf in a layoff - if you did, you are not allowed to call it a layoff, AFAIK. reply doktorhladnjak 5 hours agorootparentCompanies absolutely take perf and years of service into account for layoffs. It’s not always the same process or formula but those are popular terms in such a formula, along with pay, location, role. reply Eisenstein 5 hours agorootparentprevThat doesn&#x27;t sound right at all. You would want to lay off the bottom performers, it isn&#x27;t a lottery. Imagine if a company said &#x27;we need to get rid of 20% of our labor cost&#x27; and just ran a random number generator and got rid of the people who&#x27;s number came up. reply SanderNL 3 hours agorootparentprevApparently nobody cares, because both consumers and employees keep flocking to the same soulless behemoths en masse to get their fix and their CVs padded.Also, employees will dump their employer the second they can. Let’s not pretend this is a one-way street. reply ReptileMan 3 hours agorootparentprevAnd that is a reason to turn yourself into indispensable cog, not the best replaceable there is. reply throwawaysleep 7 hours agorootparentprev> but in a LOT of companies leaving with no notice puts everybody (coworkers, management, business, client - real human beings) in a crazy bad spot.Not my problem.Luckily for them, I stay because I practice overemployment. reply noirbot 6 hours agorootparentI mean, it is your problem if you like any of those people and expect them to maybe be part of your career network in the future. I know I&#x27;d have a hard time considering referring someone who gave zero notice when quitting. Sure, it&#x27;s just business, but that&#x27;s some pretty anti-social behavior. The person who had to stay behind to clean up the mess you left is unlikely to ever want to help you in the future, or take your call if you want to hire them onto your team at some pointYou can certainly make it less abrupt in other ways - let people know beforehand or such, but if I showed up on Monday and one of the other senior folks on my team just was gone with no notice and didn&#x27;t talk with me again, it would be hard to just treat that as normal. reply moate 5 hours agorootparentThere’s this one cool trick I learned where labor solidarity means telling coworkers ahead of quitting but not managers. Also not everyone needs “their network” to get jobs. This employee karma from fucking management I’m always threatened with has never been real in any industry I worked in. reply NikolaNovak 3 hours agorootparentprev>> Not my problemThat is a personal choice and perspective you make, comfortably from a throw away account. reply hef19898 3 hours agorootparentprevHonest question, what is overemployment? I never heard that term before. reply throwawaysleep 2 hours agorootparentWork two or more full time jobs at the same time remotely. Each company assumes I am exclusively their own employee. reply hef19898 1 hour agorootparentOk, your choice. You do know that you risk loosing both if they find out? And in my neck of the woods they will, since full time employment pays into social security and employers receive feed-bavk in the form of their respective contributions.Nothing I&#x27;d recommend, and just for loosing employment, but also for mental health.All that of course goes for two full time jobs. One full time job and some side jobs are acceptable. And unfortunately for some a necessity to make ends meet. replyaetherson 8 hours agorootparentprevI think the super-hot job market in tech from 2012ish to 2022ish has really led a lot of people to underrate having a good professional reputation. When you were competing with 10 other companies to try to get a candidate, you couldn&#x27;t be too fussy about \"hey, why do you have a string of short tenures,\" or \"did you get a kinda lukewarm reference from so-and-so.\"So now we&#x27;ve got people saying, \"Hey, don&#x27;t worry at all about making your employer mad,\" in an environment which favors employers over employees. It&#x27;s shortsighted, unless we return to ultra-hot job market in a year and this is a one-time difficulty. reply Apocryphon 7 hours agorootparentThe mass layoffs this year, almost universally executed on seemingly arbitrary criteria with little regard to performance or seniority, would seem to indicate that employers certainly don’t care about making employees mad. Any pretense of reciprocity has been destroyed this year. reply hef19898 3 hours agorootparentThere never was any pretense to begin with, people just happened to realize that lately. In tech that is.That being said, your relationship is with your, former and current, co-workers. I am rather good in blowing bridges up if I think someone else put them on fire first. But even then, I took great care of who was on the other side, as much for my own sake as for the sake of my reputation and relationships with others.Because even if you don&#x27;t give a single f** about your employer, your co-workers will remember as would you. Especially if all of a sudden the job market is favouring employers again. reply great_psy 4 hours agorootparentprevYes and no … Just because somebody does not care about making an employee mad, it does not mean they will get a job if they do.You might think your employer is horrible, but it’s the ones that smile and stay how great the company is that will get hired.When you NEED a job, people will go back to being company-pleasers. reply Scoring6931 2 hours agorootparentprevIt&#x27;s always been the case.But now it happened in FAANG so it burst the bubble of the proportionally few who used to feel special. reply scarmig 8 hours agorootparentprevAgreed that rescinded offers are not something to worry too much about. And, worst case scenario, you can often go back to your old team if you left on good terms.It would be nice, though, if you had some certainty of some support, though switching jobs inherently entails some risks. If you&#x27;re recently hired and there are to be layoffs in the next month, you will absolutely be on the chopping block. I&#x27;d love there to be something like unemployment insurance, except effective immediately such that spectacularly bad luck while switching jobs doesn&#x27;t ruin you (and ideally that imposes some penalty on the hiring employer, who recklessly hired you and put your well-being at risk) and large enough to maintain people&#x27;s fixed costs. That&#x27;s more of aHell, 16 weeks plus 2 weeks per year of tenure is GENEROUS.You call it generous, Germany calls it the law (depending on tenure, with some other European countries having a similar timeframe), and somehow non-FAANG non-tech companies are also able to stomach it. This is obviously very influenced by a very high demand for stability in Germany, but I also find it crazy how little people in other countries expect from their employers. reply doktorhladnjak 5 hours agorootparentprevWARN requires certain employers in most circumstances to give 60 days notice or pay at least 60 days of severance when laying off reply NikolaNovak 8 hours agorootparentprevThat&#x27;s just... Not even remotely true in my neck of the woods.Everywhere I worked at:- if individual is not performing, people spend months trying to help them gear up before even considering laying them off- if large layoffs are happening, there&#x27;s time and severance. Even the ones we see in the news and perceived as sudden and unfair, the notification may be unexpected, but you&#x27;re rarely laid off effective tomorrow. reply Apocryphon 7 hours agorootparentWrong on the large layoffs point. Plenty of them occurred with no warning this year. And often with little to no justification, not only to the individuals let go but even simply from a business rationale. reply gymbeaux 5 hours agorootparentprevThere&#x27;s one&#x27;s own experience, and then there&#x27;s empirical data. Your comment isn&#x27;t adding any value to this discussion because it&#x27;s just one in a sea of hundreds of millions.Hell what about that mortgage company where people found out they were laid off because they couldn&#x27;t log in to their fucking laptops? reply fragmede 5 hours agorootparentMortgage company? Shit, that&#x27;s how some people at Google found out they were laid off. reply indecisive_user 8 hours agorootparentprevMost large companies that do layoffs give over a month of notice+severance. Perhaps they&#x27;re not required to, but to be given less than a 2 week heads up with no severance is pretty rare. reply gymbeaux 5 hours agorootparentHow large? I don&#x27;t think Allstate does this and they&#x27;re Fortune 100. There were layoffs&#x2F;a reorg back in 2018 in at least Allstate Benefits division but I don&#x27;t think anyone got severance. I think everyone with more than X years of service was automatically not considered for severance. I know there are many former coworkers who are still there who certainly aren&#x27;t still there because of their talent. Age is the only factor that comes to mind. reply hef19898 3 hours agorootparentprevIt is kind of funny, from the other side of the pond, that as soon as lay offs start, the loose labour protection laws in the US seem to be less cool. I remeber when people complained that the long notice peruods in Europe as such a pain for start-ups and employees alike. See how the perspective changes when your own paycheck is on the line. reply willcipriano 59 minutes agorootparentOn the other hand when you get unemployment in the US you are still taking home more than a European. reply hef19898 42 minutes agorootparentOn the other, other hand, as a European, your kids don&#x27;t have to go through active shooter training at or fear to be killed there.One thing people, and it seems this is a problem among the higher paid HN espcially but not exclusively, is tgat money is not everything. And comparing life quality based on how much money someone has is quite frankly pretty sad. And something the truely rich couldn&#x27;t care less about.Oh, and I forgot, us poor underpaid Europeans tend not to have student debt in any shape or form. Also something to consider. reply j-bos 7 hours agorootparentprevSometimes the boss gives a wink and a nudge though reply smeej 9 hours agoparentprevIf you&#x27;re in a role that is even remotely security sensitive, including having any kind of direct communication with clients, odds are also pretty high that they&#x27;ll just accept your resignation immediately and not have you work out the two weeks.It&#x27;s more or less the same reason they typically don&#x27;t give notice to people in those roles when they&#x27;re getting laid off and just surprise them with it out of the blue. There&#x27;s slightly less risk you&#x27;ll say or do something harmful when you&#x27;re the one who chose to leave (and if they have half a brain, they should realize you could already have done whatever you were going to do in the previous two weeks too), but it happens a lot. reply jjav 2 hours agorootparent> If you&#x27;re in a role that is even remotely security sensitive, including having any kind of direct communication with clients, odds are also pretty high that they&#x27;ll just accept your resignation immediately and not have you work out the two weeks.Not my experience at all, from many high-level roles with access to everything. I&#x27;ve always stayed at least 2-3 weeks for a clean transition. reply MikeTheRocker 18 hours agoparentprevI am coming around to this line if thinking much more lately. Especially if you work at a big company in a fungible role. The power imbalance is such that it costs the company essentially 0% of their assets to abruptly terminate you, but for most people it would start a countdown to financial ruin measured in weeks to months. The only snag is that I would feel remorseful for the former coworkers I would be saddling with undue additional workload. reply Aurornis 8 hours agorootparentThere’s another risk you’re not accounting for: Reputational damage.The professional world is smaller than you think. A few years from now you may want a job with someone who works with someone who knows your old boss. They’ll ask for a reference because it’s so easy to find these connections in the era of LinkedIn. When someone leaves a company without notice, that tends to become the thing they’re remembered by. And it’s not a good look.The risk of a rescinded offer is vanishingly small. Choosing to optimize to avoid that tiny risk in exchange for a near guarantee of damaging your reputation is not a good trade. reply gymbeaux 5 hours agorootparentI&#x27;m not sure that&#x27;s really an issue in the era of remote work. The word on the street is that it&#x27;s hard to find a SWE job these days. There&#x27;s also a lot of talk about RTO (return to office). The two are not necessarily correlated industry-wide, though it may appear that way. If it&#x27;s really that it&#x27;s hard to find a SWE job, remote or no, then I wouldn&#x27;t worry about professional reputation. I&#x27;m not sure that you can make an impact&#x2F;gain real seniority without both impressing and pissing off people. reply CapstanRoller 10 hours agorootparentprev>I would feel remorseful for the former coworkers I would be saddling with undue additional workloadHuh? How do you control the workload of your team, especially as a departing IC?Do you mean you&#x27;re a manager who piles on the work then quits? reply p1esk 9 hours agorootparentI think he meant if he leaves, his coworkers would have to take on his tasks. That’s why I like sprint based development - if my boss wants me to do something unplanned, he has to remove something planned first. reply xkqd 8 hours agorootparentYeah, after almost a decade of “agile” I’ve never seen this to be the case other than when I was super green. Usually, everything’s high priority and it needs to be delivered by day XYZ&#x2F;ASAP regardless of sprint alignment or milestones. reply p1esk 6 hours agorootparentMy boss and I plan tasks at the start of each sprint, and once the tasks are chosen the only way to add a more is to remove something from the sprint. Asking more output from me than what was agreed upon would be similar to me asking my boss for more money. In both cases it’s perfectly reasonable to refuse the request (unless I underperform or am underpaid), and if either side is not satisfied, part ways. replyYeBanKo 3 hours agoparentprevI am in touch with my former coworkers and some managers. Over my work career sometimes i followed them, sometimes they follow me. I may not have loyalty to the company, but i have loyalty to my team. reply hef19898 3 hours agorootparentThis! I am putting my job, as in the thing I was hired to do and achieve first (sometimes at the expense on my relationships with other people, as this turned out to be not helpfull, who&#x27;d have thought, I try to not do that as much anymore) as long as I am supposed to do said job. I am loyal to my team, as long as long as we do that job together. Both things stop if the job is no longer a thing. But then there is a core group of people I worked with, that forms a team sorts that extends across jobs, companies and even industries.The moment I realize I cannot be loyal to my team anymore, and there are different eeasons for this, it is time to step back and think about what to do next. reply polishdude20 18 hours agoparentprevThat may be what we see happening more and more in the future. The recommended \"give two weeks notice\" will be something we stop recommending to young grads (or any other employee for that matter). As employers push in the direction of distrust, the employees must do what&#x27;s right for them in reaction to this distrust. reply bozhark 6 hours agoparentprevAt will is at will reply duxup 7 hours agoparentprevI don’t think rescinded offers are common enough to bother. reply groby_b 9 hours agoparentprevHey, it&#x27;s an at-will employment place, that goes both ways.If your company would like that to be different, they have the option to offer you a contract that stipulates notice periods for either side. (And that means you are guaranteed employment during the notice period, IIRC). They chose not to.So they are ipso facto OK with you leaving without notice. reply Aurornis 8 hours agorootparentThe employer version of this is severance, not a notice period. Your logic is flawed.Getting severance is better than a notice period anyway because you can get a new job and still get the money. reply gymbeaux 5 hours agorootparentThe employer version is bringing you into a meeting with HR and telling you you&#x27;ve been let go. Sure, sometimes people get severance, but I&#x27;ve never worked anywhere that does that. reply colordrops 9 hours agorootparentprevIt&#x27;s crazy how so many people don&#x27;t get this. There is no loyalty from the company, so employees should not give any loyalty back. reply gymbeaux 5 hours agorootparentIt feels like there are a swarm of bootlickers downvoting all of these anti-corporation comments. Anyone who defends a company is a sell-out. \"Boss makes a dollar, I make a dime...\". reply roflyear 18 hours agoparentprevWell, in the US at least, you&#x27;re not obligated to give notice, but yes you could (and will) burn bridges. reply game_the0ry 18 hours agorootparent> ...you could (and will) burn bridges.You burn bridges when you leave anyway. I have never had go back to an old employer, and I have worked at a lot of companies.Personally, I focus on building new bridges, rather than maintaining old ones that don&#x27;t lead anywhere new. reply oxygen_crisis 9 hours agorootparentI&#x27;ve never gone back to a company I&#x27;ve left before, but more than once I&#x27;ve gone back to working for someone I reported to before, at a different company.The analogy is flawed, because the \"old bridges\" can move and wind up along your path forward. reply pdpi 18 hours agorootparentprevI have gone back to a previous employer once. Got separated&#x2F;divorced shortly after changing jobs so just needed to go back to a place where I already had a support structure built.At any rate, you&#x27;re not just burning bridges with companies, you&#x27;re burning bridges with people. Your team mates are the ones who get royally fucked over when you leave with no noticee and (therefore) no handover. They&#x27;re also the ones who have the choice to invite you along for the ride when they land roles in cool new companies, or to block you if&#x2F;when you apply to those companies. reply toomuchtodo 12 hours agorootparentI have worked in tech for 20+ years and have never held it against people who left with no notice. I still provide a positive reference or bring them with to new orgs, as long as they’re competent and decent people. No one owes notice.I only don’t provide positive references or don’t bring with shitty people, even if you’re exceptional talent. reply gymbeaux 5 hours agorootparentprevIf one&#x27;s abrupt departure \"royally fucks\" the team they are leaving behind, IT IS PROBABLY THE COMPANY&#x27;S FAULT and they&#x27;re just trying to use you under the guise of \"well so and so left\". Why is your \"team\" so reliant on a single individual? What about the bus problem? Sometimes people die suddenly... so in that scenario, you&#x27;re what, saddled with a bunch of extra work (really shouldn&#x27;t be hard for a team of say five to absorb the work of one - heck efficiency improves somewhat per Mythical Man Month), but you can&#x27;t be mad at the guy who was hit by a bus and is no longer on your team... so who are you mad at then? Gotta be the company right? Just be mad at the company no matter the reason your teammate left.Teammate leaves and sabotages the project or whatever, obviously another story. reply hooverd 6 hours agorootparentprevDo you also hold it against people who are laid off with no handover? reply objektif 8 hours agorootparentprevWhy do people take it personally when you leave abruptly. It is a job. reply jjav 2 hours agorootparentprev> You burn bridges when you leave anyway.Not usually and you shouldn&#x27;t.> I have never had go back to an old employerPeople do go back to old employers. I&#x27;ve had old employers reach out trying to hire me back.The most important point though is that it&#x27;s people, not companies. Those people will move around to other companies and you want them to try to hire you again. reply ithkuil 5 hours agorootparentprevIt&#x27;s not uncommon to leave a company A go work for company B and a few years later go work for company C hired by a former colleague you met at company A, who perhaps now has some important role there.That&#x27;s favourable for both parts. Your former colleague that hires you knows you and your qualities. And it&#x27;s also good for you because you have some edge in the negotiations because you know you have a strong sponsor.There is always an upside of being a good colleague with the largest amount of people. That increases the chances you&#x27;re finding yourself in this favourable networking situation. And it also makes life better for everybody involved when it doesnt reply TigeriusKirk 9 hours agorootparentprevI&#x27;ve never gone back to an old company.But I have worked for a previous manager again. He left the original company too, but set up contracting as an outside consultant to the software we built. He&#x27;d hire me to do some of the work as needed. Great gig for him, not bad for me.That&#x27;s not that rare of a setup if you&#x27;re working on large B2B software packages. reply colordrops 9 hours agoparentprevCompanies don&#x27;t give you two weeks when they let you go. Why should you give them shit? reply bitcharmer 14 minutes agorootparentWhat are you talking about? I have a 3-month notice period; that goes both ways. I&#x27;m assuming you&#x27;re from USA where employees have very little rights? reply sharkweek 8 hours agorootparentprevBecause unfortunately the power dynamic is such that people will know you quit on the spot and it’ll burn networking opportunities down the road.Less an issue at a big enough company though so there’s that. reply Apocryphon 7 hours agorootparentMaybe they won’t remember. Maybe they’ll think you had a valid personal reason. reply moate 5 hours agorootparentMaybe you’ll go the rest of your life never finding out how they felt because of the myriad reasons you won’t run into those people.Giving notice is risk aversion. reply Apocryphon 4 hours agorootparentAs someone who’s gone out of their way to give three weeks’ notice, I’m not one to test the limits- though I’ve realized extra time given is hardly appreciated. But I’m not about to condemn others for taking risks against an uncaring corporate structure. reply jgalt212 8 hours agorootparentprevYou say tomato, I say salary continuation. reply neilv 3 hours agoprev> But no way around it, we have had a hiring freeze for months I have no ideas why more than 75 people were signed to join.News reporting (not the protagonist&#x27;s Tweet) hints at a more plausible explanation than a hiring freeze that was somehow being ignored by everyone involved -- that the person Tweeting is just reneging as part of aggressive moves:https:&#x2F;&#x2F;www.cnbc.com&#x2F;2023&#x2F;09&#x2F;08&#x2F;flexport-ceo-ryan-petersen-r...> Two days after returning to run Flexport, founder Ryan Petersen said Friday that his logistics company will rescind 55 offer letters and look to lease out office space across the U.S. as it tries to get its “house in order.” reply keiferski 19 hours agoprev[I have no idea] why we had over 200 open roles are on our web site.I do always find it odd when a not-megacorp company has dozens of open positions for various departments. Surely they can’t actually be hiring for these jobs simultaneously, and it’s just a hiring strategy to attract talent that might otherwise not be aware the company exists? reply debo_ 19 hours agoparentIn my experience at smaller companies, often times you are open to candidates of multiple experience levels or backgrounds filling a role, but if you don&#x27;t advertise for very specific roles, people are confused and don&#x27;t apply.e.g. if your hiring manager says \"If we could get someone on our team to cover either some of the devops or some of the backend dev, our one 5-year-tenured person on the team who is doing both could focus on the other.\" Now you&#x27;ve posted two roles for one opening; devops engineer and server software developer. reply jlokier 10 hours agorootparent> if you don&#x27;t advertise for very specific roles, people are confused and don&#x27;t apply.As a candidate I have the opposite experience with companies that advertise a long list of roles, like Flexport&#x27;s \"200 open roles\".If I see a company with a large number of slightly different roles, for example each specialising in one of the company&#x27;s numerous obscure products, or some slightly diferent aspect of the process, I have no idea which one(s) to apply for and I end up skipping that company entirely, even if I like the company.Red Hat is like this. Before the IBM acquisition I was interested in working there but I couldn&#x27;t figure out what to do with the enormous list of product-specific ad activitiy-specific roles I could theoretically apply for. A recruiter was unable to help; they just wanted to know which ones interested me. Well, about 50 of the roles look interesting and suitable, but... so I didn&#x27;t apply. reply skissane 9 hours agorootparent> Well, about 50 of the roles look interesting and suitable, but... so I didn&#x27;t apply.While different places do things differently - the role you apply for isn’t necessarily the role you are hired into.Once upon a time, I was asked to do a tech interview for a candidate. I was told we’d already decided to hire him - the purpose of my interview was just to give management feedback on which of two different roles he’d be better suited for. reply Aurornis 8 hours agorootparentprev> I have no idea which one(s) to apply for and I end up skipping that company entirely, even if I like the company.If you get overwhelmed by choice and prefer when companies are small enough that you don’t have to make choices like this, working for a big company probably isn’t for you anyway.If you want a heuristic to overcome this decision paralysis, pick the first one that looks remotely interesting. Apply for it. Applying for something is better than applying for nothing, for obvious reasons. reply noirbot 6 hours agorootparentI suppose, but I&#x27;ve recently had this issue applying to things with a large company. There were at least 20 open positions that fit my skillset, many of which seemed to be literally the same role on different teams. They made me apply to all of them individually, and didn&#x27;t save any of my info, and some teams required cover letters and other info that other teams didn&#x27;t.I gave up after 4 of them. A month later, I&#x27;ve heard nothing back on any of those. reply jlokier 6 hours agorootparentprevThanks, I see how that&#x27;s good advice for someone who wants to proceed with an application and feels stuck.But personally I have no real problem making choices or decisions, quickly if necessary. I understand the usefulness of making decisions when there&#x27;s no particular reason to favour one or other.It is more that the ocean of slight title variations, especially when there are lots of obscure products I&#x27;ve mostly never heard of or obscure departmental processes, make the roles (and the products I&#x27;d be working on) seem narrow, tedious and overly corporate. They make the jobs and the company feel offputting for me.I also want more of my skills and knowledge to be useful and used, so roles that seem like they&#x27;re designed to only do one thing in a narrow skilll area, perhaps to appeal to people who think they only have one skill area, are offputting. (Note to ad writers: Long lists of tech skills and products does not help with this. Showing variety of things the employee could work on if they want to does.)Feelings and impressions are part of my heuristic for deciding which companies I find interesting enough to invest my time and energy in.I don&#x27;t agree that applying for something is better than nothing. It certainly isn&#x27;t obviously better.Some people take the \"apply to hundreds of roles\" approach to job applications. I&#x27;m the opposite (so far; it could happen).I&#x27;m very selective, and apply research and intuition before proceeding with any potential role or equivalent. Impressions from job ads or other materials, including the company&#x27;s website and reputation, how they present, what they make, who their customers are, and their attitude towards open source, IP and personal side projects, are an important part of that.That&#x27;s feedback I&#x27;d like to give to any would-be employers and hiring ad writers who are thinking they need to list hundreds of variations of roles to attract candidates, perhaps thinking candidates are combing through for narrow matches. It&#x27;s going to put off some candidates.(In the last 20 years I&#x27;ve also found the best jobs have been ones where I didn&#x27;t end up sending a CV or résumé, but a recruiter hooked me up with a company without one, or by knowing a person who is in a position to hire. Due to that I now see \"if interested send your CV&#x2F;résumé\", or an online application form, as a red flag suggesting a worse job, though I wouldn&#x27;t assume that it is; it&#x27;s just a signal. But that&#x27;s another story.) reply mistrial9 8 hours agorootparentprevI believe that people who are accustomed to this size of company, do in fact write out two dozen+ applications, each altered for the role that is listed, with BLOCK LETTER Position Identifier and Very Corporate personnel photo on each and every one. Despite the stupid amount of time it takes to do this, if you do not do this you will get zero jobs. ps- not me reply bettercallsalad 6 hours agoparentprevIs there going to be anyone accountable over this? Ryan doesn’t say and most likely the HR&#x2F;recruiting under his reporting chain will stay unharmed. It’s amazing how absolutely dry these apologies come out. Everytime a layoff notice comes in there is this usual script. I am yet to see anyone taking meaningful responsibility over it such as CEO paycut or bonus withdrawals. reply yunyu 6 hours agorootparentRyan literally just made the previous CEO leave? reply xwolfi 6 hours agorootparentprevWhy would a CEO take a pay cut, his job, approved by the owners, is literally to unload the burden and fire the fat. He would have to lose money if he didnt... a CEO responsibility is first to owners, second to client, third to employees who are resources, like the machines they bought and are compensated monthly for their time. reply freeAgent 1 hour agoparentprevWhat makes it easier to sell VCs on your company’s exponential growth story: a website with dozens of openings posted, or a website with none? I think that’s your answer. reply 6ak74rfy 8 hours agoparentprevThis, plus I’ve constantly seen job ads on LinkedIn from this company. reply leetrout 8 hours agorootparentOn here too. Just saw one a couple weeks ago. reply iancmceachern 7 hours agorootparentYeah, they were actually actively posted by YChttps:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=32700568 reply denton-scratch 19 hours agoparentprevSome companies have a policy of hiring good people, even if they&#x27;re not a close march for an open position; and of not hiring weak candidates, even if the hiring manager is desperate. That is, they hire good people when they come available, and never knowingly hire bad people. Hiring for a specific vacancy is silly - good people are adaptable.So I think that&#x27;s a great policy, if you have enough money to cover the periods when good staff are cheap and available, and your vacancy list is short. You don&#x27;t have to fire the dross, because you don&#x27;t ever hire dross. reply psunavy03 10 hours agorootparentSome companies have a policy of hiring good people, even if they&#x27;re not a close march for an open position; and of not hiring weak candidates, even if the hiring manager is desperate. That is, they hire good people when they come available, and never knowingly hire bad people.How is this at all different from how literally every hiring manager in the world thinks of themselves? Literally no one is going to wake up in the morning and think \"wow, I&#x27;m OK with whiffing on a candidate for my team.\" reply compiler-guy 8 hours agorootparentIt’s different because some firms will choose someone who is just good enough over someone who is super talented if the former has domain knowledge and the latter doesn’t. It’s all about how adaptable you think people are.If you need a database developer and some junior person who has a couple of indistinguished but relevant jobs on their resume shows up, do you take them over the person who has no database development at all but a decade of lisp with some very high powered firms?Some firms will choose the latter because they believe highly talented people can adapt. Some don’t. reply fy20 9 hours agorootparentprevWelcome to real life where you do not set your own budget. The reality is choosing someone who you feel can do a good enough job to make it worth your time, rather than just doing it yourself. reply nijave 6 hours agorootparentprevPlenty of companies will send your application right into the trash heap if your skills&#x2F;experience aren&#x27;t a close match (regardless of whether the required skills are trivial to learn) reply lmm 8 hours agorootparentprev> How is this at all different from how literally every hiring manager in the world thinks of themselves? Literally no one is going to wake up in the morning and think \"wow, I&#x27;m OK with whiffing on a candidate for my team.\"For some companies the job is \"maintain the team at X people, so when we&#x27;re below that hire the best people we can find in a reasonable time, and when we&#x27;re above that we close hiring\". reply tstrimple 7 hours agorootparentprevI see a lot of this in consulting. A client will say they need skills A, B, and C. We know that X, Y and Z are skills that we see paying dividends in consultants over the long term. But we hire the A, B, C developer because that&#x27;s specifically what the immediate project demands for rather than what is a good fit for our consulting practice over time. Trying to place those folks after their initial engagement is a lot of work and leads to higher turnover as a result. reply notsurenymore 19 hours agoparentprevI thought it was résumé collection. I’ve noticed a weird pattern lately, where I’ll see a job, apply to it, and a day or two later it’s delisted. reply vsareto 18 hours agorootparentSometimes they get enough of a pool to choose from in a short amount of time, so it doesn&#x27;t make sense to leave it open for longer. I prefer companies delist it rather than leave it up and simply ignore further applications. reply lubujackson 7 hours agorootparentprevLikely they got 200+ applications and closed it for sanity, if current Linkedin numbers are to be believed. reply roflyear 18 hours agoparentprevWell, I know of a few big tech companies on the east coast do this so that they can attract higher-level devs and then say after the super-long interview process \"sorry, you&#x27;re actually a mid-level dev\" or even try and convince them they are a junior.It&#x27;s a way to get around salary disclosure laws, as well. reply alex_lav 10 hours agoparentprevThe frequency that I&#x27;ve seen companies open positions that don&#x27;t actually exist to \"fill the hiring pipeline\" is gross. Recruiters and those that lead them should be ashamed of this, and yet I see it all the time. reply constantly 19 hours agoprevThey also oversubscribed office space and are actively working to get out of signed leases, or to sublease where that’s not possible, according to a friend over there. Morale is a bit low at the moment with the CEO being ousted, office space being given up, offers rescinded, and RIFs in the horizon. reply hndarlings 6 hours agoprevFlexport and Smarking are the two most spammy companies I have seen here on HN. Almost every couple of weeks you see their job opening post on the HN front page. Going on for years now. Just saw one from this very company a couple of weeks back. reply throwawaysleep 4 hours agoparentI assumed that just meant they were growing quickly. reply f4c39012 2 hours agorootparenthiring != growing reply freeAgent 1 hour agorootparentIt does mean they’re growing expenses, though. reply plaidfuji 19 hours agoprevTranslation (perhaps)?“I found out last week that we had 200 open roles and had signed 75 offers. Upon learning this, I fired the CEO. I regret that I now have to be the one to deliver the bad news.” reply huevosabio 19 hours agoparentThis sounds plausible, but can&#x27;t be the only reason why they fired the ceo no? reply molsongolden 9 hours agorootparentI can&#x27;t read the full article but The Information[0] reported that the CEO was spending more than the board found reasonable.[0] https:&#x2F;&#x2F;www.theinformation.com&#x2F;articles&#x2F;flexport-founder-ous... reply bdcravens 19 hours agorootparentprevPresumably so, as down-thread, he states that they were overconfident in their growth. (Most of the time) the CEO knows that if the business can&#x27;t deliver, it will be their head on the chopping block. reply infrawhispers 19 hours agoprevI find it very interesting how he (Ryan Petersen) bragged about Flexport having $1B in cash [2] but now implies that things are tight so they cannot pay any form of severance[1].Don’t let the SV propaganda fool you. The implicit contract betweeen white collar workers and employers has been gone for quite some time. Employees should always prioritize what is best for them.[1] https:&#x2F;&#x2F;twitter.com&#x2F;typesfast&#x2F;status&#x2F;1700114432792363016?s=4...[2] https:&#x2F;&#x2F;twitter.com&#x2F;typesfast&#x2F;status&#x2F;1700108412024127569?s=4... reply infrawhispers 19 hours agoparentIt also just occurred to me that _he was on the board signing off on the equity grants_. So it is insane that he says he has no idea how this happened and later backtracks and says they were aligned on a growth plan that didn’t pan out. The rule that company CEO tweets a ton == poorly managed company never ceases to fail. reply temp_praneshp 10 hours agorootparentHow does equity grants at flexport work? In all my jobs, there is a number on the offer letter, but the actual sign off happens only at the first board meeting post starting date&#x2F; reply manquer 9 hours agorootparentThis is true, even somewhat well run management will share the projected plan with the board and get their buy in. The board resolution approving it formally is typically on first board meeting after the employee joins.It is possible for management with poor relationship with the board and ex-CEO&#x2F;Founder and issued offer letters without board consent or awareness.Approval may not be necessary depending on how the options are structured, for example phantom stock plans wouldn&#x27;t need board approval per se since no actual stock ( or option for it) is issued. reply molsongolden 10 hours agorootparentprevThis is what I&#x27;ve seen as well. It&#x27;s possible he really hadn&#x27;t seen the 75 offers before SHTF. reply ojr 6 hours agorootparentprevElon Musk tweets a lot and Tesla has the best electric car batteries in terms of mile range, and the reusuable rockets at SpaceX are managed pretty well reply jedberg 4 hours agorootparent> Elon Musk tweets a lot and Tesla has the best electric car batteries in terms of mile rangeActually, that would be the Lucid: https:&#x2F;&#x2F;www.forbes.com&#x2F;wheels&#x2F;best&#x2F;electric-vehicles-for-ran...> and the reusuable rockets at SpaceX are managed pretty wellMy understanding from talking to multiple people at SpaceX is that Elon isn&#x27;t really involved there. He shows up and says \"do stuff\" and they say \"yes Elon\" and then just do what they were doing anyway.Besides, it seems like most of his focus is on Twitter these days, which is clearly circling the drain. reply tomp 16 hours agoparentprevWow. As if rescinding offers isn&#x27;t bad enough, doing so with $1B in cash makes you a mega asshole. reply throwaway5959 13 hours agorootparentHe left Flexport to do VC with Peter Thiel’s company. That speaks volumes. reply dylan604 9 hours agorootparentprevHow else are they going to pay the bonuses to the C-suite occupants? reply water-data-dude 13 hours agoparentprevThey deleted the post [1], does anyone have a screenshot? reply madars 10 hours agorootparentOne was on Google Cache and another was on internet archive. Both are September 8, 2023:https:&#x2F;&#x2F;archive.is&#x2F;t2Wsr - \"We&#x27;re going to help them find jobs. Can&#x27;t just give out cash tho.\"https:&#x2F;&#x2F;archive.is&#x2F;RAWQp - \"Flexport has $1B in net cash. But we&#x27;re far from profitable right now and will be laser focused on profitable growth from now on.\" reply leetrout 7 hours agorootparent747s are expensive, yo! reply bombcar 10 hours agorootparentprevCheck the various archive sites, someone may have grabbed it. reply granshaw 9 hours agoparentprevWhat is this implicit contract you speak of? reply colordrops 9 hours agorootparentThere used to be this idea of loyalty between companies and employees, with people staying one company for years, and sometimes their entire lives, and pensions given for retirement, and extreme circumstances needed to be fired. This has been gone for decades, but corporations have held on to the illusion as long as they could to coerce employees to work against their own interests. Most smart people now act as hired guns now and recognize that it&#x27;s all business and contractual obligations, and only act in their own interest. reply StressedDev 8 hours agorootparentThis has not been true since the 1980s. Note that even before that, it was a fairy tale because no one can foresee the future, and when things get bad, even loyal employees have to go because there is no money to pay them (if companies kept them, they would run out of money and go bankrupt). reply roflyear 6 hours agorootparentThis is still the thing today for many people in trades. I know at least a handful of people who have been at their company for 10+ years, including my father, who works in the trades. Not an unheard of thing - tech is just immature, I think, and they have a lot of immature leadership, unfortunately. reply roflyear 18 hours agoparentprevYeah this is quite ridiculous. Even at very high salaries (no one makes these at Flexport, FYI) you&#x27;re talking about a few million dollars to make this right (2 months severance). reply deaddodo 10 hours agorootparentTwo months&#x27; severance? That hasn&#x27;t been a norm in ages. You&#x27;re lucky to get 2 (maybe 4) weeks and a month&#x27;s worth of COBRA (in California).Edit: I&#x27;m not defending it and it&#x27;s just anecdotal; but it&#x27;s definitely what I&#x27;ve seen&#x2F;experienced. reply toxic 8 hours agorootparentAnecdata: Spouse was let go from Salesforce in the January round of layoffs, after 2 years there. She received 6 months salary, was allowed to keep RSUs that would have vested within 90 days (which amounted to another ~2 months salary), and the company paid for COBRA for her and family for 6 months.That was very generous, but it&#x27;s not at all unheard of. There are people who were on her team who got more than 12 months. They had been there quite a bit longer. reply mikeyouse 7 hours agorootparentI’ve been on the company’s side of a few RIFs lately, it’s not fun for anyone, and clearly worse for the employees. But even for brand new employees we do at least a month’s severance + health care etc. For many, it’s 90+ days. Unless your company is at urgent risk of bankruptcy, just be a normal human and spend the few extra dollars so a bad day is a as good as possible. reply dylan604 9 hours agorootparentprevI like how everyone tosses out COBRA. However, COBRA fees will chew up a large chunk of that severance. reply mikeyouse 7 hours agorootparentAfaik, all employees are entitled to COBRA - in my experience, when it’s mentioned as a severance benefit, the company is paying the employee’s portion of that expense (it’s what all the companies I’ve been involved with have provided) and the remainder of the severance is in addition to that. reply dylan604 5 hours agorootparentThat sounds like a decent severance. I’ve only ever been offered COBRA at my own expense which is the full rate of the insurance including the part the company normally chips in. reply smeej 9 hours agorootparentprevI had always heard the default to be \"a month per year of service,\" so paying nothing to people who hadn&#x27;t started is definitely crappy for the people who had probably put in notice elsewhere (who are now, for unemployment insurance purposes, considered to have voluntarily quit their last job), but it doesn&#x27;t really surprise me. reply roflyear 6 hours agorootparentprevI never said it was the norm, but I would think it would be a good sign here if they gave two months. I suspect they will give something like two weeks when this shakes out. reply bennydog224 19 hours agoprevAwful look for this company. Imagine international students &#x2F;H1B holders who turned down other offers to join Flexport, and now may not have enough time to get another offer before needing to permanently leave in 60 days. reply a2xd94 19 hours agoparentOr, imagine smart, young Americans trying to make a living in a high cost of living area like the Bay Area, having their life FUBAR&#x27;d by a selfish exec. Most likely as they just told their previous employer that they&#x27;re leaving that company. reply davesque 10 hours agoprevTIL: Ignore any job postings by Flexport. reply bdcravens 19 hours agoprevI assume Dave Clark had a generous exit package. He should waive that compensation, and since these 75 fires are apparently his mistake, that money should be used to compensate them. reply StressedDev 7 hours agoparentI assume Dave Clark is the former CEO. Why should he pay? What if he thought that they needed these roles? What if the new CEO disagrees and they both have valid points? At this point, the new CEO (who is also the founder) has to take responsibility for his decision. reply bdcravens 7 hours agorootparentHe was recently replaced (ie, strongly encouraged to resign), ostensibly for poor performance of the company. It&#x27;s all about accountability related to his leadership, including hiring decisions. reply StressedDev 6 hours agorootparentDave Clark either resigned, was pushed out or was fired. It&#x27;s hard to see how he did not suffer consequences or was not held accountable.Also, you need to establish that Dave Clark performed poorly and should have known the company could not afford these jobs.We cannot prove he performed poorly because we do not have enough information. Claiming he performed poorly because he left&#x2F;was fired does not work because lots of people are unjustly fired. Even if the firing was in some ways justified, it is very possible that this is not a black and white situation. It could be he had a vision, executed on his vision, did a good job delivering it, and then the board and founder decided they did not like it. This does not mean his vision would have failed. It just means the board and founder thought getting rid of Dave Clark and taking a different course would probably lead to a better outcome.Your basic argument does not work because you assume Dave Clark deserved to get fired and that he somehow knew these 75 offers were bad for the company. You do not prove this.My guess is Dave Clark did his best, thought he was taking the company in the right direction, and was let go because the board and founder disagreed. I do not think punishing him is justified because it is not clear he did anything wrong. reply duxup 7 hours agoparentprevMaybe Dave intended to hire and pay these people? reply bdcravens 7 hours agorootparentPerhaps, but if his decision-making met the company&#x27;s needs, he&#x27;d still be CEO. reply 55555 5 hours agorootparentThis is not demonstrably true. The board could be wrong, and Dave could be right, about the future trajectory of the company. reply StressedDev 6 hours agorootparentprevPeople are often fired&#x2F;pushed out&#x2F;let go for the wrong reasons. This is not a clear case where Dave Clark did anything wrong. reply jonahbenton 9 hours agoparentprevShould be top comment. reply mellosouls 19 hours agoprevContextual discussion from a couple days ago:Flexport CEO resigns a year after joining logistics company (150 comments)https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=37410812 reply ranting-moth 4 hours agoprev> I have no ideas why more than 75 people were signed to join. Or why we had over 200 open roles are on our web site.It&#x27;s pretty messed up that this happened in the first place. But it&#x27;s another level of ineptitude that even the the CEO has no idea how this happened? reply ralph84 19 hours agoprevMaybe not legally, but morally this is a mass layoff without severance. Hopefully people remember if this company tries to hire again. reply constantly 5 hours agoparentWill try to remember this when their job postings hit the front page of this website tomorrow morning. reply jeffbee 19 hours agoprevThe tweet says they are not offering compensation but I hope the victims of this are not simply adopting the company&#x27;s unilateral stance on that. Everyone who was harmed by these rescinded offers (because they quit their other job, moved, sold their house, etc) should at a minimum brandish a promissory estoppel claim and see how much money Flexport coughs up to settle it. reply rdedev 8 hours agoparentFor international students another trick I&#x27;ve seen from companies is moving the starting date by 5 or 6 months. On F1 visa you only get a set amount of unemployment days (90 days if I remember it right) after which you have to leave the countrySo those students have to get some job for the time being, work there till it&#x27;s time to quit and then join \"BigCorp\". Not many are going to do this since it&#x27;s too risky, especially now. This is if \"BigCorp\" is still ready to accept them. I personally know two people who got their joining dates pushed back by 6 months reply roflyear 13 hours agoparentprevThey backtracked, and are now offering some severance, but did not specify how much. reply dewey 19 hours agoprevThis is a shitty situation to be in for people who maybe quit their jobs to join, but it&#x27;s refreshing to see honest and clear communication like this and not a corporate blog post. reply borroka 10 hours agoparentRefreshing, like in \"somebody else made a mistake, not my fault, I was in the bathroom refreshing myself at the time\"?It is quite funny to see how communication is measured on the same scale used for the action, in this case letting go, even before they started, a sizable number of people. But it is the same for politicians, right? \"See, they are such great orators, a moving speech like I have rarely heard!\", we often read or hear.The problem is that the tweet took 10 minutes, while many, those whose offer was rescinded, must now to work for days, weeks or months to unravel the giant cluster-f that somebody--not the current orator, the one before, even if the current one is the founder and sits on the board--has deployed. reply galkk 9 hours agoparentprevHe&#x27;s literally throwing previous guy (no matter what is the opinion about previous guy) under the bus, there is nothing honest about it.It was (most likely) not the previous CEO who personally decided to hire 75 people, and silently made them offers.And saying that \"we had hiring freeze for months\" but in next tweet \"I&#x27;ve been CEO only for 18 hours\". Isn&#x27;t that CEO job to decide if hiring&#x2F;firing needs to be done? Who was in charge of the company then? You, but not in the title? reply alex_c 19 hours agoparentprevWould be a lot more refreshing if Flexport gave some compensation to those affected. If not, the only real difference from a corporate blog post is in style of communication but not in substance. reply FireBeyond 9 hours agoparentprev> honest and clear\"I have no idea how this happened.\"That&#x27;s not refreshing. reply ticviking 19 hours agoparentprevGenerally it&#x27;s worth talking to a lawyer about cases like this. reply FireBeyond 9 hours agorootparentA friend of mine, ex-IT, is now a Physician Assistant. He was an Alaska native, living outside Seattle. He had been doing a lot of contract work at a large Urgent Care in Alaska, and talked about it with his family. They talked about making him full-time. Negotiated an offer, relocation package, etc., all good. He set about selling his home, finding his kids new schools, etc. And then about a week before his start date, he got a phone call.\"The clinic has been sold to new owners. They are reviewing finances and rescinded any job offers, including yours. They will allow you 30 days to repay your relocation assistance.\"Oh hell no. He lawyered up. He&#x27;d sold his home. Wrapped up his, and his family&#x27;s life. Had an offer and a contract.He didn&#x27;t end up repaying his relocation assistance. And his \"new\" \"employer\" ended up paying three months salary and the closing costs on his house for the inconvenience. reply sergiotapia 6 hours agorootparent>three months salary and the closing costs on his house for the inconvenienceA pittance because now wtf is he supposed to do? reply victor9000 8 hours agoprevSeems like a great time to start poaching flexport talent. Now that leadership has shown its true colors, I can&#x27;t imagine anyone working there is feeling very confident about their future. reply ditonal 7 hours agoparentLet’s not forget that Flexport is one of the darling representatives of YCs portfolio. YC has some verbiage about ethical behavior on their website, but when it’s come to actual tough ethical situations like DoorDash pocketing drivers tips, Flexport reneging on signed offers, or all sorts of insanely narcissistic behavior by other YC founders, it’s been shown their “ethics” are words and not actions.This shouldn’t just reflect poorly on Flexport leadership but on their investors. Especially because the more time you spend in Silicon Valley you learn that your “scrappy startup” is really a product division of the VCs who really call the shots.Pay close attention to what you hear from pg, Garry Tan, Michael Seibel, etc on this issue. Very very easy to talk ethics in the abstract. Real ethics and integrity are defined in exactly tough times like this. And if you see the cowardice that I expect like we saw with DoorDash, keep that in mind before you “Work at a Startup” reply benreesman 2 hours agorootparentIt’s weird too because this doesn’t seem like the usual “fish rots from the head” scenario. Admittedly I’ve never done YC, but I’ve been in that orbit via HN and friends since the beginning, and pg seemed like a really ethical guy from day one.I’m looking in from the outside, so who knows, but it seems like level of ambition early YC was filtering on brought this dark triad shit into the bloodstream and that in turn shifted pg’s worldview.pg is obviously ambitious, but inherently “get to the top at any cost” people don’t spend a bunch of time writing books about Common Lisp and learning some painting and hanging out in art galleries a bunch. Part of what drew me to HN and the essays and the whole thing was a wholesome attitude that kind of said “work hard don’t try to game the system”, at least in the beginning. reply KingOfCoders 7 hours agorootparentprevOr the Airbnb debacle where PG defended sketchy behaviour here. reply roflyear 6 hours agorootparentprevThe YC portfolio is full of unethical behavior like you said, but HN is full of \"temporarily embarrassed founders\" so you won&#x27;t get much sympathy here with these types of comments. Good on you for bringing this up! reply TX81Z 6 hours agorootparentprevEthics means sometimes you leave bad money on the table for good reasons.That’s not how the VC mind is wired. A bad investment loses money, a good one makes money. That’s all. reply SCUSKU 8 hours agoparentprevFriend at the company said everyone basically stopped working. Apparently the CEO in the all hands said that they WILL be layoffs on the engineering team, so everyone is now just waiting for the other shoe to drop. reply roflyear 6 hours agorootparentI encourage everyone to go on blind and check out the commentary there...! reply csomar 7 hours agoparentprevAnd where will you go? North Korea? Because I&#x27;m telling you Victor almost all companies are doing the same.On another note, I think other companies will have more class handling this. The way the CEO has worded this came out as quite dismissive and douche-baggy. I can understand a company messing up (of any size, who doesn&#x27;t?). reply pg_bot 19 hours agoprevIf you negotiate an employment contract make sure that there is some sort of break up fee in case a company tries to pull this sort of nonsense on you. There&#x27;s no reason why someone should be able to upend your life without due compensation. Accepting a job offer is not something that is done on a whim for most people, so it should be fairly easy to add in a clause that states \"If this offer is rescinded for any reason after it has been signed by both parties, {{COMPANY}} agrees to pay 9 months of the negotiated salary to {{EMPLOYEE}}\" reply turquoisevar 8 hours agoparentIn 99% of the cases the candidate has exactly 0 leverage to negotiate this and the person on the other end will be laugh at this notion.Instead of weird fantasies about power that doesn’t exist, how about we acknowledge the skewed relationship between a(n) (prospective) employee and an employer like the rest of the civilized world and do away with “fire at will”.If something like this happens in the EU, then it’s likely the company would at least be on the hook to pay the salary for the duration of the initial contract that was signed (often 6 month minimum). I say likely, because of minor variations between countries, but it’s a given in most countries. reply braza 4 hours agorootparentIn some places in Central Europe and Nordics, some companies has contracts that telhas a penalty if any of the parts terminated before the start day. In one case I signed one that the company of me would pay the total of 3 salaries if any of us terminate the employment agreement in advance. reply theGnuMe 7 hours agorootparentprevIf only workers could organize or something… reply nitwit005 7 hours agorootparentThe union isn&#x27;t going to care about someone who never worked for the company. reply jrflowers 5 hours agorootparentThis is a good point. It is a shame that there aren’t unions organized around professions like pipe fitters, lampworkers, or crane operators. There is no conceptual framework for a non-company union reply Zetobal 3 hours agorootparentprevSomebody got their information about unions from the wrong news outlets... reply nitwit005 2 hours agorootparentVery well. Please share an article about a union intervening to fix this. replyAurornis 8 hours agoparentprev> If you negotiate an employment contractIn the United States and many other countries, most people don&#x27;t have employment contracts.Your offer letter is a not an employment contract.> so it should be fairly easy to add in a clause that states \"If this offer is rescinded for any reason after it has been signed by both parties, {{COMPANY}} agrees to pay 9 months of the negotiated salary to {{EMPLOYEE}}\"This is a wild fantasy.In what world do you think a company would agree to 9 months of salary for a rescinded offer? Maybe if you&#x27;re taking a CEO role, but not for an average employee. I have no idea why you think \"it should be fairly easy\" to get a company to agree to this.Let&#x27;s assume for a second that you got a company to agree to this 9 months of pay for rescinded offer clause. If they wanted to rescind your offer, they&#x27;d take one look at that clause and decide to hire you for 1 day or 1 week or 1 month and then lay you off. reply vsareto 18 hours agoparentprevI don&#x27;t know who gets employment contracts that allow negotiation like that (certainly not regular developers under $150k), but my hunch is it would never have been people they&#x27;re rescinding offers to. reply MikeTheRocker 18 hours agoparentprevGood luck getting something like that in writing at any big tech company reply pg_bot 18 hours agorootparentIt&#x27;s honestly not that hard. Given that both parties are serious about working together, even considering rescinding a signed offer is ridiculous. There aren&#x27;t many reasons why a company could legitimately back out of an employment contract, and those can be added to the fine print. If the company want to be protected against potential criminality or an injury that would cause you to be unable to perform the duties of the job you can write that into the contract.Everything is negotiable, you just have to ask. reply MikeTheRocker 12 hours agorootparentCurious if you&#x27;ve ever done this personally? I&#x27;ve only ever worked at companies with tens to hundreds of thousands of employees, and my perspective has been that the bureaucracy is such that any nonstandard interaction with the company is pretty much off the table. reply tough 9 hours agorootparentA good analogy might be those interactions are off-the-menu but very much on the table, you just need to state your case and be worth it for them to entertain the detour reply Aurornis 8 hours agorootparentprev> It&#x27;s honestly not that hardI&#x27;m sorry, but getting a guarantee of 9 months of salary for anything is actually extremely hard when negotiating contracts.You also seem to be confused about the prevalence of \"employment contracts\". Aside from a few executives, most employees don&#x27;t have employment contracts. Your offer letter is not an employment contract. reply Scoring6931 1 hour agorootparentEmployment contracts are actually very prevalent. Are you conflating the United States with the entire world? reply KingOfCoders 6 hours agorootparentprevEasy, every big tech company has stricter contracts outside of the US. The companies are not the problem, the US is. reply Scoring6931 1 hour agoparentprevThis is so out touch that it is laughable reply CapstanRoller 10 hours agoparentprevWith what leverage?Software devs have no union to back them up, and in a tight job market there are many desperate candidates who would sign the employment agreement as-is within minutes of receiving it. reply belligeront 19 hours agoprevIt seems like many companies have recently become more willing to take actions that I view as extremely trust breaking:- Forcing employees who were hired as remote employees to relocate for RTO- Rescinding offers- Layoffs with seemingly little connection to performanceWhat I&#x27;m trying to understand is do companies not think these actions will limit their ability to hire in the future?Are they:- Hoping that future candidates have short memories or they can hire new grads who don&#x27;t have other options?- Calculating that the job market will stay slack for a long time?- The C-suite has short time horizons and thus see these problems as someone else&#x27;s future problems?- Something else?Obviously companies will do these sorts of things if faced with existential threats, but the recent trend seems far more widespread than this. reply sokoloff 19 hours agoparent> What I&#x27;m trying to understand is do companies not think these actions will limit their ability to hire in the future?Running out of money or going out of business also limits your ability to hire in the future.First responders sometimes apply tourniquets and emergency trauma surgeons sometimes amputate critically injured limbs, even knowing that those have potential or certain downsides for the future of the patient, but aid in survival.Companies in critical condition or facing threats to their survival may logically do the same thing. If you agree with that, it seems not too far a leap to conclude that taking these same actions while merely under a more moderate threat and wishing to avoid entering a critical condition may also make sense. reply velcrovan 18 hours agorootparentThis…doesn’t make it better as far as trust in the company goes. Weakness in the business model is one thing. Having a total existential threat to the company that emerges so quickly that it could not be foreseen before sending out a whole whack of signed offer letters — even if real and legitimate — can only mean extremely terrible mismanagement. reply sokoloff 11 hours agorootparentIn this case, the offers are being rescinded by the CEO who is stepping in to replace the recently dismissed CEO, indicating that the board and new CEO agrees that there was mismanagement previously. reply willcipriano 9 hours agorootparentThey are a party the mismanagement. If they were more alert and acted sooner they wouldn&#x27;t have to had done this. reply StressedDev 7 hours agorootparentprevWhat you have to remember is there are no guarantees in the world. No one wants to tell 75 people their job offers were rescinded. The problem is Flexport thinks this is better than the alternatives. Sometimes, you do not have good options. You just have bad and worse.I think the lesson we can all learn from this is SAVE MONEY, and assume bad things will happen. reply jitix 18 hours agorootparentprevI 100% agree with you and the ability to scale workforce up and down is a key factor in market competitiveness. But offer rescinding is equivalent of a first responder taking off your tourniquet and simply refusing to put another on, leaving you to bleed out. If you can&#x27;t afford another tourniquet maybe don&#x27;t take off the one that&#x27;s holding things together.IMO hiring be done with a more medium term (6-12 months) mentality based on available runway, and sending out an offer and then rescinding on it usually is a symptom of bad organization where department heads are hiring without CFO buy-in. Maybe just freeze hiring and do layoffs when runway goes below certain level? reply LeifCarrotson 18 hours agorootparentprevBut we&#x27;re not even close to those conditions, are we?The economy is growing more slowly than in the past, but it&#x27;s still growing, companies everywhere are issuing stock buybacks and acquiring other companies, regulators are rushing to get out of the way, new tech on the horizon shows incredible promise, consumers are - for the most part - continuing to buy&#x2F;lease&#x2F;rent new products regardless of EULAs and subscriptions that are enormously profitable, P&#x2F;E ratios are stratospheric...it would seem like outlooks have scarcely ever been better for employers.Why, then, would they be in survival mode? reply raydev 18 hours agorootparentFocusing on Flexport here, this is a the founder and former CEO taking over again after he clearly announced his disagreement with the outgoing CEO (whom founder installed).I think it&#x27;s fine to want to turn the ship around if you think it&#x27;s going in the wrong direction, or if you think the current course will lead you directly into a storm.These offered candidates would instead be in danger of layoffs in weeks or months if their offers hadn&#x27;t been rescinded, so why kick that can down the road? Maybe the new CEO is already planning a round of layoffs for existing employees, so again, why wait?edit: I missed that Ryan is offering no compensation to the people having their offers rescinded. That is unethical. reply kasey_junk 18 hours agorootparentBecause layoff protections&#x2F;benefits are often better than people quitting their jobs?Every single one of these rescinded offers _is_ a layoff , just one that is extremely hostile to the worker.Frankly, this should be illegal or at least cause for civil restitution. It shows immense hostility by management of flexport and every potential future hire should not give them the time of day indefinitely.At the very least HN ought to stop running their hiring posts. reply raydev 18 hours agorootparentI edited my post, I incorrectly assumed that some form of compensation was given&#x2F;offered. reply ballenf 18 hours agorootparentprevEach of those indicators can also be seen as signs of trouble.Stock buybacks -- indication that investing in business is seen as having lower, maybe even zero or negative, ROIAcquisitions -- again, natural growth of company less favorable than consolidation. Which could mean that market isn&#x27;t growing.Regulators -- I don&#x27;t know that this claim is well-supported across the board. Would seem to need to be quantified in a very case-by-case basis. There certainly are industries that are examples of the opposite.New tech on the horizon doesn&#x27;t generate income today and no one knows for sure exactly which tech to invest in nowConsumers are already cutting spending and about to hit a debt wall later this year; COVID stimulus is pretty much all spentP&#x2F;E ratios is a sign, perhaps, that people don&#x27;t have other places to put there moneyNot saying my interpretations are correct, just that there are other sides to your indicators. reply kgwgk 17 hours agorootparentprev> But we&#x27;re not even close to those conditions, are we?Flexport’s financial situation doesn’t seem great:https:&#x2F;&#x2F;twitter.com&#x2F;typesfast&#x2F;status&#x2F;1700093847471370344 reply toomuchtodo 17 hours agorootparent> New official flexport real estate policy is we don&#x27;t get new office space til there&#x27;s always a line at the bathroom in the current office space.Sounds like a great work environment. reply tock 17 hours agorootparentprev1B in cash but not profitable: https:&#x2F;&#x2F;twitter.com&#x2F;typesfast&#x2F;status&#x2F;1700108412024127569 reply theGnuMe 7 hours agorootparentprevThey run international shipping logistics so maybe something macro looms large.Economic disruption in China would be the macro thing. They have real estate issues and large youth unemployment apparently.More likely they are looking towards an IPO, the market for which is about to reopen if we don’t have any major economic disruptions before instacart and arm list. CNBC squawk box and Cramer talk about flexport a lot so Monday will be interesting if they cover it. It’s already on the general cnbc website.If I were in Peterson’s shoes I’d get on that show early next week for damage control. reply malfist 19 hours agorootparentprevSure. But how is RTO a tourniquet? reply sokoloff 18 hours agorootparentTwo out of three of the things listed are akin to the analogy used. RTO isn&#x27;t (except to the extent that it&#x27;s being used a shitty way to drive voluntary attrition, but I think those cases are far more rare than merely being accepted as a negative side-effect). reply o10449366 19 hours agoparentprevYeah, I just went through two onsites with Kensho (for two different teams). After the first onsite, I asked them if their compensation range would be competitive with another offer I already received and the recruiter told me \"they are very similar.\" I spent another 6 hours doing the second onsite only to be told that their best offer is 35% lower due to \"budget cuts.\" Needless to say I&#x27;ll never be interviewing with them again because they&#x27;ve shown they don&#x27;t respect my (or their interviewer&#x27;s) time. reply nerdponx 19 hours agorootparentThat&#x27;s the thing: they don&#x27;t care. Someone else will interview, unaware of this, and someone after them, etc. until someone takes the job. reply StressedDev 7 hours agorootparentprevI am sorry this happened to you. There is not much to say other than I am glad you found out they could not keep their word (and may have been unethical) before you accepted an offer. reply malermeister 19 hours agorootparentprevI don&#x27;t understand the motivation behind lying to you in cases like this. Did they honestly expect you to accept their low-ball offer? They most know they&#x27;re wasting everyone&#x27;s time. reply cj 19 hours agorootparentIn the current market, there are a lot of people starting out their search looking to make X, and 1-2 months into the search they realize the only immediately available opportunities are \"X - 25%\".In those situations, it&#x27;s not always a waste of everyone&#x27;s time. Some candidates (not all, to be clear) start out the job search process with salary expectations that are very unlikely to be easily met compared to 2-3 years ago.The recruiter in the scenario above was probably hoping the candidate&#x27;s salary expectations would settle down toward the lower end of the spectrum (which clearly didn&#x27;t work out for anyone in the specific example above, but it works often enough for it to be a not uncommon practice)Edit: To be clear, I think it&#x27;s pretty lame to mislead candidates and I don&#x27;t advocate for this strategy. But it happens. When I personally interview someone who has salary expectations higher than we&#x27;re willing to pay, I tell them upfront on the first 30 minute screen call and simply tell them to reach out again if their circumstances change. (They often end up reaching out a month later) reply H8crilA 19 hours agorootparentprevIt may look good in recruiter&#x27;s papers. I.e. it looks like he did his job just right, but the candidate was dissatisfied with the package at the end. What can he do about it? reply Roark66 19 hours agoparentprev>- Forcing employees who were hired as remote employees to relocate for RTOAnd that is why when I was recently looking for (contract) work I insisted to have \"work from home\" out in my contract. Despite looking for wfh from the beginning and multiple verbal and email assurances when it came to sign the contract I got one that said \"office based\". Of course I said I&#x27;m not signing. A week of \"but we have a standard contract\", \"but we can&#x27;t change it\" ensued. Eventually they did change it.I recommend persevering to anyone else in similar situation (if you have other offers of course). reply nucleardog 19 hours agorootparentSwitched jobs for the same reason.Employer went remote. After a while they decided we’d stay that way. At contract negotiation time I told them I wanted my contract amended to specify that the role was remote with no expectation of any time in the office. They wouldn’t because who knows what the future holds.Well, I knew what I wanted my future to hold and it wasn’t compatible with anything but full remote.Found a remote role with a company that already had its employees spread across like 6 states and three countries. My contract, without asking, said the role was remote with no time in office. Regardless, I wouldn’t see them demanding RTO any time soon—whatever location they picked they’d be losing probably 2&#x2F;3 of their staff, or paying to open tiny one-person offices all over the place.In hiring others, so many people I talk to spend a lot of time in the initial call asking about the remote thing. They’ve clearly had the rug pulled out from under them before.I’ve had a few people now bail partway through the process because they got a great offer from some other company only to come back a week later asking if we can pick back up because it was a bait-and-switch and the final contract specified hybrid or fully in-office.I just don’t even understand the thought process behind that from the employers… like, do you really think you’ll get to the offer stage and the person will go “Well, I really wanted remote and they lied to my face, but hey one in the hand I guess I’ll start planning a move halfway across the country. shrug”. reply williamsmj 17 hours agorootparentprevThis is good advice for contract workers, but is not applicable for the vast majority of \"at will\" W-2 employees in the US, where terms of employment can be amended ... at will. reply smeej 9 hours agorootparentIt does help you when you have to talk to the unemployment claim adjudicator and the employer tries to claim you quit.If you can say, \"They made a huge change to the terms of my employment. See? Right here, when they hired me, it said 100% remote role,\" then they&#x27;re still on the hook for the charge even though you \"voluntarily\" quit.(Source: Spent a couple years adjudicating UI claims early in my career.) reply monero-xmr 19 hours agorootparentprevAny company that claims they can’t amend a contract is full of shit. That’s literally how business operates - they negotiate and change contracts all day long. reply ballenf 18 hours agorootparentThere are caveats, however. Making exceptions for employees can raise alarms in HR compliance. If an employee in a protected class has asked for the same, but perhaps cannot be granted the same terms, it could create liability.Larger companies really, really don&#x27;t like having terms vary across their non-executive level employees. And, arguably, for good reason. reply boringg 19 hours agorootparentprevCan&#x27;t = don&#x27;t want to. reply lsmeducation 19 hours agoparentprevI would look at it more like both sides are players. Playas gonna play. The girl plays, the guy plays.Omar: All in the gameIt&#x27;s not like devs aren&#x27;t gonna jump ship when the cycle shifts back in the other direction.Edit:RTO is a hill I think devs should be prepared to die on. If every dev is not ready to fight for Remote, don&#x27;t be shocked when it&#x27;s not even an option as the years go by. Covid gave us a gift, and it&#x27;s precious. We have to fight to keep it.Remote or Die. reply sokoloff 19 hours agorootparent> If every dev is not ready to fight for Remote...We have to fight to keep it...Remote or Die.I had devs quit because we went remote. I have other devs still here but expressing a clear preference for more of an in-office experience.Not everyone has the same preferences and not every dev wants to work remotely. We shouldn&#x27;t be surprised when those differences of opinion play out in the remote vs hybrid vs in-office spectrum. reply SOLAR_FIELDS 19 hours agorootparentI always hear of this legion of office lovers but when you ask for actual number splits it ends up perhaps somewhat unsurprisingly being that the vast majority of people want 100% remote. All you office people can go work together then, don’t make it miserable for the rest of us reply majormajor 10 hours agorootparent> I always hear of this legion of office lovers but when you ask for actual number splits it ends up perhaps somewhat unsurprisingly being that the vast majority of people want 100% remote. All you office people can go work together then, don’t make it miserable for the rest of usA comment like this making claims about what happens when you see actual numbers should link to some actual numbers...Anecdotally, my social circle is increasingly preferring hybrid, which loses one of the most-frequently-touted benefits of remote (make your home wherever you want, even potentially super cheap real estate). IMO remote will likely hang on at bigger, cog-in-assembly-line type information jobs, but some sort of frequent in-person meetups will be hugely valuable for high-ambiguity&#x2F;collaboration&#x2F;creative work. For me the difference between \"0 days in the office and nobody within a hundred miles\" for three years and now \"1 day in the office a week\" has been huge, productivity-wise. reply SOLAR_FIELDS 1 hour agorootparentHere you go:https:&#x2F;&#x2F;www.forbes.com&#x2F;advisor&#x2F;business&#x2F;remote-work-statisti....Note that this is Forbes, who is probably going to be biased towards in office work so the actual numbers from an unbiased source would probably be even more dramatic> For me the difference between \"0 days in the office and nobody within a hundred miles\" for three years and now \"1 day in the office a week\" has been huge, productivity-wiseWhy draw such a false dichotomy here? This doesn’t feel like an argument in good faith. The company I work for does onsites twice a year and gives people optionally the budget to meet in person once a quarter beyond that pretty much anywhere they want. I’ve never felt that I needed more than that to do high impact work reply likenesstheft 9 hours agorootparentprev> but some sort of frequent in-person meetups will be hugely valuable for high-ambiguity&#x2F;collaboration&#x2F;creative workThis is some vanilla scrum master bull shit, this isn’t how products or code get built. reply lsmeducation 19 hours agorootparentprevIt&#x27;s because they are straight up lying. Like c&#x27;mon, you get your OWN PRIVATE BATHROOM when you work from home. The benefits are so obvious, I wonder if the in-office people are legitimate trolls at times. reply jcranmer 19 hours agorootparentOne reason people like me might prefer working in the office: I don&#x27;t have a room in my apartment that I can turn into a home office.(Also, in the home I grew up in, I never had a private bathroom, nor did my parents. What kind of luxurious abode do you live in, and why do you assume that everyone has the same living conditions as you?) reply lsmeducation 18 hours agorootparentOkay, you&#x27;re on team office, got it.This cardboard box living individual here has such terrible living conditions he longs to breath the air of commercial real estate. Does your bathroom have a stall? No right?If you rent, your apartment comes with a private bathroom. If you have a roommate, at most one other person shares it with you. That&#x27;s a pretty private bathroom. You ever been on line to use the bathroom before in the office? Do you think its fun to take a shit with 10 other people in the bathroom with you? lolStick a desk in the corner of your apartment and voila, home office. reply SOLAR_FIELDS 18 hours agorootparentprevDecent companies that offer remote will offer to cover the costs of coworking space for people like your use case. The company I work for does. It’s not office as the only alternative reply RowanH 9 hours agorootparentprevRan a dev team in NZ (which had some brutal lockdowns). I would say it was about 1 in 20 wanted to be at the office. Even to the point of almost twisting our arms on lockdowns to be back in the office. That leaves 19 out of 20 on varying states of happiness being at home. On balance obviously most people prefer to WFH.The ones that didn&#x27;t : - Lonely - Impossible home environment to work in (noise&#x2F;kids&#x2F;distractions&#x2F;lack of good physical environment)I reckon it would probably even out in the long term to about 9 out of 10 preferring to WFH.[edit - should I add I left ~18 months later to start my own SaaS and love WFH, can&#x27;t imagine ever paying rent on an office again] reply jprete 17 hours agorootparentprevI was happy to go back to the office because working at home is bad for my ability to concentrate, and I also need the personal contact with others. But my particular desk location has not given me noise problems or anything. I also intentionally moved to make my commute a 15-minute walk, because it&#x27;s better for me to not spend tons of time commuting; I&#x27;m aware this isn&#x27;t a serious option for 99% of people.I&#x27;ve avoided talking about negative impacts from others&#x27; WFH because I don&#x27;t want to encourage the company to take it away from them. reply SOLAR_FIELDS 1 hour agorootparentAlso there is a bit of critical mass problem where if you’re something like 50% hybrid or more it suddenly is worse off from a career perspective for WFH people. What I mean by that is that the in office people end up inadvertently getting advantage over people that are remote in meetings, career advancement, etc.Hybrid is tough to do right to prevent problems like this from happening.I think the ideal model is 100% remote, cover the costs of a coworking space, do mandatory onsite sat least biannually, give people optionally the resources to meet with each other more often than that, and promote a culture where you meet frequently to collaborate remotely. Like we use Donut app on slack to randomly pair program every week and it works great reply 0cf8612b2e1e 19 hours agorootparentprevBut but the free coffee! Sometimes there are even doughnuts. reply lsmeducation 19 hours agorootparentprevThe Remote contingent needs to fight harder than the office contingent because the office paradigm has been the dominant paradigm up until now.In-office work will realistically be seen as a niche when it&#x27;s all said and done imho. Similar to LAN parties. It&#x27;s not the way most people want to do things.Time will tell I guess. But thanks for your anecdote, I hope as time goes on, we begin to see what a niche anecdote it will become. reply hotnfresh 18 hours agorootparentI’ve just recently encountered a company with a culture that doesn’t interact so well with remote work, and it’s been eye opening. Lots of preference for talking (in person, or call) as soon as a message exchange goes past about two messages, when often what needs to happen is one party needs to go figure out WTF they actually want or are concerned about so they can describe it clearly—the talking doesn’t help, either, just wastes more time. Awful weirdly-restrictive chat room organization, which is shocking considering nearly-leaderless online communities manage to arrange those kinds of things better. Everything important gets posted to one-on-one chats or ephemeral and invisible-to-outsiders small group direct messages. The effect is they’ve accidentally made a bunch of stuff opaque and secret that really, really should not be. It’s poison for collaboration.I also get the impression some folks here just kinda… aren’t comfortable with written language. Reading or writing it.It’s so weird to see, but some of the folks who’ve been living this kind of job-life 10+ years, now I get how they think remote can’t possibly be as productive as in-person—but it’s mostly due to dumb mistakes that are also harming collaboration in the office. Most of them have no idea the place is doing things so entirely wrong, or how much better it can be with some simple tweaks. reply smeej 9 hours agorootparentIt is absolutely incredible to me the number of people in professional roles who cannot read and write coherently, even when English is their native language.I cannot tell you how many meetings I&#x27;ve had where someone told me I \"wasn&#x27;t communicating clearly\" and I asked them to read the unclear message back to me so I could understand what would make it clearer for them.And then I find out they can&#x27;t read, at least not fluently. They either skip key words altogether or mistake them for other words.I&#x27;m convinced fewer than half of American adults could read a random book out loud, fluidly, without preparation. reply trane_project 4 hours agorootparentI looked this up and found this report: https:&#x2F;&#x2F;nces.ed.gov&#x2F;pubs2019&#x2F;2019179.pdfOnly 12.5% of the population scores in the levels 4 or 5 (they had to group them together because there were so few is my guess). This is a disgrace. There&#x27;s no reason why every adult should not be able to read proficiently. We are talking about reading, not some obscure skill.I wonder what these figures would be in Cuba. From what I remember reading, they were much higher because of widespread literacy campaigns.Edit: Found the source of this figures (https:&#x2F;&#x2F;www.oecd-ilibrary.org&#x2F;education&#x2F;oecd-skills-outlook-...) which has data from more contries in the OECD. Japan scores the highest, followed by Finland. reply sokoloff 1 hour agorootparent> Only 12.5% of the population scores in the levels 4 or 5 (they had to group them together because there were so few is my guess)The reason they did that is called out in endnote 3, \"This analysis combines the top two proficiency levels (Levels 4 and 5), following the OECD’s reporting convention (OECD 2013), because across all participating countries, no more than 2 percent of adults reached Level 5.\"The PIAAC definitions of each level are here: https:&#x2F;&#x2F;nces.ed.gov&#x2F;surveys&#x2F;piaac&#x2F;measure.asp?section=1&sub_... and I would estimate that extremely few daily tasks would require (or even be aided by) level 5 literacy proficiency. reply steveBK123 7 hours agorootparentprev> one party needs to go figure out WTF they actually want or are concerned about so they can describe it clearlyThis is exactly my observation on zoom&#x2F;meeting heavy culturesA lot of people cannot put their wants & desires into the written word.With a lot of these people I end up taking contemporaneous notes in a slack message to then send back to them. reply likenesstheft 9 hours agorootparentprevA culture around frequent calls is toxic. It reeks of insecurity from some people who are afraid of paper trails. reply lsmeducation 18 hours agorootparentprevOkay, so why do you think that will get better in person? Just curious. Why is \"lets meet in person\" the go to solution? Look, the RTO people are LOUDER. Period.They will win this fight if the Remote or Die crew doesn&#x27;t get loud. reply hotnfresh 18 hours agorootparentI think in-person talking papers over a bunch of dysfunction, in this case, at enormous cost in still-much-worse-than-ideal productivity (plus the overhead of offices). But does let things get done more efficiently than if they tried to take that dysfunction into a heavily-remote environment.It also, separately, masks it—people working in-person, but hobbled by bad communication patterns, at least look productive.I’m not claiming this is good, mind",
    "originSummary": [
      "Flexport, a business entity, has withdrawn job offers from workers who were set to commence work on Monday.",
      "The company's CEO, Ryan Petersen, voiced his regrets over the incident.",
      "This decision was necessitated by problems encountered with the hiring processes."
    ],
    "commentSummary": [
      "Flexport, a logistics firm, attracted criticism for retracting job offers and discontinuing job postings, leading to a debate about its hiring practices and the ramifications of abrupt job exits.",
      "The discourse on Hacker News encapsulates a broad spectrum of issues, including labor rights, employer loyalty, and the effects of layoffs, emphasising the moral dilemmas associated with rescinded job offers.",
      "The conversation also sheds light on the benefits and drawbacks of remote work, sparking comparisons between the feasibility of working from home versus on-site office execution."
    ],
    "points": 343,
    "commentCount": 448,
    "retryCount": 0,
    "time": 1694182075
  },
  {
    "id": 37433523,
    "title": "Emoji Generator with AI",
    "originLink": "https://emoji.fly.dev",
    "originBody": "EmojiGen An Open Source Emoji Generator My Emojis Powered by fofr/sdxl-emoji on Replicate. Build your own AI app → Fork this app on GitHub Generate Try something simple like ‘cat’ or ‘high five’. Click to download, and then add as a Slack emoji! Featured :floppy-disk-sandwich: :burning-gpu: :michael-scott: :sad-sea-otter: :pixar-buzz-lightyear: :baby-yoda: :george-washington: :carl-sagan: :spider: :nikola-tesla: :ada-lovelace: :van-gough: :frida-kahlo: :pixar-woody: :zombie-pope: :shiba-inu-with-hat:",
    "commentLink": "https://news.ycombinator.com/item?id=37433523",
    "commentBody": "Emoji Generator with AIHacker NewspastloginEmoji Generator with AI (emoji.fly.dev) 331 points by vicgalle_ 20 hours ago| hidepastfavorite147 comments Charlieholtz 19 hours agoHi! Creator here! I just started hacking on this last night and wasn&#x27;t expecting to see this on HN already :)It works by taking your prompt and generating an emoji using https:&#x2F;&#x2F;replicate.com&#x2F;fofr&#x2F;sdxl-emoji. Next, I remove the background using https:&#x2F;&#x2F;replicate.com&#x2F;cjwbw&#x2F;rembg. Then, click to download and add to slack!It&#x27;s all open-source, code is here: https:&#x2F;&#x2F;github.com&#x2F;cbh123&#x2F;emojiLet me know if you have any questions! reply petercooper 19 hours agoparentThat&#x27;s such a coincidence. I was browsing Replicate last night for new models and played with the very same one and was impressed at the results (well, mostly). Kudos to you for turning it into something more accessible and the background removal idea. For everyone else, Replicate is well worth playing around with if you want to tinker with some models without much commitment. reply Charlieholtz 13 hours agorootparentAhah, that&#x27;s awesome. Thank you! Let me know if you have any questions about Replicate! Happy to help. reply strunz 16 hours agoparentprevAwesome job! One criticism I have is these are emoji, they&#x27;re more like bitmoji or memoji. reply jsf01 17 hours agoparentprevSuper cool! I would add a checkbox to toggle whether you want background removal, or make that an optional second step. In about half the cases I tried, the background was an important part of my image and without it only weird artifacts remained. reply Charlieholtz 17 hours agorootparentgreat idea! working on this now reply subbu 18 hours agoparentprevJust came off your Elixir talk photos on Twitter to find this on HN. Please share your ElixirConf talk recording. Producing a nice emoji&#x2F;avatar for an AI agent seems like a cool idea. reply Charlieholtz 16 hours agorootparentThanks so much :)I&#x27;ll share it as soon as I have access! I&#x27;ll also post a transcript on my site (charlieholtz.com) soon. reply thedangler 18 hours agoparentprevDoesn&#x27;t this cost money? Could you use a model from huggingface too. I&#x27;m trying to get into this kind of stuff, but I want to use free or local AI models to avoid bills.. lol reply benrutter 1 hour agorootparentI guess even with hugging face you have to pay for the compute costs which could get pretty big pretty fast if something takes off. reply itslennysfault 18 hours agoparentprevElixir... don&#x27;t see that every day. I started reading through the code and was like \"what the heck is an ex file?!!\"Never really seen Elixir before. Looks pretty nice. reply Charlieholtz 16 hours agorootparentYes! I love Elixir :) Phoenix LiveView is really amazing. I feel so fast working in it. I got hooked after watching Chris McCord&#x27;s &#x27;Build a real-time Twitter clone in 15 minutes&#x27; demo, and things have improved a lot since then. reply whalesalad 17 hours agorootparentprevElixir is a killer language and tool. It&#x27;s considered esoteric these days but I think more and more folks are going to wake up to the inherent beauty of the Erlang BEAM and OTP applications pretty soon here. reply cpursley 17 hours agorootparentIs Elixir really considered esoteric? There’s some pretty big businesses running on it. reply pawelduda 15 hours agorootparentIt never took off as the Ruby killer. It hurts to say so because I agree with all the positive Elixir comments around here - IMO, people are missing out by not knowing of it. reply danielbln 18 hours agorootparentprevThe beauty of Ruby with the bulletproof-ness of Erlang. reply Turing_Machine 14 hours agoparentprevI see that the perpetually-offended have already shown up.My advice is to either simply ignore them, or point and laugh (your choice).The one thing you can count on them is that they are never going to be satisfied. Most likely they&#x27;re not even actually offended, not really. They just enjoy bullying other people. reply tasty_freeze 11 hours agoparentprevI tried the prompt \"electric bass\" -- the generated image was OK (it was a three string bass, but whatever) but the background removal not only removed the background but most of the body of the bass because (I assume) the pickguard was the same color as the image background. reply basch 11 hours agoparentprevThe word confused appears to cause a failure reply lawlessone 17 hours agoparentprevI really like it. It does seem to be suffering a little from some biases that are probably coming from sdxl though. reply nonethewiser 17 hours agorootparentWhat biases? reply lawlessone 16 hours agorootparentAs others have pointed out it tends to associate some professions with specific races. And crime related emojis with black people. It&#x27;s a Stable Diffusion issue. reply meowtimemania 13 hours agorootparentIt seems biased towards white people for most anything I input.criminal - black man stealing - white murderer - white killer - white thief - white skin, black beard. arab? Indian? man murdering kittens - white reply another_story 8 hours agorootparentprevI just ran \"a criminal\" 8 times and got only white men. reply yreg 16 hours agorootparentprevIt&#x27;s not a stable diffusion issue, it&#x27;s a culture issue. reply lawlessone 16 hours agorootparent\"It&#x27;s not a stable diffusion issue, it&#x27;s a culture issue.\"parroting and perpetuating the biases will ensure it will continue to be a culture issue. reply feralderyl 14 hours agorootparentThe text to image models represent the data that is being fed to it. If you feed it 100 images and out of those 100 images 95 are of white men politicians and 5 are of politicians of color, that&#x27;s what you are going to get back. These datasets are gathered automatically from various internet sources and represent the data that is available out in the wild. For stable diffusion to \"fix\" the bias in the data set would be simply impossible. That would require hiring an army of people whose sole purpose would be to \"rebalance\" the data set on some internal objective schema manually. reply nonethewiser 14 hours agorootparentprevId rather train it on real data and fix the root cause than to interject some version of utopia that won the minds of developers. replypackjc 19 hours agoparentprevwhat did you use to recorder the demo in the GitHub readme? its very smooth on the transitions. reply yieldcrv 8 hours agoparentprevOh this is crazy, I didnt realize replicate had user models like that for chainingIs there a good video or channel to follow thats all about replicate and similar services at this level of depth? reply hedgehog 12 hours agoparentprevRemarkably complete, it even declined to make a dirty eggplant. reply gedy 19 hours agoparentprevReally cool, I think this would be a nice service for Slack, etc to add custom emoji reply samstave 19 hours agoparentprevWonderful, but the background removal breaks the image - the original final is great, then it destroys it trying to remove the background...Try this prompt, and it gives a full image, then depending, it culls far too much when removing background, please make background removal optional?\"round brook as designed by comfort tiffany and alphonse mucha in green black and gold\" reply Charlieholtz 11 hours agorootparentYeah I’ve noticed that too. Adding a toggle soon! reply Karawebnetwork 19 hours agoprevThe broken AI hands with extra fingers as the thumbs up &#x2F; thumbs down button is a nice touch. reply calebegg 15 hours agoparentI know, I thought it was a mistake but then I literally laughed out loud once I understood. reply tabtab 12 hours agoparentprevAmen! Had a nice chuckle. Kudos for self-deprecating humor on the part of the authors. reply Turing_Machine 14 hours agoparentprevYes, that is freakin&#x27; awesome. reply bobwaycott 14 hours agoparentprevI assumed it was an intentional “two thumbs up&#x2F;down” that amusingly highlighted questionable AI hands at the same time. :) reply whalesalad 19 hours agoprevnext [–]Good news from Fly.io! We don’t collect bills smaller than $5.00. Bad news, you made it on the HN homepage and your CC is now on fire. reply constantly 19 hours agoparentI just saw this was on fly and thought the same thing lol. But I also thought to myself “this is actually a good use for fly, nice simple app to see if there’s traction before moving to something reliable.” reply osener 19 hours agorootparentDo you have any specific references or instances that indicate fly.io as being unreliable? reply itake 13 hours agorootparentFlyIO deleted my database and I lost all data.Fly told me in 7-days they would automatically update my redis database. My plan was to manually update it that weekend. 3 days later, I get an alert that they migrated the db early. b&#x2F;c I didn&#x27;t have storage enabled, all data was gone.Support ticket:https:&#x2F;&#x2F;community.fly.io&#x2F;t&#x2F;forced-migration-to-v2-with-decei... reply jjice 18 hours agorootparentprevVery anecdotal so take this lightly but the past year or so of Fly.io threads have had a lot of comments expressing negative experiences with reliability. I have no experience myself so I can&#x27;t comment, but if you search for a fairly recent thread you&#x27;ll probably find some people&#x27;s experiences. reply httgp 4 hours agorootparentI was about to start building a new application and I really wanted to give Fly a shot, but the CLI literally wouldn’t connect to their builder API. The status page was all green, but clearly things weren’t working.I moved to Render and I’ve had a much better experience. reply internet_hugs 18 hours agorootparentprevI had something deployed on fly for a few months and was regularly running into random restarts and connection issues. I ended up switching to DO’s app platform and haven’t seen any of that since. reply constantly 18 hours agorootparentprevHere’s a good thread where this is discussed in detail, plus my own anecdotal experience:https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=36808296 reply lib-dev 19 hours agorootparentprevDoes fly do runaway billing? reply ceejayoz 18 hours agorootparentBandwidth would be the concern, I think. They won&#x27;t auto-scale machines up&#x2F;down for you. reply iancarroll 18 hours agorootparentFly bandwidth pricing is pretty competitive; if bandwidth is an issue your bill will be cheaper on Fly than most other providers. reply gaudat 17 hours agoparentprev... And it is hugged to death now. reply neom 15 hours agoparentprevCurious as a non dev, could this equally have been on vercel or netlify or does this type of app lend itself to fly? reply crazygringo 17 hours agoprevThis is super, super cool.However, I also observe that it&#x27;s not very good at creating emoji that are legible at, well, emoji (body text) size.Emoji and icon creation generally isn&#x27;t as straightforward as you&#x27;d think -- you need to essentially create a series of clear shapes that are intelligible at body text size (32x32 pixels at retina, or even smaller), and then add texture and smaller details in a way that pops at higher resolutions, but \"disappears\" when downscaled.I wonder if there&#x27;s a pipeline that could implement that today. E.g. training on emoji at 32x32 resolution to generate those, and then some kind of intelligent upscaling algorithm also trained on low- and high-res emoji that is able to insert appropriate texture and details according to the emoji description.I love the idea that in the not-too-distant future people will just be dictating their desired emoji, they&#x27;ll save and reuse the ones they love from their friends, and we&#x27;ll get yearly most-popular-new-emoji lists that reveal the national&#x2F;worldly mood&#x2F;zeitgeists... reply brap 17 hours agoprevProtip: if you remove the \"hidden\" class name from the div containing the key word \"Recents\", you can see recent emojis made by others (which is both fun and disturbing) reply all2 16 hours agoparentI keep looking for an element with \"Recents\" in it and Chrome isn&#x27;t showing anything. reply brap 16 hours agorootparentLooks like it was removed reply all2 15 hours agorootparentBummer. I&#x27;d love to see what other people have generated rather than just the curated stuff. reply diogenes4 5 hours agorootparentEven just knowing what i&#x27;ve entered i can understand hiding this.... especially if you&#x27;re attaching your own name to things.Plus, it opens liability issues. replythih9 19 hours agoprevI can’t stop thinking that in 2-3 years this kind of functionality might get bundled with popular chat platforms by default.As I keep trying to generate :sexy-cthulu: and :van-gogh-with-an-eyepatch: , my queries time out, perhaps for the best. reply ben_w 16 hours agoparent> I keep trying to generate :sexy-cthulu:The e621 model will probably have that in the training set… reply carstenhag 12 hours agoparentprevSomething similar (maybe not ai, idk) is included in Google&#x27;s keyboard app. You can combine many emoji. Not all of them, but it&#x27;s still quite nice! reply thealistra 19 hours agoprevI think it has some xss attack as on load my ios safari asked if i want to download 2girls1cup.jpg reply taneq 17 hours agoparentIt seems to use %s.jpg as a filename and to request the browser to download the picture you clicked on as that filename, so probably some larrikin typed 2girls1cup in as a prompt and you happened to click on whatever picture came out and was in the feed. reply Y_Y 17 hours agorootparent> Larrikin is an Australian English term meaning \"a mischievous young person, an uncultivated, rowdy but good hearted person\", or \"a person who acts with apparent disregard for social or political conventions\". reply marckohlbrugge 20 hours agoprevI think this is based on https:&#x2F;&#x2F;replicate.com&#x2F;fofr&#x2F;sdxl-emojiIt&#x27;s SDXL (Stable Diffusion&#x27;s latest release), fine-tuned on Apple Emoji images. reply davidmurphy 7 hours agoprevThis is so fun! I&#x27;ve been sharing the link all day with friends and colleagues.BTW, the official new 15.1 Unicode emoji are being released on Monday -- if you&#x27;re in the Bay Area, come to the release party at the Computer History Museum in Mountain View, and there&#x27;s a livestream too: https:&#x2F;&#x2F;computerhistory.org&#x2F;events&#x2F;new-emoji-release-party&#x2F;(It&#x27;s free!) reply radarsat1 18 hours agoprevInterested to know what can be done with the up&#x2F;down votes, some kind of RLHF for image generation?Unfortunately it seems some \"tiled images\" must have made it into the dataset as half the time it generates an array of tiny images instead of a single emoji. Out of about 5 or 6 tries I got one good one that wasn&#x27;t centered correctly. reply Charlieholtz 16 hours agoparentYeah my thought was the up&#x2F;down votes could be used to have a \"Trending\" or \"Most Popular\" section on the site. But that RHLF idea is interesting too — I&#x27;ve had the same problem with tiled images, and so fine-tuning on highly upvoted examples may help reply pimlottc 17 hours agoprevBased on a few tests, the examples on the homepage appear to be heavily curated… reply nluken 15 hours agoparentEven so, the spider has 10 legs! reply hoistbypetard 9 hours agoprevThe AI hands for the like button make the whole site for me.https:&#x2F;&#x2F;imgur.com&#x2F;a&#x2F;4q89CQH reply amelius 19 hours agoprevFor more fun:https:&#x2F;&#x2F;huggingface.co&#x2F;spaces reply cloudcloud3243 2 hours agoprevtypes \"ubutnu distro is sad emoji\" it says prompt is likely nsfw try again reply ruuda 18 hours agoprevA few years ago I made a chat bot at work that read the last few messages on Mattermost and then used GPT-2 to predict how the conversation would continue. The bot would then post that message. I added emoji reactions as well so the bot could also react on posts. Shortly afterwards, somebody noticed an empty emoji reaction on a post. It turned out that the emoji names were just strings, and you could react even with non-existent emojis. The bot had invented the “phantom-dummy-tune” emoji. Promptly a colleague made an emoji for it and uploaded it under that name, and it would show up. Glad to see that this process can now be automated as well :-) reply Workaccount2 19 hours agoprevI think we killed it reply Charlieholtz 18 hours agoparentworking on it!! scaling up now reply RankingMember 19 hours agoparentprevyep it&#x27;s dead reply quaffapint 19 hours agoprevBased on some of these, it seems &#x27;AI&#x27; still just can&#x27;t figure out fingers. reply iinnPP 17 hours agoparentWhen you setup SD1.5 with enough extras, the finger problem is effectively gone. For those very few that slip through, a new seed or inpainting takes care of it. reply the88doctor 20 hours agoprevThe generator isn&#x27;t very accurate. I prompted \"a sad bald construction worker\" and I got a smiling construction worker wearing a hard hat. Only 1 out of 3 adjectives was implemented. reply layer8 19 hours agoparentConstruction workers probably need to wear a hard hat even when they are bald. ;) reply evan_ 18 hours agoprevNow that this is working it&#x27;s very cool. The background removal is a little intense, it keeps cutting off people&#x27;s hair:https:&#x2F;&#x2F;replicate.delivery&#x2F;pbxt&#x2F;EKWIccdjCTrcEdJYFN1kxo9fF5JY...Some of these are extremely good, I hope you add some kind of curated \"best of\" gallary at some point. reply abi 15 hours agoparentI built a clone of this without the background removal: https:&#x2F;&#x2F;a.picoapps.xyz&#x2F;argue-party?ref=hn reply Kiuhrly1 12 hours agoprevI tried a few times to get a good \"donkey kong thumbs up\" emoji but the results didn&#x27;t make much sense (spritesheet-like, missing any kind of thumbs up). Most of them did contain Donkey Kong, in some weird AI-deformed way. reply amelius 11 hours agoparenthttps:&#x2F;&#x2F;imgur.com&#x2F;a&#x2F;cQoxAOCUsing: https:&#x2F;&#x2F;replicate.com&#x2F;fofr&#x2F;sdxl-emoji reply jiggyjace 12 hours agoprevAwesome idea, but I gave it a couple of tries for \"software integration\" and \"integrated\" and both times gave me a massive 9x9 grid of disturbing emoji faces peeling off the screen like stickers. Likely broken. reply tantalor 20 hours agoprev> Pro-tip: we&#x27;ll automatiically pre-pend &#x27;A TOK emoji of a&#x27; to your prompt. Try something simple like &#x27;cat&#x27; or &#x27;high five&#x27;.What is a \"TOK emoji\"? reply Filligree 19 hours agoparentA sure sign that it was trained to replicate a particular style, which the trainer decided to name TOK.It’s somewhat helpful to pick names that are a single token after byte pair encoding, which TOK happens to be. reply amelius 18 hours agoparentprev> Pro-tip: we&#x27;ll automatiically pre-pend &#x27;A TOK emoji of a&#x27; to your prompt.What if I write \"cat, except give me a real photo\"? reply znagengast 16 hours agoprevThe thumbs up icon killed me reply TOMDM 19 hours agoprevSeeing what other users are prompting it with is half the fun of the output.Nice to see people merely pushing boundaries rather than ruining it for everyone for now. reply abi 15 hours agoprevBuilt a version of this using the same emoji model, but without the background removal: https:&#x2F;&#x2F;a.picoapps.xyz&#x2F;argue-party?ref=hnLet me know if you have any feedback or feature ideas. reply tumidpandora 6 hours agoprevAlien -> uh, oh, failed to generate, looks like NSFW input! reply anotherevan 10 hours agoprevOne thing I&#x27;ve noticed over time is that none of these image generation AIs seem to know what an Echidna is. reply p4bl0 14 hours agoprevDoesn&#x27;t work at all for me. I tried \"pirate flag\" and got something ugly and not at all piraty than was then made uglier and essentially blank by the background removal. reply jeffhuys 14 hours agoparentDid you try more than once? Happened on my first try too, next few were great reply steve_adams_86 19 hours agoprevDoes it make sense to prompt it based on the names of existing Apple emojis? I can’t tell if it’s helping or not. Some tests are exceptionally good, some are inexplicably awful. Very cool either way! I had a lot of fun experimenting. reply airstrike 18 hours agoprevI love how Hulk Hogan is invariably green, since it mixes him with The HulkHilarious reply mholm 19 hours agoprevThe handshake is hilarious. That&#x27;s so many fingers reply doublerabbit 19 hours agoparentSymbolises any contract I signed well. reply all2 16 hours agorootparent[X] I have read and agree to the Terms of Service and Sale of Soul Agreements. reply Dig1t 18 hours agoprev\"threesome\" is an interesting one.Men are always black and the women are always white.I wonder where it learned that.. reply iinnPP 17 hours agoparentDiversity training. reply taneq 17 hours agoparentprevn=? reply Dig1t 16 hours agorootparentn=3 for me.It&#x27;s also \"featured\". And the featured one is an example of what I&#x27;m talking about. reply evan_ 19 hours agoprevI like the Futurama ones. They’re inaccurate but in cute ways. Fry has smaller Frys coming out of his head and Leela has two eyes. reply lawlessone 15 hours agoparentAsking it for one eyed anything produces only outputs with two eyes reply supazek 19 hours agoprev>watermelon-guy reply lawlessone 18 hours agoprevYou can save these and import them into WhatsApp via some sticker creation apps. This is fun reply ghosty141 18 hours agoprevIt produces some \"interesting\" results. I put in \"robber\" expecting that one emoji everybody thinks exists but doesnt, and I got a black guy with a white beanie&#x2F;hat.Apart from that it produces insanely convincing results. I believe people would not bat an eye if they&#x27;d get added in an update to iOS! reply sushisource 17 hours agoparentHeh, I put in \"grapefruit\" and it gave me just an absolute mess of like 100 grapefruit slices and then added a bunch of smoke over the top when it \"removed the background\".Then I tried \"day gecko\" and the output absolutely rocked. So I guess my first try was unlucky. reply SamBam 13 hours agorootparentIt loves giving me 100 of someone. I&#x27;m wondering if there are sticker pack-like images in it&#x27;s training set.And then, yes, the background removal takes away half of these and leaves smoke. reply Charlieholtz 14 hours agoparentprevYeah, that’s a good point. We’re currently training a new version that reduces this bias. It’s really important to us that we make this better. reply ChatGTP 18 hours agoparentprevDrug dealer, car thief, car jacker, drive-by-shooter, murderer...all of those things and many other crime related terms will give you a black person.Quite a shit thing to be happening. reply fnordpiglet 18 hours agorootparentAI models and their biases are reflections of the biases of society. I don’t like them, but it’s hard to argue with the fact it’s just math producing the semantic best likelihood based on publicly sourced training data. reply chefandy 17 hours agorootparentSee that&#x27;s the thing about content creation— you entirely lose the \"it&#x27;s just a tool and tools are inherently neutral\" argument. Nobody&#x27;s claiming that the implementor created deliberately racist content, but you can&#x27;t merely disavow responsibility for the content you generate because the input and algorithms you chose were the root of the problem. Like it or not, what&#x27;s included in the source data for these models is an editorial choice, and which model you use and how you use it are also editorial choices. reply fnordpiglet 17 hours agorootparentActually I think “it’s a reflection of society’s bias” is a totally reasonable statement to make if you’re product is a reflection of societies generated content.Rather than impugning the model makers for not curating societies content to erase its biases, to my mind it demonstrates what’s broken with society, and should be used as an indictment of how we encode our society in our media - the fact that if you asked an oracle a question it produces racist output is more an indictment of society itself because the media of our society IS racist. Sweeping it under the rug serves no one, IMO.Instead the story is “AI models are racist,” which misses the real problem. The real problem is that when a human in our society wants to portray a robber, they use a black man. That should be the story, and pitching it as a flaw with AI models is like criticizing the color of the paint when the foundation is cracked. reply lawlessone 16 hours agorootparentHow does perpetuation of stereotypes fix society? reply reidjs 16 hours agorootparentIt&#x27;s not perpetuating stereotypes, it&#x27;s showing that these stereotypes exist in society. Similar to how a comedian might point out the absurdity of racism by writing and delivering a joke about race. Or how a child might ask why people of certain skin tones tend to have different hair styles as well. Neither the child nor the comedian are definitely racist, but they are making observations that may not be considered politically correct. reply lawlessone 16 hours agorootparent\"It&#x27;s not perpetuating stereotypes\".. okhttps:&#x2F;&#x2F;techpolicy.press&#x2F;researchers-find-stable-diffusion-a... reply fnordpiglet 14 hours agorootparentThe fact we, and many people, are having these conversations wouldn’t happen if they curated societies biases out of their product.Saying their product perpetuates stereotypes but ignoring its reflecting the entirety of medias bias is ignoring that all media perpetuates these stereotypes, and their models are no more or less perpetuating of these stereotypes than literally the entirety of all media. The fact they hold it up for careful examination in an irrefutable way is a feature in my mind, not a flaw.I would note that SD produces a base model, which can and is routinely fine tuned. I would rather see a fine tuning that eliminates the bias in the media than see a base model that is fundamentally divergent from the state of the media today. That’s the proper abstraction - a base model that’s the basic output from mass training on available media, and models that specialize for some curation. But I also object to the base models being censored. The reason why is it cuts off a base truth from the semantic models underlying such that it’s outputs are at odds with observable reality. Specialized models shouldn’t be doing things like un censoring, but adjusting base truth to curated views. “Unbiased model” should be a fine tuning of reality. “Safe for work model” should be a fine tuning of reality. The challenge is the model producers don’t trust the model users to be adults making adult decisions and thinking adult thoughts - including about biases, stereotypes, etc.But regardless, I think base models should never be thought of as final products but as a basis to produce a final product. reply chefandy 11 hours agorootparent> Saying their product perpetuates stereotypes but ignoring its reflecting the entirety of medias bias is ignoring that all media perpetuates these stereotypesNot being further up on a hierarchy of many bad actors doesn&#x27;t absolve you from responsibility. What goes into these models is an editorial decision, as is which one to use in your software. This author isn&#x27;t distributing models and they aren&#x27;t being held to task over the model&#x27;s content— they&#x27;re generating images from those models and distributing them, and those images are what bother people. If they used the same model but somehow didn&#x27;t get objectionable results, nobody would know, let alone care.You say the media is to blame? Sure. When you start generating content with a particular perspective, you are media. reply pizzafeelsright 16 hours agorootparentprevWhat is wrong with stereotypes?Snakes are, at times, quite dangerous. Granted, not all snakes, but in terms of being risk-averse, and unaware of which snakes are quite possibly deadly, am I not, at least in my current ignorant state, best served to avoid all snakes?Feel free to substitute \"snakes\" with any existing stereotype. I personally am a fan of \"people who eat pizza with pineapple\". reply chefandy 12 hours agorootparentThere&#x27;s a whole lot of information out there about the harm caused by stereotypes. Normally I tell people to look it up because it&#x27;s not hard and I&#x27;m not your research assistant, but here&#x27;s a freebie: \"Are Greg and Emily More Employable Than Lakisha and Jamal\" is a mid-aughts study in which the authors sent out 5k job applications using fabricated equally-weighted resumes that were randomly assigned a stereotypically Black American or stereotypically white American name. Resumes attached to &#x27;white&#x27; sounding names were fifty percent more likely to recieve a callback. Would you consider that a reasonable pan-industry attempt by employers to protect themselves from harm based entirely on someone&#x27;s name? reply joshuahedlund 15 hours agorootparentprevYour mistake is you&#x27;re only thinking about it from the perspective of the stereotyper. Now think about the negative impact (career, legal system, etc) on the person being incorrectly stereotyped. reply lawlessone 15 hours agorootparentprevBad faith actor replylawlessone 17 hours agorootparentprev>AI models and their biases are reflections of the biases of society.It&#x27;s not one way though it perpetuates the bias. I&#x27;m not blaming the author of this as its Stability AI that need to clean their data. reply Charlieholtz 14 hours agorootparentprevYeah I’ve also noticed an unintended bias that we’re not proud of.We’re on it – we’re reviewing the model and fixing the issue ASAP. Thanks for pointing it out and for your patience! reply staringback 13 hours agorootparentJust take a step back and think about what you&#x27;ve said and the meaning of the word \"bias\" reply lawlessone 18 hours agorootparentprev:( Everyone really needs to clean their data reply pizzafeelsright 16 hours agorootparentWho will clean the cleaners? Are they without bias and without blemish? reply voynich 13 hours agorootparentYeah as long as they&#x27;re black trans people replyaembleton 12 hours agoprevBuild database gives me a blank emoji reply sid- 18 hours agoprevIt didnt get \"Tiger Woods\" correct. reply talboren 20 hours agoprevWow this is fun. reply lloydjones 15 hours agoprevThis doesn’t appear to have any filter for generating based on racist &#x2F; extremist language reply ricberw 19 hours agoprevTons of fun :) thanks for the laugh! reply amelius 19 hours agoprevI see a bunch of Disney characters there.They look exactly like how they&#x27;re supposed to look.That might be a problem, legally speaking ... reply taneq 17 hours agoprevHaha not bad, how do you link them? :anthropomorphic-banana-wielding-a-sword-and-shield:I was going for this guy: https:&#x2F;&#x2F;www.thingiverse.com&#x2F;thing:3327431 reply meiraleal 19 hours agoprevThe generated \"emoji\" size is 500kb. That&#x27;s really a lot. reply fkyoureadthedoc 18 hours agoparentThey&#x27;re relatively large PNGs, so that&#x27;s not surprising. Resize and convert to JPG if you want to use them for something and care about the size. reply quantum_state 14 hours agoprevuseless ! reply swayvil 14 hours agoprev [–] It could replace written language.Needs more training though. \"hate\" got me a smiling bearded man.And it&#x27;s got a NSFW filter. Seriously? reply Minor49er 11 hours agoparent [–] What were you expecting a \"hate\" emoji to look like? reply gweinberg 8 hours agorootparentBuddy bradley. reply swayvil 11 hours agorootparentprev [–] An angry face at minimum. Bared teeth. Glaring eyes. You know, the obvious.I mean that is dead obvious, right?Or, if there is some deeper symbology that I&#x27;m not aware of, that. It would be nice to be surprised. reply Minor49er 10 hours agorootparent [–] That just sounds like anger to me reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "EmojiGen is an open-source emoji generator hosted on Replicate, allowing users to design and create custom emojis.",
      "It extends its functionality by permitting users to fork the app on GitHub, specifically enabling the creation of unique emoji such as a floppy disk sandwich, a burning GPU, and various pop culture icons.",
      "Users can generate emojis, download, and subsequently utilize them in platforms like Slack, fostering a more personalized messaging experience."
    ],
    "commentSummary": [
      "The article reviews an AI-powered emoji generator, with user feedback revealing concerns about biases and potential for integration into chat platforms.",
      "The discussion also centers on Fly.io, a website service, with mixed feedback revolving around issues like reliability, data loss, and connection, alongside positive experiences and competitive pricing.",
      "The limitations of the emoji generator, particularly regarding accuracy and biases, prompts a broader conversation about the responsibility of AI model creators in tackling these biases."
    ],
    "points": 330,
    "commentCount": 147,
    "retryCount": 0,
    "time": 1694181253
  },
  {
    "id": 37437311,
    "title": "FTC judge decides Intuit’s ‘free’ TurboTax ads misled consumers",
    "originLink": "https://www.theverge.com/2023/9/8/23864538/turbotax-intuit-ftc-deceptive-practices-free-tax-filing",
    "originBody": "Skip to main content The Verge homepage / Tech/ Reviews/ Science/ Entertainment/ More Menu POLICY/TECH/APPS FTC judge decides Intuit’s ‘free’ TurboTax ads did mislead consumers / The FTC ruled TurboTax ‘deceived consumers’ by advertising its tax filing service as ‘free.’ By Emma Roth, a news writer who covers the streaming wars, consumer tech, crypto, social media, and much more. Previously, she was a writer and editor at MUO. Sep 8, 2023, 12:52 PM CDT|4 Comments / 4 New Share this story Image: Getty Intuit, the parent company of TurboTax, is still facing blowback over claims it tricked people into using its “free” tax filing service that wasn’t actually free. In a ruling on Friday, the Federal Trade Commission’s chief administrative law judge (ALJ) ruled that Intuit “deceived consumers” and “engaged in deceptive advertising.” The ruling includes several pages of commercials and online ads where Intuit advertised its “Free Edition” software. While the name implies that the service is, well, free, people wound up having to pay to use it — sparking a lawsuit from the FTC and a $141 million payout to affected users. Meanwhile, Intuit’s actually no-cost Free File version, which it launched in partnership with the IRS, remained exceedingly difficult to find. In 2021, Intuit exited the program after the IRS stopped letting companies hide their free filing services from search engines. The FTC’s ALJ determined that there is a “cognizant danger of a recurring violation” by Intuit and issued a cease-and-desist order that prohibits the company from “engaging in deceptive practices in the future.” The ruling prevents Intuit from representing a product as free unless it actually is free for everyone to use and “clearly and conspicuously discloses any terms that would limit the offer.” In a response provided in advance of the FTC’s ruling, Intuit calls the agency’s investigation process “flawed and highly questionable,” noting “Intuit already adheres to most of the advertising practices in the FTC’s erroneous decision.” The company adds that it has “been clear, fair, and transparent” with customers and remains “committed to free tax preparation.” Hopefully, we won’t need to rely on potentially deceptive third parties to file our taxes online going forward. The IRS is working on a government-backed free filing service that it will pilot during the 2024 tax season. 4 COMMENTS4 NEW Most Popular Tesla’s $25,000 ‘next-generation car’ will have a Cybertruck design You’ll soon be able to buy a brand-new Xbox 360 Chrome is about to look a bit different iOS 16.6.1 fixes a big iPhone security vulnerability used to install Pegasus spyware Pixel Watch 2 teaser shows off a new crown and sensor layout Verge Deals / Sign up for Verge Deals to get deals on products we've tested sent to your inbox daily. Email (required) SIGN UP By submitting your email, you agree to our Terms and Privacy Notice. This site is protected by reCAPTCHA and the Google Privacy Policy and Terms of Service apply. More from Policy SpaceX’s next Starship launch is on hold as FAA lists 63 ‘corrective actions’ needed How Google plans to win its antitrust trial iOS 16.6.1 fixes a big iPhone security vulnerability used to install Pegasus spyware FTX exec Ryan Salame pleads guilty to criminal charges SPONSORED CONTENT Most Windows Users Didn't Know This Simple Trick Safe Tech Tips Read more Forget The Blue Pill, Use This Household Food To Fight ED urologytip.pro Cardiologist: Too Much Belly Fat? Do This Before Bed Healthy Guru These New Luxury Camper Vans Are Close To Perfection, Take A Look! Camper VansSearch Ads Click Here The New Kia Telluride Will Leave You Speechless (See Prices) Auto Savings Center|Search Ads The Best Sonic Dermaplaning Tool For Women Over 50 Michael Todd Beauty Shop Now TERMS OF USE PRIVACY NOTICE COOKIE POLICY DO NOT SELL OR SHARE MY PERSONAL INFO LICENSING FAQ ACCESSIBILITY PLATFORM STATUS HOW WE RATE AND REVIEW PRODUCTS CONTACT TIP US COMMUNITY GUIDELINES ABOUT ETHICS STATEMENT THE VERGE IS A VOX MEDIA NETWORK ADVERTISE WITH US JOBS @ VOX MEDIA © 2023 VOX MEDIA, LLC. ALL RIGHTS RESERVED",
    "commentLink": "https://news.ycombinator.com/item?id=37437311",
    "commentBody": "FTC judge decides Intuit’s ‘free’ TurboTax ads misled consumersHacker NewspastloginFTC judge decides Intuit’s ‘free’ TurboTax ads misled consumers (theverge.com) 317 points by mfiguiere 15 hours ago| hidepastfavorite92 comments dang 14 hours agohttps:&#x2F;&#x2F;www.ftc.gov&#x2F;news-events&#x2F;news&#x2F;press-releases&#x2F;2023&#x2F;09&#x2F;... electrondood 15 hours agoprevIntuit is guilty of using a whole range of dark UI patterns to trick people into paying for products they don&#x27;t need. Last year I almost paid $80 (surprise at the END of the entire TurboTax flow) and clicked back 10 steps to realize that they showed a deceptive screen that implied that you had to select that option.Their marketing emails are particularly deceptive, and if you try to opt out of them and unsubscribe, they force you to enter personal information you don&#x27;t readily have access to to \"confirm your identity.\"I lost a lot of respect for Intuit from the lack of respect they show consumers. reply JAlexoid 13 hours agoparentI mean... They pay off literally every single lawmaker, to make sure that you will pay them for doing your taxes.If you had any respect for them at any time, you probably shouldn&#x27;t have. The level of corruption that they support is stunningly humongous. And even if you&#x27;re using your \"local tax person\" - you&#x27;re likely to be still making them money... as many CPAs use Intuit&#x27;s software. reply soundsgoodtome 3 hours agorootparentHonestly, I think there are just a lot of really naive people who visit this site… and I think there are a lot of bad actors here who are complicit too.Anyone who’s been in the game for more than a few years knows how amoral companies are. Marketers and growth PMs are incentivized to convert, regardless of the methods used. Execs don’t give a shit unless there’s an impact on revenue.Anecdata - I PM a product suite that serves growth&#x2F;marketers. If you’re reading this, your company has probably used it, is actively using it, or has considered using it. I regularly ask customers and prospects about their KPIs during research calls - in the end, conversion is all that matters. reply harikb 13 hours agorootparentprevMy tax guy uses Intuit Software as well. And I pay him 10x the cost of Turbo Tax. But I pay him for expertise &#x2F; peace of mind.Intuit can fleece me all they want. Give me non-BS advanced features and I will gladly pay way more. Just don&#x27;t trick my mom & dad. But I guess they need to make their money from the masses. reply JAlexoid 13 hours agorootparentLet&#x27;s be real - us paying them $4000 per year isn&#x27;t going to make them money.Tricking your parents into paying for things that they don&#x27;t even need - that&#x27;s where the money is.Selling 20 $2mil cars per years isn&#x27;t as valuable as selling 1mil \"cheap\" $700 iPhones per year. reply pkulak 11 hours agorootparentHoly smokes do you ever have complicated taxes! reply Mountain_Skies 12 hours agorootparentprevDemocrats have the opportunity to change that. Every time Republicans are in charge, the Democrats scream loudly about letting the IRS offer their own free tax filing service and blame Republicans for it not happening. The IRS is trying again right now to offer free filing and the Democrats are in charge of Congress and the presidency. They can make this happen or they can let the IRS&#x27;s work go to waste and reserve this issue for screaming at Republicans again next time they have control over the White House or part of Congress. reply lotsofpulp 12 hours agorootparentDemocrats have not been in charge for a couple decades or more.Manchin has long not toed the line with Democrats, and Sinema is officially not a Democrat, so they are not even at 50 senate votes. And they are the minority in the House, so they clearly do not have any control of Congress.You also need 60 votes in the Senate for whatever reason, which they are nowhere close to. The last time sort of had it, which was again a heavily compromised 60 votes, was Jun to Dec 2009 during which time PPACA was passed. reply Brybry 4 hours agorootparentFor anyone curious, Wikipedia has a great article[1] showing party trifecta history in Congress (though keep in mind what lotsofpulp said about needing 60 votes in the Senate for true control, which is rare for both parties).And when Democrats were stronger in Congress earlier in Biden&#x27;s term they did pass legislation giving funding to the IRS to explore developing software for doing taxes (Sec. 10301 (1)(B) of the Inflation Reduction Act[2]).Further, when Republicans forced the Fiscal Responsibility Act of 2023 during the last debt ceiling increase \"crisis\" they specifically listed (1)(B) as part of their recension of funds[3], though I don&#x27;t think it had any meaningful impact because the study had already been made and released. [4]Because $15,000,000 was a really big deal to the federal deficit. &#x2F;s[1] https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Party_divisions_of_United_Stat...[2] https:&#x2F;&#x2F;www.govinfo.gov&#x2F;content&#x2F;pkg&#x2F;PLAW-117publ169&#x2F;html&#x2F;PLA...[3] https:&#x2F;&#x2F;www.govinfo.gov&#x2F;content&#x2F;pkg&#x2F;PLAW-118publ5&#x2F;html&#x2F;PLAW-...[4] https:&#x2F;&#x2F;www.irs.gov&#x2F;newsroom&#x2F;irs-submits-direct-file-report-... reply dragonwriter 11 hours agorootparentprev> The IRS is trying again right now to offer free filing and the Democrats are in charge of Congress and the presidency.No, Democrats are not in charge of Congress; Republicans have a majority in the House of Representatives and Democrats have a narrow majority, relying on two members that fairly consistently undermine Democratic policy priorities, in the Senate (and even without that problem don&#x27;t have the 60 votes it takes to move normal legislation over a filibuster in the Senate.) reply willcipriano 12 hours agorootparentprevIt&#x27;s really funny when a party is in power and they have to pretend to be \"working hard\" but the goal is obviously to maintain the status quo.Almost had them with force the vote. reply harpooniker 3 hours agorootparentDemocrats complained about healthcareObama pushed the ACA (Obamacare), had to compromise to get it passed, later it was gutted by Republicans, with key provisions remaining1. Children can remain on parent&#x27;s healthcare plan until 262. Insurance companies can&#x27;t deny coverage for existing diseasesRepublicans almost got rid of these provisions and it was saved by one vote from John McCain who did it out of spite and not because he agreed with the ACA [1][1] https:&#x2F;&#x2F;www.nbcnews.com&#x2F;health&#x2F;obamacare&#x2F;mccain-hated-obamac... reply willcipriano 3 hours agorootparentThat has nothing to do with force the vote. Force the vote proved establishment democrats are never going to even try to give you healthcare. They are terrified of a medicare for all vote hitting the floor when they have a majority. reply jakearmitage 12 hours agorootparentprevAre you assuming Democrats are inherently good and well-meaning and could not make this happen due to a missed opportunity?Because corruption goes both ways. There&#x27;s a reason one party blames the other for X when the other is in power, and then do nothing about X when they are in power. reply harpooniker 4 hours agorootparentThe Inflation Reduction Act directed the IRS to create a feasibility study on direct file\"The report focuses on three areas: taxpayer opinions, cost and feasibility. The report also includes an analysis conducted by an independent third party, as required by the statute. The report also lays out the potential benefits and challenges associated with the IRS implementing a Direct File program.\"https:&#x2F;&#x2F;www.irs.gov&#x2F;newsroom&#x2F;irs-submits-direct-file-report-... reply sinistersnare 6 hours agorootparentprevI agree with you. The Democrats and Republicans in our government mostly agree on the topic we are discussing in this thread.There is no radical movement discussed within our government to actually solve these problems. No politician is making serious attempts to improve our bureaucratic system. reply godelski 12 hours agoparentprev> Last year I almost paid $80 (surprise at the END of the entire TurboTax flow) and clicked back 10 steps to realize that they showed a deceptive screen that implied that you had to select that option.I hit this two years ago. When I finally undid it (took me a good 20-30 minutes), it removed all the work I did. I then had the option to restore it for $80 and it was still implying that I had to pay this no matter what. I spent another 20 minutes trying to fill things out again before I hit a loop that wouldn&#x27;t let me through without paying. The issue seemed to be that I was working remote in a different state and it was trying to get me to file taxes with both states even though it said I didn&#x27;t need to file anything! I sucked it up and paid. So I avowed to never use them again. Last year I used FreeTaxUSA and had no issues. I just paid $15 for state and that was it. My taxes are simple, able to use a 1040EZ, having to pay $80 is a fucking joke.Fuck TurboTax, I&#x27;m never going back. Fuck this whole system too. We should at minimum have return free filing for 1040EZ users but really should for almost everyone. Seriously, Meta&#x2F;Equifax&#x2F;etc can collect all my financial info but the fucking IRS can&#x27;t use all the information that is legally required to be sent to them to send me a fucking bill (really a rebate)? What a fucking joke. One party wants to kill the IRS, why not at least make it not a fucking joke and bureaucratic shit show first? reply everforward 14 hours agoparentprev> Their marketing emails are particularly deceptive, and if you try to opt out of them and unsubscribe, they force you to enter personal information you don&#x27;t readily have access to to \"confirm your identity.\"That shouldn&#x27;t be legal, and I&#x27;m surprised that doesn&#x27;t get their emails redirected to &#x2F;dev&#x2F;null by everyone. Stuff like that doesn&#x27;t even deserve the modicum of respect that getting sent to Spam denotes, mail providers should just reject it at the MTA until Intuit stops. reply bombcar 13 hours agorootparentEven having to enter my email address is too much. You sent it to me, you need a two click unsubscribe at worst. Otherwise it’s spam. reply everforward 10 hours agorootparentTotally agree. I would be behind email providers requiring bulk emails to implement whatever Gmail uses to provide that Unsubscribe button at the top of emails so you don&#x27;t even have to go to their website. Any degree of difficulty is a bad pattern, and email providers should help discourage that with a heavy hand.Edit: And also severe penalties for failing to actually unsubscribe someone within 24 hours of clicking that button. I don&#x27;t want to hear any \"it could take up to a week\" bullshit. If people can transfer millions of dollars in a matter of days, they should be able to take me off a mailing list instantly. reply sokoloff 1 hour agorootparentSo long as \"whatever Gmail uses\" really means \"whatever the IETF [or other standards body] RFC defines\" and gmail just happens to implement that RFC, sure.Otherwise, I&#x27;m not inclined to give an advertising company control over the worldwide opt-out process for advertising emails...The 24 hours vs 7 days thing doesn&#x27;t bother me at all, frankly. I care about not getting your bullshit for the next decade. If you squeak 4 more in and then stop because you have (or claim to have) a bunch of nightly processes that all need to complete, fine. reply lapetitejort 14 hours agoparentprevOther sites are no better. This yeah I went through the whole flow on H&R Block, and only at the end did they say they couldn&#x27;t file my taxes because of one 1099-NEC. However I still had to pay full price to print out my forms. Which I had to print and send myself. reply turrican 14 hours agorootparentI’m not going to shill too hard for a tax prep company, but I’ve used FreeTaxUSA for years and am satisfied. Cheap, simple, no hidden fees I’ve noticed. reply Loughla 14 hours agorootparentI&#x27;ve used them for five or six years. They keep getting better. The name sounds super sketchy, but they&#x27;re legit.They do charge for oddball forms, but they&#x27;re super up front about that. Like when you select the forms they tell you the price. I have multiple income streams and multiple weirdo tax situations (farming, day job, three consulting firms, my own consulting) and it still only takes me 30 minutes to do my taxes with them. reply gavinhoward 14 hours agorootparentRelative of a FreeTaxUSA employee here.> The name sounds super sketchy, but they&#x27;re legit.I&#x27;ve told them to change their name, and my relative has told them to change their name.Their marketing department is...dumb, IMO. (My relative told me about a semi-recent marketing campaign, and it was laughable.) But quite frankly, I prefer a company where the marketing department is the only incompetent one. reply Loughla 13 hours agorootparentTell your relative they&#x27;re doing really good work, but a little change to their website might do wonders. Nothing crazy, maybe just something to make them not look like identity thieves.>I prefer a company where the marketing department is the only incompetent one.I have never thought about that, but it is exactly spot on. They&#x27;re really good at what they do and really bad at selling it. Word of mouth seems to be the only way they get customers. I read about them on reddit and started using them. Now I tell everyone about that service. reply gavinhoward 13 hours agorootparent> Tell your relative they&#x27;re doing really good work, but a little change to their website might do wonders.You&#x27;re absolutely correct. Fortunately, my relative is aware. Unfortunately, she&#x27;s tried to tell them, and they don&#x27;t believe her.It annoys her so much. reply fakedang 13 minutes agorootparentTell her to show them this thread and how they&#x27;re effectively turning into a laughing stock in spite of a great product (well, at least hoping my comment sends the message so she doesn&#x27;t have to be so upfront about it :P). reply distract8901 13 hours agorootparentprevThe name is sketchy and the website is just as bad. Every instinct I have says they&#x27;re a shady scam site just waiting to steal my info.But no, they&#x27;re actually good and just have terrible marketing and design.Sure makes doing my taxes interesting. I&#x27;ve been using them for three years reply mrguyorama 13 hours agorootparent>But no, they&#x27;re actually good and just have terrible marketing and design.Maybe we should realize WE are in the wrong for conflating \"Shiny, animation filled website\" with \"not scam\". reply spunker540 5 hours agorootparentI think we&#x27;ve all learned to conflate these things from lived experience, not some mis-placed prejudice against ugly UIs. reply phantom784 13 hours agorootparentprevWhat forms do they charge for? I&#x27;ve only seen them charge for state taxes. reply ThatPlayer 5 hours agorootparentprevI would love to keep using them, but looking at my current tax year, I want to file a specific state form that they do not support. For estimated taxes calculated by annualized income installment method because my income is tilted towards the end of the year. I haven&#x27;t paid any estimated taxes for the first two quarters, and without this I&#x27;d have underpayment fees.I did ask them about this two years ago, so if they don&#x27;t add it for 2023, I&#x27;ll have to look into other options. reply ndiddy 10 hours agorootparentprevI&#x27;ve used Free File Fillable Forms (https:&#x2F;&#x2F;www.freefilefillableforms.com&#x2F;home&#x2F;default.php) for federal tax for the past few years and haven&#x27;t had any issues. There&#x27;s no payment whatsoever. For state, I&#x27;ve filed on my state&#x27;s website. reply thousand_nights 14 hours agorootparentprevi&#x27;ve been seeing this pattern on so many posts on hn that criticize basically anything. i&#x27;m not trying to have a stab at you specifically btw, this is more meta> x is bad because of this obvious reason that it is bad> \"but y and z are also bad!\"what is that supposed to be a rebuttal to? is the implication that we should.. do nothing because everything else is also shit? i don&#x27;t see why turbotax in this instance shouldn&#x27;t be punished. that would set a nice precedent at least reply RajT88 14 hours agorootparent> i don&#x27;t see why turbotax in this instance shouldn&#x27;t be punished.I don&#x27;t see why they should only be punished 141 million dollars - they undoubtedly made a lot more money than that out of these shady practices. Therefore, this is just a \"cost of doing business\" and won&#x27;t curtail such behavior in the future.Not until the penalty is severe enough to put the fear into them. reply dfxm12 13 hours agorootparentprevI don&#x27;t think it&#x27;s a rebuttal. I don&#x27;t think it&#x27;s a \"but\"; it appears to be an \"and\". The implication is a warning for people who may look to an alternative to inuit based on this - stay away from H&R Block as well. No one said anything about inuit not being punished. reply JohnMakin 14 hours agorootparentprevYou see this in any internet discussion, such as about gun violence - “well knives can kill people too and we’re not outlawing those.” reply tialaramex 18 minutes agorootparentAnd indeed in England most knives require that you have a specific lawful purpose to carry them. \"Self defence\" isn&#x27;t a lawful purpose. The small folding knives on some utility tools are exempt but that&#x27;s all.All weapons are illegal. Purpose made, improvised, even just I picked up a glass and threatened people with it, that&#x27;s a weapon and it&#x27;s illegal to have weapons. reply quickthrowman 13 hours agorootparentprevI’ve used Free Tax USA for the past 6-7 years, and there are no dark patterns. Free federal filing will be the default option if you qualify (based on AGI), offers for extra services are clear about not being necessary for filing, and filing state taxes costs maybe $12.I don’t usually recommend products but Free Tax USA is one of the most honest companies I’ve dealt with online, they’ve never thrown a curveball at me. It’s refreshing to deal with a company who is satisfied with just making money and not squeezing every possible dollar out of you. reply dfxm12 13 hours agoparentprevWhy would you respect it in the first place? It&#x27;s a faceless corporation that for decades has been lobbying congress for the privilege of ripping you off. Save your respect for real people, at least. reply Beached 13 hours agoparentprevafter getting owned by intuits bs 2 years in a row, I went to an accountant. $70&#x2F;y, he does EVRYYHING, no gotyas or bs. I walk in or drop off all the papers he needs, he asks me a bunch of questions, files everything, I leave with all my federal, state, and local taxes filed. he guarantees a backup, I get a envelope with everything in it labels nicely, and if I ever get audited, he guarantees that he will handle all of the audit procedures as part of the cost, no extra cost.that type of easy service and peace of mind is just toooo good for only $70. blows my mind that everyone doesn&#x27;t do it. reply genter 10 hours agoparentprevI always found it amazing that the amount of time it took to query their database was the exact amount needed to complete the animation. reply gumballindie 9 hours agoparentprevGood thing i turned down an offer with them, in london, uk, over ten years ago. Money was sweet but i sensed the stink. reply _jal 14 hours agoparentprevIt is interesting to note how ideology ends up being used as just another marketing tool in situations like this.Resisting simplifying tax filing, to keep the tax system annoying, is seen as a way to build anti-tax political support. Among other things, that creates opportunities for barnacles like Intuit to scam people out of money like this. And once Intuit funds those pols&#x27; re-election bids, the cycle of life is complete.Coalitions are funny things. Sometimes it is hard to tell who is suckering whom. reply somehnguy 14 hours agoprevGlad to see they&#x27;re facing consequences for this misleading nonsense. They got me one year where I went through the entire process only to find out at the end it cost money if I wanted to input my student loans. Due to that (and many other dark patterns noticed during the process) I will never voluntarily use an Intuit product again.FreeTaxUSA doesn&#x27;t pull any nonsense & I&#x27;ve been happy with it every year since. reply madcow2011 14 hours agoparentI&#x27;ve used FreeTaxUSA for the past two years as well, and have been very happy with it. I&#x27;ll put all my info into turboTax, and let it calculate my refund, then put the same data into FreeTax and verify it&#x27;s the same. It&#x27;s saved me a LOT of money. reply gavinhoward 14 hours agoparentprevMy relative works for FreeTaxUSA. She&#x27;s happy to hear you&#x27;re happy! reply ortusdux 14 hours agoprevCan we just switch to pre-filled tax forms already? The average American spends about $200&#x2F;year and 12hrs preparing their taxes. This study from last year found that pre-filled tax forms would be accurate for 42-48% of people. That is already amazing, and I&#x27;m sure that number could be doubled over 10-20 years.https:&#x2F;&#x2F;www.nber.org&#x2F;papers&#x2F;w30008 reply JAlexoid 13 hours agoparentThere&#x27;s probably not a single lawmaker that they don&#x27;t have on the hooks, along with a litany of CPA&#x27;s who&#x27;s sole existence depends on you requiring to have someone just input numbers into Intuit QuickBooks.And most Americans just pretend that it&#x27;s \"fine\".Fun fact - to avoid under-withholding my CPA wants to charge me $2300 per year, that&#x27;s not tax deductible. A simple thing of making sure that my withholdings are correct throughout the year and I don&#x27;t have to pay IRS more in April...So no. This is a corrupt system, that most Americans just pretend is \"the norm\". reply spunker540 5 hours agorootparentI&#x27;m not too convinced about the lobbying argument. I know they spend $2-3M per year on lobbying. but 1) our govt doesnt get anything done anyways, regardless of how much Intuit spends. I believe the null hypothesis is pretty likely here (they could not spend that money and still be the #1 tax company and no real laws get passed to take that away from them). 2) $3M just doesnt sound like a lot to a company as big as Intuit. If that&#x27;s all it takes to get congress on your side, seems like not that big an obstacle in the first place for any company in any industry.I am open to more direct evidence to the contrary though. reply ortusdux 12 hours agorootparentprevOne major issue is the number of jobs the current system props up. I wouldn&#x27;t call it corruption when a lobbyist tells a Senator that pre-filled tax forms would cost their district 10k jobs. But I don&#x27;t think the government should avoid providing preventative dental care because it might affect dentists&#x27; bottom line. reply floren 13 hours agoparentprevHow do you know if you&#x27;re one of the 42-48%, though? I&#x27;d love easier taxes, but not if I&#x27;ve got a 50&#x2F;50 chance of getting hassled over it in a year. reply OkayPhysicist 13 hours agorootparentI suspect that number would go way up by just providing a way to declare your dependents.Right now, for the vast majority of the population, especially those who don&#x27;t just pay an accountant, their taxes consist of a \"Where&#x27;s Waldo\" copy-and-paste adventure combining information from their W-2s and 1099s onto a handful of other forms, then adding up like 3 numbers. If that describes your tax filing experience, a pre-filled form would be perfect. Any omitted details are more likely to be in the government&#x27;s favor than your own. reply baby 13 hours agoparentprevBut that’s the average American. Like everything in America, if you make enough money it’s not a problem. Just pay for an accountant. reply JAlexoid 13 hours agorootparentYeah... My accountant wants $2300 per year to make sure that we withhold the correct amount. (that sum is also no tax deductible)The whole system is created to screw you... and yet many people defend it. reply Beached 13 hours agoparentprevhow would you handle the large number of deductions and credits everyone files for yearly? does the fed know of o bought a solar generator and plan on taking a credit? do they know if I had my windows replaced and plan on a deduction? do they know how many square feet my at home office is, or how much I spent in supplies? do they know if I plan on taking the general deduction or itemizing? reply JAlexoid 13 hours agorootparentEvery single rational country provides a tax form to their residents, that is prefilled. You get the bill, with explanations. You file documentation with the tax authorities and then you get a response.I have done that in multiple countries - getting tax refunds and other benefits at the end of the tax year. I even ran a business in the \"tax heavy EU\", where all of my tax related duties were at most 30 minutes per month(that&#x27;s with payroll and other common business bookeping)Meanwhile in US - IRS knows what you owe, IRS is legally banned to tell you and you&#x27;re forced to pay a third party to send your documentation to IRS... oh... and they also make mistakes very often.Yet for some reason, people like you are up in arms.. do you work at Intiut or something? reply andykellr 13 hours agorootparentprevAll of those purchases and deductions put you outside of the 42-48% that the parent is referencing. reply Forge36 13 hours agorootparentprevFile your own not using the pre-filled forms as you do today? While it won&#x27;t for some doesn&#x27;t mean it can&#x27;t be the default option for many reply datadrivenangel 14 hours agoprevAfter a surprise bill of over $100 from H&R block I&#x27;ve been using FreeTaxUSA and have been very happy to pay $15 for state filing.The UI is just as good as TurboTax or H&R block. reply bluGill 14 hours agoparentThe UI is better than taxAct which I&#x27;d been using for years. I got my taxes done in half the time without all the \"wait while we calculate...\". reply dmoy 13 hours agoparentprevThe UI for 8949 is worse than TurboTax, for the edge case of having a lot of non-covered shares. (Technically you can mail a paper copy of all the 1099-B to the IRS to work around this problem)And I think some 1099-R codes used to have buggy question flow, but it&#x27;s better now.So far that&#x27;s the only two things I&#x27;ve found worse than TurboTax, and certainly not worth paying Intuit for. reply OkayPhysicist 13 hours agorootparent> (Technically you can mail a paper copy of all the 1099-B to the IRS to work around this problem)I do this every year. Got into the habit because some index fund thing I had a couple bucks of in my portfolio did some weird shit with stock dividends and ended up producing over a hundred transactions amounting to just over the \"round to zero\" amount of profit. It&#x27;s really not that much of a headache as long as you have access to a printer. One form, check a box, scribble \"TO THE IRS\" on an envelope and jam it and your 1099 in and call it a day. Not a soul is going to bother checking the details anyway, since they already have the contents of your 1099. reply gavinhoward 14 hours agoparentprevMy relative works for FreeTaxUSA. I&#x27;m glad to hear you like them. She is too.They&#x27;re also great to their employees. My relative got a mostly paid vacation recently on top of great PTO.Edit: Also, my relative is partially responsible for the UI, so she&#x27;s happy to hear you like it. reply BlackjackCF 14 hours agoparentprevWhat was the surprise bill of $100 for?My god, at that rate you might as well just hire a private accountant. reply datadrivenangel 14 hours agorootparentI wrote a book and had a small amount of royalty income to declare, which meant I needed the &#x27;premium&#x27; package on top of the state filing.I think Intuit has made almost as much money from my book as I have! reply AuryGlenz 13 hours agorootparentprevThe last time I had my taxes professionally done it was over $300, and that was 3 years ago now. reply gumballindie 9 hours agoprevI dont live in the us, but i am curious, what prevents open source developers from writing a decent open source alternative? Or other smaller companies from competing with intuit? Is there a law only allowing them to idk use government apis? To me it sounds like intuit is about to be disrupted one way or another. reply screamingninja 6 hours agoparentThe tax code is very complex, changes quite a bit every year, and a FOSS developer could not guarantee the accuracy of the generated tax forms. On top of that, each state has a different tax code, which further complicates any development effort. reply baby 13 hours agoprevNo kidding. Turbotax is THE case study of dark patterns. reply vuln 14 hours agoprevAt the time of writing this their stock is only down .41% or 2.41$.I’m sure they’ll get a fine of 1% of their earnings. reply dessimus 14 hours agoparentA company centered around accounting and taxes? They&#x27;ll figure out a way to claim its 2000% of their earnings and on appeal claim that its too burdensome. reply micromacrofoot 14 hours agoprevIntuit bought Credit Karma but had to divest from their free tax filing option, they&#x27;re a good alternative. reply DangitBobby 12 hours agoparentCredit Karma&#x27;s tax filing app was bought by Cash App and now has a login system that requires you to have Cash App on your phone to do taxes on your desktop. I use it regardless because the alternatives are somehow worse, but I think the writing is on the wall. reply jaywalk 14 hours agoprevI&#x27;ve been very happy with Cash App Taxes for the past few years. They are actually 100% free no matter what. Federal, state, extra forms. All free. reply xkcd-sucks 13 hours agoparentOne caveat to this is when CreditKarma Taxes was acquired by CashApp they forced users to sign up for CashApp and install it on a phone in order to continue doing taxes reply DangitBobby 12 hours agorootparentIt&#x27;s not even the most annoying login system I have to deal with (2FA is truly out of hand at this point), but I certainly dont appreciate being strong-armed into installing an app that I want nothing to do with. reply agensaequivocum 14 hours agoprev [–] Administrative law \"judges\" are unconstitutional. reply SllX 14 hours agoparentThat hasn’t been determined, and while they’re sometimes controversial, I’m not sure they are unconstitutional as long as there’s a path to appeal to Article III courts.Just as a point of reference, military tribunals and immigration courts also fall outside of Article III as well. reply MR4D 14 hours agoparentprev [–] For those who may not understand your comment, this is a summary of the issue at hand here [0] and some commentary here [1].[0] - https:&#x2F;&#x2F;wp.nyu.edu&#x2F;compliance_enforcement&#x2F;2023&#x2F;06&#x2F;12&#x2F;ftc-dim...[1] - https:&#x2F;&#x2F;ogletree.com&#x2F;insights&#x2F;supreme-court-ruling-questions... reply eli 13 hours agorootparent [–] Conservatives hate the administrative state and want to destroy it. They would prefer the free market solve all problems instead of regulators like the SEC or FTC or EPA.The Federalist Society has been workshopping this fringe theory that Congress isn&#x27;t allowed to delegate enforcement decisions to federal agencies and that administrative judges are somehow unconstitutional. This was an unsuccessful (!) argument against the New Deal, but now thanks to a far-right Supreme Court it&#x27;s a live issue again.Can you imagine if Congress had to vote on whether to punish Intuit for misleading ads? It would obviously result in the effective end of entire categories of regulation. reply nickff 13 hours agorootparentHave you looked at the statistics on how ALJs rule, and how long they take to do it? The “administrative law” system is extremely Kafka-esque. reply mrguyorama 13 hours agorootparentA system working poorly doesn&#x27;t make it unconstitutional. It also doesn&#x27;t prevent it from being slightly modified to work well. reply JumpCrisscross 4 hours agorootparent> system working poorly doesn&#x27;t make it unconstitutionalDue process and equal protection. reply eli 13 hours agorootparentprevHave you looked at statistics on how criminal juries rule?I don&#x27;t find that a convincing argument. reply jjtheblunt 13 hours agorootparentprev [–] what does \"workshopping\" mean here? reply eli 12 hours agorootparent [–] A process of collaborating and testing and tweaking and testing again.Sense #3 here https:&#x2F;&#x2F;www.dictionary.com&#x2F;browse&#x2F;workshop reply jjtheblunt 11 hours agorootparent [–] thank you, and kinda seems too obvious now. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The Federal Trade Commission (FTC) has ruled that Intuit, TurboTax's parent company, misled consumers by advertising its tax filing service as \"free.\"",
      "Following the ruling and a $141 million payout after an FTC lawsuit, Intuit is now required to clearly disclose any terms that limit its free product offerings.",
      "In light of difficulties encountered while trying to locate Intuit's actual free filing service, Free File, IRS is developing a government-supported free filing service set to pilot in the 2024 tax season."
    ],
    "commentSummary": [
      "The discussion revolves around users' dissatisfaction with the TurboTax product from Intuit because of undisclosed fees, deceptive promotions, and a lack of transparency.",
      "Alternative tax filing options like FreeTaxUSA and Cash App Taxes are suggested as more transparent and cost-effective solutions.",
      "Topics of lobbying influence, corruption in the tax system, misleading advertising, and calls for system reform highlight the larger context of these user complaints and hints at the need for significant changes in the tax filing system."
    ],
    "points": 316,
    "commentCount": 92,
    "retryCount": 0,
    "time": 1694197159
  },
  {
    "id": 37434381,
    "title": "Bees struggle to find flowers because of air pollution",
    "originLink": "https://www.birmingham.ac.uk/news/2023/bees-struggle-to-find-flowers-because-of-air-pollution",
    "originBody": "Skip to main content Teaching excellence Alumni Jobs Events Visit Switch between the UK and Dubai websites. UKDubai Study Research International Business News About us Search NewsBees struggle to find flowers because of air pollution. Bees struggle to find flowers because of air pollution. A new study has found that air pollution is preventing pollinators finding flowers because it degrades the scent. Published 7 September 2023•4 min read Share Photo credit: Pixabay. A research team comprising the UK Centre for Ecology & Hydrology (UKCEH) and the Universities of Birmingham, Reading, Surrey and Southern Queensland, found that ozone substantially changes the size and scent of floral odour plumes given off by flowers, and that it reduced honeybees' ability to recognise odours by up to 90% from just a few metres away. Ground-level ozone typically forms when nitrogen oxide emissions from vehicles and industrial processes react with volatile organic compounds emitted from vegetation in the presence of sunlight. Our study provides robust evidence that the changes due to ground-level ozone on floral scent cause pollinators to struggle to carry out their crucial role in the natural environment also with implications for food security. Professor Christian Pfrang, University of Birmingham Professor Christian Pfrang from the University of Birmingham who collaborated on the research said: “Our study provides robust evidence that the changes due to ground-level ozone on floral scent cause pollinators to struggle to carry out their crucial role in the natural environment also with implications for food security.” The findings suggest that ozone is likely to be having a negative impact on wildflower abundance and crop yields. International research has already established that ozone has a negative impact on food production because it damages plant growth. Dr Ben Langford, an atmospheric scientist at UKCEH who led the study said: \"Some 75% of our food crops and nearly 90% of wild flowering plants depend, to some extent, upon animal pollination, particularly by insects. Therefore, understanding what adversely affects pollination, and how, is essential to helping us preserve the critical services that we rely upon for production of food, textiles, biofuels and medicines, for example.\" The researchers used a 30-m wind tunnel at Surrey University to monitor how the size and shape of odour plumes changed in the presence of ozone. As well as decreasing the size of the odour plume the scientists found that the scent of the plume changed substantially as certain compounds reacted away much faster than others. Honeybees were trained to recognise the same odour blend and then exposed to the new, ozone-modified odours. Pollinating insects use floral odours to find flowers and learn to associate their unique blend of chemical compounds with the amount of nectar it provides, allowing them to locate the same species in the future. The research showed that towards the centre of plumes, 52% of honeybees recognised an odour at 6 metres, decreasing to 38% at 12 m. At the edge of plumes, which degraded more quickly, 32% of honeybees recognised a flower from 6 m away and just a tenth of the insects from 12 m away. The study indicates that ozone could also affect insects’ other odour-controlled behaviours such as attracting a mate. The research was funded by the Natural Environment Research Council, part of UK Research and Innovation, and was published in the journal Environmental Pollution. Professor Christian Pfrang concluded: \"We know that air pollution has a detrimental effect on human health, biodiversity and the climate, but now we can see how it prevents bees and other pollinating insects from carrying out their key job. This should act as a wake-up call to take action on air pollution and help safeguard food production and biodiversity for the future.\" Featured staff Dr Christian Pfrang Notes for editors Topics EnvironmentScience & technology Related Courses Air Pollution Management and Control MSc/Diploma Postgraduate Atmospheric Sciences and Air Pollution PhD with Integrated Study Postgraduate Featured staff Dr Christian Pfrang Read next Clean Air Zone reduces air pollution levels in Birmingham - study Scientists use innovative techniques to map the environmental impact of Birmingham's Clean Air Zone 31 August 2023 Related news Extreme El Niño weather saw South America’s forest carbon sink switch off Evidence that most forest areas withstand periods of severe drought but greatest impact in forests with drier climates Published 4 September 2023 Sweat leaches flame-retardant chemicals from microplastics Oily components found in sweat may make toxic chemicals available for absorption through skin Published 2 September 2023 Birmingham scientists partner Canadian critical minerals extraction experts A new partnership agreement will bring the University of Birmingham’s mineral extraction expertise to new markets. Published 1 September 2023 Reducing the risk – Clean Air Zone sees Birmingham air quality improvement Birmingham’s Clean Air Zone has emerged as a focal point of debate as policymakers wrestle with the challenges of urban air quality and sustainable development Published 31 August 2023 Clean Air Zone reduces air pollution levels in Birmingham - study Scientists use innovative techniques to map the environmental impact of Birmingham's Clean Air Zone Published 31 August 2023 Making the invisible, visible: New method makes mid-infrared light detectable at room temperature Quantum-derived findings could make mid-infrared light sensing much easier at room temperatures. Published 24 August 2023 Most popular Vaping renders immune cells unable to move to meet threats Published 6 September 2023 University of Birmingham academic appointed to government AI Taskforce Published yesterday Majority Report: we will all commit crimes under the right circumstances. Published 4 September 2023 Clean Air Zone reduces air pollution levels in Birmingham - study Published 31 August 2023 Culture and collections Schools, institutes and departments Services and facilities Edgbaston Birmingham B15 2TT United Kingdom Tel: +44 (0)121 414 3344 Instagram Facebook Twitter YouTube Weibo WeChat PrivacyLegalAccessibilityIntranetCanvas Learning EnvironmentPublication SchemeInformation for ApplicantsFreedom of informationCharitable informationCookies policy and settingsWebsite feedbackContact us © University of Birmingham 2023 Cookies settings We use cookies to help make improvements and deliver personalised content to you here and on other websites. You can control the types of cookies we set using the cookie settings. Cookie policy Accept All Cookies Settings",
    "commentLink": "https://news.ycombinator.com/item?id=37434381",
    "commentBody": "Bees struggle to find flowers because of air pollutionHacker NewspastloginBees struggle to find flowers because of air pollution (birmingham.ac.uk) 241 points by geox 19 hours ago| hidepastfavorite33 comments PreInternet01 18 hours agoWarning: anecdote to follow. Data set: n=1. Not a peer-reviewed study. Just a completely irrelevant observation by a completely irrelevant HN poster.But, yeah, I&#x27;m inclined to believe this. I live a few hundred meters (yards in Freedom Units) from two major highways.Last year, at the tail end of the pandemic-induced lull in traffic, my flowers would attract groups of over 20 bees, easily, every day.This year, with similar weather, pretty much the same flowers, and definitely the same location, it&#x27;s a good day if I see 4 individual bees.So, the answer &#x27;air pollution&#x27; to the question &#x27;what changed&#x27; seems at least likely? reply dylan604 18 hours agoparentMaybe the bees just don&#x27;t like traffic and decide not to come to your particular establishment because there are easier places to get to?On a slightly more serious tack, traffic causes not only air pollution, but air currents are also changed. Noise is also significantly higher. I have no idea about a bee&#x27;s hearing, just expanding highway traffic&#x27;s effects beyond air pollution. We saw USGS seismographs showing the decrease in vibrations with the pandemic&#x27;s decrease in traffic. Humans have an impact on the environment in so many ways that go unacknowledged&#x2F;not understood. reply ilyt 18 hours agoparentprevI&#x27;d imagine also a highway with traffic would act as sort of air barrier when there is traffic zooming thru it whole day making noise and wind, even if we ignore pollution. reply RC_ITR 17 hours agorootparentThey also act as a series of giant fast moving things that squish bugs.The bees may still be headed to those flowers, they just may not make it... reply giraffe_lady 18 hours agoparentprevI think there&#x27;s a very good chance you&#x27;re right. But!Unless you know where the bees are coming from another very likely scenario is the colony just died. A newly established wild hive has only like a 20% chance to survive its first winter so if that&#x27;s the first summer you saw them that likely explains it.If you&#x27;re near two highways it&#x27;s likely you&#x27;re in a fairly dense area and feeding a nearby beekeeper&#x27;s hives. But a lot of beekeepers are hobbyists and like all hobbies, people give up on beekeeping all the time. Even if it was a managed hive a likely explanation is that the colony simply isn&#x27;t there anymore. reply darkclouds 16 hours agoparentprevBecause its hard to predict the wacky weather here in the UK, and not knowing if the next time we cut the lawn might precede a period of hot weather, we have taken to cutting the lawn on its highest cut to preserve the grass during summer months as it traps more moisture at soil level thus preventing it from going brown and dying and we only cut it when there is rain forcast. So the grass can grow to be several inches in height like a meadow, obviously more flowers&#x2F;weeds pop up, but its easier pulling the weeds out and leaving the flowers that pop up for the insects.So fast forward to this year, and besides seeing an increase in insects, butterflies, and a wider range of birds, year on year I saw 6 goldfinches descend on the bird bath yesterday, never seen that before, and we are also seeing loads and loads of grasshoppers.Havent seen this many grasshoppers since the 70&#x27;s and 80&#x27;s which is nice to see. I could probably walk out and catch 5-10 from the lawn in 10minutes. I&#x27;d be lucky if I saw one grasshopper a day in previous years.We have been trying to make the garden more insect friendly since Covid and I think its beginning to pay off.Ozone mentioned in this study will always be found in built up areas, the human health impact is it blocks UVB to a degree which means humans get less UVB light and thus less vit D3. So even though circa 100% of the UVB will reflect off man made surfaces, the ozone stops alot of it from reaching the ground meaning you get less vit D3 in built up areas.In the countryside the vegetation absorbs alot more UVB (circa 25%), so gardeners in the countryside have higher D3 levels simply from the absence of ozone.And Bee&#x27;s like other insects use UV light reflecting off flowers to choose the different flowers to bumble between in their search for pollen. Reduce the ozone to get more UV light to the ground and the bees can see the flowers better.It would be interesting to see of more bees got to flowers where some UV lighting is placed over the flowers. reply nonethewiser 17 hours agoparentprevBut what is the actual difference in air pollution at your house compared to last year? reply irrational 16 hours agoparentprevAre you worried about your own health from living so close to 2 major freeways? reply YeBanKo 16 hours agoparentprevCould also be noise pollution. reply pmoskovi 17 hours agoprevWhat I&#x27;m most fascinated by is the experiments scientists come up with to learn about bees. A prime example is all the hoops Tom Seeley jumped through to learn how swarming bees pick a new home. He found that they measure the volume of the cavity they move in, they consider how high up the place is, how big the entrance is, and whether bees have lived there before - just to mention a few. He performed his experiments on a \"bee-deserted island\" (with no honeybee colonies). The icing on the cake is that bees hold a democratic debate & voting as they make a life&#x2F;death decision. He shared it all in his easy-to-read illustrated book: Honeybee Democracy, highly recommended. reply goda90 19 hours agoprevThere were more flowers on my property this year than last year, but I felt like the number of bumblebees I spotted were considerably less. I figured it was the unusually dry weather, but maybe the weeks of smoky days from the Canadian wildfires blowing across the Midwest was a big factor too. reply jimmaswell 18 hours agoparentI don&#x27;t have much of a reference since I just moved here last September, and the lawn was already mowed at that point, but I&#x27;ve seen a really good number of bumblebees and honeybees this year (endangered Monarch butterflies too) leaving most of my lawn unmowed besides the small range I walk on. The native flowers and wildlife are really thriving on my property now. No particular problem with pests as a result either. I recommend anyone to do this if it&#x27;s practical (no overbearing HOA etc) reply doubleg72 8 hours agoparentprevWe easily saw way more bees this year.. I have a massive flower garden right behind house. Bumblebees, honeybees, and even the little black bees have been around in numbers I haven&#x27;t seen since living here. We also have an abundance of yellow jackets, crickets, dragonflies, and aphids. I did notice the frog population is down this year, less of the tadpoles hatched and made it out of the pond of all species. reply bmitc 18 hours agoprevThat&#x27;s probably the least of their worries. Bees need flowers to exist to find flowers, and their native resources have dwindled. Bees can also not travel that far without refueling, so they need distributed flowers to be successful. reply princevegeta89 17 hours agoprevOff-topic, but for anyone curious on the intelligence of bees, do watch the episode 7 of Cosmos: Possible Worlds by DeGrasse Tyson, this blew my mind on how certain animals and insects perceive geometry and how it is really not an acquired knowledge but an instinct to them:https:&#x2F;&#x2F;tubitv.com&#x2F;tv-shows&#x2F;564291&#x2F;s03-e07-the-search-for-in... reply 1MachineElf 18 hours agoprevAnother anecdote: Here in Maryland, I have these flowers in the back yard that usually are in bloom by September (i.e., now). They normally attract a ton of bumblebees, but this year, I&#x27;ve only noticed a few... There are a lot more butterflies than bees this time. I&#x27;ve got wasps nesting in a hard to reach hole in the ground. I&#x27;ve seen some dead so-called \"asian\" hornets in my neighbor&#x27;s yard. There&#x27;s a huge basketball sized nest of something in my other neighbor&#x27;s tree. Very few bumblebees, unfortunately... reply PaulKeeble 18 hours agoprevThere are various flowers people recommend because bees like them and I have tried to have a guarden design to feed the bees based on this. What I have found is those that smell more due to either their quantity or are stronger scented seem to attract more bees and be more popular. Two big lavender bushes for example seem to be very well visited and I can smell them from a greater distance than anything else.So I suspect this likely is part of the problem, it impacts our smell capacity too as pollution quickly overrides the ability to smell the flowers. reply bmitc 18 hours agoparentAre the plants native to your area? It&#x27;s important to use native olants, otherwise the non-native plants can attract non-native bees. reply vosper 13 hours agoprevWill they get better at it, because of evolutionary pressure? reply dopidopHN 13 hours agoparentThat process take places over long Period of time … or you are joking? reply vosper 7 hours agorootparentIt’s not a genetically homogeneous population, so maybe there are some already much better at finding flowers in pollution, and those ones will be more likely to survive and pass on that trait?I’m being quite serious (though not that knowledgeable on evolution science). It’s not like they have to develop gills. Perhaps a minor change is sufficient? reply bluedino 18 hours agoprevI don&#x27;t know if I see MORE wasps than before, or if I just notice them more because I see less bees.I wouldn&#x27;t mind getting rid of some of the wasps. They&#x27;re nasty. reply theultdev 18 hours agoparentI&#x27;m seeing an extra amount of wasps this year, must be a good season for them.I&#x27;ve killed about 10 nests so far this year. The newest batch of them spread out on the back patio window. They&#x27;re building a nest, but most of them chill on the window and wall very distributed like.I&#x27;ve nearly given up and just walk past them now, never gotten stung, they just move out of the way.Funny enough, yellow jackets like the front of the house, red wasps like the back. Yellow jackets are much meaner in my experience. Lots more of them per nest too. reply abakker 18 hours agorootparentIn Boulder, I’ve noticed the opposite. Way more bees and bumblebees this year, way fewer wasps. I suspect it is highly cyclical even excluding external stimuli. reply jrod16 16 hours agoprevHas anyone noticed an increase in bees especially over the last few years in late august in the northeast? I think I’ve always been stung 10x and don’t remember bees ever being this much of an issue in the past, to the point where my family cannot even go to the park or beach without being swarmed with bees. reply bmitc 12 hours agoparentWhy are you being stung so much? I have quite a bit of native plants that I walk by all the time, and the bees, wasps, etc. never even seem to notice me much less atrack me. I even get quite close sometimes to film them with my phone. reply whywhywouldyou 13 hours agoparentprevI have no idea why you&#x27;re being downvoted, but yes, I&#x27;ve noticed the same. I commented this exact same thing to my girlfriend about a week ago. Everywhere we go, there seems to be at least a couple of bees nearby, and it some places they are very dense. reply citrus_tree 18 hours agoprevNot at all surprising by this point reply micromacrofoot 17 hours agoprevDoesn&#x27;t seem too surprising considering beekeepers use smoke to calm honey bees... reply jquast 17 hours agoparentSmoke blocks the ability to chemically communicate. When an alert signal is heard, it is rapidly repeated causing a swarm. The smoke prevents it from being heard in the first place. reply kvetching 12 hours agoprevAir pollution has been solved. It&#x27;s just a matter of time until the solution can be implemented.Malcolm Bendall is an inventor that has created a novel catalytic converter that turns ALL EXHAUST fumes from any engine into clean air with about 20% oxygen. It requires no extra energy to use. It&#x27;s just a simple retrofit of pipes and other components you need to add to the engine.Search the latest videos on YouTube for Malcolm Bendall. He just presented and had his device verified by multiple experts at Tesla Tech last month.He has been working with Mazda, General Motors, Tokyo Power, the Indian Government and more to create implementations of this technology which is based on plasmoids. reply djaychela 12 hours agoparentIt&#x27;s been solved, but not in that way... There is no simple retrofit for ICE engines to be clean. Electric motors are non emissive, and that is the proper solution. reply pbreit 19 hours agoprev [–] They will find them. replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "A new study by the UK Centre for Ecology & Hydrology and various universities reveals that air pollution hinders bees' ability to find flowers as ozone degrades the scent of flowers.",
      "The study found a reduction of up to 90% in honeybees' odor recognition ability, indicating potential adverse effects on wildflower abundance and crop yields, as bees play a crucial role in pollination vital for food security.",
      "The research also indicates that ozone may affect other odor-influenced behaviors of insects, such as mate attraction, enforcing the need for action on air pollution to safeguard food production and biodiversity."
    ],
    "commentSummary": [
      "Air pollution is purportedly causing a reduction in bee activity and difficulty in locating flowers, contributing to the decline of insect populations. Additional factors might include traffic and noise pollution, and a decrease in bee resources.",
      "Some participants noted an increase in bee activity and wildlife, potentially due to favorable conditions or efforts to foster insect-friendly environments.",
      "Discussions pointed out the possible impact of pollution on bee attraction to specific plants, hints of evolutionary pressure leading to bee adaptation to pollution, and an innovative solution to vehicular pollution through a catalytic converter."
    ],
    "points": 240,
    "commentCount": 33,
    "retryCount": 0,
    "time": 1694185153
  },
  {
    "id": 37439535,
    "title": "Decoded: GNU Coreutils (2018)",
    "originLink": "https://maizure.org/projects/decoded-gnu-coreutils/",
    "originBody": "MaiZure's Projects Decoded: GNU coreutils October 2018 updated: September 2019 This is a long-term project to decode all of the GNU coreutils in version 8.3. This resource is for novice programmers exploring the design of command-line utilities. It is best used as an accompaniment providing useful background while reading the source code of the utility you may be interested in. This is not a user guide -- Please see applicable man pages for instructions on using these utilities. Status: Complete! Phase 1 [complete] - Each utility has a dedicated page discussing the namespace and execution overview. Phase 2 [complete] - Expanded discussion about important design decisions and algorithms. Tracing utility lineage both from UNIX and early Coreutils. Porting content to something more collaborative. Enhancing source walkthrough to something more useful. Creating a source code evolution visualizer Phase indefinite - Line by line code walkthrough for each utility will be accomplished over a long period. GitHub repo available to gather line-by-line notes. This segment was deferred due to consistent feedback that readers were more interested in high-level discussion. The GNU Core Utilities I'll link the utility pages here at the top. Click the command name for the detailed page decoding that utility. The discussion, source code, and walkthroughs are available on each page. Bolded utilities have been expanded as part of phase 2. Enjoy! Utilities arch base64 basename cat chcon chgrp chmod chown chroot cksum comm cp csplit cut date dd df dir dircolors dirname du echo env expand expr factor false fmt fold groups head hostid hostname id install join kill link ln logname ls md5sum mkdir mkfifo mknod mktemp mv nice nl nohup nproc numfmt od paste pathchk pinky pr printenv printf ptx pwd readlink realpath rm rmdir runcon seq shred shuf sleep sort split stat stdbuf stty sum tac tail tee test timeout touch tr true truncate tsort tty uname unexpand uniq unlink uptime users vdir wc who whoami yes Helpful background for code reading The GNU coreutils has its foibles. Many of these utilities are approaching 30 years old and include revisions by many people over the years. Here are some things to keep in mind when reading the code: Tiny programs - These utilities are small, (mostly) single-source file programs designed to do one thing and do it well. They are not designed for long life or to scale beyond their role. Consequently, we see designs often considered 'bad practice' such as: Many globals Liberal use of macros goto statements Long functions with nested switchs/loops Know POSIX - Start with the Utility Syntax Guidelines. In general, POSIX supports interoperability by defining appropriate inputs and outputs, but leaves the 'work' to the implementation. While the GNU coreutils may not strictly conform to POSIX, many ideas are entrenched: permission bits, uids/gids, environment variables, exit status, and about 3718 pages of more trivia. Outside help - Portability is a complex problem and coreutils relies on extra help from a related project: gnulib. Almost every utility includes functions from gnulib which are specially designed for common problems used in many places across various systems - No need to reinvent the wheel. Launched from a shell - The Core utilities expect support from a shell such as bash, zsh, ksh, and others. The shell forks/clones in to the utility, passes the arguments, sets up the environment, redirects I/O via pipes, and retains exit values. Three families - GNU coreutils were originally three distinct packages for shell, text, and file utilities. Utilities within the same type share many of the same design patterns. Basic design Most CLI utilities look something close to this: The key ideas: A setup phase for flags, options, localization, etc An argument parsing phase thats reads input to set execution parameters A processing/execution phase that prepares input for one or more syscalls Many opportunities to check constraints and fail out of execution Distinct EXIT status hint about problem location EXIT_FAILURE is general and commonly used Providing feedback after failed execution This is the framework I'll use to organize the decoding of each utility. We'll see that each has a unique variant of this idea which range from a few lines to thousands of lines. I'd categorize the variants in three groups: trivial, wrappers, and full utilities Trivial utilities Trivial utilities have a unique set up phase which defines a macro in a couple lines. Then it 'includes' the source of another utility in which the macro forces a specific flow control. Examples include: arch, dir, and vdir Wrapper utilities Wrappers perform setup and parse command line options which are passed directly as arguments to a syscall. The result of the syscall is the result of the utility. These utilities do little processing on their own. Examples include: link, whoami, hostid, logname, and more Full utilities The diagram above shows a design for full utilities. A setup phase, an option/argument parsing phase, and execution. Execution means processing input data and may invoke many syscalls along the way to handle more data until complete. Most utilities fall in to this category. Digging deeper Let's go through the most common ideas shared across many of the utilities. Knowing these concepts beforehand should speed up code reading. Utility Initialization All utilities have a short initialization procedure near the beginning of main(): initialize_main (&argc, &argv); set_program_name (argv[0]); setlocale (LC_ALL, \"\"); bindtextdomain (PACKAGE, LOCALEDIR); textdomain (PACKAGE); atexit (close_stdout); This preamble solves a few administrative issues; the most important of which are internationalization and assigning the exit action. I'll go through each of these lines below. This lines don't impact the specific action of a utility. Parsing with Getopt Ever wonder why command line utilities have had the same look and feel for the past 40 years? You can thank the Getopt toolset. The bare minimum you need to know to follow the coreutils is: Command line options can be 'short' and 'long', prefixed with (-) and (--) respectively. Short options are defined as a string while long options use a struct. Short options use 1) only a letter if the option has no argument, 2) A single colon (:) for mandatory arguments, and (::) for optional arguments. For example, the short option string for kill is: Lln:s:t. Which says that L, l, t take no arguments but n and s need an argument. Long options often have a short analogue The getopt_long() function returns the next option and is used in all utilities The optind index is a position within the argv[] array for the next argument. The optarg char pointer points to the value of the option's argument. Traversing the file system with fts Unix-like systems often support the fts library to easily manage walking through the file system. The basic hand-waved details are: The tree is represented by an FTS structure built by calling fts_open() or xfts_open() on a path. A node (file/directory) from the tree is a FTSENT structure. Calling fts_read() on the FTS generates FTSENTs. This is walking the tree. The FTSENT->fts_info field describes the entries. It is used often to decide how to handle the entry. Syscall wrappers, and helpers coreutils often invokes syscalls through wrappers and helpers beyond those provided by libc. Many are linked through the Gnulib project. write libc provides many text writing functions, such as fwrite() for buffered stream access, and the write() syscall wrapper. Coreutils brings in non-standard functions such as full_write(). The full_write() function continuously retries writes unless there is a hard failure. It relies on safe_write() to retry the write() syscall across interrupts. Other write-related helpers are used only in a single utility. Such as iwrite() in dd, cwrite() in split. I'll discuss those within the utilities themselves. Common functions All utilities use at least three functions: main(), usage(), and _(). The usage() function displays help for the utility that includes a list of input parameters, their meaning, and appropriate syntax. The _() function is really a macro defined in system.h that binds simple strings to the Native Language Support capability in GNU gettext.h. If it's a string meant to be shown to the user, it's probably wrapped with this function. Common code lines The following code lines occur in most non-trivial utilities: #include \"system.h\" This header defines system-dependent marcos, variables, and useful non-standard functions. It provides 'translations' necessary to allow coreutils to build on as many architectures as possible. Overall, this header is a patchwork of corner cases lacking serious organization -- but it works!. Many C standard and POSIX headers are included within this header, such as: unistd.h, limits.h, ctypes.h, time.h, string.h, errno.h, stdbool.h, stdlib.h, fcntl.h, inttypes.h, and locale.h. #define PROGRAM_NAME \"cat\" Defines the official name for the utility. Used in the 'version' check. #define AUTHORS proper_name (\"Richard M. Stallman\") Defines the authors for the utility. Used in the 'version' check. emit_try_help () Prints help suggestion after failed output. Includes a link to the online documents. This will appear at the beginning of usage() emit_ancillary_info (PROGRAM_NAME) Prints common extra help info after the command-specific output. Includes a link to the online documents. This appears close to the end of usage() exit (status) Syscall to end execution with the given status. This appears at the end of usage() initialize_main(&argc, &argv) Special handler for VMS forcing built-in wildcard expansion. This is defined away for most other operating systems set_program_name(argv[0]); Saves the basic program name using the first input argument. Discards the path component of argv[0]. setlocale(LC_ALL, \"\"); Sets up internationalization options during execution. Provided by libc inbindtextdomain (PACKAGE, LOCALEDIR); Sets the directory of intenationalization features using the free software gettext.h textdomain (PACKAGE); Sets the text domain to enable i18n. atexit(close_stdout); Registers the close_stdout function for call when the program ends. This flushes the buffer steam in addition to closing. IF_LINT(something); Suppresses GCC warnings if using a linter by including the code within the parens. Usually this is NOP C idioms There are a few idioms buried in the coreutils source that may be unfamiliar to beginners. !! The double exclaimation point is exactly what you see, a double unary NOT operation. The purpose is to coerce a value in to a boolean. It's often used to make a flag from a function return value. do { ... } while (0) The non-loop often encloses a multi-statement macro to ensure proper tokenization after preprocessor substitution. The core use-case is as a consequent: if (condition) MACRO; else something else Note that lack of semi-colon after while -- It's manually added after the macro in the C code. Utility Maintenance An active project like coreutils is always evolving. In general, updates proceed across three arcs: Project-wide changes - These are larger scale changes to underlying architecture and dependencies across all utilities. Some highlights include: 1995: Native language support was added thanks to the GNU gettext project. This incorporated the _() macro around most text output lines. Internationalization support expanded in 1996, adding several initializers to main() as discussed in the previous section 1995: Short descriptions of utility purpose were added to usage output 2003: VMS wildcard support. This is visible via the initialize_main() function 2016: The die() macro replaces most exit() and error() functions on failure paths to avoid compiler warnings Various: Incorporating macro constants such as EXIT_SUCCESS, PROGRAM_NAME, AUTHORS, among others. Utility-specific updates - Many changes apply only to a subset or single utility. These cases usually fall in to three categories: bug fixes, new features, and optimizations. Examples of each type include: Bug: The join, sort, and uniq commands were susceptible to an overflow attack until patched in 2016 Feature: The --output option was added to df in 2013 Optimization: The yes utility performance improved with better buffering Annual maintenance - At a minimum, the copyright years of all utilities are updated. Another administrative change includes updating the FSF address. These changes have no effect on execution For curious readers, I've included an 'evolution' view within each utility page to visualize utility changes over time. Contributing People interested in contributing should read everything on the GNU project page. The contribution guidelines and list of rejected features are especially enlightening. Finally, go through the mailing list archives to get an idea of what contributions are most valuable. A very short list of things to consider before writing any code: Can this functionality be reproduced with existing tools? Does your contribution break backwards compatibility? Does the proposed behavior deviate significantly from POSIX? Not sure? Send your concerns to the community on the mailing list Fun stuff Veteran developers looking for a reason to peek inside these utilities may want to start their journey here. Trivia Shortest utility: false (2 lines - tied with arch, dir, and vdir) Shortest standalone utility: true (80 lines) -- the first version is almost a minimum C program! Longest utility: ls (5308 lines) Many utilities trace back to Research UNIX in the 1970s. A handful even further back to Multics The oldest spiritual ancestor is the CTSS LISTF command (~1963). Thankfully shorted to ls LISTF is one of the original 18 utilities in the 1962 design paper The distinct syntax of the dd utility is reminiscent of the OS/360 job control language (early 1960s). The sort program is the only utility that takes advantage of multi-threading The fmt utility demonstrates optimization of lines and paragraphs using feature costs The deceptively simple yes utility has high-performance output using page-aligned memory buffers The df utility is faster than du. The former uses device metadata while the latter checks all files cksum includes two entry points, one for normal operation and one to generate the CRC-32 table There is no failure condition for the echo utility The design of the test and expr utilities departs significantly from the typical utility su was originally maintained by coreutils/shellutils My personal least used utilities are tsort and ptx - I tested them once in the late 1990s Interesting implementations There are a few standalone code snippets within coreutils worth investigating: An ISAAC cipher for random numbers used by shuf and shred Reservoir sampling used by shuf Legacy System V and BSD checksums used in sum Left-associative expression evaluation used in expr Secure overwrite used by the shred utility The CRC-32 checksum computed by cksum utility Merge sort as adapted for sort The litany of mathemagic behind factor FAQ Nice project! How can I donate to support this effort? Thanks for the thoughts; unfortunately I'm not configured to receive personal donations. But feel free to share your time or money with the Free Software Foundation -- That's where all the collaborative efforts happen! ##*#**##****#*#**/\\##*###*****#**#*#*#**#******#**#*#*####*#*##*",
    "commentLink": "https://news.ycombinator.com/item?id=37439535",
    "commentBody": "Decoded: GNU Coreutils (2018)Hacker NewspastloginDecoded: GNU Coreutils (2018) (maizure.org) 223 points by mr_o47 12 hours ago| hidepastfavorite69 comments 1vuio0pswjnm7 9 hours ago\"Many of these utilities are approaching 30 years old and include revisions by many people over the years.\"\"They are not designed for long life or to scale beyond their role.\"Would love to see some examples from the author of programs he believes are \"designed for long life\" that have been around 30 years.Or even ones he thinks will be around for 30 years. reply matheusmoreira 6 hours agoparentWell, what exactly is their role? Is there a limit to what we can do with these things?To test a little programming language I made, I created a testing framework with bash and coreutils. I felt guilty about not using a \"proper\" language at first but it works so well. In parallel too.I found that the the only thing I couldn&#x27;t test was the argv[0] of the program. No matter how much I twisted the programs, I couldn&#x27;t get them to do exactly what I wanted. So I sent a feature request and a patch to coreutils to give env this feature:https:&#x2F;&#x2F;lists.gnu.org&#x2F;archive&#x2F;html&#x2F;coreutils&#x2F;2023-08&#x2F;msg0006...Looks like it&#x27;s gonna make it in. A new feature for this old program. reply 1vuio0pswjnm7 5 hours agorootparenthttps:&#x2F;&#x2F;cr.yp.to&#x2F;ucspi-tcp&#x2F;argv0.html reply matheusmoreira 1 hour agorootparentNot part of coreutils though. I want to keep my dependencies to a minimum. The GNU coreutils are ubiquitous. reply hereonout2 1 hour agorootparentprevHey if this makes it congratulations! I&#x27;ve never contributed to something so ubiquitous before but often thought how satisfying it&#x27;d be.Like in years down the line, maybe as you retire and hang up your keyboard, you could sit back and smile as you realise your code is still deployed on millions, possibly billions of devices? That the code could far outlast 99.9% of code code anyone has ever written? reply matheusmoreira 1 hour agorootparentWell, I don&#x27;t know if they&#x27;re gonna use my patch. I reported a bug to gpg once and sent a patch in but in the end the maintainer rearchitected the code and gave me attribution. Perhaps they require copyright reassignment?I can&#x27;t deny I&#x27;m gonna be really happy if they do use it. reply nrabulinski 2 hours agorootparentprevYou could’ve used bash’s exec which allows specifying argv0 reply matheusmoreira 1 hour agorootparentI did try it. Didn&#x27;t work in combination with env. # Sets PWD and SHLVL and the latter apparently can&#x27;t be unset env -i VARIABLE=value bash -c &#x27;exec -a program .&#x2F;program&#x27; # Sets env&#x27;s argv0, not my program&#x27;s bash -c &#x27;exec -a program env -i VARIABLE=value .&#x2F;program&#x27; # SHLVL still set env -i bash -c &#x27;unset SHLVL; unset PWD; exec -a program .&#x2F;program&#x27; # SHLVL and _ still set env -i zsh -c &#x27;unset _ HOME PWD LOGNAME SHLVL OLDPWD; ARGV0=programThe original discussions, linked from my post:https:&#x2F;&#x2F;lists.gnu.org&#x2F;archive&#x2F;html&#x2F;coreutils&#x2F;2023-03&#x2F;msg0000...https:&#x2F;&#x2F;lists.gnu.org&#x2F;archive&#x2F;html&#x2F;coreutils&#x2F;2023-03&#x2F;msg0001... reply remexre 8 hours agoparentprevI think that was meant to be understood in context as \"meant to be actively developed\" (as opposed to maintained) for a long time. The practices the author lists are ones that in larger programs would typically be criticized for damaging maintainability as the program grows. reply hulitu 4 hours agorootparentSo to be rewritten from scratch every 2 years. CADT strikes again. &#x2F;s reply gjvc 27 minutes agorootparentI had to look this up... CADT == Jamie Zawinski&#x27;s \"Cascade of Attention-Deficit Teenagers\" reply johnmaguire 8 hours agoparentprevI think perhaps the author meant \"long development life.\" As in, they are basically write-once utilities. Part of the benefit of doing \"one thing well.\" reply asicsp 7 hours agoprevSee also:* How the GNU coreutils are tested: https:&#x2F;&#x2F;www.pixelbeat.org&#x2F;docs&#x2F;coreutils-testing.html* Exploration of each of the coreutils commands: https:&#x2F;&#x2F;ratfactor.com&#x2F;slackware&#x2F;pkgblog&#x2F;coreutils* Command line text processing with GNU Coreutils: https:&#x2F;&#x2F;learnbyexample.github.io&#x2F;cli_text_processing_coreuti... (my ebook that covers 20+ text processing tools) reply dang 10 hours agoprevRelated:Decoded: GNU Coreutils (2018) - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=29871037 - Jan 2022 (7 comments)Decoded: GNU coreutils (2019) - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=26411908 - March 2021 (38 comments)Decoded: GNU Coreutils - https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=20328650 - July 2019 (55 comments) reply jmholla 3 hours agoprevI noticed at least one error, if the author is here. The short description on the shred page[0] is actually the description for csplit[1]. It should be something along the lines of \"overwrite a file to hide its contents, and optionally delete it\".[0]: https:&#x2F;&#x2F;maizure.org&#x2F;projects&#x2F;decoded-gnu-coreutils&#x2F;shred.htm... [1]: https:&#x2F;&#x2F;maizure.org&#x2F;projects&#x2F;decoded-gnu-coreutils&#x2F;csplit.ht... reply boppo1 2 hours agoprevAs a novice programmer trying to sharpen my grasp of how to fruitfully apply DS&A, are there any of these I should look at in particular? reply matthews2 52 minutes agoparentThe cleverness inside coreutils is mostly around choosing effective ways to interface with the kernel, e.g. using copy_file_range() instead of read()&#x2F;write() to avoid having to copy the data into userspace.It&#x27;s more a software engineering endeavour instead of computer science. reply nrabulinski 2 hours agoparentprevMaybe I’m misunderstanding but what do data structures and algorithms have to do with CLI tools? reply webmobdev 2 hours agorootparentDon&#x27;t CLI tools use data structures and algorithms? reply moomin 0 minutes agorootparentNot massively. I mean, an array is a data structure and looping through it is an algorithm, but that’s a bit basic even for a 101 DSA course. sylware 14 minutes agoprevTry to avoid gnu options and niche commands.Stick to busybox commands as much as you can. reply version_five 11 hours agoprevCool, I didn&#x27;t know this existed. I think simple ones like `yes` can be very interesting just to see how the base code of a utility (that writes to stdout) is written.https:&#x2F;&#x2F;maizure.org&#x2F;projects&#x2F;decoded-gnu-coreutils&#x2F;yes.html reply version_five 9 hours agoparentReplying to myself because the thread got trolled:My point was in part that it&#x27;s valuable for even a simple utility to be well written and optimized and that it&#x27;s nice to have these minimal examples to learn about how to, e.g. write output very quickly. The program is so short that presumably the number of lines is unimportant, and if the author knows how to do it they might as well make it as fast as possible so it&#x27;s never in the way, and so we can learn from it. That&#x27;s why I think it&#x27;s a good example. reply m1keil 8 hours agorootparentalso quite interesting to compare with other implementations from the present and the past:https:&#x2F;&#x2F;github.com&#x2F;openbsd&#x2F;src&#x2F;blob&#x2F;master&#x2F;usr.bin&#x2F;yes&#x2F;yes.c https:&#x2F;&#x2F;github.com&#x2F;freebsd&#x2F;freebsd-src&#x2F;blob&#x2F;release&#x2F;4.0.0&#x2F;us... reply 38 11 hours agoparentprevhere is a Go implementation for fun: package main import \"flag\" func main() { yes := flag.String(\"m\", \"y\", \"message\") flag.Parse() for { println(*yes) } } reply dale_glass 11 hours agorootparentYeah, GNU yes could be about that simple but it&#x27;s a good deal more complex to obtain the best performance possible:https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;unix&#x2F;comments&#x2F;6gxduc&#x2F;how_is_gnu_yes... reply 38 11 hours agorootparentum, who cares? most times people are needing to use \"yes\" as part of a \"configure\" script or similar. even if GNU yes was 10 times slower, it would NEVER be the bottleneck in any situation. so whats the point? reply pixelbeat__ 9 hours agorootparentI optimized yes because:* The fast version is still simple enough* The general functionality being provided is to output arbitrary data repeatedly, and it can be useful to do this as fast as possible reply dale_glass 10 hours agorootparentprevI presume somebody had a need, and scratched the itch.With modern systems we can have 8 channel RAM and 128 PCIe lanes to feed a system stuffed with NVMe drives. The amount of throughput that can be obtained is nuts, and at that point all sorts of weird things can become an unexpected bottleneck.This applies even in consumer systems. Suddenly your game loads far slower on a NVMe than it could because it never occurred to the programmer that instead of the disk, the JPEG decoder can become a bottleneck when you can read compressed data at 7 GB&#x2F;s. reply eichin 10 hours agorootparenta decade or so ago, I ran into a problem where \"yes\" was already too fast, feeding it to apt-get install or something (in a context where we knew what the prompts were doing and if anything unusual happened we&#x27;d fail other checks immediately) and it had some clever input buffering going on... that wasn&#x27;t clever enough and locked up on getting a megabyte of yes&#x27;es on the first read() call. reply shrubble 10 hours agorootparentCheck out &#x27;stdbuf&#x27; perhaps? reply rcr 9 hours agorootparentprevBecause you can&#x27;t imagine a case its needed it must not exist? I also remember being a junior dev who thought they had all the answers. reply 38 7 hours agorootparentgotta love junior devs pretending to be more than, then calling out what they think are other junior devs reply the-smug-one 10 hours agorootparentprevYou&#x27;ll have to ask the author that. Now, I&#x27;d like to ask the author who cares how you implement &#x27;yes&#x27; in Go ;-). reply 38 10 hours agorootparentyes C lines of code: 112yes Go lines of code: 9 reply hunson_abadeer 10 hours agorootparentIt feels like you&#x27;re making a bad-faith argument here. You can implement &#x27;yes&#x27; in a straightforward way in a couple lines of C, too. main(int argc, char** argv) { while (1) { if (argc > 1) for (int i = 1; iint main(int argc, char **argv) { const char *phrase = argc > 1 ? argv[1] : \"y\"; while (1) { printf(\"%s\\n\", phrase); } return 0; } replynot2b 10 hours agorootparentprevThat isn&#x27;t an apples-to-apples comparison. A C version could be similarly short, but the GNU yes implementer got carried away with efficiency considerations. If the Go program did the same, it would be longer. reply staplung 9 hours agorootparentprevOn my mac the go version of yes creates a binary that&#x27;s 30x larger than the yes binary I have on a linux machine. 2MB vs ~65KB. reply smashed 5 hours agorootparentThis.In fact, most embedded Linux thingy will be running the busybox version of core utilities instead of gnu coreutils for binary size reasons.I other words, even gnu coreutils is too big. reply svnpenn 9 hours agorootparentprevon mine it is 1,354 KB. I prefer the 10x LOC savings over a megabyte of hard drive, but you do you. reply commonlisp94 7 hours agorootparentIt&#x27;s not about hard drive space, it&#x27;s about start up time.The 10x LOC (despite being a huge exaggeration) is also the fixed cost, not the marginal cost. You&#x27;re only forging main loop and includes, not any fundamental complexity.This is also a funny argument coming from a Go programmer considering that Go trades off conciseness and expressivity for simplicity. Show me some of your favorite Go and I&#x27;m sure we can replace it with some concise C++. reply 38 3 hours agorootparent> C++I just physically shuddered reply BenjiWiebe 8 hours agorootparentprevBut if everything was written in Go it might be 1 megabyte * the number of users of coreutils. Might be worth using a few more lines of code to save a little bit of space on a lot of machines. reply placesalt 10 hours agorootparentprev16 lines of go, with comments & whitespace reply 38 10 hours agorootparent134 lines of C, with comments & whitespace replysingron 9 hours agorootparentprevI&#x27;ve heard before that a lot of GNU programs are stretched like this so that they don&#x27;t resemble anything from proprietary AT&T unix. E.g. all the extra options in basically everything and the ridiculous optimization of things like yes. reply fipar 9 hours agorootparentprevI&#x27;m not saying this is the reason, but unnecessary (or sometimes dangerous if used in real life) optimizations have been created to speed up QA runs (of course, that only works if what you optimize away is not part of what you&#x27;re trying to test), e.g., libeatmydata.But for &#x27;yes&#x27;, I&#x27;d agree with you, though I guess the answer to \"who cares?\" is that whomever wrote it cared. They could have a legit performance reason or may just have done it to show they could. reply sltkr 11 hours agorootparentprevHere&#x27;s a Brainfuck implementation: ++++++++++[->++++++++++++>++[.>.. to see how far it gets before killing itself (on a VM or easily re-flashed machine of course).I did this, but with dd -- it completed. Was very anti-climatic. I was hoping it would crash or at least disconnect me, but the kernel, sshd and bash were still in memory and happily returned me to a prompt where I couldn&#x27;t really do anything. reply nightfly 8 hours agorootparentDoing at the block device level you&#x27;re gonna have stuff stick around in cache, file-wise would blow things up faster reply Denvercoder9 10 hours agoparentprevOn Linux, it&#x27;d likely go until completion. You can&#x27;t write to executables and libraries that are currently running (ETXTBUSY), so shred can&#x27;t trash either itself or find. reply rascul 7 hours agorootparentThat doesn&#x27;t seem right. I can delete nano&#x27;s executable while it&#x27;s running, and rm can remove itself.What am I missing? reply shric 7 hours agorootparentrm doesn&#x27;t actually modify the file. It does an unlink which removes the link from the filename to the file.Essentially, a file can have 0 or more names linked to it. As long as a file has at least one name or at least one process with it open, it will persevere.By contrast, shred actually writes to the underlying file. reply rascul 7 hours agorootparentAhh, for some reason I completely missed that shred was involved. reply staplung 10 hours agorootparentprevTrue, but I wonder if it would first get stuck on trying to shred e.g. &#x2F;dev&#x2F;stderr or if after shredding the files in &#x2F;etc some daemon woke up and tried to read a file there and choked. reply yjftsjthsd-h 9 hours agorootparentI&#x27;d be curious what it did to &#x2F;sys and &#x2F;proc reply MenhirMike 7 hours agoprevI do like that &#x2F;bin&#x2F;true can actually fail and return false, which technically makes a \"Not &#x2F;bin&#x2F;false\" invocation more resilient: https:&#x2F;&#x2F;github.com&#x2F;coreutils&#x2F;coreutils&#x2F;blob&#x2F;master&#x2F;src&#x2F;true.... (and yes, I know it&#x27;s the most unlikely thing, I just found it funny) reply somat 53 minutes agoparentThe other interesting thing about the true command is how much more complicated it got then it needed to be.first an exercise touch mytrue chmod u+x mytrue .&#x2F;mytrue echo \"error code for mytrue is $?\"This is literally how true started life. yes it is very zen.The first offense was legal. All code had to have a copyright disclaimer. even an empty file? Yes. so now it was a file with a copyright disclaimer and nothing else. And the koan-like question comes to mind is \"Can you copyright nothing?\" well AT&T sure tried.Then somebody said our programs should be well defined and not depend on a fluke of unix, which at this point was probably a good idea. So true finally had code. It was \"exit 0\"Then somebody said we should write our system utilities in C instead of shell so it runs faster. openbsd still has a good example of how this would look.http:&#x2F;&#x2F;cvsweb.openbsd.org&#x2F;cgi-bin&#x2F;cvsweb&#x2F;~checkout~&#x2F;src&#x2F;usr....At some point gnu bureaucracy got involved and said all programs must support the &#x27;-h&#x27; flag. so that got added, then they said all programs must support locale so that got added. now days gnu true is an astonishing 80 lines long.https:&#x2F;&#x2F;github.com&#x2F;coreutils&#x2F;coreutils&#x2F;blob&#x2F;master&#x2F;src&#x2F;true....Which is fine I guess, but that is a lot of code for a program that by definition \"Does nothing, successfully\"http:&#x2F;&#x2F;trillian.mit.edu&#x2F;~jc&#x2F;humor&#x2F;ATT_Copyright_true.html reply yjftsjthsd-h 6 hours agoparentprevOnly if run with options, right? It looks like just running `true` is unaffected unless the comment is misleading me. reply patal 1 hour agorootparentYeah, I don&#x27;t see it either. If being run without --help or --version, true can only ever return EXIT_SUCCESS.However, I find it interesting that true and false use the very same implementation. reply nilespotter 11 hours agoprev [–] Fun fact, if you install coretuils from homebrew on MacOS, since MacOS already ships with od(1), od from coretuils is installed as god(1) reply aidenn0 10 hours agoparent [–] Well of course it is, the \"G\" lets you distinguish the Gnu \"od\" from the OG \"od\" replyGuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The report covers MaiZure's project to demystify GNU coreutils version 8.3, specifically designed for beginner programmers.",
      "Major pillars of the article are the overview of completed phases and deep dive into the design and features of utilities, encompassing information about the decoding framework applied for each utility and the prevalent concepts.",
      "Also, it features insights into utility maintenance, updates, and processes for contributing to the project."
    ],
    "commentSummary": [
      "The discussion primarily centers on the \"yes\" command within the GNU Coreutils, highlighting the trade-offs between a program's efficiency and conciseness.",
      "It emphasizes the advantage of using C programming language in writing system utilities, as this choice can lead to enhanced performance.",
      "A notable irony is pointed out, that lengthy codes can sometimes be found in programs designed to perform no significant task."
    ],
    "points": 222,
    "commentCount": 68,
    "retryCount": 0,
    "time": 1694207752
  }
]
