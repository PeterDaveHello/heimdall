[
  {
    "id": 38153573,
    "title": "도시의 기술적 문제와 높은 시스템 요구 사항을 살펴보세요: 스카이라인 2",
    "originLink": "https://blog.paavo.me/cities-skylines-2-performance/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=38153573",
    "commentBody": "",
    "originSummary": [
      "도시: 시뮬레이션 기반 게임인 스카이라인 2는 성능 저하와 게임 플레이 버그 등 여러 가지 문제를 안고 출시되었습니다.",
      "이 게임은 GPU 집약도가 높고, 게임으로는 드물게 Unity 2022 엔진의 DOTS 기술 중 하나인 엔티티 컴포넌트 시스템 구현과 버스트 컴파일러를 사용하기 때문에 시스템 요구 사항이 높습니다.",
      "개발자들은 이러한 문제를 해결하는 데 상당한 시간이 필요하다는 것을 인정하고 지적했지만, 이러한 문제는 게임 개발의 복잡성에 대한 유용한 통찰력을 제공합니다."
    ],
    "commentSummary": [
      "도시: 스카이라인 2는 Unity 2022 엔진의 DOTS 기술 중 하나인 ECS(엔티티 컴포넌트 시스템) 구현 및 버스트 컴파일러 사용과 관련된 몇 가지 성능 및 게임플레이 문제를 안고 출시되었습니다.",
      "이 게임은 시스템 요구 사항이 높습니다. 시뮬레이션 게임치고는 GPU 집약적이며 60 FPS 게임 플레이를 위해서는 고가의 그래픽 카드가 필요하기 때문에 비판의 대상이 되어 왔습니다.",
      "성능 문제 외에도 실험적인 텍스처링과 캐릭터 모델의 과도한 디테일로 인한 문제도 있습니다. 개발자들은 이러한 문제를 인식하고 있지만 이를 해결하려면 상당한 노력이 필요하다는 점을 강조합니다."
    ],
    "points": 840,
    "commentCount": 538,
    "retryCount": 0,
    "time": 1699206847
  },
  {
    "id": 38162435,
    "title": "바닐라 자바스크립트로 개발자의 DOM 조작 숙련도를 높이는 것을 목표로 하는 리소스 컬렉션",
    "originLink": "https://phuoc.ng/collection/html-dom/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=38162435",
    "commentBody": "",
    "originSummary": [
      "웹 개발 환경은 문서 객체 모델(DOM)을 관리하는 데 도움이 되는 Angular, VueJS, React, Solid 및 Svelte와 같은 도구로 계속 발전하고 있지만 개발자는 여전히 DOM과 직접 상호 작용해야 합니다.",
      "이러한 점을 고려하여 개발자가 간단한 자바스크립트를 사용하여 DOM 조작을 마스터하는 데 도움이 되는 리소스 모음이 만들어졌습니다. 이러한 리소스에는 사용자 선호도에 따라 파비콘을 동적으로 업데이트하고 웹페이지의 읽기 시간을 계산하는 등의 작업에 대한 다양한 전략이 포함되어 있습니다.",
      "이 리소스에서는 라이브 데모, 조언, 모범 사례 및 Internet Explorer를 비롯한 다양한 최신 브라우저에 대한 지원을 제공합니다."
    ],
    "commentSummary": [
      "웹 개발 환경은 지속적으로 발전하고 있으며, Angular, VueJS, React, Solid, Svelte와 같은 최신 도구는 문서 객체 모델(DOM) 관리를 지원하는 것을 목표로 하고 있습니다. 하지만 개발자는 DOM과 직접 상호 작용하는 수준을 유지하고 있습니다.",
      "개발자가 바닐라 자바스크립트를 사용하여 DOM 조작을 마스터하는 데 도움이 되는 리소스 모음이 개발되었으며, 여기에는 사용자 선호도에 따른 동적 파비콘 업데이트, 웹페이지 읽기 시간 계산, 콘텐츠 편집 가능 요소의 현재 위치에 HTML 삽입 등이 포함되어 있습니다.",
      "이러한 리소스는 라이브 데모, 팁, 모범 사례 및 Internet Explorer를 비롯한 다양한 최신 브라우저에 대한 지원을 제공합니다."
    ],
    "points": 277,
    "commentCount": 82,
    "retryCount": 0,
    "time": 1699278090
  },
  {
    "id": 38156030,
    "title": "루푸스 뇌염: 시간 지각 상실과 회복을 위한 한 음악가의 투쟁",
    "originLink": "https://www.salon.com/2023/11/05/a-brain-injury-removed-my-ability-to-perceive-time-heres-what-its-like-in-a-world-without-it/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=38156030",
    "commentBody": "",
    "originSummary": [
      "이 이야기는 인지와 시간 인식에 영향을 미치는 심각한 뇌 염증을 일으키는 희귀한 형태의 루푸스인 루푸스 뇌염과 싸우는 한 뮤지션의 이야기에 초점을 맞춥니다.",
      "이 질병은 팔의 감각 상실, 기억력 손상, 이해력 저하로 인해 그녀의 음악적 능력에 심각한 영향을 미쳤습니다. 이 사건은 동기식 음악 공연에서 시간 감각의 중요한 역할을 강조했습니다.",
      "회복 후 기억력이 완전히 회복되지는 않았지만, 음악가로서 음악을 연주할 수 있는 능력을 되찾은 것에 대해 감사해합니다. 또한 뇌가 시간을 측정하기 위해 여러 감각 입력과 에피소드 기억을 사용한다는 과학적 연구에 대해서도 설명합니다."
    ],
    "commentSummary": [
      "음악가인 저자는 심각한 뇌 염증을 유발하고 감각, 기억력, 시간 이해력 등 인지 능력에 영향을 미치는 희귀 질환인 루푸스 뇌염에 걸린 자신의 경험을 공유합니다.",
      "전문 현악기 연주자는 연주를 위해 정확한 동기화가 필요한데, 그녀는 병으로 인해 이 기술을 사용할 수 없게 되었습니다. 그녀는 뇌의 시간 인식은 특정 영역에 의해 관리되는 것이 아니라 수많은 감각 입력을 통합하며, 에피소드 기억 형성이 중요한 역할을 한다고 설명합니다.",
      "수년간의 투병 생활로 과거의 기억력을 완전히 회복하지는 못했지만, 저자는 음악적 기량을 되찾은 것에 대해 감사를 표합니다."
    ],
    "points": 273,
    "commentCount": 154,
    "retryCount": 0,
    "time": 1699221201
  },
  {
    "id": 38155544,
    "title": "와이어허브를 소개합니다: 초기 피드백을 구하는 새로운 WireGuard 구성 생성기 및 관리자 소개",
    "originLink": "https://www.wirehub.org/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=38155544",
    "commentBody": "",
    "originSummary": [
      "개발자는 장고와 최소한의 자바스크립트를 사용하는 WireHub라는 프로젝트를 진행 중입니다. WireHub는 사용자가 다른 사람을 네트워크의 일부로 초대하고 구성/장치를 제어할 수 있도록 지원하는 관리형 WireGuard 구성 생성기입니다.",
      "아직 베타 단계에 머물러 있는 와이어허브는 개발자가 기술 커뮤니티의 초기 피드백을 적극적으로 구하고 있습니다.",
      "와이어허브의 고유한 판매 제안은 호스팅되고 사용자 친화적인 와이어가드 구성 관리자로서의 기능에 있으며, 이를 통해 네트워크 연결 및 구성 관리를 보다 쉽게 할 수 있습니다."
    ],
    "commentSummary": [
      "개발자는 Django와 최소한의 JavaScript를 활용하여 WireHub라는 프로젝트를 진행 중입니다.",
      "WireHub는 사용자가 다른 사용자를 네트워크에 초대하고 자신의 구성 또는 장치를 관리할 수 있는 호스팅된 WireGuard 구성 생성기/관리자입니다.",
      "와이어허브는 현재 베타 단계에 있지만, 커뮤니티의 초기 피드백을 구하고 있습니다."
    ],
    "points": 272,
    "commentCount": 66,
    "retryCount": 0,
    "time": 1699217673
  },
  {
    "id": 38156486,
    "title": "인텔 80386: 시장을 장악하고 최신 컴퓨팅의 기반을 닦은 획기적인 CPU",
    "originLink": "https://www.xtof.info/intel80386.html",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=38156486",
    "commentBody": "",
    "originSummary": [
      "386이라고도 알려진 인텔 80386은 플랫 메모리 공간을 사용하고 가상 메모리를 제공함으로써 CPU 업계에서 중요한 혁신으로 기록되었습니다.",
      "386의 출시로 인텔의 판매 전략이 바뀌었고, 인텔은 CPU의 독점 공급업체가 되어 x86 시장을 장악할 수 있었습니다.",
      "386의 메모리 관리 장치는 효율적인 메모리 액세스와 최신 컴퓨팅 확장을 가능하게 했으며, 이 장치의 채택은 Windows 및 Linux와 같은 고급 개발의 길을 열었습니다."
    ],
    "commentSummary": [
      "인텔 80386 또는 386은 플랫 메모리 공간 사용과 가상 메모리 제공을 통해 PC 시장에 혁신적인 영향을 미친 주요 기술 이정표였습니다.",
      "386은 인텔의 판매 방식에 변화를 가져왔고, IBM과 AMD와 같은 경쟁업체가 다른 분야에 집중하는 동안 인텔은 CPU 공급업체 시장을 독점할 수 있었습니다.",
      "386에 메모리 관리 장치(MMU)가 포함되면서 메모리 액세스가 혁신적으로 발전하고 최신 컴퓨팅의 기반이 마련되었습니다. 386의 채택은 인텔의 x86 시장 장악과 이후 Windows 및 Linux와 같은 플랫폼의 개발로 이어졌습니다."
    ],
    "points": 261,
    "commentCount": 158,
    "retryCount": 0,
    "time": 1699224482
  },
  {
    "id": 38161016,
    "title": "프로시모, Rust로 작성된 리눅스 sudo 유틸리티의 보다 안전한 버전인 sudo-rs의 첫 번째 안정 버전 공개",
    "originLink": "https://www.memorysafety.org/blog/sudo-first-stable-release/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=38161016",
    "commentBody": "",
    "originSummary": [
      "소프트웨어 회사인 프로시모는 Rust 프로그래밍 언어로 작성된 일반적인 Linux sudo 유틸리티의 재작성 버전인 sudo-rs의 첫 번째 안정적인 릴리스를 출시했습니다.",
      "sudo-rs 프로젝트는 메모리 관리 관련 버그를 완화하고 버그 탐지를 위한 포괄적인 테스트 스위트와 함께 sudo의 보안을 강화하는 데 집중하고 있습니다.",
      "새로운 sudo-rs는 2023년 9월에 외부 보안 감사가 예정되어 있는 Wolfi Linux OS에 통합됩니다. NLnet 재단과 Amazon Web Services가 이 프로젝트를 재정적으로 지원했습니다."
    ],
    "commentSummary": [
      "소프트웨어 회사인 Prossimo는 프로그래밍 언어인 Rust로 구현되어 널리 사용되는 Linux sudo 도구의 수정 모델인 sudo-rs의 첫 번째 안정 버전을 출시했습니다.",
      "sudo-rs 프로젝트는 원래 sudo에서 버그를 발견한 포괄적인 테스트 스위트와 단순화를 통해 수많은 메모리 관리 관련 버그를 해결하여 sudo의 보안을 강화하는 것을 목표로 합니다.",
      "sudo-rs는 이제 Wolfi Linux OS의 일부가 되었으며 2023년 9월에 외부 보안 검토를 거칠 예정입니다. NLnet 재단과 Amazon Web Services가 이 프로젝트를 재정적으로 지원했습니다."
    ],
    "points": 235,
    "commentCount": 157,
    "retryCount": 0,
    "time": 1699268304
  },
  {
    "id": 38161452,
    "title": "래더를 소개합니다: 12ft.io 및 1ft.io를 대체할 새로운 오픈소스 및 사용자 정의 가능한 대안 소개",
    "originLink": "https://github.com/kubero-dev/ladder",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=38161452",
    "commentBody": "",
    "originSummary": [
      "저자는 기능이 부족한 일부 서비스에 대한 오픈소스 대안을 개발했습니다.",
      "대체 솔루션은 원래 Google에서 개발한 정적 형식의 컴파일 언어인 Golang으로 작성됩니다.",
      "이 새로운 소프트웨어는 완전히 사용자 정의할 수 있어 사용자가 특정 요구 사항에 맞게 동작을 조정할 수 있습니다."
    ],
    "commentSummary": [
      "작성자는 특정 서비스의 기능에 대한 불만족으로 인해 오픈소스 대안을 만들었습니다.",
      "대체 소프트웨어는 정적으로 유형화되고 컴파일된 프로그래밍 언어인 골랑(Golang)을 사용하여 개발되었습니다.",
      "이 새로운 대안은 완전히 사용자 지정할 수 있으므로 사용자가 특정 요구에 맞게 수정할 수 있습니다."
    ],
    "points": 224,
    "commentCount": 97,
    "retryCount": 0,
    "time": 1699272284
  },
  {
    "id": 38160703,
    "title": "멀티 스레드 파이프라인 도입으로 비디오 트랜스코딩을 향상시킨 FFmpeg",
    "originLink": "https://twitter.com/FFmpeg/status/1721275669336707152",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=38160703",
    "commentBody": "",
    "originSummary": [
      "전 세계적으로 중요한 비디오 트랜스코더인 FFmpeg가 멀티스레드 트랜스코딩 파이프라인을 중심으로 한 서비스 개선 사항을 발표했습니다.",
      "이 업데이트는 2023년 11월 5일에 공식 발표되었습니다."
    ],
    "commentSummary": [
      "전 세계를 선도하는 비디오 트랜스코더인 FFmpeg는 멀티스레드 트랜스코딩 파이프라인을 도입하여 기능을 개선하고 있습니다.",
      "2023년 11월 5일에 공식 발표된 이번 업그레이드는 서비스 품질 개선을 목표로 합니다.",
      "멀티스레드 트랜스코딩 파이프라인을 사용하면 소프트웨어가 여러 트랜스코딩을 동시에 수행하여 효율성을 높일 수 있습니다."
    ],
    "points": 221,
    "commentCount": 56,
    "retryCount": 0,
    "time": 1699265554
  },
  {
    "id": 38155541,
    "title": "GNU 디버거 명령줄 인터페이스에 대한 통찰력 있는 초보자 가이드",
    "originLink": "https://beej.us/guide/bggdb/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=38155541",
    "commentBody": "",
    "originSummary": [
      "\"Beej의 GDB 퀵 가이드\"는 터미널 명령줄을 통해 프로그램을 디버깅하는 데 사용되는 도구인 GNU 디버거(gdb)에 대한 자세한 소개를 제공하는 초보자 친화적인 안내서입니다.",
      "이 가이드는 디버거 시작, 중단점 관리, 변수 모니터링, 코어 덤프 처리 등 gdb 사용의 다양한 측면을 다룹니다. 통합 개발 환경(IDE)을 사용하지 않는 코더에게 특히 유용합니다.",
      "또한 gdb의 \"기계 인터페이스 인터프리터\"인 GDB/MI를 사용하여 개인화된 프런트엔드 인터페이스를 만드는 방법에 대한 지식과 텍스트 사용자 인터페이스(TUI) 모드에서 창 레이아웃 관리에 대한 지침도 제공합니다. 이 가이드는 크리에이티브 커먼즈 라이선스에 따라 라이선스가 부여됩니다."
    ],
    "commentSummary": [
      "\"Beej의 GDB 퀵 가이드\"는 프로그래밍을 위해 통합 개발 환경(IDE)을 사용하지 않는 사용자를 대상으로 터미널 명령줄을 통해 GNU 디버거(gdb)를 사용하기 위한 초보자 친화적인 사용 설명서입니다.",
      "이 가이드는 디버거 시작, 중단점 구성, 변수 검사, 코어 덤프 처리와 같은 다양한 명령어를 캡슐화하여 gdb에 대한 심층적인 개요를 제공합니다.",
      "또한 gdb의 '기계 인터페이스 인터프리터'인 GDB/MI를 사용하여 개인화된 프런트엔드 인터페이스를 생성하는 방법과 텍스트 사용자 인터페이스(TUI) 모드에서 창 레이아웃을 관리하는 방법도 설명합니다."
    ],
    "points": 205,
    "commentCount": 29,
    "retryCount": 0,
    "time": 1699217638
  },
  {
    "id": 38160161,
    "title": "Mozilla, Mercurial에서 Git으로 파이어폭스 개발 전환: 2단계 접근 방식",
    "originLink": "https://groups.google.com/a/mozilla.org/g/firefox-dev/c/QnfydsDj48o/m/8WadV0_dBQAJ",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=38160161",
    "commentBody": "",
    "originSummary": [
      "Mozilla는 두 도구를 모두 관리하는 데 어려움을 겪으면서 Firefox 개발을 Mercurial에서 Git으로 전환할 계획을 공개했습니다.",
      "리포지토리는 GitHub로 이전되지만 Mozilla는 현재 기여 프로세스를 계속 진행하며 현재로서는 풀 리퀘스트를 받지 않습니다.",
      "전환은 두 단계로 진행되며, 첫 번째 단계는 주로 개발자에게 영향을 미치는 변경 사항이고, 두 번째 단계는 백엔드 인프라를 Mercurial에서 Git으로 이전하는 것입니다. 이 프로세스의 시작은 최소 6개월의 계획 기간을 거쳐 이루어집니다."
    ],
    "commentSummary": [
      "Mozilla는 두 시스템을 모두 유지 관리해야 하는 어려움으로 인해 Firefox의 개발 프로세스를 Mercurial에서 Git으로 변경하기로 결정했습니다.",
      "리포지토리를 GitHub로 옮겼음에도 불구하고 Mozilla는 현재의 기여 워크플로를 유지할 계획이며 당분간 풀 리퀘스트를 받지 않을 것입니다.",
      "전환은 두 단계로 진행되며, 처음에는 개발자에게 영향을 미치는 변경사항에 초점을 맞추고 나중에는 백엔드 인프라를 마이그레이션합니다. 최소 6개월의 계획 기간을 거쳐 시작될 이 프로세스는 코드 관리에 대한 Mozilla의 접근 방식에 상당한 변화가 있음을 의미합니다."
    ],
    "points": 201,
    "commentCount": 165,
    "retryCount": 0,
    "time": 1699260604
  },
  {
    "id": 38158529,
    "title": "지점 병합을 위한 계획: v10.0 릴리스 준비",
    "originLink": "https://groups.google.com/g/chez-scheme/c/D7g6mIcYLNU",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=38158529",
    "commentBody": "",
    "originSummary": [
      "Matthew Flatt와 Chez Scheme의 유지 관리자는 Chez Scheme의 여러 버전을 병합하여 v10.0 출시를 목표로 코드를 간소화할 계획입니다.",
      "합병 후 racket/ChezScheme의 코드는 cisco/ChezScheme의 메인 브랜치와 거의 동일하게 유지되며, 모든 변경 사항은 Chez Scheme의 본질과 품질을 유지하기 위해 신중하게 이루어집니다.",
      "현재 관행과는 달리, 이식 가능한 바이트코드(pb) 부팅 파일은 더 이상 Git 서브모듈을 참조하지 않고 cisco/ChezScheme 리포지토리에 직접 통합될 것입니다."
    ],
    "commentSummary": [
      "Matthew Flatt와 Chez Scheme 유지 관리자는 두 개의 GitHub 링크에 있는 기존 Chez Scheme 브랜치를 병합하여 cisco/ChezScheme의 코드를 v9.9.9-pre-release.20으로 전환하고 v10.0 릴리스를 목표로 진행할 계획입니다.",
      "합병 후 racket/ChezScheme 브랜치의 콘텐츠는 cisco/ChezScheme의 메인 브랜치와 유사하게 반영되며, 변경 사항은 Chez Scheme의 성격과 품질을 유지하기 위해 신중하게 확인됩니다.",
      "특히, 통합된 cisco/ChezScheme은 이식 가능한 바이트코드(pb) 부팅 파일에 대한 Git 서브모듈을 참조하지 않고 대신 cisco/ChezScheme 리포지토리에 통합할 것입니다."
    ],
    "points": 200,
    "commentCount": 61,
    "retryCount": 0,
    "time": 1699241700
  },
  {
    "id": 38154045,
    "title": "ESP32에서 웹사이트를 호스팅하는 방법을 설명하는 새로운 튜토리얼",
    "originLink": "https://esp.khalsalabs.com",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=38154045",
    "commentBody": "",
    "originSummary": [
      "2023년 11월 1일에 생성된 이 웹페이지는 저비용, 저전력 시스템온칩 마이크로컨트롤러 시리즈인 ESP32를 기반으로 합니다.",
      "ESP32에서 웹사이트를 호스팅하는 방법에 대한 튜토리얼을 제공하여 이 시스템을 사이트에 활용하는 데 관심이 있는 개인에게 유용한 정보를 제공합니다.",
      "이 튜토리얼 웹페이지의 구축은 ESP32의 실제 적용 사례를 보여줌으로써 웹사이트 호스팅에 대한 잠재력을 보여줍니다."
    ],
    "commentSummary": [
      "2023년 11월 1일에 개설된 이 웹페이지는 Wi-Fi와 듀얼 모드 Bluetooth가 통합된 저비용, 저전력 시스템 온 칩 마이크로컨트롤러 시리즈인 ESP32에서 호스팅됩니다.",
      "이 사이트에서는 ESP32에서 웹사이트를 호스팅하는 방법을 보여주는 튜토리얼을 통해 사용자에게 이 기술을 활용할 수 있는 가이드를 제공합니다.",
      "ESP32와 같은 저전력 마이크로컨트롤러 시스템에서 웹 호스팅을 이해하고자 하는 분들을 위한 실습 기술 학습 기회를 제공합니다."
    ],
    "points": 196,
    "commentCount": 160,
    "retryCount": 0,
    "time": 1699209084
  },
  {
    "id": 38158309,
    "title": "밀리포스: 가장 작은 실제 프로그래밍 언어 주장",
    "originLink": "https://github.com/fuzzballcat/milliForth",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=38158309",
    "commentBody": "",
    "originSummary": [
      "FORTH 프로그래밍 언어인 밀리포스는 현재까지 가장 작은 실제 프로그래밍 언어로, 422바이트만 차지하여 512바이트 부트 섹터에 들어갈 정도로 작습니다.",
      "섹터포스는 이전에도 이를 달성했지만, 밀리포스는 더 작아져 섹터LISP2보다 14바이트 더 작습니다. 최소한의 크기에도 불구하고 프로그래밍 효율성이 저하되지 않습니다.",
      "밀리포스의 수정 사항에는 'tib' 제거, 잘린 오류 처리, 작동하지 않는 삭제 키, 에뮬레이터와 호환되는 sector.asm의 어셈블된 바이너리, 바이너리 크기 확인 유틸리티 등이 있습니다."
    ],
    "commentSummary": [
      "422바이트에 불과한 밀리포스는 현존하는 가장 작은 실제 프로그래밍 언어라고 주장하며, 심지어 512바이트 부트 섹터에 들어갈 정도로 작습니다.",
      "밀리포스의 기반 언어인 FORTH는 기능에 필요한 몇 개의 단어만 포함하면서도 프로그래밍 효율성을 유지하는 미니멀리즘 언어입니다.",
      "새로운 밀리포스는 이전 버전인 섹터포스와 비교하여 몇 가지 수정 사항이 있으며, 여기에는 티브 부재, 제한된 오류 처리, 작동하지 않는 삭제 키 등이 포함됩니다. 또한 sector.asm의 어셈블된 바이너리와 바이너리 크기를 표시하는 유틸리티가 포함되어 있습니다."
    ],
    "points": 187,
    "commentCount": 47,
    "retryCount": 0,
    "time": 1699239803
  },
  {
    "id": 38155324,
    "title": "발효 곡물이 그리즐리 곰을 유인하고 중독시켜 몬태나에서 기차 사망으로 이어집니다.",
    "originLink": "https://cowboystatedaily.com/2023/11/04/63-grizzlies-some-drunk-on-fermented-grain-killed-by-trains-in-montana/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=38155324",
    "commentBody": "",
    "originSummary": [
      "1980년대 이후 몬태나주 글레이셔 국립공원 인근의 철도 노선을 따라 상당수의 회색곰이 폐사했는데, 주로 철도 차량에서 유출된 발효 곡물에 의한 중독이 주요 원인입니다.",
      "흘린 곡물과 습기가 섞여 발효가 시작되면서 곰을 끌어들이는데, 2021년에 이미 기차에 치여 세 마리가 사망한 것으로 보고되었습니다.",
      "철도 차량의 곡물 양을 줄이고 알려진 '킬 존'에 소음 트리거를 설정하는 등의 완화 조치가 제안되었지만, 지금까지 이 문제를 해결하기 위한 제한적인 조치가 취해졌습니다."
    ],
    "commentSummary": [
      "1980년대 이후 몬태나주 빙하 국립공원 근처에서 수십 마리의 회색곰이 철도 차량에서 유출된 발효 곡물에 중독되어 비극적으로 죽었습니다.",
      "2021년 현재까지 3마리의 곰이 기차에 치여 사망한 것으로 나타나 이 문제가 지속되고 있음을 시사합니다.",
      "가능한 해결책으로는 철도 차량의 곡물 양을 줄이고 인식된 '킬 존'에 소음 트리거를 배치하는 것 등이 있지만, 사망률을 완화하기 위한 조치는 거의 취해지지 않았습니다."
    ],
    "points": 184,
    "commentCount": 140,
    "retryCount": 0,
    "time": 1699216148
  },
  {
    "id": 38157466,
    "title": "RTL-SDR 동글을 사용하여 NRSC-5 디지털 라디오 방송국 수신: 종합 가이드",
    "originLink": "https://github.com/theori-io/nrsc5",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=38157466",
    "commentBody": "",
    "originSummary": [
      "nrsc5 프로그램은 RTL-SDR 동글을 사용하여 NRSC-5 디지털 라디오 방송국을 수신하며 명령줄 인터페이스와 API를 모두 제공합니다.",
      "사용자는 다양한 시스템 구성에 대한 명시적인 지침과 샘플 파일 테스트 및 문제 해결을 포함하는 제공된 가이드를 사용하여 프로그램을 컴파일해야 합니다.",
      "오디오 프로그램 전환 및 종료를 위한 추가 명령이 제공됩니다. Windows에서 원활하게 작동하려면 USB 드라이버에서 Zadig를 사용하여 조정하는 것이 좋습니다."
    ],
    "commentSummary": [
      "nrsc5는 RTL-SDR 동글을 사용하여 NRSC-5 디지털 라디오 방송국을 수신하는 프로그램으로, 다른 애플리케이션 개발을 위한 명령줄 인터페이스와 API를 제공합니다.",
      "이 프로그램에는 다양한 빌드 옵션을 사용하여 우분투, 데비안, 라즈비안, 윈도우 등 다양한 시스템에서 빌드하기 위한 포괄적인 지침과 함께 문제 해결 및 샘플 캡처 파일로 테스트하기 위한 조언이 함께 제공됩니다.",
      "특히 Windows 시스템의 경우 USB 드라이버를 변경하여 오류를 방지하고 오디오 프로그램 전환, 종료 및 명령줄 옵션에 대한 키보드 명령이 제공되는 Zadig를 사용하는 것이 좋습니다."
    ],
    "points": 176,
    "commentCount": 65,
    "retryCount": 0,
    "time": 1699231668
  }
]
