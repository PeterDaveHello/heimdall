[
  {
    "id": 36421315,
    "timestamp": 1687367335,
    "title": "Maps distort how we see the world",
    "url": "https://unchartedterritories.tomaspueyo.com/p/maps-distort-how-we-see-the-world",
    "hn_url": "http://news.ycombinator.com/item?id=36421315",
    "content": "Discover more from Uncharted TerritoriesDeeply understand how the world works today to predict the world of tomorrow: AI, tech; the future of democracy, energy, education, and moreOver 67,000 subscribersSubscribeContinue readingSign inMaps Distort How We See the World30 Maps to Rethink the WorldTOMAS PUEYOAPR 20, 202336638ShareMaps twist our perception of the world.Countries closer to the equator\u2014which happen to be poorer1\u2014seem smaller than they are.Proportions of apparent size and real size (animated), Jakub Nowosad. Source.This is because the world is a 3D sphere, but maps are 2D projections on a plane. That means distortion!Here is a static version showing the equator, to compare more easily and see how much the projection differs from reality as you move away from it:We should be wary of flattening balls!Depending on your reference, Chad appears bigger or smaller than expected.So we develop a poor intuition for comparative region sizes. The biggest loser is Africa, which is humongous:Here\u2019s another take on it, to drive the point home. If you compare the most affected regions2, you realize that Africa is about as wide as Russia!I confirmed this by using the width of Africa from Encyclopedia Britannica and the Russian width by checking the distance between the contiguous Russia\u2019s most extreme points.Somalia, Japan, and New Zealand are all approximately the same size as the US East Coast.The website from which this comes from shows Somalia separate from Somaliland. I don\u2019t know enough to have an opinion about it yet. Source.Brazil is the most short-changed country, as it\u2019s right on the equator and huge. Here it is compared to Europe.Broadly speaking, many regions of the world are of a similar size. Here is Europe compared to Australia and the US contiguous 48:Here\u2019s a beautiful way to put it:Australia if it had the Mediterranean inside. Source.Now Europe compared to Canada, India, and China:Indonesia\u2019s span is longer than the EU\u2019s! \u201cSmall\u201d Java is actually longer than GermanyChile is ridiculously long:All these maps come from The Real SizeArgentina fits a handful of European countries inside its borders.Note the Falklands are marked as part of Argentina. They are currently controlled by the UK. Just another way maps can convey different ideas depending on who draws them. Source.The island of New Guinea, which appears to be about the size of Great Britain, reaches in fact from London to Moscow.SourceAnd the biggest of all, the Pacific Ocean. It is so humongous it could contain the entire landmass of Earth3!This is why, if you look straight at the Pacific Ocean on a globe, you only see water.So the Mercator projection clearly distorts our perception of the world. But it\u2019s not the only way it\u2019s distorted.We center our map around the equator and the reference meridian, which goes through London. Here\u2019s an old Japanese map centered around Japan instead.An 1853 Japanese world map presented on a cylindrical projection. Source.What happens if you center it on Argentina instead?This shows how far away from everything Chile is, at the bottom left of South America. Poor lonely Chile. Your Australian editor Shoni would also want to claim lonely status for New Zealand. Source.Or New Zealand?SourceAntarctica feels very lonely:Maybe that\u2019s why it\u2019s best friends with Chile. And New Zealand. Source.Conversely, if you center the map around Alaska, you can see why it has the 3rd biggest airport in the world in terms of cargo: it\u2019s the most central point to all the big markets in the northern hemisphere.SourceThese projections make us miss lots of quite striking relations between regions. For example:ALL of continental South America lies east of the state of Michigan.Melbourne is closer to Antarctica than to Darwin.SourceEdinburgh is west of Liverpool and Bristol!The Panama Canal runs north-south, and ships enter in the west and leave in the east:Brazil is brutally big. Its northernmost point is closer to Canada than to its southernmost point! In fact, its northernmost point is closer to any American country than to its southernmost point!SourceIt\u2019s so big that its easternmost point is much closer to Africa than to its westernmost point.SourceHere\u2019s one that broke my head: China\u2019s westernmost point is closer to Germany than to its easternmost point!SourceOK and what if we completely change the emphasis? How would fish draw a map?Super convenient. An octopus civilization would be well connected. Source: @claradealbertoIf all these maps follow so many conventions, and they distort the perception of the world to such an extreme, why does the international community keep using them?The \u201cinternational community\u201d:It\u2019s a joke. If your heartbeat started accelerating, relax! Another way that maps are not as innocent and neutral as we like to think of them. Source.Over 20 million people saw a similar thread I put on Twitter. I\u2019m sure you know somebody who would be interested in seeing this article. Share it with them, and they\u2019ll appreciate. It\u2019s also the best way to grow Uncharted Territories!ShareAre these maps chosen for good reasons and these distortions are a side-effect, or are they purposefully deceitful? Are there better maps we could choose? I\u2019ll explore this in the premium article this week. Subscribe to read it!Subscribe1I\u2019ll talk more about this in a future article.2Those most reduced and most aggrandized by the change.3It\u2019s 12% bigger than all the landmass on Earth, actually.366 Likes\u00b719 Restacks36638Share",
    "summary": "- Maps distort our perception of the world because they are 2D projections of a 3D sphere, causing distortion in size and shape.\n- Africa is actually much bigger than it appears on maps, while countries near the equator appear smaller than they are.\n- Different map projections and centers of reference can show different perspectives and reveal surprising relationships between regions.",
    "hn_title": "Maps distort how we see the world",
    "original_title": "Maps distort how we see the world",
    "score": 510,
    "hn_content": "- Different map projections distort the size and shape of countries in different ways.\n- The Mercator projection is popular because it preserves local angles and shapes, making it useful for navigation.\n- Mercator projection is widely used in decorative world maps and maps used in data visualization, even though it may not be the best choice for those purposes.\n- The trade-offs between different map projections are rarely discussed, but they can significantly impact our perspective of the world.\n- The article suggests that using a non-Mercator projection can challenge our assumptions about the size and shape of countries.\n- It's important to be aware of the limitations of map projections, as they can shape our understanding of the world.- Maps distort our perception of the world and can lead to misconceptions about the sizes and shapes of different countries and continents.\n- The Mercator projection, which is commonly used in maps, significantly distorts the sizes of landmasses, making countries near the poles appear larger than they actually are.\n- Other map projections, such as the Gall-Peters projection and the Robinson projection, offer more accurate representations of the sizes of different countries.\n- The choice of map projection is often based on the specific purpose of the map. For example, the Mercator projection is useful for navigation, while other projections may be better suited for representing areas accurately.\n- The discussion around map distortions raises questions about the intention behind map design. Are these distortions a result of practical considerations or are they purposefully misleading?\n- Exploring different map projections can provide new perspectives and challenge our preconceived notions about the world.\n- Using a globe can offer a more accurate representation of the Earth, but it may not be practical for everyday use.\n- The post offers examples of different map projections and encourages readers to consider the implications of these distortions on their understanding of the world.\n- The topic of map projections is not only relevant to cartography but also has broader implications for data visualization and how we interpret information.\n- The discussion around map distortions highlights the importance of critical thinking and questioning information presented to us, even in seemingly objective sources like maps.",
    "hn_summary": "- Different map projections distort the size and shape of countries in different ways, and the popular Mercator projection significantly distorts the sizes of landmasses.\n- Other map projections, such as the Gall-Peters projection and the Robinson projection, offer more accurate representations of the sizes of different countries.\n- The choice of map projection is based on the specific purpose of the map, and exploring different projections challenges our preconceived notions and encourages critical thinking."
  },
  {
    "id": 36420712,
    "timestamp": 1687365102,
    "title": "Making Figma better for developers with Dev Mode",
    "url": "https://www.figma.com/blog/introducing-dev-mode/",
    "hn_url": "http://news.ycombinator.com/item?id=36420712",
    "content": "FIGMA\u2019S ANNUAL CONFERENCE IS HERE AND WE\u2019RE STREAMING LIVEWATCH NOWMaker StoriesWorking WellInside FigmaInsightsTopicsSign up for FigmaJune 21, 2023Making Figma better for developers with Dev ModeKris Rasmussen Chief Technology Officer, FigmaInside FigmaProduct updatesEngineeringHow can a design tool work better for developers? It\u2019s a question we\u2019ve been asking ourselves and our community. Today, we\u2019re excited to introduce Dev Mode, a new workspace in Figma that\u2019s designed to get developers what they need, when they need it, harnessing the tools they use every day.Figma was born on the web\u2014an unconventional start to a design tool, but one we felt product design desperately needed. With a single link, designers could collaborate on in-progress work, sharing early explorations, rather than safeguarding designs until they felt \u201cpolished.\u201d As more and more designers embraced Figma and this multiplayer way of working, we began to see a natural broadening of use across teams and disciplines, especially with developers.Today, we know that on our paid plans more developers visit Figma than designers. We also know that understanding developers\u2019 needs and their challenges is critical to making Figma a place where product development can be more efficient, collaborative, and expressive.Developers have unique workflows and preferences. From front-end developers working with mature design systems, to design systems engineers building components, to those building content layouts and exporting assets in their work with brand designers, every team wants to work with as little friction as possible.With Dev Mode, we see a huge opportunity to get developers what they need quickly and efficiently\u2014just as we did with designers when we first set out to build Figma. The easier it is for teams to design, document, find, and implement high-fidelity designs without losing sight of the work and each other along the way, the better the product outcomes. We\u2019re excited to take this first step in bridging design and development in Figma, and we can't wait to see what teams do next.Get to coding fasterWhile the Figma canvas is great for freeform design exploration, it can be confusing if you\u2019re dropped into a design file that\u2019s missing information needed for implementation. Dev Mode is like a browser inspector for your design file, and it brings design concepts\u2014shapes, layers, and groups\u2014closer to developer concepts like code, icons, and tokens. By hovering and clicking around the Figma canvas, you can find and export all the information you need, like measurements, specs, and assets, and uncover additional context from your design system. Much like Chrome Dev Tools, Dev Mode takes inspiration from other development tools to create an environment that\u2019s immediately familiar to you.Code in Dev Mode is entirely redesigned and customizable for whichever language you\u2019re working in. We know that code isn\u2019t useful out of the box. Rather, it\u2019s a jumping off point so you don\u2019t have to go from 0 to 1 every time. You\u2019ll now see a CSS box model, a modern syntax with a tree view, and you can toggle between dimension units to match your codebase.Access everything you need, in one placeWith the GitHub plugin, you can link files, issues, and pull requests to Figma component and designs, so you always have the context you need in one place.Building products requires a robust toolchain, but jumping between design libraries, the codebase, and other project management tools can create inefficiencies, especially when components and style names don\u2019t match what\u2019s in code, or the team doesn\u2019t track and document tasks. Dev Mode aims to make you more productive by connecting the tools you use and your code components to the design file.Plugins allow you to extend Figma\u2019s functionality to flex however your team works. You can handle project management with Jira, Linear, and GitHub, so that you and your designer know what\u2019s going on in your respective processes. Storybook helps you reference what\u2019s happening in your codebase, in the context of the design itself. And codegen plugins from AWS Amplify Studio, Google Relay, and Anima help you customize code output\u2014you can even create your own based on your unique workflow.It\u2019s very useful to have plugins that interconnect with our daily tools. We use GitHub, we use Storybook\u2014it saves me a lot of time.Design systems are getting more powerful with the introduction of design tokens through variables. Tokens are like little bits of UI data that can be used across design and code. These now surface in Dev Mode, so it\u2019s immediately clear what\u2019s needed to start building. You can also add related links to objects on the canvas to reference documentation, or what\u2019s in your plugins.Track what needs to go to productionEven as the design and development phases of the product development process blur together, the artifacts from each\u2014design files and code\u2014remain distinct. To date, it hasn\u2019t been easy to navigate design files, select specific components and their properties, or even know what\u2019s changed since you last looked at a file. Now, designers can simply label a section as \u201cready for development\u201d and send it to you directly, without creating a separate page or file. Diff support allows you to compare changes between different versions of a frame and stay up to date.Extend your workflowWith the VS Code extension you can bring the power of Dev Mode into your code editor to review designs, see notifications and comments, and stay on top of changes without ever having to leave your coding environment. The VS Code extension also autocompletes code based on the design you\u2019re inspecting, helping you work that much faster.The Figma for VS Code extension brings your Figma file into the code editorDev Mode and Figma for VS Code are now in beta and free for all users for the rest of 2023. Starting in 2024, you\u2019ll need a paid plan to access Dev Mode. If you\u2019re an editor on a paid plan today, Dev Mode will be included. We know that there are some developers who may not need the full stack of Figma features, so we\u2019re rolling out two new plan options for them. Starting in 2024, you\u2019ll have an option to purchase Dev Mode access only for $25 per seat per month on Organization, and $35 per seat per month on Enterprise.There\u2019s a much higher level of trust when people are in the same tool\u2014the information is much more up-to-date, you\u2019re not pulling down some files to your computer or chasing things over email anymore. It\u2019s a much more collaborative process.This is just the first step in making Figma better for developers. With your input from the beta of Dev Mode and VS Code, we\u2019re excited to expand functionality, including more ways to improve designer-developer collaboration, extract specs, and drive more alignment between design and code.Take Dev Mode for a spin and let us know what you think!Kris Rasmussen is the Chief Technology Officer at Figma, where he leads the engineering, security and data science teams. Prior to joining Figma in 2017, Kris served as engineering lead and a technical advisor at Asana, where he co-authored many aspects of the framework and infrastructure that powers the company's realtime collaborative features. Before Asana, Kris co-founded RivalSoft Inc., a web-based application that gives companies an internal hub for market information, and served as Chief Architect at Aptana.TwitterLinkedInSubscribe for a Shortcut to fresh news and fun surprisesI agree to opt-in to Figma's mailing list.By clicking \u201cSubmit\u201d you agree to our TOS and Privacy Policy.Create and collaborate with FigmaGet started for freeTwitterYouTubeInstagramFacebookUse CasesUI designUX designWireframingDiagrammingBrainstormingOnline whiteboardAgile workflowsStrategic planningTemplatesRemote designAgenciesFigma for educationExploreDesign featuresPrototyping featuresDesign systems featuresCollaboration featuresDesign processFigJamPricingEnterpriseOrganizationProfessionalCustomersSecurityIntegrationsContactResourcesBlogBest practicesSupportDevelopersResource libraryDownloadsWhat's newReleasesCareersOur storyPartnersPrivacyModern Slavery StatementStatusCompareSketchAdobe XDInvision StudioFramerDesign on WindowsMiroDo Not Sell/Share My Personal Info + Opt-OutEnglish",
    "summary": "- Figma has introduced a new workspace called Dev Mode, specifically designed to meet the needs of developers.\n- Dev Mode allows developers to access the information they need quickly and efficiently, such as measurements, specs, and assets, while also providing additional context from design systems.\n- The introduction of Dev Mode aims to bridge the gap between design and development, making the product development process more efficient, collaborative, and expressive.",
    "hn_title": "Making Figma better for developers with Dev Mode",
    "original_title": "Making Figma better for developers with Dev Mode",
    "score": 481,
    "hn_content": "- Figma has introduced Dev Mode, which aims to make the design-to-development process smoother for developers by providing tools and features like component playground, redlining, and links to GitHub.\n- The update includes integration with VS Code and the ability to export CSS code snippets, improving collaboration between designers and developers.\n- Some users express frustration with Figma's visual model, finding it difficult to navigate and maintain accurate links to design components.\n- The release of Dev Mode demonstrates Figma's commitment to improving its platform for developers and addressing their specific needs.\n- Figma's enhancements may be of interest to tech-savvy readers looking for better collaboration and workflow between designers and developers.\n- Figma's increased focus on developers sets it apart from other design tools, making it more appealing to a broader audience.\n- Figma's latest update may attract new users and increase adoption, thanks to its unique features and improved workflow capabilities.- Figma has a high Net Dollar Retention at 200%+\n- Figjam from Miro is being discussed\n- Some users find the amount of text overwhelming and request a TLDR\n- A user comments on the weird-looking mouse cursor\n- One user asks for information on what Figma is\n- The timing of the release coincides with a conference\n- Users speculate on the compromises made during development and the team's experience\n- Figma is still in beta with a full launch planned for 2024\n- A user suggests a plugin for React Native\n- User shares their React Native -> Figma plugin and invites feedback\n- Exporting font family of text within components may be a limitation in Figma\n- APIs for Figma are live and users are encouraged to provide feedback\n- Figma has a VScode plugin and supports exporting to CSS or SwiftUI\n\nThe most important thing people should know about this post is the discussion and speculation surrounding Figma, a design and prototyping tool. This post highlights the interest and engagement of tech-savvy individuals in Figma's features, upcoming launch, and potential limitations. The release of plugins and support for APIs adds to the excitement and potential usefulness of Figma for software engineers and designers.",
    "hn_summary": "- Figma has introduced Dev Mode to enhance collaboration between designers and developers, with features such as component playground, redlining, and links to GitHub.\n- Some users express frustration with Figma's visual model and maintaining accurate links to design components.\n- Figma's increased focus on developers sets it apart from other design tools and may attract new users, especially with its unique features and improved workflow capabilities."
  },
  {
    "id": 36413296,
    "timestamp": 1687311515,
    "title": "GPT4 is 8 x 220B params = 1.7T params",
    "url": "https://twitter.com/swyx/status/1671272883379908608",
    "hn_url": "http://news.ycombinator.com/item?id=36413296",
    "content": "Thread Readerswyx \ud83e\udd16\ud83e\udd5aSubscribe@swyxJun 20 \u2022 6 tweets \u2022 6 min read Read on TwitterBookmarkSave as PDFThe @latentspacepod is excited to publish:Petaflops to the People:@realGeorgeHotz's first interviewon his new personal compute cluster companythe tiny corp.latent.space/p/geohotWe discuss how tiny is taking on Nvidia, Google, and PyTorch with a tiny team and go deep\u2026 twitter.com/i/web/status/1\u2026Commoditizing the Petaflop \u2014 with George Hotz of the tiny corpListen now (73 min) | Ep. 18: How tiny is taking on Nvidia, Google, and PyTorch, building in public with AMD, hot takes on ggml, Mojo, Elon, e/acc, and GPT-4, and why AI Girlfriend is next. Now on You\u2026https://latent.space/p/geohot@mentionsGPT4 is 8 x 220B params = 1.7 Trillion paramshttps://twitter.com/soumithchintala/status/1671267150101721090?s=20ok I wasn't sure how widely to spread the rumors on GPT-4 but it seems Soumith is also confirming the same so here's the quick clip!so yes, GPT4 is technically 10x the size of GPT3, and all the small\u2026 twitter.com/i/web/status/1\u2026since MoE is So Hot Right Now, GLaM might be the paper to pay attention to. Google already has a 1.2T model with 64 experts, while Microsoft Bing\u2019s modes are different mixes accordinglyhttps://twitter.com/artificialguybr/status/1671273869607305219some sleuthing by AI twitter:apparently OpenAI hired away an author on Routed Language Modelshttps://twitter.com/teortaxesTex/status/1671304991909326848?s=20and 2 on Switch Transformershttps://twitter.com/TheXeophon/status/1671301735074213891(after gpt4 was done)Branch-Merge-Train from @AllenInstitute was also brought up\u2026 twitter.com/i/web/status/1\u2026@mentionsYou: Mom can we have Mixture of ExpertsMom: No we have Mixture of Experts at homeMixture of Experts at home: github.com/smol-ai/menubarhttps://twitter.com/swyx/status/1671431126030888963?s=20GitHub - smol-ai/menubar: a menubar with Zero latency access to ChatGPT/Bard/Claude! A/B test them, or use them in the background. I use this 20 times a day.a menubar with Zero latency access to ChatGPT/Bard/Claude! A/B test them, or use them in the background. I use this 20 times a day. - GitHub - smol-ai/menubar: a menubar with Zero latency access to...https://github.com/smol-ai/menubarHuawei\u2019s 1T PanGu (a seriously cool chinese good, look him up frens) published a nice MoE diagramand @Yampeleg mocked up some demonstrative code that i\u2019d love an expert critique onUnroll available on Thread Readerhttps://twitter.com/Yampeleg/status/1671324281526001664\u2022 \u2022 \u2022Missing some Tweet in this thread? You can try to force a refreshTweetShareEmailKeep Current with swyx \ud83e\udd16\ud83e\udd5aStay in touch and get notified when new unrolls are available from this author!Add to \"My Authors\" Read all threadsThis Thread may be Removed Anytime!Twitter may remove this content at anytime! Save it as PDF for later use!Save this thread as PDFTry unrolling a thread yourself!Follow @ThreadReaderApp to mention us!From a Twitter thread mention us with a keyword \"unroll\"@threadreaderapp unrollPractice here first or read more on our help page!More from @swyxswyx \ud83e\udd16\ud83e\udd5a@swyxJun 7this is a trend I'm calling \"Code is all you need\"Comparing Bard vs @OpenAI ChatGPT vs @AnthropicAI Claude on Google's own reasoning/math prompts shows the stark contrast once you make your model write and eval code to answer questions. Reminds me of @amasad and @goodside's\u2026 twitter.com/i/web/status/1\u2026Read 5 tweetsswyx \ud83e\udd16\ud83e\udd5a@swyxMay 14Stop building the thing.Build the thing that builds all the things.IMO the most important thing every developer could be doing right now on nights and weekends is building a general purpose personal junior dev agent they can control and trust, that they can scale to fleets.\u2026 twitter.com/i/web/status/1\u2026first thing Tony ever built wasn't a flying suit of armor, fancy weapons, or mini fusion reactorhe built the thing that builds the things (and saves his life when the other stuff fails)Read 5 tweetsswyx \ud83e\udd16\ud83e\udd5a@swyxApr 25.@Replit just announced their own LLaMa style code LLM at their developer day!replit-code-v1-3b- 2.7b params- 20 languages- 525B tokens (\u201c20x Chinchilla?\u201d)- beats all open source code models on HumanEval benchmark- trained in 10 days with @NaveenGRao @MosaicMLand follows up with a finetuned version - replit-finetune-v1-3b - using data - and this catapults Replits model *ahead* of codex \ud83e\udd2fthey are matching the performance of >10B LLMs with way smoller 2.7B modelsand it will be open source/freely licensed!Read 4 tweetsswyx \ud83e\udd16\ud83e\udd5a@swyxApr 23I love seeing the birth of a new social network. unsure about its future but its cool that in early days it\u2019s still smol enough you can hold the world \u201cmap\u201d in your head and zoom in to see individual peoplethe internet was a nicer place when it was a neighborhood and not a mobRead 4 tweetsswyx \ud83e\udd16\ud83e\udd5a@swyxApr 19\ud83e\udde0 The Anatomy of Autonomy \ud83e\udd16The fifth killer app of AI is Autonomous Agents.Presenting- Summary of #AutoGPT / @babyAGI_- The 5 stages of \"brain\" development it took to get from Foundation Models to Autonomous Agents- Why Full Autonomy is like \"Full Self Driving\"!Begin:Read 7 tweetsswyx \ud83e\udd16\ud83e\udd5a@swyxApr 19Writing my recap / thoughts on AI Agent mania today for the newsletter.- if you've used @babyAGI_ / @AutoGpt for something interesting: what's a good usecase?- if you're highly skeptical: why?- if you want to see more: elaborate?using chatgpt to rip apart @yoheinakajima's code hahathis feels like cheating. i cant look at any new codebase without this visualization again (cc or maybe already has a smarter take on this)Read 4 tweetsDid Thread Reader help you today?Support us! We are indie developers!This site is made by just two indie developers on a laptop doing marketing, support and development! Read more about the story.Become a Premium Member ($3/month or $30/year) and get exclusive features!Become PremiumDon't want to be a Premium member but still want to support us?Make a small donation by buying us coffee ($5) or help with server cost ($10)Donate via PaypalOr Donate anonymously using crypto!Ethereum0xfe58350B80634f60Fa6Dc149a72b4DFbc17D341E copyBitcoin3ATGMxNzCUFzxpMCHL5sWSt4DVtS8UqXpi copyThank you for your support!Follow Us on Twitter!TweetShareHelp | About | TOS | Privacy | Twitter Files",
    "summary": "- GPT4 is a powerful language model with 1.7 trillion parameters, which is 10 times the size of GPT3.\n- OpenAI has hired authors who worked on Routed Language Models and Switch Transformers, indicating advancements in AI research.\n- The @latentspacepod published an interview with George Hotz, discussing his new personal compute cluster company and how it competes with Nvidia, Google, and PyTorch.",
    "hn_title": "GPT4 is 8 x 220B params = 1.7T params",
    "original_title": "GPT4 is 8 x 220B params = 1.7T params",
    "score": 370,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginGPT4 is 8 x 220B params = 1.7T params (twitter.com/swyx)370 points by georgehill 1 day ago | hide | past | favorite | 202 commentsandreyk 1 day ago | next [\u2013]weird title, note that the tweet said \"so yes, GPT4 is *technically* 10x the size of GPT3, and all the small circle big circle memes from January were actually... in the ballpark?\"It's really 8 models that are 220B, which is not the same as one model that is 1.7T params. There have been 1T+ models via mixtures of experts for a while now.Note also the follow up tweet: \"since MoE is So Hot Right Now, GLaM might be the paper to pay attention to. Google already has a 1.2T model with 64 experts, while Microsoft Bing\u2019s modes are different mixes accordingly\"There is also this linked tweet https://twitter.com/LiamFedus/status/1536791574612303872 - \"They are all related to Switch-Transformers and MoE. Of the 3 people on Twitter, 2 joined OpenAI. Could be related, could be unrelated\"Which links to this tweet: \"Today we're releasing all Switch Transformer models in T5X/JAX, including the 1.6T param Switch-C and the 395B param Switch-XXL models. Pleased to have these open-sourced!\"Anyway... remember not to just read the headlines, they can be misleading.replyignoramous 1 day ago | parent | next [\u2013]More Efficient In-Context Learning with Generalist Language Model (GLaM) on the Google blog (2021): https://archive.is/cuyW0Btw, MoE is one of the 5 other ways Google thinks LLMs can be more efficient: https://archive.is/2XMvhreplydevinprater 20 hours ago | parent | prev | next [\u2013]Oh, is that how Bing's image descriptions work? If you upload an image and ask for a description, it'll give a really good one. But if you ask it where it got it from, it says it got it from another algorithm. So is it using another expert AI to describe, and then feed it into GPT4 for conversion into language?replyalbrewer 19 hours ago | root | parent | next [\u2013]Pretty sure this is how the human brain works. If we add models that can transform information into updates to existing models, then add a model that can process streams of information and determine which models to update with the information (and can also apply that process to itself), we start to approach a primitive brain, no?replybaja_blast 17 hours ago | root | parent | next [\u2013]> Pretty sure this is how the human brain worksHow we thought it works in the 1960's yes.replyInfinity315 14 hours ago | root | parent | next [\u2013]How do we think it works currently?replyswyx 1 day ago | parent | prev | next [\u2013](OP here) - yeah i know, but i also know how AI twitter works so I put both the headline and the caveats. i always hope to elevate the level of discourse by raising the relevant facts to those at my level/a little bit behind me in terms of understanding. think theres always a fine balance between getting deep/technical/precise and getting attention and you have to thread the needle in a way that feels authentic to you to do this \"job\"ultimately my goal is to Learn in Public and demonstrate to experts that spending their time teaching/sharing with me is a good use of time because i will augment/amplify/simplify their message.(pls give the full podcast a listen/read/watch, George went deep on tinygrad/tinybox/tinycorp and there's lots there he IS the authority on, and people are overly fixated on the GPT4 rumor https://www.latent.space/p/geohot#details )replyprimordialsoup 1 day ago | root | parent | next [\u2013]Makes it worse, since you have this understanding and still went with this explanation that it's 1.7 trillion patientsreplymrtranscendence 19 hours ago | root | parent | next [\u2013]1.7 trillion patients? We're going to need more hospital beds ...replybehnamoh 21 hours ago | parent | prev | next [\u2013]For a moment I thought you were Andrej Karapathy!replyirthomasthomas 20 hours ago | parent | prev | next [\u2013]Title should be: \"GPT4 is 220B\"Factual, and surprising to many.replySheinhardtWigCo 1 day ago | prev | next [\u2013]GPT-4 is 1.7T params in the same way that an AMD Ryzen 9 7950X is 72 GHz.replyeyegor 1 day ago | parent | next [\u2013]You might be surprised to learn that dell \"hpc engineers\" (or maybe HPE?) have attempted to sell me hardware using that exact logic to compare servers.replyDaiPlusPlus 23 hours ago | root | parent | next [\u2013]Well, they're not wrong...Given a highly-parallelizable numerics job, and all other things being equal, a 20 core 2.0Ghz machine will run the job in the same time as a 40 core 1.0Ghz machine....though usually we'd just give it in FLOPS - though FLOPS doesn't describe non-float operation performance.Probably just a sales/marketing person who learned a new technical word and wants to sound knowledgable to the customer but it back-fires.replyzarzavat 23 hours ago | root | parent | next [\u2013]At the risk of torturing this analogy beyond recognition, it\u2019s more like having an 8 core CPU but with a weak 150W PSU such that you can only run one core at a time.replySecretDreams 23 hours ago | root | parent | next [\u2013]Analogy sufficiently torturedreplyswyx 18 hours ago | root | parent | prev | next [\u2013]in my understanding with an 8 way MoE youre still running all 8 for every request. only if you\u2019re making a router model then itd be the \u201cweak PSU\u201d analogy. and even then a sufficiently perfect router would essentially have to know enough about its routes to almost simulate them which idk if i can believe worksreplybee_rider 21 hours ago | root | parent | prev | next [\u2013]Is each core specialized to some particular type of task or something like that? Which would make this less silly of an idea.replyFaaak 20 hours ago | root | parent | prev | next [\u2013]Amdahl's law though ...replythfuran 20 hours ago | root | parent | next [\u2013]...doesn't really bite you for embarrassingly parallel numerics work.replycarlhjerpe 1 day ago | root | parent | prev | next [\u2013]VMware still uses ghz for displaying load and compute capacity on your servers.replycochne 19 hours ago | parent | prev | next [\u2013]No, GPT-4 is 1.7T params in the same way that an AMD Ryzen 9 7950X is (24 times X million transistors). It's not wrong to say GPT-4 is 1.7T parameters, your statement is wrong. Parameters can be configured in different ways, just as transistors on a chip can. In the same way that having 24x transistors does not imply 24x performance, having 24x parameters does not imply 24x performance.replyWiSaGaN 1 day ago | parent | prev | next [\u2013]I think frequency is not additive like the parameters. If we are looking for analogy in compute power, then FLOPs is a better analogy to parameters.replyDeukhoofd 1 day ago | root | parent | next [\u2013]I'm fairly certain the point of the gp was that the number of parameters are also not additive.replydragonwriter 17 hours ago | root | parent | next [\u2013]Parameters are the number of weights needed to specify the model given the architecture; they are exactly additive.replyhgsgm 13 hours ago | root | parent | next [\u2013]A tree is not a clique.replyddalex 23 hours ago | root | parent | prev | next [\u2013]if you have a basket with 4 apples and a basket with 3 pears, are you not having 7 fruits ?just because the first selection layer is very thin doesn't mean that the network cannot be considered composablereplynirushiv 21 hours ago | root | parent | next [\u2013]You can\u2019t claim it\u2019s a 7-fruit Basket, unless you find a way to fit them in the same basketreplyswyx 18 hours ago | root | parent | next [\u2013]but you can claim its a 7 fruit grouping of baskets, we\u2019re just in a territory where the fruit count matters less and less nowwhich happens to be consistent with what openai is telling usreplywongarsu 23 hours ago | root | parent | prev | next [\u2013]If you can add FLOPs, and you have a number of cores with the same fixed number of FLOPs/cycle, it follows that you can add their frequency.For the vast majority of real-life workloads there are vast differences between one core having X GHz or Y FLOPs vs lots of cores that sum up to that number. Which is the point GP tried to make.replybluedevilzn 1 day ago | prev | next [\u2013]I wouldn\u2019t trust anything geohot says. He doesn\u2019t have access to any inside information.replymachdiamonds 1 day ago | parent | next [\u2013]https://twitter.com/soumithchintala/status/16712671501017210...It looks like at least one other person has also heard the same information.replyespadrine 1 day ago | root | parent | next [\u2013]To be fair, this was already a common whisper at the time, so it could be a Chinese whisper effect. Even I thought this on release day: https://news.ycombinator.com/item?id=35165874What is weird is how competitive the open-source models are to the closed ones. For instance, PaLM-2 Bison is below multiple 12B models[0], despite it being plausibly much bigger[1]. The gap with GPT-4 is not that big; the best open-source model on the leaderboard beats it 30% of the time.[0]: https://chat.lmsys.org/?leaderboard[1]: https://news.ycombinator.com/item?id=35893357replymachdiamonds 1 day ago | root | parent | next [\u2013]From my perspective, there's a vast divide between open source models and GPT4 at present. The lmsys leaderboard rankings are derived from users independently engaging with the LLMs and opting for the answers they find most appealing. Consequently, the rankings are influenced not only by the type of questions users ask but also by their preference for succinctness in responses. When we venture into the realm of more complex tasks, such as code generation, GPT4 unequivocally outshines all open source models.That said, the advancements in models like Orca and the \"Textbooks are all you need\" paper are noteworthy (https://arxiv.org/pdf/2306.02707.pdf, https://arxiv.org/abs/2306.11644). I'm optimistic about what future smaller models could achieve.replyespadrine 23 hours ago | root | parent | next [\u2013]I agree. Also, ELO rankings can artificially deflate strong performers when having too few binary comparisons. The Guanaco paper points that out, giving instead a 326-point lead to GPT-4 over Guanaco-65B across 10k orderings, based on GPT-4\u2019s opinion, which corresponds to Guanaco winning about 13% of the time. But even that only relies on the Vicuna benchmark set.replymark_l_watson 20 hours ago | root | parent | prev | next [\u2013]There are huge differences. I used OpenAI\u2019s APIs in my last book on LangChain and LlamaIndex, and GPT-3.5 and GPT-4 are good enough right now to support building applications for years (although I look forward to improvements).I am writing a new book Safe For Humans AI in which I am constraining myself to using open models that can be run on a high end PC or a leased GPU server. Yesterday I was exploring what I could do with T5-flan-XXL, and it is useful, but not as effective tool as the closed OpenAI models. I will do the same with Orca this week.replyespadrine 20 hours ago | root | parent | next [\u2013]I think a lot of people see a larger gap between open-source models and GPT-4 than is present because they test out the 7B models which fit on their machine. Models like T5-FLAN-XXL are very far below the quality one can expect from the best in open-source, and barely usable for CoT or tool use.Especially for LangChain, I recommend using \u226533B models like Guanaco or WizardLM. Guanaco-65B honestly feels on-par with ChatGPT-3.5. (To be clear, there is a large gap with GPT-4 though.) It is a costly test, although GPTQ (for instance on exllama) help make it affordable.I haven\u2019t tried Orca since they haven\u2019t released the weights yet, but it doesn\u2019t seem like they have a 33B version.replymark_l_watson 19 hours ago | root | parent | next [\u2013]Thanks for your advice! I am trying to write the book examples using a A6000 (48G video memory), but I may have to go higher end. The hourly lease charge on a A6000 is very inexpensive and I wanted the examples to be \"almost free\" to run. I will see what is required for Guanaco-65B.replybehnamoh 21 hours ago | root | parent | prev | next [\u2013]> The gap with GPT-4 is not that big...Oh it is though. I've tried several OS models and nothing comes even close to GPT-4. Turns out ClosedAI has a moat after all.replynmfisher 6 hours ago | root | parent | next [\u2013]GPT-4 came roughly 12 months after GPT-3.5, and I'd say the competition is roughly approaching 3.5 now, so I'm hoping they will reach GPT-4 level early 2024. Not that far off!Wish there was a bookmark/remind-me function so I could come back in 8 months' time and see how close I was.replyloudmax 20 hours ago | root | parent | prev | next [\u2013]AI development is taking place at breathtaking velocity and GPT-4 isn't the end of the road. OpenAI's moat relies on them improving at a faster pace than competitors. I wouldn't take it for granted that OpenAI's lead will remain the same in a year as it is today. Very possibly they could expand their lead. Also possibly, their lead could vanish.replykarmasimida 15 hours ago | root | parent | next [\u2013]Individual developers\u2019 hardware and data has limit, I don\u2019t see the OS models breaking into 100B models anytime soonreplystartupsfail 1 day ago | root | parent | prev | next [\u2013]It\u2019s funny that this post is trending on HN right next to the post about a paper showing how to build a model 1000x smaller than 1.7T that can code better than LLMs 10x larger.replyTeMPOraL 1 day ago | root | parent | next [\u2013]I don't find it funny, I find it scary and mind-blowing: the impact of these headlines is additive - this one confirms the effectiveness of combining models, and the other one suggests you could cut the model size a couple orders of magnitude if you train on clean enough data. Together, this points at a way to achieve both GPT-4 that fits on your phone, and a much more powerful model that's not larger than GPT-4 is now.replymrtranscendence 19 hours ago | root | parent | next [\u2013]This doesn't seem likely in the near term. An iPhone 13 Pro has 6gb of memory, which might be enough for a single 1.3b parameter model if you purged everything else out of RAM. Combining 8 (or even 4) of them on a single phone won't happen anytime soon at the rate phones improve.Plus, none of the smaller models are really appreciably close to GPT-4 on most metrics. It's not clear to me you could get there at all with 1.3b models. Maybe somebody gets there someday with 65b models, but then you're far out of the reach of phones.replyDylan16807 16 hours ago | root | parent | next [\u2013]Are you assuming 32 bit parameters? You definitely don't need to keep that much. People have been cramming llama into 3-4 bits. You wouldn't want 8x1.3b but it should fit.Also Apple has never gone for high RAM in mobile devices. I could go get 12GB in a brand new phone for $400, and some high end phones have had 16GB since 2020.So combined, you could do normal app stuff with 2.5GB and 20-25b 3-bit inference with the other 9.5GB.replycandiodari 23 hours ago | root | parent | prev | next [\u2013]If it truly is the training data that's making models smart, then that would explain that there is both a minimum and maximum \"useful\" size to LLMs. The recent stream of papers seems to indicate that the cleaner the input data, the less size is required.That would negate, at least partially, the \"we have 20 datacenters\" advantage.replystartupsfail 17 hours ago | root | parent | next [\u2013]I think it is. I also think this is what OpenAI did. They\u2019ve carefully crafted the data.I don\u2019t think they have an ensemble of 8 models. First, this is not elegant. Second, I don\u2019t see how this could be compatible with the streaming output.I\u2019d guess that GPT4 is around 200B parameters, and it\u2019s trained on a dataset made with love, that goes from Lorem Ipsum to a doctorate degree. Love is all you need ;)replyChatGTP 21 hours ago | root | parent | prev | next [\u2013]Is it a large language model anymore ? Something doesn\u2019t quite add up?replyTeMPOraL 20 hours ago | root | parent | next [\u2013]It's still large. But it might no longer need to be \"only few entities on the planet can afford to make one, and not at the same time, since NVIDIA can pump out GPUs only so fast\" large.replymanojlds 1 day ago | root | parent | prev | next [\u2013]And from Bing - https://twitter.com/MParakhin/status/1670666605427298304replythrowaway9274 1 day ago | root | parent | prev | next [\u2013]2x0=0replysimondotau 1 day ago | parent | prev | next [\u2013]It\u2019s fine to say you don\u2019t believe him, it\u2019s fine to say he\u2019s wrong, but if you want to claim he doesn\u2019t have inside information, I would expect a standard of evidence as good as that you would expect for Geohot\u2019s claim.So tell me: how do you know the Geohot doesn\u2019t have inside information?replyrat9988 1 day ago | root | parent | next [\u2013]It's up to Geohot to prove his claim. Althoug he may have insider information, he isn't in a position known to have inside information. It might be more correct to phrase it that way but we all got the meaning.replylohnjemon 1 day ago | root | parent | next [\u2013]That's not how it works out in practice. For example, journalists who have insider info from sources and leak it on the regular don't do anything to prove they have insider information, they build up reputation based on how many predictions they make.There's no point in outing your sources, that's how you lose them.replyrat9988 1 day ago | root | parent | next [\u2013]Until reputation is built you aren't trusted. It seems geohot's reputation still doesn't convince everyone.replydanpalmer 23 hours ago | root | parent | next [\u2013]He has a reputation but it's for being untrustworthy.replymanojlds 1 day ago | root | parent | prev | next [\u2013]Prove a negative you mean?replysimondotau 1 day ago | root | parent | next [\u2013]It's up to anyone making a claim, if they want people who aren't yet convinced to become convinced, to provide some supporting evidence. This basic rule of discourse applies whether one makes a positive claim or a negative claim.Bluedevilzn made a negative claim, so naturally I'm asking if they can prove their negative.replymach1ne 1 day ago | parent | prev | next [\u2013]That's luckily not relevant here. Multiple sources have independently confirmed the same rumors. This means that there is a significant probability of it being true.replycuriousgal 1 day ago | root | parent | next [\u2013]What exactly is \"it\"? What is being discussed here? The size of the model? Who cares? People will make the same API call to get the results. Everyone is acting like a glorified AI expert now smhreplyHarHarVeryFunny 23 hours ago | root | parent | next [\u2013]The rumor here is that GPT-4 isn't one giant model, but instead a \"mixture of experts\" combination of 8 smaller GPT-3 sized models with different training sets.This has implications for what may be possible on consumer hardware.replyvalianteffort 1 day ago | parent | prev | next [\u2013]He doesn't strike me as the type of person to lie (except when trolling). His reputation is solid enough that I'm sure he's had discussions with people in the space.replylannisterstark 1 day ago | root | parent | next [\u2013]>his reputation is solidEh, is it? Not sure if I consider him an authority on anything anymore.https://www.reddit.com/r/ProgrammerHumor/comments/z2y8i0/fro...>This is the interview. Build this feature. You don't get source access. Link the GitHub and license it MIT.is akin to \"Build this for free, license it MIT so I can use it without any issues, and oh, btw, I dont have authority to hire you, teehee.\"replymatteocontrini 23 hours ago | root | parent | next [\u2013]I remember watching a live stream [1] of him going through Twitter engineering articles and trying to reverse engineer the Twitter frontend and backend, and he clearly had absolutely no clue of how anything remotely related to the web works.He was just clicking around compulsively, jumping between stuff randomly without even reading it, while not understanding what he was looking at. I have no idea how he's successful in tech, judging from what I saw there.[1] https://youtu.be/z6xslDMimMEreplyjoe-user 20 hours ago | root | parent | next [\u2013]> I have no idea how he's successful in tech, judging from what I saw there.I think judging only from what you saw there is the issue. If you look somewhere like Wikipedia [0], you'll see he was the first person to jailbreak the iPhone, the first person to achieve hypervisor access to the PS3's CPU, he took first place in several notable CTFs (at least one time as a one-person team), he worked on Google's Project Zero team (and created a debugger called QIRA while he was there), creating comma.ai, and the list goes on.[0]: https://en.wikipedia.org/wiki/George_Hotzreplyhgsgm 13 hours ago | root | parent | next [\u2013]He's good at breaking APIs. That's different skill from making APIs and things.replyjimmySixDOF 1 day ago | root | parent | prev | next [\u2013]Well he picked the right problem at the time which was (and still is!) search. I was really looking forward to some progress on this and then he deleted tweets and dropped off the system. I would love to see a podcast of him talking about that & fyi @realGeorgeHotz is back on it now to promote Tiny grad/box/corp.replythreeseed 1 day ago | root | parent | next [\u2013]As someone who has spent 20+ years working in large companies you can spot developers like him a mile away i.e. the sort of behaviour you see with skilled but arrogant grads/interns.The right approach when you're new is to quietly pick a simple problem away from the core services where you can learn the processes and polices needed to get something into Production. More so when you're in a company that is undergoing a brain drain.Then you can progressively move to solving more demanding and critical issues.replypseg134 22 hours ago | root | parent | next [\u2013]You should write a book or a blog about how to not rock the boat at large companies. Maybe you can call it Going Nowhere Fast.replybarrkel 21 hours ago | root | parent | next [\u2013]Large companies normally (unlike Twitter) have achieved strong product market fit and are all about tweaks that deliver marginal revenue. Given that they already have a big slice of the market, the multiplier on marginal revenue makes what you're doing worthwhile.\"Rocking the boat\" is more likely than not to make things worse.replythreeseed 21 hours ago | root | parent | prev | next [\u2013]You don't need a book about it when it's a concept children understand.Before you run you learn to walk.replypseg134 17 hours ago | root | parent | next [\u2013]Some people were just born to run. Their legs don\u2019t really work right for walking.replyec109685 1 day ago | root | parent | prev | next [\u2013]This wasn\u2019t very impressive: https://www.pcmag.com/news/hacker-george-hotz-resigns-from-t...Spent two weeks trying to find someone to build a faceted search UI and then quit.replynl 1 day ago | root | parent | next [\u2013]I think deciding to get away from the Musk/Twitter debacle as soon as you realize how bad it is isn't necessarily a bad thing..replybboygravity 1 day ago | root | parent | next [\u2013]How is it a debacle and how is it bad?replythreeseed 1 day ago | root | parent | next [\u2013]Because Twitter is trending towards bankruptcy.a) It is valued at about a 1/4 of what it was purchased at.b) Twitter Blue has generated an irrelevant amount of revenue and churn is increasing [1].c) Roadmap looks poor. Video is a terrible direction where only Google, Amazon, TikTok etc have been able to make the numbers work and that's because it is subsidised through other revenue sources. Payments is DOA given Twitter's inability to comply with existing regulations let alone how difficult KYC/AML is to manage.d) Regulatory and legal risk increases by the day. Lawsuits continue to pile up and EU/FTC are hovering around as Twitter is not in compliance with previous agreements.e) Brand safety continues to be a huge challenge that isn't solvable without effectively going back to what Twitter was previously.f) BlueSky and Instagram are both releasing competitor apps to the broader public in the coming months. The market simply won't sustain this many text-based social media apps.[1] https://github.com/travisbrown/bluereplysimondotau 1 day ago | root | parent | next [\u2013]a) Meta had similar swings of over 3x between a 2021 high and a 2022 low. We can only guess what Twitter would be worth today if the stock was floated, but it isn\u2019t. Substituting market valuations with our personal beliefs isn\u2019t interesting.b) Every social media company has a well populated graveyard of failed experiments behind them.c) Opinion.d) Business as usual for every social media company since the dawn of time.e) Opinion. And advertiser behaviour suggests otherwise.f) History is littered with new entrants which fail to unseat the incumbent. It does happen, but it\u2019s statistically rare.replyFreedom2 1 day ago | root | parent | next [\u2013]a - f) Opinion.replysimondotau 23 hours ago | root | parent | next [\u2013]Precisely. It\u2019s all opinion.replythreeseed 22 hours ago | root | parent | next [\u2013]Except for data points like Twitter Blue subscribers, number of active lawsuits, failed video startups etc.As well as comments from Musk himself about the decline in the value of Twitter and from advertisers themselves about the challenges around brand safety.replyaltcognito 22 hours ago | root | parent | prev | next [\u2013]g) bot account traffic has gone through the roof after constraints were removed. Follows from random bots occur multiple times a day on accounts with a couple dozen followersh) the tweets served are no longer weighted towards followers but instead whoever paid for blue checksi) accounting on views is entirely wrong with a tweet registering a billion viewsreplydmpk2k 1 day ago | root | parent | prev | next [\u2013]Twitter was trending towards bankruptcy anyway.At best it has sped up towards that destination, at worst changes will eventually avoid it.replyvalianteffort 1 day ago | root | parent | prev | next [\u2013]His biggest issue was trying to convince the remaining engineers and Elon that a refactor was more promising than continuing to build on the layers of spaghetti code that runs twitter.I don't disagree with him, it's just clear that he didn't understand how dire the financial situation was and that even a progressive refactor starting with the most basic features would take considerable engineering hours and money.replyhedora 1 day ago | root | parent | next [\u2013]As the saying goes, if you don\u2019t have time to do it right, you\u2019d better have time to do it twice.replyzoklet-enjoyer 1 day ago | root | parent | prev | next [\u2013]He's a crypto scammer. Look up cheap ethreplyvalianteffort 1 day ago | root | parent | next [\u2013]I mean that was marketed as a memecoin from the beginning. More so than doge even.replypixelpoet 1 day ago | root | parent | next [\u2013]He added some code to give himself tons of it and didn't report it to anyone, dismissed it as a joke or something when it was found and then disappeared after hyping the project. Sound familiar?To me he joins the ranks of the most basic shady crypto types.replyimtringued 17 hours ago | root | parent | next [\u2013]You mean he has become Elon Musk?replyeightysixfour 1 day ago | prev | next [\u2013]I find it interesting that geohot says it is what you do \u201cwhen you are out of ideas,\u201d I can\u2019t help but think that having multiple blended models is what makes GPT-4 seem like it has more \u201cemergent\u201d behavior than earlier models.replyjerpint 1 day ago | parent | next [\u2013]OpenAI has always stuck to \u201csimpler\u201d approaches that scale. It\u2019s the best bet to make and it\u2019s paid off time and time again for them. I don\u2019t think it\u2019s so much \u201cthey\u2019re out of ideas\u201d, it\u2019s just an idea that scales wellreplyH8crilA 22 hours ago | root | parent | next [\u2013]Yeah, and who says that this is all that they're currently working on? They likely found this to work better, launched, and did other things in the meantime.replyesperent 1 day ago | prev | next [\u2013]So if this is true - which is a big if since this looks like speculation rather than real information - could this work with even smaller models?For example, what about 20 x 65B = 1.3T params? Or 100 x 13B = 1.3T params?Hell, what about 5000 x 13B params? Thousands of small highly specialized models, with maybe one small \"categorization\" model as the first pass?replyjanalsncm 1 day ago | parent | next [\u2013]Well at the end of the day you\u2019ll also need a model for ranking the candidates, which becomes harder as the number of candidates grows. And the mean quality of any one candidate response will drop as the model size decreases, as will the max quality.replycypress66 1 day ago | parent | prev | next [\u2013]https://arxiv.org/abs/2112.06905replyandy_xor_andrew 1 day ago | prev | next [\u2013]Are the models specifically trained to be experts in certain domains?Or the models are all trained on the same corpus, but just queried with different parameters?Is this functionally the same as beam search?Do they select the best output on a token-by-token basis, or do they let each model stream to completion and then pick the best final output?replyradq 1 day ago | parent | next [\u2013]If it's similar to the switch transformer architecture [1], which I suspect it is, then the models are all trained on the same corpus and the routing model learns automatically which experts to route to.It's orthogonal to beam search - the benefit of the architecture is that it allows sparse inference.[1] https://arxiv.org/pdf/2101.03961.pdfreplymrfinn 22 hours ago | root | parent | next [\u2013]So in layman's terms does this mean that on top of big base of knowledge (?) they trained 8 different 220B models and each model specialized in different areas, in practice like an 8 units \"brain\"? PS. Thinking now how human brain does something similar as our brain is split in two parts and each one specialize in different tasks.replyradq 21 hours ago | root | parent | next [\u2013]Yeah, that's pretty close. It might be more precise to say they trained one big model that includes 8 \"expert networks\" and a mechanism to route between them, since everything is trained together.There isn't a lot of public interpretability work on mixture-of-expert transformer models, but I'd suspect the way they specialize in tasks is going to be pretty alien to us. I would be surprised if we find that one of the expert networks is used for math, another for programming, another for poetry etc. It's more likely we'll see a lot of overlap between the networks going off of Anthropic's work on superposition [1], but who really knows?[1] https://transformer-circuits.pub/2022/toy_model/index.htmlreplymrfinn 20 hours ago | root | parent | next [\u2013]Thank you for the explanation, I still have a hard time understanding how transformers work so amazingly well and tech is already quite a few steps over that idea.replyradq 2 hours ago | root | parent | next [\u2013]Andrej Karpathy's \"zero to hero\" series [1] was how I learned the fundamentals of this stuff. It's especially useful because he explains the why and provides intuitive explanations instead of just talking about the what and how. Would recommend it if you haven't checked it out already.[1] https://www.youtube.com/watch?v=VMj-3S1tku0&list=PLAqhIrjkxb...replylondons_explore 21 hours ago | root | parent | prev | next [\u2013]They probably trained all 8 experts on the same data. The experts may have become good at different topics, but no human divided up the topics.The output isn't just the best of the 8 experts - it is a blend of the opinions of the experts. Another (usually smaller) neural net decides how to blend together the outputs of the networks, probably on a per-token basis (ie. for each individual word (ie. token), the outputs of all the experts is consulted, and then blended together, and a word picked (sampled), before moving onto the next word)replymrfinn 20 hours ago | root | parent | next [\u2013]I guess that neural network has to have the capability of identifying the subject and know in every moment which network is the most capable for that subject, otherwise I can't understand how it could possibly evaluate which is the best answer.replylondons_explore 20 hours ago | root | parent | next [\u2013]Results of this sort of system frequently look almost random to human eyes. For example one expert might be the \"capital letter expert\", doing a really good job of putting capital letters in the right place in the output.replypizza 1 day ago | parent | prev | next [\u2013]Democracy of descendant models that have been trained separately by partitioning the identified clusters with strong capabilities from an ancestor model, so, in effect, they are modular, and can be learned to be combined competitively.replydeely3 1 day ago | root | parent | next [\u2013]Heh. I understand all these words separately. Btw, to which of the question of parent comment this is an answer?replyomeze 16 hours ago | root | parent | next [\u2013]Ancestor model = pre-trained model that used a large diverse corpusDescendant models = models fine tuned from an ancestor on one particular domain, e.g. by partitioning your training data by subject or sourceDemocracy = some weighted mix of the descendant models is used to find the next tokenreplyit_citizen 1 day ago | prev | next [\u2013]\u00ab We can\u2019t really make models bigger than 220B parameters \u00bbCan someone explains why?replyslimesli 1 day ago | parent | next [\u2013]Because of memory bandwidth. H100 has 3350gB/s of bandwidth, more gpus will give you more memory but not bandwidth. If you load 175b parameters in 8bit then you can get theoretically 3350/175=19 tokens/second. In MoE you need to process only one expert at a time so sparse 8x220b model would be only slightly slower than dense 220b model.replyfancyfredbot 1 day ago | root | parent | next [\u2013]Okay, memory bandwidth certainly matters, but 19 tokens a second is not some fundamental lower limit on the speed of a language model and so this doesn't really explain why the limit would be 220b rather than say 440b or 800b?replyslimesli 23 hours ago | root | parent | next [\u2013]It's not a fundamental limit. Google palm had 540B parameters as dense model. But it's a practical limit because models with over 1T would be extremely slow even on newest gpus. Even now, OpenAI has limit of 25 messages. You can read more here: https://bounded-regret.ghost.io/how-fast-can-we-perform-a-fo...replyfancyfredbot 20 hours ago | root | parent | next [\u2013]I'm not trying to say memory bandwidth isn't a bottleneck for very large models. I'm wondering why he picked 220b which is weirdly specific. (To be honest although I completely agree the costs would be very high, I think there are people who would pay for and wait for answers at seconds or even minutes per token if they were good enough, so not completely sure I even agree it's a practical limit)replysp332 1 day ago | parent | prev | next [\u2013]It doesn't fit in VRAM.replyhesdeadjim 1 day ago | root | parent | next [\u2013]I\u2019ve been a bit surprised that Nvidia hasn\u2019t gone to extreme lengths to fit 1tb of memory on a card just for this reason.replyChamix 1 day ago | root | parent | next [\u2013]The issue, as pointed above, is primarily bandwidth (at inference), not addressable memory. Put simply, the best bandwidth stack we currently have is on-package HBM -> NVLink, -> Mellanox InfiniBand, and for inference speed you really can't leave the NVLink bandwidth (read, 8x DGX pod) for >100b parameters. And stacking HBM dies is much harder (read, expensive) than GDDR dies which is harder than DDR etc.Cost aside, HMB dies themselves aren't getting significantly denser anytime soon, and there just simply isn't enough package space with current manufacturing methods to pack a significantly increased number of dies on the gpu.So I suspect the major hardware jumps will continue to be with NVLink/NVSwitch. Nvlink 4 + NVSwitch 3 actually already allows for up 256x GPUs https://resources.nvidia.com/en-us-grace-cpu/nvidia-grace-ho... ; increased numbers of links will let ever increasing numbers of GPUs pool with sufficient bandwidth for inference on larger models.As already mentioned, see this HN post about the GH200 https://news.ycombinator.com/item?id=36133226, which has some further discussion about the cutting edge of bandwidth for Nvidia DGX and Google TPU pods.replyandrewstuart2 1 day ago | root | parent | prev | next [\u2013]https://nvidianews.nvidia.com/news/nvidia-announces-dgx-gh20...I think they _are_ going pretty extreme now.replysamplatt 1 day ago | root | parent | next [\u2013]Offtopic, but as a VR gamer that article just made me very sad. I was really hoping to see NVidia produce some decent cards in the near future, but looks like their main revenue is really going to be gargantuan number-crunchers. They'll likely only keep increasing the VRAM of gaming cards by arbitrarily-small numbers once every few years :-(replyTepix 1 day ago | root | parent | next [\u2013]Gaming seems a lot less important than AI, in particular the graphical fidelity. Even games with crappy graphics can be fun. Crappy AI, not so much.replyspeedgoose 1 day ago | root | parent | prev | next [\u2013]Yes, the future of VR gaming looks closer to the Sony Playstation or even the Apple Vision than NVIDIA's products.replyramraj07 1 day ago | prev | next [\u2013]If it\u2019s trivial then why does every other competitor suck at replicating it? Is it possible this is just a case of sour grapes that this intellectual is annoyed they\u2019re not at the driving wheel of the coolest thing anymore?replytypon 1 day ago | parent | next [\u2013]I don't think he thinks its trivial - just that its not some revolutionary new architecture. It's an immense engineering effort rather than a fundamental breakthrough.replyMuffinFlavored 1 day ago | prev | next [\u2013]> GPT-4: 8 x 220B experts trained with different data/task distributions and 16-iter inference.There was a post on HackerNews the other day about a 13B open source model.Any 220B open source models? Why or why not?I wonder what the 8 categories were. I wonder what goes into identifying tokens and then trying to guess which category/model you should look up. What if tokens go between two models, how do the models route between each other?replyTepix 1 day ago | parent | next [\u2013]220B open source models wouldn't be as useful for most users.You need two RTX 3090 24GB cards already to run inference with a 65B model that is 4bit quantized. Going beyond that (already expensive) hardware is out of reach for the average hobbyist developer.replylogicchains 20 hours ago | root | parent | next [\u2013]You could run it quantized to 4 bits on CPU with 256GB ram, which is much cheaper to rent/buy. Sure it might be somewhat slow, but for lots of use cases that doesn't matter.replysymbolicAGI 19 hours ago | root | parent | next [\u2013]Benchmarks I've run with a Ryzen 7950x, 128 GB RAM with Nvidia GeForce 3060 12 GB VRAM show a slowdown less than half when not using the GPU, with LLama.cpp as the inference platform and various ggml open source models in the 7B-13B parameter range.The Ryzen does best with 16 threads, not the 32 it is capable of, which is expected due to it having 16 CPU cores.replywoodson 18 hours ago | parent | prev | next [\u2013]Google open-sourced (Apache 2.0) the Switch Transformers C-2048 model (1.6T parameters for 3.1 TB): https://huggingface.co/google/switch-c-2048replyjerpint 1 day ago | parent | prev | next [\u2013]I think it\u2019s just an ensemble of models, so you do some kind of pooling/majority vote on your output tokensreplyheliophobicdude 1 day ago | root | parent | next [\u2013]Would this be before or after inference? Is there some sort of a delegation based on the matter?replycfn 1 day ago | root | parent | next [\u2013]If it is output tokens then it is after the inference.replyswyx 1 day ago | parent | prev | next [\u2013]same. i wish i had asked george instead of nodding along like an idiot. he probably wouldnt know but at least he\u2019d speculate in interesting ways.replyfancyfredbot 16 hours ago | root | parent | next [\u2013]It was a great interview, thank you.replyLarsDu88 1 day ago | prev | next [\u2013]That's on the order of 25 4090 GPUs to run inference. Not a crazy number by any means. We will see consumer robots running that by the end of the decade, mark my words.replylondons_explore 21 hours ago | parent | next [\u2013]Language models have tiny inputs (words), and tiny outputs (words), and no tight latency requirements (inference takes seconds). That makes them perfect for running where compute is cheap (ie. next to a hydrothermal plant in iceland) and querying them over the internet.replyjerrygenser 23 hours ago | parent | prev | next [\u2013]It's a lot of electricity to power it and heat that gets generated... and electricity to cool it from the heatreplyhardware2win 21 hours ago | root | parent | next [\u2013]25 GPUs? A lot of electricity?replyswyx 18 hours ago | parent | prev | next [\u2013]can you explain the math of how you got to 25 gpus? everyone seems to know these conversions and idk if i missed the memo or somethingreplycoolspot 16 hours ago | root | parent | next [\u2013]220 Bp * 8 = 1760 Bp1760 Bp takes ~ 1760 Gb of (V)RAM when 8-bit quantized. Plus you will need some memory for state. So you will need at least 1760/24=74 consumer-grade GPUs (3090/4090) or 1760/80=22 professional-grade GPUs (A100/H100).replyLarsDu88 10 hours ago | root | parent | next [\u2013]I was incorrectly calculating based on 1 weight == 1 transistor which is totally wrong. This figure that you provided is more accurate.We can see that today, the MI300X can already run inference for some open source LLMs: https://www.youtube.com/watch?v=rYVPDQfRcL0There are almost certainly algorithmic optimizations still available. LLM-scale computing inside of consumer robots should be achievable by the end of the decade. In fact electric cars are probably the best \"housing\" for this sort of hardware.replyswyx 16 hours ago | root | parent | prev | next [\u2013]thank you for this! 1Bp ~ 1Gb VRAM 8bit is a very nice equivalence to hold in my head.replyjsjohnst 12 hours ago | root | parent | next [\u2013]If parameters are 8 bit (aka a byte), one billion parameters is roughly 1 billion bytes, aka 1 gigabyte. ;)replyswyx 10 hours ago | root | parent | next [\u2013]doh. of coursereplysva_ 18 hours ago | parent | prev | next [\u2013]It is my understanding that Nvidia has castrated these cards by removing NVLink?replyswyx 1 day ago | parent | prev | next [\u2013]i believe that's George's goal with tinyboxreplyChatGTP 21 hours ago | parent | prev | next [\u2013]How are. 254090 GPUs supposed to run inside a robot ?replyfnands 21 hours ago | root | parent | next [\u2013]They mean 25 x RTX 4090 GPUs. 4090 is a model numberreplymrtranscendence 18 hours ago | root | parent | next [\u2013]I think the question stands. You can't fit 25 4090s in a robot (unless we're talking about something massive with an equally massive battery), and even if you could an LLM wouldn't be appropriate for driving a robot.Given the pace of improvements I don't see how you compress 25 4090s into a single GPU in 7 years. A 4090 isn't 25 times the power of a GTX 980, it's closer to maybe three times.replyLarsDu88 10 hours ago | root | parent | next [\u2013]Teslas are already consumer items that rock massive batteries.My 25 count is off. It's probably closer to 75 GPUs right now.Let's say today's models are running vanilla transformers via pytorch without any of Deepmind's Flamingo QKV optimizations. In 10 years algorithmic optimizations, and ML platform improvements push that efficiency up 3-5 fold. We're down in the ballpark of 25 GPUs (again)Now, we ditch the general purpose GPUs entirely and go for specially built AI inference chip. The year is 2033 and specialty inference chips are better and more widespread. Jettison those ray tracing cores, and computer rendering stuff. Another 3x improvement and we're at ~8 GPUsNow you said the 4090 is about 3.5x faster than the 780 from a decade ago. We are now on the order of 2 chips to run inference.These models won't just be running in Teslas, they will be running in agricultural vehicles, military vehicles, and eventually robot baristas.replymachiaweliczny 11 hours ago | root | parent | prev | next [\u2013]Light or quantum could possibly deliver by that timereplyLarsDu88 10 hours ago | root | parent | next [\u2013]Neither of these are likely nor necessary to deliver the necessary results.replyjasonjmcghee 19 hours ago | root | parent | prev | next [\u2013]And to give a bit more context, it's one of the top consumer grade cards available (and has 24GB of RAM). It costs on the order of $1.6k instead of $15-25k of H100.replyjiggawatts 12 hours ago | root | parent | next [\u2013]That just goes to show how huge the markup is on those H100 cards! Ten 4090 cards have more compute and more memory (240GB!) than a H100 card. The cost of the 4090s is the same or lower for about 4x the compute.replylyu07282 1 day ago | prev | next [\u2013]full podcast here: https://www.latent.space/p/geohotreplyswyx 1 day ago | parent | next [\u2013]thanks :) posted it on HN but got no traction, definitely underperformed my expectations. my only explanation is i think i screwed up the title :/i somewhat knew that people were going to obsess over the gpt4 tidbit, but hey ultimately George is just relaying secondhand info, and I wish more people focused on the tinycorp/tinybox/tinygrad story. I'm going to try again tomorrow to tell the story better.replygeneralizations 18 hours ago | prev | next [\u2013]Reminds me of this: https://en.wikipedia.org/wiki/Society_of_Mind> In his book of the same name, Minsky constructs a model of human intelligence step by step, built up from the interactions of simple parts called agents, which are themselves mindless. He describes the postulated interactions as constituting a \"society of mind\", hence the title.replychriskanan 18 hours ago | prev | next [\u2013]This seems pretty consistent with what Sam Altman has said in past interviews regarding the end of continuously increasing scale and having multiple smaller specialist models: https://finance.yahoo.com/news/openai-sam-altman-says-giant-...replyjanalsncm 1 day ago | prev | next [\u2013]At a minimum he glossed over the multimodal capabilities of GPT-4. If they use the same set of tokens, it\u2019s unclear how this doesn\u2019t pollute text training data. If they use separate tokens, the model size should be bigger.replychriskanan 18 hours ago | parent | next [\u2013]This is the same strategy used by Palm-E and Mini-GPT4. They have a projection layer that transforms the vision embeddings into the token embedding space.replyShamelessC 1 day ago | parent | prev | next [\u2013]I assume they just intersperse and/or use a special <IMAGE> token to prime the models appropriately. This has been done before by others training on e.g. HTML with <img> tags replaced with image tokens from a vision model.replydonkeyboy 22 hours ago | prev | next [\u2013]I think this could be fake. He says it\u2019s an MoE model, but then explains that it\u2019s actually a blended ensemble. Anyone else have thoughts on that?replyjiggywiggy 1 day ago | prev | next [\u2013]I often hear the idea of digital is faster then biology. This seems mostly derived from small math computations.Yet it seems the current form of large language computations is much much slower then our biology. Making it even larger will be necessary to come closer to human levels but the speed?If this is the path to GI, the computational levels need to be very High and very centralized.Are there ways to improve this in its current implementation other the cache & more hardware?replywongarsu 22 hours ago | parent | next [\u2013]OpenAIs modus operandi is basically \"does it get better if we make it bigger\". Of course they are constrained by economical factors like the cost of training and inference, but if they have the choice between making the model better or more efficient they choose the better model.I believe over the next years (and decades) we will figure out that a lot of this can be done much more efficiently.Another problem with the analogy to humans if obviously that these models know much more than any one human can remember. They are trained on our best approximation of the total sum of human knowledge. So the comparison to any one human will always be fraught with problems.replysmif 23 hours ago | parent | prev | next [\u2013]This is probably not the path to GI. First we would need a precise scientific formalism to accurately describe intelligence, which currently does not exist. Second, it may or may not end up being tied to consciousness, and there's a thing called the hard problem of consciousness, that possibly might not be solvable.It might end up being the kind of thing where if you want to accurately model consciousness, you would need a computer the size of the universe, and it's gotta run for like 13.8 billion years or so, but that's just my own pure speculation - I don't think anybody even has a clue on where to start tackling this problem.This is not to discourage progress in the field. I'm personally very curious to see where all this will lead. However, if I had to place a bet, it wouldn't be on GI coming any time soon.replyblharr 19 hours ago | root | parent | next [\u2013]To accurately model consciousness it seems like we'd only need a computer the size of our brains, we'd just need to be as efficient as it.replysmif 14 hours ago | root | parent | next [\u2013]Seems like it, doesn't it? I'd be curious to see if and how we can get there. What I was highlighting are some serious challenges along the way that might end up leading us to insights about why it might be harder than we think, or why there may be factors that we aren't considering.It's very easy to say \"brain is made of fundamental particles and forces, all we have to do is create a similar configuration or a model of them,\" but it's precisely in the task of understanding the higher order patterns of those fundamental particles and forces where we seem to run into some serious challenges that as of yet remain unaddressed.The AI/ML way of approaching this is more of a top-down approach, where we just sort of ignore the fact that we don't understand how our own brains/minds work and just try to build something kind of like it in the folksy sense. I'm not discouraging that approach, but I'm very curious to see where it will lead us.replyyreg 1 day ago | parent | prev | next [\u2013]For all we know these models should be compressible to much smaller sizes.replyGeee 17 hours ago | parent | prev | next [\u2013]What do you mean? ChatGPT/GPT4 is way faster than a human in every task.replyrefulgentis 20 hours ago | prev | next [\u2013]We're sourcing off Geohot? Yikes.replyletitgo12345 1 day ago | prev | next [\u2013]What's 16 iter inference?replycoolspot 13 hours ago | parent | next [\u2013]16 iterations of inference. Like each of 8 models is processed 2 times.replybigyikes 21 hours ago | prev | next [\u2013]I like how geohot takes these concepts that seem impossibly complex to an outsider (mixture of models, multi modality) and discusses them so casually that they seem accessible to anyone. The flippancy is refreshing.replyrefulgentis 20 hours ago | parent | next [\u2013]There's another layer to that sort of...erasure. You'll see it in a few years.replyjerpint 1 day ago | prev | next [\u2013]I really wonder if it is the case that the image processing is simply more tokens appended to the sequence. Would make the most sense from an architecture perspective, training must be a whole other ballgame of alchemy thoughreplybenob 1 day ago | parent | next [\u2013]Probably. Check the kosmos-1 paper from Microsoft that appeared a few days before GPT4 was released: https://arxiv.org/abs/2302.14045replyHavoc 1 day ago | prev | next [\u2013]Interesting. And makes sense. Eg I could see one of the eight being very close focussed and trained on GitHub like data. Could help it stay on tasks tooreplyswyx 1 day ago | parent | next [\u2013]i'd love any and all informed speculation on what the 8 models could be. it seems fascinating that we don't know.replyreportgunner 1 day ago | prev | next [\u2013]Sad that there is a grammar error lining the top of the video.replyswyx 1 day ago | parent | next [\u2013]literally unwatchablereplysylware 1 day ago | prev [\u2013]Is this still orders of magnitude smaller than a human brain?How many? Based on current human neurons/synapses knowledge?replybirriel 1 day ago | parent | next [\u2013]2 orders of magnitude smaller, assuming 100T synaptic connections in the human brain.replybaq 1 day ago | root | parent | next [\u2013]And how big is the memory and language part\u2026?replyjimmySixDOF 1 day ago | root | parent | prev | next [\u2013]In the podcast they talk about 20 Peta FLOPS as the human brain equivalent for measuring comparison.replyada1981 1 day ago | root | parent | prev | next [\u2013]It\u2019s remarkable.I\u2019m curious how long until people are just using training brains in a jar to compute.replyquickthrower2 1 day ago | root | parent | next [\u2013]They already are, for the hyperhyperparameter choices.replymlashcorp 1 day ago | root | parent | next [\u2013]Well, not in a jar ... Right?replyquickthrower2 1 day ago | root | parent | next [\u2013]Open plan noisy offices are almost that.replyzxcnmbzxcmb 1 day ago | root | parent | prev | next [\u2013]How would you know that you're not in a jar? :-)replyelzbardico 21 hours ago | root | parent | prev | next [\u2013]Not yet, but in our last call we assured our stakeholders that we are very close to that.replylight_hue_1 1 day ago | parent | prev | next [\u2013]We have no idea how to estimate the computational capacity of the brain at the moment. We can make silly estimates like saying that 1 human neuron is equivalent to something in an artificial network. But this is definitely wrong, biological neurons are far more complex than this.The big problem is that we don't understand the locus of computation in the brain. What is the thing performing the meaningful unit of computation in a neuron? And what is a neuron really equivalent to?The ranges are massive.Some people say that computation is some high level property of the neuron as a whole, so they think each neuron is equivalent to just a few logic gates. These people would say that the brain has a capacity of about 1 petaFLOP/s. https://lips.cs.princeton.edu/what-is-the-computational-capa...Then there are people who think every Na, K, and Ca ion channel performs meaningful computation. They would say the brain has a capacity of 1 zettaFLOP/s. https://arxiv.org/pdf/2009.10615.pdfThen there are computational researchers who just want to approximate what a neuron does. Their results say that neurons are more like whole 4-8 layer artificial networks. This would place the brain well somewhere in the yottaFLOP/s range https://www.quantamagazine.org/how-computationally-complex-i...And we're learning more about how complex neurons are all the time. No one thinks the picture above is accurate in any way.Then there are the extremists who think that there is something non-classical about our brains. That neurons individually or areas of the brain as a whole exploit some form of quantum computation. If they're right, we're not even remotely on the trajectory to matching brains, and very likely nothing we're doing today will ever pay off in that sense. Almost no one believes them.Let's say the brain is in the zettaFLOP/s range. That's 10^21 FLOP/s. Training GPT-3 took 10^23 FLOPS total over 34 days. 34 days has 2937600 seconds. 10^23/10^7 is about 10^16 FLOP/s. So by this back of the envelope computation the brain has about 4 orders of magnitude more capacity, or 1000x. This makes a lot of sense, they're using a pettaFLOP/s supercomputer basically which we already knew. We'll have zettaFLOP/s supercomputers soon, yottaFLOP/s, people are worried we're going to hit some fundamental physical limits before we get there.All of this is a simplification and there are problems with every one of these estimates.But, in some sense none of it means anything at all. You can have an extremely efficient algorithm that runs 1 million times faster than an extremely inefficient algorithm. Machines and brains do not run the same \"software\", the same algorithms. So comparing their hardware directly doesn't say anything at all.replyrcxdude 1 day ago | root | parent | next [\u2013]This is an important point. On the one hand real neurons are a heck of a lot more complex than a single weight in a neural network, so exactly mimicking a human brain is still well outside our capabilities, even assuming we knew enough to build an accurate simulation of one. On the other hand, there's no intrinsic reason why you would need to in order to get similar capabilities on a lot of areas: especially when you consider that neurons have a very 'noisy' operation environment, it's very possible that there's a huge overhead to the work they do to make up for it.replysylware 23 hours ago | root | parent | next [\u2013]Yep, this is what I am thinking.Since it is already giving interesting results, let's say a \"brain\" is a connectome with its current information flow.Comparing AI with a brain in terms of scale is somewhat hazardous but with what we know about real neurons and synapses, one brain is still several orders of magnitude above the current biggest AIs (not to mention, current AI is 2D and very local, as the brain is 3D and much less locality constrained). The \"self-awareness\" zone would need a at leas 1000x bigger, redondant, with a saveable flow of information, 3D with less locality, connectome that of the current biggest AI. Not to mention, realtime rich inputs/outputs, and years of training (like a baby human).Ofc, this is beyond us, we have no idea of what's going on, and we probably won't. This is totally unpredictable, anybody saying otherwise is either trying to steal money for some BS AI research, or a the real genius.replywslh 8 hours ago | root | parent | prev | next [\u2013]Very interesting summary.Now the question I have is how small a model could be that can fascinate a big population of smarter creatures. On one hand we know that the human brain has a lot of power but in the other it could be \"manipulated\" by lesser intelligente creatures.replyjustrealist 1 day ago | parent | prev [\u2013]We really have no idea how to directly compare the two.Also, vast portions of the human brain are dedicated to the visual cortex, smelling, breathing, muscle control... things which have value to us but which don't contribute to knowledge work when evaluating how many parameters it would take to replace human knowledge work.replysteve_adams_86 1 day ago | root | parent | next [\u2013]While those portions of the brain aren't specific to learning intellectual or academic information, they might be crucial to making sense of data, help in testing what we learn, and help bridge countless gaps between model/simulation and reality (whatever that is). Hopefully that makes sense. Sort of like... Holistic learning.I wonder if our brains and bodies are not all that separate, and the intangible features of that unity might be very difficult to quantify and replicate in silica.replyzrm 1 day ago | root | parent | next [\u2013]We can say that such and such part of the brain is \"for\" this or that. Then it releases neurotransmitters or changes the level of hormones in your body which in turn have cascading effects, and at this point information theory would like to have a word.\"If our small minds, for some convenience, divide this glass of wine, this universe, into parts -- physics, biology, geology, astronomy, psychology, and so on -- remember that nature does not know it!\" -Richard Feynmannreplypassion__desire 1 day ago | root | parent | next [\u2013]Reality only computes at the level of quarks - a less wrong postreplyvbezhenar 1 day ago | root | parent | prev | next [\u2013]It's really interesting that human organism requires so much computational power to support live.replygwoolhurme 1 day ago | root | parent | next [\u2013]I think it's even more interesting that the required amount of energy to do that high computational work isn't that high. Evolution has been working on it for a long time, and some things are really inefficient but overall it does an OK job at making squishy machines.replytedivm 1 day ago | root | parent | next [\u2013]The human brain uses roughly 20 watts, which is really a remarkably low number.https://psychology.stackexchange.com/a/12386replyinterlinked 1 day ago | root | parent | next [\u2013]That's 20% of total energy consumption.replyloh 1 day ago | root | parent | prev | next [\u2013]I had a good chuckle at \"squishy machines\". That's a really interesting way to think about it. It makes me wonder if, some day, we will be able to build \"squishy machines\" of our own, capable of outperforming silicon while using a tiny fraction of the energy.replyWithinReason 1 day ago | root | parent | prev | next [\u2013]Not really, as we only use 10% of our brains. /sreplypzo 1 day ago | root | parent | prev [\u2013]on top of that I would add that humans have very high DPI touch sensors across full body (skin)replyGuidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- GPT-4 is technically 10x the size of GPT-3, consisting of 8 models with 220B parameters each.\n- Other models, such as Google's 1.2T model with 64 experts and Microsoft Bing's different mixes of models, have also made advancements in Switch-Transformers and MoE.\n- OpenAI's approach of using a mixture of experts and combining models is aimed at achieving better performance and specialization, rather than creating one giant model."
  },
  {
    "id": 36418713,
    "timestamp": 1687356851,
    "title": "FTC sues Amazon over 'deceptive' Prime sign-up & cancellation process",
    "url": "https://www.cnbc.com/2023/06/21/ftc-sues-amazon-over-deceptive-prime-sign-up-and-cancellation-process.html",
    "hn_url": "http://news.ycombinator.com/item?id=36418713",
    "content": "MARKETSBUSINESSINVESTINGTECHPOLITICSCNBC TVINVESTING CLUBPROMAKE ITSELECTUSAINTLWATCHLIVESearch quotes, news & videosWATCHLISTSIGN INCREATE FREE ACCOUNTTECHFTC sues Amazon over \u2018deceptive\u2019 Prime sign-up and cancellation processPUBLISHED WED, JUN 21 202310:10 AM EDTUPDATED WED, JUN 21 20235:13 PM EDTAnnie Palmer@IN/ANNIERPALMER/@ANNIERPALMERSHAREShare Article via FacebookShare Article via TwitterShare Article via LinkedInShare Article via EmailKEY POINTSThe FTC on Wednesday sued Amazon, alleging it tricked customers into signing up for its Prime subscription program and intentionally complicated the cancellation process.The agency claims Amazon used so-called \u201cdark patterns\u201d to steer users to enroll in Prime without their consent.In this articleAMZNFollow your favorite stocksCREATE FREE ACCOUNTWATCH NOWVIDEO02:29FTC sues Amazon over its \u2018deceptive\u2019 Prime user policyThe Federal Trade Commission on Wednesday sued Amazon, alleging the nation\u2019s dominant online retailer intentionally duped millions of consumers into signing up for its mainstay Prime program and \u201csabotaged\u201d their attempts to cancel.The agency claims Amazon violated the FTC Act and the Restore Online Shoppers\u2019 Confidence Act by using so-called dark patterns, or deceptive design tactics meant to steer users toward a specific choice, to push consumers to enroll in Prime without their consent.\u201cAmazon tricked and trapped people into recurring subscriptions without their consent, not only frustrating users but also costing them significant money,\u201d FTC Chair Lina Khan said in a statement.Amazon spokesperson Heather Layman said in a statement that the FTC\u2019s claims are \u201cfalse on the facts and the law.\u201d\u201cThe truth is that customers love Prime, and by design we make it clear and simple for customers to both sign up for or cancel their Prime membership,\u201d Layman said. \u201cAs with all our products and services, we continually listen to customer feedback and look for ways to improve the customer experience, and we look forward to the facts becoming clear as this case plays out.\u201dPhotographer: Thorsten Wagner/Bloomberg via Getty ImagesBloomberg | Bloomberg | Getty ImagesThe company\u2019s shares closed slightly lower on Wednesday.The FTC had been investigating sign-up and cancellation processes for Amazon\u2019s Prime program since March 2021. Tensions flared between Amazon and the FTC when the agency sought to have CEO Andy Jassy and founder Jeff Bezos testify on the company\u2019s Prime practices. Amazon argued the request would be unduly and burdensome, which the FTC rejected.Launched in 2005, the Prime program has grown to become one of the most popular subscription services in the world, with more than 200 million members globally, and it has generated billions of dollars for Amazon. Membership costs $139 a year and includes perks like free shipping and access to streaming content.The lawsuit, filed in U.S. District Court for the Western District of Washington, accuses Amazon leadership of slowing or rejecting changes that would have made it easier for users to cancel Prime because those changes \u201cadversely affected Amazon\u2019s bottom line.\u201dAmazon made it difficult for consumers to buy items on its site without Prime, and a button that instructed users to complete their transaction did not clearly state that they were also agreeing to join Prime for a recurring subscription, the complaint states.The cancellation process is also difficult to navigate and designed to deter consumers from ending their Prime subscription, the FTC alleged. Amazon used an internal term called \u201cIliad\u201d to describe the process, referencing Homer\u2019s epic poem about the Trojan War, the agency said, citing a report by Insider.The complaint marks the third case the FTC has brought against Amazon in the last month. Amazon in late May agreed to pay the agency more than $30 million to settle cases alleging privacy lapses in its Alexa and Ring units. The company said it disagreed with the FTC\u2019s claims but that it settled in order to move on from the matter.Squawk BoxWATCH LIVEUP NEXT | Squawk on the Street 09:00 am ETTVSquawk BoxWATCH LIVEUP NEXT | Squawk on the Street 09:00 am ETListenSubscribe to CNBC PROLicensing & ReprintsCNBC CouncilsSelect Personal FinanceCNBC on PeacockJoin the CNBC PanelSupply Chain ValuesSelect ShoppingClosed CaptioningDigital ProductsNews ReleasesInternshipsCorrectionsAbout CNBCAd ChoicesSite MapPodcastsCareersHelpContactNews TipsGot a confidential news tip? We want to hear from you.GET IN TOUCHAdvertise With UsPLEASE CONTACT USCNBC NewslettersSign up for free newsletters and get more CNBC delivered to your inboxSIGN UP NOWGet this delivered to your inbox, and more info about our products and services. Privacy Policy|Do Not Sell My Personal Information|CA Notice|Terms of Service\u00a9 2023 CNBC LLC. All Rights Reserved. A Division of NBCUniversalData is a real-time snapshot *Data is delayed at least 15 minutes. Global Business and Financial News, Stock Quotes, and Market Data and Analysis.Market Data Terms of Use and DisclaimersData also provided by",
    "summary": "- The Federal Trade Commission (FTC) has sued Amazon, accusing the company of deceiving customers into signing up for its Prime subscription program and making it complicated to cancel.\n- The FTC claims that Amazon used \"dark patterns,\" deceptive design tactics, to push consumers into enrolling in Prime without their consent.\n- Amazon denies the FTC's claims and states that they make it clear and simple for customers to both sign up for and cancel their Prime membership.",
    "hn_title": "FTC sues Amazon over \u2018deceptive\u2019 Prime sign-up and cancellation process",
    "original_title": "FTC sues Amazon over \u2018deceptive\u2019 Prime sign-up and cancellation process",
    "score": 363,
    "hn_content": "- FTC is suing Amazon over deceptive practices related to Prime sign-up and cancellation process.\n- Users have reported difficulties in cancelling Prime, including misleading buttons and complex cancellation process.\n- The lawsuit claims that Amazon intentionally designed the cancellation process to be labyrinthine and discourages users from cancelling.\n- Many users have expressed frustration with the overall Amazon.com experience, including product quality, customer service, and dark patterns in the UI.\n- Legislation mandating easier cancellation processes for subscriptions and clearer sign-up and cancellation procedures could improve the online shopping experience.- Many users have reported experiencing deceptive practices by Amazon, particularly in their subscription sign-up process for Amazon Prime.\n- Users have described instances where they accidentally signed up for Prime, often due to misleading design choices on the website.\n- Some users have expressed frustration with the difficulty of canceling their Prime membership, noting that the process can be confusing and time-consuming.\n- There is a debate regarding whether these practices are intentionally deceptive or simply poor user experience design.\n- The Federal Trade Commission (FTC) is reportedly suing Amazon over these alleged deceptive practices, suggesting that the issue may have legal ramifications.\n- Some users have shared their personal experiences of accidentally signing up for Prime or having difficulty canceling it.\n- Alternatives to Amazon have been suggested, with some users preferring specialized online retailers for specific product categories.\n- The prevalence of dark patterns and their impact on user experience and consumer trust is a central topic of discussion.\n- It remains to be seen whether the FTC's lawsuit against Amazon will result in any significant changes to the company's practices or penalties.",
    "hn_summary": "- FTC is suing Amazon over deceptive practices related to Prime sign-up and cancellation process.\n- Users have reported difficulties in cancelling Prime, including misleading buttons and complex cancellation process.\n- Legislation mandating easier cancellation processes for subscriptions and clearer sign-up and cancellation procedures could improve the online shopping experience."
  },
  {
    "id": 36413260,
    "timestamp": 1687311221,
    "title": "A regular expression to check for prime numbers (2007)",
    "url": "https://www.noulakaz.net/2007/03/18/a-regular-expression-to-check-for-prime-numbers/",
    "hn_url": "http://news.ycombinator.com/item?id=36413260",
    "content": "A regular expression to check for prime numbers18 March 2007 By Avinash Meetoo 165 CommentsRegular expressions are extremely powerful. This is something I read at least once or twice every day while reading articles and blogs on the Web.While browsing today, I found this page which thoroughly describes the use of the regular expression /^1?$|^(11+?)\\1+$/ in Perl to check if a number is prime or not!!!/^1?$|^(11+?)\\1+$/To be frank, I was skeptical. The regular expression looks like magic! And I wanted to understand it better. I rewrote it in Ruby using irb and I tested it:Avinash@noulakaz:~$ irbirb(main):001:0> def is_prime(n)irb(main):002:1> (\u201c1\u201d * n) !~ /^1?$|^(11+?)\\1+$/irb(main):003:1> end=> nilirb(main):004:0> is_prime(10)=> falseirb(main):005:0> is_prime(11)=> trueirb(main):006:0> is_prime(12)=> falseirb(main):007:0> is_prime(13)=> trueirb(main):008:0> is_prime(99)=> falseirb(main):009:0> is_prime(100)=> falseirb(main):010:0> is_prime(101)=> trueGreat! It also works in Ruby! This means that there is no (Perl) magic going on. The regular expression really works. But how? Let\u2019s try to follow the logic behind it.Is 7 prime?To know this, the function first generates \u201c1111111\u201d (from \u201c1\u201d * 7) and tries to see if that string does not match /^1?$|^(11+?)\\1+$/. If there is no match, then the number is prime.Notice that the regular expression has two parts (separated with the vertical bar |).The first part is /^1?$/ is trivial and matches with beginning of line (^), an optional 1 (1?)and end of line ($) which implies that it matches either the empty string or \u201c1\u201d. This simply indicates that calling that function with n==0 or n==1 will correctly return false (as the \u201c1\u201d * n will match with the first part of the regular expression)The second part is where the magic occurs\u2026/^(11+?)\\1+$/ matches with beginning of line (^) then by (11+?) then by \\1+ and finally by end of line ($). I guess that you know that \\1 is a variable which is bound to whatever was matched previously (in our case by (11+?)).Let\u2019s proceed slowly\u2026(11+?) does two thingsIt matches with \u201c1\u201d followed by one or more ones minimally. This means that it matches with \u201c11\u201d initially (notice that if there was no ? (i.e. (11+) was used instead, the whole string would have matched)The string obtained (\u201c11\u201d initially) is bound to the variable \\1.\\1+ then matches with whatever has been matched above (\u201c11\u201d initially) repeated one or more times. If this match succeeds then the number is not prime.If you are following, you\u2019ll realise that this eliminates all even numbers except 2 (for example, 8 is \u201c11111111\u201d and therefore (11+?) will match with \u201c11\u201d and \\1+ will match with \u201c111111\u201d).As for odd numbers (in our case 7), the (11+?) matches with \u201c11\u201d initially but \\1+$ cannot be true (notice the $) as there are 5 remaining ones. The regular expression engine will backtrack and will make (11+?) match \u201c111\u201d and here also \\1+$ won\u2019t be true because there will be 4 remaining ones (and \\1+$ will only match with a number of ones which is a multiple of 3 followed by end of line) etc. hence \u201c1111111\u201d will not match the regular expression which implies that 7 will be considered as being prime :-)When I showed this to Christina this morning (true), she told me that this only checked for a number being odd or not. This is also what I felt at the beginning. But it really works. For instance, let\u2019s try to apply it to 9 (which is obviously not even), \u201c1\u201d * 9 should match the regular expression\u2026\u201c1\u201d * 9 = \u201c111111111\u201d. (11+?) matches \u201c11\u201d initially. \\1+$ cannot match because there are 7 remaining ones. Backtracking occurs. (11+?) now matches \u201c111\u201d. And here \\1+$ matches the remaining 6 remaining ones! Hence, 9 is not prime.Easy\u2026 and beautiful at the same time ;-)[Join the discussion on Hacker News]Filed Under: Education, Linux, Programming, Web",
    "summary": "- Regular expressions can be used to check if a number is prime or not.\n- The regular expression /^1?$|^(11+?)\\1+$/ can be used in Perl and Ruby to check for prime numbers.\n- The regular expression logic eliminates all even numbers except 2 and correctly identifies odd prime numbers.",
    "hn_title": "A regular expression to check for prime numbers (2007)",
    "original_title": "A regular expression to check for prime numbers (2007)",
    "score": 352,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginA regular expression to check for prime numbers (2007) (noulakaz.net)352 points by tambourine_man 1 day ago | hide | past | favorite | 96 commentstylerhou 1 day ago | next [\u2013]Technically not a regular expression, as (intuitively) the backreference has to \u201ccount\u201d the number of 1\u2019s that were matched. Regular expressions are equivalent to finite state machines, which cannot count arbitrarily high (any state machine that can count arbitrarily high needs an infinite number of states, since there are infinite natural numbers).The 2022 discussion has a more formal proof using the pumping lemma.replyyard2010 21 hours ago | parent | next [\u2013]Fun fact about the pumping lemma - my best friend's grandparent worked on it (Eli Shamir). When we were taught it during my bsc the TA who knew he was the grandson of one of the inventors, asked during the lecture where he was, if he could say something about his grandfather, and it turns out he played hockey from the class to work on something else, embarrassing!The pumping lemma is a great milestone in this field, so simple, yet so powerful.replyaleph_minus_one 19 hours ago | root | parent | next [\u2013]> The TA [...] asked during the lecture where he was, if he could say something about his grandfather, it turns out he played [hooky] from the class to work on something else, embarrassing!If the \"working on something else\" means \"working on some hard research problem\", this is not embarrassing, but stylish. :-)replydgfitz 20 hours ago | root | parent | prev | next [\u2013]Did you mean \"played hooky\" instead of \"played hockey\" by chance? :)replyremram 20 hours ago | root | parent | prev | next [\u2013]> he played hockey from the class to work on something elseSorry I can't parse thatreplythedailymail 20 hours ago | root | parent | next [\u2013]I think hockey is supposed to be hooky.replyremram 20 hours ago | root | parent | next [\u2013]As in, the grandson wasn't attending when the TA asked him the question. I see.replyjappgar 20 hours ago | root | parent | prev | next [\u2013]Pretty sure they meant \"playing hooky\" :)replyCoastalCoder 1 day ago | parent | prev | next [\u2013]Agreed. I read the post because the result was so shocking.TIL that the computer-sciencey definition of RE isn't the only one in use.replywongarsu 1 day ago | root | parent | next [\u2013]When programmers say regular expression they usually mean Perl Compatible Regular Expressions (PCRE). Or I guess PCRE-compatible expressions, since there are other implementations of the same syntax out there. If you go back far enough in time they were once regular expressions in the computer science sense, but then features got added, and now they are incredibly powerful but can take basically infinite memory and time.https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expres...replychrismorgan 1 day ago | root | parent | next [\u2013]Although general PCRE syntax has clearly won, that\u2019s distinct from the infinite-memory-and-time matter. Engines that don\u2019t use backtracking and can search in linear time (O(regex-size \u00d7 search-text-size)) have been making a serious comeback in recent years, at only the cost of not supporting lookaround assertions or backreferences. For example, the re2 library, or Rust\u2019s regex crate, both of which are very popular.replyknome 1 day ago | root | parent | next [\u2013]Russ Cox has an excellent write up on it.\"Regular Expression Matching Can Be Simple And Fast\" (2007)https://swtch.com/~rsc/regexp/regexp1.htmlreplyeru 22 hours ago | root | parent | next [\u2013]Alas that approach only works well for your basic regular expressions that support Kleene-Star, concatenation and union.Regular languages are also closed under intersection and taking prefix etc (see https://en.wikipedia.org/wiki/Regular_language#Closure_prope...), and if you want to expose those operators in your regular expressions, Russ Cox's technique doesn't really work.replyknome 20 hours ago | root | parent | next [\u2013]I suspect it should be possible to transform two intersected (K*,C,U) expressions into a new (K*,C,U) expression by walking over the two, dropping incompatible terms, reducing sets, and redistributing and expanding sub-expressions to combine the two, though I do not have time to take a serious look at this at the moment.I also suspect that this might result in a combinatorial explosion of fused terms, but that's irrelevant as we're only worried about whether intersection can be implemented in Russ Cox's method, not whether a regular expression might require several earths or so worth of RAM to hold :)Nothing in the wiki article mentions taking a prefix, but that just sounds like `(prefix|)`?replyeru 10 hours ago | root | parent | next [\u2013]You can still explicitly build the finite automaton for your closure-extended regular language. That one might be big, but matching is still linear in the length of the text you are searching through.As you point out Russ Cox's method can not deal with complement and intersection. You can hack it up by putting a compiler in front, but then you might as well compile to finite automata directly. Or you use derivatives: https://en.wikipedia.org/wiki/Brzozowski_derivative or https://www.ccs.neu.edu/home/turon/re-deriv.pdf (or https://well-typed.com/blog/2020/06/fix-ing-regular-expressi... for a Haskell flavour).> Nothing in the wiki article mentions taking a prefix, but that just sounds like `(prefix|)`?They implicitly mention prefixes, when they talk about 'the trio operations: string homomorphism, inverse string homomorphism, and intersection with regular languages.' If I remember right, the prefix operation is:Take a language L, restrict it to the strings that have the right prefix: `L' := L & (prefix.*)` then chop off that prefix from every member of L'.See https://en.wikipedia.org/wiki/Quotient_of_a_formal_language which this is a special case of. The Brzozowski derivative article also explains it in more detail.replyfinitemonkey 1 day ago | root | parent | prev | next [\u2013]> and now they are incredibly powerful but can take basically infinite memory and time.Which is why the \"RE\" in the article is excrutiatingly slow, given that it needs to perform insane amounts of backtracking. In contrast, \"real\" regular expression checkers run in linear time.Also, nitpicking, but they take unbounded time. It's still finite.replypetters 1 day ago | root | parent | next [\u2013]They said \u201cbasically,\u201d so no need to nitpick. And I\u2019m not sure about unbounded; surely it is bounded by a suitable exponential function?replyfinitemonkey 12 hours ago | root | parent | next [\u2013]> They said \u201cbasically,\u201d so no need to nitpick.The inflationary use of \"infinite\" especially in tech crowds that should know better deserves pushback.There are models of computation that actually model infinite computation. A well-studied one is B\u00fcchi automata, basically a generalization of finite state automata to infinite sequences.> And I\u2019m not sure about unbounded; surely it is bounded by a suitable exponential function?Nope. You can nest them and for any function that you give you can produce a RE that takes longer than that function to evaluate. (That's literally what \"unbounded\" means. There is no bound. Doesn't mean it's \"infinite\". All those computations terminate, which is literally what \"finite\" means in this context.)replycubefox 22 hours ago | root | parent | prev | next [\u2013]I think with \"unbounded but finite\" he meant potential infinity rather than actual infinity.replydisconcision 1 day ago | root | parent | prev | next [\u2013]funnily enough the original POSIX regular expressions (BRE) were strictly less powerful than regular expressions (CS sense), lacking a general alternation operator (though one was provided in ERE)replyjohnfn 1 day ago | parent | prev | next [\u2013]Come now, every time a colleague says they parsed a file with a regex in javascript, do you turn to them and tell them \"well, you didn't actually use a _regular_ expression...\"replyunhammer 1 day ago | root | parent | next [\u2013]Only every time they claim a major mathematical breakthrough using regular expressions.replyunderdeserver 1 day ago | root | parent | next [\u2013]Nobody claimed that.replySerpentJoe 18 hours ago | root | parent | next [\u2013]It's true, the article doesn't make that claim. We think of primes as being mysterious and out of reach, and we're conditioned to think \"mathematical / computational breakthrough\" when we read the words \"prime number\" in a headline, but this is only because we've found all of them that aren't huge enough to be mysterious. Computing prime numbers is trivial as long as you don't mind them being the same ones everybody else already found.replyTainnor 14 hours ago | root | parent | next [\u2013]Not sure what you mean by \"trivial\", I mean a simple prime finding algorithm is easy to write down, but it will be very inefficient, especially for large primes (the very ones you use in cryptography).Coming up with an efficient prime-finding algorithm like Miller-Rabin* is far from trivial.* Technically it's just a prime-checking algorithm, but you can just generate random numbers until you've verified one of them is prime.replyTade0 23 hours ago | root | parent | prev | next [\u2013]I do find it useful to know that regular expressions in JS(and many other languages really) are not actually regular and why - allows one to decide if a given problem can be solved at all using them.replyretrac 1 day ago | parent | prev | next [\u2013]> Regular expressions are equivalent to finite state machines, which cannot count arbitrarily high (any state machine that can count arbitrarily high needs an infinite number of states, since there are infinite natural numbers).The machine I'm using to type this comment is also a finite state machine, as due to having non-infinite memory, it also cannot count arbitrarily high.Informally, regular expressions like in Perl are a kind of string rewriting. And many string rewriting rules, if they can be iteratively applied, are Turing-complete (with the usual caveat about infinite storage and time). The usual definition of a regular expression excludes that kind of iterative application, though. It's just a matching pattern; rewriting is technically outside of the concept of a regular expression.replyfinitemonkey 1 day ago | root | parent | next [\u2013]> The machine I'm using to type this comment is also a finite state machine, as due to having non-infinite memory, it also cannot count arbitrarily high.Right. And if you really want to push that argument further then there are numbers for which your machine can't decide whether they are prime or not. Most of them, in fact, i.e., for all but a finite number of primes and non-primes, your machine can't tell.For the theory of computability, this is not a useful model. Neither for complexity theory. Statements like \"My machine can sort in constant time\" which is arguably true but not useful either. It only holds up to a certain collection size which in a sense makes it both nonsensical and useless. Even concepts like the Chomsky hierarchy with context free languages being one of the prominent components make little sense as long as your computational model is finite state.Instead, we model them as unbounded, to be able to differentiate between classes of computation problems as well as reason about complexity. The Turing Machine is one of the simple and elegant models, but there are others for other purposes.I wish that basic education about the theory of computation would stress more why theory treats things like this, to avoid this kind of confusion. (And then people would need to take those classes as well, and not just claim they can write React apps just fine without a degree.)replystaunton 1 day ago | root | parent | next [\u2013]> And then people would need to take those classes as well, and not just claim they can write React apps just fine without a degree.Weird tangent. They can write React apps without a degree, can't they? What's wrong with that?The amount of complexity reasoning you need for something like that is around \"this part seems slow, maybe there's a better algorithm somewhere\" or \"that's a lot of nested loops, maybe I can do with less\". Knowing more might help in some pretty rare cases but doesn't seem like a requirement. On the other hand, knowing the complexity of all algorithms and blindly assuming \"good complexity = good performance\" while never checking is a recipe for desaster.replyfinitemonkey 12 hours ago | root | parent | next [\u2013]> On the other hand, knowing the complexity of all algorithms and blindly assuming \"good complexity = good performance\" while never checking is a recipe for desaster.Exactly. That's the difference between an actual education and having looked up some Big-O notation on Wikipedia.replykaba0 1 day ago | root | parent | prev | next [\u2013]> The machine I'm using to type this comment is also a finite state machine, as due to having non-infinite memory, it also cannot count arbitrarily highCome on, can we drop this useless trivia that floats around? No, computers are Turing-machines for all practical purposes and no the memory is not the tape, unless your computer is sandboxed from everything. As soon as it has some side effect channels, its \u201ctape\u201d can be as large as needed. For example, it can use the internet to store petabytes of state. But if we want to be more pedantic, it can control and observe physical things, making the whole universe its state space.Which is still finite, so yeah, even more pedantically you are right due to mathematical infinity not existing, but the actual distinction of a Turing machine is \u201clazy\u201d, if you don\u2019t hit the limit, you may as well reason as if it were a Turing machine.replynoctune 1 day ago | root | parent | prev | next [\u2013]Personally, I use \"regex\" for the informal string-matching/rewriting engines found in most languages and \"regular expression\" for the formal definition.replyFeepingCreature 1 day ago | root | parent | next [\u2013]By which, of course, this submission title is a lie.replynecovek 1 day ago | root | parent | next [\u2013]I don't think the GP is the original poster, so them claiming how they \"personally\" differentiate between the two does not make the submission title a lie.We don't know how original poster differentiates.replymjan22640 1 day ago | root | parent | prev | next [\u2013]A finite self referential algorithm that checks all numbers for being prime does exist. Running it on a finite computer will eventually hit the bounds of the computer, but that is a limitation outside of the algorithm.A finite regular expression that checks all numbers for being prime cannot exist already in principle.replyQuekid5 1 day ago | root | parent | prev | next [\u2013]> The machine I'm using to type this comment is also a finite state machine, as due to having non-infinite memory, it also cannot count arbitrarily high.I'm not sure how that's relevant. Even given infinite space, there still wouldn't exist a Regular Expression (the CS kind) you could write down in finite time that would match only primes.At least IIRC, it's been a 20+ years since I last took a Discrete Math course :)replyumanwizard 18 hours ago | root | parent | next [\u2013]> At least IIRC, it's been a 20+ years since I last took a Discrete Math course :)Your memory is correct and there is very simple intuition for this. Regular languages are those that can be matched by a machine with bounded memory. So, let's say that bound is \"n\" bits. Then your machine will not be able to read in unary strings larger than 2^n.replydheera 1 day ago | root | parent | prev | next [\u2013]> Even given infinite space, there still wouldn't exist a Regular Expression (the CS kind) you could write down in finite time that would match only primes.The point is, neither would there exist a non-(Regular Expression) method that could do such, if you're running it on a finite state machine (your computer).replytylerhou 1 day ago | root | parent | next [\u2013]But that argument is not interesting. \"We can't count arbitrarily high because the universe is finite.\" Yeah, duh. (Observable universe, for the pedants.)It's more interesting to ask: suppose you did have a magical stick of RAM that had infinite storage, and suppose you augmented your computer to store and query that memory. Then -- yes -- your computer could determine whether any number, however large, is prime. An FSM could not.replydheera 1 day ago | root | parent | next [\u2013]If you have an infinite stick of RAM, regular expressions wouldn't be FSMs, either, they could have infinite state space. They would terminate in finite time that is exponential in the size of the prime but nevertheless would still halt.replykaba0 1 day ago | root | parent | next [\u2013]A finite state machine can\u2019t have infinite state space.. also, you can write a finite Turing program that does exactly that, but you can\u2019t write a finite description of an \u201cinfinite\u201d state space, which is the whole point.Ad absurdum everything would be computable (recognizable) by FSMs, simply by listing all the infinite number of possibilities. listOfAllPrimes.concat(\u201c|\u201d), here you are..replyumanwizard 1 day ago | root | parent | prev | next [\u2013]The point being made is that \u201cregular expressions\u201d, in the original CS meaning, do not have stack space or anything analogous. \u201cRegular expressions\u201d in modern programming practice are often different and more powerful, of course.replyfuncDropShadow 20 hours ago | root | parent | prev | next [\u2013]No, you could create arbitrarily large FSMs, but there are no infinite finite state machines.replykaba0 1 day ago | root | parent | prev | next [\u2013]There is, the property of being a Turing machine would only be thrown out when you actually hit the limit. Besides computers being able to modify state not only in their memory but e.g. outside memory, I can also look at my computer as a lazy-taped Turing machine that chugs along writing only to its memory, and when it were to go off it pauses and waits for me to add additional memory.This is just useless pedantism that diminishes the very imporrant categorization of Chomsky.replylapinot 1 day ago | root | parent | prev | next [\u2013]The important point here was given infinite space.replycubefox 1 day ago | parent | prev | next [\u2013]Technically, a computer is also just a large finite state machine. Which suggests computability theory is unable to accurately account for the intuitive difference between computers and simpler automatons. I suspect it has something to to with the computational time/space complexity of the algorithms they are able to execute.replyeru 22 hours ago | parent | prev | next [\u2013]If you want something with an actual regular expression, have a look at https://codegolf.stackexchange.com/questions/3503/hard-code-... which is a code golf for regular expressions to test divisibility by 7.replytoth 18 hours ago | root | parent | next [\u2013]Very cool! The top answer has a 12,731 character regular expression that matches base 10 numbers that are divisible by 7. (There is an answer with only 105 characters, but that uses .NET \"regular expressions\" which have some pretty gnarly extensions and are definitely not regular languages).The regex itself is generated from a relatively simple DFA based on mod 7 arithmetic on digits using a program (JFLAP apparently, not familiar).Just from looking at the start of the regex you can see some cool things. For instance, TIL that all numbers of the form 1555....55554 and 85555....5554 are multiples of 7. Fun exercise to prove it.replyevanb 1 day ago | parent | prev | next [\u2013]Could the AKS primality test, which showed that PRIMES is in P, be implemented as an honest regular expression? Presumably not because then we'd know that PRIMES is not just in P but is a regular language, which would be too good to be true.https://en.wikipedia.org/wiki/AKS_primality_testreplyaleph_minus_one 1 day ago | root | parent | next [\u2013]Via the pumping lemma, you can easily prove that testing whether a number is a prime number cannot be implemented as a regular expression.replyTainnor 23 hours ago | root | parent | next [\u2013]Via the context-free pumping lemma, you can even prove that prime numbers don't form a context-free language either.replytaejo 21 hours ago | root | parent | next [\u2013]And via Parikh's theorem, with a one-symbol alphabet, regular and context-free languages are the same.replyneilk 1 day ago | prev | next [\u2013]The original exegesis, which prompted this blog post, was by me.I am currently transitioning to a different blog engine, so the page is offline right now, but it's still available herehttps://web.archive.org/web/20220513113609/neilk.net/blog/20...replykrupan 22 hours ago | parent | next [\u2013]Much better explanation, thank youreplyhoytech 1 day ago | prev | next [\u2013]You can also factor integers with Regexp::Exhaustive:https://metacpan.org/pod/Regexp::Exhaustive#Finding-all-divi...And if you're in Toronto in 3 weeks time, come see Abigail (the original inventor of the prime number regexp) solve the N-Queens problem with regexp:https://tprc2023.sched.com/event/1LhoB/the-n-queens-problem-...replyjimhefferon 23 hours ago | parent | next [\u2013]Thank you for crediting Abigail.replystevage 1 day ago | prev | next [\u2013]Took me a while to realise that it is not actually validating whether a given number is a prime number or not.It is validating whether a string of consecutive 1's has a prime length.In other words, it can't tell whether \"3\" is prime, unless you express it as \"111\".Much less exciting.replytiborsaas 1 day ago | parent | next [\u2013]Sorry, but how is this different than pointing to three apples and explaining someone that this is what three is? Would you say it's not three because they are apples? I think it does not really matter how you represent the number. After all, all you see on your screen is \"fake\" it's just binary under the hood.replyJulianWasTaken 19 hours ago | root | parent | next [\u2013]But indeed that isn't what three is, three is the concept that comes from saying \"these are three apples\" and then \"these are three pears\" and then \"these are three cars\" and then saying \"three\" is the conceptual thing that's in common here.And here, validating a string of ones is simply not what anyone would mean if you said \"check whether this number is a prime number\" without any qualification, so I agree that whilst still cute, the title is a bit click-baity and not at all what I expected it to be about either.EDIT: it seems though that the original post, shared via archive.org elsewhere in the thread does do this for what one would normally assume -- and does so by using `(1 x shift) !~` -- so if anyone else was confused, read the original post.replycubefox 22 hours ago | root | parent | prev | next [\u2013]The problem with the unary numeral system is that numerals grow linearly with value, while for binary (ternary etc) they only grow logarithmically. So they need much less space and can be much faster read and written. An algorithm with relies on unary numerals probably has worse computational complexity than one that uses binary or higher.replymmarx 22 hours ago | root | parent | next [\u2013]Actually, an algorithm working on unary input tends to have better computational complexity than an algorithm working on binary input: an algorithm that is polynomial in the numeric value will be a polynomial algorithm on unary input, but an exponential algorithm on binary input. Such algorithms are usually called pseudo-polynomial[0]; indeed, this kind of primality testing is pseudo-polynomial.[0] https://en.wikipedia.org/wiki/Pseudo-polynomial_timereplycubefox 20 hours ago | root | parent | next [\u2013]> an algorithm that is polynomial in the numeric value will be a polynomial algorithm on unary input, but an exponential algorithm on binary input.That's comparing apples to oranges, because the two input types have vastly different lengths relative to their value. Unary input length itself grows exponentially with binary input length, for the same numeric value, cancelling out the unary advantage. So unary isn't faster than binary.In fact, I think it's pretty clear that unary representation is slower and takes more space. Just think about the rough number of steps you would need to add or even multiply two very large numbers, e.g. in a Turing machine. It would be obviously vastly more if the numbers are given in unary rather than in binary.replymmarx 16 hours ago | root | parent | next [\u2013]> That's comparing apples to oranges, because the two input types have vastly different lengths relative to their value.It really is not, because complexity is fundamentally a function of _the length of the input_ (specifically: it measures how the runtime (or space usage) grows with growing input). If you have longer input, your Turing machine can spend more time to compute its answer. Also note that this assumes that _the input_ is encoded in unary, if you get binary input and need to spend time and space to convert it to unary representation, sure, that will lead to an exponential blow-up.Edit: > Just think about the rough number of steps you would need to add or even multiply two very large numbers, e.g. in a Turing machine. It would be obviously vastly more if the numbers are given in unary rather than in binary.First, note that those are not actually pseudo-polynomial, as the number of steps needed for addition (or multiplication) depend on the number of digits, not the numeric values involved. Yet, even here unary encoding _does not have worse complexity_, since you still take polynomially many steps in the length of the input (i.e., the length of the unary encodings of the input values). Yes, all the inputs will be exponentially larger, so in practice it's certainly not the better algorithm, but _the complexity_ is not worse, since that's only concerned with the asymptotic behaviour.replycubefox 13 hours ago | root | parent | next [\u2013]When we deal with algorithms involving numbers, we are interested in actual numbers, not in their numeral representation. It would be absurd to compare unary and binary addition relative to the same numeral length. We are ultimately interested in numbers, not numerals. Adding one million to one million is simply much faster for binary addition than for unary addition, even if unary addition has better complexity relative to its own encoding than binary addition has to its encoding. We are interested in complexity relative to the numerical value, not in the length of their respective encodings.Edit: By the way, as the Wikipedia piece notices, the binary addition algorithm is O(log(n)) in time _relative to the value_, while unary addition is presumably O(n) relative to the value (just writing the numeral out alone takes O(n) steps). So the time complexity is in fact better. Probably the same holds for space complexity. Moreover, only in this case makes a comparison even sense, since we are comparing the same values in both cases, while for the numeral case we would be comparing the lengths of two different types of numerals, apples to oranges.replymmarx 11 hours ago | root | parent | next [\u2013]> It would be absurd to compare unary and binary addition relative to the same numeral length.Why? The Turing machine has no concept of numeric values, it only knows about the length of whatever the input is.> Adding one million to one million is simply much faster for binary addition than for unary addition, even if unary addition has better complexity relative to its own encoding than binary addition has to its encoding.From a complexity standpoint, adding one million to one million is O(1), irregardless of the encoding.> We are interested in complexity relative to the numerical value, not in the length of their respective encodings.But the complexity relative to the numerical value is not even well-defined, since it _depends_ on the choice of the encoding.> By the way, as the Wikipedia piece notices, the binary addition algorithm is O(log(n)) in time _relative to the value_, while unary addition is presumably O(n) relative to the value (just writing the numeral out alone takes O(n) steps). So the time complexity is in fact better.It really is not better. Time complexity is _always_ measured relative to the length of the input, and for binary encoding, the length of the input is O(log(n)), so, taking O(log(n)) steps for the addition is linear, same as the linear time needed for adding numbers in unary encoding (which is basically just copying the input to the output).> Moreover, only in this case makes a comparison even sense, since we are comparing the same values in both cases, while for the numeral case we would be comparing the lengths of two different types of numerals, apples to oranges.But _the numeral is not the input_, its _encoding_ is. This is really the whole point, and it is _precisely_ because you get different complexities for different encodings.replycubefox 4 hours ago | root | parent | next [\u2013]> Why? The Turing machine has no concept of numeric values, it only knows about the length of whatever the input is.That's irrelevant. We are interested in addition, or multiplication, or whatever, which is an operation between numbers (values), and it can be faster or slower depending on which numerals (encoding) are used.> But the complexity relative to the numerical value is not even well-defined, since it _depends_ on the choice of the encoding.Yes it depends on the encoding, no it is of course well-defined. You can measure two different algorithms which use two different encodings, relative to the same thing, the value.> complexity is _always_ measured relative to the length of the inputThat's simply not true. There is even a Wikipedia article about it. Even if it calls it \"pseudo\".> But _the numeral is not the input_, its _encoding_ isA numeral is an encoding of a number.replycomonoid 1 day ago | root | parent | prev | next [\u2013]You can certainly do calculations with apples, but doing RSA encryption with them is just impractical.replyIshKebab 23 hours ago | root | parent | prev | next [\u2013]It's less interesting because decoding decimal numbers with regex is a much more impressive feat.replystefncb 1 day ago | parent | prev | next [\u2013]Think about it a different way: the regex thing can only deal with unary numbers, like your computer can only deal with binary. It's really no different. I'm not sure if you can write a decimal-to-unary converter in regex but I reckon it's possible. At least using the non-regular regex like the original prime program did.replyoneeyedpigeon 23 hours ago | parent | prev | next [\u2013]> validating whether a given number is a prime number or not ... It is validating whether a string of consecutive 1's has a prime length.I don't think you've really explained why those two things are different. They're different methods but they're checking the exact same thing.replystevage 21 hours ago | root | parent | next [\u2013]Well, no. The two things take input in two different forms, and one is substantially easier than the other.It's a bit like if you claimed that a program that voice to text is the same as one that does text to text.replyoneeyedpigeon 15 hours ago | root | parent | next [\u2013]You're totally right; I apologise.replyshric 1 day ago | prev | next [\u2013](2007)Previous discussions (with >25 comments):2015: https://news.ycombinator.com/item?id=9039537 (67 comments)2022: https://news.ycombinator.com/item?id=30564287 (121 comments)replydang 1 day ago | parent | next [\u2013]Thanks! Macroexpanded:A regular expression to check for prime numbers (2007) - https://news.ycombinator.com/item?id=30564287 - March 2022 (121 comments)A regular expression to check for prime numbers - https://news.ycombinator.com/item?id=9039537 - Feb 2015 (67 comments)A regular expression to check for prime numbers - https://news.ycombinator.com/item?id=1486158 - July 2010 (13 comments)Regex to check for prime numbers - https://news.ycombinator.com/item?id=707236 - July 2009 (9 comments)A regular expression to check for prime numbers - https://news.ycombinator.com/item?id=58780 - Sept 2007 (8 comments)replypkoird 1 day ago | prev | next [\u2013]Clever! I'm kinda being pedantic but I guess using \\1 makes it a non-regular expression? I'm not even sure if it's CFG anymore.replyeru 22 hours ago | parent | next [\u2013]If you want something with an actual regular expression, have a look at https://codegolf.stackexchange.com/questions/3503/hard-code-... which is a code golf for regular expressions to test divisibility by 7.replyshagie 1 day ago | parent | prev | next [\u2013]Correct. The \\1 holds some external state... but this can be overcome with a different architecture. If you want to start down that rabbit hole.Extending finite automata to efficiently match Perl-compatible regular expressions https://www.researchgate.net/publication/221325349_Extending...> Regular expression matching is a crucial task in several networking applications. Current implementations are based on one of two types of finite state machines. Non-deterministic finite automata (NFAs) have minimal storage demand but have high memory bandwidth requirements. Deterministic finite automata (DFAs) exhibit low and deterministic memory bandwidth requirements at the cost of increased memory space. It has already been shown how the presence of wildcards and repetitions of large character classes can render DFAs and NFAs impractical. Additionally, recent security-oriented rule-sets include patterns with advanced features, namely back-references, which add to the expressive power of traditional regular expressions and cannot therefore be supported through classical finite automata.> In this work, we propose and evaluate an extended finite automaton designed to address these shortcomings. First, the automaton provides an alternative approach to handle character repetitions that limits memory space and bandwidth requirements. Second, it supports back-references without the need for back-tracking in the input string. In our discussion of this proposal, we address practical implementation issues and evaluate the automaton on real-world rule-sets. To our knowledge, this is the first high-speed automaton that can accommodate all the Perl-compatible regular expressions present in the Snort network intrusion and detection system.----The awkward part is that a PCRE is demonstrably more powerful than a regular language, but not as powerful as a CFG (you can write CFGs that can't be matched by a PCRE - ([{}]) matching, a^nb^n and so on). So the question that gets interesting is \"can every PCRE be matched by a CFG?\"Is it a fork? or is it a non-integer language?https://en.wikipedia.org/wiki/Chomsky_hierarchy> Note that the set of grammars corresponding to recursive languages is not a member of this hierarchy; these would be properly between Type-0 and Type-1.So there's a language between the Turing machine and the linear bounded Turing machine that matches a context sensitive language.Is the PCRE something between Type-2 and Type-3? or is it a Type-3+I?https://en.wikipedia.org/wiki/Formal_grammar#Other_forms_of_...> Many extensions and variations on Chomsky's original hierarchy of formal grammars have been developed, both by linguists and by computer scientists, usually either in order to increase their expressive power or in order to make them easier to analyze or parse. ...replydavidgay 1 day ago | root | parent | next [\u2013]> The awkward part is that a PCRE is demonstrably more powerful than a regular language, but not as powerful as a CFGHmm, there's a reduction of 3-cnf-sat to perl regexps, making them NP-complete. As CFGs are in NP...https://perl.plover.com/NPC/NPC-3SAT.htmlreplyshagie 19 hours ago | root | parent | next [\u2013]Reading up on the current spec, apparently a PCRE can do recursive calls.https://www.pcre.org/original/doc/html/pcrepattern.html#SEC2...  \\( ( [^()]++ | (?R) )* \\)https://regex101.com/r/eBtSTM/1 for a slightly different formulation of that regex.replyvignesh_warar 1 day ago | prev | next [\u2013]Interesting!If anyone is seeking a math formula for primes, here is one: https://en.wikipedia.org/wiki/Formula_for_primesThere is also a good YouTube video that explains this: https://www.youtube.com/watch?v=j5s0h42GfvMreplyalbert_e 22 hours ago | parent | next [\u2013]Thanks for sharingthe video was very interestingreplyvenusenvy47 21 hours ago | parent | prev | next [\u2013]That's cool. I had no idea there was a symbol for the floor function.replyraldi 1 day ago | prev | next [\u2013]A better title would be \u201cA regex to check if a string contains a prime number of characters\u201dreplyremram 20 hours ago | parent | next [\u2013]I think it checks the opposite, it matches if it's not prime.replymedv 1 day ago | prev | next [\u2013]> To know this, the function first generates \u201c1111111\u201dNot that interesting.replydmd 16 hours ago | prev | next [\u2013]Also fun, if not anywhere as clever: perl -le '$_=1;print&&s/((\\d)\\2*)/length($1).$2/ge while length()<64'replyufo 1 day ago | prev | next [\u2013]Why does it have /^1?$/ ? Wouldn't that accept 0 and 1 as primes?replyrperce 1 day ago | parent | next [\u2013]I encourage you to re-read the article: you check that the number does not match the regex: > Is 7 prime?  > > To know this, the function first generates \u201c1111111\u201d (from \u201c1\u201d \\* 7) and tries to > see if that string does not match /^1?$|^(11+?)\\1+$/. If there is no match, then > the number is prime. > > Notice that the regular expression has two parts (separated with the vertical bar |). > > The first part is /^1?$/ is trivial and matches with beginning of line (^), an > optional 1 (1?) and end of line ($) which implies that it matches either the > empty string or \u201c1\u201d. This simply indicates that calling that function with n==0 > or n==1 will correctly return false (as the \u201c1\u201d \\* n will match with the first > part of the regular expression)I agree that the article formatting is a bit misleading.replywongarsu 1 day ago | parent | prev | next [\u2013]The regular expression matches all non-primes (in base 1 encoding). 0 and 1 are not prime, so it matches them.replyhospitalJail 20 hours ago | prev | next [\u2013]btw I found it strange that Excel has no built in way to do Re... That is a pain.replyunderdeserver 1 day ago | prev | next [\u2013]People are commented \"It's not a breakthrough! It's not CS-y _regular_ expressions!\"I suggest relaxing, everyone. It's a fun story, not a groundbreaking discovery.replysytelus 1 day ago | prev | next [\u2013]Stunning: https://chat.openai.com/share/367fd09d-79cb-4683-a179-e253a8...replyaenis 1 day ago | prev [\u2013]In case anyone is wondering, gpt4 provides the same solution. It takes some prodding though, and you get treated with a lecture of how inefficient it is before it provides the solution.\"Apologies for any confusion before, and I understand the nature of your request now. It's a fun challenge to think about! While it's not practically useful or efficient, and it is actually quite limited, a creative theoretical solution exists that involves regular expressions. This specific solution only works for very small numbers due to the inherent limitations of regex. It's based on the principle that a number is prime if it cannot be expressed as a product of two smaller natural numbers. We represent the number as a repeated string of 1s, then check for repeating sub-patterns.For instance, this Perl regex checks if a number, represented as unary (a string of 1s), is prime:perl Copy code /^1?$|^(11+?)\\1+$/ In this regex:^1?$ checks for the case where you have zero or one '1', which represent the numbers 0 and 1, neither of which are prime. ^(11+?)\\1+$ attempts to match the input with a repeating group of '1's. If a match is found, the number is not prime, because a repeating subgroup of '1's represents a divisor. This pattern should be used in a negative sense: if a string of 1s (representing your number in unary form) matches this pattern, it's not prime. If it doesn't match, then it is prime.Again, this is quite impractical for real use cases as the unary representation is extremely inefficient, and the computation grows quickly with larger numbers, but it's a neat way of showing how flexible and powerful regular expressions can be.\"replyGuidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- The article discusses a regular expression that can be used to check for prime numbers.\n- The regular expression matches strings of consecutive 1's and checks if the length of the string is prime.\n- The regular expression is not technically a regular expression in the formal sense, as it uses backreferences to count the number of 1's."
  },
  {
    "id": 36416131,
    "timestamp": 1687338033,
    "title": "Apple could force a 111-year-old fruit company to change its Apple logo",
    "url": "https://www.androidauthority.com/apple-swiss-fruit-company-change-logo-3336622/",
    "hn_url": "http://news.ycombinator.com/item?id=36416131",
    "content": "NewsFeatures & opinionsReviewsThe bestHow-to's & guidesAll topicsMoreBest daily dealsAffiliate links on Android Authority may earn us a commission. Learn more.GENERAL TECHNOLOGYApple could force a 111-year-old fruit company to change its apple logoApple's aggressive trademark quest could result in a century-old fruit company being forced to change its apple logo.By Hadlee Simons\u2022June 19, 2023Oliver Cragg / Android AuthorityTL;DRApple is reportedly attempting to gain IP rights to images of apples in Switzerland.This could result in a 111-year-old fruit company being forced to change its logo.Apple is no stranger to fruit-based litigation, but it seems like the company\u2019s latest venture might be the strangest one yet. The iPhone maker is currently attempting to gain intellectual property rights to images of actual apples in Switzerland, Wired UK reports.If Apple is successful with its bid, this could result in Fruit Union Suisse, a 111-year-old company, being forced to change its logo (seen below).Les Fruits Suisses\u201cWe have a hard time understanding this, because it\u2019s not like they\u2019re trying to protect their bitten apple,\u201d Fruit Union Suisse director Jimmy Mari\u00e9thoz was quoted as saying by the outlet.\u201cTheir objective here is really to own the rights to an actual apple, which, for us, is something that is really almost universal\u2026 that should be free for everyone to use.\u201dWired notes that Apple first tried to secure the fruit trademark in Switzerland in 2017, when it filed an application for a black-and-white depiction of a Granny Smith apple. Indeed, it applied for an image of a whole apple rather than its trademark apple with a bite.The country\u2019s IP institute partially granted Apple\u2019s request last month, but only for some of the product categories the iPhone maker sought. The institute cited a legal principle that declares generic pictures of common goods to be in the public domain. Apple filed an appeal against the ruling in April 2023.Read More On This TopiciOS 16.5.1 fixes critical iMessage security flaw, you should update immediately!Not a sports fan? YouTube TV tests new multiview stream combos just for you.Google Nest cameras and doorbells are down for many people (Update: Fixed)Powered by PlaywireIt\u2019s not the first time we\u2019ve seen big tech companies attempt to trademark common terms or goods. However, a study by the Tech Transparency Project found that Apple filed more trademark oppositions over a three-year period than Amazon, Google, Microsoft, and Facebook combined.NEWSAppleCommentsDeal: 85% off Office Professional Plus 2021, and more Microsoft Office dealsDeals",
    "summary": "- Apple is trying to gain intellectual property rights to images of actual apples in Switzerland. This move could potentially force a 111-year-old fruit company to change its logo.\n- The fruit company, Fruit Union Suisse, is perplexed by Apple's attempt to own the rights to an actual apple image, which they believe should be free for everyone to use.\n- Apple's bid to secure the fruit trademark in Switzerland started in 2017 and they recently appealed against a partial granting of their request.",
    "hn_title": "Apple could force a 111-year-old fruit company to change its Apple logo",
    "original_title": "Apple could force a 111-year-old fruit company to change its Apple logo",
    "score": 323,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit login[dupe] Apple could force a 111-year-old fruit company to change its Apple logo (androidauthority.com)323 points by xslvrxslwt 1 day ago | hide | past | favorite | 179 commentsjsnell 1 day ago | next [\u2013]Dupe: https://news.ycombinator.com/item?id=36390600replycjs_ac 23 hours ago | prev | next [\u2013]When it comes to discussing intellectual property laws, it's important to remember where they came from.I live in High Wycombe, a market town in the South East of England. In the nineteenth century, Wycombe was known as the centre of chair manufacturing. The chairs were initially transported by barge down the Wye and Thames Rivers to Windsor, where they were sold, and consequently became known as Windsor chairs. They were exported across the British Empire and to America, and were very popular.The chair trade in Wycombe started in a particularly cold winter, when it was too cold for the farmhands to work outdoors. The farmhands were taught how to make the round parts of the chairs by the town wheelwright (who otherwise made wheels for the carts made by the town cartwright). In recognition of this, a wheel design was cut into the backs of the chairs as a decorative device. This design became the distinguishing mark of a chair made in Wycombe.A chair factory opened in Birmingham, but found that their chairs didn't sell as well... until they started adding the wheel design into their chairs. Business was good for the Birmingham factory, until some of the Wycombe lads paid them a visit. Strong words were had, but the Birmingham factory continued making chairs with wheel designs for a few weeks, until the factory mysteriously burned down in the middle of the night.The wheel design functioned as an early trademark: it clearly and unambiguously attested the provenance of the item. Trademarks are a consumer protection mechanism: it is the buyer who needs to know the provenance of the item in the absence of a trustworthy seller.To the man on the Clapham omnibus[0], the presence or absence of the wheel design was the only attestation to the chair's origin: this trademark was a necessary innovation. However, if the gentleman from Clapham is unable to distinguish between an apple grown in Switzerland and a piece of computing machinery manufactured in China according to a design from California, one wonders whether a trademark would be of any help to him.[0]: https://en.wikipedia.org/wiki/Man_on_the_Clapham_omnibusreplyvarjag 22 hours ago | parent | next [\u2013]> However, if the gentleman from Clapham is unable to distinguish between an apple grown in Switzerland and a piece of computing machinery manufactured in China according to a design from California, one wonders whether a trademark would be of any help to him.Apple Records would like to have a word.replyfmajid 22 hours ago | root | parent | next [\u2013]The Beatles extorted Apple Computer, twice, for their trademark.replykramerger 21 hours ago | root | parent | next [\u2013]Apple Computer broke the first agreement that stated they would never get in the music businessYou know, like iTunes...replyanother2another 21 hours ago | root | parent | next [\u2013]Yeah? Sosumi(I actually loved that sound and used it on my Performa Mac lots)replytdy721 21 hours ago | root | parent | prev | next [\u2013]Because Steve took the name off a Beatles Album. It wasn't extortionreplygwbas1c 20 hours ago | root | parent | next [\u2013]He got the idea up on a farm when he did an Apple fast. I suspect LSD was involved.replyphilistine 6 hours ago | root | parent | next [\u2013]Do we need an origin story for coming up with the word Apple?I mean, it\u2019s an Apple.replyvGPU 20 hours ago | root | parent | prev | next [\u2013]I\u2019d be more surprised if LSD wasn't involved.replyHWR_14 21 hours ago | root | parent | prev | next [\u2013]Took the name from the Beatles [edited thanks to pdpi] corporation, with its own trademarks.replypdpi 19 hours ago | root | parent | next [\u2013]Beatles, not Beetles. It's a dumb pun on \"beat\".replylost_tourist 15 hours ago | root | parent | next [\u2013]It's a band name, not a scholarly article titlereplydspillett 19 hours ago | parent | prev | next [\u2013]International IP laws come from the time of Dickens, when people were copying his books in the states because he couldn't enforce ownership from over here.America didn't really play ball until the situation started affecting their own economy (Americans being copied by people in other countries, or other Americans, enough to affect the national bottom line).China is in a similar state: international IP isn't enforced, and the government just pays lip service to the idea, while it is a net benefit for their country's economy for copying to be rife. This will flip when the issue becomes a net detriment to their bottom line.The same game has been played any number of times at smaller scales too, though in the smaller cases the big boys tend to force the \u201cbeing a net detriment\u201d with sanctions and other indirect influences (or simply by buying out the smaller concerns).replycjs_ac 18 hours ago | root | parent | next [\u2013]> International IP laws come from the time of Dickens, when people were copying his books in the states because he couldn't enforce ownership from over here.Copyright is a different game to trademarks. Copyright has its origins in the Statute of Anne (also known as the Copyright Act 1710), and was designed specifically to protect the investment of publishers and printers in royalties to authors: copyright protects neither producers nor consumers, but rather distributors, whereas trademarks protect consumers.The idea of extraterritorial and multi-jurisdictional copyright is, as you say, a more recent innovation; the American film industry is based in Hollywood because California refused to enforce Edison's claim on all films made with his cameras.> The same game has been played any number of times at smaller scales too, though in the smaller cases the big boys tend to force the \u201cbeing a net detriment\u201d with sanctions and other indirect influences (or simply by buying out the smaller concerns).All of international politics works like this. Western politicians and diplomats are naturally supportive of the 'rules-based order' we keep hearing about: we wrote the rules in our favour after the Second World War.replyflohofwoe 20 hours ago | parent | prev | next [\u2013]...and then \"3rd-world\" 19th century Germany came along, and with its cheap workforce and by ignoring British trademarks and copyrights flooded the market with cheaper copies of superior quality, and that's how \"Made in Germany\" was born ;)replytdy721 21 hours ago | parent | prev | next [\u2013]Also good to remember that Apple Inc. infringed on Apple Corps until 2007.https://en.wikipedia.org/wiki/Apple_Corps_v_Apple_ComputerreplytotalZero 21 hours ago | parent | prev | next [\u2013]> providenceIn this case, it seems the word you are looking for is \"provenance.\"replyaubanel 19 hours ago | root | parent | next [\u2013]More explanation: Provenance comes from the Latin \"pro\" (from) and \"venire\" (come), so that's where an item comes from, while Providence (capital P) is \"the care and control of God or of a force that is not human in origin\" (Cambridge dictionary).replycjs_ac 21 hours ago | root | parent | prev | next [\u2013]It is, thank you! I always get those two mixed up.replyAlecSchueler 20 hours ago | root | parent | next [\u2013]Providence is like providing something (provide ence) and Provenance is like it stems from something like a vine (pro vine ance).replyaubanel 19 hours ago | root | parent | next [\u2013]Wait, that's completely false ! Provenance comes from the Latin \"pro\" (from) and \"venire\" (come), so that's where an item comes from, while Providence (capital P) is \"the care and control of God or of a force that is not human in origin\" according to Cambridge dictionary.replyAlecSchueler 14 hours ago | root | parent | next [\u2013]Apologies I didn't mean to suggest I was sharing the actual etymologies, it was only intended as an mnemonic for the commenter above! Thanks for sharing the actual roots though, no pun intended ;)replysnet0 18 hours ago | root | parent | prev | next [\u2013]I believe this was more a statement of mnemonic than a statement of fact. I appreciate your etymology, though. That also can function as a mnemonic.replymywittyname 19 hours ago | root | parent | prev | next [\u2013]This is very interesting!replylost_tourist 15 hours ago | root | parent | prev | next [\u2013]What about Divine Provenance?replyoniony 22 hours ago | parent | prev | next [\u2013]So you're saying trademarks prevent arson and violence.replyajb 21 hours ago | root | parent | next [\u2013]According to the economist Hernando de Soto Polar, not just trademarks but all property is like that unless you have a formal ownership system which is defended by the legal system. If people can't rely on the legal system to defend their property, as sometimes happens in third world countries, they have to spend significant effort cultivating their neighbours - if your neighbours think you are a worthless arsehole, you might find that someone else has moved onto your farm and your no-one will do anything about it. But if your neighbours like you, they will fight alongside you for your rights over it.replyCthulhu_ 21 hours ago | root | parent | prev | next [\u2013]I mean if it wasn't for the rule of law, that's what enforcement would look like.replyatchoo 22 hours ago | root | parent | prev | next [\u2013]Or they are reward for it...replyyard2010 21 hours ago | root | parent | prev | next [\u2013]Well nothing can prevent that if you're making some people mad enoughreplyoleganza 22 hours ago | root | parent | prev | next [\u2013]As any laws, regulations and private agreements: they provide an up-front framework for conduct so that people do not get creative in the heat of the moment.replygeoduck14 22 hours ago | root | parent | next [\u2013]>so that people do not get creative in the heat of the moment.Before trademarks: How dare you produce fake watches that look like mine! I'm so mad... I could crochet an entire BLANKET!replyClumsyPilot 22 hours ago | root | parent | prev | next [\u2013]Definiyyely, we will have a tidal wave of arsonand violence withng 3 to 5 years due to climate changje and lack of lawreplyClumsyPilot 20 hours ago | root | parent | next [\u2013]To all the downvoters - do you seriously believe, that once damage from climate change starts to bite, and millipns of people are displaced, there won't be any social disorder?replyfrumper 19 hours ago | root | parent | next [\u2013]Maybe they object to your timeline.replynhumrich 19 hours ago | root | parent | prev | next [\u2013]Maybe the downvotea are due to the low quality of the post due to lots of typosreply_dan 20 hours ago | parent | prev | next [\u2013]Wycombe is really close to where I grew up but I did not know this.replymattmaroon 21 hours ago | prev | next [\u2013]This title is clickbait. If you read the article, it\u2019s pretty clear that Apple has taken no action against the fruit company and there\u2019s no reason to think they will, or that they\u2019d even be able to if granted the trademarks requested. It also seems as if they\u2019re trying to retain rights to use the whole apple for specific products.From the source:\u201c Apple's attempts to secure the trademark in Switzerland go as far back as 2017, when the Cupertino, California\u2013based giant submitted an application to the Swiss Institute of Intellectual Property (IPI) requesting the IP rights for a realistic, black-and-white depiction of an apple variety known as the Granny Smith\u2014the generic green apple. The request covered an extensive list of potential uses\u2014mostly on electronic, digital, and audiovisual consumer goods and hardware. Following a protracted back-and-forth between both parties, the IPI partially granted Apple\u2019s request last fall, saying that Apple could have rights relating to only some of the goods it wanted, citing a legal principle that considers generic images of common goods\u2014like apples\u2014to be in the public domain. In the spring, Apple launched an appeal.\u201dSo what\u2019s really happening: Apple is trying to prevent others from using apples, including ones that don\u2019t look particularly like Apple\u2019s apple (2d, monochrome, bite out of it) from being used to compete with them. You couldn\u2019t start \u201cgranny smith\u2019s headphones and use an apple as your logo.You can debate if this is good or bad but any mention of the fruit company is meritless sensationalism.replyshp0ngle 20 hours ago | parent | next [\u2013]On one hand yeah this makes sense and is editorialised.On the other hand\u2026 Apple is now a behemoth that does fitness programs, have their TV service, now enter into banking.What if there is a TV program about apples? What if the fruit union ventures into financing? But yeah that\u2019s all a different problem than \u201cApple is forcing a fruit company to change its logo\u201dreplymattmaroon 8 hours ago | root | parent | next [\u2013]If anything doing so would be a risk to Apple in most countries since the others were doing it first.replyjudge2020 20 hours ago | parent | prev | next [\u2013]The appeal (download) https://www.bvger.ch/dam/bvger/de/dokumente/2023/04/B-4493-2... per Wired UK https://www.wired.co.uk/article/apple-vs-apples-trademark-ba...Google Translate:The appellant is the holder of the international registration IR 1'028'240 [Apple] (fig.) based in the USA, which is claimed for Class 9 goods. The goods include im Essential sound, video and film recordings and corresponding data carriers.The registration involves the following figurative mark:(real apple)The complainant applied for the protection of the disputed sign to be extended in Switzerland. The Swiss Federal Institute for Intellectual Property dismissed the request from September 2, 2022 partially withdrawn. As justification, the institute stated that the figurative mark belong to the commons. The disputed sign shows a true-to-life image of an apple and will be understood as an indication of the thematic content of part of the disputed goods. The sign thus lacks the necessary distinctiveness. Against this raised the Complainant Complaint to the Federal Administrative Court. She essentially complains not every thematic reference for the entry is a hindrance. The distinctiveness of A trademark only occurs when there is a sufficiently specific relationship between the sign and the goods or services lost. This reference is absent in the present case.replyas_bntd 8 hours ago | parent | prev | next [\u2013]> So what\u2019s really happening: Apple is trying to prevent others from using apples, including ones that don\u2019t look particularly like Apple\u2019s apple (2d, monochrome, bite out of it) from being used to compete with them. You couldn\u2019t start \u201cgranny smith\u2019s headphones and use an apple as your logo.As far as I can tell, the apple in the trademark application looks exactly the same (except for the color) as the green apple in the Apple Records logo.replyVarqu 20 hours ago | parent | prev | next [\u2013]There should be a penalty for such bogus trademark claims, best as % of the global revenue. Then, maybe, they would learn that a corporation cannot bully others only because it has unlimited legal resources.replymattmaroon 15 hours ago | root | parent | next [\u2013]There is a penalty! If someone else were using it first, they could sue Apple, and that is in fact exactly what happened.https://en.m.wikipedia.org/wiki/Apple_Corps_v_Apple_Computerreplyunderdeserver 18 hours ago | parent | prev | next [\u2013]Yep.I also want to trust the Swiss courts, much more than I'd trust the American courts, to no accept any Apple claim against the Swiss company.replymattmaroon 15 hours ago | root | parent | next [\u2013]American courts definitely would not. Apple itself got away with being named after Apple Corps (the Beatles\u2019 licensing arm) until they got into music.Also in the US we have first use, which is similar to how prior art works in patents. If Apple started selling apples, they\u2019d be the ones at risk of losing a lawsuit.replypraptak 1 day ago | prev | next [\u2013]Trademark protection should only apply where it prevents customer confusion.A consumer electronics company has no business in preventing anyone from using a similar logo for selling fruit.replyPaul-Craft 1 day ago | parent | next [\u2013]Agreed 100%. The logos are not even vaguely similar, either! Besides, didn't we already go through this decades ago with Apple Records?\u00af\\\\\\_ (\u30c4)_/\u00afProbably a case of \"lawyers gonna lawyer,\" because US trademark law demands that one vigorously defend their trademark, lest they lose it.SMHhttps://en.wikipedia.org/wiki/Apple_Corps_v_Apple_Computerreplyphpisthebest 22 hours ago | root | parent | next [\u2013]>>trademark law demands that one vigorously defend their trademark, lest they lose it.This myth, and \"cant yell fire\" are two of the most pervasive false legal statements on the internet.\"Quite simply, the view that a trademark holder must trawl the internet and respond to every unauthorized use (or even every infringing use) is a myth. It\u2019s great for lawyers, but irritating and expensive for everyone else. And when done clumsily or maliciously, it chills free expression.\"-- https://www.eff.org/deeplinks/2013/11/trademark-law-does-not...replyClosi 21 hours ago | root | parent | next [\u2013]It\u2019s not entirely a myth, see a list of trademarks that have been \u201clost\u201d due to insufficient protection or other reasons here:https://en.m.wikipedia.org/wiki/List_of_generic_and_generici...There are definitely examples where brandnames have moved into common usage and then lose their trademark.replyatchoo 21 hours ago | root | parent | next [\u2013]I can't recall seeing trademark aggression that had anything to do with genericism though. Some marketing copy maybe but not as challenges to other company's marks.Genericism is within the user/audience/market rather than other businesses. The cause of genericism is total cultural domination - such widespread success that it becomes the noun. I wonder how close \"iPhone\" and \"iPad\" might be to genericide.Is there a test for it? If you put an Android Tablet on a table and asked a test subject to pass you the iPad, I think we can predict the overwhelming outcome.replyClosi 20 hours ago | root | parent | next [\u2013]Well if another competitor starts using your protected term and you don\u2019t protect it, it is more likely to become generic.(Ie if Apple does not protect the word iPhone and then Google and Samsung use the term iPhone for 5 years unchallenged, it risks becoming a generic name for a smartphone)replyjakelazaroff 20 hours ago | root | parent | prev | next [\u2013]I mean, yeah, because they probably know what an iPad is and can infer what you meant. That just means the brand name is recognized, not that it\u2019s generic. If you put a Coke on the table and asked the subject to pass the Pepsi (or vice versa) it would probably work too.replykiicia 21 hours ago | root | parent | prev | next [\u2013]No seller of apple fruits is \u201criding on apple logo/name bandwagon\u201d, it won\u2019t be genericized because of fruit existing as long as memoryGenericization is only for newly invented words/phrases, it\u2019s apple that is actively stealing common words and makes trademarks out of themreplyIzkata 20 hours ago | root | parent | prev | next [\u2013]> and \"cant yell fire\" are two of the most pervasive false legal statements on the internet.IIRC, this one used to be true but was overturned.replyObscurity4340 21 hours ago | root | parent | prev | next [\u2013]Come to think of it, are there actually any anecdata or in the caselaw where companies that didn't litigate every potential infringement case sufficiently paid the hypothetical/mythical price of genericizatio. Or whatever the implied threat is...replygiancarlostoro 21 hours ago | root | parent | prev | next [\u2013]They still do it as if it were not a myth is the problem.replydghughes 23 hours ago | root | parent | prev | next [\u2013]Apple Computer Inc should always be used in advertising and on products. Shortening it to just Apple may confuse people wanting to buy apples. The Apple Store is misleading they don't sell fruit.replyharry8 22 hours ago | root | parent | next [\u2013]> Shortening it to just Apple may confuse people wanting to buy apples.Or fans of Lennon, McCartney, Harrison & Starr who definitely had \"Apple\" as their corporate name first.replyusrusr 22 hours ago | root | parent | next [\u2013]If Lennon was still alive they'd probably have sued him for wearing \"Steve Jobs glasses\" by now...replyalpaca128 22 hours ago | root | parent | prev | next [\u2013]> Probably a case of \"lawyers gonna lawyer,\"It's actually a case of \"news gonna clickbait\". Afaik nothing really happened here other than a Swiss company voicing concerns about the possibility of Apple registering a trademark for more than just specific product categories.replymorebortplates 21 hours ago | root | parent | prev | next [\u2013]Then Apple must be very afraid to lose it's trademark, I guess.An investigation in 2022 by the Tech Transparency Project, a nonprofit that researches Big Tech, found that between 2019 and 2021, Apple filed more trademark oppositions\u2014attempts to enforce its IP over other companies\u2014than Microsoft, Facebook, Amazon, and Google combined. Those companies also have trademarked common terms such as \u201cWindows\u201d or \u201cPrime.\u201dhttps://www.wired.com/story/apple-vs-apples-trademark-battle...replyjudge2020 20 hours ago | root | parent | prev | next [\u2013]For reference, Apple has not taken action against the company with the logo in the article. https://news.ycombinator.com/item?id=36417785replyotherme123 20 hours ago | root | parent | next [\u2013]Because the first step is to get exclusive apple trademark for everything, then force everyone out.The article say Apple was granted the apple trademark for phones and other electronics, but Apple is fighting to get everything. Why would they fight if not to bully everyone?replyjudge2020 19 hours ago | root | parent | next [\u2013]From the appeal (download): https://www.bvger.ch/dam/bvger/de/dokumente/2023/04/B-4493-2...Just using Google Translate, it seems like they want the image of a true-to-life apple to be a trademark, but still only for \"Essential sound, video and film recordings and corresponding data carriers\". Nowhere in the appeal does it sound like they're trying to extend it to more classes of goods like actual fruit.replywavefunction 23 hours ago | root | parent | prev | next [\u2013]>US trademark law demands that one vigorously defend their trademark, lest they lose itI don't mean this as a criticism of your post and it's more of a launchpad for my own, but this always comes up as \"the defense\" of bad trademark enforcement actions and it really seems like papering over the problem rather than a worthy explanation of anything. \"It's always been awful and bad\" has rarely evinced much enthusiasm from anyone and I wonder if there's any chance of changing this rickety IP system.replyzakki 22 hours ago | root | parent | next [\u2013]Especially why should Apple enforce US Law in Swiss?replyvarispeed 23 hours ago | root | parent | prev | next [\u2013]Another interesting case, where company has losthttps://casetext.com/case/fitbug-ltd-v-fitbit-inc-2replyprotontypes 22 hours ago | parent | prev | next [\u2013]This is one of those typical cases of legal departments that have run out of work and are looking for legitimacy for their own existence. Many lawyers are able to expand their own economic sphere without generating any added value for the general public.replySeanLuke 18 hours ago | parent | prev | next [\u2013]That's not true. For better or for worse, trademark protection specifically extends to beyond mere customer confusion to the murky areas of \"tarnishment\" and \"blurring\" in the case of \"famous\" trademarks.There is a clause in trademark law (both Swiss and US) which allows owners of \"famous\" trademarks to pursue infringement even when the marks in question do not overlap in commerce areas. Apple's trademark certainly meets the \"famous\" standard.In Swiss law, see Article 15:https://www.fedlex.admin.ch/eli/cc/1993/274_274_274/enIn US law, see section (c) 1 of:https://www.law.cornell.edu/uscode/text/15/1125I imagine the reason for these clauses is, say, to prevent someone from making a Nike Swoosh Refrigerator with the purpose of selling units by drawing from Nike's luster.replyyard2010 21 hours ago | parent | prev | next [\u2013]When it comes to the US, the money speaks, not the logic..replysomat 21 hours ago | parent | prev | next [\u2013]My understanding is that the more generic a trademark is (cough) apple (cough) the more it is tied to a specific industry. This is just a case of bored lawyers at apple. What really sucks is that for apple this is nothing, the lawyers are already payed for who cares if they overstep their authority a bit. but for a small company hit with a bogus trademark dispute this is a major traumatic expensive event.https://en.wikipedia.org/wiki/Trademark#Limits_and_defenses_...replynazka 21 hours ago | parent | prev | next [\u2013]I Will get confused if I was going to see the exact Apple logo on a fruit box though. What about a music record with the same logo before Apple was in the music industry?I think any kind of confusion is what raise the question of if it should be ok or not. But here the logos don\u2019t even match\u2026replychii 22 hours ago | parent | prev | next [\u2013]who knows, Apple (the computing company) might be considering selling apple (the fruit) as they reach market saturation in computers!replykonfusinomicon 22 hours ago | root | parent | next [\u2013]they should branch into selling vinyl windows and really throw the world offreplyreportgunner 21 hours ago | root | parent | next [\u2013]Would be extra cool if \"vinyl\" is a new name for a design concept that shall replace skeumorphism.replykonfusinomicon 21 hours ago | root | parent | next [\u2013]the calculator app has never felt so warm, just like the artist intendedreplypapito 23 hours ago | parent | prev | next [\u2013]Lord forbid the fruit company and its employees make an extra buck when the customers get confused and buy a bunch of fruit instead of an iPhone. \"So, how do I start the metaverse on this...\"I understand the whole thing about positive association with a successful company, but come on. How insecure can you be?replyLoic 22 hours ago | root | parent | next [\u2013]Effectively, Apple infringe on the trademark of the apple producers to give the feeling that the electronic devices they provide are healthy and good for you.replygrey_earthling 23 hours ago | prev | next [\u2013]If Apple want to argue that the logos are confusingly similar, well OK then: the newer company should be obliged to change their logo.replyrjmunro 23 hours ago | parent | next [\u2013]You mean the newer logo should be changed - I don't think the fruit company has had the same logo for 111 years.replyvetinari 23 hours ago | root | parent | next [\u2013]Neither did Apple Inc.; the current flat one is from 2017.replydenkquer 21 hours ago | root | parent | next [\u2013]This is incorrect. Old company logos don't lose their trademark. This logos shape dates back to 1977.replyvetinari 20 hours ago | root | parent | next [\u2013]It is correct; you are moving the goalpost.If they were using the 1977 logo, including the color scheme, it would be impossible to argue, that the similarity can lead to confusion of them and the point of the article would be moot.replylondons_explore 23 hours ago | parent | prev | next [\u2013]> newerI think you misspelled \"with a bigger legal budget\".replybee_rider 21 hours ago | parent | prev | next [\u2013]Although your method works out fine in this case, IMO the fact that one company literally sells apples should give them extra claim the using an apple as a logo.replytraveler01 22 hours ago | parent | prev | next [\u2013]So technically Apple should change their logo?replyzakki 22 hours ago | root | parent | next [\u2013]Yes.replychaosbolt 22 hours ago | root | parent | prev | next [\u2013]Well one is a fruit company and apples are fruits and it did it first, and the other is a tech company that came after it and is saying the logos are similar, in an ideal world a judge would say ok I believe you now you change it.But hey, Apple is a 2 trillion dollar company, wars have been started for a lot less, so the discussion isn't even worth having unless you also believe in Santa.replyClumsyPilot 22 hours ago | root | parent | next [\u2013]> in an ideal world a judge would say ok I believe you now you change it.first they have to pay compensation for all theyears of misleading customersreplyant6n 21 hours ago | root | parent | prev | next [\u2013]Well a Swiss judge can only tell Apple to use a different brand in Switzerland. I doubt the Apple Switzerland business is worth 2 Trillion.replytraveler01 1 hour ago | root | parent | next [\u2013]Well they can endup agreeing Apple Switzerland will never use the brand for the same areas that Apple US does.replyraldi 21 hours ago | parent | prev | next [\u2013]So if Microsoft were to change their logo to look like Google\u2019s, Google would have to find a new logo?replyJW_00000 23 hours ago | prev | next [\u2013]The title is quite deceptive. Reading the Wired article, Apple seems to be pursuing a trademark in Switzerland on a depiction of an apple (without bite mark, and in black-and-white). The Swiss authorities granted this but only on limited product categories. Apple filed an appeal about this, which is ongoing.Now, the Fruit Union is fear-mongering / spreading the message that, if this appeal is granted, they would be forced to change their logo. However, it seems there is no direct threat from Apple to the Fruit Union. Also, it seems unlikely Apple's appeal will actually be granted, as there is \"a legal principle that declares generic pictures of common goods to be in the public domain\".replyatchoo 22 hours ago | parent | next [\u2013]> without bite markWhy? Apple isn't going to brand products with that surely? Sounds like there is yet more back story i.e. trademark trolling - Apple only applied for that mark to go after other people.replyfredoralive 21 hours ago | root | parent | next [\u2013]It's the logo for Apple Corps, The Beatles' company. The final settlement for the trademark dispute between the two Apples saw Apple Corps's trademarks transferred to Apple [Computer] Inc and licenced back to Apple Corps Ltd.I suspect the agreement between Apple and Apple probably requires Apple Inc to take reasonable steps to protect the ex-Apple Corps trademarks that they now own, such as filing for registration if needed.Then someone not understanding trademark law and that registering a trademark for a Granny Smith apple as a logo for a record label doesn't mean you're trying to claim all apples for every use.replyatchoo 21 hours ago | root | parent | next [\u2013]Ugh, thanks.That shows the absurdity of trademark infringement and confusion if a company deliberately licenses their trademark to an independent company. I'm surprised they can be said to be using a mark if all they are doing is licensing it to someone else. IMHO it should be used in a court as a self-admission that there are no confusion concerns and it's just legally wrapped asset fuckery.replyaardvarkr 20 hours ago | root | parent | prev | next [\u2013]Wow, finally someone with the real story here. Thanks for explaining the connection to Apple Corpreplynostromo 21 hours ago | root | parent | prev | next [\u2013]Because they don\u2019t want people to sell laptops and phones with an uneaten apple on them. It\u2019s pretty simple.The article is written to be ragebait, and judging by the comments here, it\u2019s been successful.replywkat4242 20 hours ago | root | parent | next [\u2013]If that were the case, why do they apply for all categories instead of just electronics?replyeddieroger 21 hours ago | parent | prev | next [\u2013]> The title is quite deceptive.Surely a blog post from Android Authority, a site dedicated to Apple's biggest competitor for mobile ecosystems, wouldn't sensationalize an article for the purposes of clicks.replyEcstatify 1 day ago | prev | next [\u2013]Tim Cook won\u2019t rest until the apple fruit gets renamed to \u201ctrademark infringement\u201dreplym463 23 hours ago | parent | next [\u2013]I wonder if line6 could rename the ipod to \"BHA\" (B. H. Apple)https://en.wikipedia.org/wiki/Pod_(amp_modeler)https://en.wikipedia.org/wiki/Carl_Sagan#Personal_life_and_b...replyalwayslikethis 23 hours ago | parent | prev | next [\u2013]A trademark infringement a day keeps the doctor away.replyhef19898 23 hours ago | parent | prev | next [\u2013]Underrated comment. And a good name for a fruit retailer!replystOneskull 22 hours ago | root | parent | next [\u2013]trademark infringements and oranges..replymihaic 20 hours ago | prev | next [\u2013]When people say something like \"Apple wants\", they seem to personify a company. In the end, there are some lawyers and middle managers that push for something to happen. These are not the CEO, but rather the corporate bureaucrats that exist for the sole purpose of expanding the reach of their master.The bureaucrats only stop when public opinion/regulators force the executives to step in and issue a directive to stop the nonsense.If any Apple executive is listening, please stop the nonsense, it's only hurting your brand.replyxslvrxslwt 1 day ago | prev | next [\u2013]How the heck does one copyright a whole-ass image of an apple, wtf?replyworld-set-free 1 day ago | parent | next [\u2013]It is suprising what you can do with hundreds of lawyers and several congressmen.replyamarant 1 day ago | root | parent | next [\u2013]It's especially surprising considering those congressmen should in theory have exactly 0 power over anything in the country where this lawsuit is taking place.But honestly, Apple has bitten a bitter fruit on this one; there's no way they'll win this.replysaiya-jin 23 hours ago | root | parent | next [\u2013]Well, they look like bunch of arrogant clueless idiots to whole world (I am seeing this story in various tabloids across Europe), if that was their mission then congrats to success.It will also alienate non-trivial part of Swiss population, who are (rightly) patriotic to everything Swiss-made or grown. Few millions of direct losses in one of the wealthiest (albeit small) markets globally.Is somebody from brexit team, ie Boris Johnson employed as consultant on this brilliantly executed move?replyDrScientist 23 hours ago | root | parent | prev | next [\u2013]You are being slightly US centric there - while what you say may be true in the US - I don't think congressmen have much influence in the Swiss Courts.Lawyer point still stands of course.replyCatWChainsaw 20 hours ago | root | parent | prev | next [\u2013](Which simplifies down to \"an obscene amount of money to throw at lawsuits\".)replyas_bntd 8 hours ago | parent | prev | next [\u2013]It is just this logo: https://en.wikipedia.org/wiki/Apple_CorpsWARNING, a download link: https://www.bvger.ch/dam/bvger/de/dokumente/2023/04/B-4493-2...replyhnbad 1 day ago | parent | prev | next [\u2013]Trademark, not copyright. The weird thing is the expectation that trademarking an apple could be done in a way that is broad enough to cover all apple-based logos across all industries. I'm not sure how accurate this portrayal is given that Apple does indeed not sell fruit and the logo in question is likely pre-existing and does not actually resemble anything Apple has likely tried to file.Trade dress or so-called \"design patents\" are a different matter (see Apple suing over every smartphone copying its design of \"a slate of glass with a camera cut-out and maybe a button\" or German Telekom pretty much holding the exclusive rights to a specific shade of magenta in tech-adjacent products).replyamarant 1 day ago | root | parent | next [\u2013]The \"infringing party\" has existed and used this logo since a good 50 years before Apple Inc was founded.I kinda hope the Swiss Apple company turns this around and sues Apple for trademark infringement, since they can prove using it for longer, and according to Apples own argument, the fact that they're in completely different industries apparently doesn't matter.Would be fun to see Tim Cook announce the new \"Banana iPhone\" as a result of this suit getting turned aroundreplyRetric 23 hours ago | root | parent | next [\u2013]First their isn\u2019t a lawsuit, just someone concerned about hypotheticals.Neither party is infringing until Apple sells actual fruit or the fruit company starts making tablets etc. The only point of contention is likely Apple making Movies and other entertainment which could create conflict if the fruit company wants to make a documentary at some point in the future.replyta1243 23 hours ago | root | parent | prev | next [\u2013]It's a phone with appeal!replyfredoralive 23 hours ago | root | parent | prev | next [\u2013]It's the logo for The Beatles' Apple Corps (whose trademarks now belong to Apple Inc as part of the settlement of the whole Apple v Apple thing about 15 years ago), so the fields it makes claims on[1] are mostly related to things like records and DVDs, so it seems odd if Apple Inc really are trying to use it to sue this association (are they actually suing?).[1] https://www3.wipo.int/madrid/monitor/en/showData.jsp?ID=ROM....replyhnbad 23 hours ago | root | parent | next [\u2013]I seem to have misread this part of the article:> Wired notes that Apple first tried to secure the fruit trademark in Switzerland in 2017, when it filed an application for a black-and-white depiction of a Granny Smith apple. Indeed, it applied for an image of a whole apple rather than its trademark apple with a bite.This seems to me like a (intentional?) misunderstanding of trademark law as having a trademark for the grayscale picture of an apple would merely entail that grayscale picture of an apple, not all other apples, nor even necessarily another grayscale picture of a different apple from a different perspective.What I read into it is that Apple filed for a generic apple trademark rather than either of the pre-existing logos it already owned the trademarks for in other markets.Given the source's likely bias, I'm inclined to believe the article is written in bad faith and there is no realistic threat to the actual fruit company.replyClumsyPilot 1 day ago | root | parent | prev | next [\u2013]> logo in question is likely pre-existingIf the logo exists longer than Apple does, isn't Apple the one commiting infringement?Isn't this an open and shut case?replytinus_hn 1 day ago | parent | prev | next [\u2013]One does not. If an image is created, it is copyrighted automatically. But copyright is not what this article is about. It\u2019s about trademarks.replylittlestymaar 1 day ago | parent | prev | next [\u2013]Nitpick: it's not copyright, trademarks are part of Industrial property[1] and have different legislation.[1]: https://en.wikipedia.org/wiki/Industrial_propertyreplyNoGravitas 21 hours ago | prev | next [\u2013]Deeply ironic considering Apple Computer's fraught trademark history with Apple Records.https://en.wikipedia.org/wiki/Apple_Corps_v_Apple_Computerreplyas_bntd 8 hours ago | parent | next [\u2013]That is actually the source of this. They are trying to register Apple Corps' trademark/logo.replystjohnswarts 15 hours ago | parent | prev | next [\u2013]I think the word you're looking for is hypocritical :)replyexpertentipp 1 day ago | prev | next [\u2013]You are going at war with Poland, Sir.https://en.wikipedia.org/wiki/List_of_countries_by_apple_pro...replymagnat 23 hours ago | parent | next [\u2013]They already did in 2015, when they (unsuccessfully) sued a.pl (polish online grocery store) for their domain name.replykachnuv_ocasek 23 hours ago | root | parent | next [\u2013]\u2026what? I just cannot comprehend what Apple\u2019s strategy is. Can somebody with more business intuition please explain to me what Apple\u2019s endgame might be with all these litigations?replynirimda 22 hours ago | root | parent | next [\u2013]Much fewer people hear and get offended about the lawsuit vs their benefit from having all the related names/trademark/domain, so it's simply the benefit of obtaining the name/trademark/domain.replysbuk 22 hours ago | root | parent | prev | next [\u2013]Apple 'owns' apple.pl  DOMAIN NAME:      apple.pl  registrant type:    organization  nameservers:      a.ns.apple.com.              b.ns.apple.com.              c.ns.apple.com.              d.ns.apple.com.   created:        1998.08.26 13:00:00  last modified:     2023.01.13 18:06:41  renewal date:     2023.08.25 14:00:00  option created:    2023.04.05 15:47:12  option expiration date:    2026.04.05 15:47:12replyjadamson 22 hours ago | root | parent | next [\u2013]The domain in question was literally \"a.pl\"replysbuk 20 hours ago | root | parent | next [\u2013]My fault, read that as \"a .pl\" not \"a.pl\"...replyprvc 22 hours ago | root | parent | prev | next [\u2013]They should be subject to some kind of penalty for engaging in this kind of behavior.replyhelsinkiandrew 22 hours ago | prev | next [\u2013]There's more info here, including an image of the pre 2011 logo:https://appleinsider.com/articles/23/06/19/apple-wants-to-co...replyraldi 21 hours ago | parent | next [\u2013]Right? All the comments here are mocking Apple for trying to own all depictions of a fruit, or make it seem like the other company had been happily using the logo for a century, but no, Apple is just trying to say they can\u2019t use the logo they switched to in 2011 which was clearly based on the Apple logo.replypaxys 19 hours ago | root | parent | next [\u2013]> clearly based on the Apple logoUh, the design is clearly based on an apple, which they sellreplyraldi 17 hours ago | root | parent | next [\u2013]Do you believe it could ever be possible for a company that sells apples to design a logo based on the Apple logo?replypaxys 17 hours ago | root | parent | next [\u2013]Do you believe that regardless of the existence of Apple a company that sells apples could want to use a generic picture of an apple as their logo?replyraldi 16 hours ago | root | parent | next [\u2013]Yes. Now would you be willing to answer my question? I'm trying to figure out whether we disagree over a matter of where precisely to draw a line, or if the very idea of the line is antithetical.replypaxys 16 hours ago | root | parent | next [\u2013]So yes, the difference is that you think that the fruit company logo was copied from Apple whereas I don't.replyEnergyAmy 19 hours ago | root | parent | prev | next [\u2013]\"clearly based on\" is doing a whole lot of work in your comment. I would never confuse the two.replyraldi 17 hours ago | root | parent | next [\u2013]I said nothing about confusion. I said that in 2011, when they changed their old logo:https://photos5.appleinsider.com/gallery/54990-111552-001-pr...to this new one:https://photos5.appleinsider.com/gallery/54990-111553-000-le...it seems to me that they were clearly using the Apple logo as their inspiration.replyEnergyAmy 16 hours ago | root | parent | next [\u2013]I think it's pretty clear that they were using... apples as their inspiration for the new logo. That thing that they sell.replySzpadel 23 hours ago | prev | next [\u2013]some years ago they wanted to force ownership of domain a.pl with is used by some Polish grocery store because when reader in English it sounds like applereplyhilbert42 23 hours ago | prev | next [\u2013]I see, so Apple is now real government in our so-called democracies.Welcome to government by MegaCorporation.replyhospitalJail 20 hours ago | parent | next [\u2013]Kind of scary given how many people defend every possible action too.Reminds me of GOP/Dem politics.My side has a good reason for doing it, but when they do it, its bad.replyhilbert42 19 hours ago | root | parent | next [\u2013]It was interesting to note some down-voted my comment.replydghughes 23 hours ago | prev | next [\u2013]I should start a company called \"Apple Windows\" both are two very common everyday items so there shouldn't be any problem.replygo_prodev 22 hours ago | parent | next [\u2013]And I'll start selling \"Window Apples\", small apple shaped window ornaments.replymirekrusin 22 hours ago | parent | prev | next [\u2013]Great name for new Linux distro.replybastard_op 17 hours ago | prev | next [\u2013]This reminds me of Nissan motors chasing the man of the same name that was harassed by them for 25 years to buy/steal the nissan.com domain after car vendor finally figured out what the Internet was good for. Nissan Motors first tried to low-ball him, and then sued, repeatedly for the next couple decades to simply \"take\" the domain, but he won over and over - it was his freakin' NAME, and fairly got it first.Tough luck Nissan motors, at least the Japanese court stood up for the man and his rights. The owner finally died after covid in 2020, and the domain still sits parked.https://www.thedrive.com/news/35179/the-man-who-fought-nissa...Something tells me if this were Apple in the US, he's have been steamrolled like a piece of dung left in the road and domain taken as these poor bastards daring to use a fruit borne from the beginning of time before Apple Inc will now get.replysoneil 23 hours ago | prev | next [\u2013]Has anyone been able to find any original sources on this? I'm curious to see the scope of the actual trademark. All the reporting looks like a game of \"chinese whispers\".replyfredoralive 23 hours ago | parent | next [\u2013]The Wired article links to this https://www3.wipo.int/madrid/monitor/en/showData.jsp?ID=ROM.... which is the logo of The Beatles' Apple Corps, that is now owned by Apple Inc as part of the settlement of the disagreements between the two Apples.replysoneil 23 hours ago | root | parent | next [\u2013]the scope on that (the line 511 classification) looks like it's the same as Apple Corps would have used, it's not even being registered in the scope of computing. which is even odder.So they're trying to register the mark previously owned by Apple Corps, within the scope of the original mark. I'm not sure where the actual conflict is then, unless Fruits Suisse are also in the music industry.replyEkaros 23 hours ago | prev | next [\u2013]I think reasonable end result would be to ban Apple from using logo or world Apple as trademark.replyhk1337 21 hours ago | prev | next [\u2013]I\u2019m not sure it\u2019s completely necessary or warranted but I get it. It\u2019s not just that they want to \u201ccopyright the whole apple\u201d, the logo is an apple with a plus sign in place of where, roughly, the bite mark would go.replyfmajid 22 hours ago | prev | next [\u2013]I seriously doubt the land of William Tell is going to allow this travesty.replyjeffrallen 21 hours ago | parent | next [\u2013]With some of their other bad behavior, we should perhaps put the Apple Computer logo on little Tell and start shooting at it!replyjpswade 23 hours ago | prev | next [\u2013]Trademark law requires you to defend your trademark, otherwise you risk loosing it, therefore by law, to ensure you remain owners of the trademark, you MUST pursue any possible infringements.replycalcifer 23 hours ago | parent | next [\u2013]Which Swiss law are you referring to?replygregjw 23 hours ago | prev | next [\u2013]What a silly waste of timereplynostromo 22 hours ago | prev | next [\u2013]I flagged this ridiculous article and title.Apple is applying for a trademark. That\u2019s it.Apple is not forcing anyone to do anything. I doubt Apple knows or cares about the old fruit company.replymensetmanusman 21 hours ago | prev | next [\u2013]Someone should tell Apple that this is weird behavior.replyveave 23 hours ago | prev | next [\u2013]Apple can't do anything like that. It would be a judge, after deliberation and taking into account the facts and the law.replycoliveira 21 hours ago | prev | next [\u2013]In the not distant future we'll need to rename the fruit to avoid being sued for trademark infringement.replyraverbashing 1 day ago | prev | next [\u2013]I'm not sure if Switzerland is under the EUIPO but I suspect European courts (not limited to the EU) are usually not very sympathetic to foreign companies trying to claim trademark on traditional brands https://www.bbc.com/news/world-europe-49254551replymiga 1 day ago | parent | next [\u2013]Once again, Swiss will raise their pikes to protect right to protect their own in court without any EUtside interference...While money is wasted on proceedings.Good case for a libel countersuit?replyjonnycomputer 20 hours ago | prev | next [\u2013]Maybe Apple should be forced to change it's name to Bitten Apple Pretty Good Electronics Co.replyLuc 20 hours ago | prev | next [\u2013]This new 2011 Swiss Fruit logo is obviously influenced by Apple's 1977 design. How could it not be? There's a clear likeness and good luck finding a graphics designer in 2011 who hasn't seen the Apple logo before.The old Swiss Fruit logo looked more like a tomato.replywkat4242 20 hours ago | parent | next [\u2013]I don't think it is beyond general stylist language of the time. The only thing it really has in common is the outline at the bottom which is what makes it clearly an apple.No consumer will confuse these two and they don't even compete in the same product ranges. I totally agree with the regulator decision.replyXenoamorphous 21 hours ago | prev | next [\u2013]Whatever Apple is trying to get out of this can\u2019t be worth the bad PR.replyINTPenis 1 day ago | prev | next [\u2013]Will Apple force a 111-year old fruit company to change its logo?Journalists gonna journalist.replyNicoJuicy 23 hours ago | prev | next [\u2013]Tbh. Picking a logo of an Apple shouldn't mean you can obtain rights of something so generic.Pick something unique.replyjulienreszka 23 hours ago | prev | next [\u2013]When corpo lawyers are boredreplystjohnswarts 15 hours ago | prev | next [\u2013]Apple will lose this one for sure. There is no way a European court will decide for an American 800lb gorilla company bullying a swiss company that has been around for over a century. Good for them that they can't be bought as easily as American courts.replyNoRelToEmber 23 hours ago | prev | next [\u2013]An insightful comment from the last time this was posted: https://news.ycombinator.com/item?id=36391803Basically, if it's possible to consider that fruit company is infringing on Apple, then it is equally possible that Apple is the one infringing on the older company.In fact, by filing the suit, Apple is implicitly admitting that they are infringing, since they would not have filed if they didn't believe the logos could be confused, and since the other company is older...replymarckohlbrugge 22 hours ago | prev [\u2013]The key word here is \u201ccould\u201d.It assumes a lot of conditions will be met including Apple being granted the additional rights they seek (unlikely), them then wanting to enforce their mark against this fruit company (unlikely), and winning litigation (unlikely).TL;DR click baitreplyGuidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- Apple is seeking to secure a trademark in Switzerland for a black-and-white depiction of an apple, specifically the Granny Smith variety, in relation to electronic, digital, and audiovisual consumer goods and hardware.\n- The approval of Apple's trademark application is still pending and is being reviewed by the Swiss Institute of Intellectual Property. \n- The article highlights the potential conflict between Apple and a 111-year-old fruit company, but there is no direct threat from Apple to the fruit company at this time."
  },
  {
    "id": 36420259,
    "timestamp": 1687363214,
    "title": "Red Hat cutting back RHEL source availability",
    "url": "https://lwn.net/Articles/935592/",
    "hn_url": "http://news.ycombinator.com/item?id=36420259",
    "content": "LWN.netNews from the sourceContentWeekly EditionArchivesSearchKernelSecurityEvents calendarUnread commentsLWN FAQWrite for usEditionReturn to the Briefs pageUser: Password: | |Red Hat cutting back RHEL source availability[Posted June 21, 2023 by corbet]Red Hat has announced that public source releases will be restricted to CentOS Stream going forward:As the CentOS Stream community grows and the enterprise software world tackles new dynamics, we want to sharpen our focus on CentOS Stream as the backbone of enterprise Linux innovation. We are continuing our investment in and increasing our commitment to CentOS Stream. CentOS Stream will now be the sole repository for public RHEL-related source code releases. For Red Hat customers and partners, source code will remain available via the Red Hat Customer Portal.(Emphasis in original; thanks to Janne Blomqvist).(Log in to post comments)Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 15:23 UTC (Wed) by GhePeU (subscriber, #56133) [Link]To be honest I'm only surprised it took this long.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 15:37 UTC (Wed) by Bickelball (guest, #143671) [Link]I feel like the actions of Rocky and Alma pushed Red Hat to try and defend their business. I saw an article that called Rocky and Alma parasites and feel like that was pretty accurate. Clipped text from article below:...Overgrazing the commonsI\u2019m sure the history of technology parasites predates open source, but that\u2019s when my career started, so I\u2019ll begin there. Since the earliest days of Linux or MySQL, there were companies set up to profit from others\u2019 contributions. Most recently in Linux, for example, Rocky Linux and Alma Linux both promise \u201cbug for bug compatibility\u201d with Red Hat Enterprise Linux (RHEL), while contributing nothing toward Red Hat\u2019s success. Indeed, the natural conclusion of these two RHEL clones\u2019 success would be to eliminate their host, leading to their own demise, which is why one person in the Linux space called them the \u201cdirtbags\u201d of open source....Complete article here:https://www.infoworld.com/article/3697733/chatgpt-s-paras...Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 16:08 UTC (Wed) by MarcB (subscriber, #101804) [Link]This criticism is somewhat dishonest. It is not that Red Hat is providing some particularly sophisticated solution no one else could have come up with. It is also not about commons at all.What RedHat actually provides is the - sometimes exclusively - supported environment for 3rd party software. They can do this, because they are in a uniquely strong position and have established connections to many suppliers of such software. Competitors can't really do this, because it is a chicken-egg-problem. Larger vendors will not even talk to you, if you are too small.Red Hat invested a lot of time and money to achieve their position, but it should be clear that this is not about fairness, and that no one besides Red hat will benefit from this. This does not mean, that what Red Hat is doing is intrinsically unfair - but it might become at some point.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 16:34 UTC (Wed) by ju3Ceemi (subscriber, #102464) [Link]YesAnd those 3rd party are supported on redhat -not on some clones like centos.So if you care about being supported, you pay and use redhatIf you are not, then you could as well use anything else: suse, Debian, gentoo, whateverRed Hat cutting back RHEL source availabilityPosted Jun 22, 2023 4:34 UTC (Thu) by mbar (guest, #73813) [Link]> not on some clones like centosYou just wrote that Debian testing is a clone of Debian stable.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 17:49 UTC (Wed) by zonker (subscriber, #7867) [Link]\"It is not that Red Hat is providing some particularly sophisticated solution no one else could have come up with.\"This seriously undervalues what Red Hat does overall with RHEL. Red Hat didn't start out in a \"uniquely strong\" postion, they fought to get there. Providing a \"supported environment for 3rd party software\" is a lot more complex and sophisticated than people give Red Hat credit for -- Red Hat has to do a ton of development work upstream to land features that customers want across multiple upstreams.Then they work with partners to do testing and certification. And then they support an operating system for a decade plus, including upstreams that go EOL like Python 2.7.Red Hat makes open source consumable and boring for businesses. It's a lot of chopping wood and carrying water that competitors have tried very very hard to avoid, in a variety of ways. (Credit where due, I think SUSE tries to emulate this to a large degree, they've just been less successful at scaling it.)Just because Alma and Rocky and others can quickly recompile the source code to RHEL should in no way delude people to think they can easily step in and do all the development that happens up to that point. People seem to handwave away all the work that leads up to that source code in the first place. Sophisticated isn't really the metric here: it's the ability to deliver an open source platform that's consumable by business at scale for a decade. Repeatedly.But people have seriously devalued that because they can get the bits for free without thinking too much about all the work that went into the source that makes the bits available.There's a related discussion about how relevant RHEL is now given that the world is moving away from a model of staying on an OS for 10 years. But that doesn't decrease the complexity of providing that or make it any more honest to handwave away what RHEL represents as not \"particularly sophisticated.\"Disclaimer: I'm a former Red Hat employee (and even more former SUSE/Novell employee...)Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 18:35 UTC (Wed) by pizza (subscriber, #46) [Link]> Just because Alma and Rocky and others can quickly recompile the source code to RHEL should in no way delude people to think they can easily step in and do all the development that happens up to that point. People seem to handwave away all the work that leads up to that source code in the first place. Sophisticated isn't really the metric here: it's the ability to deliver an open source platform that's consumable by business at scale for a decade. Repeatedly.Yeah. It's all very cargo-cult-ish.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 18:59 UTC (Wed) by ju3Ceemi (subscriber, #102464) [Link]10 year-plusThis is so damageable to the worldThis kind of offer helps the damaged mindset from the 90ise that you can, sanely, let an environment live foreverRed Hat cutting back RHEL source availabilityPosted Jun 21, 2023 20:03 UTC (Wed) by pbonzini (subscriber, #60935) [Link]> 10 year-plus This is so damageable to the worldYet I guess you complain about planned obsolescence and lack of firmware update when it's about phones, TVs or NAS enclosures...Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 20:09 UTC (Wed) by ju3Ceemi (subscriber, #102464) [Link]Hardware is not softwareIn which sane world do you run a ten-year old libssl ?In which sane world do you use a ten-year old screen ?I have diff\u00e9rent answer for those questionsRed Hat cutting back RHEL source availabilityPosted Jun 21, 2023 20:17 UTC (Wed) by pgarciaq (subscriber, #153687) [Link]In which sane world do you run a ten-year old libssl? In which sane world do you use a ten-year old screen?In essentially any enterprise environment, actually.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 20:21 UTC (Wed) by ju3Ceemi (subscriber, #102464) [Link]Those same environnement that closes for two month after a cyberattack ?I don't know, I've work for many compagnies and never met such choices with succesful outcome: it was always a failureRed Hat cutting back RHEL source availabilityPosted Jun 21, 2023 20:33 UTC (Wed) by pbonzini (subscriber, #60935) [Link]Lack of updates is a huge part of how you get planned obsolescence.I have a Synology NAS from 2013 that got its last *major* update last year, and it's not even cloud enabled. Meanwhile other companies that actually expose your data on the internet might sell you an old model that they don't plan to update anymore in 2025.Well, Synology is doing the same kind of work as Red Hat.Red Hat cutting back RHEL source availabilityPosted Jun 22, 2023 4:07 UTC (Thu) by mathstuf (subscriber, #69389) [Link]I just retired by 10-year-old Synology today actually. Alas, with WFH, doing `rclone` over VPN to the cloud was a losing proposition and Golang has yet to support the MIPS32 processor it used, so my remote backups have been out-of-date for quite a while. It had a good run, but the hardware choices never got adopted by the New Languages :/ .Red Hat cutting back RHEL source availabilityPosted Jun 22, 2023 0:05 UTC (Thu) by butlerm (subscriber, #13312) [Link]The entire business model of a company like Red Hat requires making critical and necessary updates to versions of dependencies long since abandoned by their original developers. In other words no one using RHEL is running an unpatched, unsecured ten year old libssl or anything like it, they are using a generally ABI compatible version maintained by Red Hat with security fixes and necessary upgrades, and often more than one such version.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 21:22 UTC (Wed) by Wol (subscriber, #4433) [Link]> Red Hat makes open source consumable and boring for businesses. It's a lot of chopping wood and carrying water that competitors have tried very very hard to avoid, in a variety of ways. (Credit where due, I think SUSE tries to emulate this to a large degree, they've just been less successful at scaling it.)To put it another way, it's Red Hat that puts food on the programmers' tables.Cheers,WolRed Hat cutting back RHEL source availabilityPosted Jun 21, 2023 16:36 UTC (Wed) by rbtree (guest, #129790) [Link]If there are any real parasites, it's Oracle Linux. A multi-billiion dollar company does nothing but take the source, rebuild into their own clone of RHEL, and then sells support for it. I feel like it was them who pushed Red Hat into doing this.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 16:56 UTC (Wed) by ballombe (subscriber, #9523) [Link]Oracle has enough money to pay for a RHEL license for one box and get access to the source...Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 17:41 UTC (Wed) by acdha (guest, #165733) [Link]Yes, but to do that they'd have to sign a binding legal agreement saying they wouldn't do that. The unauthorized use section of the license appears to suggest that Oracle could only do that by paying for RHEL licenses for each Oracle Linux system (emphasis mine):(g) Unauthorized Use of Subscription Services. Any unauthorized use of the Subscription Services is a material breach of the Agreement. Unauthorized use of the Subscription Services includes: (a) only purchasing or renewing Subscription Services based on some of the total number of Units, (b) splitting or applying one Software Subscription to two or more Units, (c) providing Subscription Services (in whole or in part) to third parties, (d) using Subscription Services in connection with any redistribution of Software or (e) using Subscription Services to support or maintain any non-Red Hat Software products without purchasing Subscription Services for each such instance (collectively, \u201cUnauthorized Subscription Services Uses\u201d).This might violate GPLPosted Jun 21, 2023 20:19 UTC (Wed) by faramir (subscriber, #2327) [Link]Not sure if that last part isn't violating the GPL on anything for which RedHat doesn't own copyright for the entire codebase. They could probably use the contract to cancel someone's subscription, but I would think the GPL would stop them fromforcing their (former) customer from using the source code they had already obtained. Of course, not all of the software inRHEL is GPL'ed; but some rather important things are. The RHEL Workstation license at $179 is probably the cheapestavailable. Fifty two \"users\" could buy a new license once a week and pay less than $10,000 a year to get full access. Even if they banned people, it would be like trying to play whack-a-mole to shut something like that down. This might cost more than hobbyists could afford, but it might be amusing to see Oracle try to do it or even better just pay for hobbyists to do it.This might violate GPLPosted Jun 21, 2023 21:28 UTC (Wed) by Wol (subscriber, #4433) [Link]You're missing the point. It says \"Unauthorised use of SERVICES\". You are paying RH for a service, which has nothing to do with copyright, GPL, source code, whatever. It basically gives Red Hat the right to say \"bye bye customer, nice knowing you, we no longer wish to do business with you\".If you are relying on support services to keep your boss / shareholders / regulators happy, that's a biggy.That's why, although I'm pushing Scarlet at work, I'm also pushing the fact that it is a source derivative of OpenQM, and the latter is a slot-in replacement. If my employer wants to pay for a licence and support they can.Cheers,WolThis might violate GPLPosted Jun 22, 2023 9:07 UTC (Thu) by leromarinvit (subscriber, #56850) [Link]The way I understand the GP comment, this is not something this \"customer\" would care about - it would be the expected course of business. They'd just send a new \"throwaway\" customer to RedHat every time the last one is kicked out.Not saying I'd condone Oracle doing this, and then turning around and selling the result for profit. I'd have much less of a problem if someone did this and gave the result away for free.It's of course still silly, and I'll continue not using any RHEL clone myself (or RHEL itself, for that matter). But I also have a hard time believing CentOS or other clones being freely available really made much of a difference for RedHat's bottom line. In my mind, what RHEL customers are paying for is having a system that's officially supported by the vendor of whatever it is they actually want to run, not for the base OS itself. Having a free clone available, even if 100% equivalent on a purely technical level, doesn't change anything in that equation.This might violate GPLPosted Jun 22, 2023 10:03 UTC (Thu) by farnz (subscriber, #17727) [Link]You lose your Red Hat services if you break this contract. You still have your GPL rights to the source you have, but you're not getting updates from Red Hat any more.And yes, there will be trickery to get round this - but Red Hat could (for example) simply refuse to sell RHEL Workstation to people it suspects of working somewhere that's not playing the game the way Red Hat want them to, using sources like LinkedIn to check your affiliation, and asking if you still work at $COMPANY before selling you a services contract.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 17:01 UTC (Wed) by dullfire (subscriber, #111432) [Link]While I am loath to say anything nice about Oracle, and have seen lots of things they did badly, it is ironic the above comment comes so soon after this article: https://lwn.net/Articles/934941/Where we have quotes like:> Something that he has heard the stable maintainers complain about a little bit is the lack of companies willing to stand up and say that their products are based on the LTS kernels and that they are willing to fund maintenance and backporting activity for those kernels. He reiterated that Oracle does use the LTS kernels; it picks up the odd-year LTS for its enterprise kernel and the company is \"totally willing to fund\" work on the parts of the kernel that it has experience with and knowledge about, which includes filesystems and storage, Wong said.I have no direct knowledge one way or another how true Wongs statement is, but I would image (and hope) that there would be several people calling him out if he was making a bald faced lie. So it would seem likely there is at least some truth to it.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 21:21 UTC (Wed) by geofft (subscriber, #59789) [Link]Yeah, much as the community hates to admit it, Oracle really is active in upstream maintenance and they really do a lot besides just compiling Red Hat's SRPMs. For kernels in particular, Oracle maintains their own distro kernels (\"Unbreakable Enterprise Kernel\") as well as rebuilds of Red Hat's kernels as best as they can reverse-engineer the source tree (\"Red Hat Compatible Kernel\"). The Oracle tree is the default one, but the Red Hat one is available for customers who are running third-party products that really need the features of a particular Red Hat kernel and not just userspace compatibility. https://blogs.oracle.com/linux/post/changing-the-default-...Also doing a git log --author=oracle.com in your Linux kernel clone, Xorg server clone, or a few other repos will also be informative.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 17:22 UTC (Wed) by pebolle (subscriber, #35204) [Link]> rbtree (guest, #129790)Should we point you to a mirror?Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 17:50 UTC (Wed) by zonker (subscriber, #7867) [Link]Indeed. It's interesting that I don't see too many people interested in Oracle Linux as a CentOS Linux alternative. I think that speaks volumes.Red Hat cutting back RHEL source availabilityPosted Jun 22, 2023 8:54 UTC (Thu) by leromarinvit (subscriber, #56850) [Link]To be honest, even if they gave it away for free, I'd be vary of using it. Given their past behavior, putting yourself at the mercy of Oracle doesn't exactly seem like a winning proposition.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 17:17 UTC (Wed) by gtirloni (subscriber, #85631) [Link]I can't even imagine what all the non-RedHat employees that contributed code used today in RHEL might be thinking.Such a parasite that I am for submitting bug reports, helping users for free, writing docs, promoting RH products, paying for RH support, writing bug fixes and features that make their way into apps that RHEL uses... Shame on me. Red Hat truly doesn't owe anything to anyone, having created their empire with their own hands from scratch. Congrats to them; I can only repent.I've been using Red Hat distros since the RH4 days and have contributed in many ways, but I'm downloading a Debian ISO just now to avoid being such a leech on them.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 17:21 UTC (Wed) by pebolle (subscriber, #35204) [Link]> Bickelball (guest, #143671)And it would still be dishonest if we even think of you as a \"parasite\" or a \"dirtbag\".Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 17:29 UTC (Wed) by mrmattyboy (guest, #165732) [Link]I'm assuming Rocky and Alma to be purely open source not-for-profit projects in this:Personally, I see these projects as the \"hook\" for people.If I could, I'd compare to Windows or (maybe) Photoshop - licenses are there to pay for the product - fine.However, if I were somebody starting out, didn't have much money or no ability to _pay_ for those productions, it leaves with me with options:* Go for a free alternative (this generally means lacking in features, but free)* Pirate the softwareMost of the time (and I'd bet all of the time) these companies accept this and, to me, they see this as a benefit.You won't find an industry leader using pirated software (else they'd expect a lawsuit coming to them)... However, you will find plenty of people that have learned and grown to love the software through any means possible (pirated or otherwise).So they invest in the technology that is useful to them and this is where the money comes from.So bringing this back to RedHat.. if RedHat _only_ had the paid offering and there was never a CentOS or Rocky Linux, would it be as popular in the community - if not, I'd reckon they'd be a lack of interest in it and they'd struggle to get *new* business.Startups and companies that start to use linux would have grown up with Debian and the like and, when they grow to or are in the position to chose a paid-for corporate license for this.. who will they pick? RedHat? Or Ubuntu or another provider that provides a free distribution?This is where I think RedHat should support these open source programs, because they get a massive following behind EPEL (sorry, I'm not too familiar with the terminology of this ecosystem) and when money starts coming out of companies that need a reliable operating system, it will be the one that they're familiar with.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 18:04 UTC (Wed) by Vipketsh (guest, #134480) [Link]To some extent I understand RedHat's position and I think it's not so much Alma or Rocky but rather the quite rich non-paying crowd that used CentOS before.A few years ago I was working for one of the top-5 semiconductor companies -- operations that make literally billions in profit every year. I was pretty surprised to learn that these people rolled on their own: they used CentOS, had their own support and maintenance structures and, as a user, the result was pretty terrible. I think it would be quite fair if these companies with so much money would contribute just a little to the the software that makes their business tick. Much more so than some tiny company trying hard just to make ends meet.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 19:02 UTC (Wed) by jccleaver (subscriber, #127418) [Link]Many of these companies actually TRIED to find a solution for this. Anyone who's been around OSS for a while is well aware of the negatives of the free-rider problem, after all.After the financial issues with donations that CentOS had, and then once RH took over the project, RH actively pushed away people who wanted to write checks to ensure the larger EL ecosystem remained viable. The root of this is that RH's licensing fees make no sense for companies that don't need every box to be certified AND have their own (often large) staffs of Sr. Linux Engineers on duty. All of this was made very clear when CentOS Linux was pulled away in favor of Stream only.Something like $350/box/yr for 1000s of boxes just doesn't make sense. We need RH for escalation points, but it's not like the 1000s of boxes are doing unique workloads or require individualized support. I worked for a large company that had maybe 3 different workloads across 8 different models of Dell hardware running at any given moment, across a huge farm. That's 3x8 combos of things that could go wrong where we need to phone RH for support, and everything else we'd handle ourselves.We're not paying $350/box/yr for that if we don't need a certified OS on each system, but we'd pay a hefty site license fee and throw in a non-profit donation to the CentOS Foundation if we could have (and if it meant we got 4h SLAs on tickets). RH sells proprietary bits, but it doesn't sell a proprietary *platform* and the RH execs seem unable to comprehend this.Red Hat cutting back RHEL source availabilityPosted Jun 22, 2023 1:36 UTC (Thu) by andresfreund (subscriber, #69562) [Link]> I feel like the actions of Rocky and Alma pushed Red Hat to try and defend their business. I saw an article that called Rocky and Alma parasites and feel like that was pretty accurate.Red Hat has a parasitic side itself. For postgres I've spent many months supporting old toolchains, odd kernels with performance characteristic seen nowhere else, solely caused by RHELs extremely long support cycles - which they make money off, but I don't.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 16:14 UTC (Wed) by amacater (subscriber, #790) [Link]From RHEL 2.1 to RHEL 9.x - so much for compliance with licensing conditions and supplying source from here on in.Remember the promises given round the release of RHEL 2.1 - at which point RHEL had gained the co-operation of the independent Fedora distribution?Rocky and Alma were doing precisely what they were able to do given access to the source.They weren't representing themselves as RHEL. They gave their own support.This is the Oracle Linux playbook that Red Hat complained about so much - remember Unbreakable vs. Unfakeable?Is it now back to hardball copyright lawsuits that led to the demise of the likes of Pink Tie Linux and White Box Enterprise Linux?For third parties developing for deployment on RHEL - maybe run, don't walk, from RHEL development - you'll now have to rely on each of your customers paying for Red Hat Enterprise Linux support and maintaining their subscription.For instances where Red Hat is the upstream for a significant codebase: how long before they change the licensing or availability to other distributions?I've always questioned what \"support\" meant in the context of an enterprise distribution - it now means access to GPL'd code?[From someone who remembers Red Hat 9 the first time]Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 16:29 UTC (Wed) by pizza (subscriber, #46) [Link]> For third parties developing for deployment on RHEL - maybe run, don't walk, from RHEL development - you'll now have to rely on each of your customers paying for Red Hat Enterprise Linux support and maintaining their subscription.Um, that's no change from before; if those customers wanted \"support\" they always had to pay RH for it. Everyone else has been essentially freeloading on top of the fees RH's customers are paying. Especially Oracle, who was directly binting RH's hand in the process.Meanwhile, likes of Alma/Rocky (and even Oracle) can just grab the source packages from CentOS stream and use that as the basis for their rebuilds. After all, nothing shipped in RHEL wasn't already present in CentOS stream first.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 16:45 UTC (Wed) by MarcB (subscriber, #101804) [Link]There are two, very distinct, reasons to use Red Hat: The support you get from Red Had and the support provided by 3rd parties for their software, exclusively on RHEL - or a 100% compatible platform.You only needed RHEL for the first, now also for the second, because 100% compatible platforms will no longer be realistic.Apparently Red Hat believes that 3rd parties will stick with them as the only supported platform.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 16:52 UTC (Wed) by cesarb (subscriber, #6266) [Link]> Apparently Red Hat believes that 3rd parties will stick with them as the only supported platform.I know of at least one third party that, after the CentOS announcement, started focusing on Ubuntu LTS as the recommended platform, while before it was CentOS/RHEL.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 18:16 UTC (Wed) by Vipketsh (guest, #134480) [Link]Unfortunately it's not always so easy because often you are not the only vendor who's tools your customers are using. They can only use a distro which is supported by all the tools they use. For example, in the semiconductor industry *everyone* will be using tools from the Big 3 tool vendors who generally support RHEL 6,7, often 8 and rarely some version of SLES. Thus, if you are not the big 3 and you want to provide some tool to this industry you have to support the aforementioned distros and trying to support anything else is meaningless.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 18:26 UTC (Wed) by gtirloni (subscriber, #85631) [Link]Compared to all other RH customers, the semi industry must look tiny, doesn't it? Also, their RH Support costs would be a line error in their budget.Recent moves by IBM and Red Hat hurt more small companies and individuals. You know, the ones that one day might grow to actually buy official support from Red Hat. They are shooting themselves in the foot but this is classical IBM thinking.Red Hat cutting back RHEL source availabilityPosted Jun 22, 2023 8:35 UTC (Thu) by nim-nim (subscriber, #34454) [Link]>Compared to all other RH customers, the semi industry must look tiny, doesn't it?It\u2019s the same in every industry. ISVs want to limit the number of platforms they have to support, they will happily support Red Hat (RHEL), Microsoft (Windows), Google (Android) as long as those do not gouge them too much, provide some benevolent dictatorship of the platform and someone paid you can call when things go wrong.Consider that even the multiple abuses of Microsoft, could not convince the industry to invest in anything but Windows on the desktop. It did bare Microsoft access to dominance of the (new, not established yet) mobile and server market but no one was in any hurry to rock the desktop boat.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 17:12 UTC (Wed) by PlaguedByPenguins (subscriber, #3577) [Link]> After all, nothing shipped in RHEL wasn't already present in CentOS stream first.That wasn't how it worked.At least in the early days of Stream, important kernel security updates turned up in Stream weeks later than in RHEL (and Alma/Rocky). I don't know if it's still that way.I was perfectly happy to help debug future RHEL by running Stream, but \"less secure than Alma/Rocky\" was a red line, so I had to give up on it.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 20:09 UTC (Wed) by pbonzini (subscriber, #60935) [Link]That's only true of embargoed issues, but even then the aim is for sources to hit stream roughly when the embargo lifts. That said stream was a huge change in how RHEL is developed and (even though I do very little of that) I am not surprised if there were some initial pains.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 18:00 UTC (Wed) by amacater (subscriber, #790) [Link]CentOS Stream isn't stable: at the point at which RHEL 9.x forks from it, there may be patches in Stream that are in advance of what's actually in RHEL 9.Hence the fuss in December 2020 or thereabouts. \"Freeloaders\" and \"parasites\" isn't exactly the best phrase to describe FLOSS users - and I'm somewhat surprised at Matt Asay using that terminology.I've seen less evidence in the last few years of Red Hat/IBM caring for the desktop and workstation users - migrating to cloud and containers, producing their own infrastructure with Podman. As someone using and supporting Red Hat systems over many years, this does feel like an abandonment of RHEL as a vibrant infrastructure supporting the commercial world - a definite change from Red Hat pre-acquisition - and an unwelcome development overall.Each very definitely to their own - but if I were starting a project tomorrow, I'd assuredly *not* use Red Hat or a Red Hat derivative, though I might have recommended it today.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 18:06 UTC (Wed) by rahulsundaram (subscriber, #21946) [Link]> CentOS Stream isn't stable: at the point at which RHEL 9.x forks from it, there may be patches in Stream that are in advance of what's actually in RHEL 9.That's just patches heading into the next point release. All of this is maintained in git branches. That's how that the other rebuilders are able to accurately rebuild RHEL.> Hence the fuss in December 2020 or thereabouts. \"Freeloaders\" and \"parasites\" isn't exactly the best phrase to describe FLOSS users - and I'm somewhat surprised at Matt Asay using that terminology.I am assuming you haven't read Matt Asay much.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 20:11 UTC (Wed) by pbonzini (subscriber, #60935) [Link]To be fair, until now the rebuilders were using git.centos.org. They will indeed need some adaptation to their tools.Red Hat cutting back RHEL source availabilityPosted Jun 22, 2023 7:32 UTC (Thu) by nim-nim (subscriber, #34454) [Link]Matt Asay is firmly in the camp of the last corp paying him to defend its (often shady) business practices, spraying dirt on the competition. It\u2019s a wonder he is still identified as an OSS authority by some (though it says a lot about what \u201copen source\u201d was really about).Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 16:40 UTC (Wed) by NYKevin (subscriber, #129325) [Link]> From RHEL 2.1 to RHEL 9.x - so much for compliance with licensing conditions and supplying source from here on in.To my understanding, this is entirely compliant with the licensing conditions. The GPL (and pretty much every other copyleft license) does not say that you have to post all source code publicly. It says that you have to provide source alongside any binaries you distribute, to the recipient of the binary. If Red Hat only distributes RHEL binaries to customers, then they only have to distribute RHEL source to customers. Similarly, if they only distribute CentOS Stream binaries to the public, then they only have to distribute Stream source to the public.Of course, Red Hat's customers *could* then turn around and release the RHEL source publicly. I guess they're just not terribly interested in doing that.See also: https://www.gnu.org/licenses/gpl-faq.en.html#GPLRequireSo..., https://www.gnu.org/licenses/gpl-faq.en.html#DoesTheGPLRe..., https://www.gnu.org/licenses/gpl-faq.en.html#CompanyGPLCo..., etc.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 17:01 UTC (Wed) by jccleaver (subscriber, #127418) [Link]>Of course, Red Hat's customers *could* then turn around and release the RHEL source publicly. I guess they're just not terribly interested in doing that.That in and of itself wouldn't be an issue. However, all signs point to RedHat terminating the license of someone redistributing its bits. Using those SRPMS to run a rebuild and then distribute the packages *you* create would be the next step, but something tells me RH plans to make binary or self-hosting rebuilds as painful as absolutely possible going forward. Kind of like what they did for their kernel patches in the SRPM once Oracle started doing its OEL thing.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 18:03 UTC (Wed) by zonker (subscriber, #7867) [Link]What promises has Red Hat broken here? I'm genuinely curious. Can you point to specifics?\"They weren't representing themselves as RHEL.\" I believe Rocky uses the phrase \"bug-for-bug compatible\" with RHEL. So, technically, not saying \"this is RHEL\" but walking as close to that line as possible.\"For third parties developing for deployment on RHEL - maybe run, don't walk, from RHEL development - you'll now have to rely on each of your customers paying for Red Hat Enterprise Linux support and maintaining their subscription.\"So here's a thought. Maybe they should be paying for RHEL support? What vendors want is a platform they can target that they can depend on. The development and maintenance of such a thing doesn't come cheap. If Debian, for instance, is good enough - great. Target Debian, tell your customers to use Debian, and they can save the RHEL subscription money for whatever.But. If it actually has value and the complaint is \"I can't get that platform for free anymore,\" where the platform sits under an application you're paying a vendor for, maybe you (or the vendor) need to be paying for it.The thing that everybody is really panicking about is the loss of a free RHEL. Think about why that is. Because it does have value and they know the alternatives don't provide what they really want.If you are using a RHEL clone in non-production situations they have no-cost subscriptions and/or the CentOS Stream model should be sufficient if what you want is a RHEL-alike that doesn't have to be \"bug for bug\" compatible. If you absolutely have to have \"bug for bug\" compatibility with RHEL, I'll say again: Then you probably ought to be paying for it.(Disclaimer: I am a former Red Hat employee.)Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 23:05 UTC (Wed) by rqosa (subscriber, #24136) [Link]> Is it now back to hardball copyright lawsuits that led to the demise of the likes of Pink Tie Linux and White Box Enterprise Linux?Out of curiosity: did Red Hat ever threaten legal action against either one of those? If so, that's news to me.Searching for the first one led me to this Linux.com editorial from June 2002, which mentions that \"Red Hat apparently demanded that Cheapbytes not to sell the ISO images of Red Hat Linux as \u201cRed Hat Linux.\u201d\", but that was the reason why Cheapbytes rebranded it in the first place, rather than something that happened afterwards.(Other sources indicate that Cheapbytes got at least as far as RHL 8.0 \u2014 which was released about 4 months after that editorial, and was the next-to-last RHL release version prior to its split/rebranding into Fedora Core and RHEL \u2014 before they gave up. And by that point in time, cheap and readily available CD/DVD burners together with broadband ISPs were well on their way to ruining the business model that companies like Cheapbytes and Walnut Creek CDROM had used in the 1990s.)As for WBEL: I used it for a while in the mid-2000s, and ISTR reading discussions back then (on its mailing lists & elsewhere) in which users complained that, as a practical matter, WBEL was one person's pet project, whereas CentOS was maintained by a larger team who were better able to keep it up to date with RHEL. For example, this LWN article from March 2005 mentions that CentOS had already put out a release based on RHEL 4, whereas WBEL hadn't. So I'd been assuming that that was the reason for its demise.(Incidentally: as of right now, its website is still online, but it looks like its front page hasn't been updated since 2009.)Red Hat becoming IBMPosted Jun 22, 2023 9:14 UTC (Thu) by kragil (guest, #34373) [Link]IBM is a bad company, nearly Oracle kind of bad, so RH is going in that direction fast. Seems that they have accelerated that transformation with this move. It is only downhill from here, and it was crystal clear from the start that this was going to happen. First they killed free (useful) CentOS, and now they want to kill RHEL-clones, because quarterly reports are demanding growth. You see that everywhere now. MS, Google, Amazon, Netfix etc. They all _try_ to \"fight\" the downturn with these \"changes\".And all the IBM-employees here calling other free software projects parasites don't change these facts.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 17:00 UTC (Wed) by pbonzini (subscriber, #60935) [Link]IIUC (I work for Red Hat but not on how sources are distributed), there is absolutely no change in practice.CentOS Stream RPM sources are stored in GitLab therefore the whole history is available including past minor releases of RHEL. The only change is that the repositories will not be mirrored to git.centos.org.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 18:11 UTC (Wed) by zonker (subscriber, #7867) [Link]That's nice to hear. I'd say that the blog post that sparked this is a bit muddy on this point.In practice, does this mean that the RHEL clones will still be able to identify the source that makes up a RHEL release / minor release to rebuild it, or is that going to be (on purpose or simply as a byproduct) obfuscated too much to rebuild a RHEL release going forward?Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 19:45 UTC (Wed) by pbonzini (subscriber, #60935) [Link]There may be some issues if an embargoed issue hits very close to the release, but generally it should be okay.The relevant bit in the (admittedly cryptic) post is \"To be clear, this change does not signify any changes to the CentOS Project, CentOS Stream or source availability for CentOS Stream or CentOS SIGs\". The changes for rebuilders are minimal but I can see why the author didn't want to say they are not affected.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 19:49 UTC (Wed) by zonker (subscriber, #7867) [Link]Thanks for the clarification / response. Much appreciated.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 17:56 UTC (Wed) by xilun (guest, #50638) [Link]I'm kind of disturbed by all the comments here calling projects that exercise basic Free Software freedoms \"parasites\".Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 18:14 UTC (Wed) by pebolle (subscriber, #35204) [Link]> I'm kind of disturbed by all the comments here calling projects that exercise basic Free Software freedoms \"parasites\".My thoughts exactly.Calling other people \"parasites\" should not be done lightly. And complaining about people that do what Free Software is actually all about should not be done at all.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 18:37 UTC (Wed) by Bickelball (guest, #143671) [Link]In a healthy open source ecosystem, competition and innovation go hand-in-hand. Red Hat, Suse, Canonical, AWS, and Microsoft all create Linux versions with associated branding and ecosystem development efforts. All utilize and contribute Linux source code, but none claim to be \u201cfully compatible\u201d with the others. That is like being a counterfeiter in my view.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 19:17 UTC (Wed) by camhusmj38 (subscriber, #99234) [Link]If full compatibility with X is what the market demands then you have to provide it. And if you have provided it you should be able to say so so you can compete with the market leader. IBM PC/Compatible for example.Red Hat cutting back RHEL source availabilityPosted Jun 22, 2023 5:43 UTC (Thu) by Bickelball (guest, #143671) [Link]the market does not demand full compatibility with Red Hat - Ubuntu has more market share than Red Hat, and Suse and AWS Linux have healthy market shares - they build and share a lot of code together with Red Hat, but don't just copy Red Hat and claim bug-for-bug compatibility - and try to sell support for x% less. That is very parasitic sounding, or counterfeiting, in my view...Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 19:30 UTC (Wed) by flussence (subscriber, #85566) [Link]If anyone wants to get mad about the way Red Hat interprets license compliance, perhaps they should start by addressing a smaller target like, oh I dunno, various GNU projects' practice of throwing opaque code dumps over the wall. Start with Bash.That said, I've always found this obfuscation of process Red Hat engages in to be childish and ineffective. The general perception of their brand is that they seem entirely unable to compete by *offering a better product*, so instead try to undermine others around them as if those others can't simply rebase on another distro's copies of source code. If they were serious about giving Oracle a black eye they'd be sponsoring PostgreSQL like there's no tomorrow. Or bcachefs (or tux3), or LibreOffice. That thing they keep doing to Ubuntu apparently successfully.Red Hat cutting back RHEL source availabilityPosted Jun 21, 2023 19:49 UTC (Wed) by pbonzini (subscriber, #60935) [Link]What is obfuscated in having all SRPM sources available in git trees for the whole pipeline covering Fedora Rawhide, Fedora ELN and CentOS Stream? There is hardly any difference between c9s and RHEL9 sources except for embargoed issues whose fixes have to be developed and built internally.In 2009 when I started at Red Hat doing a backport for RHEL entailed sending email to a private mailing list or committing to a private CVS server. These days I just open a merge request on GitLab, transparency has increased immensely.Copyright \u00a9 2023, Eklektix, Inc.Comments and public postings are copyrighted by their creators.Linux is a registered trademark of Linus Torvalds",
    "summary": "- Red Hat has announced that public source releases for Red Hat Enterprise Linux (RHEL) will be restricted to CentOS Stream going forward.\n- CentOS Stream will be the sole repository for public RHEL-related source code releases, while source code will still be available for Red Hat customers and partners via the Red Hat Customer Portal.\n- This decision has sparked debate among the community, with some criticizing the move as a restriction of open source principles and others arguing that it is necessary for the sustainability of Red Hat's business model.",
    "hn_title": "Red Hat cutting back RHEL source availability",
    "original_title": "Red Hat cutting back RHEL source availability",
    "score": 316,
    "hn_content": "- Red Hat is reducing the availability of its source code for Red Hat Enterprise Linux (RHEL).\n- Some comments on this change argue that it makes sense because there are companies taking advantage of Red Hat's contributions without contributing anything in return.\n- Oracle Linux, which is based on RHEL, is also mentioned in the discussion, with some negative comments about Oracle's licensing model and products.\n- The decision to limit source availability is seen as a way for Red Hat to protect its business and prevent others from profiting off its contributions.\n- Many readers in the tech industry are interested in this post because it sheds light on the challenges and dynamics of open source software development and the business strategies of companies like Red Hat and Oracle.- Red Hat has made changes that prevent the easy creation of free, legal derivatives of their Enterprise Linux distribution.\n- This move is seen by some as a departure from the spirit and ideals of open source software.\n- Red Hat's actions may push users to explore alternatives to RHEL, such as Rocky Linux or AlmaLinux.\n- The ability to freely redistribute RHEL source code is restricted by Red Hat's terms of service, potentially violating the open source license agreements.\n- Red Hat emphasizes their right to terminate subscriptions for unauthorized use, including redistributing their software, while still fulfilling their obligations under the GPL.\n- The move by Red Hat is seen by some as a continuation of the trend of large corporations exploiting open source software for their own convenience.\n- Users may consider exploring other Linux distributions, such as Debian or openSUSE, which offer different philosophies and features.\n- The changes may impact projects that rely on RHEL for stability and support, as well as developers who require the latest versions of software.\n- The move is causing discontent and frustration among users, who believe that Red Hat is becoming less open and community-oriented.\n- Some users see this as a strategic decision by Red Hat to protect its business interests and maintain control over its software.\n- The future of RHEL-based distributions, like CentOS, is uncertain in light of these changes.\n- Red Hat's decision has sparked debates about the relationship between corporations and the open source community.\n- Users have raised concerns about the effects of these changes on the long-term sustainability and support for RHEL-based distributions.\n- The move by Red Hat may lead to increased diversification in the enterprise Linux market as users search for alternatives to RHEL.\n- The discussion highlights the ongoing tension between the business interests of corporations like Red Hat and the ideals of open source software.",
    "hn_summary": "- Red Hat's decision to limit the availability of its source code for RHEL is seen as a way to protect its business and prevent others from profiting off its contributions.\n- Some users view this move as a departure from the spirit of open source software and may explore alternative Linux distributions.\n- The decision has sparked debates about the relationship between corporations and the open source community, highlighting the tension between business interests and the ideals of open source software."
  },
  {
    "id": 36423648,
    "timestamp": 1687377974,
    "title": "Developer tools to create spatial experiences for Apple Vision Pro",
    "url": "https://www.apple.com/newsroom/2023/06/developer-tools-to-create-spatial-experiences-for-apple-vision-pro-now-available/",
    "hn_url": "http://news.ycombinator.com/item?id=36423648",
    "content": "PRESS RELEASEJune 21, 2023Developer tools to create spatial experiences for Apple Vision Pro now availableThe visionOS software development kit (SDK) enables Apple\u2019s developer community to bring their apps to life in ways never before possibleDevelopers have access to a variety of resources to help them design, develop, and test apps for Apple Vision Pro.CUPERTINO, CALIFORNIA Apple today announced the availability of new software tools and technologies that enable developers to create groundbreaking app experiences for Apple Vision Pro \u2014 Apple\u2019s first spatial computer. Featuring visionOS, the world\u2019s first spatial operating system, Vision Pro lets users interact with digital content in their physical space using the most natural and intuitive inputs possible \u2014 their eyes, hands, and voice. Starting today, Apple\u2019s global community of developers will be able to create an entirely new class of spatial computing apps that take full advantage of the infinite canvas in Vision Pro and seamlessly blend digital content with the physical world to enable extraordinary new experiences. With the visionOS SDK, developers can utilize the powerful and unique capabilities of Vision Pro and visionOS to design brand-new app experiences across a variety of categories including productivity, design, gaming, and more.Next month, Apple will open developer labs in Cupertino, London, Munich, Shanghai, Singapore, and Tokyo to provide developers with hands-on experience to test their apps on Apple Vision Pro hardware and get support from Apple engineers. Development teams will also be able to apply for developer kits to help them quickly build, iterate, and test right on Apple Vision Pro.\u201cApple Vision Pro redefines what\u2019s possible on a computing platform. Developers can get started building visionOS apps using the powerful frameworks they already know, and take their development even further with new innovative tools and technologies like Reality Composer Pro, to design all-new experiences for their users,\u201d said Susan Prescott, Apple\u2019s vice president of Worldwide Developer Relations. \u201cBy taking advantage of the space around the user, spatial computing unlocks new opportunities for our developers, and enables them to imagine new ways to help their users connect, be productive, and enjoy new types of entertainment. We can\u2019t wait to see what our developer community dreams up.\u201dDevelopers can build new experiences that take advantage of the groundbreaking features of Apple Vision Pro by using the same foundational frameworks they already know from other Apple platforms, including powerful technologies like Xcode, SwiftUI, RealityKit, ARKit, and TestFlight. These tools enable developers to create new types of apps that span a spectrum of immersion, including windows, which have depth and can showcase 3D content; volumes, which create experiences that are viewable from any angle; and spaces, which can fully immerse a user in an environment with unbounded 3D content. To help developers optimize 3D content for their visionOS apps and games, an all-new tool available with Xcode called Reality Composer Pro lets them preview and prepare 3D models, animations, images, and sounds, so they look amazing on Vision Pro. Developers can also interact with their apps in the new visionOS simulator to explore and test various room layouts and lighting conditions. And every developer framework comes with built-in support for Apple\u2019s innovative accessibility features to ensure spatial computing and visionOS apps are accessible to everyone.Starting next month, developers who have been building 3D apps and games with Unity\u2019s robust authoring tools can port their Unity apps to Apple Vision Pro and take full advantage of its powerful capabilities.Developers who have previewed the visionOS SDK and APIs are excited for the potential of the platform and how it will enable them to create all-new app experiences for their users:\u201cWith Apple Vision Pro, Complete HeartX will help prepare medical students for clinical practice by using hyper-realistic 3D models and animations that help them understand and visualize medical issues, such as ventricular fibrillation, and how to apply their knowledge with patients,\u201d said Jan Herzhoff, Elsevier Health\u2019s president. \u201cLearning through Complete HeartX on Apple Vision Pro will transform medical education and prepare future health professionals for practice.\u201dComplete HeartX by Elsevier Health.\u201cThe djay app on Apple Vision Pro puts a fully featured DJ system right at a user\u2019s fingertips. With a reimagined spatial interface, anyone can mix their favorite music and apply real-time effects using just their eyes and hands,\u201d said Karim Morsy, Algoriddim\u2019s CEO. \u201cWhether for a beginner or a seasoned professional, djay on Vision Pro transforms the user\u2019s surroundings with stunning environments that automatically react to their mix, enabling them to experience and interact with music in ways never before possible.\u201ddjay by Algoriddim.\u201cJigSpace and Apple Vision Pro empower people and businesses to easily communicate their ideas or products in all-new ways,\u201d said Zac Duff, JigSpace\u2019s cofounder and CEO. \u201cIt uses the high-resolution CAD files companies already have, so their marketing, sales, product, or support teams can securely collaborate with colleagues or customers from anywhere in the world and get people to that \u2018Aha!\u2019 moment in a fraction of the time it usually takes. This level of fast, effective communication simply wasn\u2019t possible before.\u201dJigSpace by JigSpace.\u201cManufacturers can use AR solutions from PTC to collaborate on critical business problems by bringing interactive 3D content into the real world \u2014 from a single product, to an entire production line,\u201d said Stephen Prideaux-Ghee, PTC\u2019s chief technology officer of AR/VR. \u201cWith Apple Vision Pro, stakeholders across departments and in different locations can review content simultaneously to make design and operation decisions. This capability will unlock a level of collaboration previously not possible.\u201dStages by PTC.The visionOS SDK, updated Xcode, Simulator, and Reality Composer Pro are available for Apple Developer Program members at developer.apple.com. Registered Apple developers have access to a variety of resources to help them design, develop, and test apps for Apple Vision Pro, including extensive technical documentation, new design kits, and updated human interface guidelines for visionOS.To learn more about designing new app experiences for Apple Vision Pro, or to apply for a developer kit starting next month, developers can visit developer.apple.com/visionos.Share articleText of this articleJune 21, 2023About Apple Apple revolutionized personal technology with the introduction of the Macintosh in 1984. Today, Apple leads the world in innovation with iPhone, iPad, Mac, Apple Watch, and Apple TV. Apple\u2019s five software platforms \u2014 iOS, iPadOS, macOS, watchOS, and tvOS \u2014 provide seamless experiences across all Apple devices and empower people with breakthrough services including the App Store, Apple Music, Apple Pay, and iCloud. Apple\u2019s more than 100,000 employees are dedicated to making the best products on earth, and to leaving the world better than we found it.Copy textImages in this articleDownload all imagesAbout AppleApple revolutionized personal technology with the introduction of the Macintosh in 1984. Today, Apple leads the world in innovation with iPhone, iPad, Mac, Apple Watch, and Apple TV. Apple\u2019s five software platforms \u2014 iOS, iPadOS, macOS, watchOS, and tvOS \u2014 provide seamless experiences across all Apple devices and empower people with breakthrough services including the App Store, Apple Music, Apple Pay, and iCloud. Apple\u2019s more than 100,000 employees are dedicated to making the best products on earth, and to leaving the world better than we found it.Press ContactsAndrea SchubertApplea_schubert@apple.comAlex BenderApplealex_bender@apple.comApple Media Helplinemedia.help@apple.comLatest NewsQUICK READApple expands Self Service Repair and updates System Configuration processJune 20, 2023PHOTOSApple Battersea opens in London\u2019s historic Battersea Power StationJune 15, 2023PRESS RELEASEApple\u2019s Racial Equity and Justice Initiative surpasses $200m in investmentsJune 14, 2023",
    "summary": "- Apple has released developer tools and technologies that enable developers to create spatial experiences for Apple Vision Pro, their first spatial computer.\n- The visionOS software development kit (SDK) allows developers to design, develop, and test apps for Vision Pro, using natural and intuitive inputs such as eyes, hands, and voice.\n- Developers will have access to resources, including labs and developer kits, to help them build and test their apps on Apple Vision Pro hardware.",
    "hn_title": "Developer tools to create spatial experiences for Apple Vision Pro",
    "original_title": "Developer tools to create spatial experiences for Apple Vision Pro",
    "score": 310,
    "hn_content": "- Apple has released developer tools for creating spatial experiences for their Vision Pro headset.\n- The headset is generating a lot of interest among tech-savvy individuals.\n- The Economist has stated that Apple needs developers to figure out what the headset is for.\n- There is a pattern of new technologies being misunderstood and undervalued initially.\n- Virtual reality (VR) has the potential to change the brain in ways that other forms of media can't.\n- VR has the ability to modify the self and change implicit bias in ways that other technologies cannot.\n- The primary readers of this post are new to the industry and would want background context on the topic.\n- The most important thing people should know is that Apple has released new developer tools for their Vision Pro headset.\n\nNote: This summary has been written using only the given text content, as instructed.- Apple's new Vision Pro headset is generating buzz among developers and early adopters.\n- The device is specifically targeted towards business applications and military training, rather than mass consumer adoption.\n- The high price point of $3,500 indicates Apple's focus on capturing early market share and building an app ecosystem.\n- Vision Pro incorporates eye tracking and hand gesture tracking, allowing for new interaction paradigms.\n- Developers can create apps for Vision Pro using existing iOS projects and integrating with UIKit or SwiftUI.\n- Meta's struggles with Oculus may be due to compromises made to reach a lower price point, unlike Vision Pro.\n- The device has the potential to revolutionize industries such as music production and offer unique user experiences.\n- The early adoption of Vision Pro will lay the foundation for future, more affordable consumer models.",
    "hn_summary": "- Apple has released developer tools for creating spatial experiences for their Vision Pro headset.\n- The device is specifically targeted towards business applications and military training, rather than mass consumer adoption.\n- The high price point of $3,500 indicates Apple's focus on capturing early market share and building an app ecosystem."
  },
  {
    "id": 36423622,
    "timestamp": 1687377855,
    "title": "Go 1.21 Release Candidate",
    "url": "https://go.dev/blog/go1.21rc",
    "hn_url": "http://news.ycombinator.com/item?id=36423622",
    "content": "Why Goarrow_drop_downLearnDocsarrow_drop_downPackagesCommunityarrow_drop_downThe Go BlogGo 1.21 Release CandidateEli Bendersky, on behalf of the Go team21 June 2023The Go 1.21 first Release Candidate (RC) is available today on the download page! Go 1.21 is packed with new features and improvements. Getting the RC (release candidate) allows you to experiment with it early, try it on your workloads, and report any issues before the final release (scheduled for August). Here are some notable changes and features in Go 1.21; for the full list, refer to the full release notes.(Please note that the first RC for Go 1.21 is called go1.21rc2 because a bug was found and fixed after tagging go1.21rc1)Tool improvementsThe Profile Guided Optimization (PGO) feature we announced for preview in 1.20 is now generally available! If a file named default.pgo is present in the main package\u2019s directory, the go command will use it to enable a PGO build. See the PGO documentation for more details. We\u2019ve measured the impact of PGO on a wide set of Go programs and see performance improvements of 2-7%.The go tool now supports backward and forward language compatibility.Language changesNew built-in functions: min, max and clear.Several improvements to type inference for generic functions. The description of type inference in the spec has been expanded and clarified.In a future version of Go we\u2019re planning to address one of the most common gotchas of Go programming: loop variable capture. Go 1.21 comes with a preview of this feature that you can enable in your code using an environment variable. See this LoopvarExperiment wiki page for more details.Standard library additionsNew log/slog package for structured logging.New slices package for common operations on slices of any element type. This includes sorting functions that are generally faster and more ergonomic than the sort package.New maps package for common operations on maps of any key or element type.New cmp package with new utilities for comparing ordered values.Improved performanceIn addition to the performance improvements when enabling PGO:The Go compiler itself has been rebuilt with PGO enabled for 1.21, and as a result it builds Go programs 2-4% faster, depending on the host architecture.Due to tuning of the garbage collector, some applications may see up to a 40% reduction in tail latency.Collecting traces with runtime/trace now incurs a substantially smaller CPU cost on amd64 and arm64.A new port to WASIGo 1.21 adds an experimental port for WebAssembly System Interface (WASI), Preview 1 (GOOS=wasip1, GOARCH=wasm).To facilitate writing more general WebAssembly (WASM) code, the compiler also supports a new directive for importing functions from the WASM host: go:wasmimport.Please download the Go 1.21 RC and try it! If you notice any problems, please file an issue.Previous article: Go Developer Survey 2023 Q1 ResultsBlog IndexWhy GoUse CasesCase StudiesGet StartedPlaygroundTourStack OverflowHelpPackagesStandard LibraryAbout Go PackagesAboutDownloadBlogIssue TrackerRelease NotesBrand GuidelinesCode of ConductConnectTwitterGitHubSlackr/golangMeetupGolang WeeklyCopyrightTerms of ServicePrivacy PolicyReport an Issuego.dev uses cookies from Google to deliver and enhance the quality of its services and to analyze traffic. Learn more.Okay",
    "summary": "- Go 1.21 Release Candidate (RC) is now available for download, packed with new features and improvements.\n- The Profile Guided Optimization (PGO) feature is now generally available, which can improve performance by 2-7%.\n- Go 1.21 introduces new built-in functions, type inference improvements, and new packages for structured logging, common operations on slices and maps, and comparing ordered values.",
    "hn_title": "Go 1.21 Release Candidate",
    "original_title": "Go 1.21 Release Candidate",
    "score": 309,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginGo 1.21 Release Candidate (go.dev)309 points by pk2200 14 hours ago | hide | past | favorite | 188 commentsphysicles 7 hours ago | next [\u2013]This is at least the biggest release since 1.18 with generics, possibly bigger. I\u2019m excited because the changes demonstrate a transition from the traditional go philosophy of almost fanatical minimalism, to a more utilitarian approach.Loop variable capture is a foot-gun that in the last six years has cost me about 10-20 hours of my life. So happy to see that go. (Next on my list of foot-guns would be the default infinite network timeouts \u2014 in other words, your code works perfectly for 1-N months and then suddenly breaks in production. I always set timeouts now; there\u2019s basically no downside)Interesting to see them changing course on some fundamental decisions made very early on. The slices *Func() functions use cmp() int instead of less() bool, which is a huge win in my book. Less was the Elegant yet bizarre choice \u2014 it often needs to be called twice, and isn\u2019t as composable as cmp.The slog package is much closer to the ecosystem consensus for logging. It\u2019s very close to Uber\u2019s zap, which we\u2019re using now. The original log package was so minimal as to be basically useless. I wonder why they\u2019re adding this now.I\u2019ve already written most of what\u2019s in the slices and maps packages, but it\u2019ll be nice to have blessed versions of those that have gone through much more API design rigor. I\u2019ll be able to delete several hundred lines across our codebase.What\u2019s next? An http server that doesn\u2019t force you to write huge amounts of boilerplate? Syntactic sugar for if err != nil? A blessed version of testify/assert? Maybe not, but I\u2019m happy about these new additions.replyoefrha 5 hours ago | parent | next [\u2013]> I always set timeouts now; there\u2019s basically no downsideBeware of a naive http.Client{Timeout: ...} when downloading large payloads. I've always set http.Client.Timeout since day one with Go due to prior experience, but was bitten once when writing an updater downloading large binaries, since the Timeout is for the entire request start to finish. In those scenarios what you actually want is a connect timeout, TLS handshake timeout, read timeout, etc.https://blog.cloudflare.com/the-complete-guide-to-golang-net... does a good job explaining how to set proper timeouts, except there's a small problem: it constructs an http.Transport from scratch; you should probably clone http.DefaultTransport and modify the dialer and various timeouts from there instead.In general, setting timeouts beyond the entire request timeout is pretty involved and not very well documented. Wish that can be improved.replycyode 3 hours ago | parent | prev | next [\u2013]> An http server that doesn\u2019t force you to write huge amounts of boilerplate?I just started my first Go tutorials this week. One of them was go.dev's Writing Web Applications [0]. I was actually struck by the lack of boilerplate (compared to frameworks I've used in Java/Python/etc.) involved.I get that it's a toy example, but do you know of any better write-ups on what a production Go web server in industry looks like?[0] https://go.dev/doc/articles/wiki/replybenhoyt 6 hours ago | parent | prev | next [\u2013]> This is at least the biggest release since 1.18 with generics, possibly bigger.I sort of see what you're saying, but then again, the addition of a couple of small generic packages (slices, map, cmp) and one larger package (log/slog) isn't exactly a huge amount of new surface area. Definitely not as big a qualitative change as generics themselves, which added I think it was about 30% more content to the Go spec.> The slog package ... I wonder why they\u2019re adding this now.Because it's very useful to a ton of people, especially in the server/service world where Go is heavily used. To avoid a 3rd party dependency. To provide a common structured logging \"backend\" interface. See more at https://go.googlesource.com/proposal/+/master/design/56345-s...I agree we can be enthusiastic, but the Go team is still spending a lot of time getting APIs right, finding solutions that fit well together, and so on. I don't think it's the downward spiral of \"let's pull in everything\" we've seen in P\u0336y\u0336t\u0336h\u0336o\u0336n\u0336 some other languages.replyLrnByTeach 3 hours ago | parent | prev | next [\u2013]> This is at least the biggest release since 1.18 with generics, possibly bigger.> the changes demonstrate a transition from the traditional go philosophy of almost fanatical minimalism, to a more utilitarian approach.This change demonstrate that \"to stay as a mainstream\" programming language, you can't preach minimalism , has to adopt utilitarian approach.replyashishb 6 hours ago | parent | prev | next [\u2013]Even Java and Python have default network timeouts. I don't know why that's the case though.https://ashishb.net/all/infinite-network-timeouts-in-java-an...replyashishb 18 minutes ago | root | parent | next [\u2013]Typo: I meant no default network timeouts :/replycpeterso 4 hours ago | root | parent | prev | next [\u2013]The popular Python \u201crequests\u201d HTTP library doesn\u2019t have a default timeout. There\u2019s a 2015 GitHub issue asking for a default timeout, if even an opt-in environment variable to avoid breaking API compatibility. There\u2019s a lot of comments on the issue, but no commitment to implement or close as \u201cwon\u2019t fix\u201d.https://github.com/psf/requests/issues/3070replynirui 6 hours ago | parent | prev | next [\u2013]As far as I can tell, the network timeout (specifically SetDeadline, SetReadDeadline and SetWriteDeadline) is handled by Go runtime not by the OS, given how complex real world systems are, I wouldn't hold my breath on that one.replymeling 6 hours ago | parent | prev | next [\u2013]You might be interested in this discussion https://github.com/golang/go/discussions/6022 about http serve mux.replyphysicles 6 hours ago | root | parent | next [\u2013]You seem to have linked to an issue about error messages in text/template; did you intend to link to something else?replymeblum 4 hours ago | root | parent | next [\u2013]Probably meant to link this. https://github.com/golang/go/discussions/60227 It\u2019s an interesting discussion about making changes to the default router.replynu11ptr 13 hours ago | prev | next [\u2013]It is interesting to see them add things like the \"clear\" function for maps and slices after suggesting to simply loop and delete each key one at a time for so long. Is this a result of the generics work that makes implementation easier vs. the extra work of making a new \"magic\" function (like \"make\", etc.)?replymaximilianburke 13 hours ago | parent | next [\u2013]That `clear` on a slice sets all values to their type's zero value is going to be extremely confusing especially coming from other languages (Rust, C#, C++, Java, ...) where the same-named function is used on list-ish types to set their length to zero.Doubly-so when `clear` on a map actually seems to follow the convention of removing all contained elements.replyklodolph 12 hours ago | root | parent | next [\u2013]Sure, although as a Go user, the behavior described is exactly what I\u2019d expect. These new functions are no different from functions that you could write yourself.replymaccard 11 hours ago | root | parent | next [\u2013]I'm a go user, and think it's dumb that:  clear(f)  fmt.Println(len(f))will have different results if f is a slice and a map.replyklodolph 10 hours ago | root | parent | next [\u2013]I guess, but that seems expected to me at this point, and consistent within the semantics of how slices and maps work (and other values).Maps are kind of like  type map *struct{ len int; ... }Slices are kind of like  type slice struct{ len int; ... }We get a lot of convenience by having the pointers auto-dereferenced, but the cost is that the semantics are still different and there are no syntactic markers to remind us of the fact.I don't think any language has really given us something that is completely intuitive here. Python's semantics with the list type are a constant surprise to newcomers. C++\u2019s semantics surprise newcomers. Rust's semantics surprise newcomers. Surprises all around. The best you can hope for is something that is internally consistent.The slice in Go is more or less equivalent to &[] in Rust or std::span in C++. The whole idea of passing a pointer by value is key to understanding the semantics of most modern programming languages. Like, is Java pass-by-value or pass-by-reference? You can argue the point, but whatever label you decide is appropriate for Java, it\u2019s useful to think of Java as passing pointers by value. Same with Python, Rust, Go, etc. This is not intuitive for people who are new to programming.replymaccard 7 minutes ago | root | parent | next [\u2013]Every language has sharp edges, but go's whole MO is to avoid rabid footguns at the expense of verbosity (IMO). The for-shadow issue thats fixed this release is a great example of go deciding to do the intuitive thing rather than the \"correct\" thing because that's how people work.I don't think the implementation details matter to a user of a map or a slice (or an array for that matter) - they're language builtins (as opposed to span, vector and map in c++ which are library types).replyshakow 7 hours ago | root | parent | prev | next [\u2013]> The slice in Go is more or less equivalent to &[] in Rust or std::span in C++.Not really, because they are mutable, they can mutate the underlying memory, and they can re-allocate. They are a weird mix of &mut []/Vec or std::{span,vector}.In contrast, a Rust &[] can may the underlying storage (if it's an &mut []), but cannot spin out a new storage on its own and start a new life without a backing structure \u2013 and I'm not utterly familiar with std::span, but I would wage the semantics are close.Go slices can, which is why they are always tricky, especially for beginners. Not only does = not really do what is intuitively expected, not only every beginner will be bitten in the ass by forgetting the `x =` in `x = append(x, y)`, but it is impossible, when calling a function expecting a slice, to know if this function only wants a view on some memory or actually expect to modify it; a capital difference that is very clear in Rust or C++ type systems.replyklodolph 7 hours ago | root | parent | next [\u2013]To be honest I kinda hate the reply to \u201cX is like Y\u201d comment when someone says \u201cX is not like Y because of difference Z\u201d. It's just\u2026 so pedantic. The whole reason we say \u201cX is like Y\u201d instead of \u201cX is the same as Y\u201d is because X is not the same as Y. I\u2019m just really tired of seeing this response on HN over and over. I was pretty damn explicit when I said \u201cmore or less\u201d and you\u2019re here to argue about whether it is legal for me to say \u201cmore or less\u201d in this context. I mean, geez, what a drag.If you talk about how Go slices are tricky for beginners, but you cite C++ as some kind of gold standard against which Go should be compared, then I think you\u2019ve lost the plot\u2014C++\u2019s type system is a complete and utter trash fire for people who are new to programming. Rust, as well, is very difficult for people to get into. Even the Python semantics for lists get people tripped up all the time.  a = [[]] * 5  b = [[] for _ in range(5)]I bring this up because there is no language that gets things right for beginners and still provides the tools which professional programmers expect to have. And if you want to pick an example of a language that is particularly bad for beginners, C++ is it. C++ is shit for beginners. Complete shit. I bring up the Python example because it\u2019s something I\u2019m always explaining to people who are learning Python\u2014Python is ok, but slicing in Python creates new arrays containing a copy of the slice's contents.The nuances of how references and values work is something that you have to work through, and then you have to come to terms with the conventions for the particular language you are using. IMO, Go\u2019s slices are fine\u2026 you really just have to be careful about aliasing a slice you don\u2019t own, but then again, that\u2019s true for languages like C++, Python, Java, and C# as well. Rust is the only one that\u2019s really different here.replyshakow 2 hours ago | root | parent | next [\u2013]> The whole reason we say \u201cX is like Y\u201d instead of \u201cX is the same as Y\u201d is because X is not the same as YBeing able to change the underlying data is a pretty big difference. Technically, their only solid common point is that they address contiguous spaces in memory.> you cite C++ as some kind of gold standardI never did; I highlighted the difference between immutable views vs. whatever Go slices are.> I think you\u2019ve lost the plotNo need for the snark there.replysteveklabnik 10 hours ago | root | parent | prev | next [\u2013]> The slice in Go is more or less equivalent to &[] in Rust or std::span in C++.My understanding is, to use the Rust/C++ term, slices in Go are owned, but they are not in Rust or C++. That is, they're a pointer + length in the latter two, but a pointer, length, and capacity in Go.replyklodolph 7 hours ago | root | parent | next [\u2013]The type in Go does not carry ownership information. It is not a useful distinction to say that slices are \"owned\" in Go.replysteveklabnik 7 hours ago | root | parent | next [\u2013]Types in C++ don\u2019t carry ownership information inherently either, but they\u2019re still thought of in these terms. I know Go doesn\u2019t often use these terms, which is why I clarified.I think the distinction is useful specifically because it explains why Go slices work differently than in at least those two languages.replyklodolph 7 hours ago | root | parent | next [\u2013]Sure, there may be a right way to say this.I have a particular axe to grind when it comes to the word \u201cownership\u201d of objects in programming. In C++ and Rust there is a very natural sense of ownership in that the owner of an object is who may deallocate the object, and that ownership may be shared with std::shared_ptr<T> in C++ or Rc<T> / Arc<T> in Rust. Ownership is such a useful concept in these languages because it is generally true that somebody must deallocate the object, and it must happen safely.As a very natural consequence, people who spend long hours working in C++, Rust, C, or other similar languages start to associate, very closely, the notions of ownership and correctness. And indeed, ownership is broadly useful outside C++, Rust, and C. Even in a garbage-collected language like Java or Go, it is generally useful to have clear ownership. You don't modify objects that you don't own, or use objects outside their scope.But occasionally, you come across a piece of code where ownership gets in the way. Perhaps some garbage-collected algorithm that transforms data with pointers going all over the place. It probably sounds like a mess, but that is not necessarily true either\u2014it can be perfectly good, correct, readable code.So while ownership is a useful concept for talking about specific pieces of Go code, or specific pieces of Java code, it is not applicable to all Go or Java code, and that\u2019s fine. It\u2019s kind of like talking about code in terms of functions\u2014nearly every language on the planet makes heavy use of functions (or some equivalent), but it\u2019s also true that code does not have to be organized in functions, and you will occasionally see code that does not use functions.replyor10nx 6 hours ago | root | parent | prev | next [\u2013]> Python's semantics with the list type are a constant surprise to newcomers.Care to elaborate?replyJabbles 12 hours ago | root | parent | prev | next [\u2013]The builtin clear() will handle cases like deleting NaN from a map.replyesprehn 8 hours ago | root | parent | prev | next [\u2013]Go slices are passed by value so there's no way for clear() to resize the underlying array without reassignment.I suppose it could have been x = clear(x) or clear(&x), but certainly if you understand Go semantics then seeing any function call do Foo(slice) already signals that the call can't modify the length since there's no return value.replynu11ptr 8 hours ago | root | parent | next [\u2013]This is a great example of why I dislike Go. It is not obvious that a slice is passed by value while a map is not or why. Therefore every action on it feels a bit weird because of that, and now you have functions like \"clear\" that take a very non-obvious action. Personally, I'd rather have pass-by-value return an error and only allow pass-by-reference (better: they should have had maps and slices be pointers). I'm not sure I'd ever use a function that set every value to its zero type.replyesprehn 8 hours ago | root | parent | next [\u2013]I agree the semantics seem weird, I've occasionally wanted the equivalent of x = clear(x) but I can't think of a time when I've wanted to set all the values to the zero value.The bug doesn't seem to discuss use cases for it either. The most I could find is: https://github.com/golang/go/issues/56351#issuecomment-13326...Which boils down to \"doing what clear(slice) does cannot be implemented efficiently today\" but I'm not sure how having an efficient way to do something folks don't want is useful?There's already a memory clearing optimization in the compiler: https://github.com/golang/go/issues/19266So yeah I'm not sure under what situations folks will use clear(slice).replyaatd86 5 hours ago | root | parent | prev | next [\u2013]You often do it in Go to avoid pointing at something needlessly which would delay or even keep that something from being garbage collected.replyneonsunset 12 hours ago | root | parent | prev | next [\u2013]C#\u2019s array/span.Clear() does exactly the same - it zeroes them out.reply6D794163636F756 12 hours ago | root | parent | prev | next [\u2013]It sounds like they're inheriting the naming from the calloc command. Allocates then 0's the memory. It lines up with the go devs' backgroundsreplyskybrian 11 hours ago | parent | prev | next [\u2013]From the spec [1], it was because the loop doesn't work to clear a map with a NaN key.[1] https://github.com/golang/go/issues/56351replyslantedview 7 hours ago | parent | prev | next [\u2013]> after suggesting to simply loop and delete each key one at a time for so longThose were always bad alternatives to a real design problem, they just didn't have a good alternative to offer at the time.replyWaterluvian 13 hours ago | parent | prev | next [\u2013]It might also be that they\u2019ve worked their way down the priority list and are getting to these features that are largely just to tidy up code.replystefan_ 11 hours ago | root | parent | next [\u2013]Clearing a container is usually a much simpler and faster operation than looping through all and removing them individually. That's not a question of tidying something up.replyonionisafruit 11 hours ago | root | parent | next [\u2013]There were compiler optimizations for clearing by iterating. I haven\u2019t looked at the code, but I suspect this won\u2019t be much more efficient than iterating was with the optimizations.replyyencabulator 7 hours ago | root | parent | next [\u2013]I expect both will result in the same code; the only difference is that the clear built-in can handle maps with NaN keys.replyphilosopher1234 13 hours ago | parent | prev | next [\u2013]One aspect of this is that it was formerly impossible to delete NaNs from a map[float64]T, unless you had the nan already.replyearthboundkid 8 hours ago | root | parent | next [\u2013]Even with the NaN, the NaN wasn't equal to itself, so it still wouldn't delete. Really, they just should have forbidden float64 key'd maps, but too late for that, I guess.replyalex_lav 12 hours ago | parent | prev | next [\u2013]> It is interesting to see them add things like the \"clear\" function for maps and slices after suggesting to simply loop and delete each key one at a time for so long.Slowly walking back dogmatic positions is just how the Go team works.I say this as a person that wrote Go full time for a handful of years.replyyencabulator 7 hours ago | root | parent | next [\u2013]No, it's because a use case was discovered that the for loop approach can't handle: NaN keys.replyalex_lav 7 hours ago | root | parent | next [\u2013]I would argue Go's inability to manage NaN keys is irrelevant to the desire for \"clear\", in that I would argue that the NaN keys issue should be fixed _regardless_ of clear.replyHakkin 13 hours ago | prev | next [\u2013]Huh, I'm glad to see generic Min/Max functions, but the fact that they're built-ins is a little odd to me. I would have expected them to put a generic math library into the stdlib instead. The fact the stdlib math package only works with float64s has always struck me as a poorly thought out decision.replyklodolph 12 hours ago | parent | next [\u2013]Making them builtins allows them to work as you\u2019d expect with cases like,  func clamp(x float64) float64 {    return max(0, min(1, x))  }With ordinary functions, the arguments are assigned types too soon, and you get integer types for 0 and 1 in the above code. In C++ you might make the types explicit:  template<typename T>  T clamp(T x) {    return std::max<T>(0, std::min<T>(1, x));  }That\u2019s not meant to be exactly the way you\u2019d write these functions, but just a little bit of sample code to show how the typing is different.replyHakkin 12 hours ago | root | parent | next [\u2013]That doesn't seem to be true, unless I'm misunderstanding something. https://go.dev/play/p/ymM0tD3aGYg?v=gotipObviously these sample functions don't take into account all the intricacies of float min/max functions.replyklodolph 11 hours ago | root | parent | next [\u2013]You can  const x = min(a, b)assuming a and b are const.replyonionisafruit 10 hours ago | root | parent | next [\u2013]I can't think of a use case for that. If all the inputs are consts, then you know the values and can just assign it to be the less of a or b. Am I missing something here?replyklodolph 7 hours ago | root | parent | next [\u2013]Const are build-time constants, they are not necessarily the same value across all build configurations.replyonionisafruit 7 hours ago | root | parent | next [\u2013]That\u2019s a good point.replynordsieck 10 hours ago | root | parent | prev | next [\u2013]> I can't think of a use case for that.It helps to document intent.Probably not so useful for min, but it can be more useful for more complex functions.replytjalfi 12 hours ago | parent | prev | next [\u2013]The proposal[0] gives a rationale. Using builtin functions lets them be variadic without allocating a slice.[0] https://github.com/golang/go/issues/59488replymorelisp 3 hours ago | root | parent | next [\u2013]While I suspect open coding may make the optimization a little easier, there's no reason it couldn't optimize out a slice and fixed 2-3 iteration loop with the same result.The proposal's real conclusion was \"the decision cannot be resolved by empirical data or technical arguments.\"replytinco 12 hours ago | parent | prev | next [\u2013]What sort of use case do you see for non-float64 math operations in a Go application?replyHakkin 10 hours ago | root | parent | next [\u2013]Well, the obvious ones are of course Min and Max functions, which is resolved with this. Other ones I commonly find myself wanting to use with integers would be math.Abs and math.Pow I guess. Otherwise they are mostly functions useful with floats, so ultimately I understand the logic, though even in that case, it would be nice if they were usable with float32s as well without casting back and forth.Personally I try to avoid using floats for calculations if I can (unless it's obviously warranted), I've encountered far too many foot guns from using them, though honestly the same can be said about integers in some situations too. I wish there was a package like math/big that was more accessible, I find the current interface for it pretty abysmal.replytedunangst 11 hours ago | root | parent | prev | next [\u2013]Float32 is pretty popular in graphics.replycube2222 12 hours ago | prev | next [\u2013]I'm a bit surprised that the slog package was added to the stdlib, but it does seem to use the API that I think is the most ergonomic across libraries I saw in Go (specifically, varargs for key values, and the ability to create subloggers using .With), so I guess it's nice most of the community will standardize around it.If all goes well, you won't have different libraries using different loggers anymore, in some not too distant future, which should improve easy composability.replyfourseventy 12 hours ago | parent | next [\u2013]I literally just updated all of my golang logging to use zerolog so i could get severity levels in my logs. Bad timing on my part! I guess ill re-do it all with slog, i prefer stdlib packages to third party packages.replyd1str0 12 hours ago | root | parent | next [\u2013]Tomorrow we will see a blog post titled \u201cWhy I always use 3rd part dependencies instead of stdlibs\u201dreplyphilosopher1234 12 hours ago | root | parent | prev | next [\u2013]ideally an slog handler is built for zerolog, so that you can use slog BE and keep the zerolog FEreplychrsig 12 hours ago | parent | prev | next [\u2013]I have mixed feelings about it. if nothing else, the name...\"slog\" isn't exactly the word i want repeating to myself as I'm working.replytomjakubowski 12 hours ago | root | parent | next [\u2013]A little honesty is a good thingreplyendorphine 4 hours ago | root | parent | prev | next [\u2013]You can alias it when importing it then.replyresonantjacket5 12 hours ago | parent | prev | next [\u2013]I think it's pretty exciting. Don't have to keep using regex or weird parsing to get the key values from logs that one wants.Also a bit surprised how fast it was added to the stdlib, but perhaps there was a lot more consensus on the api compared to other golang proposals.replyvl 11 hours ago | parent | prev | next [\u2013]I wonder if it's possible to use slog in 1.20 already, is there a back-port?I'm changing logging on the service right now and it just makes sense to use it now, but entire service can't move to pre-release version of go.replyonionisafruit 11 hours ago | root | parent | next [\u2013]Indeed it's in \"golang.org/x/exp/slog\"replymdaniel 11 hours ago | root | parent | next [\u2013]https://pkg.go.dev/golang.org/x/exp/slog#hdr-Levels seems to fall into the same trap that drives me _starkraving_ about the 18,000 different(!) golang logging packages: there doesn't seem to be a sane way of influencing the log level at runtime if the author doesn't have the foresight/compassion to add a command-line flag or env-var to influence it. A similar complaint about the \"haha I log json except this other dep that I import who logs using uber/zap so pffft if you try to parse stdout as json\"replyonionisafruit 10 hours ago | root | parent | next [\u2013]That bugs me too. I consider it a red flag for a library to log to anything except a `log.Logger` passed in from the caller. Now I'll expand that to include a `slog.Logger` as well. If the library is logging directly to stderr or stdout, that is a sign that it probably has other design issues as well.replylokar 10 hours ago | root | parent | next [\u2013]Put the logger in the contextreplyvl 10 hours ago | root | parent | next [\u2013]Isn't it considered bad practice?replypreseinger 8 hours ago | root | parent | next [\u2013]yes, in generalthe context stores request-scoped data, whether or not the logger is a request-scoped value is a grey areaand to reply to sibling comment, opentelemetry is basically a house of antipatterns, definitely do not look to it for guidancereplymdaniel 7 hours ago | root | parent | next [\u2013]> opentelemetry is basically a house of antipatterns\"Look on My Works Ye Mighty and Despair!\"https://github.com/open-telemetry/opentelemetry-collector/tr... -> https://github.com/open-telemetry/opentelemetry-collector-re... ... and then a reasonable person trying to load that mess into their head may ask 'err, what's the difference between go.opentelemetry.io/collector and github.com/open-telemetry/opentelemetry-collector-contrib?' $ curl -fsS go.opentelemetry.io/collector | grep go-import <meta name=\"go-import\" content=\"go.opentelemetry.io/collector git https://github.com/open-telemetry/opentelemetry-collector\">Oh, I see. Thanks.replyeuroderf 2 hours ago | root | parent | prev | next [\u2013]\"The context stores request-scoped data\" might be another Go-team dogma due for course correction RSN.replytptacek 7 hours ago | root | parent | prev | next [\u2013]I don't enjoy the otel APIs, but they are implicitly scoped; contexts are a natural place to store them.replytptacek 9 hours ago | root | parent | prev | next [\u2013]It's already idiomatic for OpenTelemetry, and otel has use cases that overlap slog.replyidbfs 8 hours ago | prev | next [\u2013]Worth noting that the release announcement was written by Eli Bendersky, of https://eli.thegreenplace.net/ fame. It's a fantastic technical blog with literally decades of content.replydjsavvy 11 hours ago | prev | next [\u2013]The new experimental fix for loop variable capture [0] is huge; this is the biggest footgun with the language in my experience.I hope the experimental fix makes it into the next version of Go by default.[0] https://github.com/golang/go/wiki/LoopvarExperimentreplyepmatsw 7 hours ago | parent | next [\u2013]Wow, that\u2019s a blast from the past. Those code examples look exactly like the var to let changes in ES2015\u2026replyubavic 13 hours ago | prev | next [\u2013]I enjoy Go so much. It is almost perfect language for getting things done, but I still can't understand some design choices.Does someone knows why Go uses env variables (like GOOS and GOARCH) instead command line arguments?replyfrancislavoie 12 hours ago | parent | next [\u2013]Env vars make it easier to automate in CI. The actual script to build for each os/arch is the same but only the vars change. It's convenient. You can always prefix the command with the env vars on the same line if you want a one-liner.replysuperb_dev 13 hours ago | parent | prev | next [\u2013]It could make it easier for build systems to be multi platform. You don\u2019t have to keep track of custom args and add them to every call, you can just set the environment once.replyCthulhu_ 13 hours ago | parent | prev | next [\u2013]I guess so you can configure them on e.g. a build server instead of tweak your build command, but then, neither is particularly portable.replyabalaji 13 hours ago | parent | prev | next [\u2013]I assume so that it can be sticky across invocations and is easy enough to debug using `go env`replyPatrickmi 10 hours ago | parent | prev | next [\u2013]As a PL focused on building networking services across different arch and platforms if it was any different that\u2019ll be the first thing to hate in goreplymonocasa 13 hours ago | prev | next [\u2013]Nice, my push for actually using the sha256 instructions on amd64 finally got released. 3x-4x increase in hash speed on most x86 which is really nice for content addressable storage use cases like handling container images.replycandiddevmike 13 hours ago | parent | next [\u2013]Got a link to the PR? Curious to see how this is implemented.replyjeffbee 13 hours ago | root | parent | next [\u2013]It looks like https://go-review.googlesource.com/c/go/+/408795replyxyst 11 hours ago | root | parent | next [\u2013]Seems like these changes only benefit you if you have an Intel processor. If you have an AMD or Arm processor, you won\u2019t see any difference.Also, interesting to see assembly again after many years. Haven\u2019t touched that since college during a compilers and assembly course.Edit: never mind, amd has implemented these \u201csha-ni\u201d instructions since \u201cZen\u201d [1][1] https://en.wikipedia.org/wiki/Intel_SHA_extensionsreplymonocasa 11 hours ago | root | parent | next [\u2013]And adding that they already had support for ARM sha256 instructions https://github.com/golang/go/blob/master/src/crypto/sha256/s...replyjeffbee 13 hours ago | parent | prev | next [\u2013]Huh, that is interesting how they do that. They are enabling SHA instruction support based on CPUID and without respect to the value of GOAMD64. I did not realize Go was doing that.replymonocasa 12 hours ago | root | parent | next [\u2013]AFAIK, the sha256 extension isn't a part of any of the x86_64 microarchitecture levels, so a cpuid check is most appropriate here at the moment.replyjeffbee 12 hours ago | root | parent | next [\u2013]Fair point. But what surprised me was the way HasAVX2 is getting set. It is set on the hardware that has AVX2, even if you set GOAMD64=v1.replyburntsushi 12 hours ago | root | parent | next [\u2013]Yup, that's standard, including in other ecosystems. It's what I do in ripgrep for example when your target is just standard `x86_64` (v1). GNU libc does it as well. And I believe Go has been doing it for quite some time. (The specific one I'm aware of is bytes.Index.)This was especially important back before the days of v1/v2/v3/etc of x86_64, since Linux distros distributed binaries compiled for the lowest common denominator. So the only way you got fast SIMD instructions (beyond SSE2) was with a CPUID check and some compiler features that let you build target specific functions. (And I'm not sure what the status is of Linux distros shipping v1/v2/v3/etc binaries.)replyals0 12 hours ago | root | parent | prev | next [\u2013]In case anyone else was wondering what this is about, here's some useful background https://github.com/golang/go/issues/45453replysilisili 12 hours ago | prev | next [\u2013]These new packages, like slices and maps, were a long time coming. So glad it's finally here.I cannot even begin to tell you how many different itemInSlice functions I've written over the years.replytptacek 9 hours ago | parent | next [\u2013]We've had `slices` and `maps` in the `exp` tree for awhile; I think they're pretty widely used already.replythrowawaygo 12 hours ago | parent | prev | next [\u2013]tbh whenever I write one of these it makes me wonder if I can accomplish the same logic in a better way.replyjsd1982 10 hours ago | prev | next [\u2013]A good first step for better WASM support, however it's currently incompatible with tinygo's WASM target.For example, I'm working on a custom WASM host (non-browser) and have a tinygo WASM package with import bindings like this:  //go:wasm-module rex  //export wait_for_event  func wait_for_event(timeout_usec uint32, o_event *uint32) boolBoth these comment directives are tinygo-specific of course, and now Go has added its own third and different directive of course.When I add Go's desired `//go:wasmimport rex wait_for_event` directive, it complains about the types `*uint32` and `bool` being unsupported. Tinygo supports these types just fine and does what is expected (converting the types to uint32). On the surface, I understand why Go complains about it, but it's such a trivial conversion to have the compiler convert them to `uint32` values without requiring the developer to use unsafe pointer conversion and other tricks.Hopefully I can find a way to keep both tinyo and Go 1.21rc2 happy with the same codebase going forward and be able to switch between them to evaluate their different strengths and weaknesses.replyjbrandhorst 8 hours ago | parent | next [\u2013]The type conversion will improve in new releases. FYI recent TinyGo releases supports go:wasmimport too. The desire is definitely to allow users to use either or at least easily migrate. Thank you for trying it out!replyw10-1 12 hours ago | prev | next [\u2013]Overall, a release more for engineering than language. Even the new API's are mainly optimizations, and optimizations are netting ~10% (pretty good for an mature toolset).The WASI preview shows Google is committing engineering resources to WASM, which could grow the community a touch.replyjbrandhorst 8 hours ago | parent | next [\u2013]FWIW the WASI support is 99% a community contribution, so unfortunately it's not much of an indicator of Google's commitment.replyshowdeddd 13 hours ago | prev | next [\u2013]I wonder if the new stdlib logger is featured enough to get rid of logrus/zerolog.replyJyB 13 hours ago | parent | next [\u2013]I'm wondering the same. Anyone already played for some time with the pkg?replyrichieartoul 12 hours ago | root | parent | next [\u2013]I've been using it for a few weeks now. Overall pretty happy with it. Has good default API, and can be basically arbitrarily extended as needed. We even have a custom handler implementation that allows us to assert on specific logs being emitted in our stress/fuzz testing.replyxh-dude 10 hours ago | root | parent | prev | next [\u2013]There\u2019s been an emphasis in slog on Handler composition over directly implementing a ton of features. Personally I love it - there are things I\u2019ve needed, that slog can do, that few other loggers make easy/possible.Zerolog will still be relevant for raw performance (slog is close to zap on perf - doesn\u2019t win benchmarks, doesn\u2019t look out of place either), fewer really need it but some really do.replyKarupan 13 hours ago | prev | next [\u2013]Release candidatereply29_29 13 hours ago | prev | next [\u2013]This is a big release. Lots of new packages. The language is changingreplybenhoyt 11 hours ago | parent | next [\u2013]It is a big release, and the number of new stdlib packages (4) is relatively high for a Go release. That said, apart from the addition of some minor builtins (min, max, clear), the language isn't changing. That happened back in 1.18 with the introduction of generics.replyPatrickmi 10 hours ago | root | parent | next [\u2013]Go releases feels it\u2019s has changed massively when reading the release notes but when coding it\u2019s just like every other dayreplyearthboundkid 13 hours ago | prev | next [\u2013]An extremely generic release.replycandiddevmike 13 hours ago | parent | next [\u2013]> New slices package for common operations on slices of any element type. This includes sorting functions that are generally faster and more ergonomic than the sort package.> New maps package for common operations on maps of any key or element type.> New cmp package with new utilities for comparing ordered values.Pun intended? =Dreplyevacchi 13 hours ago | parent | prev | next [\u2013]GOOS=wasip1 is pretty cool IMO (disclaimer: I work on wazero.io)replykernal 11 hours ago | parent | prev | next [\u2013]hiyoreplybbkane 13 hours ago | prev | next [\u2013]I love the new stdlib additions- I've been pulling in these dependencies since generics arrived and it'll be nice to have them built-in.replyopenasocket 12 hours ago | prev | next [\u2013]Glad to see the crypto performance improvements, I noticed a major regression in the performance of some auth code with 1.20replytastysandwich 9 hours ago | prev | next [\u2013]Really glad to see some of these new packages (sort, map, etc) making use of generics. Should reduce the need for a lot of helper functions.Also really excited to see loop capture variables finally getting sorted out. It is a constant pain point with new devs, and I have no good answer when they ask \"but WHY is it like this?\"More information about loop capture here for those interested https://github.com/golang/go/discussions/56010replyyencabulator 7 hours ago | parent | next [\u2013]> \"but WHY is it like this?\"Because, historically, it's been like that all over, it's not just Go. For example, Python has the same loop variable reuse.Probably comes from a time when compilers were a lot simpler, and all local variables were allocated stack space for the whole duration of the function call.replysuessflorian 9 hours ago | prev | next [\u2013]Nice - but hang on a second, I thought you cannot shadow language keywords in Go. So projects bumping to 1.21 in the future should be aware that you will run into compile time errors all of a sudden\u2026 doesn\u2019t that actually break the compatibility promise?  max := something()https://go.dev/doc/go1compatreplyoefrha 9 hours ago | parent | next [\u2013]You can shadow any builtin function. package main func main() {  arr := make([]int, 0, 10)  make := 1  arr = append(arr, make)  len := func(arr []int) int { return -1 }  println(len(arr))  // Output: -1 }https://go.dev/play/p/pG3Qi8G4dS5replytedunangst 9 hours ago | parent | prev | next [\u2013]Builtins aren't keywords.replymedellin 9 hours ago | parent | prev | next [\u2013]A function is not a keyword.replyH1Supreme 13 hours ago | prev | next [\u2013]The new built in functions for slice manipulation are a welcome addition!replyWhereIsTheTruth 12 hours ago | prev | next [\u2013]> New built-in functions: min, max and clear.What a mistake.. reserved keywords are words I can no longer use for myself...Zig does it better by requiring a prefix @ for most their builtin needsreplyBarkMore 11 hours ago | parent | next [\u2013]min and max are predeclared identifiers in the universe block, not reserved words. https://go.dev/ref/spec#Predeclared_identifiersYou can continue to declare your own entities with these names.replyphilosopher1234 12 hours ago | parent | prev | next [\u2013]They're not reserved keywords. Existing/package defined min/max functions would take precedence. They have the same semantics as `append`replyWhereIsTheTruth 12 hours ago | root | parent | next [\u2013]You refactored your code, you think you wrote your ``min`` function, but no, it'll call the builtin one, without warning you..I don't like this design..replyvito 12 hours ago | root | parent | next [\u2013]The compiler will tell you if the types aren't compatible, and this is only for primitive comparable types. What `min()` implementation could you have that even does something different?replyKRAKRISMOTT 12 hours ago | root | parent | next [\u2013]A heap?replyChiron1991 12 hours ago | root | parent | prev | next [\u2013]Not too familiar with go toolchains, but I bet there's a linter that will warn you about shadowing builtins.replyMawr 6 hours ago | root | parent | next [\u2013]Yep: \"variable append has same name as predeclared identifier (predeclared) go-golangci-lint\"replydgfitz 12 hours ago | root | parent | prev | next [\u2013]Qt uses qMin and qMax, it may have been nice if go went with like gMin and gMaxreplybananapub 12 hours ago | root | parent | prev | next [\u2013]if you have so few tests and so little code review that this matters then I am not sure what to suggestreplythrowawaygo 12 hours ago | parent | prev | next [\u2013]breaks all my variables named min and maxreplypjmlp 12 hours ago | parent | prev | next [\u2013]For anyone that misses their Objective-C days.replythrowaway5959 12 hours ago | prev | next [\u2013]Why is map copy \"dst, src\" vs \"src, dst\"?replyklodolph 12 hours ago | parent | next [\u2013]Copy operations in Go are normally destination first, source second. This includes builtins like copy() and library functions like io.Copy(). Making it \"src, dest\" would make this one case the opposite of all the others.Note that the order mimics variable assignment. You copy an integer with:  var src, dest int  dest = src // dest first, src secondI appreciate the consistency.replyXeoncross 12 hours ago | root | parent | next [\u2013]Thanks, \"mimics variable assignment\" is a good way to remember itreplykinghajj 12 hours ago | parent | prev | next [\u2013]It's not that uncommon.https://en.cppreference.com/w/cpp/string/byte/memcpyhttps://en.cppreference.com/w/cpp/string/byte/strncpyhttps://en.wikipedia.org/wiki/X86_assembly_language#Syntaxreplyesprehn 8 hours ago | parent | prev | next [\u2013]To match the semantics of dst = copy(src). Multiple languages model operations like this in assignment order.replynasretdinov 12 hours ago | prev | next [\u2013]I am honestly surprised nobody mentioned the intention of Go team to make multipath TCP the default in later releasesreplykkirsche 12 hours ago | parent | next [\u2013]Can you elaborate on why this is surprising for those who don\u2019t fully understand the differences?replynasretdinov 12 hours ago | root | parent | next [\u2013]I don't think Multipath TCP has been tested in enough environments to become the default yet. It's compatible with TCP, yes, but it's mostly useful for e.g. mobile devices that have multiple links like Wi-Fi and 4G, and it lets users to maintain TCP connection to a certain service even when moving across networks. Go seems to be server-oriented first, and there are some potential downsides to multipath TCP in a datacenter environment (e.g. potentially higher CPU usage, etc).replyarp242 12 hours ago | root | parent | next [\u2013]\"In a future Go release we may enable Multipath TCP by default on systems that support it.\"This could be five years from now. Or maybe never.replyPatrickmi 10 hours ago | root | parent | next [\u2013]From what I heard the reason for not defaulting, its not yet acceptable across different platforms esp windows and most who\u2019ll need this are data centers 5 years its too long, since linux kernel has accepted mptcpreplyslantedview 7 hours ago | prev | next [\u2013]This is great, but why do I get the sense that Golang's development is so slow? Ex:Java: We added structured concurrency and virtual threads!Golang: We added a min function!Most of the standard lib still doesn't properly support generics, and at this pace, it will be another 5 years at least before it does.replyphysicles 7 hours ago | parent | next [\u2013]Touch\u00e9. When I noticed how happy I was that they added a min function, Stockholm syndrome came to mind.Tbh I don\u2019t see most of the standard lib benefitting from generics. For example, json.Unmarshal wouldn\u2019t be dramatically better with generics \u2014 in practice, I rarely see runtime errors where I passed the wrong kind of thing to that function.I personally love the slow pace of go development. I love that I don\u2019t need to refactor my code every year to take advantage of whatever new hotness they just added. The downside is that stuff that\u2019s annoying now will be annoying forever (like those times when you want a more expressive type system), but I\u2019m willing to live with that.replyMawr 6 hours ago | parent | prev | next [\u2013]Because great care was taken for the 1.0 release to be a complete design. Most language changes since then have just been fixes. That's why Go 1.0 code is basically the same as Go 1.21 code.replySergeAx 8 hours ago | prev | next [\u2013]Please add \"RC1\" to post title. Currently it's misleading than a stable release is here.replyphilosopher1234 13 hours ago | prev | next [\u2013]Seems like a really substantial release to me. The new built in functions min, max, and clear are a bit surprising, even having followed the discussions around them. The perf improvements seem pretty great, I\u2019m sure those will get much love here.Personally, I\u2019m most excited about log/slog and the experimental fix to loop variable shadowing. I\u2019ve never worked in a language with a sane logging ecosystem, so I think slog will be a bit personally revolutionary. And the loop fix will allow me to delete a whole region of my brain. Pretty nice.replysaghm 13 hours ago | parent | next [\u2013]Am I reading it correctly that `clear` does different things for maps and slices? Why doesn't it remove all the items from the slice like it does with the map, or set the values in the map to the zero value like it does for slices? That seems like an easy thing to get tripped up onreplyarp242 12 hours ago | root | parent | next [\u2013]You can't \"remove all items from the slice\"; you can only change the length to 0: \"slice[:0]\".replysaghm 10 hours ago | root | parent | next [\u2013]That _is_ removing all the items from it; my point is that if you pass a map with `n` entries to clear, you end up with a map with 0 entries. If you do the same with a slice with `n` elements, I'd imagine most people would expect to end up with a slice with 0 elements, but instead you have a slice with `n` copies of the zero value.replyarp242 9 hours ago | root | parent | next [\u2013]But it's not \"removing items\", at least not for all meanings of the word \"removing\". You can see this with something like:  s := []string{\"hello\", \"world\", \"foo\", \"bar\"}  fmt.Println(s) // [hello world foo bar]  s = s[:0]  fmt.Println(s) // []  s = append(s, \"XXX\")  s = s[:2]  fmt.Println(s) // [XXX world]Which will print back \"XXX world\" because it's using the same array, and nothing was ever \"deleted\": only the slice's length was updated.This is why \"delete(slice, n)\" doesn't work and it only operates on maps.I suppose clear(slice) could allocate a new array, but that's not the same behaviour as clear(map) either, and doesn't really represent the common understanding of \"clearing a slice\". The only behaviour I can think of that vaguely matches what \"clearing a slice\" means is what it does now.replyesprehn 8 hours ago | root | parent | next [\u2013]clear couldn't allocate a new array unless it was s = clear(s) like append. Maybe that would have been better semantics though.replyilyt 13 hours ago | parent | prev | next [\u2013]> The new built in functions min, max, and clear are a bit surprising, even having followed the discussions around them.Was that discussion pre-generics?Most of functions and libraries introduced in Go 1.21 is stuff people already put in community libraries (lodash being probably most popular, despise utterly nonsensical name not relating to anything it does) so it is just potentially cutting extra dependencies for many projects.replytomjakubowski 12 hours ago | root | parent | next [\u2013]You mean samber/lo? What is nonsensical about the name?replyphilosopher1234 12 hours ago | root | parent | prev | next [\u2013]No, it was a recent discussion, here: https://github.com/golang/go/issues/59488replyanyoneamous 13 hours ago | parent | prev | next [\u2013]As a non-developer who has only gone as far as \"hello world\" in Go, I'm baffled by the idea that the log/slog thing is new - that seems like an absolutely basic language feature. TBH I'd say the same about min/max, but could forgive those being absent since Go isn't known for being numerically-focused...replyilyt 13 hours ago | root | parent | next [\u2013]> As a non-developer who has only gone as far as \"hello world\" in Go, I'm baffled by the idea that the log/slog thing is new - that seems like an absolutely basic language feature.Then you'd be even more surprised when you learn that the vast majority of languages do not have standard logging library in core.Most have one or few common libraries that community developed instead, but they are not in stdlib, and if stdlib has one it's usually very simple one (Go had standard logger interface that was too simple for example)replyanyoneamous 13 hours ago | root | parent | next [\u2013]I have evidently been spoiled by Python and it's abundance of batteries.replyjustinsaccount 8 hours ago | root | parent | next [\u2013]Python does not include a structure d logging package as part of the stdlib as far as I know. What package are you thinking does what slog does?replyarp242 13 hours ago | root | parent | prev | next [\u2013]There's been a \"log\" package since forever, but slog adds structured logging with fields and some other things. I don't think many standard libraries have that built in?replytick_tock_tick 13 hours ago | root | parent | prev | next [\u2013]> that seems like an absolutely basic language featureMost languages have no logging \"system\" built in at all. Honestly it's really quite rare.replysa46 13 hours ago | root | parent | prev | next [\u2013]Most languages include unstructured logging libraries in the standard library, including Go. Structured logging is usually provided by third party libraries.replymetaltyphoon 11 hours ago | root | parent | next [\u2013]The only other one I know would be C# with Microsoft.Extensions.Logging. Its so ubiquitous that 3rd party libraries work with its abstractions. Slog is a really good thing for Goreplythrowawaygo 12 hours ago | prev | next [\u2013]Can we get arenas yet?replythrowawaygo 12 hours ago | prev | next [\u2013]So I guess with new builtin functions we will be breaking backwards compatibility?replyracingmars 11 hours ago | parent | next [\u2013]If you already have your own functions or variables named max, min, or clear in-scope, they will shadow the new built-in functions and your code will continue to use your own version of the functions. No breakage to existing identifiers that match the new function names.(This is the same behavior as the append built-in function today, for example. These things in Go are _not_ reserved keywords, they are simply global functions that can be overridden at other scopes.)replythrowawaygo 10 hours ago | root | parent | next [\u2013]You\u2019re right. Backwards unfriendly is maybe a better way to say it.min and max are common variable names so depending on the version of go and the scope you should expect min and max to mean different things.No reason these functions couldn\u2019t have been part of the stdlib.replymetaltyphoon 11 hours ago | root | parent | prev | next [\u2013]Lets be honest, its a terrible choicereplyracingmars 11 hours ago | root | parent | next [\u2013]In what way? Overall as a language, identifier shadowing is a feature of the language in nested scopes. Are you saying built-in identifiers (that aren't language keywords) should be treated specially and work differently than user-declared identifiers?replypizzafeelsright 12 hours ago | prev | next [\u2013]Was there a push to get it released today?replyracingmars 11 hours ago | parent | next [\u2013]No, release candidate 2 was released today; Go 1.21 is not yet released.replycolesantiago 13 hours ago | prev | next [\u2013]Hmm.Not really an interesting Go release here unless I am missing something.Has Go peaked already?replyCthulhu_ 13 hours ago | parent | next [\u2013]What big thing are you expecting? Go is more of a stable language, a reliable and boring language for building software now that in ten years you can still maintain. Go isn't peaking, Go isn't an exciting or cool or hype language, it's just... there. And that's just fine.Too many languages just started borrowing features from others, saying \"yes\" to every suggestion, until they got out of control and all over the place. Go says \"no\" more often than not. Which isn't always a good thing, mind; generics took a long time because they wanted to understand the problem and not add more like what happened to Java. The builtin min/max features up until this release only supported float64. Lots of small annoyances like that.replyjjice 12 hours ago | root | parent | next [\u2013]> ...generics took a long time because they wanted to understand the problem and not add more like what happened to JavaJust out of curiosity, can anyone regale me with that history with Java's generics?replyjrockway 11 hours ago | root | parent | next [\u2013]\"type erasure\" is the search term you're looking for.replypanzi 13 hours ago | prev | next [\u2013]Wait is this now heap allocating a value in every iteration of every loop? I hope that allocation is optimized out in every case where there isn't a closure over the loop variable?replyquacker 12 hours ago | parent | next [\u2013]They discuss this here: https://github.com/golang/go/wiki/LoopvarExperiment#will-the...In fact, you can enable warnings/logs that indicate whether code that is affected by the loopvar experiment results in a stack-allocated or heap-allocated loop variable: https://github.com/golang/go/wiki/LoopvarExperiment#can-i-se...I imagine that the current workarounds for this issue also end up with heap-allocated variables in many cases.replyxh-dude 12 hours ago | parent | prev | next [\u2013]Generally it is optimized out.The fine details resemble the analysis of correctness - all the evidence shows people expect per-iteration semantics with considerable frequency, and don\u2019t rely on per-loop semantics with measurable frequency. But it\u2019s impossible to completely automate that assessment. Likewise, it\u2019s impossible to automatically detect code that will spuriously allocate because of the semantic transition.replydoctor_eval 12 hours ago | parent | prev | next [\u2013]Regardless of how the compiler is optimising this, I 100% agree that the old behaviour is unexpected and it\u2019s caught me at least once. Really happy to see this (until recently) unexpected change.replypanzi 11 hours ago | root | parent | next [\u2013]I don't actually use Go, but I have used many other languages where it is like the old behavior. I learned once that I have to build the closure correctly to get the value I want and know now to do it. Don't have any statistics on whether I made that mistake again, but anecdotally I can't remember a case where I have. In their analysis they have found a lot of cases with that mistake, though. So I guess fair enough.However, I wonder what it will mean if someone who mostly writes Go will now use another language? Will they be more prone to make that mistake?replydoctor_eval 6 hours ago | root | parent | next [\u2013]It's hardly standard behaviour. I mean in Java for example there didn't used to be value types, so everything was a pointer and the effect of this would be the same as the new behaviour in Go.The only lesson to be learned here is that languages are different. But I think the new Go behaviour is more ergonomic.replyvbezhenar 12 hours ago | parent | prev | next [\u2013]Of course it'll be optimized. It's just semantics that's changed. Compiler will make sure to copy variable value to new address.replycollinvandyck76 12 hours ago | parent | prev | next [\u2013]I didn't see this optimization when I read the overview. I also hope that the compiler is smart enough to avoid this.replysynergy20 11 hours ago | prev | next [\u2013]really hope Go has something like MERN for node.js or Django for Python, so I can use it for ready-to-go backend framework. There are gin and echo etc, just not as widely adopted as MERN or Django.in some of my use cases, I need make sure source code is fully protected, neither Node nor Django can do that well, Go will be perfect as it is compiled, however there is nothing like MERN or Django in Go(yet). Another option will be Java, but I do not know Java.replyCybergenik 13 hours ago | prev [\u2013]Wrote a blog explicitly asking for some of these changes last year: https://www.lremes.com/posts/golang/Nice to see their going in a good direction.replyGuidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- Go 1.21 has been released with a number of new features and improvements.\n- The release includes new built-in functions like min, max, and clear, which will reduce the need for external dependencies.\n- The addition of the slices, maps, and cmp packages will provide more efficient and convenient operations on slices and maps.\n- The slog package offers a more comprehensive logging solution, while the improvements to loop variable capture address a long-standing issue.\n- The release also brings performance enhancements, including faster crypto operations and improved support for multipath TCP.\n- Some commenters express excitement for the new additions, while others highlight potential issues and ask for further improvements.\n- Overall, the release is seen as a step towards enhancing the language and providing more tools and options for developers."
  },
  {
    "id": 36421483,
    "timestamp": 1687368023,
    "title": "Ask HN: What is the morale like inside Reddit, as an employee?",
    "url": "",
    "hn_url": "http://news.ycombinator.com/item?id=36421483",
    "content": "",
    "summary": "- Readers are asking about the morale of Reddit employees and what it's like working there.\n- The post is seeking insights into the overall atmosphere and job satisfaction within Reddit.\n- The query reflects a curiosity about the experiences and attitudes of employees at the company.",
    "hn_title": "Ask HN: What is the morale like inside Reddit, as an employee?",
    "original_title": "Ask HN: What is the morale like inside Reddit, as an employee?",
    "score": 307,
    "hn_content": "Hacker News new | past | comments | ask | show | jobs | submit loginAsk HN: What is the morale like inside Reddit, as an employee?307 points by gremlinsinc 16 hours ago | hide | past | favorite | 194 commentsI'm curious if anyone who works for Reddit might want to chime in anonymously or give insight. Is this going to turn out like Twitter with a huge purge of Reddit staff too, Spez said he wanted to do to Reddit what Elon did to Twitter.As an employee do you support the blackout secretly? What is your opinion of things? Some huge subs have migrated to other platforms, how do you think this ends?rubinlinux 14 hours ago | next [\u2013]Reddit was a co-op between a few groups of people.General low effort content scrollersPower users and mods who appreciate creating and contributing to make a communityAdvertising interestsThe deal was, the ad seeking was for the mainstream strollers, and the contributing power users and mods could opt out of the bs. The community builders get a nice environment for their community, the scrollers get content, and the ad people get to shiw thejir ads.I always thought spez understood this. Its why the api existed. Its why old.reddit.com existed. It was the commercial machine's compromise to the content generators in exchange for the moderating and commenting.But he seems to have forgot. I wonder why?Without the compromise the whole thing falls apart. Reddit becomes digg.replymostlysimilar 13 hours ago | parent | next [\u2013]This is also more or less my mental model of how Reddit operated. I thought their leadership understood this too. The only thing that makes sense to me is they've run the numbers and have decided the meme-consumption / infinite scroll users are more than enough to keep the lights on, and they believe they'll save money by kicking their power users off the platform.replyeuroderf 13 hours ago | root | parent | next [\u2013]This sounds like a case study for biz school in the 2030s.reply93po 10 hours ago | parent | prev | next [\u2013]> Reddit becomes digg.I don't think spez cares if this happens. 95% of the content people see on reddit is mindless garbage that is either a repost or from tiktok/some other site. I believe spez is confident that 95% of content will continue on just fine even if every single moderator quit at the same time. Automoderator setups are already very well fine tuned.You'd lose the more curated subreddits, sure. But that's such a tiny amount of traffic compared to propaganda news posts, animal photos, and tiktok videos.replythrowaway292939 1 hour ago | root | parent | next [\u2013]spez will care, because, well who uses digg?replylotsofpulp 13 hours ago | parent | prev | next [\u2013]> But he seems to have forgot. I wonder why?Most likely scenario is spez\u2019s boss wanted better numbers to maximize price at IPO.I think they decided to cash out when things were very frothy in 2021, and they missed the window. It will be interesting to see if they even get to $10B. I would bet on less than $5B.According to Wikipedia:>In October 2014, Reddit raised $50 million in a funding round led by Sam Altman and including investors Marc Andreessen, Peter Thiel, Ron Conway, Snoop Dogg, and Jared Leto.[13] Their investment valued the company at $500 million at the time.[14][15] In July 2017, Reddit raised $200 million for a $1.8 billion valuation, with Advance Publications remaining the majority stakeholder.[16] In February 2019, a $300 million funding round led by Tencent brought the company's valuation to $3 billion.[17] In August 2021, a $700 million funding round led by Fidelity Investments raised that valuation to over $10 billion.[18] The company then reportedly filed for an IPO in December 2021 with a valuation of $15 billion.[19][20]https://en.wikipedia.org/wiki/Redditreplycodalan 13 hours ago | root | parent | next [\u2013]Its value seems to be rapidly declining. I was on lemmy.world and lemmy.ca yesterday and was a little shocked at how many people migrated over there. I don't see how this looks good to any potential investors pre-IPO. The fact that lemmy (the software) exists makes one question how much of a moat Reddit really has.replystevenwliao 5 hours ago | root | parent | next [\u2013]That's not how network effects work. You can't win by cloning the software of an existing social network.replyhexnuts 11 hours ago | root | parent | prev | next [\u2013]The problem I have with lemmy.world is I have yet to be able to login.replystjohnswarts 11 hours ago | root | parent | next [\u2013]use kbin, they share stuff and I had zero problems getting a kbin accountreplyTeMPOraL 13 hours ago | parent | prev | next [\u2013]Finite vs. infinite iterated prisoners' dilemma?Going by the various takes and stories I read over the last few days, I imagine the deal you describe worked because it was indefinite; however, IPO is not only putting pressure to juice up financial metrics - it's also setting an end date for the deal. Once the company goes public, the leadership can, like investors, just cash out and let the whole thing sink. Even if this was always the plan, as long as the \"exit\" was a non-specific \"at some point in the future\", everyone could kind of forget about it. Putting a specific timeframe on it completely changes everyone's perceptions - like with iterated prisoners' dilemma, even if the end is still far away, the game changes its nature the very moment that specific timeframe is set.replymrguyorama 13 hours ago | parent | prev | next [\u2013]>But he seems to have forgot. I wonder why?Because as long as the public buys whatever he's selling, he still leaves rich. Nothing about reddit going forward actually has to be successful or functional as long as normal people buy the stock, people who don't know reddit, don't use it, don't understand it, don't CARE about it, etc.replygardnr 13 hours ago | parent | prev | next [\u2013]Reddit can automate the content generation with ml. They have the perfect dataset to continue generating successful posts and comments into the future. They have seeded conversations in the past. Spez is confident he no longer requires a core community of humans; humans that have feelings and stage protests.replyraxxorraxor 3 hours ago | root | parent | next [\u2013]I would love for advertisers paying a lot of money for bots pushing some bytes around. Budgetary capture as a spam filter technique.replymalermeister 11 hours ago | root | parent | prev | next [\u2013]Wonder if that'll work as well as autopilot...replybfuller 8 hours ago | root | parent | prev | next [\u2013]sounds out there, but I completely agree.replycyanydeez 9 hours ago | parent | prev | next [\u2013]M-m-m-oneyreplyperrohunter 9 hours ago | parent | prev | next [\u2013]Didn't Digg had precisely a power-user problem on v3 thus the creation of v4 and it's unraveling? I'm seeing the same pattern here, users tripping on power and trying to host the platform hostagereplyredmerchant2 15 hours ago | prev | next [\u2013]This is best suited for Blind where you have the verification. That said recent results turned up little. On the layoffs, morale seems bad:- \"There isn't much clarity around severance and health insurance\"- \"This is fine ([fire emoji] [dog emoji] [fire emoji])\"Recent (past month) reviews seem negative: \"questionable execs\", \"micromanaging\", \"still not mature\", \"growing pains\", \"stay away\", \"mediocre, lack of product vision\".As a reminder Blind the users are verified to be working at the company. It's quite the cesspit of elitism and \"I make more than you\". But, again, reviews tend to be accurate because it's verified anonymity.replyredmerchant2 14 hours ago | parent | next [\u2013]Here's a couple more verified quotes since I dived down this rabbit hole:- \"I think most rational people agree with the decisions, regardless of possible fumbling\"- \"We are living under constant anxiety waiting for the next round of layoffs that\u2019s been planned by leadership at the beginning of the year\"- Another verified user disagreed with the above ^- \"Current employees are afraid to say anything as spez reads Blind and complains about it at all hands. 100% he will try to rat out who is speaking. Not worth it.\"Last one seems most interesting. Looks like spez/upper leadership is monitoring what employees say.replysnapetom 14 hours ago | root | parent | next [\u2013]> Current employees are afraid to say anything as spez reads BlindLMAO. Of course someone so sensitive as to edit comments against him on his own site would obsess over comments on Blind.replykojeovo 14 hours ago | root | parent | prev | next [\u2013]I'm convinced leadership everywhere reads Blind. Wouldn't catch me posting there ever. A private company having posts tied to your work email...replycomte7092 14 hours ago | root | parent | next [\u2013]Yeah, screams honeypot.replyjprd 12 hours ago | root | parent | next [\u2013]> Looks like spez/upper leadership is monitoring what employees say.> replyAlso, if an exec gives any sh1ts about what is on Blind, they've already failed and are just looking to maximize their image during what is probably a sh1tshow. See Ted Lasso's \"Wonderkid\".It reeks of narcissism and gives me that 9V battery taste in my mouth.Elon buying Twitter is the hyper example here. Morally bankrupt and pathetic, but may end up winning $ because of that whole not having morals part. I can't imagine living that kind of life, gross.replyraydev 8 hours ago | root | parent | prev | next [\u2013]> Current employees are afraid to say anything as spez reads Blind and complains about it at all hands. 100% he will try to rat out who is speaking. Not worth it.Are employees worried he knows someone who works at Blind who can reverse lookup emails? By all appearances, no one's ever been identified on Blind in the 6 or 7 years it's been popular (with the exception of people who shared too much personal info). Seems like Blind really does throw the email away.replym4jor 5 hours ago | root | parent | next [\u2013]I mean technically any large corp can very easily find out who is on blind.Every large corp has email filtering and logs. Easily just look for the employees who received the verification email from signing up to Blind w their work email addy bc you gotta use your corpo email address to join and comment there.I'd be able to look at our logs and find that in just a few min.Since it seems Spez is such a lil sensitive c-suite sf bro type, he'd be able to get that info no problem.replyraydev 4 hours ago | root | parent | next [\u2013]If 50% of your employees get Blind emails, good luck identifying them. I would hope they aren't clicking through the verification email from their work machine, but I've seen some ignorant ICs in my time.reply1_1xdev1 3 hours ago | root | parent | next [\u2013]Once your company is a certain size, work emails only get sent to work devices. Not sure what you\u2019re getting at with hoping they\u2019re not clicking through from their work computer. Of course they are.But yes if a high enough percentage of employees are signing up, there\u2019s safety in numbers.replygranshaw 14 hours ago | root | parent | prev | next [\u2013]That\u2019s the expected outcome of any platform employees flock toreplywannathrowaway 14 hours ago | parent | prev | next [\u2013]> [on] Blind the users are verified to be working at the companyWell, they're verified to have worked at the company at some point. Blind doesn't make you periodically re-verify your access to your work email account.replyraydev 8 hours ago | root | parent | next [\u2013]I was forced to re-verify a year after registering, at two different companies.replyreducesuffering 12 hours ago | root | parent | prev | next [\u2013]Yes they do. I changed companies, was eventually asked to re-verify, now have no access to old company's channelreplynickdothutton 15 hours ago | prev | next [\u2013]This is a sincere question. I would love to know what the 4000+ staff do there, running a forum web site that uses community moderators.Correction: 2000 staff. Question stands.replyjedberg 14 hours ago | parent | next [\u2013]> I would love to know what the 4000+ staff do thereUsually when an engineer asks this question, they are starting with the assumption that most everyone who works there is an engineer. That assumption is usually wrong.I have no inside information at all, but my guess is that engineers make up less than 1/3 of the employees. I'm sure the sales team is large, the product team is large, and the community management team is large. They probably also have a bunch of legal, and we know they have a lobbying group as well. And of course if you're taking people's money, you need a bunch of customer service to handle that.When I worked there 14 years ago, we had at peak six engineers, and three non-engineers (one sales, one product, one community). But also we had the parent company providing legal (and there was a lot of legal requests even back then!), HR, facilities, finance, and basically all the other support tasks. And also we the engineers did a lot of it. We managed customer service for ads, we managed making t-shirts and plushies, we managed customer service for reddit gold payments, and a bunch of other \"non-engineering\" tasks.The site is big and is transactional, which makes it a harder problem to solve. With the near-real-time display of votes and listing changes and comments, it's a lot more like eBay than Slashdot (which is what I would say at the time).replyjohnnyanmac 13 hours ago | root | parent | next [\u2013]> I'm sure the sales team is largewho are they selling to? And why so many people?EDIT: sorry, I read another response, they are selling to ad companies. Does that really demand hunderds, over 1000 people, though? At some point I feel they are costing more than what the next increment can bring in.I understand your point but even if there was only 100 engineers (which would not be enough) I can't imagine what the other 1900 administrative people are doing. It's an internet forum, and unlike Twitter and other social media (where I assume they simply have hundreds of mods) they successfully outsourced moderation to volunteers.Is it all just legal suits? The customers are the users and admins are horrible at responding to user requests (be it users or mods), so it doesn't feel lik customer service is using those resources.replyjedberg 13 hours ago | root | parent | next [\u2013]> It's an internet forum, and unlike Twitter and other social media (where I assume they simply have hundreds of mods) they successfully outsourced moderation to volunteers.This vastly underestimates how much moderating reddit is already doing. When I worked at reddit, we spent at least 50% of all of our resources on fighting spam, harassment, and illegal content. I'm sure reddit is still doing this. What the moderators see is already after the core platform has removed the most obvious offenders. Most of what the volunteer moderators do is remove content that they feel is not in line with their community.> The customers are the usersThe customers are the people who pay, who are mostly advertisers. Customers and users are two different groups with different ideas of what makes reddit good, and sometimes those don't align. It's a fine line to walk between serving the customers and users to try and keep both happy.replystevenwliao 5 hours ago | root | parent | next [\u2013]> What the moderators see is already after the core platform has removed the most obvious offenders.This might be true.> Most of what the volunteer moderators do is remove content that they feel is not in line with their community.This is certainly not true for my sub. There's a lot of obvious spam that has to be manually removed. For example, if Reddit enforced the selfpromotion ratio rule programmatically, there'd be an order of magnitude less spam to deal with.---Unless Reddit cranks up the removal rate, moderators are still necessary or the /new feed will drown in spam. If /new drowns in spam, what reaches the top will become a lot more chaotic.replyjohnnyanmac 10 hours ago | root | parent | prev | next [\u2013]>This vastly underestimates how much moderating reddit is already doing.I likely am, so thanks for giving me an idea. Admins never really talk about how much they do behind the scenes (and aren't that responsive to the users in general) so its hard to tell.But as a counterargument: While I'm sure they need more admins now than back in 2010, they also (hopefully) will have automated their spam/illegal filters so it doesn't require 1000x the admin moderators to control 1000x the content. the filter catches maybe 95% of the truly illegal content and then admins can check at a less urgent pace.>The customers are the people who pay, who are mostly advertisers.I guess it's more accurate to say that advertisers are the customers, and users are the product. But it's an odd metaphor here since sales would need to appeal to both. Getting ads to show and also getting ads for their own site, to get more products to appeal to more customers.I do agree that its an odd balancing board, especially with Reddit that is more hostile than usual to inorganic content.replyMaxion 13 hours ago | root | parent | prev | next [\u2013]I remember when you left, I\u2019m still there as a moderator.Back then, when there were a dozen of you it was easier to reach an admin when needed than now, heh.replyjedberg 13 hours ago | root | parent | next [\u2013]> it was easier to reach an admin when needed than now, heh.I hear ya. But in their defense, the regulatory environment is way worse now, and back then as an admin we all pretty much knew about every ongoing issue. A current admin can't just answer you back without possibly running afoul of either a regulatory issue or an ongoing project in another group.replylogical_ferry 14 hours ago | root | parent | prev | next [\u2013]Why does Reddit need sales? Genuine question. My guess is to sell ads?replyjedberg 14 hours ago | root | parent | next [\u2013]Any company that makes money needs sales. But the main thing reddit sells is ad space. You have to spend a lot of time convincing big advertisers to buy on your platform.Disney isn't going to just pull up a self service portal to buy ads. :)replypaulcole 8 hours ago | root | parent | prev | next [\u2013]The sales people at Reddit actually focus on selling those little plastic bags with goldfish in them to county fairs.I don\u2019t know why you\u2019d jump to the conclusion that the sales people at an ad-supported website would sell ads.replymanicennui 15 hours ago | parent | prev | next [\u2013]Based on using the site, I believe most of their effort goes into making their video and image display code as bad as possible. There is no other explanation for how terrible it is.replyrqtwteye 15 hours ago | root | parent | next [\u2013]They may have hired some PM from the MS Teams team. They seem to be successful in their quest for breaking all features that still work. If there is nothing left to do, they move controls around so the user can\u2019t find them anymore.replylofatdairy 15 hours ago | root | parent | prev | next [\u2013]Don't forget optimizing the UI/UX to be as unpleasant as possiblereplyedgyquant 14 hours ago | root | parent | next [\u2013]This. It takes a lot of effort to build an app that works as bad as Reddit does. It\u2019s an engineering marvelreplylagrange77 15 hours ago | root | parent | prev | next [\u2013]Those poor devs. I bet some of them had come up with great ideas, which they had to watch overruled by marketing people.replythrowaway20222 14 hours ago | root | parent | next [\u2013]Ahh yes, the \u201cmust be marketing\u2019s fault\u201d cry for bad usability, not internal disfunction and turf wars between engineering and product, or incompetence, or inattention, or\u2026I bring this up only because I find when I do this blaming of <other non-build people>, I often miss the problem that is actually in front of my face and can actually impact.replyjohnnyanmac 13 hours ago | root | parent | next [\u2013]Could be both. But ofc I (and I imagine many others) are biased by intimate engineering experience.From my experience: as a game dev we ALWAYS know when a game sucks. Maybe some director or other director level person strongarmd it, so it's not like engineers can't be blind. But as a general consensus, I've met very few \"bad devs\" from a technical POV (a vector consumers often like to attack when they see bad gameplay). We work with a bad hand and we almost never get the extra time needed when we try to show publishers. Fortunately, it's a lot easier now to argue for delays than over a decade ago.replybaggy_trough 15 hours ago | root | parent | prev | next [\u2013]At least we can still \"request\" pretty please the greatly superior UI from 15 years ago.replyrxbudian 14 hours ago | root | parent | next [\u2013]the closest you can get is old.reddit.com, which is the one I used all the time, but they've removed the nifty feature of listing the last 10 posts that I went toreplydizhn 14 hours ago | root | parent | next [\u2013]Wouldn't RES be well positioned to provide that functionality?replyjohnnyanmac 13 hours ago | root | parent | next [\u2013]It might be, it might already be there.But RES has stopped feature development in 2021. If it's not there, it's not coming anytime soon.replydizhn 12 hours ago | root | parent | next [\u2013]> Q: Why doesn't RES incorporate reddit gold features?> It's unfair and unwise to undercut reddit inc.'s development work. Get gold!This is about Gold but it might be a more general \"we do not step on Reddit's toes\" kind of rule too.replypwb25 15 hours ago | root | parent | prev | next [\u2013]or how bad the inline editor is with html optionsreplydjbusby 15 hours ago | root | parent | prev | next [\u2013]If it ain't broke, fix it till it is.replynebula8804 15 hours ago | root | parent | prev | next [\u2013]They probably copied the codebase that powers Twitter's video offering. In a way its great, helps break addiction to these sites if you can't actually use it.replycowmoo728 14 hours ago | root | parent | prev | next [\u2013]it takes incredible engineering to make a 10s video have 360p visual quality but still require approximately 500mb of data to loadreplyEuphorbium 15 hours ago | root | parent | prev | next [\u2013]At some point video bytes must be transmitted by reading them from one employee to the other via a rotary phone.replyfactorymoo 15 hours ago | parent | prev | next [\u2013]Same question for Uber with 36k employees. It's an app that connects taxis to clients. I guess I'm showing a lot of ignorance here - but why does this need 36k people?I guess this was Elon's thoughts when he laid off most of twitter.Edit: Found a good answer for Uber on quora: https://qr.ae/py4zBUreplyskulk 15 hours ago | root | parent | next [\u2013]Uber is different because every place it has to operate is different. Maybe something weird happens in XYZ city that requires drivers to route around a certain street so they need a feature that generalizes that. or some such deal. Reddit OTOH... nope.replyricardobayes 15 hours ago | root | parent | next [\u2013]One crazy story I've heard from one of their competitors is when they were banned in one key city they wanted to get their drivers diplomatic passports from some random country so they could keep driving around as they pleased. Based on the \"get shit done\" mentality some startup founders have, I wouldn't be surprised if that was true.replystarttoaster 15 hours ago | root | parent | prev | next [\u2013]Uber drivers are allowed to use 3rd party navigation apps like Google Maps, Apple Maps, Waze, etc. I'm honestly not sure if they require specialists for each major city to handle city-wide traffic events. The 3rd parties that drivers piggyback on do it for them, to some degree of success.replyawad 15 hours ago | root | parent | next [\u2013]It's not just navigation, there are many local nuances like where in airports or large stadiums they're allowed to operate or not operate out of. Dealing with city and county ordinances at the scale of Uber takes some bit of human power.replydizhn 14 hours ago | root | parent | next [\u2013]That's their backup mode of operation as far as I know. Their primary mode is to disregard all rules. They paid for the drivers' fines for years in my country until they were flat out banned. Only a few places like China were able to really get rid of them. A seriously shady company.replyawad 12 hours ago | root | parent | next [\u2013]Regardless of past behavior, there are many many locales that do in fact levy their rules on Uber who have made a business decision to comply, leading to localized experiences of the app and service that can change both between different cities and even within different areas of a city.replydizhn 12 hours ago | root | parent | next [\u2013]You're right of course. I think they attack a new market from two directions. First they just enter the market, rules be damned. But from a different angle they have a huge lobbying arm to make themselves legal in the long run and in favorable terms. That's actually not a bad strategy businesswise IF you can pull it off in enough places. Usually the public really likes the service so there is no push back.replyfsckboy 12 hours ago | root | parent | prev | next [\u2013]> Uber drivers are allowed to use 3rd party navigation apps like Google Maps, Apple Maps, Waze, etc.are you saying that the Uber-Driver's-App/Backend will communicate with the driver via these different mapping apps? or that so long as they use the Uber-Driver's-App to stay in contact with Uber, that Uber accommodates them also using other mapping software?replycarlosjobim 4 hours ago | root | parent | next [\u2013]You turn off the voice on Uber and use another phone for the navigation. Or multi task on the same phone.replythat_guy_iain 14 hours ago | root | parent | prev | next [\u2013]Uber also has a bunch of regulations to follow that are different everywhere. Each city will need it's own operations teams to deal with drivers, local authorities, etc. Then a country operations that that deal with payroll, taxes, etc.You then need to have a customer support service. That is probably 5,000 employees right there.Just because a company has 36,000 employees it doesn't mean they have 30,000 people working on the tech. There are lots of jobs that need to be done just to operate day to day. That most people on here wouldn't even think about, like cleaning staff for example. How many people on here even thought about cleaning staff?replymargalabargala 14 hours ago | root | parent | next [\u2013]For any company too small to own its own building outright, as well as many that do own their own buildings, cleaning staff work for a contracted janitorial company and not the company itself.replythat_guy_iain 2 hours ago | root | parent | next [\u2013]Considering how widespread Uber is, it's probably got a formula for opening up new offices in new locations. I know other companies I worked for had one so I can only assume Uber is the same. This is they know they need 2 x, 3 y, 1 z. Managing a series of contractors at that scale for each location would probably be a job by itself and kind of remove the benefits of outsourcing. Considering Uber literally deals with high turnover of personal by the nature of what they do, they don't seem like they would be likely to be that risk adverse to the paperwork challenges that potentially could come from low level staff like cleaners which is normally why companies prefer to outsource it. Like if your used to hiring office staff where high turnover would be employees leaving after a year vs cleaning staff where staff could change on a monthly basis, the hassle of dealing with paperwork isn't worth it. But if you've already got the person who deals with the paperwork, etc because that's your business it's less of an issue.I think it's very likely Uber employs cleaners themselves due to costs attached to outsourcing and that they already have the staff to manage that sort of worker.replyCydeWeys 15 hours ago | root | parent | prev | next [\u2013]> It's an app that connects taxis to clients.Uber does a lot more than that! If you want an honest accounting of what Uber's employees are doing you need to start with an honest listing of everything Uber actually does.replydrainyard 15 hours ago | root | parent | prev | next [\u2013]Uber is not really a taxi company. They do a whole lot of general transport infrastructure not for laymen.But 36k still seems absurd.replyderefr 15 hours ago | root | parent | next [\u2013]I saw a ferry in a YouTube video the other day that had \"Uber Boat\" plastered on the side.replyshawabawa3 15 hours ago | root | parent | next [\u2013]The public transport boats in London are operated by UberThey now also sell Eurostar tickets (although I don't see the advantage over Eurostars website)replyobjclxt 15 hours ago | root | parent | next [\u2013]> The public transport boats in London are operated by UberThey're sponsored by Uber, that's it - they bought the naming rights. The actual boats are owned and run by the Thames Clipper company.replystuaxo 14 hours ago | root | parent | prev | next [\u2013]Was amusing getting the notification for \"$35\" Eurostar tickets on the Uber app, when it should be \u00a335, very on brand.replycik 13 hours ago | root | parent | prev | next [\u2013]When I was in Dubai, there were Uber helicopters. I'm still half tempted to take one when I'm back there.replyskizm 15 hours ago | root | parent | prev | next [\u2013]https://news.ycombinator.com/item?id=25375921replylisasays 15 hours ago | root | parent | prev | next [\u2013]I guess I'm showing a lot of ignorance here - but why does this need 36k people?Their stated goal to supplant as much of the existing TLC infrastructure for the planet as they can get their hands on. You can bet that these organizations (even restricted to those markets they are successful at \"disrupting\") employ a lot more than 36k peoplereplybluepod4 15 hours ago | root | parent | prev | next [\u2013]Maybe you haven\u2019t used in Uber in awhile, but it definitely does more than just connecting taxis to clients in 2023.replyVirusNewbie 12 hours ago | root | parent | prev | next [\u2013]When Uber started, they basically reinvented half of Google/Amazon since the cloud was no where near as mature as it was now. They were running their own data centers. It takes a lot of people to rebuild robust NoSql DBs, stream processing, container management, monitoring and the like from scratch.Could Uber be built with a lot less now days? Absolutely, but it's also an interesting balance of even if they could, if their cloud bill for X service is 10m a year, and they think their own team of 4 could build X internally for less then that...why not do that?replyrevskill 15 hours ago | root | parent | prev | next [\u2013]Because it's the number to show venture capital the real \"growth\".replyFirmwarrior 15 hours ago | root | parent | next [\u2013]Funny you mention that, I was just listening to the Tropical MBA podcast, and last week they had a guy who works in private equity come on the show. He explained a lot of basics of how PE works, since the podcast is mostly about small-scale bootstrapping and hiding out in cheap locations. It sounds like having a ton of headcount actually does make you look way more valuable to business investors, at least at the low end he was talking about.. I could see how that would scale upreplyCydeWeys 15 hours ago | root | parent | prev | next [\u2013]Uber is publicly traded and has been for awhile now. I'm not sure how VC is relevant.replyricardobayes 15 hours ago | root | parent | prev | next [\u2013]At times working at certain companies I can genuinely say I felt like being like an extra in a movie. I just had to be there, but the work I did wasn't important at all.replyvolkl48 14 hours ago | parent | prev | next [\u2013]They had 700 staff 2 years ago, which is really what raises giant questions to me.There's very little I can think of that seems to have changed about the site in the last 2 years for results from tripling their headcount.Citation for the old headcount: https://www.theverge.com/2021/2/9/22274077/reddit-funding-ro...replyjohnnyanmac 13 hours ago | root | parent | next [\u2013]low interest rates, easy to hire and scale.Granted, I have no idea what scalability Reddit has done in 2 years. You can even argue it didn't need most of it (some, sure. Pandemic did surge traffic).replyoniony 15 hours ago | parent | prev | next [\u2013]They need more staff than most places because they spend so much of their day on Reddit.replyabdusco 14 hours ago | root | parent | next [\u2013]Had a good chuckle out over this one :)replybloopernova 15 hours ago | parent | prev | next [\u2013]It's 2,000 employees, but the point and question still stand.replyi_play_stax 4 hours ago | parent | prev | next [\u2013]Have you ever done a systems design interview? There's a lot of complexity in seemingly simple systems. This is humorously demonstrated in this skit on MicroServices, https://youtu.be/y8OnoxKotPQIt's all too accurate.Let's add up a few factors - Reddit is an 18yr old startup with Peter Pan syndrome. - Mountains of tech debt, like every other company - Industry incentives promote people to squirt out a feature, receive titles or money, and move on - Freedom of speech brings all the evils with it, like CP, that Reddit has complicated systems to catch and moderate - IPO desires mean financial belt tightening to look as mature as possible - Industry wide layoffs have created a fertile ground of new startups germinating. VCs are actively hunting for the next big AI unicorn. Torrential increases in traffic are hitting the company. And why? Reddit is a curation engine. The data is sorted and labeled to a degree. All this to say, there's a lot of refactoring needed on top of shifting ground created by the intersection of tech debt and IPO aspirations. - Guessing by all public measures, Reddit has a ton of traffic already. Extrapolating from other large companies I have worked for, the infrastructure and transport costs are significant. - 3P apps scrubbing Reddit ads and substituting their own are a brand and liability riskTL;DR toil from legacy, more complexity than you can imagine, pressure of marketreplyHeyLaughingBoy 14 hours ago | parent | prev | next [\u2013]The question, \"Why do tech companies need so many employees\" was asked on Reddit 2 years ago. https://www.reddit.com/r/startups/comments/nw2ebf/why_do_tec...The first entry is \"Nacho Fries are back for a limited time only\" which I feel is the perfect answer to that question.replylamontcg 15 hours ago | parent | prev | next [\u2013]You have all of HR and Legal, you have all the execs and quite a lot of VPs associated with that size of organization.Under that you are going to have an advertising-related departments both in sales and engineering. Much of the custom engineering focus is going to be directed at ads and how to make money which users will never see. Remember that users are the product, not the customer.Then there's going to be the forum site itself, and the problem of moderating the moderators via the admins and generating visibility into how mods and users are abusing the system are going to be larger than expected at their scale.Then there's the problem of trying to keep up with automated bots and straight forwards abuse of the system and that arms race against other people's code.Then reddit has to interface with government agencies and is now responsible for policing itself when it comes to foreign troll farms. There is likely groups of engineers and managers assigned to dealing with the government.And there's just the complexities of being such a large global business, and needing to deal with worldwide regulations and being such a large regulatory target, which will complicate everything.You can try to wave all that away and say that they should just embrace radical free speech and fire 75% of the people, but that would result in the site being taken over by Troll farms, Nazis, and CSAM -- with advertisers fleeing and the US government itching to regulate them.(Although I'm sure they could fire the useless half of middle management that I'm certain that they've accumulated, but that wouldn't make that enormous of a dent in the headcount)In general this is an xkcd/793 problem:https://xkcd.com/793/Only replace physicists with software engineers. It seems simple because you wave all the concerns you don't care about and you're entirely focused on just building a forum website for users. Without advertisers, bots, bad actors, worldwide regulations, meta-moderation, etc the problem dramatically simplifies itself, but that isn't actually what reddit does.replyHeyLaughingBoy 14 hours ago | root | parent | next [\u2013]If anything, I'm amazed that they can run that business with only 2,000 employees.reply_-____-_ 14 hours ago | parent | prev | next [\u2013]For some reason I had in my head that they had 12 engineers... wow, 2000 people, of which I assume at least multiple dozen are engineers? That really makes their product look much worse than it already did in my mind...replythrowarayes 6 hours ago | parent | prev | next [\u2013]Keep in mind that at the scale of Reddit entire orgs could exist because their features squeeze 1-2% more user visits, driving more ad clicks, etc etc.replytester457 15 hours ago | parent | prev | next [\u2013]Probably sales team.replyNickC25 15 hours ago | parent | prev | next [\u2013]Sales/BizDev/relations and engineering/product would probably be my guess.That said 2k people is a LOT, and it's not like the site itself is very high-tech or really pushing things forward. It's a aggregator of content with comments...nothing really advanced.Yeah, 2k people is overkill.replygremlinsinc 13 hours ago | root | parent | next [\u2013]HN is basically just that and it's mostly one guy moderating everything. I'm sure there's a few more for tech stuff but HN hardly ever changes and still feels like 2010, but that's the beauty plus it isn't monetized other than promoting yc companies, etc.Reddit should be ran more like HN or even craigslist. Ppl never wanted a js heavy UI change. they liked the bare bones old school aesthetic. It gave that feeling of nostalgia, one of the last early web apps.If Reddit never did a redesign, never hired more staff than really need, they'd definitely be profitable by now.replytracerbulletx 14 hours ago | parent | prev | next [\u2013]To trick investors into thinking its worth a bajillion dollars somehow I assume.replysangnoir 15 hours ago | parent | prev | next [\u2013]How many employees would seem reasonable for Reddit to you? Also a sincere question.replyFirmwarrior 15 hours ago | root | parent | next [\u2013]Let's see.. Reddit is a very straightforward non-realtime forum that doesn't run its own serversMaybe two dozen engineers/devops, a dozen support/management people for them, and 50-100 minimum wage-ish admins and their managers/corporate support structure. I can't pretend to know anything about the ad sales part of the business, I guess that's where the other 1800 people live?replysangnoir 13 hours ago | root | parent | next [\u2013]That sounds about right - for an English-language-only message board startup that mostly ignores laws outside of a 100-mile radius of the bay area.Narrowing focus to just engineering: how would you allocate 24 engineers across infra (networking, storage, scaling), backend (API, features), web frontend, design, mobile (iOS & Android), security, ads & monetization, Abuse & internal tooling dev? Or would you allocate 1 or 2 individuals to each (working 60-80 hour weeks) rather than teams (3-5 people, minimum) + line-managers & product folk. Add QA and you realize \"2 dozen engineers\" isn't a lot, the devil is in the details.I was being charitable on 3-member teams: noone wants to be on an on-call roster that's only 3-engineers deep. Each of the areas I highlighted likely has multiple teams rather than just one (e.g. infra can be split into parthensized teams - networking, storage, operations/ops), and I intentionally completely ignored R&D functions.replyFirmwarrior 12 hours ago | root | parent | next [\u2013]That's true. And each one of those teams is going to need intra-team support teams with a lot of enterprise project managers, product managers, technical project managers, stakeholders, directly responsible individuals. There's going to be schedules to manage, rollouts, release dates, code lockdowns. Build engineers, infrastructure to support the build engineers and the project managers. Engineers are going to be spending so much time in standups, meetings, pre-meeting meetups, all-hands, etc that they'll be lucky to get an unbroken hour a day to code at all. Before you know it you have 500 people doing a job that's entirely doable by a handful of hardworking people.replysangnoir 12 hours ago | root | parent | next [\u2013]> Before you know it you have 500 people doing a job that's entirely doable by a handful of hardworking peoplePerhaps the market rewards growth more than it does efficiency? I can't name a single company (post WhatsApp) that has users in the 9-plus-digit-range and has less than a thousand employees.replyFirmwarrior 7 hours ago | root | parent | next [\u2013]yeah, I think you're rightIt seems like investors prefer to have a large (but still profitable) org with a lot of redundancy and clear systems in place than an elite team of superheroesI'm just annoyed that Spez is running a bloated overweight organization, then using that fact to justify some user-hostile money grubbingreplymbravorus 1 hour ago | root | parent | next [\u2013]Nobody likes an elite team of superheroes for a _business_. Superheroes burn out, get hit by a bus, have limited affinity for creating good documentation, sometimes a tendency to be fascinated by shiny things, can get annoyed by a real or perceived <whatever> and quit or can be headhunted away. And then there goes your business.I dislike unnecessary bloat, be it in software or in org design, as much as the next guy, but staking your company's long-term future on superheroes (or superpowers, as it's for some inexplicable reason still fashionable to say) is a recipe for disaster.replythrowarayes 7 hours ago | root | parent | prev | next [\u2013]You could also create a photo sharing site in a couple of weeks with a dozen devs. But an actual business like Instagram, that can acquire users, thats profitable is a different story.There are dozens of unprofitable Internet search engines each made by a handful of people, yet Google somehow employs ~200k people to run a profitable search engine.I can create (probably build from scratch) a wiki in same amount of time but non-profit Wikipedia is 450(?) people.The core tech isn\u2019t the driver to headcount, the business model is.For Reddit, that probably means selling ads and acquiring users. Which probably means a whole lot of ad tech and other optimizations/features to increase visitors to your site. Ad sales, ad tech, etc etc. It probably means ad sales to big clients with complex legal, etc.In the tech, entire feature groups worth having because it serves important business goals around user retention or growth. Some small percentage of extra eyeballs helps Reddit towards these goals that a site like hacker news wouldn\u2019t care about.reply_-____-_ 14 hours ago | root | parent | prev | next [\u2013]Well, the best Reddit app available (Apollo) is made by one guy. So maybe start there.replyi_play_stax 4 hours ago | root | parent | next [\u2013]An app that scrapes an API is no measure of the complexity under the hood.replyk4rli 13 hours ago | root | parent | prev | next [\u2013]An app available only on one platform couldn't possibly be the best one available, this is highly subjective. \"One of the most popular\" perhapsreplyraincole 15 hours ago | root | parent | prev | next [\u2013]To be honest, I'm not surprised at the 2k number after everyone crazily bloated their companies during the low-rate period. I would be really surprised if they have < 1k.If anything, the fact that they have only 2k employees shows how much free labor the mods provide.replyadventured 14 hours ago | root | parent | next [\u2013]There was a large argument about free mod labor during the dotcom days in regards to AOL forums. Not much has changed since those days. The solution to the free labor mod situation is a Reddit operated more like Wikipedia, that removes the obnoxious layer of behavior in Reddit that is hyper corporate and has tended to cause most of the problems. The free labor mods will feel a lot less upset about a platform that isn't profiting off their backs as well.replyjohnnyanmac 13 hours ago | root | parent | prev | next [\u2013]Can't say, but let's estimate ranges. Probably more than Wikipedia, less than Twitter.Twitter pre-pandemic: 5000Wikipedia pre-pandemic: 450So... maybe 1000.replythih9 16 hours ago | prev | next [\u2013]> Is this going to turn out like Twitter with a huge purge of Reddit staff tooReminder, while it wasn\u2019t a Twitter scale event, Reddit did announce plans to lay off 5% of its workforce recently.Source: https://www.sfgate.com/tech/article/reddit-layoffs-90-protes...Discussed at: https://news.ycombinator.com/item?id=36237285replyarroz 15 hours ago | parent | next [\u2013]Which unfortunately seems more like the norm nowadaysreplyjuujian 15 hours ago | root | parent | next [\u2013]Not a coincidence. The big firms paved the way, showed that this (the new) normal, and how it's done. And since tech investors seem to be receptive to it now, the smaller firms are copying it now.Forgot to mention, very much the same for the recent price hikes. Very much a \"skill\" that executives are now imitating.replychankstein38 13 hours ago | root | parent | next [\u2013]They seem like a bunch of lemmings. Just follow what's hot in Business Times or whatever they readreplyalhirzel 15 hours ago | prev | next [\u2013]Not an employee, but: https://en.wiktionary.org/wiki/enshittificationThe only pattern I see in response is continued innovation and the rise of new platforms. I think a business model resembling a \"[public] benefit corporation\" [1] (in the USA at least) or a utility company may be more compatible with a social media company immune to enshittification.[1]: https://www.delawareinc.com/blog/non-profit-corporation-vs-p...replyn-exploit 9 hours ago | parent | next [\u2013]As a founder of a SaaS company that was formed as Delaware PBC, I will say that this route does make it quite hard to follow the traditional fundraising path.VCs are spooked by anything that\u2019s not your run-of-the-mill C Corp. PBCs are hard to get off the ground.replywombat-man 14 hours ago | parent | prev | next [\u2013]Yeah. I sometimes wonder if that was ever a possibility for them. Reddit as a PBC or even a non profit would be unstoppable. I think the VC money and push for growth has driven the product to a weird place.replym463 15 hours ago | prev | next [\u2013]Don't work at reddit, but if they are going IPO, the employees are probably holding onto their stock and crossing their fingers until it is worth something.replycodingdave 15 hours ago | parent | next [\u2013]I have no knowledge of reddit, but I have been in companies that have IPOed, as well as companies that just say they are going to in order to appease investors wanting their money back and to keep the employees strung along on a sinking ship.And the difference is that people truly going for an IPO are trimming costs and getting their ducks in a row on bureaucracy and legal fronts, including confidentiality. Those just using it to dangle as a carrot are... just talking about IPOs without changing internal business processes.Only someone inside could tell us which one reddit is doing.replyWestCoastJustin 15 hours ago | root | parent | next [\u2013]Yeah, having gone through a company that IPOed -- 100% agree. You're crossing your fingers and using your calculator to try and figure out how likely you are to hit the jackpot (or much more likely the massive tax burden). The company as a whole is basically going through a checklist to batten down all the hatches and implement pretty rigorous controls. So, they are likely seeing a lot more formal process for doing things. This along with trying to make the company look as healthy and profitable as possible. All this API business could even be a result of them going through the Risks section and seeing that having competing apps using their API is a major risk.Also, chances are you are going to see zero communication from them when they do formally file. Since I think once they actually file they go into something called a quite period where they don't say anything publicly.replymichaelt 15 hours ago | root | parent | next [\u2013]> All this API business could even be a result of them going through the Risks section and seeing that having competing apps using their API is a major risk.Doubtful. Plenty of companies have APIs, and it's not like their actions have strengthened the company all that much.replykzzzznot 13 hours ago | root | parent | next [\u2013]Plenty of publicly traded companies have free APIs allowing third parties to build the same front end and sidestep their primary source of revenue (showing users ads)?To clarify - I am not a fan of Reddit\u2019s latest move, I see it as a product of the management hoping to soon be beholden to Wall Street. That necessarily comes with securing of revenue streams.replyZetice 15 hours ago | parent | prev | next [\u2013]Isn't there a blackout period for the hoi polloi that prevent them from selling for ~90 days after the IPO? Big shots get to sell ofc but your average employee will have to watch the post-IPO slump go deeper and deeper.Still probably worth waiting out, but it's not like there's a big payday at the end of this rainbow for most. Could probably negotiate some kind of bonus with new employer to offset that loss, even.replylbourdages 15 hours ago | root | parent | next [\u2013]It can be higher than that, 6 months is not unheard of.It's a long time and stock can go down during that period.replyneilv 15 hours ago | parent | prev | next [\u2013]Good point. If I was holding stock/options close to an IPO, I guess my interests might be better aligned than usual with whatever short-term corporate moves that pander to Wall St.replythrwwy30993 15 hours ago | prev | next [\u2013]A friend of mine who is a software engineer there has #opentowork plastered on his LinkedIn profile picture. He's been at Reddit for 7+ years.replyjake_morrison 14 hours ago | prev | next [\u2013]This is such a baffling failure to understand how social networks function (see the 1% rule: https://en.wikipedia.org/wiki/1%25_rule).They are alienating the most engaged users who provide the content and pissing off the moderators who provide free service to keep the communities running. Replacing passionate moderators working for free with disinterested paid staff will reduce quality and significantly increase costs.replyp3rls 6 hours ago | parent | next [\u2013]Eh, I use paid staff to maintain my website that's sorta like a subreddit + a database attached. Would I rather these people work for free? No-- because it's a lot of stressful bullshit doing this kinda stuff. Instead of working for free it's just very low paying -- I can sleep at night though (and as a bonus I don't have to worry about stuff like this)replyedgyquant 14 hours ago | parent | prev | next [\u2013]I would really like to see some stats that backup this 1% rule in the age of social media. Your wiki link cites research from 2012 which is before the real social media boom. Seems to apply to Internet forums in the 2000s and doesn\u2019t account for gamification etc that we\u2019ve seen since.replydeminature 3 hours ago | root | parent | next [\u2013]There's an article explaining it here: https://en.wikipedia.org/wiki/1%25_rule. Of any social network, typically 1% are the power users, 9% are intermittent contributors and 90% are lurkers.replyjohnnyanmac 10 hours ago | root | parent | prev | next [\u2013]believe it or not, I bet it got worse in the age of social media. There's more content creators now, but also a LOT more people browsing social media.replygremlinsinc 13 hours ago | root | parent | prev | next [\u2013]pick 10 commenters randomly who are obviously not really supportive of the protest, ie they are going to stick around and aren't the demographic affected, then pick 10 content posters in subs that protested. Look at their karma and number of posts and report back.Average ppl on Reddit rarely post content, usually plenty of comments, just not content.If all the content producers leave then you get the same effect as if the subs were still dark.replypraisewhitey 14 hours ago | prev | next [\u2013]Reddit shared this on their instagram story yesterday. A booth at some Adweek conference. https://i.imgur.com/NNLtjFo.mp4replypwillia7 16 hours ago | prev | next [\u2013]brb have to fly/drive to a strange city and setup airgapreplyjerkstate 15 hours ago | prev | next [30 more]that_guy_iain 15 hours ago | prev [\u2013]> Is this going to turn out like Twitter with a huge purge of Reddit staff tooLet's be serious, Reddit making a profit will decrease the likelihood of massive layoffs. I suspect if Reddit backs down in this protest drama they will be forced to do layoffs to become profitable instead of becoming profitable from making more revenue instead of reducing costs.> As an employee do you support the blackout secretly?Well considering the internal memo got leaked, I think there must be someone who supports it.replyhackersword 15 hours ago | parent | next [\u2013]To date I've seen no logic that shows how any of reddit/spezs actions will actually increase profit.Making a wild claim about how much 3rd party apps \"cost them\", is not the same as actually seeing revenue once those 3rd party apps are closed.As most people have been saying, the majority of 3rd party app users are the more advanced technical savvy ones.There may be SOME percentage of the 3rd party app users who transition, but if the 3rd party traffic is as trivially small as Reddit has claimed, not sure how that will overnight magically transform them into being profitable.I've never seen an Ad on reddit with use of old.reddit.com , RES, and adblockers. I was a primary user of Apollo, and I certainly won't be using the reddit mobile app. I deleted the app off my phone once the writing is on the wall (rip the bandaid off now and detox vs in 9 days), my phone reported my usage is down 19% this week, so that is a plus.Absent any business plan on how those actions will actually drive profit, everything they've done has had sole effect of alienating their power user, mods, etc. and I don't see how that helps profit.replyweaksauce 15 hours ago | root | parent | next [\u2013]> There may be SOME percentage of the 3rd party app users who transition, but if the 3rd party traffic is as trivially small as Reddit has claimed, not sure how that will overnight magically transform them into being profitable.he said 97% of users are on the reddit app. he also said there is a significant opportunity cost to having those 3% of users not on the app. so for both of those statements to be true that 3% of users must be very active and providing a lot of content and value.replypcthrowaway 15 hours ago | root | parent | next [\u2013]What's bizarre to me is that the app inhibits activity.Like, I can type 20 comments on my laptop in the time it would take to type one on my phone, and they'll be more well-thought out tooreplyphilistine 14 hours ago | root | parent | prev | next [\u2013]And he\u2019s alienated virtually all third-party apps, putting those 3% user at high risk of just leaving the platform, destroying that supposedly huge opportunity cost.A competent CEO would have found a way to keep them in the family.replymichaelt 15 hours ago | root | parent | prev | next [\u2013]If the speaker was setting out to bullshit you, \"significant opportunity cost\" could mean a lot of things.Perhaps they mean a non-financial opportunity cost, like they could modify their API if they didn't have third parties depending on it, and they're missing out on the benefits such modifications might hypothetically provide.Or perhaps \"significant cost\" means, say, $100k per year. Significant at a human scale, insignificant at the scale of a multi-billion-dollar company.replyHDThoreaun 15 hours ago | root | parent | prev | next [\u2013]> I've never seen an Ad on reddit with use of old.reddit.com , RES, and adblockers.Which is why they're trying to force everyone onto their first party app. If you're not contributing to revenue they do not want you on the site.They have much more data than we do which leads me to think they have reason to believe most third party app users will switch/the ones that won't arent worth having anyway.replytester457 15 hours ago | root | parent | next [\u2013]They're shooting themselves in the foot, more technical users produce more quality content that the lurkers enjoy.replyraincole 15 hours ago | root | parent | next [\u2013]> more technical users produce more quality content that the lurkers enjoyWell... we assumed so. But I highly doubt if it's true.replyryathal 13 hours ago | root | parent | next [\u2013]I'd say the notable drop in quality and activity in open subs that aren't protesting is a good indicator that there is some truth to that assertion.replyHeyLaughingBoy 14 hours ago | root | parent | prev | next [\u2013]Yeah, that explains the popularity of of the /r/*gonewild fora.replythat_guy_iain 15 hours ago | root | parent | prev | next [\u2013]I think this is just pure arrogance. Some of the best content creators on the planet aren't technical. In fact, very few of technical people are good content creators. We just like to think we're so good.replymcmcmc 15 hours ago | root | parent | prev | next [\u2013]3rd party app users are all cost, no revenue. Just eliminating them would by definition move the bottom line towards the black.replygbear605 15 hours ago | root | parent | next [\u2013]Reddit doesn\u2019t like to remember it, but it\u2019s fundamentally a site where users provide content, and only a small fraction of users provide the most popular content (and do moderation). Those fraction tend to be the more advanced users that use things like third party apps or RES. So hurting those users is decreasing the amount of free work that the users give to Reddit, which means that either the site decreases in quality (less revenue) or Reddit needs to pay employees to do the same work (higher costs).The cost of the third party apps themselves was trivial, and if they just wanted to recoup those costs they could have proposed a much more reasonable cost per user for third party apps.It\u2019s about control, not about profit.replytensor 15 hours ago | root | parent | prev | next [\u2013]This is rather limited thinking though. The value of the platform is ultimately in it's content, and if those 3% of users on 3rd party apps are highly influential in driving content, then by driving them away you will harm overall value.It's one of those typically short sighted \"oh lets remove this thing costing us\" without understanding the long term impact to value.replyryathal 13 hours ago | root | parent | prev | next [\u2013]RIF had a revenue sharing agreement that was canceled years ago with no attempt to replace it with something reasonable.replyKallDrexx 13 hours ago | root | parent | prev | next [\u2013]It's kind of interesting though because a lot of people using 3rd party apps have proven they are willing to pay for a good experience (Apollo had a subscription I think, RIF has a paid tier, etc...). So instead of charging apps for API access, just require all access through a 3rd party app require authenticated users, and those authenticated users must pay a monthly fee to use third party apps.You don't over burden one single entity with large recurring payments (the app developers themselves), your power users provide revenue, and you can slowly work on your value proposition of \"hey we have updated our app to not be as crappy, you can browse reddit for free if you switch back\".replythat_guy_iain 15 hours ago | root | parent | prev | next [\u2013]> To date I've seen no logic that shows how any of reddit/spezs actions will actually increase profit.I think you assume that the only people using it are shutting down while obivously there are lots of profitable companies using the API who will obivously be fine with paying $0.24 per 1,000 API requests.Then there is obivously OpenAI and other AI based companies that are really the main reason for the change.Realistically, having Apollo, etc not there drives people to use the main app. Saying that people won't switch over seems naive. There will be some that won't be realistically the vast majority probably will. And those users then go back into monetization drives. Which will increase revenues.replystarttoaster 15 hours ago | parent | prev | next [\u2013]> Let's be serious, Reddit making a profit will decrease the likelihood of massive layoffs.I feel like this implies a couple of things:1) A business is ever satisfied with their current profit margin. I'm not sure that's the reality.2) Company profits going one way or the other affect a company's decision to perform layoff rounds. While maybe partially true, I think all the major tech companies performing layoff rounds has proven this to be mostly untrue.replythat_guy_iain 15 hours ago | root | parent | next [\u2013]I would say neither of those are really implied.If you're going to IPO you need to show growth. It's the most important thing. Realistically, making a profit isn't such a big deal if you have a solid plan and are growing. If they can't show that they are able to reign in Reddit users, who are by far the biggest problem for monetization of the platform, then they need to show they're able to get growth other ways. That would be growth in profits.replystarttoaster 13 hours ago | root | parent | next [\u2013]> If you're going to IPO you need to show growth. It's the most important thing.I think you're in a chicken and egg situation here. The reason you want to see growth is because as an investor you suppose growth is a good indicator for future profits. So the most important thing is actually still... profits.replythat_guy_iain 3 hours ago | root | parent | next [\u2013]No. Growth is important because it means the value in the future will be bigger.replystarttoaster 2 hours ago | root | parent | next [\u2013]Did we say the same thing? What\u2019s valuable? Income. Nothing besides money really matters to a for-profit business.replyHavoc 10 hours ago | parent | prev [\u2013]> Reddit making a profitStep one to making a profit is don't burn the house downreplyGuidelines | FAQ | Lists | API | Security | Legal | Apply to YC | ContactSearch:",
    "hn_summary": "- Reddit is undergoing backlash and potential layoffs due to recent decisions made by its leadership.\n- The actions taken by Reddit have led to a decrease in user engagement and are alienating power users and moderators.\n- The company's path to profitability is unclear, as there are doubts about the effectiveness of its strategies and the impact on revenue."
  }
]
