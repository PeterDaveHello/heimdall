[
  {
    "id": 40320406,
    "title": "Remembering Jim Simons: Philanthropist and Mathematician Passes at 86",
    "originLink": "https://www.simonsfoundation.org/2024/05/10/simons-foundation-co-founder-mathematician-and-investor-jim-simons-dies-at-86/",
    "originBody": "Simons Foundation Co-Founder, Mathematician and Investor Jim Simons Dies at 86 By Thomas Sumner May 10, 2024 Simons Foundation co-founder and chair emeritus Jim Simons. © Béatrice de Géa It is with great sadness that the Simons Foundation announces the death of its co-founder and chair emeritus, James Harris Simons, on May 10, 2024, at the age of 86, in New York City. Jim (as he preferred to be called) was an award-winning mathematician, a legend in quantitative investing, and an inspired and generous philanthropist. Together with his wife, Simons Foundation chair Marilyn Simons, he gave billions of dollars to hundreds of philanthropic causes, particularly those supporting math and science research and education. In 1994, they established the Simons Foundation, which supports scientists and organizations worldwide in advancing the frontiers of research in mathematics and the basic sciences. Jim was active in the work of the Simons Foundation until the end of his life, and his curiosity and lifelong passion for math and basic science were an inspiration to those around him. He was determined to make a meaningful difference in the level of support that mathematics and basic sciences received in the United States, notably by sponsoring projects that were important but unlikely to find funding elsewhere. Over its 30-year history, the Simons Foundation’s work has led to breakthroughs in our understanding of autism, the origins of the universe, cellular biology and computational science. Jim and Marilyn’s giving continues to support the next generation of mathematicians and scientists at schools and universities in New York City and around the world. Jim frequently said that he went through three phases in his professional life: mathematician, investor and philanthropist. He previously chaired the math department at Stony Brook University in New York, and his mathematical breakthroughs during that time are now instrumental to fields such as string theory, topology and condensed matter physics. In 1978, Jim founded what would become Renaissance Technologies, a hedge fund that pioneered quantitative trading and became one of the most profitable investment firms in history. He then turned his focus to making a difference in the world through the Simons Foundation, Simons Foundation International, Math for America and other philanthropic efforts. “Jim was an exceptional leader who did transformative work in mathematics and developed a world-leading investment company,” says Simons Foundation president David Spergel. “Together with Marilyn Simons, the current Simons Foundation board chair, Jim created an organization that has already had enormous impact in mathematics, basic science and our understanding of autism. The Simons Foundation, an in-perpetuity foundation, will carry their vision for philanthropy into the future.” Jim Simons is survived by his wife, three children, five grandchildren, a great-grandchild, and countless colleagues, friends and family who fondly recall his genuine curiosity and quick wit. We know that many people have stories, messages and memories they would like to share about Jim. Please send them to observing@simonsfoundation.org. Information on memorial services and other events honoring Jim’s life and legacy will be posted on the Simons Foundation website.",
    "commentLink": "https://news.ycombinator.com/item?id=40320406",
    "commentBody": "Jim Simons has died (simonsfoundation.org)980 points by fgblanch 18 hours agohidepastfavorite288 comments markgall 17 hours agoWill be interesting to see how this affects math research. He has pumped unthinkable amounts of money into the field. The only first-class flights I've taken in my life were to get to Simons-funded conferences at super fancy hotels. (I found these conferences a bit ridiculous, but the luxury treatment did ensure that they could get together a lot of the biggest names in the field in one place.) Besides the conferences, there is the SCGP at Stony Brook, the Simons Center in Manhattan, whatever MSRI is called now, AMS-Simons travel grants, tons of money for the arXiv, the Magma license deal... and that's just the stuff that I've benefited from personally. I know there's more, Simons Collaboration grants and probably other things I've never heard of. He was very good to us all. We've always joked that Phds in geometry-adjacent fields have to have one of the highest average incomes of any degree, probably at least $1 million a year. Simons making $3 billion, the rest of us making 90k apiece. reply mycologos 17 hours agoparentHopefully the Simons empire has enough people who will keep executing his vision and stave off bureaucratic rot. Making money is one thing, but circulating so much of it back through math and science is a great legacy. reply qq66 16 hours agorootparentThe thing is that he genuinely loved math. I don't think there's really anyone in his orbit who loves math as much. His family is his family and his colleagues love money. We'll see in the coming months and years whether he was able to create a structure that continues his legacy but usually the answer to that question is no. reply caddemon 15 hours agorootparentHis foundation also donates a lot to neuroscience research, particularly for Autism. I think there was a family reason for that, so probably at least some of his scientific philanthropy will continue for awhile. But yeah it's extremely hard to create a structure that would perpetuate without the remaining people at the top truly buying into and understanding the mission. reply jdonaldson 14 hours agorootparentprevIt's hard watching venerable institutions rot into \"just avoid administerial short term blame\" death loops. You have to have skin in the game, not just hire a temporary manager for it. reply paulpauper 13 hours agorootparentprevI think it's doable. Institutions under top leadership can thrive long after its founders die. This is true of almost every Fortune 500 company. I am sure there is enough redundancy to continue the foundation's goal. Carnegie foundation or Ford foundation, or Apple computers after jobs died . reply epolanski 12 hours agorootparentI don't understand the relationship with Steve Jobs. Nobody's arguing that Renaissance, his investment fund, will do well without him. We're talking about the philanthropy that Simmons led in mathematics and science through his foundation. Now, whether this support will continue depends on the will of Jim as well as his family. reply eigenvalue 3 hours agorootparentprevI’d argue that Ford and Carnegie foundations are not good examples here, having veered very far from the intention/goals of the original donors into directions that are arguably diametrically opposed. Essentially they were hijacked from within by hired “professional managers” who pursued their own agendas. Maybe in the future we can set up AIs to make the decisions on our behalf after we’re gone, because humans are extremely unreliable over longer time frames! reply altruios 16 hours agorootparentprevsadly, the trend for these sorts of things is to sour after the original founder leaves... There is an esoteric concept that has some dynamics that explain this phenomenon somewhat. Not to get to into the weeds (the origins of this concept are esoteric religious ideas - I mean this secularly, as it relates to business entities) but the concept is an 'egregore' https://en.wikipedia.org/wiki/Egregore#:~:text=An%20egregore.... I don't see it on the Wikipedia page, but the theory that explains the degradation of a companies original mission statement can be summarized as this: \"Within an organization(egregore) there exists three classes of individuals... the primary two of which are those that serve in the name of the egregore, and those that serve the egregore directly, the third (a smaller %) being those un-loyal to the current structure and would change the egregore to suit their needs. Of the main two: The dichotomy can be spilt along lines like developers/founders vs marketers/sales, where developers are interested in serving the mission statement and developing a good product, and marketers are interested in growth and survival, at the expense of everything else. So when the developers/founders leave, the vacuum that is created is filled either by those that would change the egregore, or corrupt the mission statement in the name of growth and profit.\" This is a simplistic model - with a fair bit of predictive and explanatory power. I have found it useful to describe that shift inside a corporation. reply next_xibalba 14 hours agorootparentSimons has been out of day-to-day management for quite some time. He was succeeded by co-CEOs who were then themselves succeeded, IIRC. (These are my recollections from reading The Man Who Solved the Market). Apparently his management style was always pretty hands off and they operated multiple successful quant strategies that were led by others. Their Medallion fund returned 22% after (huge) fees in 2022 according to the WSJ. [1] That's the employee only fund that has blown the doors off for 30+ years. They do have a few other funds that manage much more $ and manage external money that have never performed at Medallion's level. In other words, it seems like succession will not be a major risk for them in the near term. [1] https://www.wsj.com/articles/big-hedge-funds-are-top-perform... reply altruios 11 hours agorootparentIt would imply good processes for keeping out those that would run it to the ground in the name of (short term) profits... That makes me hopeful... But every succession is a risk. Every merger is a risk... ask Boeing. reply martin-t 13 hours agorootparentprevThis split exists not just in organizations but in society at large. Some people are builders and some are redistributors. Builders take pride in creating value and redistributors can provide useful service by making value available to more people. Very often engineers are not interested in marketing/selling their product and redistributors fill a useful niche. However, some fraction of redistributors are willing to enrich themselves at the expense of others. These should never be allowed to make decisions affecting others. A founder should always look for people from the first group by looking at their past behavior and make sure those succeed him. reply agumonkey 16 hours agorootparentprevI find the tension between founders(idealists) / marketers(survivalists) pretty interesting. The Jobs-less apple era is one recent instance I assume. reply altruios 16 hours agorootparentBoth are needed. But Currently there are no checks in place to prevent this 'mind-share' take-over, so to speak... reply pfd1986 9 hours agorootparentprevInteresting concept. Would love to learn more if you can think of a reference reply pfd1986 8 hours agorootparentEdit: Claude for the rescue \"Here are some additional sources that discuss the concept of an egregore and how it can be applied to understanding group dynamics and the evolution of organizations: \"The Anatomy of the Body of God\" by Frater Achad (Charles Stansfeld Jones) - A detailed exposition on the occult concept of egregores from a ceremonial magic perspective. \"Web of Debt\" by Ellen Hodgson Brown - This book discusses egregores in the context of economic systems and the power of collective beliefs shaping institutions. \"The Egregore Effect\" by Jack Willis - Explores egregores as self-reinforcing memetic constructs that shape group behavior. \"The Cult of Information\" by Theodore Roszak - While not directly about egregores, it discusses how ideologies and worldviews can take on a life of their own within organizations. \"The Organizational Hologram\" by David Bohm - Applies concepts from quantum physics to understanding the undivided wholeness of organizations reply andbberger 13 hours agorootparentprevHHMI is going strong. didn't really kick until gear until after Hughes died, but still reply jhbadger 5 hours agorootparentThat's because the HHMI as planned by Hughes was kind of a scam. It took legal decisions against his family to establish HHMI as a serious biomedical funding agency. reply free_energy_min 9 hours agorootparentprevThanks for sharing this, super interesting! reply eru 5 hours agorootparentprev> Hopefully the Simons empire has enough people who will keep executing his vision and stave off bureaucratic rot. I think that fear is why the Gates foundation (or was it the one by Buffett or both?) have to spend down their endowment within a few years of the founder's death and then close shop. reply bmitc 14 hours agorootparentprevFor what it's worth, the foundation was actually kickstarted by his wife. reply m463 14 hours agorootparentI used to think this kind of thing was because someone didn't care. But I also think someone is at high level, a partner might be the only one who can look at things from above, seeing the big big picture. Of course it could be the person doesn't care, but it could also be the person is busy, etc reply bmitc 14 hours agorootparentI actually think they both cared. My comment was more to point out that she is still alive and is a computer scientist, so the foundation still has founding leadership. reply hinkley 16 hours agorootparentprevI wonder if he left any of the rest of his money to the foundation, or if it all stays with his family. reply paulpauper 12 hours agorootparenthttps://givingpledge.org/pledger?pledgerId=288 giving it away reply wslh 14 hours agorootparentprevIt is not about enough people, it is about THE PERSON. Every people is different and there are people who are more different and outliers. reply 1980phipsi 17 hours agoparentprevQuanta Magazine is also funded by his foundation. reply max_ 16 hours agorootparentEven the Numberphile YouTube Channel. He was very serious about improving maths education and actually did alot. reply 7thaccount 16 hours agorootparentMan. That Numberphile episode on Fermat's Last Theorem with Simon Singh had me on the edge of my seat like I was as a child when Darth Maul pulled out that double-bladed lightsaber during Phantom Menace. I'm not a math major either. reply alexwasserman 12 hours agorootparentprevI thought Numberphile is sponsored by Jane St. Another math focused quant firm. reply max_ 12 hours agorootparentThey have many sponsors. Jim Discovered their channel, liked it and invited them to his New York Apartment for an interview. [1] From that time forward, all Numberphile videos have \"Simons Foundation\" at the end listed as a sponsor. [1]: Here is the video https://youtu.be/QNznD9hMEh0?si=SVnDx77dQNepMRJW reply markgall 17 hours agorootparentprevGood point! Far and away the best popularization of recent results, at least in the eyes of a mathematician. reply nextos 15 hours agorootparentprevAnd lots of great work in quantitative biology, which is hard to get funded elsewhere. reply frinxor 14 hours agorootparentprevcame here to mention this as well! fantastic ezine that i click everytime i see it linked here. reply squirrel6 17 hours agoparentprevNot to mention Math for America, which is one of the best funded organizations of its kind… reply markgall 17 hours agorootparentAnother important one! I think they pump a lot of money into the MoMath as well. It's just hard to come up with every way the math world depends on Simons money. reply hx2a 15 hours agoparentprevI believe Jim Simons is also one of the founders behind the National Museum of Mathematics in NYC. https://momath.org/ reply hinkley 16 hours agoparentprevHis wife also helps run the foundation doesn’t she? Looks like she’s ~73 so hopefully has a few years left. reply hinkley 13 hours agorootparentGeeze, phrasing. I meant \"a few years of actively supporting the foundation\", not \"let's start a death clock.\" reply pyrrhotech 12 hours agorootparentprev73 is less than a decade into retirement age; hopefully she has much more than a few! Looks like 14.5 years life expectancy reply eru 5 hours agorootparent> Looks like 14.5 years life expectancy And I assume that's for normal people of her age and gender? She's probably far from normal. reply infinet 15 hours agoparentprevBeen a mathematician, he also funds physics. See Simons Observatory that studies Cosmic Microwave Background. reply abhgh 13 hours agorootparentI wasn't aware of this till a friend told me: the Simons foundation partly also funds the Perimeter institute [1]. [1] https://perimeterinstitute.ca/news/new-simons-foundation-sup... reply jasondigitized 11 hours agoparentprevHe was worth an ungodly amount of money. His foundation or whatever vehicle he chose will surely be around for a long time. reply ilrwbwrkhv 6 hours agorootparentThis is what Elon musk could have been. Instead of that he became a 13 yr old guy. reply mciancia 1 hour agorootparentRight, because spacex, starlink, tesla and neuralink don't exist. All he does is shitposting reply spr-alex 14 hours agoparentprevthis was posted down into the comments already but geometry has nothing to do with https://www.nytimes.com/2021/09/02/business/renaissance-irs-... the simons foundation will have influence on machine learning and medicine for many decades to come though and will hopefully be a force of positivity in these fields reply lupire 13 hours agorootparentSimons was a geometer. https://www.jstor.org/stable/1970273?origin=crossref reply xiaodai 5 hours agoparentprevMagma. Only in the us. Sydney where it’s developed have to pay for it reply next_xibalba 14 hours agoparentprev> found these conferences a bit ridiculous Was it the content/aims of the conferences, or just that they were so ostentatiously luxurious? reply ev7 13 hours agoparentprevAnd the Simons Institute for the Theory of Computing at Berkeley! reply PaulHoule 17 hours agoparentprevThat money for the arXiv was a decade late. arXiv barely survived the 2000s. reply infecto 17 hours agorootparent> That money for the arXiv was a decade late. arXiv barely survived the 2000s. I find this kind of comment quite distasteful on someones death. Was he actively trying to destroy arXiv? reply PaulHoule 17 hours agorootparentI'm not blaming Simons, I am blaming the people I worked for when I worked at arXiv who, again, took a decade to start looking for sustainable funding. reply infecto 17 hours agorootparentWhile this thread is by no means as formal of an event. Picture yourself at someones memorial service, before/during/after the service you bring up a topic that is orthogonal to the person's life and frames it about yourself instead of the person being memorialized. Its just a bit weird. reply adammarples 15 hours agorootparentNow picture yourself a million miles from that, on a semi anonymous third-tier comment thread on a bulletin board reply ignoramous 9 hours agorootparentLARPing is likely Internet's favourite pass-time. reply yau8edq12i 14 hours agorootparentprevMemorial service? What are you on about? In all likelihood, nobody here had met the guy, and HN would hardly even be on his radar. Picture yourself at a coffee place discussing some celebrity's life event and maybe it won't be so weird anymore. reply davrosthedalek 14 hours agorootparentI think you are underestimating the reach of HN. While I personally didn't know Jim, I know several people who did. And I know many people, me included, who benefited from his generosity and support of science. reply yau8edq12i 5 hours agorootparentHoly shit, someone at the coffee place knows someone who knows the celebrity, that's insane. reply jandrewrogers 14 hours agorootparentprevAs an anecdote of one, I knew him. reply soperj 17 hours agorootparentprevThat's a strange sentiment, it's not like he had to donate at all? reply 77pt77 10 hours agorootparentprevHow difficult is to run a glorified BBS over HTTP/HTML like that? Like seriously? It's not as difficult as the stuff being published there. reply renewiltord 17 hours agorootparentprevAh, good looking out. It was on my list for this year https://info.arxiv.org/about/donate.html but if it's useless I'll skip it. More for GiveWell it is. reply lupire 13 hours agorootparentWhy would you change your donation plans based on an unsubstantiated snarky comment about an event 15 years ago? reply renewiltord 10 hours agorootparentI have a spreadsheet. I take action at the end of the year depending on whether I'm itemizing or not (which I'll know at the end). I'm not going to do too much research. I'll add to it if I have a positive experience. If something annoying barely approaches the space of a thing I blacklist. I have some retention of some things on it but others I might fail to blacklist. In this case, I remembered. I have a good base-case: GiveWell. So I'm content to dump everyone else on the slightest suspicion. I don't really care that much. reply rglover 15 hours agoprevSorry to hear this. RIP. “Be guided by beauty. I really mean that. Pretty much everything I’ve done has had an aesthetic component, at least to me. Now you might think ‘well, building a company that’s trading bonds, what’s so aesthetic about that?’ But, what’s aesthetic about it is doing it right. Getting the right kind of people, and approaching the problem, and doing it right […] it’s a beautiful thing to do something right.” - Jim Simons reply xucian 14 hours agoparentman's a genius, enjoyed each of his interviews. rip reply 77pt77 10 hours agoparentprevThis beauty talk really needs to think. With the current status of research it's clear humans have a very problematic relation with what most people think the term means. A new word should really be crafted to disambiguate. reply gradschoolfail 8 hours agorootparentI have a feeling that when academics or high status people talk about beauty they actually mean “surprising depth”, because I find that both terms as used by these people subconsciously encode a notion that hard work is required, something not fully appreciated by most humans.. (although Simons does tip his hat to that with his “be guided by”.) Anyways high status and academics tend to forget, due to early quality education, that appreciation of the sort of beauty that they refer to is not costfree. reply tombert 17 hours agoprevSadly I've never been able to snag an interview with RenTech (and I've applied like a dozen times), but they're the ones that actually made me start taking finance a lot more seriously. Maybe if I ever finish my PhD they'll hire me. I had previously thought of HFT and Quant as a bunch of \"finance bros\", and kind of dismissed it as \"not real CS\" [1]. Reading about RenTech and Jim Simons made realize that there's actually a lot of really cool and interesting math and CS that goes into this stuff. Jim Simons being a respected mathematician who just decided to change trajectories has always fascinated me, and it's sad that he's gone. [1] I don't believe this anymore and I feel dumb for thinking it in the first place. reply filoleg 17 hours agoparentHis whole RenTech story was fascinating. Effectively an outsider in finance who gathered a bunch of other outsiders (aka big mathematicians), and decided to start a hedge fund that takes zero interest in the actual companies and trades solely on math. Which makes sense, since none of the main people involved in its creation had any corporate or finance experience, but tons of math experience and knowledge. This is oversimplifying it like crazy, but I recommend anyone to anyone with even a passing curiosity for this look up the details (or read “The Man Who Solved The Market”, which is documenting the beginnings and growth of RenTech, as well as that of Simons; very enjoyable read). reply _vaporwave_ 15 hours agorootparent“The Man Who Solved The Market” is fascinating because it spans almost the entire history quantitative finance (through the lens of RenTech) dating back to the 1970s. Simmons was one of the first to realize the advantage of collecting and analyzing vast sums of data to identify patterns in financial markets. They were digitizing magnetic tapes and collecting more data than they could even process given technical limitations of the time. reply benreesman 14 hours agorootparentI can second this book recommendation. Remarkable candor in such a secretive field. reply tombert 17 hours agorootparentprevYep, not argument here at all, RenTech is a super fascinating outlier in finance. It's kind of inspiring. I don't know a ton about finance or trading algorithms, but I know a fair bit (I think) about math and CS, and because of RenTech I've formulating my own trading strategies (just paper trades). Thus far all I've been able to do is lose all my pretend money by trying to play options, but it's still fun to try. Will I be successful and make billions? Almost certainly not, but it's an excuse to play with different types of math that I don't play with very often, but RenTech proved that you can beat the market by taking advantage mathematics. reply danielmarkbruce 15 hours agorootparentThere are some interesting interviews around rentech. It starts to feel like they made a lot of money out of being extremely thorough, by doing a lot of reasonably simple (at least by the standards of math phds) things extremely well. reply 1024core 17 hours agorootparentprevIIRC his fund averaged around 30% gains per year, every year, over 30 years. (I'm going from memory here, too lazy to look it up). That is just such an unbelievable performance number. reply tdullien 15 hours agorootparentImportant to keep in mind that these returns ceased to be compounding quickly: they restarted from scratch 10bn each year to score 30%. Successful quant stratégies tend to hit capacity limits... reply iamgopal 14 hours agorootparentTheir success is limited by what other party ready to lose, most of the time, these all are zero sum games. reply eru 5 hours agorootparentDepends on how you look at it. Eg selling insurance can be seen as a zero sum game, but it's a genuinely useful product for people, even when the expected value for them is negative. It works, because utility is not strictly proportional to money. Similarly, market making delivers liquidity-on-demand for a fee. reply NhanH 1 hour agorootparentInsurance is positive-sum because the value-generating enterprise (the buyer) gets to continue generating value after the unexpected thing happen. The alternatives is that the value creation process just stop. It is only seemingly zero-sum for the point in time when the accident happens and one side has to pay for the other. reply agumonkey 16 hours agorootparentprevI'd still wish to have details on this (I too heard of similar numbers for his fund before), because in my newb eyes .. such returns would mean they could absorb a huge chunk of the planet liquidity. reply tomp 16 hours agorootparentNo, because such returns aren't scalable. According to industry rumors, RenTech is somewhere between $10-20bn AUM (assets under management, i.e. the capital used for trading), and the profit that they make, they can't reinvest, they have to take it out as profit. reply jamiek88 15 hours agorootparentHow come? Why do they have to take the profits out and can’t compound it? I know literally zero about this stuff! reply tomp 14 hours agorootparentThe simplistic explanation is, if you're doing arbitrage - i.e. \"fixing market mispricing\", there's only so much arbitrage you can do before you fix the price... This is of course a completely theoretical proposition, because in reality you don't know what the \"fair price\" is. You don't even have probabilities, because those are also unobservable, you only see one version of \"history\". In practice, what happens is that if you trade \"too much\", \"shit goes wrong\". Both of these things require empirical estimation and are easy to get wrong. The most obvious is the market liquidity, which you can observe at e.g. BitStamp TradeView [1] - there's only so many orders at a given price, so the more you trade, the worse price you get (the average/marginal trade). No professional of course trades like that, especially not HFTs, but similar problems happen at every scale - you're competing with other traders, they might have better information, there's limited amount of stock in the market, the edge/alpha/expected profit you can earn decays over time as the price moves, if you trade too much you move the market and inform other participants who can then trade against you, ... [1] https://www.bitstamp.net/market/tradeview/ reply WrongAssumption 15 hours agorootparentprevWhen you scale up too much it creates market impact that affects returns. You basically become too much of the market. reply paulpauper 13 hours agorootparentprevI know literally zero about this stuff! I guess you will not be getting a job there But in seriousness, when you become so big relative to the market, you become the market. reply tim333 16 hours agorootparentprevAll investment strategies are limited as to the amount of money they will take. They probably couldn't have ran much more without reducing perfomance. reply ljosifov 13 hours agorootparentprevYou'd have to sacrifice the returns if you want bigger size. For every trade you do, there will be expected return (+ve) and then some costs to pay (-ve). Commissions and similar costs are only linear so not terrible. With increasing size, the market impact cost that's non-linear will soon overwhelm all other costs. So you keep adding alpha in your forecasts (via your research pipeline), that will be eaten away by the impact cost, as you scale up. If you keep it small (-ish - still gross pfolio will be billions) - then you will get to keep high returns. reply eru 5 hours agorootparentprevHow do you 'absorb' liquidity? Are they like some kind of financial kitchen towel? reply datadrivenangel 17 hours agorootparentprevAren't there some shenanigans with those numbers around their larger funds not doing as well? It's easy to make a few high margin dollars, hard to make a lot of high margin dollars. reply makestuff 16 hours agorootparentThey limited the fund size so employees frequently got distributions from the fund instead of just rolling over their investments. However, the distributions were still in the millions of dollars. They also got into some tax trouble with uncle sam and had to pay 7b in back taxes (https://www.wsj.com/articles/james-simons-robert-mercer-othe...) reply danielmarkbruce 15 hours agorootparentprevdepends on your definition of \"few\". Rentech made a \"few\" for very large \"few\". reply paulpauper 13 hours agorootparentlol . Only made tens of billion. What a failure. reply chollida1 16 hours agorootparentprevit was 62% per year for 33 years. reply tombert 16 hours agorootparentThat is insane. Like, completely insane, shouldn't-be-possible insane. I guess the theoretical limit to how much money you could make in the market is \"the sum of all volatility\", but I wonder how realistically possible it would be to even dream of beating 62% yearly. reply chronic640201 15 hours agorootparentMathematics can only take you so far. At the end of the day, people run the exchanges. Not math. The returns of modern HFT market makers are even higher. With their unfair “business” advantages such as PFOF, privileged dark pool and block trade access, and military internet infrastructure. Think 60%+, per year, at least. Over 10-20 years, of course. reply eru 5 hours agorootparent> The returns of modern HFT market makers are even higher. The returns of a child's lemonade stand are even higher... Market makers and lemonade stands are mostly about paying for labour (and ideas etc, but let's call that 'labour', too). Capital requirements are rather low. So taking all the profit and attributing it to capital returns tends to give you weird numbers. reply chronic640201 1 hour agorootparent> So taking all the profit and attributing it to capital returns tends to give you weird numbers. Why does it matter? Returns are returns. Money in, money out. After all, people compare HYSA bank interest with TreasuryDirect bond returns with equity ETFs like VTI and QQQ. Each with vastly different capital mechanics. reply tombert 9 hours agorootparentprevThat doesn't surprise me; doesn't Citadel keep the entire bid-ask spread for every transaction they facilitate? Presumably between that and arbitrage opportunities that pop up from option contracts alone, I have no doubt that market makers clean up pretty well. They wouldn't hire me either! reply eru 5 hours agorootparentCitadel has plenty of competition, eg from Jane Street. The markets for market making are some of the most efficient markets on the planet. reply TeaBrain 14 hours agorootparentprevTheir returns worked out to something like an average of 39% per year after fees, which is the figure I've heard cited. This may be what they were thinking of. Renaissance was/is known for having higher fees than likely the entirety of their competition, which they can get away with since their returns still outstrip the rest after the higher fees. reply mgfist 5 hours agorootparentThe fund is closed off to outsiders, so the fees are don't matter in the same way they do for most funds. In the podcast episode on Rentec done by Acquired, the hosts speculated that rentec kept the high fees as a way to ensure they have enough to handsomely pay less tenured employees who don't yet have much money in the fund. reply kzzzznot 3 hours agorootparentThat’s a great episode and covers a lot in depth. Would recommend Acquired in general - appeals to me as interested in tech, business and finance reply gcanko 15 hours agorootparentprevWhen I read \"The Man Who Solved The Market”, I blown away with the story of Robert Mercer who arguably paved the way for Brexit and the election of Donald Trump. I wonder how different the world would be if Simmons didn't exist, the butterfly effect can sometimes have some massive unintended consequences. reply real0mar 13 hours agorootparentprevDoes the book cover anything about how the fund actually works? It's understandable that they'd want to keep a tight lid on it, but I'm so curious reply mgfist 5 hours agorootparentThe book covers some earlier aspects of the strategy. And I think the \"spirit\" of the strategies exists today, though tangibly very different and not actionable. reply chronic640201 1 hour agorootparentprev> Does the book cover anything about how the fund actually works? Basically, no. reply richrichie 3 hours agorootparentprevI believe they were doing ML based trading. Their edge was data collection, cleaning and standardisation and the ability to trade a lot at very cheap borrowing cost. This was way before computers became a thing in trading or ML became a thing. reply paulpauper 12 hours agorootparentprevno. One can infer it involves analyzing data, but for obvious reasons the ingredients for possibly reconstructing it are omitted. reply PaulHoule 17 hours agoparentprevI remember the time that I went to a conference put on by Sun Microsystems in the early 2000s and asked a question about certain hardware being good for main memory databases which got me jumped on by a RenTech recruiter. Had I known what was about to happen to my current job at that time (mentioned in another comment in this thread) I would have taken more interest. reply sergius 16 hours agoparentprevYou should read these books: https://www.goodreads.com/en/book/show/43889703 https://www.goodreads.com/en/book/show/25733505 And some of the myths you have may be dispelled :-) reply phyalow 15 hours agorootparentBoth are excellent, I'll add these two too: https://www.goodreads.com/en/book/show/186124 https://www.goodreads.com/en/book/show/482347 reply rcpt 17 hours agoparentprevThe phone screen was hard and I didn't pass. It's not usual tech interviews they hit you with a lot of stats and math GRE style questions. Maybe the prep in finance is different reply infecto 17 hours agorootparentThey don't really hire finance people so I suspect most/all of the interview processes are heavy on the match/stat side. reply em500 14 hours agorootparentQuantitative finance interviews are pretty much all probability and stats questions. reply kccqzy 13 hours agorootparentYeah there's a famous but outdated book called A Practical Guide to Quantitative Finance Interviews by Xinfeng Zhou that gives you some idea of what questions they like to ask. reply karmakurtisaani 17 hours agoparentprevRT must be one of the most selective companies in the world. Even to get an interview you'd better have a damn good CV (medals in math/cs/science Olympiads, degree from a top tier school etc.). And then after a few years of working there you're a (multi)millionaire. It's totally bonkers. reply tombert 17 hours agorootparentI don't really blame them for not picking me, clearly whatever they've been doing has been working. I'm not entitled to a job from them, obviously. I don't really know what a \"top tier\" university is, but I can say for sure that my undergrad (WGU) wouldn't count as that. The PhD I'm in is from a more prestigious university [1], and I guess FAANG experience isn't enough to snag an interview with them. [1] University of York, though I don't know if that counts as \"top tier\" either. reply therobots927 13 hours agorootparentI've heard stories of professors getting letters in the mail from RenTech totally out of the blue. They pay so well that I'm surprised they even accept applications. Don't feel too bad about not passing their bar. What they've accomplished is essentially unheard of, and believed to be impossible by a lot of market theorists. reply karmakurtisaani 15 hours agorootparentprevIf it makes you feel better, my CV isn't even good enough to get a FAANG interview.. reply tombert 9 hours agorootparentI worked at Apple as a college dropout, and got an offer from Google I didn't accept also as a dropout. Both of them only really cared more about work history and my ability to solve whiteboard problems. Pretty much all the interviews ended up \"what's another clever way to use a hashmap?\" reply 77pt77 10 hours agorootparentprevReally? Google harasses anyone with a live linkedin profile. Getting to an onsite interview is a different matter though. I know 3 people at google, all senior, either SE or people managers. None had brilliant academic records. One took almost 10 years to finish his sociology adjacent undergrad. He's the most \"successful\" and has been there for almost 15 years, 10 in the states. The others have been there for like 5. Make of this info what you wish... reply paulpauper 13 hours agorootparentprevI read you do not apply, rather you get recruited. reply belter 17 hours agorootparentprevThat is what they said about Google.... reply infecto 17 hours agorootparentAnd RT has been around for about twice as long as Google. Has a headcount of around ~300. reply FredPret 16 hours agorootparentIt's truly inspiring that they've been able to keep their headcount low over a long period of spectacular success. Most organizations would have choked themselves on tens of thousands of bad hires long ago. reply djtango 16 hours agorootparentProbably because it was run by mathematicians who I assume have no love for managing lots of people. Combine that with how most the company spend all their time thinking about making money and that's probably why the company never succumbed to bloat reply FredPret 15 hours agorootparentI think you're right. I also think they have sufficient career progression (in terms of problems solved and $$$ earned) that nobody feels the need to build a big team. Pure speculation though, I know nothing about RenTech except that the pay is... generous. reply mgfist 5 hours agorootparentprevThe incentives at rentec favor low employee counts. The main fund is both limited to insiders and limited in total capital, so every new hire is judged by how much they can improve returns, if they cost more than they improve, than they're a pure net negative. This is different from most orgs who can grow revenue through expansion of some sort, in which case the incentive often favors adding new employees. Not to mention the tendency for people in tech to be evaluated by how many people are in their org, further incentivizing adding headcount to signify your importance. reply keiferski 16 hours agorootparentprevThat's one thing I find interesting about hedge funds and (some, not all) finance organizations: their ability to make huge amounts of money with small staffs. IIRC RenTech's revenue per employee is something entirely absurd, in the millions. reply danielmarkbruce 15 hours agorootparentIt's just leverage. You can leverage people, capital, technology. Many companies were built leveraging large numbers of people. Many companies leverage technology. Many companies leverage capital. Gotta lever up. reply karmakurtisaani 15 hours agorootparentprevYep, they don't have products they need to maintain. Just enough infra to figure out the next profitable trade. Once heir models stop being ahead the curve, they can be just scrapped. reply belter 16 hours agorootparentprevWe had leaks from even the NSA...But never from the RT fund. reply vsnf 7 hours agorootparentFrom Wikipedia: “Employees: Classified (est. 30,000–40,000)” Obviously the number of people working on the super secret stuff is smaller, not to mentioned each project has a compartmentalized staff, but keeping secrets at this size is going to be a tough ask. They seem to do a pretty good job, but we know they’re not infallible at it. I imagine RenTech at 1/100th the size would have a vastly easier time. reply danielmarkbruce 15 hours agorootparentprevThere are leaks. reply kolistivra 11 hours agorootparentCould you share some? reply amelius 17 hours agoparentprevI have to confess that I still think that. Where would you recommend I start reading to find financial enlightenment? reply tombert 16 hours agorootparentI think Veritasium made a really good video talking about some of the differential equations governing option pricing [1] which I found really fascinating. Patrick Boyle's video about Jim Simons' history is really interesting too [2]. Also just reading about Jim Simons' being an already-very-successful mathematician dropping everything to start a hedge fund and ending up extremely successful at the end of it was a bit of a wakeup call. Clearly this was an extremely smart dude (he was the chair of the math department at Stony Brook!), and so if this is interesting enough for someone like him, then it's probably something worth looking into. I read through a book on basic trading strategies and I thought it was pretty interesting [3], though I've gone in a pretty different direction from what they taught. [1] https://youtu.be/A5w-dEgIU1M [2] https://youtu.be/xkbdZb0UPac [3] https://www.amazon.com/Machine-Learning-Algorithmic-Trading-... reply buggythebug 14 hours agoparentprevWhy would you think it was a bunch of \"finance bros\"? You can BS your way to the top in such things as Sales because raw intellect and mental ability is not required. The same can be said for many aspects of finance. But you can't just do HFT or Quant because you want to - you actually need skills. Same way I can't BS my way into designing a rocket - you either can or you can't. reply tombert 9 hours agorootparentBecause I didn't know what they actually did, I assumed it was just another rebranding of the same seemingly-useless stuff that I associated with finance bros. I mentioned in the very comment that you're replying to that I was wrong. reply kwere 14 hours agorootparentprevBeing able to BS yourself upward is a skill in itself. Management becomes \"political\" up the ladder reply matwood 11 hours agorootparentEQ is a thing just like IQ. A person can get by with just one if it’s off the charts, but most people would do better expanding both. reply mhh__ 17 hours agoparentprevWhen have high frequency traders and quants ever been finance bros? Wut? reply tombert 17 hours agorootparentAgain, I was wrong and I acknowledged that, but I guess I grouped HFT and Quants into the same camp as the characters from American Psycho. They're different groups, I respect them now and feel dumb for not respecting them before. reply kqr 15 hours agorootparentprevThe very early quants (people who did rough mental options math in the Chicago pits in the 1970s) were finance bros by osmosis. You had to be. It changed at some point during the '80s, probably to no little degree thanks to Renaissance. reply benreesman 14 hours agoprevWhat a loss. I hope I join the community in wishing the best for his loved ones. But also what a life. He could have quit 10, 20, 30, 40, 50 years ago and been in the history books. What’s now called Chern-Simons is a monumental result in topology that IIRC dates to the mid-60s. Then he empirically disproved the strong-form EMH, a result in economics of which I’m unaware of any peer in its conclusiveness. Then he built SUNY Stoneybrook into possibly the best lab for topology and differential geometry in the world. Geometer, topologist, cryptographer, outspoken and fearless critic of needless war, trader, teacher, monument. Legend. May he rest. reply anonu 13 hours agoparent> Then he empirically disproved the strong-form EMH Not clear as we do not really know exactly how RenTech works. It is believed that there are substantial tax loopholes that were taken advantage of - which would go a long way (not all the way) to explaining the incredible performance of his fund. reply benreesman 13 hours agorootparentEvery serious finance company knows how to optimize taxes. Simons was returning 25-50% on 8BN AUM at Medallion every year with one or two exceptions every year for 30 years. Even the hedge funds we let openly operate with black edge in plain sight can rarely do that for 3-5 years. It’s obviously debatable unless they open the books, but it’s pretty much common knowledge which funds are bending the rules (flagrantly violating securities law), and I’m unaware that Medallion was anything other than just there first. reply richrichie 3 hours agorootparentprevRentec gets a lot of leverage and gets ridiculous pricing on option trades from the banking desks because of the flow they bring. reply benreesman 14 hours agoparentprev@dang I think this merits a black bar. reply lvkv 17 hours agoprevAs an alum of Stony Brook, I’m grateful for all Jim Simons did for the university. Aside from having been the chairman of the math department, he’s the reason we have the Simons Center for Geometry and Physics, as well as the “Renaissance” School of Medicine. Not to mention his recent gift of $500 million—the largest unrestricted donation to a public university in American history. I’m sure there’s much, much more that he’s done that I’m not even aware of. reply mushufasa 17 hours agoprevLast month an amazing biographical podcast came out describing his personal journey to starting rentech, and the factors that make the business so competitive. Certainly worth a listen https://www.acquired.fm/episodes/renaissance-technologies reply bcherny 5 hours agoparentI listen to Acquired religiously, but felt this particular episode was pretty weak. They went through Zuckerman's The Man Who Solved the Market [0] chapter by chapter, butchering a few parts because the hosts don't know quant finance well (though they seem to know VC and product very well). I'd recommend just reading the book instead. I'd also recommend Derman's My Life as a Quant [1] for a broader take at other firms around the same time that Renaissance was taking off. [0] https://a.co/d/6x7ALkr [1] https://a.co/d/5vWBOce reply mgfist 4 hours agorootparentIt's tough because of how little material is out there. I will say, I thought their hypothesis on why the fees are so high was very astute. Can't know if it's true or not, but it feels very compelling. reply bcherny 4 hours agorootparentThe wealth transfer hypothesis I didn’t really get, but their other hypothesis that it’s a way to nudge non-employees out of the fund is probably right. reply Schiendelman 17 hours agoparentprevThis is by far my favorite podcast series, I’d recommend the ones on Costco, Amazon, and Nvidia as well. reply arcanemachiner 17 hours agorootparentAcquired is amazing. They recently did one on Microsoft which is great too. reply crakenzak 16 hours agorootparentprevTheir Novo Nordisk one is really great too! reply javiramos 9 hours agoparentprevThe podcast seems like a death sentence. They did one on Charlie Munger and he died a few weeks after. Jim Simons also died a few weeks after his episode aired. reply keiferski 16 hours agoparentprevCame here to recommend this. This podcast is a good overview for RenTech and their other episodes are good for other companies. Especially the Nintendo series. They also did an interview with Charlie Munger right before he died. They have good...timing, for sure. reply djoshea 17 hours agoprevThe Simons Foundation has had an enormous, transformative impact on neuroscience as well. It’s widely considered among the most incisive, forward-looking sources of funding in the field, pushing for fundamental advances to solve “tomorrow’s problems.” https://www.simonsfoundation.org/collaborations/#global-brai... reply seper8 17 hours agoprevhttps://youtu.be/QNznD9hMEh0?si=XrLiIDUV4WMfIz2V Interesting Numberphile interview with Jim, if you're not aware who he is reply CliffStoll 17 hours agoprevI'm personally grateful to Jim Simons -- and his foundation -- for supporting and extending mathematical research in Berkeley, and throughout the world. Jim Simons did fundamental research in topology; his work in mathematics, cryptography, and topological quantum field theory. Beyond this, he pressed for higher quality public education in math and encouraging training and presige for math teachers. reply chrispeel 17 hours agoprevArchive link for original article: https://archive.ph/zIx9b Simons also funded Quanta magazine: https://www.quantamagazine.org/about/ His Wikipedia page is interesting: https://en.wikipedia.org/wiki/Jim_Simons_(mathematician) reply SSLy 16 hours agoparentthank you, the page renders empty for me. reply justinclift 13 hours agorootparentYeah, it's effectively a placeholder for me. No content whatsoever. reply therobots927 14 hours agoprevI was lucky enough to see him speak at the Simons' Center for Geometry and Physics at Stony Brook as an undergrad, even though I had no idea what he was talking about (he was explaining the math behind the sculpture he had contracted for the university). He's always been an inspiration to me and I would strongly recommend (as other commenters already have) the book \"The Man who Solved the Market\" which gives the history of Renaissance Technologies. Whether it's his career in Math/Physics, or career in the stock market, he was at the top of the game. His contributions to the university in combination with his Philanthropic efforts to improve Math education are likely his greatest contributions to humanity. It's highly likely that my tuition was paid for by someone who worked for him at the Hedge Fund, or maybe even Simons himself. Rest In Peace Jim. :'( reply abhgh 13 hours agoprevThis is sad news indeed. The Simons Institute [1] in the UC Berkeley campus has had a positive impact in my life in terms of the many high quality talks (both in terms of content and recording quality) that they continue to put up on YouTube [2], while making it free to attend in online or in person (you have to register online). My wife and I have attended quite a few of them in person, and for people like us who are interested in learning but have no direct line into academia, this was one of the few avenues where we could learn what various researchers and research groups were working on, and interact with them. I had heard of the Medallion fund before I was aware of the Simons Institute but I never put the two together till a comment, either here or on reddit, mentioned Jim Simons as the connection. [1] https://simons.berkeley.edu/homepage [2] https://www.youtube.com/@SimonsInstituteTOC reply elorant 17 hours agoprevI highly recommend the book \"The Man Who Solved the Market\" by Gregory Zuckerman which explains how Simons build his infamous company. https://www.amazon.com/Man-Who-Solved-Market-Revolution/dp/0... reply pibefision 16 hours agoparent+1 for this book. It's a great way to understand what he did. reply topherPedersen 15 hours agoparentprevI started reading the last chapter this afternoon. reply paulpauper 13 hours agoparentprevinfamous implies bad. reply elorant 12 hours agorootparentWell it’s an algo trading company. reply kzzzznot 3 hours agorootparentPlease explain why quantitative algo (not HFT) trading is “bad”? reply elorant 2 hours agorootparentWhy do you make the distinction from HFT? At their heart they're both the same thing. You're using algorithms to trade and eventually manipulate markets. What kind of value are you adding to the whole system? reply kzzzznot 37 minutes agorootparentThe distinction in my mind is HFT is “worse” for market participants because of the front running of large orders between exchanges. I’d argue this cross exchange arbitrage does still provide some value by keeping prices of securities across exchanges/the world in sync, despite being quite unfair and taking value from those putting in large orders. Liquidity provided by algo market makers is also a service to market participants because they take risk to ensure there is always someone to buy or sell - this reduces volatility and risk for everyone. Algo trading is also required for keeping ETFs in line their benchmarks, which is an entirely separate subject you could fill a book with. So no, all algo trading is not the same thing, there are valid and productive uses of code rather than people shouting across a pit or running slips up and down roads to keep capital flowing through markets efficiently. reply seliopou 13 hours agoprevI went to a Simons Foundation lecture in like 2014. The topic and speaker escapes me now, but at the reception beforehand there there was an old man smoking. At the time I indulged myself so I asked the guy that invited me if I could smoke there too. He said, \"only Jim can smoke in here.\" And that's the first time I had any idea who Jim Simons was. reply richrichie 3 hours agoparentJim never gave a fuck and smoked even in investor meetings. reply 22SAS 17 hours agoprevI work at a trading firm. RIP to the GOAT, the god of quants.Reading about him and RenTec, back in high school, was one of the first things that got me attracted to the field. reply gnatman 17 hours agoprevHis interview on Numberphile is great- very smart guy: https://www.youtube.com/watch?v=QNznD9hMEh0 reply mehulashah 17 hours agoprevThis person made a lot of money, so it’s easy to say that he’s part of the machine. But, the man had principles. And he stood by them. Grateful for him showing us the way. reply jjallen 5 hours agoparentHe took money out of the machine and donated it to good causes. Arguably he was anti machine reply dcgudeman 16 hours agoparentprev\"the machine\"? What is \"the machine\", the economy? reply mehulashah 16 hours agorootparentI meant the financial-industrial complex that dictates our economy. reply wood_spirit 15 hours agorootparentOther principles that he famously stood for against the machine was opposing the Vietnam war when he was a cryptographer for the US government machine. reply danielmarkbruce 15 hours agorootparentprevHe wasn't really dictating anything. He was just in the casino playing a better game of poker (I don't mean that in a bad way). reply yau8edq12i 14 hours agorootparenthttps://en.wikipedia.org/wiki/Jim_Simons_(mathematician)#Pol... > Since 1990, Renaissance Technologies has contributed $59,081,152 to federal campaigns and since 2001, and has spent $3,730,000 on lobbying as of 2016. Let's not kid ourselves, people at this level of wealth and power can very much make their voice heard by the people who make policy. He's definitely not the only one in this position, but to frame him as a \"better casino player\" who is \"not really dictating anything\" is naive at best. reply danielmarkbruce 13 hours agorootparentThat's just rich people being rich. Rentech had people donating to both sides based on their personal ideology. The \"financial industrial complex\" generally refers to large financial institutions systematically driving regulation and/or PE controlling a large chunk of economic activity. Rentech is a bunch of gamblers gambling and spending their money no different to any other rich people. reply lotsofpulp 14 hours agorootparentprevSimon’s business partner, Mercer, bet big on Trump in 2016: https://www.newyorker.com/magazine/2017/03/27/the-reclusive-... I am under the impression this might have been a bad look for RenTech hence Mercer leaving the firm. reply mfiguiere 17 hours agoprevAcquired Podcast did a 3 hours episode on the history of Renaissance Technologies last month. https://www.youtube.com/watch?v=2KjW4BqNFy0 reply georgehaake 17 hours agoprevPretty good run for an adult life-long heavy smoker. reply imranq 17 hours agoprev\"My algorithm has always been: You put smart people together, you give them a lot of freedom, create an atmosphere where everyone talks to everyone else. They're not hiding in the corner with their own little thing. They talk to everybody else. And you provide the best infrastructure. The best computers and so on that people can work with and make everyone partners\" reply jetrink 17 hours agoparent> create an atmosphere where everyone talks to everyone else. The company is an interesting example of Conway's Law[1]. I learned from the recent Acquired episode on RenTech[2] that in contrast to how most other firms work, there is only a single model within RenTech that everyone contributes to. You don't have a bunch of small teams working in silos building specialized or competing models. As a result, every new development gets shared with the whole group. 1. [O]rganizations which design systems are constrained to produce designs which are copies of the communication structures of these organizations. 2. https://www.acquired.fm/episodes/renaissance-technologies reply adversaryIdiot 17 hours agoparentprevif only more companies fostered the idea of employee wellbeing reply mycologos 17 hours agorootparentA somewhat cynical take is that \"smart people\" is doing a lot of work here. If you get to restrict your hiring to people who have proven themselves to be world-class in something, they are probably much more likely to respond to freedom by pursuing something than by coasting (or worse). reply quartesixte 13 hours agorootparentYeah an unpopular and maybe socially inconvenient thing to say at parties, but the more I manage operational teams, the more I find this true. Bureaucracy stoops down to the lowest common denominator of the group. Smart people capable of self-motivating and self-organizing don’t need a lot of bureaucratic structure if given enough incentive and freedom. Being promised millions is a lot of incentive. reply richrichie 3 hours agorootparentprevEmployee wellbeing is overrated. In fact, standard economic theory would say that it is better to pay people more instead doing anything else. reply sagasu007 2 hours agoprevI hope there will be people who really like mathematics to inherit his legacy and continue on. The world cannot develop without mathematics reply javiramos 9 hours agoprevIf you are interested in learning about the history of Rentech and Jim Simon’s life I highly recommend this podcast: https://www.acquired.fm/episodes/renaissance-technologies reply MP_1729 15 hours agoprevSimmons is one of the greatest people and a true inspiration as a mathematician, even though my career drifted from academia. He and Andrew Wiles are the reason why I always say I am a mathematician, even though I work elsewhere. RIP reply nunez 11 hours agoprevThis is really sad. Simons definitely had some views I don't agree with, but he was one of the good ones overall. Specifically, I hope the Simons Foundation continues to fund Math for America. My wife participated in this program, and it helped her become an excellent educator while also _significantly_ helping her financially. reply kolistivra 11 hours agoparentwhat views of his do you disagree with? reply max_ 16 hours agoprevHe was writing his memoir. I really hope he finnished it, I was looking forward to reading it. reply tromp 17 hours agoprevThe news item is blocked by many ad-blockers, including my Brave browser. Using Firefox I see the text: Simons Foundation Co-Founder, Mathematician and Investor Jim Simons Dies at 86 By Thomas Sumner May 10, 2024 Simons Foundation co-founder and chair emeritus Jim Simons. © Béatrice de Géa It is with great sadness that the Simons Foundation announces the death of its co-founder and chair emeritus, James Harris Simons, on May 10, 2024, at the age of 86, in New York City. Jim (as he preferred to be called) was an award-winning mathematician, a legend in quantitative investing, and an inspired and generous philanthropist. Together with his wife, Simons Foundation chair Marilyn Simons, he gave billions of dollars to hundreds of philanthropic causes, particularly those supporting math and science research and education. In 1994, they established the Simons Foundation, which supports scientists and organizations worldwide in advancing the frontiers of research in mathematics and the basic sciences. Jim was active in the work of the Simons Foundation until the end of his life, and his curiosity and lifelong passion for math and basic science were an inspiration to those around him. He was determined to make a meaningful difference in the level of support that mathematics and basic sciences received in the United States, notably by sponsoring projects that were important but unlikely to find funding elsewhere. Over its 30-year history, the Simons Foundation’s work has led to breakthroughs in our understanding of autism, the origins of the universe, cellular biology and computational science. Jim and Marilyn’s giving continues to support the next generation of mathematicians and scientists at schools and universities in New York City and around the world. Jim frequently said that he went through three phases in his professional life: mathematician, investor and philanthropist. He previously chaired the math department at Stony Brook University in New York, and his mathematical breakthroughs during that time are now instrumental to fields such as string theory, topology and condensed matter physics. In 1978, Jim founded what would become Renaissance Technologies, a hedge fund that pioneered quantitative trading and became one of the most profitable investment firms in history. He then turned his focus to making a difference in the world through the Simons Foundation, Simons Foundation International, Math for America and other philanthropic efforts. “Jim was an exceptional leader who did transformative work in mathematics and developed a world-leading investment company,” says Simons Foundation president David Spergel. “Together with Marilyn Simons, the current Simons Foundation board chair, Jim created an organization that has already had enormous impact in mathematics, basic science and our understanding of autism. The Simons Foundation, an in-perpetuity foundation, will carry their vision for philanthropy into the future.” Jim Simons is survived by his wife, three children, five grandchildren, a great-grandchild, and countless colleagues, friends and family who fondly recall his genuine curiosity and quick wit. We know that many people have stories, messages and memories they would like to share about Jim. Please send them to observing@simonsfoundation.org. Information on memorial services and other events honoring Jim’s life and legacy will be posted on the Simons Foundation website. reply i13e 17 hours agoparentAt least for me, even with adblock turned off it still doesn't appear. Thank you for reposting! reply LifeIsBio 11 hours agoprevJust to add to the list of this Jim Simons did and funded, he also established the Simons Foundation Autism Research Initiative (SFARI). \"SFARI’s mission is to improve the understanding, diagnosis and treatment of autism spectrum disorders by funding innovative research of the highest quality and relevance.\" SFARI in turn funds a lot of foundational neurological and rare disease research, since autism is such a common phenotype. reply Tistel 16 hours agoprevThere is a nice book that goes into detail of his life called: \"The Man Who Solved the Market: How Jim Simons Launched the Quant Revolution\" reply bmitc 14 hours agoprevWhile I'm not one to fawn after billionaires, I found his life story and personality really fascinating. He really seemed to maintain a humble approach, and in the Numberphile interview, which is excellent, he really emphasized the notion of luck in success. He donated a ton of money in very targeted ways that have been extremely successful. I think because of his humble approach, lack of self-promotion, etc., he's a bit unknown outside certain circles, but his impact in certain areas has been big. While I wish that our country didn't have to rely on billionaires spearheading initiatives, which often goes the wrong way, Simons was absolutely an example of one of the good ones. https://www.youtube.com/watch?v=QNznD9hMEh0 reply pyrrhotech 12 hours agoprevTragic news; he was my personal inspiration for getting into algotrading and founding https://grizzlybulls.com. The ultimate counter-example to the Efficient Market Hypothesis. RIP reply philshem 14 hours agoprevHere’s a New Yorker profile from 2017 https://www.newyorker.com/magazine/2017/12/18/jim-simons-the... reply hellooodarkness 14 hours agoprevThis is a huge loss for both the scientific community and the quant investing community! reply pm90 15 hours agoprevhttps://www.wsj.com/articles/james-simons-robert-mercer-othe... reply thuum7 8 hours agoprevRIP, I regularly read quanta magazine. It seems he has supported science a lot. reply wwarner 12 hours agoprevA great scientist. Rest peacefully Prof Simons. He probably deserved the Nobel for Chern-Simons theory. reply chirau 7 hours agoprevyou'd think Jim would get a black bar on this site. What actually is the criteria? Or it just depends on how @dang is feeling. Jim is a hero in science, data, computing and finance. What else did he need to do? reply topherPedersen 15 hours agoprevI'm literally reading the last chapter of \"The Man Who Solved the Market\" right now. RIP reply k8sToGo 17 hours agoprevLink seems to be broken. I can’t see anything reply OutOfHere 17 hours agoparentSame here, but it works in a private window. reply richrichie 3 hours agoprevI would not be surprised if RenTec had developed GPT way before OpenAI and kept mum about it. reply sirobg 10 hours agoprevDid he share some book recommendations? reply ilrwbwrkhv 17 hours agoprevReally sad. I looked up to him. Trying to achieve brilliance in a field and then gathering a brilliant team and making money and then giving back is a great way to live. reply rossant 12 hours agoprevSo sad. He seamed like an extraordinary man. reply aborsy 15 hours agoprevRIP. A good guy and a good foundation. Anyone knows the cause of death? reply tremarley 17 hours agoprevOne of the most impactful men of our generation. He will be remember for lifetimes reply sciencesama 11 hours agoprevNeed a tracker for medallion fund reply shashanoid 17 hours agoprevOh my god, may he rest in peace. I enjoyed listening to him reply rustcleaner 15 hours agoprevHeads up: website breaks on Fennec with uBlock Origin turned on (and all filters enabled). Website unbreaks when uBlock Origin is turned off. Looks like a new way to punish uBlock. reply gregjw 17 hours agoprevA true legend. RIP. reply nybsjytm 16 hours agoprevSometimes people act like guys like Bill Gates or Elon Musk are coming from deep personal scientific knowledge and accomplishment, but they're absolutely nothing compared to Simons. His contributions to geometry in the 60s and 70s, from minimal surfaces to Berger's classification of special holonomy to Chern-Simons theory, were fundamental and are still well-remembered. His name would be known even if he'd never gone into finance or philanthropy. reply lupire 13 hours agoparentBill Gates did graduate study in math and computer science as a first-year undergraduate at Harvard College, and published the fastest pancake-sort algorithm (held the record for 30 years), before dropping not to start Microsoft. And of course he invented Microsoft's early technology, which advanced the state of the art. He was highly likely to be a great computer scientist if he chose to stay in school. reply nybsjytm 13 hours agorootparentI can read both the Gates-Papadimitriou paper and Simons' work, and it doesn't compare. Maybe Gates could have been a great scientist, who knows, but no matter how many advanced classes he took, he never was. It doesn't even matter if he got good grades in them. reply paulpauper 13 hours agoparentprevBill gates did math 55. legit smart guy reply nybsjytm 13 hours agorootparentYou don't need to be a smart guy to take math 55, nor is 'being a smart guy' what I'm even talking about. reply paulpauper 12 hours agorootparentmaybe you should have written what you meant to talk about reply nybsjytm 12 hours agorootparentFriend, there's a world of difference between being a smart guy who completed a hard math class and being one of the world's best researchers in differential geometry. reply nybsjytm 12 hours agorootparent> Bill Gates had the aptitude to be a leading researcher at probably anything if he set out to do it. He was already doing coding whilst working on math courses, so his attention was divided. Simons focused 100% on math until doing trading. Ok, I guess you're right. A smart guy who completes a hard math class and is even also doing coding can probably do anything he wants. reply paulpauper 12 hours agorootparentprevBill Gates had the aptitude to be a leading researcher at probably anything if he set out to do it. He was already doing coding whilst working on math courses, so his attention was divided. Simons focused 100% on math until doing trading. reply goy 14 hours agoprevOne of the greatest. RIP reply doubloon 8 hours agoprevRIP reply sciencesama 11 hours agoprevMedallion fund reply georgehill 14 hours agoprevHe was a legend. RIP. Maybe a black bar on top of HN? reply EMCymatics 11 hours agoprevRIP. He was a real cool guy. reply misiti3780 15 hours agoprevRIP. He did a lot of great things w/ his life. Per the books about him, he was a life long smoker. Lucky he got to 86! https://twitter.com/quant_arb/status/1631052354408665091?lan... reply OutOfHere 17 hours agoprevWhat was the cause of death? reply chronic640201 15 hours agoparentOld age But probably smoking reply dukeofdoom 15 hours agoprevnext [2 more] [flagged] karmakurtisaani 14 hours agoparentAsk your friend how things look like at his end of the bell curve. reply PartiallyTyped 16 hours agoprev@dang may we have a black banner? thank you. reply xqcgrek2 11 hours agoprevGood riddance. I don't think he did a single positive thing for the world (and I'm counting his foundation in this assessment). reply zeptonix 10 hours agoparentRan a bunch of stop losses (momentum ignition) while conning everyone into thinking it was all about being a math genius, but what do I know reply 37 more comments... GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Jim Simons, co-founder of the Simons Foundation, mathematician, investor, and philanthropist, has passed away at 86 in New York City.",
      "Known for his significant contributions to math, science research, and education, he and his wife Marilyn donated billions to various philanthropic causes.",
      "Simons, also the founder of Renaissance Technologies, a successful hedge fund, leaves behind a legacy in mathematics, investment, and philanthropy through the Simons Foundation."
    ],
    "commentSummary": [
      "Renowned mathematician, investor, and philanthropist Jim Simons has passed away, leaving behind a remarkable legacy in mathematics research, finance, and charitable work via the Simons Foundation.",
      "Discussions are focusing on continuing his philanthropic endeavors, the achievements of his hedge fund Medallion, and the influence of RenTech's trading methods.",
      "Simons' profound impact on quantitative finance, the scientific realm, and his commitment to advancing mathematics and science are widely acknowledged and commended, despite some accompanying criticisms."
    ],
    "points": 980,
    "commentCount": 288,
    "retryCount": 0,
    "time": 1715356261
  },
  {
    "id": 40318542,
    "title": "Jam: Web Debugger Revolutionizing Bug Reporting for Non-engineers",
    "originLink": "https://news.ycombinator.com/item?id=40318542",
    "originBody": "Hey HN, I wanted to show you a product a small team and I have been working on for 4 years. https:&#x2F;&#x2F;jam.devIt’s called Jam and it prevents product managers (like I used to be) from being able to create vague and un-reproducible bug tickets (like I used to create).It’s actually really hard as a non-engineer to file useful bug tickets for engineers. Like, sometimes I thought I included a screenshot, but the important information the engineer needed was what was actually right outside the boundary of the screenshot I took. Or I&#x27;d write that something \"didn&#x27;t work\" but the engineer wasn&#x27;t sure if I meant that it returned an error or if it was unresponsive. So the engineer would be frustrated, I would be frustrated, and fixing stuff would slow to a halt while we went back and forth to clarify how to repro the issue over async Jira comments.It’s actually pretty crazy that while so much has changed in how we develop software (heck, we have types in javascript now*), the way we capture and report bugs is just as manual and lossy as it was in the 1990’s. We can run assembly in the browser but there’s still no tooling to help a non-engineer show a bug to an engineer productively.So that’s what Jam is. Dev tools + video in a link. It’s like a shareable HAR file synced to a video recording of the session. And besides video, you can use it to share an instant replay of a bug that just happened — basically a 30 second playback of the DOM as a video.We’ve spent a lot of time adding in a ton of niceties, like Jam writes automatic repro steps for you, and Jam’s dev tools use the same keyboard shortcuts you’re used to in Chrome dev tools, and our team’s personal favorite: Jam parses GraphQL responses and pulls out mutation names and errors (which is important because GraphQL uses one endpoint for all requests and always returns a 200, meaning you usually have to sift through every GraphQL request when debugging to find the one you’re looking for)We’re now 2 years in to the product being live and people have used Jam to fix more than 2 million bugs - which makes me so happy - but there’s still a ton to do. I wanted to open up for discussion here and get your feedback and opinions how can we make it even more valuable for you debugging?The worst part of the engineering job is debugging and not even being able to repro the issue, it’s not even really engineering, it’s just a communication gap, one that we should be able to solve with tools. So yeah excited to get your feedback and hear your thoughts how we can make debugging just a little less frustrating.(Jam is free to use forever — there is a paid tier for features real companies would need, but we’re keeping a large free plan forever. We learned to build products at Cloudflare and free tier is in our ethos, both my co-founder and I and about half the team is ex-Cloudflare) and what we loved there is how much great feedback we’d get because the product was mostly free to use. We definitely want to keep that going at Jam.)By the way, we’re hiring engineers and if this is a problem that excites you, we’d love to chat: jam.dev&#x2F;careers",
    "commentLink": "https://news.ycombinator.com/item?id=40318542",
    "commentBody": "A web debugger an ex-Cloudflare team has been working on for 4 years747 points by thedg 20 hours agohidepastfavorite183 comments Hey HN, I wanted to show you a product a small team and I have been working on for 4 years. https://jam.dev It’s called Jam and it prevents product managers (like I used to be) from being able to create vague and un-reproducible bug tickets (like I used to create). It’s actually really hard as a non-engineer to file useful bug tickets for engineers. Like, sometimes I thought I included a screenshot, but the important information the engineer needed was what was actually right outside the boundary of the screenshot I took. Or I'd write that something \"didn't work\" but the engineer wasn't sure if I meant that it returned an error or if it was unresponsive. So the engineer would be frustrated, I would be frustrated, and fixing stuff would slow to a halt while we went back and forth to clarify how to repro the issue over async Jira comments. It’s actually pretty crazy that while so much has changed in how we develop software (heck, we have types in javascript now*), the way we capture and report bugs is just as manual and lossy as it was in the 1990’s. We can run assembly in the browser but there’s still no tooling to help a non-engineer show a bug to an engineer productively. So that’s what Jam is. Dev tools + video in a link. It’s like a shareable HAR file synced to a video recording of the session. And besides video, you can use it to share an instant replay of a bug that just happened — basically a 30 second playback of the DOM as a video. We’ve spent a lot of time adding in a ton of niceties, like Jam writes automatic repro steps for you, and Jam’s dev tools use the same keyboard shortcuts you’re used to in Chrome dev tools, and our team’s personal favorite: Jam parses GraphQL responses and pulls out mutation names and errors (which is important because GraphQL uses one endpoint for all requests and always returns a 200, meaning you usually have to sift through every GraphQL request when debugging to find the one you’re looking for) We’re now 2 years in to the product being live and people have used Jam to fix more than 2 million bugs - which makes me so happy - but there’s still a ton to do. I wanted to open up for discussion here and get your feedback and opinions how can we make it even more valuable for you debugging? The worst part of the engineering job is debugging and not even being able to repro the issue, it’s not even really engineering, it’s just a communication gap, one that we should be able to solve with tools. So yeah excited to get your feedback and hear your thoughts how we can make debugging just a little less frustrating. (Jam is free to use forever — there is a paid tier for features real companies would need, but we’re keeping a large free plan forever. We learned to build products at Cloudflare and free tier is in our ethos, both my co-founder and I and about half the team is ex-Cloudflare) and what we loved there is how much great feedback we’d get because the product was mostly free to use. We definitely want to keep that going at Jam.) By the way, we’re hiring engineers and if this is a problem that excites you, we’d love to chat: jam.dev/careers gkiely 19 hours agoNice work, looks like you've got some big names using it too, congrats. I have some feedback on your homepage & messaging. Initially scrolling the home page I thought it was a tool for viewing customer bug sessions, similar to TrackJS or Sentry. Reading this post it became clear this is for product managers and/or team members to file bugs. The line \"Built for everyone\" on the home page threw me off. I think if you make the distinction that this is an internal tool for teams vs. an external tool for tracking customer issues it might help make this messaging clearer. I'm not sure of your plans (perhaps you also intend for external users to use it) this was just my first pass impression. I think this is a great tool. The structured format combined with the information provided by the extension are what make it valuable to me. The last minute feature is also nice as re-creating bugs can be a PITA. As a dev, I would ideally also want to be able to view stack traces with source maps, but having a consistent structured format combined with the extension data is enough of a value prop to start using it. reply thedg 19 hours agoparentI agree with your comment on messaging, that is fantastic feedback–– reading through the comments here in the HN thread, it seems like that's a common understanding from our landing page. I appreciate you flagging that, we should find better wording to make it more clear. And that's really nice to hear, thank you so much! Stack traces with source maps. I agree. We integrate now with logging tools like Sentry and I wonder if we can just use sourcemaps from that. reply asaddhamani 4 hours agorootparentI got the same impression at first. Then I saw the drawing tools and I thought that’s a lot to ask from end users. Messaging is confusing for sure. reply FloorEgg 6 hours agorootparentprevBuilt for product managers who want quick bug fixes and engineers who want clear and reproducible bug reports. It's NOT built for everyone. Right? reply alt227 18 hours agoprevI got really excited before I saw there was no firefox support. Thats a deal breaker for my team :( I really like this idea and if Firefox support was added I would purchase it in a heartbeat. reply toekneestuck 18 hours agoparent[I work at Jam] We do have an internal build for Firefox.. it's coming :) reply Yeroc 10 hours agorootparentIt would be great to have a FAQ page on your site mentioning this. I was on your docs page and did a search for \"firefox\" as well as \"safari\" in the search box and there were no hits at all. Seems like something that people would often be checking for. reply thedg 7 hours agorootparentGreat feedback, that would definitely be a good thing to add! reply alt227 17 hours agorootparentprevAwesome, I will check back regularly. This looks like one of those tools that is genuinely really useful. I would love be able to tell my users to just fireup a browser extension and record a bug, rather than having to step them through how to capture all that data manually. Well Done! Bookmarking this page for the futuere: https://jam.dev/docs/downloads-and-browsers/browser-support reply thedg 7 hours agorootparentThat’s so amazing to hear, thanks for the kind words reply mattl 14 hours agorootparentprevHow about Safari? This would be very useful as not every developer has Apple hardware reply jeffhuys 12 hours agorootparentOrion could make this easier - basically a Safari fork with Chrome / FF plugin support (use it as my daily driver, pretty good and uBlock Origin in Safari? Yes please!) reply mattl 12 hours agorootparentConsumer facing stuff so nobody in my use case is running much other than a few versions of Safari or Chrome on desktop or really Safari on mobile. (87-92% iOS on mobile) reply toekneestuck 13 hours agorootparentprevYes! Safari is also on the roadmap. reply teaearlgraycold 8 hours agoparentprevProfessionally I do all of my development in Firefox and only occasionally check that Chrome works reply chilling 1 hour agorootparentIt seems pretty bold move when you consider that V8-based browsers covers 75.5% of the market [1]. [1]: https://gs.statcounter.com/browser-market-share reply bartread 32 minutes agorootparentHow is it a bold move? If it works in Firefox it’s much more likely to work in other browsers, whereas if it works in Chrome it might or might not work elsewhere. I switched to Firefox as my default for development years ago because I got fed up of wasting time on issues because something would work in Chrome but not work in one or more other browsers. Using Firefox saves me time and effort so there’s nothing bold about it, purely pragmatic. reply TacticalCoder 17 hours agoprev> but the important information the engineer needed was what was actually right outside the boundary of the screenshot I took Ah ah. At one gig we had trained the users to always send a screenshot of the entire screen. People reviewing the tickets would dump them if the screenshot was cropped and the user warned: \"No full screenshot, no ticket\". Why? The most important info was the time at which the error happened (which, for users who were on Windows, was in the bottom right of the screen). With the time we could look in the logs and the error/bug was usually obvious. reply VoidWhisperer 16 hours agoparentThis seems like it would only work if the applications in question didn't contain any PII - as soon as you get into applications or flows within an application that contain some form of PII, either displayed or the user entering it, having them send a screenshot of the entire screen is asking for the user to accidentally leak their PII to the person reviewing the ticket. Where I work (in which the above would be a problem), we make sure to log enough information that given a relative timeframe of when the user had the issue, we can usually narrow down to where the issue was using context and some querying of the logs (splunk is incredibly helpful for this) reply magicalhippo 13 hours agoparentprevFor us it's not the time but the id of the thing they're working on, but users tend to like to crop to just the dialog or subsection they're having issues with. It's infinitely easier to help the customer when we can take our own look at things. Good tip, will pass it along to support and see what they say. reply stevage 11 hours agoparentprevSeems nice but I hate sharing my whole browser window with anyone. I don't care to let other people see which plugins I use or my bookmarks toolbar etc. reply freedomben 15 hours agoparentprevIndeed, that's a great rule. Another one is \"What URL was the browser on?\" which is rarely ever in cropped screenshots but is visible in full screenshot reply thedg 7 hours agorootparentURL, totally. I was talking to a PM recently where their customers self-host their product so without knowing the url, they have no idea where on the internet to start looking for the bug. reply mattl 14 hours agorootparentprevDon’t many browsers hide the full URL now? reply Thorrez 1 hour agorootparentDesktop Chrome only hides the scheme by default I think. reply freedomben 11 hours agorootparentprevOh maybe, I do remember hearing about that. Mine don't (Firefox & Chrome on Fedora) but maybe that's a default setting (on Linux) or maybe I changed the setting and forgot about it? reply mattl 10 hours agorootparentI think you changed it immediately when you first saw it and never thought about it again. I’d doubt Chrome binaries on any platform would change that only on one platform. reply EMM_386 15 hours agoparentprev> Why? The most important info was the time at which the error happened (which, for users who were on Windows, was in the bottom right of the screen). Except it isn't in UTC and it doesn't show an offset. Even if you stored the user's timezone, that doesn't mean that's where they were working from. reply jojohohanon 15 hours agorootparentoooh. you got them. Like figuring out which timezone the user was in is impossible. What if the user intentionally set their clock wrong to mess with support. You are being silly. reply avarun 14 hours agorootparentNo, the people requiring a screenshot to include the time instead of just asking the user for an ID and time of error are the ones being silly. Have you ever heard of log filtering? reply ale42 13 hours agorootparentprevOr, some users might have hidden the taskbar, or the clock. Or have several screens, and only one of them has the clock... reply boarush 1 hour agorootparentUsers that might customise their system a bit by digging into the settings are usually more inclined to give a detailed report in case they encounter a bug or have a general knowledge of what to look for when requested for some information in my team's experience. Sounds much more like an edge case. reply db48x 6 hours agorootparentprevMost users don't customize anything, even something as trivial as that. Most corporate users may not be allowed to. I bet they never had to deal with any of these supposed gotchas. reply thedg 17 hours agoparentprevHa! Right, totally! That’s a great trick to get the exact time from full screenshot reply JacobCarlborg 15 hours agoprevHad a quick look. Seems like an interesting tool. I know there are many companies in Europe that, for regulations and compliance reasons, cannot have their data leave Europe. As far as I can see from the documentation, the data is stored in the US. Would be nice to have an option to store the data in Europe. Or not having to upload any data at all. But instead have the option export an artifact that can be processed later. But perhaps that defeats the business. reply orliesaurus 11 hours agoparentI am building a version of this that lets you store the data on your computer, you can export it and send it to your team (manually) so you can use any data hosting you want. Let me know if you're interested! reply keepamovin 6 hours agoprevThis looks really cool! Someone who worked adjacent to S2 (Cloudflare's remote browser isolation product) told me this would be a good idea to use BrowserBox for this reproducible bug replays around 2 years back. But I didn't have any other input that said the same so we didn't pursue it. I think I could probably build a competitor to this that doesn't require a chrome extension, using BrowserBox. We already have web DevTools (just right-click or context-click the screen in): https://browse.cloudtabs.net/signupless_sessions and can record the screen output. But I think hard to replicate will be your first mover advantage, client list, and bunch of other features and integrations. It's interesting you got it to such a state of readiness and polish before posting. Is that about acknowledging the replicability of the tech so you want to protect against that? Or customer requests? Or maybe more just team bias towards products of extreme beauty! :) Congratulations on this successful launch! I look forward to exploring ways we might be able to collaborate on a web version (that also works on mobile etc, using BrowserBox/CloudTabs!!!). reply duxup 19 hours agoprevJUST in time for me man thank you. I'm going to try it. Our company has just grown to where it isn't just some engineers and a few sales guys. Now we're trying to keep engineers working efficiently. / accurately, and the support team is ramping up. Making it easy for the sales or support guys to log a good ticket or bug is a never ending challenge. This looks like a great option. I worked in support for ages and later moved to an engineering role, it's a mountain to climb to get good communication / reproducing things accurately enough for the engineers to really take action effectively. reply thedg 19 hours agoparentThat is really awesome to hear. Thank you for such a nice message! +1 –– when I worked at Cloudflare, the support team had to teach all of us how to export HAR files from our browsers for engineers. It's definitely a mountain to climb to get good bug reporting working internally. reply gelstudios 6 hours agoprevI've been playing with this for a few hours and had similar questions about scrubbing custom tokens or headers from the submitted data. One concern I have about the instant-replay feature is the potential performance implications when monitoring multiple tabs or windows. I'm not particularly fond of the idea of all sites in this way and prefer better controls there. I saw the block list inside the extension, but I think an allow list makes more sense for this use case. That way, .ycombinator.com or .example could work as opt-in for instant replay, and ideally, those domains could be preconfigured at the team level. Acknowledging Chrome's extension per-site permissions is a valid option, but it's clunky. +1 vote for a datadog integration, in addition to backend data I would love to see this work well with RUM. For now, I'll settle for jamming a common ID into Jam.Metadata and see how that works out. I also thought Jam would accept bug reports from end-users and look forward to the development of that feature. Comments synced to timestamps in the recordings are nice. Have you considered a scribble/annotation like the still screenshots, but for videos? The annotations could be anchored to the comment timestamp, and they would help capture a UX micro-interactions that may not be obvious in a still or video. reply boarush 1 hour agoparentI think the reason for having the permissions for all sites is for when you want to use the instant replay feature on the off chance and you realise that there were no permissions enabled for the specific domain. I'd be pretty annoyed if the bug is not reproducible and I lose that chance of generating a bug report. reply franze 19 hours agoprevLandingpage tip: Show your real product at least once, in a screenshot, in a video. Currently all images, videos are stylized which makes me think you are hidding something or at least I do not know what I will get. reply thedg 19 hours agoparentThat's good feedback! reply mattnguyen 10 hours agoprevI built a similar tool in 2016 called Bugcam that does exactly this. It was also a chrome extension with the ability to tie console logs and network traffic to screenrecordings. Jam looks really polished and far more usable than the weekend hack I put together :) Well done! The explanation for why OP built Jam was precisely the motivation I had for building Bugcam. I had transitioned to a team in Europe as part of an acquisition that had non-technical PMs filing bug reports. Their reports were completely nondescript and incredibly frustrating to decipher and repro. I ended up abandoning the project due to other opportunities that came up. One interesting thing I noticed was that a significant percentage of users downloaded Bugcam to record themselves playing games for YouTube. Perhaps there was another opportunity there, but I decided not to pursue it. Congrats on the product and best of luck Jam team! reply irtefa 8 hours agoparent[I work at Jam] Thank you for the kind words, Matt! If you ever want to go back to that world, shoot me an email at i@jam.dev. We are always hiring! reply thedg 7 hours agoparentprevThank you Matt! That’s so cool. Like minds :) reply babelfish 17 hours agoprevAlso ex-Cloudflare, have been following Jam for awhile, great product! Something I would love is a way for customers to use this without having to install a Chrome extension. It would make debugging customer issues much faster - for example, if clicking 'Report a bug' on a website automatically triggered the recording flow and asked the user to reproduce it. reply flibble 18 minutes agoparent+1 on this request. Would also like to be able to kick a report off automatically -- eg, on any exception or on any 4XX from the server. reply croshan 15 hours agoparentprevStay tuned! We’re building this out soon. :) reply irtefa 15 hours agoparentprevHello! Would love to learn more! Can you send me a note at i@jam.dev? reply Thaxll 19 hours agoprev\"network tab\" isn't it a security concern to record API calls? Also how future proof it is with Google changing Chrome addons permissions / API etc...? reply thedg 19 hours agoparentGreat concern! We do two things to address that: The first is nothing gets recorded and saved (or even sent to our backend) until the user actively chooses to log a bug. So it’s like actively choosing to save a HAR file when there’s a bug. The second is we scrub all network requests on the client side for anything that resembles PII or sensitive data. We just don’t want it on our servers. Is there anything else you think we should do? Definitely building on the Chrome platform there’s always API risk of something changing but I hope Chrome and other browsers will keep it possible to provide a better debugging experience through extensions like ours for people who want it. reply nightpool 19 hours agorootparentSome kind of end-to-end team encryption would be great, I could generate a local passphrase using 1Password or something and put it in the team vault. Then you wouldn't have access to the request metadata (maybe outside of hostnames?) on your servers. Alternatively, an option to simply download local replays and then a desktop/electron viewing client instead of having to upload them to a server would be great too reply thedg 19 hours agorootparentI like that idea a lot, we should do that reply Bilal_io 17 hours agorootparentprevI see in the Security page [0] that you filter out headers that you think are PII or tokens. And I see that you're willing to receive feedback via email. I don't think this approach is scalable, for the main reason that sometimes we use custom headers to pass tokens. My suggestion is to have a setting that lists default headers you think should be obfuscated, and the user/team can remove and add to them as they like. 0. https://jam.dev/docs/product-features/dev-tools/security reply irtefa 14 hours agorootparent[disclosure: I work at Jam] Yes! I think that's a great idea. reply thedg 7 hours agorootparent+1 great idea! reply floobertoober 19 hours agorootparentprevMaybe scrub cookies and authorization headers by default, but make them an opt-in for bugs where they're relevant? Edit: it looks like this is already the case! reply dewey 18 hours agorootparent> but make them an opt-in for bugs where they're relevant? The tool seems to be built for people who don't know what to include in a proper bug report (As they are maybe not technical enough), so not sure how helpful that choice would be for them. reply boarush 1 hour agorootparentThis might be a feature fit for the pro tiers. I would really like it for our QA testers who'd want to include that information but still aren't that technical to know all the places to look for that information. reply n00bskoolbus 17 hours agoprevNice! I remember when this tool launched and I checked it out. It's really nice to use with easy to setup integrations. The instant replay feature especially is super cool! My biggest request would be to please add a Firefox extension! The Jam team seems like a talented and good group of people. I applied a while back and while I was turned down I got an actual human response from the team. They also did a push to ask for input on improvements for Jam maybe a year ago and offered to donate $25 (iirc) to St Judes for every person who responded. reply thedg 17 hours agoparentThank you so much!! And so kind of you to say, you just made my day. Firefox version - totally agree. We have to do it. I promise we will :) reply gwbas1c 14 hours agoprev> It prevents product managers (like I used to be) from being able to create vague and un-reproducible bug tickets (like I used to create). > ... Like, sometimes I thought I included a screenshot, but the important information the engineer needed was what was actually right outside the boundary... Or I'd write that something \"didn't work\" but the engineer wasn't sure if I meant that it returned an error or if it was unresponsive... > ...the way we capture and report bugs is just as manual and lossy as it was in the 1990’s That's because bug reports are primarily communication among people, and the problems you describe are people problems, not technology problems. Bug reports work when engineering can state what they need, and management is willing to support engineering's needs. Otherwise, bug reports devolve into the situation that you describe above. In your case, this looks like a great tool for browser applications; but it only works if the people submitting the bug use the tool: I could easily envision a situation where a lousy manager ignores engineering's pleas to use Jam. reply thedg 20 hours agoprev*engineers I work with are telling me that some of you are going to argue that types don’t exist in real javascript and that web assembly isn’t assembly reply nolok 19 hours agoparentWell it's bytecode, so if you consider java or dot net bytecode assembly then it's assembly, if not then not. If we want to be pedantic, assembly is usually defined as being close to the architecture machine code, which web assembly is not. Yeah, I fell into that trap, but it's a holiday here. reply Rapzid 16 hours agorootparentI'm on holiday so I'll have a go and join the pedantic train. It's not as you say close to the hardware so it's intermediate code. And nobody argues .Net IL is assembly. reply thedg 19 hours agorootparentprevHaha I knew this would happen! reply neonsunset 15 hours agorootparentprevA lot of people get confused by assembly in WASM unfortunately, which leads them to claim that it is performant and if it's not, then fixing it is a trivial exercise of just making a fast WASM JIT compiler. Where did I hear this before? They really should have gone for JSVM IR or something, but that would sell it to no one. reply Rapzid 3 hours agoprevTools like OpenReplay and Fullstory already are capable of capturing a scary amount of information. I'm curious how far you could go with this idea without the need to be an extension. What would really be missing? reply kmoser 7 hours agoprevI didn't dig too deeply so maybe I missed it but your site doesn't mention how this works from a technical standpoint, i.e. do both reporters and devs need to have this extension installed, or just the reporters? If just the reporters, in what format are the bug reports captured? I.e. if it's a video plus metadata, does it save a .mp4 (or whatever) video file plus a .json file with the metadata? Knowing more up front about how the whole thing works would make me more inclined to try it, especially since I'm wary of tools that take liberties with what they capture and store. reply irtefa 5 hours agoparentJust the reporter. Metadata + screenshot / video / instant replay. You can download the videos. reply suresk 11 hours agoprevKind of funny, I was just looking at adding similar functionality to an internal Chrome plugin I built because we struggle to get enough useful info in bug reports (being able to look at the HAR, in particular, is useful, but difficult to get users to do correctly). Two questions - 1) Any way to customize which headers/cookies get scrubbed? 2) Is there a way to get something like the lower-level export you can get by going to chrome://net-export/? reply thedg 7 hours agoparentHa, that’s cool! We don’t have a way to customize that yet but we absolutely need to build that And yes! Network logs get captured and added to the bug report automatically and we have copy as curl too so you can retry the request locally reply suresk 7 hours agorootparentThis would have been so useful this past week while we debugged something that ended up being a weird combo of Comcast/Cloudflare/http3 - only some people could reliably reproduce it and it was a lot to coach them through all the steps. Being able to redact a few values would be really important for us (I just wrote Python scripts to clean the har files up), but I’m going to play around with it this weekend. reply 0xbadcafebee 13 hours agoprevOkay, so, stupid question; could you replace this with this screen recorder[1] and browsers' built-in web dev tools[2] ? The screen recorder lets you record and download a session (nothing is uploaded), and the dev tools lets you capture any errors the browser sees, the network connections & errors, the source, browser data/steps, yadda yadda. The built-in web dev tools have a Recorder function to record what the browser is doing while also recording video[3]. You can export the recording in a number of formats. It can replay it, let you edit steps, even simulate a slow network. Seems like a product person could follow a simple guide to record and export a session, and send it to a dev? [1] https://toolbox.googleapps.com/apps/screen_recorder/ [2] https://developer.chrome.com/docs/devtools/ [3] https://developer.chrome.com/docs/devtools/recorder reply SleepyMe 4 hours agoprevNice work! Suggestions 1)Jam requires being on a website page to load, which might not always align with how users interact with browser extensions, often using them independently of a webpage 2) Wouild be nice to have an option to record two windows 3) Visibility of the extension popup in recordings when sharing a browser window - I can see extension popup open on the recording only when I share the entire screen Thank you! Haven't explored all functionality yet but already love Jam\"The button brings me to the wrong page\" > \"I filled out the whole form but the submit button is not enabled\" > \"The video should autoplay but is stuck loading\" Those things do not show up in Sentry logs. reply a_t48 14 hours agorootparentSentry has session replay that should catch all of these things - it doesn't look any higher friction than this tool. reply wjdp 18 hours agoparentprevI see these tools as complimentary. Sometimes Sentry &al don't capture a user session (blocking, didn't consent &c) and this tool acts as a nice fallback you can instruct the user to use rather than having to explain how to open dev tools and screenshot the console. reply e63f67dd-065b 17 hours agoprevI would love it if you could bundle this into electron, there’s so many random electron apps for which the bug reporting workflow is still stuck in the 90s as you say. reply thedg 17 hours agoparentThat will be really awesome! reply utku-0 18 hours agoprevnice work, love the landing page design, messaging/copy could be improved slightly. I was confused on how it was supposed to help me without going deeper if that makes sense. reply thedg 16 hours agoparentThank you! That’s great feedback, a few other people mentioned the copy could be clearer in the HN thread. That’s so important for us to know, appreciate you saying so! reply sergeyski 19 hours agoprevLooks similar to replay.io reply Bilal_io 17 hours agoparentWhat I don't like about replay.io is that it requires you to use their custom browser. reply acemarke 16 hours agorootparentHi, I work at Replay.io. There's a very good reason for that \"custom browser\" requirement. Session replay tools like LogRocket or Jam do capture a lot of information, but they can only capture what's _in_ the page, and are thus limited by the JS execution environment and permissions. This is still very useful for seeing what the user did in the page, and you do get a good amount of detail (video, DOM, network). Replay.io works by capturing the browser's calls into the operating system. (This is really complicated! Our fork of Chromium has thousands of lines of custom C++ and JS modifications in order to capture the runtime information and make it queryable.) That enables actually _debugging_ any line of code that ran at any time. That's something that session replay tools _can't_ do. So, yes, both Replay.io and session replay tools let you _see_ what happened, but only Replay.io lets you _debug_ the code _as it ran originally_. And that's only possible because we do capture the _entire_ browser's execution. We've got some sections in our docs that dive into this in more detail: - https://docs.replay.io/time-travel-intro/what-is-time-travel... - https://blog.replay.io/how-replay-works - https://docs.replay.io/comparison/session-replay Not only does Replay.io let you _debug_ recordings of bugs, we've got a Test Suites dashboard that lets you record Playwright or Cypress E2E tests _as they ran in CI_. This is possible because we can run your E2E tests with our own browser, and thus record them as they're running. Finally, a sneak peak: we're currently prototyping some new advanced functionality that would actually _diff_ passing and failing E2E tests to figure out where a failing test went wrong, surface that info to developers, and help them identify common failure reasons in their tests (\"27% of your failures in the last month were due to Apollo Client failing to connect\"). Still very early, but we've got the core functionality working! Again, this is only possible because we've recorded the _entire_ browser's execution, and can then replay that browser at will and query for every bit of JS execution that happened. reply modern-sapien 16 hours agorootparentprevIDK. Sanitizing chrome for testing makes a lot of sense as different versions of chrome have been proven to be unreliable. Playwright uses a sanitized chrome version. And Cypress does not, and allows users to use their own browsers which may be a reason for some not insignificant portion of flake. They definitely had multiple instances where a particular chrome version was unstable leading to lots of customer complaints regarding their reliability. reply fragmede 8 hours agorootparentprevhonestly that ends up being a feature rather than a bug for me, given how many chrome windows and chrome profiles going on, having it be a separate so entirely is a good thing in my book. I can understand others have a different opinion though. Given all the attention paid to the developer experience, what's weird is CORS not being called out in their browser. reply liamkinne 20 hours agoprevNice looking landing page. Small bug, when I scroll down the page and then click \"pricing\" it doesn't take me to the right spot on the page until I click again. On Firefox 125.0.3 reply iglio 19 hours agoparentCan you use https://jam.dev/ to file the bug report? Joking aside, this looks really cool! reply thedg 19 hours agorootparentAhahaha thank you!! reply alt227 18 hours agoparentprevThey dont even support Firefox with thier browser extension product. Looks like this team give Firefox very little love :( reply thedg 19 hours agoparentprevOn it! Thanks for letting me know! reply rathboma 17 hours agoprevDo you think this would work as a bug reporting solution for a desktop app using electron? I make beekeeper Studio and struggle with bug reports being very vague reply orliesaurus 11 hours agoparentI'd love to chat to you - what's a good email to get in touch? reply rathboma 11 hours agorootparentHey! I'm Matthew (at) beekeeperstudio.io reply Lorin 12 hours agoprevMight want to fix the typo in the feature list \"Om-premise data storage\" :) reply CafeRacer 19 hours agoprevI think SAML should be available for business tier as well. reply fragmede 7 hours agoparentI'll draft a PR to put them on the SSO wall of shame at https://sso.tax/ when I'm at a laptop reply Yeroc 6 hours agorootparentDo you have a similar wall of fame for companies that _don't_ charge extra from SSO support? reply thedg 16 hours agoparentprev+1, great feedback reply 0xbadcafebee 13 hours agorootparentIs there any reason 'enterprise' features can't be purchased a-la-carte if your org isIt’s actually really hard as a non-engineer to file useful bug tickets for engineers... So the engineer would be frustrated, I would be frustrated While I have been in this scenario before, saying something along the lines of, \"If I don't get 100% bug reports, I can't do 100% bug fixes,\" 9 years of experience and maturity later: no, I wouldn't use this. It wouldn't engender me more respect, power or efficacy in the organization if I \"just\" \"educated\" PMs on how to file bugs, or if I \"just\" used some tool for them. I should have just not asked non-engineers to ticket bugs or do QA. If that is happening, you are already failing in terms of leadership and organization. Most products fail, so that's not saying much, and they rarely fail due to bugs, which is also not saying much. That said, the best technical solution is clearly comprehensive tracing, and the best cultural solution is that engineers responsible for an end user experience must manually QA all paths. reply dpe82 15 hours agoparentThat's all well and good, but even a halfway engaged PM is going to play with the product while it's in development, and they will tell you about what they discover along the way. It may not strictly be their job but they're going to do it. If a tool exists to help them capture more information that makes their inevitable reports more useful, is that a bad thing? reply randomgiy3142 16 hours agoprev [–] We’d call these non reproducible non errors (200 for GraphQl) as “usefully wrong.” You see this in AI a lot where they spent millions in market research or ask MBA types how to recommend a product and it turns out that someone buying a new laptop tends to also want to buy new shoes. You’d get people like executives not happy they looked bad for spending money on one thing only to find out they were way off. Good news is more revenue makes people look good, so that’s not a hard problem. What’s hard is if a contact us form stops working (bad example), people stop using it but still use the app the same way and spend as much is the form and the people behind it necessary or are people brand loyal and willing to put up just with a minor bug? Similarly if we get something not working and can’t reproduce it did a network card have a low level error that propagated in such a way even our monitoring couldn’t pick it up? I thought this was a new error in complex systems we have now with hundreds of clusters creating basically non-deterministic problems. But fine I remembered before kernels became better at talking to things like drivers and external hardware we’d see weird bugs outside our boundaries that were really hard to track down and often never manifested themselves in the same way. This is when you’d go to the weird guy no one talked to and in a week he’d have some piece of odd C code with a hex value doing logic no one understood that bypassed whatever error we were having. It is too bad those guys that I’m pretty sure didn’t do much largely fell victim to the MBA thinking of the 90s. Now we usually will have one team go well we are calling the code right and the other saying they are sending it right and both aren’t wrong except it isn’t working so they are. We’ve reached a point where we have contracts with every vendor because the problem usually is actually like a Cloudflare :) but I’d argue it’d be far easier to just fix or create a work around and file a bug with them then spend more time on daily calls working with someone like you and knowing your progress. So I know what you mean by tools companies use. Unless it has hit industry standard we won’t even evaluate open source as we couldn’t blame someone. reply grodriguez100 16 hours agoparent [–] I have now read this comment three times and still don’t know what it is about. reply orliesaurus 11 hours agorootparent [–] I read it twice and I don't want to read it a third now. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Jam is a product targeting non-engineers struggling with filing bug tickets, offering a tool merging video recording with development tools for creating shareable bug reports.",
      "Users can enjoy instant bug replays, automatic reproduction steps, and more to streamline the debugging process.",
      "The product has been active for 2 years, providing a free version with an optional paid tier for extra features, while the team is actively seeking input for enhancements and hiring engineers."
    ],
    "commentSummary": [
      "The ex-Cloudflare team introduced Jam, a web debugger tool enhancing bug reporting for non-engineers, integrating dev tools, video recording, and automatic repro steps for efficiency.",
      "User feedback on Jam's homepage messaging and demands for broader browser support, like in Safari, were solicited, alongside raised concerns about privacy and data security in bug reporting.",
      "Discussions delve into improving bug tracking, security measures, and potential business prospects in the bug replay tool sector, comparing functionalities with tools like Replay.io and distinguishing session replay from detailed debugging tools, emphasizing effective bug reporting for swift issue resolution."
    ],
    "points": 748,
    "commentCount": 183,
    "retryCount": 0,
    "time": 1715346518
  },
  {
    "id": 40317740,
    "title": "Introducing Popover API Baseline 2024: A Developer's Tool",
    "originLink": "https://developer.mozilla.org/en-US/docs/Web/API/Popover_API",
    "originBody": "Popover API Baseline 2024 Newly available The Popover API provides developers with a standard, consistent, flexible mechanism for displaying popover content on top of other page content. Popover content can be controlled either declaratively using HTML attributes, or via JavaScript. Concepts and usage A very common pattern on the web is to show content over the top of other content, drawing the user's attention to specific important information or actions that need to be taken. This content can take several different names — overlays, popups, popovers, dialogs, etc. We will refer to them as popovers through the documentation. Generally speaking, these can be: modal, meaning that while a popover is being shown, the rest of the page is rendered non-interactive until the popover is actioned in some way (for example an important choice is made). non-modal, meaning that the rest of the page can be interacted with while the popover is being shown. Popovers created using the Popover API are always non-modal. If you want to create a modal popover, aelement is the right way to go. There is significant overlap between the two — you might for example want to create a popover that persists, but control it using declarative HTML. You can turn aelement into a popover ( is perfectly valid) if you want to combine popover control with dialog semantics. Typical use cases for the popover API include user-interactive elements like action menus, custom \"toast\" notifications, form element suggestions, content pickers, or teaching UI. You can create popovers in two different ways: Declaratively, via a set of new HTML attributes. A simple popover with a toggle button can be created using the following code: html Toggle the popover Popover content Via a JavaScript API. For example, HTMLElement.togglePopover() can be used to toggle a popover between shown and hidden. There are also new events to react to a popover being toggled, and CSS features to aid in styling popovers. All the new features are listed below. See Using the popover API for a detailed guide to using this API. HTML attributes popover A global attribute that turns an element into a popover element; takes a popover state (\"auto\" or \"manual\") as its value. popovertarget Turns aorelement into a popover control button; takes the ID of the popover element to control as its value. popovertargetaction Specifies the action to be performed (\"hide\", \"show\", or \"toggle\") on the popover element being controlled by a controlor . CSS features ::backdrop The ::backdrop pseudo-element is a full-screen element placed directly behind popover elements, allowing effects to be added to the page content behind the popover(s) if desired (for example blurring it out). :popover-open The :popover-open pseudo-class matches a popover element only when it is in the showing state — it can be used to style popover elements when they are showing. Interfaces ToggleEvent Represents an event notifying the user when a popover element's state toggles between showing and hidden. It is the event object for the beforetoggle and toggle events, which fire on popovers when their state changes. Extensions to other interfaces Instance properties HTMLElement.popover Gets and sets an element's popover state via JavaScript (\"auto\" or \"manual\"), and can be used for feature detection. Reflects the value of the popover global HTML attribute. HTMLButtonElement.popoverTargetElement and HTMLInputElement.popoverTargetElement Gets and sets the popover element being controlled by the control button. The JavaScript equivalent of the popovertarget HTML attribute. HTMLButtonElement.popoverTargetAction and HTMLInputElement.popoverTargetAction Gets and sets the action to be performed (\"hide\", \"show\", or \"toggle\") on the popover element being controlled by the control button. Reflects the value of the popovertargetaction HTML attribute. Instance methods HTMLElement.hidePopover() Hides a popover element by removing it from the top layer and styling it with display: none. HTMLElement.showPopover() Shows a popover element by adding it to the top layer. HTMLElement.togglePopover() Toggles a popover element between the showing and hidden states. Events HTMLElement beforetoggle event Fired just before a popover element's state changes between showing and hidden, or vice versa. HTMLElement toggle event Fired just after a popover element's state changes between showing and hidden, or vice versa. This event already existed to signal state changes onelements, and it seemed logical to extend it for popover elements. Examples See our Popover API examples landing page to access the full collection of MDN popover examples. Specifications Specification HTML Standard # dom-popover Browser compatibility BCD tables only load in the browser See also popover HTML global attribute popovertarget HTML attribute popovertargetaction HTML attribute ::backdrop CSS pseudo-element :popover-open CSS pseudo-class",
    "commentLink": "https://news.ycombinator.com/item?id=40317740",
    "commentBody": "Popover API (developer.mozilla.org)370 points by yonom 22 hours agohidepastfavorite149 comments staminade 20 hours agoI think the Popover API will be really transformative when CSS Anchor Positioning[1] arrives as well. Anchor positioning will let you position elements relative to others on the page. Combined with the Popover API it will let you implement things like custom tooltips and context menus in a declarative way and without any need for libraries like PopperJS [2] [1] https://developer.chrome.com/blog/tether-elements-to-each-ot... [2] https://popper.js.org/docs/v2/ reply unakrav 15 hours agoparentI just shipped a new article all about how to use the CSS anchoring API, which is landing in Chromium next week! https://developer.chrome.com/blog/anchor-positioning-api reply mardifoufs 14 hours agorootparentI love articles with actual running examples, thanks! Now I'm wondering how quickly this will get adopted, it looks very cool! reply swyx 12 hours agorootparentwhats a reasonable expectation for this to get adopted across safari/firefox/edge? 1yr? 3yrs? reply chrishtr 11 hours agorootparentImplementation already begun for Firefox: https://groups.google.com/a/mozilla.org/g/dev-platform/c/4cb... reply hkdobrev 12 hours agorootparentprevThe source link at the top of the article leads to a 404. reply pupppet 19 hours agoparentprevOh the number of hours CSS anchor positioning would’ve saved me over the years. reply threatofrain 20 hours agoparentprevBrowser support. https://caniuse.com/css-anchor-positioning reply ndom91 17 hours agoparentprevThis is the critical missing piece. Tried playing with and ship something with the new popover API last week, but missing positioning support in all browsers is really holding this back from more use-cases. Looks like the last browser (FF) has already shipped anchor positioning in beta, so it won't be long! reply Fatnino 15 hours agorootparentAren't there only 2 browsers? There is Firefox and there are all the Chrome derivatives. reply hoistbypetard 14 hours agorootparentSafari and Mobile Safari are common and are neither Firefox nor Chrome derivatives. Uncommon and neither Firefox nor Chrome Derivatives: Netsurf, Dillo, Ladybird each have their own engines. A few browsers also use a Gecko fork called Goanna. (Pale Moon comes to mind first, but there are at least a couple others that use the same engine.) Then there's Konqueror. It's not common, but can either use old KHTML or WebKit (Safari's engine). reply oidar 12 hours agorootparentAlso: Orion uses Webkit on macs. Development is cruising along. reply hanniabu 19 hours agoparentprevI'm amazed that in 2024 html/css doesn't have a tooltip attribute like there is for title reply jimbobthrowawy 19 hours agorootparentDoes the \"title\" attribute not work? I tried adding one to thecontaining your post and it worked. I assume that's non-standard. reply codelikeawolf 19 hours agorootparentThe title attribute is not accessible, so its use is generally discouraged as an accessible label because screen readers can't pick it up (it's fine to use if you combine it with aria-label). Also, you can only show text in a title attribute, so the Popover API would allow you to add rich content to a tooltip (for better or worse :)) Edit: Remove extra \"if\" reply Zecc 18 hours agorootparentWhy \"can't\" (won't) screen readers pick up the title attribute? reply pickpuck 17 hours agorootparentThey do pick up the \"title\" attribute sometimes and apply it as a label. But it's not really the same as being able to keyboard navigate to the browser-generated tooltip. reply dawnerd 18 hours agorootparentprevNot just screen readers. Basically no support for anyone not using a mouse to navigate. Also really annoying when people put link text in a title on links. reply uses 16 hours agorootparentprev> The title attribute is not accessible That's incorrect. There's nothing inherently inaccessible about the title attribute. Voiceover, for example, reads the content of title attributes. There are a bunch of reasons why title is pretty useless (the main one being it does nothing on every touch screen interface, where the concept of hover doesn't exist). But accessibility is not one of them. reply codelikeawolf 14 hours agorootparent> That's incorrect. There's nothing inherently inaccessible about the title attribute. I think we might be splitting hairs here. There are accessibility concerns with the title attribute. MDN describes why the title attribute is problematic from an accessibility perspective [1] and provides a list of links with additional details. That MDN page also indicates that the title attribute is problematic for: - People using touch-only devices - People navigating with keyboards - People navigating with assistive technology such as screen readers or magnifiers - People experiencing fine motor control impairment - People with cognitive concerns That's a non-trivial amount of web users. So is it technically accessible? Yes. But if you want to deliver an accessible experience to everyone, and the title attribute is going to cause issues, I personally would define that as not being accessible. [1] https://developer.mozilla.org/en-US/docs/Web/HTML/Global_att... Edit: Formatting reply wruza 14 hours agorootparentprevIt exists on ios, through some nonsense: https://dev.webonomic.nl/fixing-the-iphone-css-hover-problem... reply tshaddox 19 hours agorootparentprevIt takes ages to show up when you’re hovering on something. reply jcutrell 20 hours agoparentprevHow is anchor different from relative? reply staminade 20 hours agorootparentThe article I linked goes into the details, but basically a relative approach constrains your markup: The positioned thing must be a child of the relatively positioned anchor or a wrapper element, and you often cannot sensibly position it without using JS to check the location of the anchor. E.g. a popover menu for a button must check if the button is close to an edge of the viewport and position the menu element appropriately. Anchor positioning will do this automatically. Also, if support for multiple anchors is included, then it opens up some very interesting capabilities to do things like draw arbitrary diagram connectors between elements: https://kizu.dev/anchor-positioning-experiments/ reply karaterobot 11 hours agorootparentI've been eagerly awaiting anchor positioning, but using it for diagram connectors had not occurred to me yet! That would solve so many problems that I currently have (or plan) to use D3 for. reply CuriouslyC 20 hours agorootparentprevThey explain in the first couple paragraphs of the first link provided. reply paavohtl 20 hours agorootparentprevposition: relative adds a fixed offset to the position the element would have been placed in normally, but position: anchor can be used to place an element near any arbitrary element, regardless of its place in the DOM hierarchy. reply eknkc 21 hours agoprevThere is also(https://developer.mozilla.org/en-US/docs/Web/HTML/Element/di...) if you want modal dialogs. reply myfonj 20 hours agoparentAnd alsoif you need expanding/collapsing content, or, with a slight abuse, a \"dropdown\". Strange that unlikeand , `` apparently lacks the the ability to be made declaratively `open` using the attribute. This feels like omission to me. I hope there is some based reasoning behind this decision. https://developer.mozilla.org/en-US/docs/Web/HTML/Element/de... reply mst 19 hours agorootparentMaybe because 'dialog' says \"don't do that\" but everybody did anyway? (also possibly because the \"insert into top layer\" is sufficiently odd a thing to trigger that the designers felt representing it as an attribute was a worse idea than for dialog) ... though I'd really like some sort of explanation as to how to choose between \"non-modal \" and popover because the one thing I am very confident of here is that I don't know enough to answer that question myself. reply threatofrain 21 hours agoparentprevI'd warn that there's a fair bit of work you have to do to get animations and typical modal behavior working up to the level of modern day expectations. It's completely surmountable but also quite non-trivial. reply clementmas 20 hours agoparentprevAs someone pointed out, it's indeed harder to animate but it's fully accessible, supports escape key to close, has a built-in backdrop and has built-in focus trap. Safari took a while to support it but now it's available everywhere. I think it's better than using atag. reply tomsmeding 19 hours agorootparentApparently it's unsupported in the Firefox ESR version in Ubuntu 20.04, which still receives support from Canonical until 2025. I found that out because someone reported that my site didn't work. reply layer8 21 hours agoparentprevAs mentioned in the first few paragraphs of TFA. reply jacobgorm 21 hours agoprevI absolutely see the need for this if implemented in concert with the host OS windowing system, because current popovers must be emulated in a way that does not always work well. For example, a browser-nativetoday will be able to expand beyond the borders of the hosting browser window, so you can don't have to worry about it getting clipped to the window borders, but a fancy emulated select from toolkit like Quasar will not, ,which limits its placement options. So to do this right on win32 you would need each popover to have its own native HWND and on Cocoa/macOS you would need it in its own NSView. Does anybody in here know if this is how it is actually implemented in the current browsers, or is it just a paint-over job inside the browser window? reply oefrha 21 hours agoparentThese popovers are just regular DOM nodes styled with regular CSS. Giving websites a vector to paint outside the designated viewport (except in extremely limited circumstances like alert(), confirm(), [title], , etc.) makes it a lot easier for them to convincingly emulate browser and OS dialogs. It's a massive security risk, I don't think it's worth the limited upside. Concrete example: a page emulating your password manager extension's unlock widget. Edit: Note that this is not a theoretical concern. Scammers over the years have created extremely convincing fake UI elements, including fake popup windows complete with the browser chrome. They're even draggable. Not being to paint past the viewport boundary is one of very few, if not the only limitation they couldn't get around. reply threatofrain 20 hours agorootparentLet's say there's a native app that can also do pop ups. What's to stop the native app from basically stealing the likeness of your password manager? In other words, as web apps seek to become like native apps, they may also accrue the risks which are characteristic of that space. reply oefrha 20 hours agorootparentNative apps have to be installed. You don't want to give every power they have to random websites (say, that phishing domain at the top of a Google SERP), not for a very good reason. \"My custom dropdown can't draw past the boundary of the viewport\" isn't a very good reason. reply staminade 20 hours agorootparentGiving this capability to arbitrary web apps is definitely a bad idea, but conceivably it could be made available to installed PWAs in the same way things like the Window Controls API are: https://developer.mozilla.org/en-US/docs/Web/API/Window_Cont... reply wruza 14 hours agorootparentPWAs can contain dynamic ads elements, which will try to abuse that. If it was normal for desktop apps to run some remote view+script sandboxes, this problem would extend there too. On one hand, PWAs are apps, on the other, they enable the spirit of downloadable web content much more easily. reply betagammaxyz 18 hours agorootparentprevThere's not much to stop what you describe, other than the trust you place in a native app when you install it. Super common experience to have to give superuser access once during an installation process, and most bets are off regarding security once you do that. That's part of the added friction involved in running a native app; you have to trust it more. Only other alternative I can think of would be an Apple App Store-style review process where the task of proving trustworthiness gets shifted onto the developer rather than the user. But it's still based around human trust rather than a platform constraint. reply threatofrain 10 hours agorootparentI see two parts to this. One is the role of user choice in deterring system damage from bad apps, and the other is the role of app stores in shielding the user from having to make this choice to begin with. On the matter of websites, if the decision rests on individual choice, then individuals certainly have a choice to visit (and thus trust) a particular domain name and cert. That users need merely type in a name, and that there's a giant company helping you search for these apps, simply means that web apps are easy to find and install (and native apps are only slightly harder to install). Then there's the role of the app stores, which I imagine practically deals with the supermajority of garbage, spams and scams out there. We could also have orgs whose sole job is to maintain lists of credibility, if that's what people want. Then a web user could download a browser extension or use a browser that subscribed to these lists by default. In some ways that's what ad blockers are, except ad blockers are even more precise and there's nothing quite like it in the native world. reply kmeisthax 15 hours agorootparentprevNothing at all. Related note: this is also why iPad and Android tablet apps don't have real popovers or floating toolbars either. Mobile treats the window boundary as sacred. reply paulddraper 16 hours agorootparentprevThe assumption is that webpages are safe to browse. Installable programs grant a degree of trust over your system. If webpages are unsafe, or have native capabilities, the World Wide Web becomes less useful, as the act of clicking a link is heavy thing. reply rafram 16 hours agoparentprevFirefox, for one, technically supports \"popping out\" part of a page's content into a separate OS-level window. It exposes that functionality through the XULandelements, which are only available to privileged [X]HTML being rendered in the browser's main process. I doubt that any browser developer would want to give ordinary web pages the ability to create borderless OS windows. reply Silphendio 21 hours agoparentprevHow useful is such a feature in reality? On smaller devices, the web brower almost always covers the whole screen, and even on big monitors, it usually touches at least one corner. reply layer8 21 hours agoparentprevI don’t see web apps getting the native windowing system integration you envision anytime soon. The fact that some standard controls behave that way is an OS-specific implementation side effect of them being implemented as OS-native, which they aren’t required to be. reply tootie 20 hours agoparentprevIt will also make it semantically easier to detect. I'm thinking about accessibility and crawlability but also in case anyone wants to write some \"no popup\" plugin. reply sseagull 21 hours agoprevKinda funny that browsers have built-in pop-up blockers, but then create APIs like this. Yes I know the difference, but still. I’m old enough to remember the pop-up and pop-under wars of the late 90s and early 2000s. I guess we won that particular battle, but the war for our attention is far from over. reply bestest 21 hours agoparentI think you're comparing apples with grapples. A popover is floating element that appears to display a contextual piece of information when required. What you're mentioning is something completely different. reply alt227 20 hours agorootparent> What you're mentioning is something completely different. I think that is because the term 'Pop-up' has changed. It used to mean the opening of a new browser window, typically smaller than the host window and floating somewhere on top. Now it means a modal form within the same window and dom. reply The_Colonel 18 hours agorootparentI don't think this is often called \"pop-up\", mostly I see either popover or tooltip. reply sseagull 17 hours agorootparentMaybe by developers. But the public certainly calls them pop-ups https://www.google.com/search?hl=en&q=%22newsletter%20pop%2D... reply mst 20 hours agorootparentprevI tend to use \"apples to aardvarks\" but now I'm not sure whether I like mine or yours better. Shall have to alternate them for a bit and call it A/G testing. reply nerdponx 20 hours agorootparentprevAnd surely this new API will not be abused. Right? reply lolinder 20 hours agorootparentAt this point in the web's development the better question is: will this allow our abusers to do things that weren't possible before or in ways that are less blockable than before? I think the answer is pretty clearly no to both questions, but it will allow us to simplify a lot of our code that was designed to make actually-useful popovers. reply jwells89 18 hours agorootparentprevIt might be, but at least the offending site can be taken care of by closing a single tab. The part that sucked about old style popups is that they leaked into and on occasion would hijack (in the case of popup chains) your OS’ windowing system and at best make a mess of things or at worst turn your computer unusable. reply notatoad 15 hours agorootparentprevit doesn't allow developers to do anything they can't already do. it does make those elements easier for adblockers to remove though, by implementing the functionality in a standard way that constrains all the related logic into one easily removable element. reply hhreefgguu 19 hours agorootparentprevIt seems like the only context in which it could be abused would be if you have JS disabled but this still works? (Because of course you can do this with JS). As CSS becomes more powerful it seems like being able to disable these powerful features, while still retaining the “document styling” features, will be important. reply jjice 21 hours agoparentprevI get the gist of what you're saying, but I don't think they're really comparable. Popups spam your OS with trash that impairs your ability to use your machine (at worst). Popover dialogs can be shut down by closing your tab and nothing more. We've also had these style of popovers for a while now because they're generally a really handy way of presenting info. Yeah, they can be used in annoying ways, but there are lots of genuine usecases, like a modal. reply gwd 19 hours agoparentprevI'm seeing a lot of this kind of comment, but it's a bit non-sensical. You can implement pop-overs currently using existing 's and such; e.g.: https://getbootstrap.com/docs/5.3/components/popovers/ All this means is that you can implement popovers without having to include a magic extra library. All blocking an explicit \"popover\" element would do is cause people to stick with custom libraries. reply ysavir 19 hours agorootparentI generally agree with you, but one factor is the ability to filter out scripts using browser plugins. For example, if a page has 3rd-party scripts that trigger obnoxious modals, I can use NoScript to prevent those scripts from executing. If it doesn't require scripts to open the modals, would it shift the burden to adblockers, and start another competition in which the site and the adblocker are trying to get around the other? I'm strongly in favor of the popover API existing, but it'll be interesting to see how it shifts handling page behaviors. reply The_Colonel 18 hours agorootparentObnoxious modals with ads would still download the content dynamically with JS so the NoScript would still do the job. reply cjpearson 18 hours agorootparentprevI still don't think there's any significant difference. You can create popover elements without JavaScript, but you can also create divs with a high z-index without JavaScript. You can toggle popover visibility via CSS or click without JavaScript, but you can also do that with divs and a checkbox. reply 1231232131231 21 hours agoparentprevThis is not a pop-up. People hate popups because they're intrusive and have their own window. This API replaces div modals and saves time and code for developers. reply maccard 20 hours agorootparentNo, people hate pop ups because they steal focus and draw attention away from the content they’re interested in. Whether it’s a pop up or a popover, a prompt asking me to sign up to your newsletter is not something I want. reply coldpie 16 hours agorootparentIf you haven't already, go enable the Annoyances and Cookie banner filter lists in your uBlock Origin installation. It doesn't get all of them, of course, but it does get a lot. For the remainder, the Kill Sticky bookmark is pretty good about knocking them out: https://www.smokingonabike.com/2024/01/20/take-back-your-web... reply Zak 19 hours agorootparentprevBoth things are true. Popups are more disruptive because they remain even after the page that spawned them is closed and often obscure their origin. reply marginalia_nu 20 hours agorootparentprevThey're basically the same. Browsers started blocking popups because they were almost always misused. Pop-overs took their place because they're somewhat less trivially blockable. reply The_Colonel 18 hours agorootparentThe big difference is that there are very few valid use cases for popups, but many useful ones for popovers. reply marginalia_nu 17 hours agorootparentKeep in mind this was a time when virtually all state was kept serverside. Basically anything you could do with a popover you could do with a popup, and there were definitely benign uses of them. reply TrueDuality 20 hours agorootparentprevWhich people still hate because its mostly marketing trash that gets in the way of whatever they were trying to do on the underlying page. reply gyomu 17 hours agoparentprevThe original pop-up implementation (which pop-up blockers aim to prevent) breaks the application content/OS boundary, this does not. You don’t want that boundary to be broken, because that makes for less usable and less safe systems. reply darby_eight 20 hours agoparentprevIt also helps that we now just have spam covering content and slowing our computer down inside the window. Hell, many publications will even get you to pay for the privilege. reply efilife 20 hours agoparentprevI've seen exactly this comment somewhere on HN already. What's going on? reply jffry 20 hours agorootparentPerhaps they typed it into the wrong tab, deleted it and reposted it here? Doesn't seem to be a re-peat according to https://hn.algolia.com/?dateRange=all&page=0&prefix=true&que... reply sseagull 20 hours agorootparentprevDeja vu? I did start to type this as a response elsewhere, but never submitted it. And there’s nothing in my comment history. So my theory is “great minds think alike” :) reply Alifatisk 18 hours agoprevDemo https://mdn.github.io/dom-examples/popover-api reply wruza 14 hours agoparentAnd in the nested popovers demo you can't go diagonally from Pizza to Ham, cause nobody in chrome or firefox bothered to implement a delay before a submenu disappears. Decades of UX research lost, almost as expected. https://mdn.github.io/dom-examples/popover-api/nested-popove... reply nikkwong 7 hours agoparentprevDoesn’t seem to work on safari on iOS although it purportedly should according to the browser support table. reply H1Supreme 20 hours agoprev> Popovers created using the Popover API are always non-modal. If you want to create a modal popover, aelement is the right way to go. Why? This is a legitimate use case for a popover. Especially if you're blurring the background while it's open. Why even offer that feature if a user's click can potentially trigger an action on some blurred out button. *edit: Apparently, you can combine the two: > You can turn aelement into a popover ( is perfectly valid) if you want to combine popover control with dialog semantics. Wouldn'tmake more sense here? They're clearly acknowledging a use case. reply eyelidlessness 19 hours agoparentProbably, among other things, becauseexisted much earlier. reply niek_pas 21 hours agoprevThis sounds cool, but why does this page not have any images showing what a 'popover' is? reply charlesabarnes 21 hours agoparentIt has a link to examples that can be found here https://mdn.github.io/dom-examples/popover-api/ reply simonw 21 hours agoparentprevThat would be useful. They do link to these interactive examples - looks like the default styles for popovers are not very exciting: https://mdn.github.io/dom-examples/popover-api/ reply 1231232131231 20 hours agorootparentDefault styles only make things harder to customize. If we didn't have so many useless/ugly default styles, we wouldn't need reset.css/normalize.css reply slmjkdbtl 21 hours agorootparentprevHow would you prefer it? I think the default styles (on chrome) are just enough, looks consistent with the rest of the default HTML styles. reply mdev23 21 hours agoprevwhat a time to be alive reply kitallis 15 hours agoprevThis is great. Here's a custom implementation with Stimulus using Popper – https://github.com/tramlinehq/tramline/blob/main/app/javascr... And here's one for– https://github.com/tramlinehq/tramline/blob/main/app/javascr... reply silverwind 20 hours agoprevI wonder why there is no corresponding `role=\"popover\"` HTML attribute yet. reply megaman821 20 hours agoparentThe docs warn that there is no role associated with the popover attribute because it could be a menu, tooltip, etc., and you should put the correct role on it. Accessibility-wise it does take care of the item with the popovertarget, so you don't have to put aria-controls and aria-expanded. reply suyash 18 hours agoprevI quite like these two examples: 1. Pop up menu like those on Windows/Ubuntu : https://mdn.github.io/dom-examples/popover-api/nested-popove... 2. Android style toast notifications: https://mdn.github.io/dom-examples/popover-api/toast-popover... reply ativzzz 19 hours agoprevWas this worth developing? We already have infinite popover js/css libraries so this doesn't solve any unsolved problem. I suspect this will be like select, where you almost always want some functionality or styling that can't be done natively so you reach for a custom solution or use some existing library. Maybe if I start a new app this is OK as a stopgap until I need more functionality (which always happens), but in my existing app I'm just using the already existing popover library for consistency reply dmix 18 hours agoparentEvery single app having to import the same popper library, for over a decade, indicates there's sufficient need for native support. I've also been a proponent of a combobox becoming native (for ex: a select box of Countries where you can filter by typing) https://www.w3.org/WAI/ARIA/apg/patterns/combobox/#:~:text=C.... and ideally multi-select for ex a tag selector. reply cynicalsecurity 15 hours agorootparentThat's the point. Why make the life easier for websites that display pop-ups. Pop-ups are pure evil. reply filleduchaos 14 hours agorootparentWhat does that have to do with popovers, though? reply woodrowbarlow 18 hours agoparentprevfor anyone who views third-party dependencies as a liability (license changes, leftpad drama, etc.), the ability to easily ditch them in favor of native implementations is a win. reply The_Colonel 18 hours agoparentprevYeah, just like e. g. flexbox doesn't solve any unsolved problems, you can do any layout with JavaScript. The problem with dropdown is that it has an immense variety of use cases which is difficult to generify. Still, I'm happy we have a basic native Select element, it's competely fine for 8/10 use cases, and okish for 1/10. OTOH, I believe that a popover is a much more generic feature and most you'd like to customize is styling. reply delichon 20 hours agoprevThese are popovers: https://kagi.com/proxy/passover-popovers-6.jpg?c=gBnCtLe1QYl... No you can't have that word to mean something else, it's sacred. And because you tried you can't have any of my popovers either. reply nojs 19 hours agoparentThat is quite a curious URL. The querystring is identifying the file, but it looks as if it’s hosted at https://kagi.com/proxy/passover-popovers-6.jpg reply flak48 19 hours agoparentprevCliff House at Land's End in San Francisco had legendary popovers - too bad they closed down reply aitchnyu 19 hours agoparentprevI once asked a question about popovers, one guy replied he googled what they were and got hungry. reply tommoor 19 hours agoparentprevThey're Yorkshire Puddings ;) reply logrot 20 hours agoparentprevNever heard of them. Any good? Something you make yourself or by ready? Eaten hot or cold? reply delichon 20 hours agorootparentThey are quite delicious. Home made, eaten hot, with butter in our home. It's a Jewish Passover tradition that I find to be odd, because it is supposed to be part of an ascetic ritual in which we forego \"leavened\" bread and so instead eat matzo and popovers. But instead of being any kind of sacrifice it is a great treat, especially in a household that doesn't otherwise serve fresh baked bread. It's like telling a kid they've been naughty so they can't have the old cookies, they have to eat fresh baked cookies instead. reply mquirion 20 hours agoparentprevGlad I'm not entirely alone in having this thought. reply mst 20 hours agoparentprev[ponders offering to swap for half his sandwich] [realises he made himself a bacon and sausage sandwich] ... never mind. [googles in shame] ... ooooh, it's a cousin of a Yorkshire Pudding, I knew it looked tasty! reply TrueDuality 20 hours agoprevI suspect this isn't going to get major usage. Making it a dedicated API makes these things easier to target by extensions and thus easier to block. There are legitimate usages but almost all of the ones I encounter are marketing call to actions and invasive support chat boxes which are both almost universally hated and would the target of those blocking action. reply megaman821 19 hours agoparentYou don't think sites will use tooltips and dropdown menus. You are probably confusing these for popups which open new browser windows, popover happen within the webpage when a piece of UI needs to be drawn over existing content. reply codelikeawolf 19 hours agoparentprevWhen I first read about this API a while back, I thought the same thing. But it's perfect for adding complex controls on top of inputs when you have limited real estate (e.g. clicking on an input with a font name and showing a font picker popover with a preview of the font). This is obviously possible today without this API, but I like that they added something semantic. I regularly have to wade through the ARIA docs to figure out which role/aria- attributes to use. reply seltzered_ 20 hours agoparentprevWhat about selecting an image to view? reply Thorrez 20 hours agoparentprevWhat about cookie consents? reply lolinder 20 hours agorootparentAlso universally hated and widely blocked. reply TrueDuality 17 hours agorootparentprevVery much a anti-pattern. The entire concept of these is malicious compliance against the GDPR and not something that the GDPR requires. reply wizzwizz4 13 hours agorootparentThe ePrivacy directive does require them, though. (Of course, not in the malicious-compliance form we see today.) reply ikesau 20 hours agoprevin terms of accessibility, i imagine a universal standard for modal state management will be an improvement over the bespoke approach - closing when the user presses escape, focus handling, etc. but i really wish popover=hint made it into the spec. would have been nice to get a native alternative to tippy.js reply b1tr0tt 12 hours agoparentStandards work is progressing on this, hopefully this year. reply jrockway 16 hours agoprevIt's a shame that browser developers have to implement enough of this API to entice people to use it, only for users to install extensions that simply disable it ;) reply globalise83 20 hours agoprevAnother extremely useful feature that won’t work for our Safari users with any older than 1 year old iPhones and means for the next five years we have to support both this API and a full-blown polyfill or alternative implementation. reply JimDabell 19 hours agoparentAll iPhones going all the way back to 2018 can upgrade to iOS 17 right now. 66% of all active iPhones are already on iOS 17, 23% are on iOS 16, and only 11% use anything older. People upgrade iOS fairly quickly and it’s uncommon to support anything more than the two most recent major versions. So it’s more like one year, not five. https://developer.apple.com/support/app-store/ reply afavour 20 hours agoparentprevTwo year old iPhones are absolutely able to upgrade to iOS 17 and receive this feature, all the way back to iPhone 8. That said, I do wish Apple had their browser set up like Google does with a complete upgrade possible via the App Store. It feels unnecessary to completely tie it to the OS version. reply pmontra 20 hours agorootparentI don't know how iOS works but if it was an app would other browsers be able to use Safari's rendering engine? There is also the lower functionality JS engine that Apple forces those browsers to use (if I'm not mistaken.) reply afavour 19 hours agorootparentThe way it works on Android is that the system web view is an \"app\" (though not one you can launch) that updates via the Play Store. Any app using webviews automatically gets the upgraded experience whenever that app gets upgraded. reply jimbobthrowawy 19 hours agorootparent> though not one you can launch Try the app \"Activity launcher\" on your phone some time. Lets you open any Activity (android class that apps are composed of) on your device. reply monsieurbanana 16 hours agorootparentprevIs it recommended to update iOS with old phones? Not recommended by Apple, actually recommended as in it won't slow your phone to a crawl. reply robertoandred 17 hours agoparentprevIgnorance, or just anti-Apple lies? This is pure misinformation and hurts web development. reply seltzered_ 20 hours agoprevThe popover API feature turned out to be super useful when writing a userscript for extracting data from a website recently. Allowed a nice way to float a list with content for users to copy. reply shaan7 18 hours agoprevOk something is really wrong with my brain. I read this as \"Poopover API\", and it keeps on happening throughout the comments -.- reply nick__m 17 hours agoparentyou are not alone! reply bityard 20 hours agoprevAs someone who does some (but not a lot of) web development, I guess the only thing I care about is: can I turn this off with uBlock Origin? reply KMnO4 20 hours agoparentThat’s like asking if you can turn off s. Not sure why you’d want to. It’s a perfectly reasonable component that doesn’t need to be abused for ads. reply clementmas 20 hours agoparentprevI usea lot when building websites. I don't run any ads nor promotional content so if that element was blocked it would break lots of features. reply limbero 20 hours agoparentprevSeems like you could, since it has an attribute and a pseudo class to select on. document.querySelectorAll(\"[popover]:popover-open\") should select all visible popovers. AFAIK uBlock uses regular CSS selectors. reply tootie 20 hours agoparentprevNope. Not if the pop-up is first party. reply anamexis 20 hours agorootparentYes you can - uBlock Origin lets you apply CSS rules, and popovers can easily be hidden with the [popover] selector. reply Waterluvian 21 hours agoprevVery cool. So if I understand correctly, this doesn’t really introduce any new capability, it just streamlines the need to have a modal div, mask div, container div, and some uncomfortable positioning CSS? It also adds some pseudo classes to simplify styling. I like it. reply _heimdall 21 hours agoparentIt also allows for the basic functionality without JS (and without overloading a hidden checkbox). I'm not sure how far that will get you so maybe JS will be needed for a styled and animated popover, but no-JS support with focus handled properly is nice. I want to say there was also accessibility support built in but now I don't see it in the spec. If it handles announcing the elements to accessibility tools like a screen reader that'll really help too, its pretty easy to forget to do it manually. reply devmor 21 hours agoparentprevThe API it introduces also allows the control of popover elements’ visible state in the DOM without any javascript. That is definitely useful. reply burnished 17 hours agoprevGod damn I love their docs reply paulddraper 16 hours agoprevAh, prompt()/alert() reply ulrischa 17 hours agoprevAlready here submitted: https://news.ycombinator.com/item?id=40043029 reply felsokning 21 hours agoprev> The Popover API provides developers with a standard, consistent, flexible mechanism for displaying popover content on top of other page content. Paywall 2.0? reply p_l 21 hours agoparentI've used it to implement windows for drilling deeper into rarely used settings in a web-based HMI. It makes for very simple design compared to using JavaScript, and provides easy layering in DOM for it (including if you want to just delete the popover :D) reply cqqxo4zV46cp 21 hours agoparentprevThe lack of this API wasn’t stopping anyone from implementing a paywall. reply felsokning 21 hours agorootparent> The lack of this API wasn’t stopping anyone from implementing a paywall. Obviously -- that's inferred by the 2.0. reply algasami 20 hours agoprevThe pessimist inside me worries about whether this could be used to lure people into revealing their credentials; granted, there are thousands of ways to do this easily, but I'm still cautiously optimistic on this topic. reply codelikeawolf 19 hours agoparentSo I think this API would just allow a bad actor to get your credentials in a way that adheres to accessibility guidelines. It doesn't enable them to do anything they couldn't do before programmatically. reply cjaybo 20 hours agoparentprevSaw an interesting case of this type of attack in the CounterStrike community earlier this week. Someone setup a fake tournament website that asked the user to login with their Steam account. Then it launched what looked like a new browser window with the Steam login page, but was actually just a popover that had been elaborately styled, with window decorations and all. reply c-smile 17 hours agoprev [–] This seems to be modelled after Sciter's popups that existed 10 or so years. anchorElement.popup(elementToPopup, options) - https://docs.sciter.com/docs/DOM/Element/#popup In Sciter popup element is always associated with its anchor element and appears relative to it. CSS was expanded to support popups: :popup state flag/selector is \"on\" the popup element and :owns-popup is \"on\" on popup anchor element when the popup is shown. Also several CSS properties: popup-position, popup-anchor-reference-point, popup-reference-point, popup-animation. Sciter has built-in JSX and so element.popup() accepts JSX that creates popup DOM element on demand, for example this button.onclick = function() { button.popup( A B C ) } will popup selectable list as dropdown popup. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The Popover API Baseline 2024 is a new tool allowing developers to generate popover content on web pages, commonly used for action menus, notifications, and form suggestions.",
      "Popovers can be created using HTML attributes or JavaScript, always remaining non-modal, with options for declarative or programmatic creation, along with new styling features.",
      "Developers can utilize various HTML attributes and interfaces to manage popover elements, including methods for displaying, concealing, and toggling popovers, triggering events when popover status changes."
    ],
    "commentSummary": [
      "The Popover API offers a new method in web design for creating custom tooltips and context menus without relying on external libraries like CSS Anchor Positioning.",
      "Debates are ongoing concerning the accessibility of the title attribute, anchor versus relative positioning in CSS, security implications, and the overall impact on web functionality and user experience.",
      "Despite pending browser support, discussions include implementing popovers in browsers, security concerns with Progressive Web Apps, technical capabilities of Firefox, user preferences for pop-ups versus popovers, and feedback on the Popover API integration."
    ],
    "points": 370,
    "commentCount": 149,
    "retryCount": 0,
    "time": 1715341272
  },
  {
    "id": 40318714,
    "title": "Superfile: Terminal File Manager Guide & Installation",
    "originLink": "https://github.com/MHNightCat/superfile",
    "originBody": "Demo Perform common operations Content Installation Homebrew Install pre-built binaries NixOs Font Build Supported Systems Tutorial Plugins Themes Use an existing theme Create your own theme Hotkeys Contributing Thanks Support Contributors Star History Installation Requirements Any Nerd Font Homebrew Install homebrew and execute the following commands brew install superfile Install pre-built binaries Just copy and paste this one-line command: bash -c \"$(curl -sLo- https://raw.githubusercontent.com/MHNightCat/superfile/main/install.sh)\" Or wget: bash -c \"$(wget -qO- https://raw.githubusercontent.com/MHNightCat/superfile/main/install.sh)\" NixOS Click to expand Font Warning This is a reminder that you must use a Nerd font Once the font is installed if superfile isn't working make sure to update your terminal preferences to use the font. Build You can build the source code yourself by using these steps: Requirements golang Build Steps Clone this repo using the following command: git clone https://github.com/MHNightCat/superfile.git Enter the downloaded directory: cd superfile Run the build.sh file: ./build.sh Add the binary file to your $PATH, e.g. in /usr/local/bin: mv ./bin/spf /usr/local/bin Supported Systems Linux MacOS Windows Tutorial After you install superfile, you can go here to briefly understand how to use superfile! Plugins Click me to the plugins wiki Themes Use an existing theme You can go to theme list to find one you like! We only have a few themes at the moment, but we will be making more over time! You can also submit a pull request for your own theme! copy theme_name in: Theme name: theme_name Edit config.toml using your preferred editor: $EDITOR ~/.config/superfile/config.toml and change: theme = \"gruvbox\" to: theme = \"theme-name\" Create your own theme If you want to customize your own theme, you can go to ~/.config/superfile/theme/YOUR_THEME_NAME.toml and copy the existing theme's json to your own theme file Don't forget to change the theme variable in config.toml to your theme name. If you are satisfied with your theme, you might as well put it into the default theme list! Hotkeys Click me to see the hotkey list You can change all hotkeys in ~/.config/superfile/hotkeys.toml \"Normal mode\" is the default browsing mode Global hotkeys cannot conflict with other hotkeys (The only exception is the special hotkey). The hotkey ranges are found in hotkeys.toml Contributing If you want to contribute please follow the contribution guide Thanks Support a Star on my Github repos would be nice 🌟 You can buy a coffee for me 💖 Contributors Thanks to all the contributors for making this project even greater! Star History THANKS FOR All OF YOUR STARS! Your stars are my motivation to keep updating!",
    "commentLink": "https://news.ycombinator.com/item?id=40318714",
    "commentBody": "Superfile – A fancy, pretty terminal file manager (github.com/mhnightcat)339 points by oidar 20 hours agohidepastfavorite171 comments anigbrowl 14 hours agobrew install superfile (ok) superfile (not found) find superfile (not sound) cd /usr/local/Cellar/superfile/1.1.2/bin ls spf This is mentioned in the tutorial but it's probably worth mentioning in the install section to save people 5-10 minutes of confusion. Once I found the filename I loved it. reply medstrom 1 hour agoparentOr even provide superfile as an alias which prints a message saying \"you can also call it as spf\", once a day. People don't read install sections. reply terminaltrove 17 hours agoprevsuperfile looks great, we have this listed on the trove (1) for other package managers, we love what's been done recently in the terminal / tui space. I encourage also supporting the author as well on their ko-fi page for a new laptop. (2) 1. https://terminaltrove.com/superfile/ 2. https://ko-fi.com/night_cat reply pandemic_region 1 hour agoparentThanks for the terminal trove tip ! Subscribed. I feel the market is ripe for a terminal ide again. Anything interesting going in in that space? reply night_cat 14 hours agoparentprevThanks you so much,I really like terminal trove! reply shdisi 11 hours agoprevI tried this out and within a few minutes had delete a few directories. Luckily I was in a git repo but I still immediately uninstalled this reply kwhitefoot 18 hours agoprev\"You can go to the latest release and download the binary file. Once it is downloaded please excrate the file after that enter the following in your terminal:\" Is excrate some new jargon meaning to take something out of a crate? Or just a boring typo for extract? reply nine_k 17 hours agoparentIt's a perfectly cromulent word. Let's use it more widely, and it will become a real word, like \"quiz\" or \"blog\" have become. reply wegwerff 1 hour agoparentprevTypo for \"execrate\" meaning \"invoke a curse on\". If you find the right spell to cast in your terminal, it will reveal its contents to you. reply night_cat 17 hours agoparentprevJust typo.. reply NikkiA 11 hours agoparentprevOr a typo for extricate reply schindlabua 18 hours agoprevLove all the terminal tooling that's come out in recent years. I'm this close to chrome and rofi being the only gui I'm using on my work machine. This looks great! reply hxegon 12 hours agoparentA lot of the new tooling is in Go, superfile included. Noticed this after I started using LazyGit (incredible tool btw, I can't go back to anything else even after being a die hard Magit user for years) There's some stellar libraries in Go for terminal stuff, in particular anything from charmcli. They have an elm style TUI framework called bubbletea (which superfile uses), a styling library, prebuilt components, it's really incredible. I'm building a multiplayer tetris you can play through ssh, which is using bubbletea and another lib of theirs called wish. they have a lot of stuff you can just use in regular shell stuff too: https://charm.sh reply leetrout 10 hours agorootparentThey are VC backed now which makes me wonder if they will do a license switch later or something else to monetize... https://news.ycombinator.com/item?id=38126060 reply medstrom 1 hour agorootparentI don't know about Charm so maybe someone can check their Github, but there's a dark pattern where you market yourself as open source but not all your components are actually released to the public, so you have a nice GitHub icon on your front page that just leads to silly minor extensions but not the main software. ObsidianMD does it. reply jjuel 15 hours agoparentprevIsn't the terminal program technically a GUI? reply ghodith 15 hours agorootparentTechnically a TUI? reply Hasnep 6 hours agorootparentI think GP was referring to the terminal emulator, which normally has the minimal GUI decorations depending on the terminal emulator and your desktop environment. reply ThrowawayTestr 17 hours agoparentprevnext [56 more] [flagged] doix 16 hours agorootparentBecause terminal programs have limitations that limit the amount of annoying things programs can do. The color scheme matches the color scheme I set. They cannot change the font size nor the the font. They cannot spawn windows that will steal focus. They can run inside tmux which has advantages for my workflow. Hotkeys are a first class citizen and not an afterthought when it comes to terminal uis. That being said, I don't hate GUIs. I just hate a lot of them for doing things that annoy me. reply atomicnumber3 13 hours agorootparentIt's also usually inherently composable, since you can pipe and redirect and everything speaks a common language (plaintext, for better and worse). If you just naively implement a cli tool, you usually end up with something that can reasonably be chained or redirect into/out of or combined with xargs etc. It's like if every single GUI program included easy recording of macros and had built-in tools for munging of data to input fields and from text information. There is a really solid place for GUI tools though and that's where the task is inherently visual (nontrivial tabular data, anything with images or video, etc) or where discovering your features and guiding people through a workflow is more important than it playing a part in a text processing pipeline. Honestly, file managers are probably a good example of something that really ought to be a GUI and I've always considered it a bit zealous of people to want a TUI for it. Just look at this thread alone - people accidentally deleting files because navigation and actions are so undiscoverable that if you don't just blindly copy vim, even highly technical people will have no idea how to use your tool. reply doix 5 hours agorootparentCLI's are composable, TUI's usually aren't. They are just a GUI in a terminal with extra restrictions. I do prefer CLI's for most things over a TUI. > Just look at this thread alone - people accidentally deleting files because navigation and actions are so undiscoverable that if you don't just blindly copy vim, even highly technical people will have no idea how to use your tool. But is that even a problem? If you are going to use a tool for years, does it matter that in the first few hours it's not super discoverable? reply unshavedyak 15 hours agorootparentprevI do wish though that terms had multiple font sizes (with some limitations to make it \"work\"), to allow larger text but smaller gutters, etc. Aside from the general inefficient use of space, i adore terms. I do wish and hope more apps become like Zellij, though. With possible keybinds on the bottom, etc. I tend to avoid TUIs because i can't be arsed to remember the keybinds and prefer to just use CLIs since those are in my history. reply skydhash 15 hours agorootparentI think emacs have multiple font sizes/weights/families support (called font faces) and that's a reason people love it. The thing I like about term is that you're not confined to a single computer. You only need SSH to replicate your workflow anywhere (and a VPN, maybe). TUIs work better when you're committed to the workflow. Discoverability is not often one of the key features (although most seem to have great help pages and manuals). You chose one, take the time to learn it, configure it the way you want and it's better (not prettier) than most mouse based workflows. reply opan 9 hours agorootparentEmacs is one of the best GUI programs because they add functionality on top of the terminal version, like image support, different font sizes at once, and the window separators not being part of the text so highlighting text quickly is easier, but it keeps the first-class keyboard support it's always had. I think the average GUI was designed for mouse-first and the lowest common denominator, so it'll generally never be as good. It's similar to how irssi and weechat are top-tier chat programs, but nothing in the XMPP or Matrix world really seems as good. reply rscrawfo 8 hours agorootparentprevCheck out helix for a good example of this too. Not quite as visible, but entering certain modes gives you a list of available shortcuts you can use from there. Space for example opens a list with ten or twenty commands that remind you how to open the file picker, open editor list, problems window, etc… reply friend_and_foe 13 hours agorootparentprevNot just that, there's also that you can run them via SSH, there aren't a zillion top heavy GUI frameworks, interaction is significantly less cumbersome, and let's face it, they look so much better. For me, hotkeys are the main selling point. I don't want to operate my machine with one wrist and one finger. I have a panel of switches in front of me, why should it be a typewriter 100% of the time? Moving to keyboard focused interaction, particularly vim keys but anything really, it makes me feel like in operating my machine with my mind, it is orders of magnitude less cumbersome once you're past the learning curve, such that when I have to use a traditional stacking, mouse focused environment I feel like I'm on a dial up connection with my hands amputated and cataracts. reply sweeter 5 hours agorootparentprevthe difference between fumbling around a GUI file manager looking for the correctly named file and using one of the many solutions the terminal offers is night and day. GUI's are clumsy and prone to extremely odd failures where the only solution is to exit and reset. Greyed out buttons when they shouldnt be etc... The terminal doesn't have these problems, if something fails you can see the error, its immediately responsive always, its composable and scriptable. Consider cutting up audio clips in audacity, doing it by hand can take ages and the GUI can crash and screw you over. With the terminal you can just take 2 minutes to write a burner script and use it and be done in seconds. Its really hard to describe the positives of the terminal over a GUI because they are radically different things, and new users are going to have a tough time setting up a friendly environment, but if you can get past that its extremely easy to see why they handle certain tasks a million times more efficient and resiliently. reply eviks 5 hours agorootparentSo in a good Windows file manager here is how you can fumble around looking for the correctly named file: press a single key enter part of a name get a fuzzy match for any file on your system in a separate tab (which you can return to later if needed) sort by path/size/image width to filter further press a key to preview file content or copy a file or delete it All that with immediate visual feedback What's your terminal day solution to this? > if something fails you can see the error, Or you can't, it just silently deleted the wrong files and you're non the wiser since you don't even see that your filter mismatched > With the terminal you can just take 2 minutes to write a burner script and use it and be done in seconds. How would you pick the audio times? In audacity you can easily play on cut thresholds to hear that they're correct, what's your \"seconds\" solution to that? reply utensil4778 16 hours agorootparentprevBecause TUIs never change. No one removes useful options from a TUI because \"whitespace is clean\". No one is writing useless changes to TUIs so they can feel like their job means something or to chase some bonus. Because GUI design today is very bad and only getting worse. reply xp84 8 hours agorootparentWhen I get to read comments like this is when I feel the most heard and understood. What you describe is pure fad-chasing, so I hope it swings back the other way while I’m still around to enjoy it. reply schindlabua 17 hours agorootparentprevIt's a slippery slope, once you've spent a year tailoring your setup it removes so much friction from those tasks you do 100 times a day. Sometimes I look at my macos coworkers and they have a single application on fullscreen and then they shake their mouse or whatever and 20 windows fly over the screen and then they scan them all to find the other window they are looking for, and I really wonder how they get work done. I use i3 and have 5 credit-card sized terminals open at any given time without taking up much screen real estate, and it's so great. Takes some getting used to though. reply something98 16 hours agorootparent> Sometimes I look at my macos coworkers ... and I really wonder how they get work done And I read the sentence before and wonder the same: > once you've spent a year tailoring your setup reply schindlabua 16 hours agorootparentThe irony is not lost on me but you can get productive if you spend a weekend configuring stuff and then you upgrade as you go :) reply sophacles 15 hours agorootparentprevIn both cases during the \"learn the tool\" phase you end up spending time having to figure out how to do things, understand workflows etc. In the TUI case though, you can usually tweak that workflow and configure it to match your brand of thinking. It costs a little more per instance up front, but after that year (or whatever time period), you get a much less frustrating experience, and the oddball things your particular workflow requires have been smoothed out - where in the GUI you'd still be frustrated and a bit fumbly or suboptimal, so you continue to pay the penalty for it over time. It's really about how you amortize the total time put into using the tool. reply tambourine_man 16 hours agorootparentprev>… macos coworkers and they have a single application on fullscreen… They are probably recent ex-Windows users struggling to understand a superficially similar but profoundly different WIMP paradigm. >… then they shake their mouse or whatever and 20 windows fly over the screen The fact that they can’t handle Mission Control is another tell-tale reply kichimi 16 hours agorootparentMac OS itself confuses things by forcing apps to be full screen, rather than sizing to the content reply jeffhwang 15 hours agorootparentI love the terminal and use vim as my primary text editor but I can't remember the last time Mac OS full-screened an app for me unless I told it to. I drive most of my mac through keyboard shortcuts and minimal pointer interaction. Perhaps a mouse-first Mac users are forced into full-screen? That still doesn't sound right though. reply quesera 15 hours agorootparentprev> Mac OS itself confuses things by forcing apps to be full screen, rather than sizing to the content I don't understand what you mean. macOS has never forced apps to be full screen. reply thfuran 8 hours agorootparentIt doesn't force applications to be fullscreen, but it does have garbage tooling for managing multiple windows on the screen simultaneously. Even windows has better with hotkeys and gestures for snapping to parts of the screen. reply tambourine_man 15 hours agorootparentprevYou can option click the green button, but I agree, one of the major regressions from Lion, IIRC, that we haven’t recovered from yet. reply jlarocco 12 hours agorootparentprevEven on HN there's no nuance anymore. I suspect most Linux users don't \"hate GUIs\" but hate the garbage that GUIs enable, like pointless/stupid transition animations, hard to see flat UIs, dumbing down of preference/setting dialogs, etc. Most GUI design is focused on dumbing things down for first time and beginner users, and most Linux users don't fall into that demographic. If a GUI helps me get my work done faster then I'm all for it. If the GUI gets in my way and wastes my time then I'm not going to use it. reply xp84 8 hours agorootparentIt’s the animations for me. I know it sounds crazy but I am a little bit angry every time I notice an action that is measurably slower than it needs to be because some “UX designer” (should not even be a job based on the BS I’ve seen) needed to justify his salary by blocking the UI process with a whiz-bang animation. Especially an action I have to do many times in a row, or all day long. I wish I could set the iOS global animation time to 0 like you could do back when you could jailbreak. (And no, reduce motion doesn’t help, it just replaces them with crossfades but still wastes the same amount of time) reply thfuran 8 hours agorootparent>“UX designer” (should not even be a job based on the BS I’ve seen) UX design is a real and valuable discipline, but it has been largely supplanted by what amounts to a fashion show. reply jiehong 15 hours agorootparentprevGUIs aren’t composable with other tools easily. Like, you can pipe CLIs together, and some TUIs accept a command and exit, allowing you to chain things together. On the web, your best bet might be playwright, but that’s about it. Imagine having GTK and QT applications able to be chained and exit automatically. On MacOS/iOS it’s not much better, even if Apple Shortcuts can feel ok sometimes, assuming the devs thought about allowing some actions to be available through shortcuts. On Linux, I think dbus was supposed to become the universal bus onto which all GUIs could provide services and do things together. It hasn’t panned out IMO. reply wpm 1 hour agorootparentShortcuts is trash but Automator was and still is amazing. reply Barrin92 14 hours agorootparentprev>GUIs aren’t composable with other tools easily. None of the tools on display here are composable either, in fact almost all modern TUIs are literally indistinguishable from GUIs, using the same widgets and user paradigms you'd find in a desktop app, but reimplemented on top a text rendering engine, they're not CLI tools. It's basically the same thing we did on the web where webapps sort of pretend that they're not sitting on a text protocol but at least there it's out of necessity. On top of a functioning graphic stack there's no point for TUIs to exist. reply tptacek 6 hours agorootparentprevMy default assumption about GUI programs: they'll either work locally on my macOS developer machine and nowhere else, or they'll work nowhere I can use them. My default assumption about TUI programs: they'll work everywhere I work. reply rscrawfo 8 hours agorootparentprevAs someone that used to agree with you, I’ve come to admit there are benefits. Information density and shortcut availability are two of the big ones. But the biggest for me is composability. I can query any data using their cli and open it in visidata nearly instantly. Just pipe it in. The interface is awesome compared to other query viewers I’ve found. It makes it easier to drill in and see results. Quick pivoting, Filtering and more reply ykonstant 17 hours agorootparentprevThat's too much generalization. I like skeuomorphic GUI with proper shadows, separators, color gradients, 2.5D borders, menus, etc. Nobody is offering those these days, so I gravitated towards TUI; I also have a lot of nostalgia for the DOS days, and although terminal emulation is worse than a proper command line, I make do. reply skydhash 14 hours agorootparentI came on macOS on Mojave, but have seen Maverick and Lion screenshots and I've used iOS 6 as well. Flat UI can be prettier, but the physicality of skeuomorphic design is better for interaction. There was something more when interacting with Winamp instead of the current batch of audio players we have today. Win7 was great. reply yjftsjthsd-h 15 hours agorootparentprev> Why do Linux users hate GUIs? Typically, because we find them inferior to CLIs/TUIs. A few possible reasons: * Graphical programs tend to use more memory/CPU for the same task. * Graphical programs are more likely to prefer/require the mouse. * Graphical programs seem to change their interface more frequently. * Graphical toolkits all seem to suck, in ways that vary by toolkit and version, and this suckage tends to make us actually notice more than ex. new versions of ncurses changing things under the hood. Don't get me wrong, there are plenty of GUI programs that are great - some of them even better than CLI/TUI alternatives - but the odds seem to be stacked against them. reply techjamie 14 hours agorootparentprevWhat doix said, but also if I tailor my workflow in the terminal, I can toss the same applications and configs onto my servers and use them the same way without installing a window manager and VNC onto it. reply bdd8f1df777b 7 hours agorootparentprevI don't hate GUIs, but TUIs have their benefit. Most prominently it doesn't require display, which most servers don't have, and would take a lot of resources and latency if tunneled remotely. reply prmoustache 8 hours agorootparentprevThey don't However with material design being the norm in gui there is nowadays barely any visual difference between a TUI and a GUI so it only come down to preferences: app optimized for keyboard or mouse use. reply hiatus 17 hours agorootparentprevThis program is available for multiple platforms, not just linux. Anyway, many people prefer keyboard navigation and already have a shell open for other tasks. Navigation by keyboard alone is not generally a feature in most GUI applications (see things like Vimium to add that capability to Chrome, for instance). reply Teever 17 hours agorootparentNot only is it multiplatform, but through the magic of SSH TUIs are available on any platform. I think that a lot of people are drawn to the idea of being able to customize their UI the exact way they want it and have it be that way everywhere. There are compromises with TUIs but that idea of a universal interface is very alluring to some people who want to optimize that part of their life. reply root_axis 16 hours agorootparentprevGUIs are nice for exploration because you can (in principle) intuitively iterate through the application behaviors, but command line interfaces are far superior when you already know what you're doing. reply opan 9 hours agorootparentDigging through menus can be pretty frustrating. A way to search available commands and options would be ideal. Something like Emacs's M-x prompt suggesting commands as you type, and if you see nothing relevant you can try a different term. Even the basic actions the default keybinds do have equivalent commands you can run. I've heard of a setup relying on Unity's old global menu feature that then lets you use something like rofi to search all the menus in a GUI program at once, but sadly never got it working. Sounds like a dream. You didn't have to actually use Unity, just make programs think you were, presumably so they'd expose the information the right way. reply satvikpendem 17 hours agorootparentprevKeyboards are often faster than mice. reply eviks 13 hours agorootparentGUIs recognize keyboard as a valid input option reply satvikpendem 11 hours agorootparentThey can but not always. For TUIs, it's mandatory. reply eviks 5 hours agorootparentShortcuts, the things that actually make keyboard faster, aren't mandatory in a TUI reply satvikpendem 3 hours agorootparentThey're not mandatory, and indeed, less likely, in GUIs anyway, so I'm not sure the point you're arguing is with you. reply eviks 3 hours agorootparentThe point I'm arguing with is your made up benefit of TUIs re. keybinds reply satvikpendem 3 hours agorootparentTUIs, in general, are more amenable to keyboard navigation than GUIs are; id est, even if GUIs offer keyboard navigation, they are simply not, on average, as good as those of TUIs. I'm not sure how that is controversial in the slightest. reply eviks 1 hour agorootparentIt's not controversial, just wrong and different from what you were arguing for before about some innate TUI benefit (\"mandatory\"), which simply doesn't exist. Now, \"on average\" does all the talking here, like, even putting the cli vs tui categorization aside (otherwise the \"average\" would support no nav, just some text flags), you can't really pick a small niche of TUI apps and compare it to the whole GUI, pick the same niche, and then you'd get categorically comparable keyboard support reply satvikpendem 1 hour agorootparentNo, on average, GUIs are simply better for most people than TUIs. Now if you cannot accept that elementary fact, there is nothing more to discuss with you, as we have wholly different world experiences. Having accepted that, TUIs are better than GUIs by some margin. Now, I can empirically show that there is a better benefit to TUIs than GUIS such that if you don't believe it, (wherever you seem to be in the Islamic world, I pity you) thank you, and have a good day. I am not even Muslim and even still I understand a-salamu alaykum. reply friend_and_foe 10 hours agorootparentprevTrue, but most GUIs are built with the mouse in mind, and at best slap some ctrl keybinds on as an afterthought. Hamburger menus and flat whitespace are cumbersome. reply eviks 5 hours agorootparentIs it better to have nothing instead of a hamburger menu like this app does (according to its screenshot)? Also, what isn't flat in this app? reply friend_and_foe 3 hours agorootparentIt doesn't have nothing. It has keybinds. There's nothing to click on, but still plenty to do, and you can do it with more than one finger. Flat... Whitespace. In modern graphical applications, nothing is broken up in your field of view, everything is an object on a slate. There's no organization, no context grouping objects together that help you understand how to interact with them, they're not ergonomic. Contrast that with this, while it's not a perfect example, there are clear borders, clear sets of interactions, the mind can formulate a procedure by looking at the organization of everything in front of them. It's almost like fonts, some fonts are better for readability, others are just ideas people had that might help that don't work out, and others are just there to look fashionable. UI maps and interactive flows can be easy to understand at a glance or look pretty but not give the user much of a clue what to do with what they're looking at. reply eviks 3 hours agorootparent> It has keybinds. Which are invisible. Unlike with the menus that show you keybinds right next to a command, and have Accelerators where you can use keyboard to navigate the list visually with the keyboard instead of having to remember all of the keybinds. (unless you mean web apps, but then this app doesn't run on the web, so that comparison is moot) (by the way, \"most\" clis don't support any keybinds, they're using command line flags) > Contrast that with this I have, taking a very common app for comparison - Windows File Explorer. It has borders (and nicer ones at that as they don't need waste the width of the whole char of space because they're not text), and also same groups (left pane) > clear sets of interactions Can you list a clear set of interactions with the Clipboard panel in the bottom-right (can you rename a file from there? drag&drop it away? delete a file / delete from the clipboard), and where this clarity is coming from > Flat... Whitespace Seriously, this file manager is a flatly designed app!, just go through the checklist: Flat design is a modern design style that consistently maintains minimalist, 2D features. Here are six signs that what you’re looking at is flat design. Contrasting colors: often bright colors, flat design relies on distinct contrast to send visual cues to users. 2D styling: simple shapes and no realistic images. Simple typography: typically sans-serif fonts are the choice of flat design. It loads fast, it fits with minimalist style, and it’s easy to read. White space: negative space helps designers indicate which part of the page they want users to focus on and makes the website more readable. Grid-based layouts: usually flat design is symmetrical and uses a grid for the layout and hierarchy. Simplicity: symbolic icons, abstract forms, no textures, and no gradients. https://careerfoundry.com/en/blog/ui-design/what-is-flat-des... With the exception of borders, which are less common in other flat designs reply godelski 13 hours agorootparentprevI'm actually upvoting you. Not because I agree, but because this sentiment is so pervasive I need that responses highlighted instead of buried. Linux users don't hate GUIs. I say this as someone who's used Linux as a daily driver for 15 years! GUIs have their place, but they aren't for everything. There's are two main issues here 1) The terminal is far more flexible and lightweight. I can do so much more in my terminal and get far more done in less time by using the terminal. Learning a little bash can greatly increase your productivity. And on top of that, I can do this with little cost to resources. I live in the terminal not because it is pretty but because it's faster and more efficient. Yes, there's a learning curve but it pays dividends. 2) customization. Don't confuse this for aesthetics. Those do matter but you should see yourself as an expert craftsman. Your carpenter, engineer, etc all build tools, jigs, and other things to help them, especially with organization. Like them you should create the best environment for you. I know you were told I'm programming classes that the magic is to not keep writing the same lines but to wrap those up. This is the same thing. The aesthetics are so I can see the things I care about the most, not because it's pretty. The aliases and scripts I built are to prevent me from wasting time relooking up things I do intermittently but not frequent enough to memorize. Customization is incredibly hard in GUIs. Dragging and dropping things and half the time the whole fucking screen scrolls because it's hard to not do this. And even then, it gets corrected cluttered and you end up with this long tree of menues. But wait you say, just give it a macro! And at that point, what's the difference? In the terminal we recognize something fundamental: to know it's name is to have power over it. Yes, this isn't everyone. Every person is on a different part of their journey. And like I said, the customization is about making you productive not trying to find the most optimal, because that idea is laughable. There are good defaults but optimal is personal. This is why I'll always trust someone more when they live in the terminal. The GUI person might be faster at times but they're limited. The person who will fuck around and find out is the person who will eventually understand more about the complex things they work on. They're more likely to dig deep. And this is the thing silicon valley has lost, the sense of creating what can be, not what is, not someone else's vision but yours. reply marmakoide 15 hours agorootparentprevA well-made TUIs is really ergonomic and clutter-free. It can be maintained to high standard by one person. It doesn't take a lot of efforts to make composable tools, ie pipes. It uses little resources even for fancy TUIs. GUIs can be fine, but they are hard to get right, most are meh or just bad, and they are human resources sinks. reply wkrsz 14 hours agoprevI'm waiting for preview feature: https://github.com/MHNightCat/superfile/issues/26 Fortunately it's now on top of the to-do list: https://github.com/users/MHNightCat/projects/4/views/1 reply fernly 12 hours agoprevMy goodness but there is a whole lot of these! (Found the below table from the Nnn wiki page, mentioned above.) https://en.wikipedia.org/wiki/Comparison_of_file_managers reply baobun 6 hours agoparentFor anyone else (considering) switching file manager: Check if it depends on the gvfs package or not. You either want it (virtual filesystem support, stuff working \"out of the box\", background daemon, DE integrations) or you don't. So there's one factor to cut the search-space in ~half :) I'm recently trying out worker[0] and so far it's great. [0]: http://www.boomerangsworld.de/cms/worker/index.html reply monopoliessuck 12 hours agoprevThis looks neat, but has a lot going on. I really like how minimalist yet extensible lf [0] is and just use edir [1] to rename files in bulk. Gluing them both together is really easy too. - [0] https://github.com/gokcehan/lf - [1] https://github.com/bulletmark/edir reply camgunz 19 hours agoprevIs the author really only 16? Wow! reply qwertox 13 hours agoprevThis did send me down a rabbit hole, and I ended up installing nnn (n³), only then to land on their GitHub page and staring at the keyboard layout and testing stuff out in the terminal. It is interesting and I wonder how it's getting used. [1] https://en.wikipedia.org/wiki/Nnn_(file_manager) reply micklemeal 19 hours agoprevThis looks pretty nice! I like the ability to add multiple file panels versus tabs that are common with nnn and ranger. Going to give this a spin today. reply necrotic_comp 13 hours agoprevso I don't understand what the usecase for a terminal file manager is. I've always felt comfortable using cp/mv/mkdir/etc. but I feel like I'm missing out. Can someone explain how and why you'd use this ? reply wonger_ 12 hours agoparentThree advantages I realized, having done a lot of cd/ls/cp/mv/rm and also having used a file manager: - power user workflows may differ from typical dev workflows. Imagine things that a point-and-click file manager solves quicker than the command-line. Example: manually organizing a bunch of .mp3s, or cleaning out misc downloads. A TUI file manager makes these tasks quicker too. - quick directory navigation. cd is slow. There's solutions for a better cd, involving z or fzf or whatever. But a file manager should solve it too. - a file manager, especially a two-pane view, is cognitively easier. Better UX. Example: Having a src/ pane on one side and dst/ on the other, selecting a few src/ files, then performing a copy command. You get instant visual feedback to confirm that the files appeared in dst/. Compared to ls, cp file1 file2 file3 dst/, ls dst/. I always feel the need to ls after commands because the command-line doesn't give much feedback. tldr: speed, ux, comfort. But if you're already comfortable with your tools, I think that's the most important thing. reply necrotic_comp 11 hours agorootparentThanks. That makes sense. I guess I'm just super entrenched - very comfortable with my tooling and would generally write a one-liner for something like the above. The way I do it is a bit nuts though, and you're right, the above is much more consistent and has its advantages reply sneak 11 hours agoprevThe first thing this app does is connect to Microsoft servers to download theme files, which for some reason aren't bundled into the binary. If you block it from accessing the internet, it crashes. reply friend_and_foe 10 hours agoparentThat's pretty bad for a terminal utility and file manager. The thing should never, ever connect to the internet for anything unless explicitly told to by the user. I didn't notice this, thanks for pointing it out. reply christophilus 12 hours agoprevI love that there are a lot of great options in this space. This one looked nice due to its selection pane: https://xplr.dev/ reply idunnoman1222 19 hours agoprevBrew install superfile Now guess what the executable is called… reply fkyoureadthedoc 18 hours agoparentI almost didn't even try to figure it out after I installed and the `superfile` command didn't work. reply eddd-ddde 17 hours agoparentprevThis happens to me quite often. pacman -Ql| grep bin There must be similar commands for other package managers. reply lsllc 18 hours agoparentprevYes, I had the same question! (`spf` for the curious!) EDIT: To be fair, right at the beginning of the tutorial is: > First, if you want to open superfile by opening a terminal and typing spf. reply quesera 15 hours agorootparentA symlink would be a good solution. reply safetytrick 17 hours agoprevWith a dependency on a font. Wow, it's been a while since I've seen that. reply explosion-s 15 hours agoparentFairly commonplace for TUIs that use icon. Tons of vim plugins rely on NerdFonts (A regular monospace font that also includes tons of icons) reply apitman 6 hours agorootparentIs there any technical reason the font can't be shipped in the binary and installed automatically? reply wpm 1 hour agorootparentWhich font? What license? Which one does the user want? Where does it get installed? Will the user consent? I did not use a Nerd Font until I tried superfile out today. It was not hard to build my own nerd font version of Berkeley Mono with font forge. reply medstrom 56 minutes agorootparentBesides, you still have to set your terminal to use that font. Not as if typing `spf` on the command line can reconfigure whichever terminal you are on. reply kwhitefoot 17 hours agoprev$ spf spf: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.34' not found (required by spf) spf: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.32' not found (required by spf) I'm on Linux Mint 19 reply colatkinson 17 hours agoparentYour version of glibc is too old. Mint 19 is based off Ubuntu 18.04, which ships glibc 2.27, whereas this binary seems to require symbol versions first shipped in glibc 2.34. You'll have to compile from source, or update your distro to a maintained version. Ubuntu 22.04 ships glibc 2.35, and so Mint 21 should work. Mostly commenting because while this isn't really a tech support channel, being able to identify glibc version mismatch errors comes up extremely often, even in this day and age. reply mcbuilder 17 hours agoparentprevThis is a linking issue (you're missing a specific version of a dynamically linked standard library), and probably best in the issues on the repo, not Hacker News. reply antihero 17 hours agoparentprevThey could build it with CGO_ENABLED=0, if they are using Alpine, perhaps. reply opheliate 17 hours agoparentprevAn operating system from 2018 which is no longer maintained by its vendor? https://www.linuxmint.com/rel_tara_cinnamon_whatsnew.php I think it's somewhat unreasonable to expect software released today will necessarily work on your environment without some legwork. reply isopede 16 hours agorootparentIs it though? I can run Windows programs from 20 years ago on my Windows machine just fine. Issues with Linux binary distribution meanwhile are ubiquitous, with glibc probably being the single biggest offender. What's worse is that you can't even really statically link it without herculean effort. I've spent an inordinate amount of my life trying to wrangle third-party binaries on Linux libraries and it's just a sorry state of affairs. Try taking a binary package from a vendor from even just 5 years ago and there's a non-zero chance it won't run on your modern distro. reply qwery 1 hour agorootparentIt's an interesting comparison. I agree that five years is well within the expected period of viability of an operating system. Some points to consider: - any given release of a Linux distro will probably work on hardware released five years earlier -- one factor that reduces the cost of upgrading the OS (there are many more obvious factors) - Microsoft is highly motivated to get customers to upgrade to the new Windows at the time. The legacy support is well-known as a \"bone\" (or: \"a factor that reduces the cost of upgrading the OS\") - binary backwards/forwards compatibility is less of an issue in an environment that doesn't treat source code as a secret - why run old versions of software? In other words: xterm is older than Windows and also as new as Windows Also, I've always found it amusing that I have much less trouble running old windows software on a Linux (wine) than on new versions of windows. reply donio 15 hours agorootparentprevYou are talking about backward compatibility, the parent thread is about forward compatibility. You won't have much luck running a modern executable on XP unless the vendor went out of their way to make that happen. > What's worse is that you can't even really statically link it without herculean effort. The program we are discussing happens to be written in Go so it's trivial to build a statically linked executable. reply worthless-trash 2 hours agorootparentAre you sure you want glibc statically linked into your go executable ? reply qudat 18 hours agoprevLooks like it's using bubbletea, nice! reply insane_dreamer 16 hours agoprevLooks nice! Not sure if it's enough to pry me away from MC, but worth a look. reply insane_dreamer 16 hours agoparentvery first impression after . - Bubbletea always seem to have a minimum terminal size which drives me nuts. Btop and other programs I've used have this problem. All in all I like the ability to open multiple panes, the ability to open network drives, see ongoing/completed processes and see the clipboard. I find I virtually never need more than two panes though, and there are plenty of CLI utilities for FTP and stuff. I'm probably going to stick with an old school dual pane like vifm or MC. I'll keep this on my machine and test it out some more next time I need to connect to an ftp server or something, I like that it provides most of the functionality that graphical file managers like Nautilus have, I do miss some of that stuff in my terminal oriented environment, but not enough to go full mouse, so it's good to know I have an option that gives me some of both. reply berzzz 18 hours agoprevVery nice! reply gigatexal 16 hours agoprevplay this is very pretty reply srwest 17 hours agoprevIf didn't read the docs, noticed hkjl moved around, and accidentally deleted 3 folders with ctrl+d seeing if I could scroll down faster. Scary defaults if you have Vim muscle memory. reply godelski 14 hours agoparentIt really weirds me out how many people use a sprinkling of vim keybindings but don't use more. Like how many vim users don't know(esc) or contextual completion like(:help ins-completion). I see so many people use plugins for things that already exist in vim but people never discuss. One that bites me a lot is when a vim keybinding is implemented, has insert mode, and they don't also rebind . Go from trying to delete a word (backwards) but end up losing a whole session. It's such muscle memory I sometimes do it on webpages, but maybe that one is a feature instead of a bug lol reply jez 13 hours agorootparentThis is my biggest complaint with keybindings on Linux/Windows, that Ctrl means “escape codes” in terminal emulator applications and “window/UI operations” in every other application. By contrast, in macOS all the window/UI keybindings are typically Cmd (Cmd-W) which means that GUI applications attempting to layer on vi keybindings don’t have to also audit all the Ctrl keybindings that might be doing something wildly different compared to what vi users expect. Cmd for UI and Ctrl for terminal just makes for such a nice default convention. reply medstrom 58 minutes agorootparentWhen you use EXWM (Emacs X Window Manager), this is actually a blessing! It means you can bind Super keys only in Emacs and have them do exactly the same thing every time, while the other X apps (terminals, browsers...) get the Control key to themselves. reply mikepurvis 13 hours agorootparentprevI agree— having switched back to Windows five years ago, this is one of the biggest things I miss about the Mac hardware. Having a separate key just avoids the whole drama around whether Ctrl-C is \"copy the thing\" or \"shut it all down\", and which of those functions is going to get remapped to Ctrl-Shift-C and all the fallout from that. reply sshine 13 hours agorootparentprevConfigurable windows managers on Linux let you code a “super” key. I like the Window key, since it serves no other purpose, and never overlaps with default bindings on Linux. So the Cmd/Ctrl split on Mac maps nicely to the Win/Ctrl split on Linux. reply godelski 11 hours agorootparentWhile I do this too I understand the above complaint. I think naturally linux should have more of a system similar to what OSX does. I mean I'm constantly switching between OSX and Linux machines but more and more recently I've been at at mac computer while inside a linux system and that is very seemless because it is the GUI that fucks shit up. But now there's so much momentum that I'm not sure they can go back. I think the only way to make this correction is for a big distro like Ubuntu/Pop/Manjaro/Endeavor to switch to a default with alt or super as they windowed operating key but have the option to switch back (should be implemented in the install process and made clear and easy to undo. But without making it the default it'll always stay the other way. (first introduction should be non-default)). reply opan 9 hours agorootparentprevSuper is the \"Windows\" key (or the Command key), it's the \"mod key\" that can then be set to super or alt/meta or whatever. For the reasons you suggest (WMs often heavily using the super key), I would not want it to be used in the macOS way as I have a few dozen keybinds I'd lose or have to remap then. Stuff like focusing or moving windows or workspaces. Emacs can also make use of the super key, though I don't know if it has anything bound using it by default. The macOS approach is cool and makes some sense, but I wouldn't want it forced on me, and I'm kinda glad I didn't imprint on it. reply moelf 12 hours agorootparentprev>and they don't also rebind . Go from trying to delete a word (backwards) but end up losing a whole session This is literally why Vim binding for Jupyter doesn't work for me and also why the \"terminal\" in Jupyter Lab is worse than not existing -- I can't help but press C-w reply slim 12 hours agorootparentprevwe old vi users don't use key combinations, that's an emacs thing :) reply godelski 10 hours agorootparentI don't think old means better. I agree that you should use whatever is best for you and makes you more productive (why I doing care about vim vs emacs debates) but I think you're giving up a lot. You're given and unless color blind then you are missing the added dimensions you searching with things like syntax highlighting. All your commands exist in vim, but come on, you've had the last 33 years to update. My configs update as I change too, so I hope that you aren't stuck because I don't like vi for the same reason I don't like GUIs: not all holes are round and not all pegs are square. reply tmtvl 9 hours agoparentprevI used vim for 5 years and never knew about C-d for scrolling until after I had switched to Emacs and one day, on a whim, decided to install and activate evil and look what various commands were bound to. I removed evil immediately afterwards as 5 years of vim taught me to hate modal editing with a passion. reply night_cat 14 hours agoparentprevBtw, this is not actually deleted, but put in the trash can. But it seems that this hotkey is not good for many people. It may be changed in the next version. Thanks for your feedback. reply ghostly_s 14 hours agorootparentI use a number of apps where ctrl-d is a common non-destructive shortcut, and can't recall ever encountering one where it was used for delete. reply 2024throwaway 12 hours agorootparentk9s does a delete for ctrl+d reply opan 9 hours agorootparentprevIn ranger, dd is cut/mv and dD is delete, but dD on one file spawns a command with :delete typed in so you have to hit enter to pull the trigger, and doing it with multiple files has the same behavior plus adds a y/N prompt asking if you're sure you want to delete those specific files. This is enough friction to prevent most mishaps, but not enough to be annoying. I would suggest taking inspiration from this. reply behnamoh 5 hours agorootparentprevHow do I undo CTRL-d deletes? I almost deleted all my home dir... reply night_cat 4 hours agorootparentI am so sorry to hear about that:( You can go to \"~/.local/share/Trash\" all files that you deleted are at there reply twobitshifter 11 hours agoparentprevYes those defaults won’t really work for vim. Escape exits the program, without even using it, I already know I am going to exit a zillion times once my brain thinks I am in Vim. But the good thing is they are just defaults. Hopefully there are already no legions of users resistant to any changes to defaults. reply StrLght 15 hours agoparentprevSo there's no confirmation for deletion? Oof, that's probably the most unsafe default I have seen in a while. reply night_cat 4 hours agorootparentThere will be a prompt for complete deletion, but there will be no prompt for putting it in the trash can. reply patwie 16 hours agoparentprevThese key-bindings are pure evil for vim users. reply gouggoug 16 hours agoparentprevEven for non-vim users this default is absolutely horrendous reply likeclockwork 16 hours agoparentprevHoly shit, thanks for the warning. reply luqtas 14 hours agoparentprevwhat's even the point of downloading something so banal & not read the docs; comment at the post WITH the warning of it not complaining with Vim shortcuts when it's clear that Emacs is ballparks better? /s reply coppsilgold 4 hours agoprevIt appears to require network access. A file manager should not be dialing anything, especially not on startup. Error downloading theme: Get \"https://github.com/MHNightCat/superfile/raw/main/themeZip/v1.1.2/theme.zip\": dial tcp: lookup github.com on 8.8.8.8:53: dial udp 8.8.8.8:53: connect: network is unreachable reply night_cat 4 hours agoparentThis is theoretically only needed the first time a new version is used and its purpose is to download the themes. reply copperbrick25 18 hours agoprevTried it out for a minute and it crashed because I had a broken recursive symlink in my home directory: 1. Create a recursive symlink to itself: `ln -s test test` 2. open superfile and navigate to it. 3. Observe crash reply night_cat 17 hours agoparentHey, thanks for the report, I fixed it! reply atlas_hugged 17 hours agoparentprevnext [7 more] [flagged] dingnuts 17 hours agorootparentNo, fix the issue and open a PR. This is a personal project. They need contributions, not a pile of discouraging issue reports for which they'll never have enough time. reply hiatus 17 hours agorootparentI don't have to be a doctor to know something is wrong in my body, but I would have to be a doctor to fix it. Put another way: just because you figured out something is wrong does not mean you have the ability to fix it. reply klabb3 15 hours agorootparentprevAs a maintainer that just makes it worse. Familiarity with the code base is typically necessary to make a good quality contribution. Issues are a sign of love, imo, because they don’t want to stop using your project, they want it to improve. Of course there are also entitled and rude people. But we should not set the standards based on a-holes. > not a pile of discouraging issue reports This is such a strange way to look at software development. Discouraging? reply filcuk 17 hours agorootparentprevNo, I'll raise an issue. Someone who actually knows Go can work on it. reply dewey 14 hours agorootparentprevTo be honest, if I'm developing a small project I'm excited about and I'm getting an issue report from someone I'd be happy to see that someone actually cared enough to spend time on writing something (Either in the comments here, or as a quick issue on GitHub). I would not expect someone to get familiar with my young code base and fix the issue themselves. reply filcuk 17 hours agorootparentprevNo, I'll raise an issue. Someone who actually knows Go can work on it. reply bomewish 6 hours agoprevStarted with nnn, switched to yazi — it’s amazing. Any other solution would have to be incredibly good to switch. reply teddyh 19 hours agoprevWhy is this better than Midnight Commander or GNU Interactive Tools? reply hidelooktropic 19 hours agoparentThere's not so much as a screenshot of MC on their official page. Hard to say. Did the author say their product was better? reply yjftsjthsd-h 18 hours agorootparentI think it's fair to ask of any new program why to use it rather than an existing option. And there can be lots of reasons - more active development, new features, less buggy, smaller program (uses less disk/memory, easier to be less buggy), easier to install, easier to use, whatever. And the author of a program doesn't necessarily need to have an answer, especially not early on; programming is sometimes its own reward, and sometimes advantages only become obvious later. But as a user, yeah it's useful to know what advantage this thing has over all the other things that do the ~same stuff. reply nine_k 17 hours agorootparentI won't say that mc is really buggy, nor that it's large. But even if it were, it's weird to not even mention it, let alone compare with it, while likely most of the target audience has been using mc for years (or decades, like me). reply latchkey 17 hours agorootparent> or decades, like me Heh, I ported mc to Apple's A/UX back in the early 90's! reply nine_k 5 hours agorootparentThank you! My first experience was building it from source under Digital Unix (on an Alpha 264) in 1995. reply logrot 17 hours agorootparentprev> why to use it Of course. But that's not what he asked. reply opan 9 hours agoprev [–] Based on the comments here about weird inconsistent keybinds and accidental file deletions, I won't be trying this for now, but I will keep an eye on it. I use ranger very heavily every day, but it being slow pythonware is sometimes a problem with extra large dirs and when changing the sort mode often. lf is too barebones for me, I don't know how to recreate everything I'm used to from ranger. Something fully-featured but faster than ranger would be ideal. If you're taking suggestions, making file copies use rsync under the hood would be great. I used to copy files over sshfs with ranger a lot and then found out the hard way that it was occasionally failing/being interrupted and then silently moving on in the transfer queue, so I had partial and corrupted video files it took months to notice. I do also use rsync for transfers a lot of the time, but sometimes you wanna move a bunch of files to different directories, and something like ranger is just faster and easier. Especially when you don't want everything from the source on the destination for space reasons, so can't just rsync whole dirs to grab the new stuff. reply sudddddd 8 hours agoparent [–] As an alternative to ranger, I have switched to yazi completely. reply behnamoh 5 hours agorootparent [–] yazi is written in Rust. Holy shit, this is the 10th app I try that's written in Rust and all of them are super fast and snappy! reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The document offers guidance on installing and utilizing the superfile tool, covering common operations, various installation methods, themes, plugins, custom themes, hotkeys, contributing to the project, and acknowledging supporters and contributors.",
      "It highlights the importance of using a Nerd font, outlines installation prerequisites, and urges users to show support by starring the project on Github.\\"
    ],
    "commentSummary": [
      "Users are discussing the benefits of terminal file managers, focusing on text-based user interfaces (TUIs) and command line interfaces (CLIs) for efficiency and customization options.",
      "The advantages highlighted include keyboard navigation, organization, and efficiency in TUIs, contrasting with GUIs' limitations in resource consumption and customization.",
      "The conversation includes topics like software development, open-source projects, keybindings in applications, comparisons of file managers, and suggestions for enhancements in this tech sphere."
    ],
    "points": 339,
    "commentCount": 171,
    "retryCount": 0,
    "time": 1715347640
  },
  {
    "id": 40320166,
    "title": "Fosstodon.org removes all network features from KeePassXC Debian",
    "originLink": "https://fosstodon.org/@keepassxc/112417353193348720",
    "originBody": "Create accountLogin Recent searches No recent searches Search options has: media, poll, or embedis: reply or sensitivelanguage: ISO language codefrom: userbefore: specific dateduring: specific dateafter: specific datein: all or library fosstodon.org is part of the decentralized social network powered by Mastodon. Administered by: Server stats: Learn more fosstodon.org: About · Profiles directory · Privacy policy Mastodon: About · Get the app · Keyboard shortcuts · View source code · v4.2.8 ExploreLive feeds Login to follow profiles or hashtags, favorite, share and reply to posts. You can also interact from your account on a different server. Create accountLogin About",
    "commentLink": "https://news.ycombinator.com/item?id=40320166",
    "commentBody": "KeePassXC Debian maintainer has removed all network features (fosstodon.org)255 points by CuriousIndian 18 hours agohidepastfavorite267 comments alyandon 17 hours agoGutting the functionality that upstream has built into a piece of software and then publishing it under the same name is dubious at best. If they want to go this direction they should publish as a fork under a different name so upstream doesn't get constantly barraged by complaints of users having issues. This reminds me of the time years ago when the Debian maintainer of Chromium decided to unilaterally disable the ability to install extensions. Thankfully, more pragmatic minded people prevailed and the patch was reverted. This also reminds me of a time many many many years ago when Debian removed the kernel interface that provided the ability to load binary firmware into network cards and broke networking for me. reply mikepavone 5 hours agoparentAll they did was change the XC_ALL build parameter to OFF [0] which happens to be the default in upstream's CMakeLists.txt [1]. If upstream thinks this functionality is so important maybe they should fix their defaults. I think it's a bit unfortunate that users of this package may be confused why stuff stops working when they upgrade, but having the unsuffixed package match upstream defaults seems entirely reasonable otherwise. [0] https://salsa.debian.org/debian/keepassxc/-/commit/7d6d16e3f... [1] https://github.com/keepassxreboot/keepassxc/blob/develop/CMa... reply dingensundso 2 hours agorootparentAt first I thought it should be the other way around. Keep the current keepassxc package and create a keepassxc-minimal. But seeing the build options it makes sense to have a keepassxc-full. Only thing is this will annoy some people when they upgrade. But only when this reaches stable and then there will be notice in the upgrade documentation and apt-listchangea. reply dannyw 16 hours agoparentprevThe role of a maintainer is more than copying and pasting upstream. They are allowed to exercise their judgement in what they believe is appropriate for end users of a distribution. In this case, there does seem to be reasonable security justifications for it, and an alternative is provided. reply thaumaturgy 16 hours agorootparentIf both upstream and a significant portion of users strongly disagree with a maintainer's judgement, then how is their role as maintainer justified? It's KeePassXC's job to secure the software and produce features that fulfill users' needs as they see fit. Julian's role as maintainer may intersect with that to a limited extent, in deciding on what kind of defaults best fit the rest of the OS. But, in this case, the developers of the software disagree with his justifications, and reasonable users are also disagreeing with the change. It seems clear Julian wandered outside his role a bit here. reply makeitdouble 7 hours agorootparent> KeePassXC's job Is KeepassXC even a company ? looking at their site and wikipedia, they're just a bunch of people dedicated enough to maintain the project. Looking at the donation page [0] they don't even list anything going to themselves in the use of the money. So they're effectively paying with their time to keep the thing alive. If anything the community seem to own a ton to these guys. [0] https://keepassxc.org/donate/ reply omoikane 4 hours agorootparentThis reminds me of \"The gift of it's your problem now\" (2021): The best part of free software is it sometimes produces stuff you never would have been willing to pay to develop (Linux), and sometimes at quality levels too high to be rational for the market to provide (sqlite). The worst part of free software is you get what you get, and the developers don't have to listen to you. (And as a developer, the gift recipients aren't always so grateful either.) https://apenwarr.ca/log/20211229 https://news.ycombinator.com/item?id=29736369 reply barbariangrunge 16 hours agorootparentprevSorry, why do maintainers owe us anything? They’re typically unpaid or poorly paid and are doing everyone a favour. The code is open source and anyone who doesn’t like their work can easily fork the project. They don’t need to justify anything to us reply thaumaturgy 16 hours agorootparentI anticipated this reply, either here or elsewhere, and was really hoping it wouldn't arrive. I do a lot of volunteer work too. Guess what? My decisions in those roles are not unimpeachable. Being a volunteer also does not mean you are owed anything, even gratitude. It's a thing you choose to do, and if you don't like doing it anymore, then you should stop doing it. Package maintainers aren't self-sacrificial saints or all that unique as volunteers go. This is a bad decision. It deserves criticism and discussion. The volunteer status of package maintainership is irrelevant. reply roenxi 8 hours agorootparentConnecting the internet and a password database together is one of those fundamentally bad ideas. This might well be an excellent technical decision. Although I agree with the thread root that this is a level of intervention that might justify some rebranding. > Package maintainers aren't self-sacrificial saints or all that unique as volunteers go. If you want keepassx, you can go install it. If you want the Debian archive's version, install that. All the options are open to critique, but the average Debian maintainer is doing so much more good than the occasional bad decision that they get a lot of benefit-of-doubt on this sort of choice. And some reasonable expectations of respect. reply techwizrd 7 hours agorootparentIs it a _fundamentally_ bad idea? The connected syncing feature of Bitwarden is one of my favorite things. I can save a password on one device, and its automagically available on others all while staying encrypted (and audited). reply kiwijamo 4 hours agorootparentAgreed but it is worth keeping in mind that Bitwarden's implementation of sync is probably a lot more sophisticated than KeepassXC; and is probably the main reason why one would use Bitwarden. I am a former user of Keepass and I never knew it had network functionality so I think it makes sense to provide two packages -- one containing the main keepass functions which which 99% of users will use and the othrer for the 1% using the exotic functions. This is in line with how Debian handles many other packages such as vim, exim, etc so it is not at all surprising for the typical Debian user. reply thaumaturgy 7 hours agorootparentprev> Connecting the internet and a password database together is one of those fundamentally bad ideas. Disagree. I use KeePassXC because I would prefer to have my passwords on my computer, instead of somebody else's computer (and I am willing to accept responsibility for managing my own password file). That is a delineation that is parallel to, but not the same as, \"don't connect to the internet\". Browser integration is a required feature for a modern password manager; without it, you don't have a password manager, you have an encrypted notepad. HIBP integration is, likewise, net-good for users. Also, as the KeePassXC devs have repeatedly pointed out in multiple places, these features are compiled in, but not enabled by default. Users who do not wish to use them can simply ignore them. Julian's argument at best seems to be some kind of concern about software supply chain; he is compiling the package without these features so that they are no longer available to the users who do want them. The people making the arguments in favor of this change \"for security reasons\" aren't even making strong arguments for it. > If you want keepassx, you can go install it... Okay. And if you want a super-paranoid version of KeePassXC without these features compiled in, you can... go compile it that way. Like everyone else, I already have thousands of little time sinks to contend with simultaneous to other increasing pressures in life. I am investing some time now to try to prevent another bad decision from adding to those faffs. > some reasonable expectations of respect. First, from my reading here and on the Mastodon thread and on the GitHub thread, most people have expressed dissatisfaction with this decision without crossing the line into disrespect towards the maintainer. The KeePassXC devs have maybe gotten a little heated, but they deserve all the same allowances you'd give to a package maintainer. They are getting bug reports due to downstream's decision, which they strongly disagree with. That sucks. There is a little bit of the usual internet noise, but otherwise, this is about the best discourse that could be expected for something like this. Second, Julian himself kinda invited a strong negative response when he replied early on with, \"This will be painful for a year as users annoyingly do not read the NEWS files they should be reading but there's little that can be done about that. ... All of these features are superfluous and do not really belong in a local password database manager, these developments are all utterly misguided. Users who need this crap can install the crappy version...\" --- Getting back to some substantive discussion, it seems unlikely Julian is going to change his mind on this. This seems like a clear failure of package stewardship to me; KeePassXC's best move IMO is to set up their own repository and provide instructions for adding their repo and key to apt and then pin their keepassxc package. It's a bit of a nuisance for them, but probably less headache than ongoing bug reports and noise from the internet. There's already a lot of other software that gets installed this way, so I think it's fair to expect the average Debian user to be able to handle this process -- it's copy-and-pasting about four lines into your terminal. Then, Julian will no longer need to bear the burden of maintaining the package. reply valicord 6 hours agorootparentprev> And some reasonable expectations of respect. I think that expectation ends once you start calling the other party's software \"crappy\". reply Dalewyn 7 hours agorootparentprev>And some reasonable expectations of respect. Volunteers by definition do not (or at least should not) expect anything in return for their time. If you want respect as a so-called volunteer, you're not a volunteer. I've seen both good and bad package maintainers, too. reply roenxi 7 hours agorootparent> Volunteers by definition do not (or at least should not) expect anything in return for their time That isn't really true. For starters, paid volunteers are actually a thing that happens from time to time. Secondly; there would be no volunteers if they didn't get something for their time. It is just generally that something isn't money. Volunteers aren't expected to be selfless. reply makeitdouble 7 hours agorootparentprevI agree volunteering doesn't mean decisions can't be criticized, but the notion of duty towards the user oversteps that. The same way maintainers make their decisions, the community is free to deal with it in any way shape or form. As long as money or malice or recklessness isn't involved, people should be free to do what they think is right, and the current maintainers aren't putting any roadblocks to prevent others from using the work in the way they want. reply CooCooCaCha 10 hours agorootparentprevI share your frustration because comments like that show up in every thread about open source. By putting something out into the world you're creating connections with others. If people like what you've built and start to rely on it then that puts power into your hands, and any time you have power over others it should be wielded responsibly. Volunteering doesn't give people a pass to screw over others. reply otherme123 4 hours agorootparentAnd who decides \"responsible\"? The mantainer made the decision of defaulting to no-network for safety reasons, that users can reverse with a flag. This sounds responsible enough for me. I bet that if a bug is found in the connection API and passwords leak, we would impale the head of the mantainer in a pike for not defaulting to safe mode, or to have connection at all. reply mardifoufs 14 hours agorootparentprevThey don't owe us anything, but that's completely unrelated to the current discussion. They can be completely free to do whatever they want, and users can also disagree with that and voice said disagreement. It's a two way street. Especially in a situation where there's only \"one\" maintainer per package per distro, meaning that users of the distro (who can be other maintainers too) can disagree with it and openly so. There's a reason why Debian doesn't allow a maintainer to say, gut systemd or switch to another init system unilaterally just because they are volunteering to maintain the package reply Kwpolska 16 hours agorootparentprevThis isn’t the project maintainer we’re talking about, it’s the Debian package maintainer. Their job is building a working .deb with working software, not randomly messing with it. Users have the right to demand their packages to be trustworthy. reply Daviey 10 minutes agorootparentdemand? Perhaps if you are unhappy you should ask for a refund. I just can't get my head around this sort of entitlement. reply sangnoir 15 hours agorootparentprev> Their job is building a working .deb with working software If that were was all there is to packaging - upstream developers could do the same job & have their CI/CD pipeline shoot out a .deb file. However, it's not unheard of for package managers to maintain an evolving patchset that changes the default behavior and better integrates the upstream project to the rest of the distribution and its philosophy. reply Kwpolska 15 hours agorootparentUpstream developers don’t have the time and bandwidth to set up packaging for all distros and versions. Improving defaults may be fine according to some. Removing major features advertised by the software due to political reasons is not fine. My software is a victim of Debian maintainers as well: they chose to remove the default theme from our static site generator, because it was built on top of Bootstrap 3, but Debian only shipped Bootstrap 2 at the time in a global package (they also changed the bootstrap 2 theme to use symlinks to the global version). How is this “better integration with the philosophy”? reply sangnoir 15 hours agorootparent> My software is a victim of Debian maintainers as well: they chose to remove the default theme from our static site generator, because it was built on top of Bootstrap 3, but Debian only shipped Bootstrap 2 at the time in a global package (they also changed the bootstrap 2 theme to use symlinks to the global version) As a Debian stable devotee, this seems reasonable to me. If I wanted each package to bring along & manage its own dependencies, I'd use flatpaks. > How is this “better integration with the philosophy”? I'm guessing Bootstrap 3 wasn't yet in whatever release/channel your software was being packaged for? Can't you imagine any possible benefits of not shipping bootstrap v2 and Bootstrap v3? Or do you just disagree with the Debian unstable -> testing -> stable philosophy? Dependency juggling is just one of the issues distro package maintainers have to wrangle with, that upstream maintainers typically don't care about - an upstream project can declare \"this version requires the latest glibc\", but distro packagers may have to patch around that because the latest version of glibc hasn't been through testing. reply Kwpolska 14 hours agorootparentWe ship a copy of bootstrap within our data files. They could just leave it as-is and have it working. Bootstrap is a CSS/JS library, there is no global /usr/lib to be concerned about. reply cassianoleal 14 hours agorootparent> because it was built on top of Bootstrap 3, but Debian only shipped Bootstrap 2 at the time in a global package > there is no global /usr/lib to be concerned about Aside from possibly the path being different, which is of no concern, how can the 2 above sentences reconcile with each other? reply Kwpolska 11 hours agorootparentIt is trivial to make the Bootstrap 3 global package install into a different folder than Bootstrap 2. It isn’t so trivial for shared libraries without different sonames, for example. reply sangnoir 14 hours agorootparentprevMost of HN who've been around know what Bootstrap is (rip, old Twitter). The same rules apply whether your package dependencies are .css, .js or .so reply WorldMaker 15 hours agorootparentprev> If that were was all there is to packaging - upstream developers could do the same job & have their CI/CD pipeline shoot out a .deb file. That's what some users seem to want today. It's why both Flatpak and Snap exist with the goals of letting upstream developers just CI/CD spit out a \"universal\" package for Linux and getting a more \"Mac-like\" (or \"Windows-like\" if you prefer) install experience with less waiting for package maintainers to get around to publishing upstream changes. Admittedly, Flatpak and Snap aren't universally beloved either, yet, but the balance of what the job for a distro's package maintainers should be is definitely in shift. reply g1sm 15 hours agorootparentprevHe wasn’t randomly messing with it, there was a bug report about this: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=953529 reply Kwpolska 15 hours agorootparentDoing it in response to a single user’s bug report from 2020 that does not provide any rationale other than “network access bad” constitutes randomly messing with packages. reply whoopdedo 15 hours agorootparentThe feature flag is put there by upstream. If they don't want to support non-network installs then why do they even have that lever? That said it probably makes more sense for Debian to package a `keepassxc-nonet` alongside the default `keepassxc` so end users can choose the variant. reply Kwpolska 15 hours agorootparentIf a user wants to build a hardened copy, they are free to do that. Distros should provide a version with standard features that are expected by end users. reply kiwijamo 4 hours agorootparentAs a Debian user I like how Debian just includes the basics in the main package and provides optional extras if you want them. I'm not sure how other distros handle it the other way around -- if the main package includes everything the risk is naive users install packages that include functions they don't need that end up exposing security issues. The Debian approach provides a reduced attack surface out of the box and if I happen to need something more its easy to just apt search ${package_name} and see what other extensions are available and install these. I do this regularly for PHP modules for instance if some PHP code complains a certain module is not available. It may not be your cup of tea but this is the Debian approach, and it makes sense from the perspective of a defensive user like me to keep things simple. reply int_19h 9 hours agorootparentprevThis kind of thing is one of the reasons why we have different distros. For Debian, it's actually common to provide a \"minimal\" package plus one or more versions built with different feature flags. reply netsharc 9 hours agorootparentprevI agree, it's also supremely obnoxious that upgrading a piece of software means losing a lot of functionality - unless the user knows s/he needs to replace the package with the -full version.. Wahey, isn't that what MS does with e.g. Outlook. Congrats Debian, you're reaching Microsoft's level! reply kiwijamo 4 hours agorootparentI agree that is unfortunate however I would argue the package should have been built that way in the first place. It's not the best thing to do now but better late than never. I wonder if the Debian maintainer would consider some sort of transactional package which brings in the new package if you had the original one installed. However, as someone who has used Keepass and did not realise it had all these extra functionalities, I think the assessment that most users will see no difference is ultimately closer to the truth than many people realise. I migrated away from Keepass specifically because I thought it had no network functions which makes all this drama especially ironic for a software that was marketed (at the time) as a password manager to keep on your own device and not someone else's machine. reply WorldMaker 15 hours agorootparentprevYou doubt that bug poster's \"belief\" that \"most people want\" that change? reply Am4TIfIsER0ppos 14 hours agorootparentprevRandomly messing with the code they package is the primary job of a debian packager. Which is how we get such great contributions from debian maintainers like the weak keys fiasco. reply kiwijamo 4 hours agorootparentIt can also work the other way around. When I install Apache on other distros I end up having to disable so many modules -- whereas the default Apache config in Debian is pretty watertight I never really have to mess around with modules. Likewise installing PHP only installs the core PHP module, you have to specifically install the extras. Other distros install everything including the kitchen sink. Needless to say, I'll take the Debian approach, warts and all. reply lannisterstark 16 hours agorootparentprev>Sorry, why do maintainers owe us anything? \"they're doing it for free, no one owes you anything\" is always the argument people make when someone does something reasonably dumb and they need to defend the maintainers/devs. They don't owe anyone anything, but people DO HAVE _REASONABLE_ expectations of them. reply fullspectrumdev 16 hours agorootparentprevPackage maintainer != Project maintainer. In this instance the maintainer of the Debian package for KeePassXC has unilaterally made a choice. reply kiwijamo 4 hours agorootparentWhich is pretty much what all other Debian package maintainers do. For Debian users it's expected they ensure the software they are packaging fits in with the Debian way of doing things. This is what Debian users want -- if they wanted all packages 'nude' with no changes applied there are other distros e.g. Arch that are much better suited. I personally tried other distros which tries to package as close to upstream as possible, and I was pretty surprised by the poor upstream defaults of many packages and lack of useful utilities. E.g. Apache is so much better packaged by Debian -- it wasn't until I installed Apache in Arch that I realised many of the useful stuff I used in Debian was actually Debian-specific. Most packages in Debian come with very good defaults that my \"setup\" script (i.e. install/configure packages) for my Debian machine is literallyThis is now our fourth bug report because of the decision to neuter the base KeePassXC package in Debian reply Arnavion 15 hours agorootparentUsers should ideally report bugs to their distribution, not to upstream. The distribution package maintainer then does triage to determine if the issue is specific to the distribution package or should be forwarded upstream. That's how it used to be in the past (and still is for enterprise distros because you might as well use the support contract you paid for). But lately users have gotten more savvy about talking to upstream directly, especially since more and more upstreams are now on easy-to-use websites like GitHub instead of mailing lists. That's still fine if users do their own diligence to ensure the issue is with upstream and not with the distribution package, but alas they don't all do that, leading to these spurious reports. reply cqqxo4zV46cp 14 hours agorootparentWhat’s your point? We all know why it’s happening. The reality is that it’s not to user expectations, which is bad. reply cjk2 16 hours agorootparentprevIt's not completely different. They patched stuff out. And I, as an end user, am absolutely fine with that, as a user of vim-nox package etc etc... reply riedel 16 hours agorootparentI thought from reading the bug report is that they only changed the default of a supported cmake build flag. I think that a keepass-nonet would have be a wiser choice, but I do not blame Debian people to be opinionated towards the more secure choice. reply alyandon 16 hours agorootparentprevvim-nox is pretty much full-featured vim without x11 stuff. Do you have a non-trivial .vimrc/.vim directory? Would you be accepting of the maintainer disabling a bunch of features and pushing those changes out under the main vim-nox package such that it breaks your existing install? Would it be reasonable to expect you as the end user to figure out what has happened and that you need to uninstall vim-nox and and install vim-nox-full? reply cjk2 15 hours agorootparentMy .vimrc is 8 lines. I learned not take the kitchen sink with me on holiday. reply yjftsjthsd-h 15 hours agorootparentprevBut vim-nox is a separate package with a clear name saying that it's got X removed; I don't think this would be nearly as controversial if they'd shipped a keepassxc-nonetwork package. reply joeyh 13 hours agorootparentvim-tiny is installed by default on debian (providing a vim command), and also has X removed. reply yjftsjthsd-h 13 hours agorootparentOkay? Calling it keepassxc-tiny would also be fine. I think it's relevant that `apt install vim` does not give you vim-tiny. reply naniwaduni 5 hours agorootparentprevYeah, I hated that too. reply thaumaturgy 16 hours agorootparentprevUsers should be asked if they actually wanted the features in the existing package after all? Why shouldn't users have been asked before changing the existing package? I'm one of those users. If I'm loud, does that mean my opinion doesn't count anymore? reply kasabali 2 hours agorootparent> Why shouldn't users have been asked before changing the existing package? They were. apt shows the NEWS file during update when there's a change. reply pessimizer 16 hours agorootparentprevIt never counted. You can suggest or advise, but you never had the power to tell Debian what to do. Being loud will not change that, no. You'll have to resort to persuasion. reply petee 16 hours agorootparentprevBut they already had a choice, since the removed options were disabled by default. This really just breaks core functionality that exists and is expected by real users, under the guise of unnamed security risks...theres plenty of disabled options in Linux that are \"potential\" risks, so its a silly choice. reply cjk2 16 hours agorootparentHyperbole! $ apt install keepassx $ apt install keepassx-full Choice made. reply petee 16 hours agorootparentChoice was already made when they installed it with xyz features available. If it was so important they never should have packaged it in the first place. -Minimal option is the obvious reasonable choice, unless trying to be an arse to make a point, since you're changing a users choice after the fact. Are we going to stop compiling sshd with plaintext pw options and root login, and suddenly? If a user has an option enabled you don't like anymore, notify them, don't blindly remove functionality and say \"your fault for not reading the changelogs\". Frankly the security claims ring more of hyperbole than anything reply kasabali 2 hours agorootparent> If a user has an option enabled you don't like anymore, notify them, don't blindly remove functionality and say \"your fault for not reading the changelogs\". apt shows the NEWS file during update when there's a change. These users not only have chosen to actively ignore the warning that has been shown to them by default, they've also chosen to directly go to upstream to complain instead of first their distributions channels. reply jdbernard 15 hours agorootparentprevLet's say that I had the previous version of keepassxc installed and used a Yubikey to protect it. Now when the distro updates, through no actions of my own, I will be locked out of my password DB because the Yubikey extension is no longer compiled in to the version of KeePassXC the distro is shipping under the original name. Yes, this breaks core functionality. How is this a good thing? reply pessimizer 16 hours agorootparentprev> If both upstream and a significant portion of users strongly disagree with a maintainer's judgement, then how is their role as maintainer justified? By their making the decision they think is best and that agrees with the philosophy of the distribution they're maintaining the package for? I'm glad they don't have to justify their existences to upstream and every \"significant portion[...] of users.\" > It's KeePassXC's job to secure the software and produce features that fulfill users' needs as they see fit. You don't control free software after you've licensed and distributed it that way. The entire point of the concept is to make calls like this about anti-features. KeePassXC can feel free to comment on it, like anyone else. They can demand that Debian make available the modified sources. They can revoke any license to the use of trademarks. That's it. If users only want to deal with KeePassXC, they can compile it themselves or use a portable version. If KeePassXC wants to deal with Debian users directly, they can host a package repository for their canonical version. reply cycomanic 15 hours agorootparentprevThe justification is absolute rubbish. I The argument is that it reduces attack surface, but compared to what, the alternative to including the yubikey code is not using a yubikey, which reduces security. The alternative to using the browser integration (or the ssh agent) is to use the clipboard, which is likely more code and definitely less vetted code. By the same argument we should remove encryption as well, because it increases the amount of code and thus the attack surface. reply undersuit 14 hours agorootparent>the alternative to including the yubikey code is not using a yubikey, which reduces security. The physics of someone cracking my passphrase and the physics of someone cracking my Yubikey are both in the boil the oceans amount of energy. I'm fine not letting a usb device masquerading as a keyboard have access to my password database. Remember: \"When you lose your YubiKey or someone else gets access to it, your database is not secure anymore.\" reply lawn 14 hours agorootparent> When you lose your YubiKey or someone else gets access to it, your database is not secure anymore. You don't store your password on the YubiKey, you use it as a second factor in addition to your password. Do you know what a YubiKey is when you argue against it? reply undersuit 11 hours agorootparentYou can add different kinds of authentication to your password safe. I use a password and a key file. You can use just the Yubikey just like you can also have no encryption applied to the password safe. reply valicord 13 hours agorootparentprevWhat is the physics of someone sniffing your passphrase with a keylogger? reply undersuit 11 hours agorootparentThe same as someone sniffing the Yubikey communications. reply valicord 11 hours agorootparentexcept yubikey communications are not static, so unlike password, sniffing it doesn't allow attacker to open all future versions of the db reply tdb7893 16 hours agorootparentprevHaving things named the same across platforms but with significantly different features is a usability nightmare. They even created a package that does have all the same functionality but named it something different, if you're gonna change the functionality from other platforms then that's the one that should have a different name. reply winternewt 16 hours agorootparentprevYou can do all that and still honor the points of the parent comment though. I agree that it's poor etiquette to make intrusive changes and hold the original author accountable for them. reply dataflow 16 hours agorootparentprev> The role of a maintainer is more than copying and pasting upstream They can do that... under a name that doesn't mislead people. Is that so hard? reply Gud 16 hours agorootparentprevThey should not alter basic functionality. Their sole job is to make the software work on their platform. I would be pissed if a FreeBSD package was some non-standard configuration. reply JeremyNT 15 hours agorootparentprevMaybe Debian maintainers consider it their role to do this, but that's absolutely not true in other distributions (e.g., one reason I use Arch is to avoid such tinkering). Down this road lies problems with incompatibilities and new bugs that are distro-specific. As a user it defies my expectations to have software modified to remove functionality and retain the same name. This is a bit too opinionated for my tastes. reply rcxdude 11 hours agorootparentThis. As a user and a developer I've had more than a few run-ins with a distro deciding to be a bit different, usually with no very weak justification (pedantic interpretations of some standard, attempts to make something 'neat', or just random changes that someone thought would be cool). Debian is especially bad at this, Arch tends to be better but they've also done some stupid things (python-as-python3 being a thorn in so many developer's side for years). reply Dah00n 16 hours agoparentprevThey didn't \"gut what upstream built\". He published it without plugins and made a -full version that include plugins. If plugins are plugged in as default it isn't a plugin but a built-in feature. This is the correct way. reply TehCorwiz 15 hours agorootparentThey're not \"plugins\". They're compiled in features. The Debian maintainer changed one compile flag and turned off these feature which are disabled by default in the UI anyway. And changing the compile flag didn't remove the options that enable the features from the UI. So, users are very confused why the features they're trying to use don't work. Further, what happens to existing users who had these features enabled and relied on them? EDIT: link to a KeeppassXC maintainer explaining that they're not plugins: https://github.com/keepassxreboot/keepassxc/issues/10725#iss... reply password4321 9 hours agorootparent> changing the compile flag didn't remove the options that enable the features from the UI Hopefully this will get fixed reply NewJazz 10 hours agorootparentprevIsn't this something that Debian can do during upgrades, though? Like sure there is breakage, if you don't read the news before upgrading major versions. reply tdb7893 16 hours agorootparentprevDefault plugins is a very common pattern and often what users want. There can be technical reasons but also for common features it's way to have them as opt-out instead of 99% of people needing to opt-in to the same stuff reply bananenpubs 16 hours agorootparentprevHe published it w/o core package functionality. There are no plugins with KXC, that is one of their main arguments: don't rely on 3rd party code, bring it all inhouse, where it can be checked / maintained. reply out-of-ideas 3 hours agoparentprev> Gutting the functionality that upstream has built into a piece of software and then publishing it under the same name is dubious at best reminds me of busybox's implementations of: bash, sed, awk, ect and similar situations when folks go and ask 'how something-in bash works' then 'it doesnt work' all because of macos bash vs gnu bash, and forever on the battle goes with naming. reply BLKNSLVR 10 hours agoparentprevIsn't this just FOSS working as intended? There are lots of distributions other than Debian. reply rfoo 16 hours agoparentprevOh no, xscreensaver or GNU Parallel flame war once again. reply kragen 9 hours agoparentprevlots of debian packages are compiled without some compile flags that enable optional functionality; emacs, for example, comes in emacs-nox, emacs-gtk, and emacs-lucid, the last two of which use two different x-windows toolkits to give emacs a gui. (it's nice to not have to install a gui environment in order to have a text editor, see.) vim similarly has vim-tiny, vim-nox, vim-motif, and vim-gtk3 versions in this case it seems like the debian maintainer moved optional functionality that was opening security holes to the keepassxc-full package, and the keepassxc maintainers are lying about it by saying that he has 'decided to remove ALL features from it' in https://github.com/keepassxreboot/keepassxc/issues/10725 the debian maintainer explains: > It is our responsibility to our users to provide them the most secure option possible as the default. All of these features are superfluous and do not really belong in a local password database manager, these developments are all utterly misguided. > Users who need this crap can install the crappy version but obviously this increases the risk of drive-by contributor attacks. and yeah i really, really do not want my password manager to by default communicate with random web pages. that should be opt-in functionality and always should have been. given that it wasn't, there's no good option, but this is the least bad one one of the great benefits of free software is that it makes it hard for misguided or malicious maintainers to push antifeatures on users, because the users can always use somebody else's version of the software, for example, debian's or f-droid's. trusting debian to prevent shenanigans like the keepassxc team's is my biggest reason for using debian instead of something else reply moqmar 2 hours agorootparentSo the Debian maintainer complains about the upstream project (which they decided to maintain the package for) bringing \"crap\" and having \"utterly misguided\" development? And somehow people say that this is the reasonable person here, basing a major change of a software's featureset on such an opinion? Independent from whether the original change is good or bad, so much of what's wrong with Open Source is people trying to work against each other instead of together... reply kragen 2 hours agorootparentwhat leads you to suspect he's wrong? from the quotes in your comment i suspect it's his choice to use plain language and openly disagree with others. in my experience that's how trustworthy, competent people talk people working together successfully in free software doesn't depend on them having the same values or getting along or wanting the software to do the same thing. it just depends on being clear and open about what the software does and doesn't do, and using licenses that keep them from suing you for distributing versions without their preferred features or antifeatures. remember that this is the movement that not only includes richard stallman but was founded by him. if it depended on getting along it never would have left the cradle reply LightFog 10 minutes agorootparentI guess you missed the bits on Mastodon where the package maintainer simply didn’t bother reaching out to the upstream whatsoever because he was ‘too busy’ and would only do so over a particular IRC setup. That’s not competent or good faith maintenance. reply netsharc 9 hours agorootparentprevYour points are valid, but doing a switcheroo of someone's software is the stupid part... You say you trust Debian, but until this update, they've been allowing those horrible horrible shenanigans, on your system! Would you trust a security guard who for many years didn't notice a part of the building he should've checked for unlocked doors, until someone pointed it out to him? reply kragen 8 hours agorootparentit's a question of degree. i'd trust him more if he'd been checking it all along, but i'd trust him less if he decided that he shouldn't start checking it even after it was pointed out debian has made much worse security mistakes than that; i personally danced tango at debconf with the debian maintainer who introduced the openssl bug, which is arguably the worst computer security hole in human history basically the social practices of software development make computer security unattainable at any cost. we can try to improve that situation, but for the time being, debian is close to the best there is, even if it's not openbsd or sel4 reply zer00eyz 16 hours agoparentprevIF apple said \"hey we edited your app because we think its more secure\"... People would have torches and pitchforks out. But a deb maintainer does it and there is debate? If there was a security issue then the insecure version should NOT be available. But again this is not the case. In an App Store world, the role of mainainter has to change. The job is to make the software work with the distro, not keep the name and make some pseudo fork because you want it to be another way. reply int_19h 9 hours agorootparentDebian does this all the time. There are thousands of .deb packages that are built with patches. In this case, though, it's not even a patch - it's a build flag that is provided by upstream. reply Vegemeister 7 hours agorootparentprevI've visited the App Store world, and my experience was that, weighted by how often packages appear in search results, the median is charitably described as \"potentially unwanted\", and honestly described as malware. reply temac 16 hours agoparentprev> If they want to go this direction they should publish as a fork under a different name so upstream doesn't get constantly barraged by complaints of users having issues. What are you talking about? This is an upstream build option. Has upstream forked itself by providing this option? reply ErikBjare 15 hours agorootparentThat seems entirely fair to me. reply theamk 17 hours agoprevLooks like pretty reasonable decision to me - network features and browser integrations are huge potential holes / exploit entry points. And without network-related features and only running the trusted databases, the tool should be impossible to exploit even if exploits are found, which is a very desirable trait for something as important as password manager. Even original maintainer agrees [1]. Remember, the full network-enabled package is present in debian as well - so all the network features are \"apt install keepassxc-full\" away, for users that want it. Two minor comments: calling your upstream \"crappy\"[0] is probably not the most productive way for package maintainer to act. Also, I am not sure if the package names (keepassxc vs keepassxc-full) are best for Debian users - something like keepassxc-lite and keepassxc-full might be more informative. [0] https://github.com/keepassxreboot/keepassxc/issues/10725#iss... [1] https://github.com/keepassxreboot/keepassxc/issues/10725#iss... reply arp242 16 hours agoparentLots of things are a huge potential hole and/or exploit entry point. Lots of these things are also useful. And \"being useful\" can increase security because if password managers are hard to use then people stop using them. And looking at this a bit more, it's not clear to me that using the clipboard is necessarily more secure than the browser integration. Copy/paste accidents alone would offset quite a bit of the security footprint of a browser integration. Many years ago I did some contracting for a fairly large company.[1] The laptops of their account managers had a disk encryption passwords, Windows login password, and AD login password. They all had to be different. They all had to be changed every few months. They all had \"must contain at least two capitals, at least 4 non-letter/digits, and at least one 11 digit prime number\"-type requirements. Every single laptop I ever saw had a post-it note with all three passwords. Without exception. My point here is: hypothetical security nerd security does not equal actual real-world security. Or at least not always. There are real trade-offs to be made here. [1]: We did some maintenance of the laptops as an external contractor for some of the guys. They weren't really supposed to, but it was tons faster and easier because less bureaucracy, as doing it by their own IT system took forever. It was that type of company. This, on its own, was of course also a \"security risk\" because random tech guys from a computer store shouldn't really be on their laptops with super-secret company data (I don't think there wasn't that much to protect, other than sales/customer numbers which is only useful for a very select group of people). reply Arnavion 17 hours agoparentprevThere's one way in which browser integration improves security vs not using it, which is that the browser extension checks the page URL before filling in the credentials, while the approach of manually copy-pasting credentials is vulnerable to typo- and homoglyph-phishing. reply JeremyNT 15 hours agorootparentThis is essential to my own usage of KeepassXC. I never copy/paste from it into a browser and appreciate having this first line defense against phishing. reply tuetuopay 15 hours agorootparentprevThis. So much this. I don't even understand how browser integrations are not universally thought as a core part of a password manager. With all the phishing that's going along, it's really the last line of defense. Oh and I'm not only talking about elderly relatives and such. Modern phishings are very very well made, and there's one going on to steal Steam accounts that I would have likely fell for (and I consider myself pretty good on the matter). reply nulld3v 14 hours agorootparentI'm replying just to +1 this as well. This has saved me multiple times not from phishing attacks but from simple mistakes such as entering a password into a HTTP page when the website supports HTTPS. Often I'm just browsing along and try to get KeepassXC to autofill a password only to be frustrated when it refuses to work. Then the frustration turns to relief when I go into KeepassXC and see that I've entered \"https://website.com\" into KeepassXC's URL box causing KeepassXC to only autofill the password on the HTTPS variant of the website and I was on the HTTP variant of the page. Obviously it's best for the website to just setup HSTS, but I can't fix that for them. I previously used auto-type and always thought browser extensions were insecure until I realized this. reply accoil 13 hours agorootparentIt's not like the clipboard is secure either. Any arbitrary app can listen to the clipboard in X11, and while it seems harder in Wayland, I'm not sure if I've ever seen a clipboard permission dialog (my Wayland experience is limited though). Turning off the browser intergation means that the user may accidentally auto-type into the wrong website. Turning off auto-type means that external applications can see the password. reply Arnavion 11 hours agorootparentWith Wayland, the compositor gets to decide which clients to send the \"clipboard data available to paste from this file descriptor\" event to (wl_data_offer). For example the compositor might only send it to the client whose window is currently focused. So clients that don't receive this event would not have the fd to be able to read from it. Clients that do receive the event can read that data without any restrictions. That said, this ends up also making this like clipboard managers or wl-paste not work, so there is a wlroots protocol (wlr_data_control) that lets the client know about all data offers. How is a malicious process prevented from being a client of this interface (or even should a process be prevented...) depends on the compositor. reply strken 10 hours agoparentprevI agree that network features and browser integrations are huge potential holes, but the contributors on the GitHub issue make a very good point when they say that there's minimal testing of the stripped-down build in comparison with the full build, and no testing at all of random combinations of build flags. As noted elsewhere, one of the \"optional\" flags that got disabled is yubikey support, without which users are getting locked out of their password manager when they upgrade to the new, broken package. Enabling just that flag puts the project in a state which nobody is actually testing. I agree that calling the package keepassxc-lite would have prevented this issue, assuming existing users were moved to keepassxc-full, but that's the entire problem here! It's a reasonable choice to default to the most secure solution (not that hypothetical attack surface is a real vulnerability), but as a maintainer you shouldn't break existing functionality unless either upstream or your users want you to, and you particularly shouldn't lock users out of their password manager. reply kasabali 2 hours agorootparent> make a very good point when they say that there's minimal testing of the stripped-down build in comparison with the full build, So they should be thankful their software will have better test coverage thanks to Debian users reply worble 16 hours agoparentprev> calling your upstream \"crappy\"[0] is probably not the most productive way for package maintainer to act This is so incredibly rude to post on the github it'd make me reconsider using Debian at all if I did. If the package is so full of \"crappy\" features why is he even bothering to maintain it? Just get rid of it and let users figure out how to install it properly themselves. I feel bad for KeepassXC devs, maintaining an open source project is hard enough without having to deal with crap like this. reply NikkiA 7 hours agorootparentTBF he's a canonical employee, not a debian employee, he's paid to maintain Ubuntu packages, but volunteers for the debian ones, so I'd be more side-eyeing Ubuntu first. But then I gave up on debian a while ago because of some of their more questionable decisions. reply bdd8f1df777b 5 hours agoparentprevI see this kind of mindset often--if we remove the features useful but not perfectly secure from users, we can protect them from such insecurity. But this mindset is wrong. What happens instead is that users will fulfill their needs in even more insecure ways. reply charles_f 17 hours agoparentprevHe removed not only networking but support for yubikey, and autotype. These are all features that are turned off by default. reply kiwijamo 4 hours agorootparentIf it's turned off by default, then please explain the drama. This simple statement makes this drama look like a storm in the proverbial teacup. reply skjoldr 2 hours agorootparentIf I have both enabled in my install, which I specifically chose to, then upgrading the package locks me out of my database, because those features are not compiled. reply kasabali 2 hours agorootparentJeez, then you simply install the keepassxc-full package and move on. It's not like you store your sudo password in keepass database, too. reply abdullahkhalids 16 hours agorootparentprevCan someone make a security related case for disabling autotype? reply NikkiA 9 hours agorootparent\"If hit by mistake it might autotype in a window that is not at a login prompt, but maybe on a chat session and broadcast the user's password\" It's horseshit, but it's an argument lets see what it does here... NikkiA edit: well, I guess it didn't broadcast the password, but it probably would have done on a real chat window that accepted multiple lines of input reply abdullahkhalids 5 hours agorootparentThat's actually reasonable. I use keepassxc, and I have messed the autotype many times. But I mean, that is not an argument for disabling the feature. reply rendaw 4 hours agorootparentprevI'd assume it would only put the password in a type=\"password\" input, not a random text box. reply charles_f 14 hours agorootparentprevYeah that makes no sense, if anything I'd keep autotype and prevent copy password reply bananenpubs 16 hours agorootparentprev> and autotype I would go crazy w/o autotype. The way the IT dorks were forced by management to set up 'SSO' via an external provider at work, you have to enter the same information at least 3 times a day. 'SSO' for management means 'sign into each of our tools each single day'. Muh, no work done equals better security! reply dabacaba 13 hours agorootparentUsually SSO means that you have to login just once to access all of your accounts. If it requires you to login multiple times a day then something is not configured correctly. reply VonGallifrey 6 hours agorootparentWell... at my current employer, we have 3 \"SSO\" providers. By that, I mean three different Okta logins, and logging in to any of them will log you out of the other two. If I want to do anything, it means I need to log in again because it is unlikely that I am logged in to the right account. Yes, I need all 3 multiple times daily. There is no logic about which one I need for which system. IT knows this is not how it is supposed to be, but they assure us that this is a temporary situation. I guess 1.5 Years is still temporary. reply unethical_ban 4 hours agorootparentprevI'm in info sec and I agree with you. cyberArk weekly password rotation, no ability to save passwords in Edge, no ability to install a password manager. Guess who keeps their password saved in notepad, all but three characters? reply Dah00n 16 hours agorootparentprevThey are not \"features that are turned off by default\" but plugins that are now actually plugins and not built-in features that are turned off. Why on earth would they include plugins that aren't plugged in as a default? How anyone could see a smaller attack surface as a bad thing on HN baffles the mind. Could he have made a -minimal version? Sure, but the default version should be the clean, secure, without plugins version so he did the right thing. reply ziddoap 16 hours agorootparent>How anyone could see a smaller attack surface as a bad thing on HN baffles the mind. Because in the real world, with real users, you must balance security and friction. If you have too much friction, users look for workarounds and your theoretical security increase becomes a real world security decrease. For a real world example of this phenomenon, see forced arbitrary password changes (which are now universally discouraged). They are theoretically more secure, but study after study has proven that, in the real world, forced arbitrary password changes reduce organization-wide security. Security requires a holistic approach. Users and their behaviors are part of that. Looking only at attack surface is a sure-fire way to make your users work against your security policies rather than with. reply fallingsquirrel 16 hours agorootparentprevWhy does everyone keep using this word \"plugins\"? Quoting the developer: > You fundamentally misunderstand our program when you use the word plugin. These are built in features, not plugins. The features can be enabled as desired by the user and they come disabled by default. This change to not compile and ship these features in the base keepassxc package does nothing besides create angry (or confused) users. reply arp242 16 hours agorootparentprev> How anyone could see a smaller attack surface as a bad thing on HN baffles the mind. Because if it removes features many (perhaps even most) people use then that makes it less useful. And potentially insecure as people will stop using KeePassXC and replace it with \"passw0rd123\", because \"I really need to get this done now, and not fuck about with KeePassXC not working\". Is there even a message? Or any indication in the UI what's going on? I don't think there is. Here's what should have happened if you really think that \"keepassxc\" package should install a minimal version: contact maintainers of KeePassXC, discuss best way to do this, maybe allow them some time to create better UX on this. Maybe create a PR or two. And then change your package. That Debian bug was 4 years old – it could have waited a month or two more. You're also far too hung up on the word \"plugin\". That word has tons of meanings, and the original meaning of \"something optional I can add (plug in) later on\" doesn't really apply here. reply uriah 16 hours agorootparentprevCompile-time flags are by definition not plugins. All optional features were removed indiscriminately. reply zer00eyz 16 hours agorootparentprevYour conflating PLUG IN technical term with PLUG IN from a users perspective. No one was really friends with tom on myspace. reply pitaj 17 hours agoparentprevUsing the term crappy made me immediately lose respect for julian-klode. reply jdbernard 14 hours agorootparentParticularly of features that users depend on. It really leaves the impression that he thinks very little of debian users. reply kiwijamo 4 hours agorootparentFeatures that according to your GP was disabled by default. And according to others in this discussion thread, disabled by default in the upstream also. reply redserk 17 hours agoparentprevI'm not sure I really agree here. If there's fundamental concern for the security of a software package, why package the software? What's stopping a malicious actor from including malicious network code outside of the compile flags? reply josephcsible 17 hours agorootparentThe concern here is accidentally vulnerable code, not malicious code. reply redserk 16 hours agorootparentIntentionally malicious or accidentally vulnerable, vulnerable code is vulnerable code. Disabling compile flags on functionality doesn't necessarily guarantee you're any more secure, especially if the software isn't regularly tested without those flags. reply theamk 15 hours agorootparentSure it does. If the software (1) only ever used on trusted data (2) never makes network requests, then even with most vulnerable libraries, it simply cannot be exploited. But features like \"fetch favicon from untrusted websites\" open huge security holes in case there are ever bugs in http or image libraries. (note that in case of local compromise, it does not matter if keepass is secure or not - the attacker can install keylogger, inject code into process or replace it altogether) reply redserk 14 hours agorootparent> If the software (1) only ever used on trusted data (2) never makes network requests, then even with most vulnerable libraries, it simply cannot be exploited. You're assuming the flags remove all of the whats-deemed-as-risky behavior. Trusting the flags from the lens of wanting to trim down a package size? Reasonable. Trusting the flags from the lens of wanting to boost security? Eh... Crafting a security policy based on compile flags requires a lot of trust towards the developer of the code or spending a lot of time auditing these compile flags. I just don't see the logic in wanting to simultaneously avoid trusting the code while also placing an enormous amount of new trust in the code's post-compile behavior. > But features like \"fetch favicon from untrusted websites\" open huge security holes in case there are ever bugs in http or image libraries. Image support is still built in, though. You're still susceptible to the vulnerable image library. Just because you're now pulling the images by hand doesn't make it any more secure. With these concerns users should be considering some form of sandboxing. Whether it's tossing the package in a network-restricted container, VM, or separate device. This is very close to dogmatic security theater. reply theamk 11 hours agorootparentI am not worried about xz-style intentional backdoors. I am worried about unintentional bugs which end up being remotely exploitable. So while making sure the image library is bug-free is practically impossible, it is pretty easy to check for compile-time feature flags. Build it once, then ldd to make sure the http library is not linked. Or check debug messages. Or objdump and make sure method is missing. Tons of very simple methods. From this standpoint, disabling favicon fetching is a 100% effective mitigation for all remote attacks. I've never bothered uploading favicons by hand, and I've never needed any images in my notes. No security theater, just a pragmatic view. reply redserk 10 hours agorootparentYet how many people are checking what libraries are being linked on every compilation? CMakefiles are susceptible to bugs too. KeepassXC could also very well remove these build flags and people would be none the wiser. As I said, concerned users should look at other ways to isolate the application’s behavior here instead of relying on the build process. Run it in an isolated network namespace if network connectivity is the prevailing concern. reply mikl 10 hours agoparentprevWhether his changes are good or not, it’s still pretty crazy to essentially fork an open source project, but publish your very different version under the same name. reply globular-toast 51 minutes agoparentprevIndeed. I use Gentoo and one of the best things is being able to easily switch off features in individual packages like this (or across the whole system, like systemd or X11, for example). But what can a Debian user do? If they're going to build one binary and make it the default it should be the most secure version, not the most featureful. The keepassxc account is being ridiculously sensationalist. Removing ALL features? Lol reply n3storm 17 hours agoparentprevWhouldn't be less surprising to publish full app as keepassxc and the other packages be named as -localonly or -partial or -secured or -local-and-secured ? reply jeffalyanak 16 hours agoprevI think the solution suggested by drawks seems clearly the correct choice: > I think the proper solution would probably be to package both a \"-full\" and \"-minimal\" version of the software and utilize Debian package meta-data fields to define a Conflicts relationship between the packages and tag them also both with a Provides for keepassxc and also add a tag Replaces: keepassxc to the -full build so that during a package upgrade an existing user would be provided the version that continues to provide the features of the package which is being upgraded/replaced while new users can choose for themselves which of the versions they'd like to install https://github.com/keepassxreboot/keepassxc/issues/10725#iss... Why would this _not_ be the obvious choice? reply rfoo 16 hours agoparentBecause maintainers have an opinion and explicitly wanted to change the default. reply GorsyGentle 7 hours agorootparentPerhaps, and that's not unreasonable in and of itself. But to do so in such a user-hostile manner? That's a bit over the top. A new minimal package, advertising it, and only then eventually making it the default would have been far, far more effective. If an engineer of mine pulled this on our user-base I'd have them reverting it in a heartbeat regardless of the technical merit. They already failed just in how they executed this and have burned good will, the technical merits no longer matter. Once you've lost the faith and trust of the user, it's over. The original request[0] was more or less simply a user asking for the networking to be removed, and follow-up to just have a -nonetwork variation. Instead, we have comments from the debian maintainer: The OP report: > Users who need this crap can install the crappy version but obviously this increases the risk of drive-by contributor attacks. The debian package description[1]: > See keepassxc-full if you absolutely need those. The PR[2] > Feature creep like SSH agent support, browser integration, Freedesktop.org secret storage, KeeShare pose undue risks for most users. Each one of these sends a message. And it was entirely avoidable with a bit of grace and kindness to the existing userbase. [0]: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=953529 [1]: https://packages.debian.org/sid/keepassxc [2]: https://salsa.debian.org/debian/keepassxc/-/commit/7d6d16e3f... reply kasabali 1 hour agorootparent> user-hostile manner This isn't user hostile. You know what'd be user hostile? Removing the functionality and not providing the -full package alongside. reply LightFog 4 minutes agorootparentIt is. The software has been broken - the UI wasn’t designed with those toggles in mind so now users suddenly have non functioning features presented to the in the UI. The argument the all users should be keeping up to speed on NEWS - especially in the stable channels this will end up in - to explain why their UX is suddenly broken is not exactly ‘user friendly’. reply rfoo 1 hour agorootparentprevYeah, I agree with you. I'm joking that KeePassXC developers should make parsing .kdbx an optional feature (that's an attack surface by itself for sure!) and see whether Debian package maintainer enable it or not. reply jeffalyanak 10 hours agorootparentprevThat does allow you to change the default for users installing the packages and while ensuring that users who already have it installed don't lose functionality during an upgrade. reply DDiggler 15 hours agoprevMeanwhile in Arch land (possibly other distros as well), the fwupd package (which I imagine to be a fairly common package to be installed among the user base) has been silently configured to depend on passim, which spins up an open web server on 0.0.0.0:27500[1] without any(!) explicit user consent whatsover. Passim then uses GnuTLS, which is famous for containing more holes than Swiss cheese [2][3]. Absolutely insane to me, and I would not be surprised if there's an xz type of exploit hidden somewhere in the chain. [1]: https://github.com/fwupd/fwupd/issues/6721 [2]: https://news.ycombinator.com/item?id=7347500 [3]: https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=gnutls reply 1oooqooq 10 hours agoparentwhy fish for fwupd? systemd-resolved which is everywhere, will open (at request) an LLMNR server (a.k.a. mDNS, nee microsoft netbios) on port 5355. With IoT everyone have access to your LAN, so now people are making sure linux also join the REDACTED party btw, fix for fwupmdg, since they have a low quality default conf file without commented out defaults: ``` # /etc/fwupd/fwupd.conf [fwupd] P2pPolicy=none ``` fix for resolved is commented out on /etc/systemd/resolved.conf `LLMNR=no`, and you probably also want `DNSStubListener=no`. heck here is a good default ``` # /etc/systemd/resolved.conf [Resolve] DNS=9.9.9.9#dns.quad9.net 149.112.112.112#dns.quad9.net 2620:fe::fe#dns.quad9.net 2620:fe::9#dns.quad9.net FallbackDNS=127.0.0.1 ::1 Domains=~. DNSOverTLS=yes LLMNR=no DNSStubListener=no ``` reply AceJohnny2 8 hours agorootparent> mDNS, nee microsoft netbios veering offtopic: I always thought mDNS was an Apple thing, since Bonjour is the most extensive implementation of it (and Windows sucks at it. In fact the only way I found to get a full mDNS implementation on Windows a few years ago was to install Bonjour via an installer extracted from iTunes for Windows). The Wikipedia page for mDNS [1] doesn't have a lot of history information, saying just that the idea of mDNS was first proposed by Bill Woodcock & Bill Manning to the IETF in 2000, and neither seem obviously tied to Microsoft. Apple later published Bonjour in 2002, and mDNS only became an official rfc6762 in 2013! [1] https://en.wikipedia.org/wiki/Multicast_DNS reply 1oooqooq 8 hours agorootparentprevlooking at the fwupmgr code. The client uses DBUS to ask the server how many bytes were download from your LAN peers (unless you connect your device directly to the internet, then i guess i will show how many bytes ssh probes downloaded from you, inflating their numbers and making them more aggressive on the server feature) https://github.com/hughsie/passim/blob/ae38c13da1a63fff8c8fa... https://github.com/hughsie/passim/blob/ae38c13da1a63fff8c8fa... also, note the quaint code to tell how much carbon it saved earth. edit: interestingly, if you search for that data collection method name, both ddg and google only find the call from fwmgr side. the actual one, older, from passim code is not shown anywhere https://duckduckgo.com/?q=\"passim_client_get_download_saving... but it's there https://github.com/hughsie/passim/blob/ae38c13da1a63fff8c8fa... reply workethics 14 hours agoparentprevGood to know. I think this should probably be it's own post reply 1oooqooq 8 hours agorootparenthttps://news.ycombinator.com/item?id=40322408 reply jchw 16 hours agoprevConsidering it would be completely possible to make this distinction without breaking existing users, it's difficult to see this as anything other than a bad decision by the Debian package maintainer. While having the ability to have KeepassXC without networking features is certainly nice, considering the browser integration to be a niche feature is just severely out of touch; I would be willing to place real money on betting that more than half (probably well over half) of users of KeepassXC in Debian today want features that will be surprise-disabled because the maintainer chose a way of doing this that would break existing users to impose their opinion. It is ultimately their decision to make, but that doesn't mean it is a good one, I contend it is not. reply 0x_rs 16 hours agoprevI would like to believe package maintainers should operate under a principle of least astonishment and not disable core features (and not plugins, despite currently 25 entries of that word in this comment section) unless there's a documented or at the very least probable risk, none of which seem to be the case here. KeePassXC has many features but none that would on their own, and without explicit user intervention, be a likely source of vulnerabilities. The browser integration must be toggled on before you can even set it up, likewise for (I believe) every other function disabled with this flag, so a -minimal package may have been more appropriate. The small subset of users that could benefit in some indeterminate future from this change must be incredibly small, while it's going to be a serious annoyance for anyone using the browser integration, a function that's generally far safer than clipboard access. It also doesn't feel in line with the project's vision: Our goal is to create an application that can be used by anyone while still offering advanced features to those that need them. reply PlutoIsAPlanet 17 hours agoprevIMHO is a downstream maintainer is going to change a package in a way that doesn't have the intent of the upstream project, it should be published under a different name and that maintainer deal with all bug reports caused by their modified version. reply yencabulator 16 hours agoparentThe default build is networking OFF. Same for Yubikey, browser integration, etc. -DWITH_XC_NETWORKING=[ON|OFF] Enable/Disable Networking support (e.g., favicon downloading) (default: OFF) https://github.com/keepassxreboot/keepassxc/blob/develop/INS... reply donio 17 hours agoparentprevThe WITH_XC_NETWORKING build option is off by default so the developers have obviously intended this to be a valid build configuration. reply fallingsquirrel 17 hours agorootparentSure, but that doesn't change the fact that a point release suddenly broke everyone's workflows and is causing maintenance headaches. I don't think the technical minutia of how exactly things were broken is the issue. If Debian shipped a Linux kernel point release that disabled networking I think people would be similarly upset, even though it's also just a build option and intended to be a valid build configuration (and would even more secure!) reply kasabali 1 hour agorootparent> that doesn't change the fact that a point release suddenly broke everyone's workflows BS. This change was in Debian sid/testing. That's what it's for. Debian stable users' workflow hasn't been broken. reply Dah00n 16 hours agorootparentprev>If Debian shipped a Linux kernel point release that disabled networking That is not comparable. \"If Debian shipped a Linux kernel point release that removed a risky networking plugin and some disabled-by-default plugins and made a -full version\" that would be comparable. reply MatthiasPortzel 15 hours agorootparentIt’s exactly comparable. The browser-autofill functionality in KeyPassXC is not a plug-in and it’s not risky. The person saying that is the Debian maintainer. reply nulld3v 15 hours agorootparentprevHmm, excluding the comment about the missing \"-full\" version, I don't see how it is not comparable. There is nothing that makes the networking code in KeepassXC more \"risky\" compared to the networking code in Linux. reply JohnTHaller 17 hours agoparentprevEither that or it should indicate to the end user that it's an unsupported package. Maybe showing up as KeePassXC-Debian or KeePassXC-Unsupported and have the developer's contact details (website etc) removed from About and replaced with the Debian details for support. A downstream maintainer making small changes to fit within the OS that doesn't meaningfully affect the app is fine. A downstream maintainer modifying an app and removing core functionality so the upstream dev gets a ton of grief is not. reply yjftsjthsd-h 15 hours agoparentprev> and that maintainer deal with all bug reports caused by their modified version. I appreciate that it often doesn't happen, but that's supposed to be the default flow regardless: If you're using a distro-provided package and hit a bug, you're supposed to open a bug report against the distro package, and then the maintainer looks at it, and if the bug came from upstream then they file a bug with the upstream project. This is helpful because 1. the package maintainer is probably familiar with the package and can provide initial triage/analysis, possibly even being able to fix the bug outright before going upstream to share the fix, and 2. as you note, distro packages frequently carry some amount of patching and the maintainer should verify whether the bug is in their packaging or the upstream source code. Unfortunately, many users default to reporting upstream first:( So in practice this is a concern, but it's really not supposed to be. reply bananapub 17 hours agoparentprevnot sure why you're commenting without even reading the linked 200 character post? the maintainer has enabled all plugins (including network stuff) in the keepassxc-full package, the keepassxc package will be just the basics with a much better security posture. that's obviously completely fine and completely within the remit of a maintainer, the entire complaint is about this being a change. reply nulld3v 17 hours agorootparentBut that's not what they disagree with. They are saying you shouldn't have a package called \"keepassxc\" if it is missing a ton of features from upstream KeepassXC. You should name it something different instead. So you shouldn't have \"keepassxc\" and \"keepassxc-full\". Instead you should have \"keepassxc\" and \"keepassxc-minimal\". reply vlovich123 17 hours agorootparentBut it’s a valid build configuration option provided by upstream. Not sure I follow this line of reasoning. reply nulld3v 17 hours agorootparentSure, I think that's a reasonable stance. If upstream agrees that such a configuration is a valid distribution of KeepassXC and can be branded KeepassXC, then that's up to them. I would probably disagree with upstream in that scenario just from a UX perspective, but I would understand both sides. But in this case, upstream has responded and clearly indicated that they do not want the minimal distribution of KeepassXC to be branded as the main \"keepassxc\" package: https://github.com/keepassxreboot/keepassxc/issues/10725#iss... reply JohnTHaller 17 hours agorootparentprevThe default package should be named keepassxc-debian-limited or similar and the proper package should be keepassxc reply hi-v-rocknroll 4 hours agorootparentIt's the tyranny inherent to dependency-hell monolithic package management. nix avoids this problem by permitting multiple versions and flexible configurations of the same package. reply bananapub 17 hours agorootparentprevOK? that has nothing to do with what I was correcting: > IMHO is a downstream maintainer is going to change a package in a way that doesn't have the intent of the upstream project, it should be published under a different name and that maintainer deal with all bug reports caused by their modified version. the downstream maintainer didn't \"change a package in a way that doesn't have the intent of the upstream project\", they altered the config flags in one package and made another with the previous flags. the maintainer is being a dick, but not in the way the OP suggested. reply Dylan16807 8 hours agorootparent> the downstream maintainer didn't \"change a package in a way that doesn't have the intent of the upstream project\", they altered the config flags in one package and made another with the previous flags. They altered the config flags in a way that doesn't have the intent of the upstream project. And I would classify build config changes as a subset of \"changing a package\". reply Dah00n 16 hours agorootparentprevUse JohnTHallerNix and it can be. Debian is again taking care of their users. Unlike upstream, Which isn't new. Did he do it in the best way? No. Did he do the right thing? Absolutely. reply milliams 17 hours agorootparentprevAs stated in the GitHub thread [1]: You fundamentally misunderstand our program when you use the word plugin. These are built in features, not plugins. The features can be enabled as desired by the user and they come disabled by default. This change to not compile and ship these features in the base keepassxc package does nothing besides create angry (or confused) users. [1] https://github.com/keepassxreboot/keepassxc/issues/10725#iss... reply arp242 17 hours agorootparentThat Canonical guy is not coming off brilliantly there. I appreciate that reasonable people can disagree on the best way to package this, but these kind of strong absolute statements – together with calling useful features \"misguided\" and \"crap\" – is not great, to put it mildly. I'm pretty sure some compromise could theoretically be reached here. But not with that attitude. \"It is our responsibility to our users to provide them the most secure option possible as the default\"? You know what would be even more secure? To disable all networking in any program, and in fact, in Linux itself. Actually, it's even more secure to just not give people a computer at all. This is one of those stupid discussion-stoppers. These kind of Highly Opinionated Maintainers™ has always been what put me off from Debian (and by extension, Ubuntu). I want to use KeePassXC, not \"KeePassXC as some random guy thinks it should have been\". reply trallnag 16 hours agorootparentWhat's the alternative to Debian / Ubuntu now that CentOS is gone? reply yjftsjthsd-h 15 hours agorootparentIt really depends on your usecase; I'm personally fond of OpenSUSE and Alpine Linux. OpenSUSE is more \"conventional\" like Debian/RHEL, and Alpine is a touch idiosyncratic (mostly, musl as its libc means 3rd-party binaries often won't work) but is tiny ant fantastic when it does work for your usecase. reply arp242 15 hours agorootparentprevAlmaLinux and Rocky Linux are continuations of CentOS; I have no experience with either but that would be the logical place to start. reply TheBicPen 15 hours agorootparentprevFedora reply lawn 16 hours agorootparentprevArch Linux and Void Linux are both worth a look I'd say. reply yjftsjthsd-h 15 hours agorootparentRolling-release distros are unlikely to fit into the same usecase as a slow-moving stable-release distro. reply TheBicPen 15 hours agorootparentprevI believe the zoomer response to this is \"bruh\" reply bananapub 17 hours agorootparentprevthat seems completely irrelevant? plugin, compile time ./configure flag, whatever - package maintainers extremely routinely create multiple versions of a package for various reasons, from security (this case) to dependencies (Debian contains a emacs-nox package that is emacs compiled without X libraries to avoid dragging them in on servers, for example) to license reasons. again, all of the complaints are literally about the change, which the maintainer has decided to do in a disruptive fashion. reply WesolyKubeczek 16 hours agorootparentprevBecause I run and upgrade and suddenly all my shit stops working without warning, that's why. It's not how things should be done. reply jdbernard 17 hours agorootparentprevThe problem is that this will break all existing users who use those features when they update. One of the comments in the GitHub thread has a better path, IMHO: ship two new packages, a -minimal and a -full, and the user to choose, rather than silently break functionality (NEWS is fine, but not really read by user as everyone admits). reply lawn 15 hours agoprevFrom a KeePassXC maintainer: > In the lead up to this thread I received three reports of this new package method crippling people's workflow. One report was a user who couldn't open their database anymore because the yubikey feature was removed. Let that sink in for a second. People who lose access to their most important secrets can sometimes do irrational things in the moment of panic. https://github.com/keepassxreboot/keepassxc/issues/10725#iss... reply nsajko 9 hours agoprevHorrid PR for Debian. The decision is ignorant and capricious and makes Debian seem like a personal toy project instead of a FOSS cornerstone. On top of that the Debian maintainer then responds by calling upstream \"crappy\". reply HieronymusBosch 17 hours agoprevFor folks interested this issue on GitHub seems to have the latest comments. https://github.com/keepassxreboot/keepassxc/issues/10725 reply okl 17 hours agoparentDebian maintainer, Julian Klode, has a \"pointed\" opinion: > I'm afraid that's not going to happen. It was a mistake to ship with all plugins built by default. This will be painful for a year as users annoyingly do not read the NEWS files they should be reading but there's little that can be done about that. > It is our responsibility to our users to provide them the most secure option possible as the default. All of these features are superfluous and do not really belong in a local password database manager, these developments are all utterly misguided. > Users who need this crap can install the crappy version but obviously this increases the risk of drive-by contributor attacks. reply tetha 17 hours agorootparent> I'm afraid that's not going to happen. It was a mistake to ship with all plugins built by default. This will be painful for a year as users annoyingly do not read the NEWS files they should be reading but there's little that can be done about that. I deal with enough packages in my life that do massively breaking changes in point releases though, to be honest. This is reminding me of the good days that `apt upgrade` would uninstall the X-Server because nvidia fucked up their stuff. Debian is kinda one of the places I expected to be better, and usually it does. (EDIT - And I guess the fact that this is causing a ruckus in testing is an indication of that. lets see how it develops.) reply Arnavion 15 hours agorootparentYou don't have to proactively read it. But when you notice your keepassxc doesn't work as it used to before, that should be a trigger for you to go back and read it, note that it tells you very clearly that the functionality you're missing is now in keepassxc-full, apt-install it, and go on with your life. reply paulryanrogers 7 hours agorootparentOne doesn't expect such a drastic ... 'fix' in a point release though. reply kasabali 1 hour agorootparentYou're talking as if it's a point release of Debian. It is not. It happened in sid/testing, that's what these releases are for. Whether it happened in a point or major release of Keepassxc is irrelevant, because ignorant users who upgrade their sid/testing installations blindly as if it was stable-security would have hit it eventually. reply ATMLOTTOBEER 16 hours agorootparentprevI laughed when I saw this. I once tried to be a hit and run contributor to a project he maintains and I found him to be rude. He is still at it it seems. reply twic 8 hours agorootparentprevThat is an absolutely mental stance - effective asserting that he knows better than both the developers and users of a piece of software what features it should have! Promote this man to the Debian technical committee immediately, he's perfect. reply Gerlo 8 hours agorootparentprevMy favorite part is that this guy works at Canonical. reply kasabali 1 hour agorootparentYes, had he been a Fedora maintainer working at Red Hat everyone would be applauding him for his bold decision. reply lupusreal 17 hours agorootparentprevQuite based. I didn't realize KeePassXC had network features but now I want his build. Sounds like a good maintainer with (un)common sense. reply nulld3v 17 hours agorootparentThey removed other non-networking features too. E.g. even autotype was removed. At that point why not just store your passwords in an encrypted notes app? reply zikduruqe 17 hours agorootparentJust use https://www.passwordstore.org reply lupusreal 15 hours agorootparentprevI use KeePassXC, but not any network features or autotyping, because I like the password generation and because the interface is nice. I previously used Vim's old encryption feature (since removed I think?) and I think KeePassXC as I use it is a good upgrade from that. reply jdbernard 17 hours agorootparentprevOr maybe just fork the project instead and let users who want these features use the package the way the authors intended. There are multiple KeePass implementations. The people using this one are doing so because they want its features. reply rfoo 16 hours agoprevTitle is wrong. The original post said maintainer has removed ALL features, not only networking features, and this was true, ALL optional features, including entirely offline features, were turned off during build. reply juliangmp 1 hour agoprevI have a lot of respect for the Debian project but every now and then one of their maintainers does something completely stupid and unreasonable and expects applause reply cookiengineer 9 hours agoprevhttps://bugs.debian.org/cgi-bin/bugreport.cgi?bug=953529 I don't think the Debian maintainer is aware that the favicon download feature is optional and manual. You literally need to press a button labelled \"Download favicon\" before it connects to the internet. reply derkades 17 hours agoprevGood discussion here: https://github.com/keepassxreboot/keepassxc/issues/10725 reply parasti 4 hours agoprevIt's crazy the amount of power maintainers hold over someone else's software. This reminds me of the time when Fedora maintainers disabled GLES1 support in Mesa because \"nobody should be using it anymore (there are newer OpenGL versions)\", disregarding the fact that GLES1 was well and fully maintained upstream, and was and is still the only option on many devices. reply YPPH 3 hours agoparent>power maintainers hold over someone else's software There's some subtle assumptions about ownership in this comment that aren't accurate, insofar as free and open source software is concerned. FOSS software is not \"someone else's\" software. They may own the trade mark, but by releasing the software under a FOSS licence, they lose the right to control the direction the software may take. I'm free to copy it, edit it, and redistribute it as I see fit. So are you. So is Debian. reply parasti 31 minutes agorootparentThat's besides the point. You can do whatever with the software, but it gets muddy when you then release it under the same name as the original. That name may not be trademarked, but it is still not yours to use. reply kasabali 1 hour agoparentprevNot even comparable. Debian users can choose between the stripped and full version of Keepassxc, unlike the MESA example above. reply lawn 17 hours agoprevThese kind of \"feature changes\" in Debian packages is one reason I stay away from Debian. And it's not just features that might change. A Debian maintainer introduced a bug in the OpenSSL random number generator making it insecure, a couple of years ago. reply wswope 17 hours agoparent> a couple of years ago You’re bearing a grudge based on an unintentional bug introduced 18 years ago. Weak take and irrelevant to topic at hand. reply yawaramin 4 hours agoprevA password manager without browser integration is essentially dead in the water. Seems like what they're shipping is unusable for most people. We all know 'unusable FOSS' cliché but in this case it actually applies. reply danpalmer 3 hours agoprevWe used to deploy on Debian at my previous place, and we hit this sort of shit all the time. Maintainer ripped out features they disagreed with (political reasons, or just engineering/product taste), maintainers changing the configuration files to things that suited them better, etc. I understand it's all volunteer work, I understand it's open source so anyone can add their own custom packaging, on top, but Debian (the OS) certainly uses the ecosystem as a selling point, and it really can come back to bite you. reply coppsilgold 16 hours agoprevI have already been using bubblewrap[1] to isolate KeePassXC from the network and more (the only access it has is to its own private directory and a hardened Wayland socket[2]). I wouldn't recommend relying on devs or maintainers to do application isolation work for you. [1][2]reply vbezhenar 8 hours agoprevThis maintainer does not respect upstream developers. He must step down and pass this package to someone who respects the upstream developers and their judgement. He must not keeping this name hostage and damaging the brand. reply gr4vityWall 7 hours agoprevThe maintainer's position seems reasonable to me. A different package, compiled with the network features, is provided too. I like this as a default. reply charles_f 17 hours agoprev> It is our responsibility to our users to provide them the most secure option possible as the default. All of these features are superfluous and do not really belong in a local password database manager While that sounds like a reasonable argument, I think it misses the fact that you need reasonable usability to get users to use your product. E.g there's no way my wife will use KP of she doesn't have autofill, and she'd then revert to someone else's computer like lastpazs or 1password instead, which I'd argue is a worse solution in all ways possible. The other thing that makes me question this a little, is removing yubikey support and auto type. While you don't get the full advantage of MFA, having a rotating encryption key is still an additional layer of protection. Meanwhile, without auto type you will need to copy-paste usernames and passwords - and listening to the clipboard is much easier than building a key logger. I mean, if really what you're looking for is barebones, you can also not use a password manager and come up with a cypher instead. reply Brian_K_White 16 hours agoparentNo. They are completely right. I use keepassxc every day without any of those features intentionally for years. So, obviously it is quite functional without them. It is not remotely a case of \"fine let's just unplug the electricity that is even safer!\" Those extra hooks and integrations can exist, and you can use them, and you aren't automatically wrong for having different priorities where you are willing to use them, but there is no excuse for avoidable bug & attack surfaces being in there, specifically in a security utility, by default. It's backwards priorities. reply hi-v-rocknroll 4 hours agoprevI abandoned KeePassX (pre XC fork) when they made wonky changes ~10 years ago. Use Bitwarden (optionally run your own sync server) or Keeper (for less technical people). reply hiAndrewQuinn 4 hours agoparentI recently switched from BW to XC in the wake of their acquisition, and I have to admit, the mobile experience is just a little more annoying. But I sleep better at night knowing that I don't keep anything critical on servers I don't own. reply hi-v-rocknroll 4 hours agorootparent1. What acquisition? https://bitwarden.com/blog/ 2. You can run your own FOSS Bitwarden sync server. It even works airgapped. https://bitwarden.com/help/install-and-deploy-offline/ reply Brian_K_White 16 hours agoprevI think it's correct for the default package to be the safest-possible one. It's a password manager not an mp3 player. Yes it's annoying that an existing behavior will change, but that problem is not more impportant than the problem of what should be the default behavior of a security app. keepassxc should have always been like that by default and all the added conveniences that also add bug-surface and attack-surface should have always been things you have to go out of your way to add. It wasn't and so now to fix that error requires a disrupting change, but that is not enough excuse for not fixing the error. reply Latty 16 hours agoparentSafest by what metric? Calling the browser integration a \"convenience\" feature only is just fundamentally wrong. Realistically the most common attack most users face is a phishing attack, removing the browser integration which checks the URL programmatically before filling the password opens the user up to being phished more easily (users check URLs less consistently and less reliably), so arguably this makes the package less secure in the real world. reply Spivak 14 hours agoparentprevDebian is somewhat inconsistent with this but it does have precedent for package to be package-minimal and a corresponding full- variant. Odd to just break users by doing this, should have been done with a major release when people expect breakage. reply aragilar 3 hours agorootparentUh, it's only changed in unstable, so it will be a major release when current testing is released. reply kernal 16 hours agoparentprevA password manager with a built-in MP3 player? That's my next project. reply Brian_K_White 16 hours agorootparentThe songs could tell you where to find the post-it note within your record library. Let the hackers gain access to your google drive AND decrypt the db. :) reply shmerl 10 hours agoprevThere was some comment about it. Basically, it's for security reasons. Those who aren't using those features wouldn't expect them to appear (especially sneakily). And those who are planning to use them will figure out what package to install. https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=953529 This was the message from maintainers: Networking and all plugins have been moved into the keepassxc-full package. Feature creep like SSH agent support, browser integration, Freedesktop.org secret storage, KeeShare pose undue risks for most users. reply Dylan16807 8 hours agoparentBrowser integration and autotype are not feature creep. Making everything copy-paste is bad for security. reply raverbashing 4 hours agoprevHissy-fits like these are one of the reasons there's never going to be a \"year of the linux on desktop\" But why do they care, right? Most people on their irc channel (that have a basement NAS may I add) agree with their decision. Now my bet is that your average Debian user does care about convenience. Replacing (default off) selection boxes with different sw packages is acceptable in only a minority of cases, and doesn't seem to be the case here. reply kernal 16 hours agoprevI like this solution. He reduced the attack vectors in the base application by removing features a large majority of people don't use. And if they want these additional features then download the full version. reply nulld3v 15 hours agoparent> features a large majority of people don't use. I would be shocked if this was true. I have recommended KeepassXC to many of my friends and family and they all use at least one of the features that was in the removed list. To be fair, none of them use debian, but some of them do use other Linux distros. I don't use debian on desktop anymore on my main machine, but I did use BunsenLabs for a long time and even back then KeepassX (and afterwards KeepassXC) auto-type was a critical feature I used literally every day. reply gr4vityWall 7 hours agorootparentI never knew KeepPassXC could talk with my browser or interact with ssh until I saw this thread, and I've been using it for almost 10 years now. reply tuetuopay 15 hours agoprevSo in the end they reduced the attack surface for a program running on your computer by increasing the attack surface on the meatbag operating the computer? (i.e. browser integration which is the only effective thing against phishing) Seems like a good deal /s reply cyanydeez 7 hours agoparentThis reminds me of the how to secure a trashcan from bears in yellow stone: the dumbest person and the smartest bear has significant overlap. Protecting a few dumb people means exposing a lot more people to attack vectors. reply rurban 17 hours agoprevnext [9 more] [flagged] lawn 17 hours agoparentPerfect is the enemy of good. \"Secure\" and \"insecure\" doesn't make sense in a vacuum. The most secure computer is one you never use, but that's not useful at all. reply jabroni_salad 16 hours agoparentprevCould you please advise which vuln the yubikey support has? I use that every day. reply Brian_K_White 16 hours agoparentprevfact reply jdbernard 17 hours agoparentprevThe most secure system is the system with no features! Let's delete everything. #nofeatures #securityonly reply doubled112 17 hours agorootparentGuess this is it. I'm powering everything down for security reasons. To the woods I go to build a cabin. reply Takennickname 12 hours agorootparentThey made a netflix documentary about the last guy who did that. He wrote a pretty good manifesto. reply rurban 17 hours agorootparentprevNothing is deleted. Just the default options are now used, as intended and announced upstream. How should a debian openssh be called, with custom patches to integrate systemd logging, enabling all old and insecure cyphers? Or a debian openssl with all legacy cyphers enabled? reply nulld3v 17 hours agorootparent> as intended and announced upstream Meanwhile, from a maintainer of the KeepassXC repo: > Good luck to you. Really bad decision. We will be sure to let everyone know. https://github.com/keepassxreboot/keepassxc/issues/10725#iss... reply 14 more comments... GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Fosstodon.org is a member of the Mastodon decentralized social network, allowing users to search for posts with filters and engage with content from other servers.",
      "The site offers details on server statistics, a directory of profiles, privacy policies, and other Mastodon features.",
      "Users can register an account to follow profiles or hashtags, like, share, and respond to posts within the platform."
    ],
    "commentSummary": [
      "The Debian maintainer's choice to eliminate network functionalities from KeePassXC has sparked debates on software operations, maintainer duties, and user expectations in open-source circles.",
      "Users are expressing confusion and frustration due to these adjustments, emphasizing the need to strike a balance between security, ease of use, and user control in password management tools.",
      "Recommendations for alternative packaging approaches and improved communication channels between maintainers and users are being proposed in the ongoing conversations."
    ],
    "points": 255,
    "commentCount": 267,
    "retryCount": 0,
    "time": 1715354986
  },
  {
    "id": 40326269,
    "title": "Exploring Frustrations with Thread Networks",
    "originLink": "https://overengineer.dev/blog/2024/05/10/thread/",
    "originBody": "Dennis Schubert Blog Profile and Contact Thread - the tech we can't use or teach 2024-05-10 electronics, hacking, hardware, overengineering, rant A lot of my projects don’t work out. That’s fine, failing is a very healthy way to learn. However, there are cases where the reasons behind failures are absolutely infuriating. So please, allow me a rant. I’ll spend a few words on how I got where I am. If you don’t care, feel free to skip to the large “Thread?” headline. I won’t judge1. In 2022, I published an article on how I created a severely over-engineered coffee bean storage and inventory-keeping solution. Since then, many people reached out to me to say that they appreciate my post and took it as inspiration to start similar projects for different needs. I absolutely love that! More recently, I’ve been actively working on two related projects. One is a sensor I’m not going to talk about yet, but another is a “version 2” of that coffee storage display. My primary motivation for version 2 of that display was to increase the battery runtime. The displays averaged 40 days on a charge when my article was published. That’s alright, but it could be better. I managed to get this up to 55 days with a few software tweaks, but I wanted to explore how to push this further. So, I started learning about low-power electronics, leading me down a few complicated but fascinating rabbit holes. To start off, I purchased a very nice power profiler from Nordic Semiconductors and profiled my whole system. If you’re curios, this is how such a profile looks like. Long story short: I re-wrote parts of the display firmware, identified some problematic components on the DevKit, and bypassed them. Ultimately, it became clear that one of the big factors is… WiFi. You should know that while I love working on projects like this, I’m also inherently lazy. Using WiFi for such a project made sense to me, as I already have all the required infrastructure set up, and letting the display hardware talk to a service I run is super easy: just connecting to WiFi and sending a request to another device in the LAN. But sadly, WiFi is also really inefficient for a use-case like this. Even just establishing a connection can take a long time; it requires high transmission powers depending on where your access points are set up; it’s all less than ideal. So I explored alternatives, and as it turns out, there’s much to choose from! I didn’t want to build my own hardware2, so I wanted to pick something with a good availability of DevKits and ready-to-use modules. Standards like LoRa and Zigbee came to mind, of course. As nice (and usually power-efficient) as those technologies are, there’s a huge downside compared to WiFi: I can’t just build the display module and use it - I also need to build “the other end”, a receiver/transmitter/hub or whatever, that acts as a connection point for the displays to exchange data with. That’s not only a whole other piece of hardware I have to run; it’s also another piece of software and firmware I have to write. And as I mentioned earlier, I am lazy. Luckily, there’s a really interesting alternative! Thread? Despite its awful name3, the Thread network stack is really cool. Thread uses the same physical layer as Zigbee, IEEE 802.15.4, and it’s also a meshed network. But two things made Thread stand out for me. Thread is based on top off 6LoWPAN, short for “IPv6 over Low-Power Wireless Personal Area Networks”, and that’s kinda cool. In short, this means that each of your devices gets one or more IPv6 addresses, the internal addressing is done via IPv6, and you just throw IP packets around in the network. Even cooler is that the Thread network connects to your regular home network via a bridge called “Border Router” - so your devices can use IPv6 to talk to your applications, and vice-versa. Wait, a bridge? Didn’t I say I don’t want to run a bridge? Well, yes, but that’s another cool thing about Thread: you might already have a Thread Border Router running. For example, if you have an Apple HomePod or a Nest Hub, you already own a Thread Border Router. If you run Home Assistant, you can buy a dongle for ~40 euros and turn your Home Assistant node into a Thread Border Router. It’s all really approachable. And if you use your existing Thread network, things get even more awesome! I did mention that Thread is a mesh network, and this feature is actively used and supported by a lot of commercial hardware. I have several Eve Energy “smart plugs” in my home, and since they are always connected to power, they function as a Thread repeater4, expanding your network’s reach without you doing any work! So all of that sounds pretty neat, huh? And it is! I got two Thread DevKits to explore more (if you’re curious, I got a nRF52840-DK and a nRF5340-DK, as well as a nRF52840-Dongle for debugging5), and learned a lot. Within a reasonably short timeframe, I managed to hack my own border router into my Apple-based Thread network, I managed to use Wireshark to sniff on my Thread network, and I shoved my own Thread devices (based on the two DevKits) into the network, and confirmed that everything worked as I hoped it would. So, of course, I started roughly outlining a series of blog posts about all of this. Ultimately, my goal was to get other hobbyists into exploring Thread, switching away their projects from WiFi or Bluetooth, and making their projects a whole lot better. And this is the point where this post turns into a rant. No Thread. So far, I have only talked about the nice things around Thread. However, I also have to talk about the ugly parts: The Thread Group. While Thread builds on many free and open standards like IEEE 802.15.4, IPv6, and CoAP, Thread is very much neither free nor open. Quite the opposite, actually. You can request the Thread Specification for free on their website, and you will get it delivered to your inbox very quickly, but you’ll notice a few odd things. For once, there’s an “I agree to the End User License Agreement” checkbox on that page you ignored, but even more obvious: the specification PDF document is password-protected, DRM’ed, and heavily watermarked. To understand why, let’s look at that license agreement again. Partial quote, emphasis mine: Thread Group, Inc. […] hereby grants you a […] license […] to view, download, save, reproduce and use the Specification solely for your own internal purposes in accordance with the terms of this License Agreement. […] No right to implementation of the Specification is granted to you by this License Agreement. […] Membership in Thread Group is necessary to implement, practice, and ship Thread technology and Thread Group specifications. Failure to maintain active Thread Group membership while shipping Thread technology may result in legal action, including but not limited to licensing fees. Oh. So even though you can buy freely available DevKits, you aren’t actually allowed to … well, use them. Unless you’re a Thread Group member, of course. The least expensive membership level that will enable you to implement the Thread Group IP, called “Implementer”, is a cheap USD 7,500. Per year, that is. But hey, don’t worry, if you’re an “innovative IoT start-up company”, you can apply to get a two-year membership for free! But of course, you have to pay afterward, and this program isn’t even applicable to hobbyists. This whole mess isn’t helped by OpenThread, an open-source implementation of Thread. The project is licensed under a BSD 3-Clause license, so it looks very open and friendly to use. However, their repo also includes a fun little notice highlighting that “members of the Thread Group may hold patents and other intellectual property rights”. And, in fact, the Thread Group website has a dedicated FAQ-section on OpenThread, which is fairly clear: Q: What Would Prevent A Company From Shipping A Product Based On OpenThread Without Joining The Thread Group? A: If developers choose not to join Thread Group and ship products using Thread technology, they are not conferred the IP rights required to practice and ship Thread technology, and may subject themselves to legal action, including but not limited to licensing fees. To summarize: if you’re a hobbyist without access to some serious throwaway money to join the Thread Group, there is no way to use Thread legally - the license does not include an exception for non-commercial uses. If you’re like me and want to write a series of blog posts about how Thread works, there’s also no legal way. A commercial membership program for technology stacks like Thread isn’t new; it’s somewhat common in that space. Same with requiring certifications for your commercial products if you want to use a logo like the “Works with Thread” banner. And that’s fine with me. If you’re selling a commercial electronics product, you have to go through many certification processes anyway, so that seems fair. But having a blanket ban on implementations, even for non-commercial projects, is absolutely bonkers. This means that no hobbyist should ever get close to it, and that means that the next generation of electrical engineers and decision-makers don’t get to play around with the tech before they enter the industry. But of course, that doesn’t really matter to the Thread Group: their members list includes companies like Apple, Google, Amazon, Nordic, NXP, and Qualcomm - they can just force Thread into being successful by making sure it’s shipped in the most popular “home hubs”. So it’s just us that get screwed over. Anyway, if you planned to look at Thread… well, don’t. You’re not allowed to use it. I contacted the Thread Group’s support email address on 2024-04-19 to request clarification on non-commercial Thread use. I did receive an “I have forwarded your message” from a member immediately, but no further response arrived. On 2024-05-01, I contacted the Thread Group’s press contact, requesting a comment. As of publishing this post, the Thread Group has not responded. Footnotes Okay, maybe just a little bit. I mean, did you really expect a short post on my blog?! ↩ Also motivated by the intention to blog about this. Building your own RF hardware is hard, but it’s also illegal for most of my audience unless they have the proper certifications. ↩ No, seriously. Can we please not name new things using terms that are already widely used? I hate that I have to specify whether I’m talking about sewing, screwing, parallel computing, a social network from Meta, or a networking stack. Stop it. ↩ If you feel the urge to email me to inform me that it’s not called “Repeater” but “Router”, please read the rest of this article first. This is not meant as a Thread introduction post; you will learn why. ↩ Nordic Semiconductors isn’t sponsoring me, even though I already linked four of their products. I just really like their stuff. That said, hey, if you’re from Nordic and you want to sponsor me, … reach out! :p ↩ Imprint",
    "commentLink": "https://news.ycombinator.com/item?id=40326269",
    "commentBody": "Thread: Tech we can’t use or teach? (overengineer.dev)174 points by todsacerdoti 4 hours agohidepastfavorite43 comments fulafel 2 hours ago> if you’re a hobbyist without access to some serious throwaway money to join the Thread Group, there is no way to use Thread legally Is this really true? I assume the licensing legalese means patents, and patents don't apply to private tinkering unless there's commerce involved. More generally aside from hobby scope - The absurdity of the monopolies granted by the current patent regime are made obvious by this arrangement: Big companies that have patent portfolios to countersue with can use OpenThread freely, small businesses and startups can't. (Obviously it still sucks and is a major chilling effect) reply IanCal 2 hours agoparentThe quoted part above is about shipping products too, so I don't understand why they are using that as an example about not being able to play around with something or write blog posts. Here's the FAQ question > What Would Prevent A Company From Shipping A Product Based On OpenThread Without Joining The Thread Group? reply lelanthran 1 hour agorootparent> so I don't understand why they are using that as an example about not being able to play around with something or write blog posts. It's seems pretty clear-cut to me: Q: What Would Prevent A Company From Shipping A Product Based On OpenThread Without Joining The Thread Group? A: (roughly) You will be sued Now, what does the word \"product\" in \"Shipping a product based on OpenThread\" mean? A product is any (or some combination of) the following: 1. A devkit 2. A book 3. A blog post 4. Any hardware that uses Thread So, yeah, you can't write a tutorial for using Thread, or make a doorbell for your mum's house, or tell your friend how to read the protocol, or start up a /r/thread community to help each other use it. Looks pretty damned locked down to me, without at least the FRAND loopholes. reply IanCal 1 hour agorootparentWhere is that definition of product from? Is that in their license agreement? reply lelanthran 6 minutes agorootparentWhat is your definition of a product based on (from their license) \"Thread technology and Thread Group specifications\"? Why would a book, or tutorial, or blog post be excluded from the clause \"Thread technology and Thread Group specifications\"? reply jauntywundrkind 1 hour agorootparentprevAnswer, also quotes in the post: > If developers choose not to join Thread Group and ship products using Thread technology, they are not conferred the IP rights required to practice and ship Thread technology, and may subject themselves to legal action, including but not limited to licensing fees. It feels like even sharing my designs run a major risk of landing me in trouble. This sounds catastrophically hostile to open source in general. If I ever want to make use of what I've built in any even remotely commercial setting, everything I've built feels liable to be infected & polluted with this copyright. I could rip out Threads & still not feel safe. I definitely can't sell a couple copies of this cool thing to other hobbyists on indiegogo. The terms of use essentially outlaw community. Yes, maybe hobbyists can play with this, but they cannot form communities, they cannot share wisdom, they can't sell boards to each other, they can't even talk about the protocol or spec on detail. So yeah, hobbyists arent expressly forbidden. But having any community of hobbyists seems fraught with difficulties. You can only hobbyist by yourself, discussing with no one. Fuck Threads. reply IanCal 1 hour agorootparentHang on that's a huge leap. > Yes, maybe hobbyists can play with this, but they cannot form communities, they cannot share wisdom, they can't sell boards to each other, they can't even talk about the protocol or spec on detail. But it just says you can't ship products and talking isn't shipping a product. The only part I see there is what if you sell things built on it. Like sure it could be more open and sure having some small business exemption would be good but that's not the same as not being allowed to just make some stuff and talk about it. reply denschub 32 minutes agorootparentLawyers have little issue defining blogs like mine as \"with commercial interest\". I have a side-business, so lawyers could make the argument that I use my blog as advertising. I have a Ko-Fi link in the bottom of one specific site, that's a commercial interest, too. Unless your blog is \"I'm sharing holiday photos and nothing else\", there's a lot of instances where it could be define as an outlet with commercial interests. And, ultimately, I have no desire to spend any time and money on fighting even completely invalid claims. I'd rather spend my time watching cat videos on YouTube instead. reply lelanthran 1 hour agorootparentprevWhat do you think they mean by this: > Membership in Thread Group is necessary to implement, practice, and ship Thread technology and Thread Group specifications. reply jauntywundrkind 1 hour agorootparentprevYou're talking to the question, but the answer is even more conservative & scary than the question posed, > are not conferred the IP rights required to practice and ship Thread technology, Under this, it sounds like one isn't even allowed to dabble with Thread without $7.5k/year membership. You aren't allowed to practice is the words they respond with, which seems far more constraining than shipping. Re-quoting the licensing agreement requires to download the spec, > view, download, save, reproduce and use the Specification solely for your own internal purposes > are not conferred the IP rights required to practice and ship Thread technology, > Membership in Thread Group is necessary to implement, practice, and ship Thread technology and Thread Group specifications. So yeah, actually it seems like even doing hobbyist things by yourself & telling no one is still far more than Thread group allows. Fuck Thread! It's just so unbelievably shitty having the connected device technologies of our world be un-practiceable by mere mortals. reply IanCal 1 hour agorootparentand ship. reply nonrandomstring 1 hour agorootparentprev> hobbyists aren't expressly forbidden. Also, I don't think it helps to use this word \"hobbyists\". The entire world runs on free open source software written by unpaid volunteers who are poorly supported, isolated, and exploited by mega tech corporations that are parasitical on their work. \"hobbyists\" sounds demeaning, It makes it sound like the great under-structure of common coding is somehow less-than-serious, somehow outside some commercial ecosystem rather than the very soil and food that sustains it. This (self) perception needs to change. Big Tech would die tomorrow without the \"hobbyists\" it depends on. reply nonrandomstring 1 hour agorootparentprevThen don't use this or teach it. Don't build for it. Isolate it. Let it die. Cut off its supply. Make it irrelevant. Exclude it from connectivity options by default, out of caution. It seems pointless to complain that you can't have a bite of the poison fruit. But also make sure others know. Actively warn and discourage other developers away from that technology. Make \"Threads\" regret their lack of openness. reply devjab 58 minutes agoprevOne of the reasons my city decided to go with LoRawan is exactly because it’s less complicated from the legal side of things. It’s much more complicated to work with, however, and because of Danish telecom laws any such tech comes with ridiculous restrictions that give telecom a sort of monopoly on high speed “internet”. This would also apply to threads though. Anyway, one of the advantages a city gets is that it has a lot of locations to set up antennas. A public school, a library and so on, are all good locations that local citizens wouldn’t have access to. So the trick is to get your city to open up their LoRawan equivalent to the public. At least if you want to deploy things all over the city. Luckily mine does. It also gives you free access to power supplies if your project is benefiting the city (and open), and they are often interested in supporting you financially as well. But as a whole, just don’t use threads. reply tjoff 18 minutes agoparentThreads would never scale to that anyway? Isn't it a completely different usecase than what Threads was made for? reply odo1242 49 minutes agoprevDo these license terms apply if you use OpenThread directly without ever agreeing to the license on the Thread specification? I don’t see how you could be sued if you never agreed to anything except the BSD license lol reply alfiedotwtf 2 minutes agoprevPrediction: the world will move on and probably choose something less wrapped up in a legal Trojan. Although not IP based, LoRa is pretty neat. Slow, but so easy to play around with reply cryo 2 hours agoprevThe Matter specification has a similar touch. The devil is in the details and due clever marketing people don't understand what they are praising. The real problem here is people who invest money in this anyway. reply RA2lover 2 hours agoparentDidn't it go even further by requiring device attestation certificates signed by a licensed PKI provider? I noped out of even considering it as a hobbyist as soon as i noticed that part. reply jensenbox 58 minutes agoprevI have not read the fine print of all of this so my idea here may be dead in the water but... What if we (the community) were to establish an entity that would pay the licensing for whatever required level and pitch in a small amount each towards the fees and we could all then be legal? Essentially the new entity would be licensed and we all would be licensed unter the entity. Fractionating the larger dollar figure across us all. reply actionfromafar 1 hour agoprev“you’re a hobbyist without access to some serious throwaway money to join the Thread Group, there is no way to use Thread legally” Well, there’s no way to know until someone finds out if they have relevant patent covers. We need Compaq to clean room copy the stuff and then take the hit if there truly are valid patents… reply erik_seaberg 1 hour agoparentA cleanroom process is evidence that you reimplemented without copying, but that's not enough to avoid infringing a patent. You need to redesign to avoid doing anything they claimed, convince the patent office that they made a mistake in granting some or all of the claims, hold a war chest of patents you could counter-sue with, or YOLO: https://paulgraham.com/softwarepatents.html reply indeyets 39 minutes agoprevYup. Just use zigbee. 3.x is open and well specified. And dongle-bridges for HomeAssistant are cheap reply Signez 2 hours agoprevWill we have to wait for a regulation body to come and force it open as soon as it becomes the de facto standard of home communication? I won't make a bet on which one, because I don't want to nag, but we all know which one it will be. reply 9dev 2 hours agoparentWell, Google lost against Oracle too, so it appears a mere API specification can be closed down arbitrarily; than is the world we live in. Unless the US gets a lot more tech literate and open minded judges and officials, I doubt that will change for the better. And, looking at their presidential candidates… well. reply franga2000 2 hours agorootparentI thought Google mostly won against Oracle and the court decided just APIs aren't copyrightable... reply aero_code 1 hour agorootparentThe court decided the opposite--that APIs are copyrightable. However, the Supreme Court ruled that Google's usage was fair use, so I would agree that Google mostly won. The Supreme Court didn't consider whether APIs are copyrightable (the lower court ruled that) because Google would win regardless because it was fair use. So I'm not sure it matters much whether APIs are copyrightable when what Google did was ruled fair use. I'd prefer if the courts ruled APIs weren't copyrightable, but I think it was still a good result because doing what Google did probably covers about any use case anyway. reply jauntywundrkind 1 hour agorootparentprevThe Federal Court took up the appeal from Alsup case, accepted Oracles arguments that copying headers & using then same variable makes made the Java reimplementation a copyright violation (incompetent losers), sent the question of fair use back to a jury trial, the jury decided yeah it was fair use, the Federal Court ignored the jury and decided to ignore everyone hollering at them that they were being idiots & ruled for Oracle anyways. Then the Supreme Court ignored the copyrightability aspects & ruled for a Google on some fair use grounds. I've skimmed the write up from the ever excellent always recommendable Mark Lemley, Interfaces and Interoperability After Google v. Oracle, and really hope I can go a bit deeper into the history & trial at some point. Section 2 The Long Saga of Google v. Oracle starts on page 27 of the inner pdf. https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3898154 It's been incredibly disappointing watching courts like the Federal Circuit be so unable to handle even basic technical matters with even an iota of comprehension, having them bungle up things so badly in the face of so much easy to rely on precedent. Being sweet talked by Oracle's lawyers into believing a header file is anything greater than interface definiton is either incompetence, or some really vicious pro-business hellworld shit. reply shermantanktop 2 hours agoprevJust be thankful they did this upfront, instead of at the tail end of a painful evolution from an open-source effort to closed-source commercial product, complete with a fig-leaf GitHub with all the interesting bits removed, and a graveyard of abandoned forks. They saved you all that disappointment. reply weinzierl 2 hours agoparentAbsolutely, sometimes I feel the mid 2020's will be known as the era of enshittification. reply kevindamm 2 hours agorootparentIt merited \"word of the year\" last year, could happen. reply fmajid 8 minutes agorootparentThe Italian word for it, “Merdocene”, sounds even pithier. reply Kiro 1 hour agorootparentprevSuch an overused word and in this context it's not even relevant. reply tjoff 1 hour agorootparentIt is kind of relevant, we have zigbee. Which is a bit quirky, along comes Thread that promises to make it more open, better compatibility between vendors and more modern. If it turns out that big companies use Thread in a way to oppose those goals then I feel that is an attempt to enshittify the entire home-automation ecosystem. Which must be the holy grail of enshittification, I mean it is one thing to make your own product/service worse. But to make everyones products worse? Jackpot! reply epicureanideal 1 hour agorootparentprevLet’s hope the result is that the 2030s are known as the decade when consumers, users of apps, figured out it was worth paying for software from honest developers or companies, rather than getting it for free temporarily and then getting their data used in unexpected ways, enshittification, etc. reply einpoklum 58 minutes agorootparentThat is completely irrelevant. A large fraction, if not most, of potential users of software in the world can simply not afford paying any non-trivial amounts of money (by US/European figuring) for software of any kind; they simply don't have such money to spare. Look at median incomes in different countries: https://worldpopulationreview.com/country-rankings/median-in... reply leduyquang753 1 hour agorootparentprevWhat about when the consumers pay for software and still get their data harvested and the product enshittified? reply bboygravity 1 hour agorootparentprevHi, I'm a time traveller from the 2030s and chuckled a little at the prediction that people would still by writing apps by then. reply daredoes 2 hours agoprevI wouldn't mind if developing for it as a hobbyist was so difficult if it had some quality products and user interfaces. reply alexashka 1 hour agoprevI wonder if this rant would've not existed if the Thread website said 'costs 7500$/yr to use' on the front page. To me, the issue isn't that someone wants people to pay to use their products, it's that they make you work to find out. There really ought to be price transparency for everything, mandated by governments. I'm a dreamer, maaan. reply snthd 1 hour agoparentAt least we have wikipedia. https://en.wikipedia.org/wiki/Thread_(network_protocol) >Thread is an IPv6-based, low-power mesh networking technology for Internet of things (IoT) products.[1] The Thread protocol specification is available at no cost; however, this requires agreement and continued adherence to an End-User License Agreement (EULA), which states that \"Membership in Thread Group is necessary to implement, practice, and ship Thread technology and Thread Group specifications.\"[2] reply eviks 1 hour agorootparentIt's missing the most important part - the sticker price to shock you away from it reply einpoklum 1 hour agoprev [–] > if you’re a hobbyist without access to some serious throwaway money to join > the Thread Group, there is no way to use Thread legally - the license does > not include an exception for non-commercial uses. Well, in this situation, and assuming Thread is technically worthwhile - perhaps people would start using it \"illegally\" (with or without quotes). If such use is wide enough, it might get effectively legalized, albeit gradually. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Dennis Schubert shares his journey of working on over-engineered projects and delving into low-power electronics, specifically highlighting Thread networks.",
      "He expresses his challenges with the Thread Group's strict licensing and membership prerequisites, hindering hobbyists from using the technology within legal boundaries.",
      "Despite reaching out to the Thread Group for clarification, he has not yet received a response, underscoring the complexities faced by enthusiasts in the tech community."
    ],
    "commentSummary": [
      "The Thread technology discussion highlights challenges for hobbyists and businesses due to licensing and patent restrictions by the Thread Group, impacting innovation and collaboration.",
      "Alternative technologies such as LoRa and Zigbee are explored concerning affordability and transparent pricing, amid concerns about Thread's barriers to entry without membership.",
      "The conversation includes the Google v. Oracle court case about API copyright and fair use, reflecting the broader struggle of managing intellectual property in the technology sector."
    ],
    "points": 174,
    "commentCount": 43,
    "retryCount": 0,
    "time": 1715406678
  },
  {
    "id": 40318804,
    "title": "Minimalist Approach to OpenBSD Desktop Customization",
    "originLink": "https://x61.ar/log/2024/05/06052024135732-openbsd_desktop.html",
    "originBody": "ゴンザロ [x61] rndopenbsdcodelogwork :.: OpenBSD Desktop Yes, this is the year of the OpenBSD Desktop! I am a minimalist, and I tend to always keep it as small as I can, so I try to use all I have in base (if it fits), plus of course some other tools needed. My general list is: WM: cwm(1) Statusbar: termbar Mail: aerc (now) - neomutt (former) Browser: Firefox - ungoogled-chromium FileManager: walk (former llama) Editor: emacs - mg Photo Viewer: geeqie PDFs: mupdf and foliate (for ebooks or more complex stuff) Others: tmux(1), got, duf, sysclean, tor, remmina, feh, sct, scrot among others Finally I unslack myself and tried to write some C code to convert my old termbar into a new one in C. There is still a lot to fix and adjust, but so far it works on my machines and it shows all I need and want without any weird error. Yes, I like anime and those colours are trying to emulate the eva 01, my .Xresources looks something like this: !!! Colours *color0: rgb:2a/3b/4d *color1: rgb:c4/67/6c *color2: rgb:66/ff/66 *color3: rgb:ff/ff/66 *color4: rgb:15/f4/ee *color5: rgb:9c/6c/d3 *color6: rgb:4b/8f/77 *color7: rgb:9f/a2/a6 *color8: rgb:55/79/9c *color9: rgb:c4/67/6c *color10: rgb:66/ff/66 *color11: rgb:ff/ff/66 *color12: rgb:15/f4/ee *color13: rgb:9c/6c/d3 *color14: rgb:4b/8f/77 *color15: rgb:ff/ff/ff *color16: rgb:ff/99/66 # Base 09 *color17: rgb:bb/64/a9 # Base 0F *color18: rgb:3d/56/6f # Base 01 *color19: rgb:4b/69/88 # Base 02 *color20: rgb:7e/90/a3 # Base 04 *color21: rgb:d6/d7/d9 # Base 06 My console is xterm(1) and I really don't need much more than that, my bits for it in the .Xresources are: !!! Xterm XTerm*background: black XTerm*foreground: rgb:9f/a2/a6 XTerm*eightBitInput: false XTerm*loginShell: true XTerm*scrollBar: false XTerm*saveLines: 2000 XTerm*faceName: dejavu sans mono:size=12 XTerm*internalBorder: 10 XTerm*locale: true XTerm*pointerMode: 2 XTerm*allowTitleOps: true XTerm*termName: xterm-256color I also have some love for termbar in there, which will show the right font, size, etc: !!! termbar termbar*faceName: dejavu sans mono:size=12 termbar*geometry: 3840x1+0+0 termbar*internalBorder: 6 termbar*saveLines: 0 termbar*locale: true termbar*scrollBar: false termbar*title: termbar Those are colours, and I have my \"setup\" on my .xsession, I have it pretty much all commented to here it is: #!/bin/sh -x ## Cleanup stuff on exit cleanup() { pkill -9 sctd pkill -9 xidle pkill -9 lock rm -rf ~/TorBrowser-Data rm -f ~/.Xauthority rm -rf ~/.local/share/Trash chmod 700 ~ } . $HOME/.profile ## Load colours xrdb -merge $HOME/.Xresources ## DBus if [ -x /usr/local/bin/dbus-launch -a -z \"${DBUS_SESSION_BUS_ADDRESS}\" ]; then eval `dbus-launch --sh-syntax --exit-with-x11` fi ## fonts xset -b & for font in /usr/local/share/fonts/*; do xset +fp \"${font}\" done xset fp rehash ## Fix resolution xrandr --dpi 96 ## Turn off mic sndioctl input.mute=1 sndioctl input.level=0.0 ## Turn down sound sndioctl output.level=0.0 ## External Monitor ## this is the output ## of arandr to arrange ## my monitor ~/bin/monitores & ## Select Keyboard layout ## depending on the host if [ X`hostname` = X\"tomato\" ]; then setxkbmap jp else setxkbmap de fi ## LANG export LANG=en_US.UTF-8 export LC_CTYPE=en_US.UTF-8 ## Browser shitz export MOZ_USE_XINPUT2=1 export MOZ_ACCELERATED=1 export MOZ_WEBRENDER=1 ## WASM for Chromium export ENABLE_WASM=1 ## jp ## ctrl+space ## F6 & F7 hiraganakatakana export GTK_IM_MODULE=\"xim\" export QT_IM_MODULE=\"xim\" export XMODIFIERS=\"@im=SCIM\" /usr/local/bin/scim -d & export BLOCKSIZE=1m ## no bell xset b 0 0 0 xset -dpms xset s off xset s noblank ## ~/bin/lock does some protections and runs slock xidle -timeout 9000 -ne -program ~/bin/lock & ## screen control ~/bin/sctd & # Termbar exec xterm -fs 12 -bg \"black\" -fg \"grey\" -name termbar -class termbar -T termbar -e ~/bin/termbar & # Wallpaper feh --bg-center ~/themes/blade-runner--wallpaper.jpg & exec cwm cleanup My WM is cwm(1) since a long time and combined with termbar it fits all my needs, my cwmrc(5) looks like: # Autogroups for windows autogroup 0 \"termbar,termbar\" autogroup 0 \"xconsole,XConsole\" autogroup 0 \"termbar,termbar\" autogroup 1 \"firefox,firefox-bin\" autogroup 9 \"tor-browser,tor-browser\" # Add missing keybindings. bind-key M-1 group-only-1 bind-key M-2 group-only-2 bind-key M-3 group-only-3 bind-key M-4 group-only-4 bind-key M-5 group-only-5 bind-key M-6 group-only-6 bind-key M-7 group-only-7 bind-key M-8 group-only-8 bind-key M-9 group-only-9 bind-key MS-1 window-movetogroup-1 bind-key MS-2 window-movetogroup-2 bind-key MS-3 window-movetogroup-3 bind-key MS-4 window-movetogroup-4 bind-key MS-5 window-movetogroup-5 bind-key MS-6 window-movetogroup-6 bind-key MS-7 window-movetogroup-7 bind-key MS-8 window-movetogroup-8 bind-key MS-9 window-movetogroup-9 bind-key MS-space window-htile bind-key M-space window-vtile bind-key C-Up pointer-move-up bind-key C-Down pointer-move-down bind-key C-Right pointer-move-right bind-key C-Left pointer-move-left bind-key CS-Up pointer-move-up-bigbind-key bind-key CS-Down pointer-move-down-big bind-key CS-Right pointer-move-right-big bind-key CS-Left pointer-move-left-big bind-key 4-l /home/gonzalo/bin/lock bind-key 4-r restart bind-key 4-q quit bind-key MS-Return terminal bind-key MS-p menu-exec ## Windows borderwidth 4 color activeborder '#202060' color font '#000000' color selfont '#e9ffe9' color inactiveborder 'rgb:31/31/31' color menubg '#494949' color menufg '#202060' fontname \"dejavu sans mono:size=12\" gap35 5 5 5 ignore \"termbar\" command firefox firefox command xterm xterm moveamount 4 snapdist 25 sticky yes And that is pretty much the \"core\" of my configs, the rest are probably default or some very basic changes. The clean desktop looks a bit like this: And this is busy: As a final note, I saw a lot of people following tutorials on \"OpenBSD Desktops\" that changed a lot of flags totally blindly without any real test or comparison after/before. About this, I would say that my user is part of the staff and I didn't change anything in the login class, and also my sysctl.conf(5) is the default with the normal changes like machdep.allowaperture=2 (Update: tb@ made me realize that machdep.allowaperture is not needed anymore, thanks!) or net.inet.ip.forwarding=1, my daily laptop is a thinkpad x395. find me at: honkmastodontwitterrss page generated: 06052024135732",
    "commentLink": "https://news.ycombinator.com/item?id=40318804",
    "commentBody": "OpenBSD Desktop (x61.ar)137 points by hggh 20 hours agohidepastfavorite112 comments accrual 17 hours agoI recently started using OpenBSD on my circa 2001 Pentium 3 rig for fun. It has 384MB of RAM and no SSE2. I use i3wm for the desktop (1024×768×80Hz on a CRT), urxvt for terminal, netsurf for browsing (no JS), leafpad for GUI editing, and VLC for streaming music. For coding the CPU supports the latest versions of Go and Python3, but Node/TypeScript no longer works since it now requires SSE2. It's surprisingly snappy and fun to use, I can even post to hn from here. :) Screenshots: https://i.imgur.com/shozUbO.png https://i.imgur.com/F22p3Z8.png reply skydhash 17 hours agoparentI'm running a Debian VM on my M1 Mac (it's a mess to cleanup dependencies and tooling after a project on macOS). I also use i3wm and before launching Firefox, the whole OS consumed only 300 MB of ram. In the past I use Arch with i3wm to have enough free ram (on a 8GB laptop) for Android Studio and Firefox. Some people are angry with Apple for their 8GB offering, but it would be great to imagine what can be done with less and the operating system being just an operating system, not an application suite. reply detourdog 17 hours agorootparentI have always found MacPorts as the best way to manage tooling. All packages and dependencies are installed under /opt/. The consistent pathing is the only sane way to manage tooling. reply AlexeyBrin 12 hours agorootparentHomebrew also installs everything under /opt/ on aarch64. Pretty convenient when you want to nuke it and start fresh. reply detourdog 9 hours agorootparentI had thought Homebrew's purpose was to leverage Apple's bundled what not. I haven't looked at Homebrew in over a decade. reply gawa 16 hours agorootparentprevAre you saying you're using a debian VM on your Mac as a daily driver? Running i3wm and Firefox and ultimately living in Linux, but on your Mac? Does that mean you never have to use MacOS much (beside upgrading the host mac OS, and launching the VM right after boot)? If that's your setup I would love to hear more about it, the pros and the cons. reply skydhash 15 hours agorootparentIt's not my setup and it's fairly recent. I love some of the Mac software (Bear, Things, Dash, Doppler) and the Mac hardware. But dealing with project dependencies and tooling is a pain on every OS I've been. SO I bought Parallels (issues with graphic in UTM), configured a base OS, and clone it for each project. So personal workflows are still macOS-centric, but dev workflow is Linux. I could do what you said, but the apps are nicer than Linux ones. But I still care about data portability (it's trivial to export data in all the app I use) so it's more a want, not a need. reply malux85 13 hours agorootparentprevThis was exactly my setup for like 4 years a few years ago. MacOS was the host and it was immediate boot into Debian VM and it was my main machine I used to dev every day. Pros and cons: I switched to parallels vm software from virtualbox because it just seemed to run a LOT smoother which meant the machine ran dramatically cooler. I think this was due to the graphics driver - higher frame rates and no display glitches I’m not a gamer but very occasionally I like to play older strategy games - this I did outside the Linux vm, since high performance graphics wasn’t good inside the vm as one would expect. I allocated like 90% of the system RAM (machine was an Intel Mac with 64GB of ram) to the vm Once inside the booted machine running full screen it felt native, I would forget I was in a vm Bridged networking so other machines on my lan can ssh in, Any other questions you have let me know! reply DEADMINCE 6 hours agoparentprevThis has nothing to do with OpenBSD though. Any linux or BSD kernel can run a light WM on same or older hardware just as well. reply cenamus 3 hours agorootparentAre you sure most Linux distros still support a pentium III by default? reply anthk 48 minutes agorootparentHyperbola does. Alpine should. And so does Guix. reply grpt 16 hours agoparentprev> I use... netsurf for browsing (no JS) > https://i.imgur.com/shozUbO.png > https://i.imgur.com/F22p3Z8.png > If you're seeing this message, that means JavaScript has been disabled on your browser, please enable JS to make Imgur work. Hmmm... reply accrual 15 hours agorootparentSurprisingly, the images open just fine on this machine! Imgur sends me the actual .png and not the HTML wrapped version that requires JS. Maybe they look at the agent to decide what to send. reply 1vuio0pswjnm7 2 hours agorootparentprevI have no problem retrieving the PNGs from those URLs without Javascript. I'm not using a browser nor am I using curl. I do not send a user-agent header. reply niutech 17 hours agoparentprev384MB is plenty of RAM. Tiny Core Linux (https://en.wikipedia.org/wiki/Tiny_Core_Linux) requires only 46 MB, although recommends 128 MB of RAM. reply vundercind 16 hours agorootparentIt’s a ton if you avoid things Poettering was involved in (anyone remember when Pulseaudio came out and its memory use when idle was insanely high? AFAIK that never got better, we just all got more memory; Systemd’s similar), don’t run a “modern” DE, and don’t use webapps. That’s a lot of “ifs”, but that really should be quite a bit of memory. In fact you can’t even really run Firefox or Chrome with a single light page on that, now. In one of the minimalist WebKit browsers, yes, but probably only 2-3 tabs and no webapps. reply Koshkin 12 hours agorootparentprevMy first PC had (what I thought of as) an infinite amount of RAM. 8 MB. I could not believe that someone (else) wanted 32 MB, it was insane. reply SoftTalker 11 hours agorootparentMy first hard drive had 20MB. I thought I would never fill it. reply anthk 16 hours agoparentprevTry mocp for music, you will save tons of resources. Also, try the new dillo fork. With gopher, you have gopher://magical.fish and gopher://sdf.org as starting points to read news and blogs. Use either sacc or lynx. reply hedora 19 hours agoprevWhat sort of battery life do you get? Online reviews say to expect under two hours from the x395 running zoom in windows. I assume stuff like suspend/resume, webcam and audio work, since it’s a daily-driver. (My only other question is whether I can have vs code yet, but that’s not related to the laptop.) reply bee_rider 18 hours agoparentZoom is a shockingly CPU consuming program. I know people have to use it, that’s been the case for me too, but it was easier to make sure I had a plug handy when using Zoom than trying to make it run well. I think a review that use based around Zoom battery life is about as useful as one based around short circuiting the battery terminals. reply spockz 16 hours agorootparentTeams hogs power as well. I get about 4h on my 16” MBP M1 Pro. When in a teams call it also significantly impact single core benchmark results of the app I’m working on. So maybe power drain is inherent in conferencing tooling? Is teams even utilising the hardware decode/encoding paths? When in a call Teams consistently consumes a full single core. reply nrabulinski 16 hours agorootparentWhile videoconferencing does take some resources, the fact of the matter is both zoom and teams are poorly written web apps packaged into “desktop applications” and that’s where most of the utilization is coming from reply grumpyprole 12 hours agorootparentI do wonder whether these apps are using any of the hardware acceleration available in our hardware. These days PCs are second class to mobile phones. reply numpad0 14 hours agorootparentprevPoor coding criticisms apply to almost every massively popular software. At this point it almost seems like a requirement to make it not too fast as to reduce user frustration and mental share by proxy. reply bee_rider 13 hours agorootparentIMO a more likely story is that companies that take time to write programs well get beat by their shovelware competition. reply numpad0 11 hours agorootparentBut popular apps continue to be sluggish even after they had scaled. If faster apps made more, the first enhancement would be speed improvements. reply bee_rider 15 hours agorootparentprevYeah, I wonder about this. I don’t know Teams, but Zoom has to do some image processing (it has some face cleanup tech which is weird because everybody knows a programmer’s power-level is directly correlated to how disheveled and tired they look), and also some audio filtering (need to filter out keyboards). But, I mean, Discord manages to do the latter for pretty cheap, and the former is stupid optional vanity stuff anyway. The conclusion I come to is that Zoom is a badly written program that would never have seen the light of day if we weren’t suddenly launched into WFH around 2020. That program is like the third worst thing that happened that year. reply yabones 18 hours agoparentprevI have an old X201 with OpenBSD. My setup on that machine is deliberately \"gimped\" with all ads and most JS blocked to make webpages load acceptably fast, and with the `apmd` enabled and hw.setperf at 10-20. With a 3rd party 9-cell battery, I can easily get 4.5-5 hours runtime like this. I think the biggest power draw at this point is the display, since it's an older and less energy efficient panel. Granted, most of my usage is either SSH'ing into another machine or X11 forwarding apps from another machine. I think with hw.setperf dialed up, SMT enabled, and the blockers turned off I'd be lucky to get 45 minutes of runtime... Either way, not bad for a \"museum\" computer :) reply sach1 15 hours agorootparentI've switched to Alpine Linux for anything with a battery. OpenBSD ran very well on my X220, X230, and T430 but there's a 2-3 hour difference in battery life during normal usage that's hard to pass up. If you've never played around with Alpine, check it out! You'll find the installer... very familiar! reply VK538FY 13 hours agorootparentprevX201 i5? I installed OpenBSD latest on mine and was impressed by the battery life contre toute attente. Fvwm with some essential tray apps and we're good! If Jupyter Lab ran on this setup, I'd be a total convert. In terms of hardware, I installed coreboot and replaced the wlan with something modern from China. I plan to upgrade from 2 GB to 8 GB but hard to find compatible SO-DIMM these days. It would be bloody awesome to upgrade the display to FHD but that looks... complicated, we'll see. But I love working with an OS where I understand everything. reply accrual 17 hours agorootparentprevVery nice! It's impressive how much can be squeezed out of these Thinkpads. I daily drove an X230 until earlier this year, it's only a bit faster than the X201 and I basically used it in the same capacity - a jump box to other machines. The keyboards and form factors of these laptops are top tier though. reply DiggyJohnson 18 hours agoparentprevIs there an issue with electron apps on BSD? reply rjsw 18 hours agorootparentWhy wouldn't there be an issue? Any electron app will be using a Linux build of the Chromium browser, whether this will run on a BSD variant will depend on how well any Linux emulation layer works, OpenBSD has removed their Linux emulation layer. reply 0x37 15 hours agoprevI'm really torn. A while ago I made the decision to abandon linux and use a BSD as my daily OS. In almost every way I prefer FreeBSD over OpenBSD, except when it comes to the source code. The clarity of OpenBSD source seems unmatched, and for me that's really important as I have picked up interest in contributing to the kernel of the BSD I choose. Also in some naive way it gives me a warm feeling knowing that the code of my operating system is in tip top shape. reply kuon 19 hours agoprevI trimmed down my linux machine more and more, but I still need linux for some usages (I stream and use OBS for one). But I use OpenBSD on a dozen of servers I manage, it is rock solid for many (not all) usages. I really like those simple desktop environment where you have a good understanding of the machine you are using. I do use ranger as file manager, it is heavier than walk, but it is very capable and scriptable while staying quite simple. reply SoftTalker 18 hours agoparentI've never felt that file managers bring much to the table. I use the shell. reply DEADMINCE 5 hours agorootparentDifferent tools have different strengths. There is some stuff you can do in a graphical file manager that would take you significantly longer to do on a shell. reply skydhash 17 hours agorootparentprevIt's Vim vs Ed. The shell is all powerful but sometimes it's easier to yyhpl (select the file for copying, then paste a symbolic link in the parent directory) than typing the commands to do so even with shell completion. Sometimes having visual feedback is good. But a GUI FM doesn't bring that much. I spend as much time with Ranger as Finder on macOS. reply accrual 17 hours agorootparentAre there any good lightweight file managers if one did want to use a GUI? Using the shell is second nature to me but sometimes it's nice to browse with a mouse. reply dlachausse 16 hours agorootparentMidnight Commander is a good TUI file manager. https://midnight-commander.org/ reply squarefoot 16 hours agorootparentprevTake a look at double commander: https://doublecmd.sourceforge.io/ However, if you use a desktop manager such as Xfce, the file manager (Thunar in this case) is built in and can be configured with traditional double window arrangement. reply sach1 15 hours agorootparentprevPCManFM is another good one if you're looking for a lightweight GUI file browser. reply Koshkin 12 hours agorootparentprev> It's Vim vs Ed. No, not really. reply vundercind 18 hours agoparentprevEvery now and then I poke my head back into GUI Linux-land to see how it’s doing (never any better, it seems) and the last time I found much to enjoy about the experience was when I tried out Void Linux on a “weak” Asus chrome box—probably 6-8x more powerful than the laptop I used in the early and mid ‘00s, but webshit makes that feel slow, no mainstream web browser was usable at all, only stripped-down WebKit browsers were sorta OK. It’s got that sense of actually knowing WTF your machine is doing that’s so hard to come by these days, but isn’t masochistically awkward to use (I ran Gentoo for a long time :-) ) If Macs ever go to shit, Void’s my current frontrunner for a Linux distro if I can’t get FreeBSD working ok on a laptop. reply bee_rider 18 hours agorootparentGUIs on Linux seem mostly fine in the sense that you can just use a tiling WM and terminals. Now you have a computer that you can use properly. You mostly use one terminal full screen, but if you have to you can pop open another one and they’ll arrange themselves nicely. Tmux can do this of course, but sometimes you have a nice tmux layout all set up and don’t want to mess with it. Plus you can also open a web browser if you want to goof around and comment on HN. And you’ll even have X installed if somebody manages to find some use for non-terminal programs (unlikely but we should admit the possibility). reply ykonstant 17 hours agorootparentRecently, I managed to get fbterm working decently on my linux; this way I can read pdf, watch movies, write code, browse parts of the web, and if I manage to get Qutebrowser working on fbterm, I'll be able to do proper web browsing without X! Plus there's the coolness points about doing this without X: https://ykonstant1.github.io/fbvoid.png For games, I have had some success startx'ing some in their own X context. reply anthk 13 hours agorootparentYou can do that without fbterm. Check fbpdf2, mpv -vo drm, links -g, and so on. Also, on games: export SDL_VIDEODRIVER=fbcon or kmsdrm depending on the case. reply ykonstant 12 hours agorootparentOh absolutely, but fbterm has a lot of nice stuff, like unicode support with nice fonts, eye candy, multiple screens etc. reply DEADMINCE 5 hours agorootparentprevIt's weird you say you value knowing what your machine is doing, but then say your first choice is a mac. reply vundercind 5 hours agorootparentOn Linux, because it encounters far more problems that require fiddling to repair (or old school Windows-like solutions—“reboot and hope it goes away”). I specifically find complex Linux distros very unpleasant. If they worked really well, that wouldn’t be the case. Simple ones where I know what each process ps outputs is doing, and where its config file lives, are… well, they don’t do as much automatically, obviously, so they’re not as nice as a Mac, but at least I can fix them when they act up without going on a damn odyssey. reply DEADMINCE 3 hours agorootparentActually that makes sense. I'd never want a Mac because I want to always know what my machine is doing and what's on it. I also use Linux as my daily driver and haven't had the bad luck you've had with desktops. Even if I did or had though, I couldn't go to a mac because I think I value always knowing what my machine is doing more than avoiding infrequent crashes. If the crashes were too bad on Linux I'd o for a severely neutered and caged Windows 10 install. reply resource_waste 17 hours agorootparentprevTry Fedora Cinnamon. You keep picking lone distros that have tiny communities. If you use something Nice, it might actually be nice. Feeling like you are judging Linux Desktop from some obscure view. reply vundercind 16 hours agorootparentI try one or more of the big distros every couple years, and ran Ubuntu as my main for the few years it was good. They’re terrible. Second-to-last time I tried Fedora they’d decided to make Wayland the default for the graphical installer without having a check for which video card you had, so it had a framerate of like 2fps on my quite-powerful hardware. Probably the worst showing any distro’s ever made, for me. A Linux so small that I understand what everything’s doing is about the only kind I can tolerate. It’s too messy and janky for the hands-off “just works”. Always was, really, I just didn’t recognize how much time I was losing to it until I experienced not having that time-suck then tried to go back—death by a million cuts. Last time I tried KDE in Fedora, I could make multiple apps crash just by attempting drag & drop onto them. JFC. A program crashes, like, maybe once a year in the world I’m used to. I’m not sure the average has even been that high. reply DEADMINCE 5 hours agorootparent> Last time I tried KDE in Fedora, I could make multiple apps crash just by attempting drag & drop onto them. That's not normal, common or at all representative of the distro or Linux on desktop in general. reply vundercind 4 hours agorootparentI’ve run, for meaningful lengths of time, perhaps eight or nine distros on probably twenty of my own desktop and laptops systems plus in some VMs (it’s far and away best-behaved on a VM under Windows or Mac) over a period of 25 years and it’s always been pretty glitchy and crashy. Fewer whole system crashes than, say, WinXP and earlier… but more graphical system crashes or corruptions forcing a restart of the windowing system, which is just as bad if you’re working in a GUI environment. Lots of application crashes or weird glitches, including in major programs like file managers. I will note that I didn’t realize how much I’d gotten used to working around or working past problems without even noticing I was doing it, until I was no longer using graphical Linux regularly. I am 100% sure I’d have delivered a huge underestimate of the crap I was putting up with, had someone asked me before I switched. Only when trying to go back was it clear what I’d been doing. reply resource_waste 1 hour agorootparentThis sounds like debian-family things. You seem a but unreliable too, like you have an axe to grind. No one else is running into these issues unless they are on debian-family. reply fsflover 18 hours agoparentprevThis reminds me of Debian- and Fedora-minimal on Qubes OS: https://www.qubes-os.org/doc/templates/minimal/ reply TacticalCoder 17 hours agorootparentI always begin with a Debian minimal install (on bare metal though, not on Qube): no GUI. Just a minimal install, disk encryption/LUKS and booting to a text console. From there I install X, the awesome WM (a tiling WM) etc. It feels very light (despite the systemd monster of a PID1 and overreach spreading its tentacles everywhere around the system). Needless to say: when I'm on my wife's Ubuntu desktop, it feels very heavy compared to my very minimalistic Debian / Xorg / tiling WM. reply einpoklum 16 hours agorootparentDebian can't be mininal these days, because it has the systemd behemoth. Try a minimalistic Devuan instead. reply Koshkin 12 hours agorootparentI would, I just can't get over the name. reply tiffanyh 18 hours agoprev> I am a minimalist I have to laugh when I read blog posts about how people go to great strides to run a \"minimal\" and lean OS, to then only come to find out that 95% of what they do is in a web browser. At that point, the OS doesn't even matter any more if it's all web/cloud-services. reply yjftsjthsd-h 18 hours agoparentI'd go exactly the opposite direction: If the browser is the only important thing, surely it's best to have as little overhead to running that browser - every byte of memory wasted on something else is a byte the browser could have used (and it needs enough of them!), every running process uses time and battery that the browser could have taken, every additional package/program/library is security risk on top of the secure(ish) sandbox where your real (web)apps are running. reply tiffanyh 18 hours agorootparent> as little overhead to running that browser If you're implying OpenBSD is fast, it certainly is not. It's actually one of the slowest \"main stream\" OS around. reply hpeter 17 hours agorootparentOne more reason to make it minimalist. The built in security already makes OpenBSD slow, so installing anything unnecessary will slow it down even more. reply DEADMINCE 4 hours agorootparent> The built in security already makes OpenBSD slow, OpenBSD doesn't really have any security stuff that impacts performance. They're claims to security are primarily based on reasonable default configs and auditing older code. reply dleink 17 hours agorootparentprevIs there an OS better than Linux to accomplish what the parent poster is referring to? reply Koshkin 12 hours agorootparentThe optimal way would be to have a web browser run under a unikernel. reply hpeter 18 hours agoparentprevIt's still better to use a minimalist OS with a browser than a bloated OS with a browser. Not everybody is a javascript developer BTW reply thesuitonym 18 hours agoparentprevJust because you spend your day in a web browser doesn't mean we all do. reply Boogie_Man 18 hours agoparentprevOffloading and/or obfuscating complexity doesn't remove it. reply medo-bear 18 hours agoparentprevI have to laugh when security conscious people think their browser is secure. I use TTY almost exclusively. But for a minimal desktop one should really look into stumpwm reply Koshkin 12 hours agorootparentOr https://dwm.suckless.org/ reply nolist_policy 13 hours agorootparentprevThe browser is the most secure piece of software that everyday users come in contact with. reply medo-bear 11 hours agorootparentAre you trolling? Just googling 'browser vulnerabilities' will get you interesting results. Here is one from few hours ago: https://www.msn.com/en-us/news/technology/update-your-chrome... reply nolist_policy 4 hours agorootparentDetails are sparse but I bet $100 that this vulnerability too is confined within the sandbox. Like most vulnerabilities before it and after. reply anthk 16 hours agoparentprevYou can use the cloud with cli by using rclone, and there are clients for tons of webs. reply ahnick 18 hours agoprevAnyone made the jump from Linux to OpenBSD on a laptop as their daily driver? If so, any tips or suggestions for making such a change? What did you find the biggest benefit to be? reply binkHN 17 hours agoparentI love OpenBSD, but can't do it; there is too much in Linux that allows for better battery life, especially on more modern hardware. reply apgwoz 17 hours agorootparentThere's a userspace frequency scaler (https://tildegit.org/solene/obsdfreqd) that increases my battery life to well beyond what I actually need. I easily get 6-8 hours on my Thinkpad X1 Nano (previous generation). This is not even close to the M series Macbook battery lifes, but works well enough for me. I do not run heavyweight stuff though, but that's with WiFi, cwm/dwm, Emacs, compilers (go, cc) and Chrome. I've had a bit of trouble with Firefox performance, so having to use Chrome has been my biggest hurdle. reply anthk 16 hours agorootparentI´d assume you use chromium, then: git clone git://bitreich.org/privacy-haters doas cp privacy-haters/chromium/default /etc/profile.d/chromium.sh doas chmod +x /etc/profile.d/chromium.sh Logout and login again. Of course, run UBlock Origin under Chromium. Go to the settings and enable most ad blocking subscriptions, but don´t use AdGuard and Easylist at the same time, they often use the same ban lists. reply perihelions 17 hours agoparentprevI made a deliberate effort to, and realized I was making an expensive mistake and cut my losses. The (user-interactive) performance difference between modern Linux and minimalist, \"correct\" OpenBSD, on normal x86 laptop hardware, is night and day. No reasonable of amount of system tuning could work-around that. It was the wrong tool for me, with the wrong tradeoffs. My suggestion is don't—or at least think deliberately and dispassionately about tradeoffs. UX latency really sucks. (The painful thing is that almost none of it seems to be OpenBSD's fault—it's all the desktop applications that demand 10x more hardware resources than they legitimately need, and then degrade unacceptably when layers that actually should be less optimized, like OS things that have a safety & correctness tradeoff, do make that valid tradeoff...) reply dleink 16 hours agoparentprevOpenBSD doesn't have bluetooth support. I'm on linux as my daily driver, but have started playing around with OpenBSD and FreeBSD on my antique thinkpads. reply binkHN 15 hours agorootparentThis is less of a bother for me nowadays as I mostly use Bluetooth through my phone. reply anonymous_union 16 hours agoparentprevyes. simplify your expectations. realize that not every piece of technology is worth using. biggest benefit is they say no. reply matrix12 18 hours agoprevWe use it for our nfs servers. Very secure, but the file cache is still nerfed. reply znpy 17 hours agoparent> We use it for our nfs servers. Very secure, but the file cache is still nerfed. Why not FreeBSD or Linux for that use case? Chances are you'd get better \"file cache\" (and hence better latency/throughput) reply matrix12 17 hours agorootparentSecurity was the only concern. reply DEADMINCE 4 hours agorootparentThen Devuan or Fedora with SELinux would have given better security and performance. reply ansible 16 hours agorootparentprevSo of course I have to ask... What version of NFS are you running, and are you disallowing the older versions? How are you handling user accounts? LDAP, Samba PDC (which is also LDAP), something else? reply udev4096 16 hours agorootparentprevhttps://isopenbsdsecu.re reply anthk 16 hours agorootparentThat is getting more and more outdated with each release. reply pram 17 hours agorootparentprevThe only thing OpenBSD protects you from is performance. reply dlachausse 16 hours agorootparentTheir record speaks for itself. “Only two remote holes in the default install, in a heck of a long time!” reply udev4096 16 hours agorootparentLet's not forget how insecure linux is reply rbc 11 hours agoprevI've recently switched to OpenBSD as a workstation desktop using Xfce. Chromium and Firefox (ESR) are the browsers. Emacs is used for many things (authoring, calendaring, contacts, email, IRC, task tracking, etc.). LibreOffice gets used for the balance. That covers most workstation activities. All the web sites that I care about work. The performance is good enough. With OpenBSD, there's some assembly required. I don't mind that. The right way to approach OpenBSD and its ports collection is as a toolkit. You have to use the tools provided, to make the solution you want. I'm already running OpenBSD servers. It was just easier to use OpenBSD for the destktop as well. reply DEADMINCE 6 hours agoprevThe only people who should be using OpenBSD as a desktop are the developers. For anyone else I think the choice to do so would be a result of being contrarian and little else. reply cenamus 3 hours agoparentI guess there are a lot of contrarians like me in the bsd community then reply DEADMINCE 3 minutes agorootparentI guess users could be hobbyists and maybe want to play with some of the few unique things OBSD offers like pledge and unveil and whatnot, but it has significantly worse graphical performance and isn't built with desktop use in mind at all. You can make it work, and maybe it wouldn't be that much work for hobbyist users with specific and limited needs, but generally it's no where close to being the right tool for the job. reply hggh 58 minutes agorootparentprevDerek Sivers comes to mind: https://sive.rs/openbsd reply haunter 16 hours agoprevJust use GhostBSD if you want an out-of-box desktop BSD (and it has a Live CD too) https://ghostbsd.org/ reply bruh2 14 hours agoparentWhat's the deal with the seemingly-spam links at the bottom of this page? Does it contribute to SEO somehow? reply binkHN 18 hours agoprev> net.inet.ip.forwarding=1 Why is this a normal change? I thought it was only needed for routers? reply accrual 17 hours agoparentIP forwarding shouldn't be needed for end-user machines. I only ever set it on machines that need to route traffic. reply anthk 39 minutes agorootparentOr virtualisation with simulated networks. reply rnhmjoj 15 hours agoparentprevI'm guessing, but I would say it has something to do with the fact they're using a VPN: you may want to route packets between your physical and virtual interface. reply Aaronstotle 16 hours agoprevI tried running OpenBSD on my desktop but kept running into issues where my display would freeze after 10-15 minutes. I assume it was because of my nvidia-gpu reply binkHN 15 hours agoparentI think Theo might actually hate Nvidia more than Linus does. reply rydgel 17 hours agoprevAnyone knows where to find that Blade Runner wallpaper? reply znpy 17 hours agoparentThis one? https://www.reddit.com/r/wallpapers/comments/ao25bk/blade_ru... It was a simple google search away... reply simonblack 13 hours agoprevHaving problems with my AlderLake 4K video. reply mjhay 17 hours agoprev [–] cwm is very nice and usable. I used it for a long time before I switched to Mac (for the hardware, not software). reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Gonzalo shares their minimalist approach to using OpenBSD on their desktop, detailing tools, color scheme, terminal setup, key bindings, and window manager preferences.",
      "Emphasizes thoughtful changes over blindly following tutorials, underlining the significance of customization.",
      "Mentions laptop model and contact information."
    ],
    "commentSummary": [
      "Users are discussing running OpenBSD and Debian on various hardware, such as Macs and older Thinkpads, focusing on minimalistic operating systems and security in browsers within unikernels.",
      "The conversation evaluates the efficiency of Linux and BSD for daily use, critiques software like Zoom, and explores alternatives, along with the use of tiling window managers and GUI file managers on lightweight setups.",
      "Some express frustrations with glitchy Linux desktops, while others highlight OpenBSD's security despite performance trade-offs, sparking a debate on balancing security, performance, and functionality in OS choices."
    ],
    "points": 137,
    "commentCount": 112,
    "retryCount": 0,
    "time": 1715348142
  },
  {
    "id": 40323785,
    "title": "One Minute Park: Explore the World's Parks in 60 Seconds",
    "originLink": "https://oneminutepark.tv/",
    "originBody": "one minute please ... the parks are loading close One Minute Park allows you to visit parks from around the world for one minute each. These are just one minute videos, not webcams. Eventually the project will fill in all the minutes (1440) in a day. You can create your own One Minute Park to help achieve this goal. How to make a One Minute Park Walk around a park until you find a composition. Your scene should be filled with many layers of activity without any dominating elements. Record in landscape mode on your phone. Keep your shot as steady as you can but don't use a tripod. You could even hold your breath. Check the timecode indicator while filming to make your video exactly 60 seconds. Tap record, let it count up to 60, and tap again. No editing needed! Upload your One Minute Park to this Are.na channel. Videos should be in .mp4 format. Please include the date, time, park, location in the block's title. Support One Minute Park is a project by Elliott Cost. It is unfunded and a labor of love. Any support is greatly appreciated–thank you! Donate → Subscribe to the patreon → Sponsor this site → Hire me as a resident web artist for your company →",
    "commentLink": "https://news.ycombinator.com/item?id=40323785",
    "commentBody": "One Minute Park (oneminutepark.tv)121 points by cookingoils 12 hours agohidepastfavorite13 comments CmdrKrool 9 hours agoLovely. Unexpectedly I feel more immersed with the sound off. When it's on it's like I'm watching just another video on the Internet, and the wind blusters through the mic in a way that sounds different to actually being there; whereas when it's off the unnaturally complete peacefulness meshes with the sound of my actual surroundings and the images seem to pop more. reply ggambetta 1 hour agoprevThis is great! I'm imagining this recorded in stereo (\"3D\") and watching on a VR headset. Perfect for the winter blues! reply criddell 7 hours agoprevHow does this work in places like Germany with strict privacy laws. Do you have to get the consent of everybody in the video? reply dannyw 4 hours agoparentThere is an exception to the privacy laws, for when you are taking photos of a landscape or location, and people incidentally happen to be there but are not the focus: https://www.wbs.legal/medienrecht/persoenlichkeitsrecht/rech... reply jen729w 3 hours agoparentprevI’m curious, if you shoot a street scene in Germany is that the case? That you’d have to get everyone’s permission? That seems ... impractical. It’s a common misconception here in Australia. You can film in public. I’ve had the public come up to me and try to tell me about ‘their rights’ and I have to politely inform them that, in this situation, they don’t have any. We got the cops called on us in central Melbourne because we were shooting a music video outside a bank. There was an ATM in the far distance and the bank’s security guards were going on about it not being legal to shoot. Again, politely, we told them that we could in fact shoot on the public street. The cops came. “This sounded a lot more interesting on the radio”, the guy told us. They left. reply anovikov 40 minutes agoprevSomehow firstly i thought this was a completely artificial stuff generated by AI... but then realised there were too many identifiable details and then saw a label in the corner reply A_Duck 10 hours agoprevVery nice. Reminds me of https://news.ycombinator.com/item?id=2124106 reply brigadier132 7 hours agoprevCalmed me down almost immediately reply ics 9 hours agoprevLove it! I am fond of taking video while sitting/standing still, usually in snippets of 15-30 seconds. Last year I started taking longer videos and after showing some to a friend, thought it would be amusing to do it again in one day and cut them all together[0]. Text was tongue in cheek \"shot on iPhone\" shite but anyway it's quite pleasant putting these things on in the background when working. [0] https://www.youtube.com/watch?v=SvIHr8SA3Q4 reply Waterluvian 10 hours agoprevI love how by making the whole idea “one minute” the creator has made it super accessible to anyone to create/submit, and keeps the content manageable. reply 03b8 10 hours agoprevAwesome, will come back for more park minutes later. reply dangerwill 8 hours agoprevAwww this is so sweet to make reply wang_li 8 hours agoprev [–] Feels like window-swap.com. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "One Minute Park allows users to view one-minute videos of parks worldwide and contribute their own to fill all 1440 minutes in a day.",
      "Users record 60-second videos of park scenes with multiple layers of activity for the project, aiming for a stable shot without a tripod, in .mp4 format.",
      "The initiative, led by Elliott Cost, sustains itself through donations and sponsorships."
    ],
    "commentSummary": [
      "One Minute Park is a platform for sharing one-minute videos showcasing various parks, offering a serene experience, particularly when viewed silently.",
      "Users admire its ease of use and inclusivity, drawing comparisons to similar platforms, sparking discussions on privacy laws related to filming in public areas.",
      "Some users engage in conversations, sharing their insights and experiences on this topic within the community."
    ],
    "points": 121,
    "commentCount": 13,
    "retryCount": 0,
    "time": 1715375096
  },
  {
    "id": 40318123,
    "title": "The Truth About Food Expiration Dates in America",
    "originLink": "https://www.vox.com/22559293/food-waste-expiration-label-best-before",
    "originBody": "Filed under: Poverty Food Money The lie of “expired” food and the disastrous truth of America’s food waste problem Stop throwing your food away. By Alissa Wilkinson@alissamariealissa@vox.com Jul 8, 2021, 7:00am EDT Share this story Share this on Facebook Share this on Twitter Share this on Reddit Share All sharing options Share All sharing options for: The lie of “expired” food and the disastrous truth of America’s food waste problem Reddit Pocket Flipboard Email A scene like this greets most supermarket shoppers in the US. But much of what we think we know about food shopping needs an overhaul. Steve Pfost/Newsday/Getty Images Alissa Wilkinson covers film and culture for Vox. Alissa is a member of the New York Film Critics Circle and the National Society of Film Critics. Maybe you know the routine. Every so often, I go through my refrigerator, check labels on the items, and throw out anything that’s a month, or a week, or maybe a few days past the date on the label. I might stop to sniff, but for my whole adult life, I’ve figured that the problem was obvious — my jam or almond milk or package of shredded Italian cheese blend had “expired” — and the fix was simple: Into the garbage it goes. This habit is so ingrained that when I think about eating food that’s gone past its date, I get a little queasy. I’ve only had food poisoning once or twice in my life, always from restaurants, but the idea is still there in my head: past the date, food will make me sick. You’ll probably never catch me dumpster-diving. I know, on some intellectual level, that throwing away food is probably wrong. The statistics are damning. Forty percent of food produced in America heads to the landfill or is otherwise wasted. That adds up. Every year, the average American family throws out somewhere between $1,365 and $2,275, according to a landmark 2013 study co-authored by the Harvard Food Law and Policy Clinic and the Natural Resources Defense Council. It’s a huge economic loss for food growers and retailers, who often have to ditch weirdly shaped produce or overstocked food that didn’t sell. Environmentally it’s bad, too. The study found that 25 percent of fresh water in the US goes toward producing food that goes uneaten, and 21 percent of input to our landfills is food, which represents a per-capita increase of 50 percent since 1974. Right now, landfills are piled high with wasted food, most of which was perfectly fine to eat — and some of which still is. On top of this, I know that in the same country that throws away so much food, about 42 million people could be living with food insecurity and hunger. Yet state-level regulations often make it difficult to donate past-date food to food banks and other services. A billboard in Minnesota, telling us what we probably already know. Michael Siluk/Education Images/Universal Images Group/Getty Images America has a food waste problem. But I’ve rarely been clear on how that translates to how I actually treat the food in my refrigerator. Because what can you do, right? When the date says it’s done, it’s done, right? Apparently, very wrong. Researchers have found that “expiration” dates — which rarely correspond to food actually expiring or spoiling — are mostly well-intentioned, but haphazard and confusing. Put another way, they’re not expiration dates at all. And the broader public’s misunderstanding about them is a major contributor in every single one of the factors I named above: wasted food, wasted revenue, wasted household income, and food insecurity. If you’ve been throwing out food based on the freshness label, though, you’re not alone. It’s a widespread practice. Chef, journalist, and cookbook writer Tamar Adler, author of An Everlasting Meal: Cooking with Economy and Grace, explains: “In the absence of culinary information, people assume that any information they’ve been given must be the most important information.” A big part of the problem is that most of us don’t really believe we’re capable of determining if a food is good for us. “It’s really hard to imagine you’re supposed to trust your own nose and mouth,” Adler said. “Add that to convenience culture and rapacious late-stage capitalism and, well, we’re fucked.” The good news is that the problem wouldn’t be all that hard to fix, in the abstract. The bad part is that solving the broader system around it takes time, education, and a shift in our consumption habits. But the incentives for virtually everyone involved are high — and a good place to start is by figuring out what those labels actually mean and how to interact with them. Everything you assume about date labels is probably wrong There are two vital facts to know about date labels on foods in the US: They’re not standardized, and they have almost nothing to do with food safety. Date labels first started appearing in the decades following World War II, as American consumers increasingly moved away from shopping at small grocery stores and farms and toward supermarkets, with their rows of packaged and curated options. At first, manufacturers printed a date code on cans and packages for the benefit of the grocer, so they’d have a guideline for when to rotate their stock. The label was not designed for consumers. But since shoppers wanted to buy the freshest food on the shelf, savvy folks started publishing booklets that gave a guide for deciphering the codes. All-Consuming The acquisition of stuff looms large in the American imagination. What is life under consumerism doing to us? Read more from The Goods’ series. Eventually, producers — seeing that shoppers actually wanted to know what those secret dates were — started including more clearly readable dates on the packages, with month, day, and year. They saw it as a marketing boon; it was a way to attract consumers and signify that your food was fresh and flavorful. Consumers loved it, and the so-called “open date” labels became common. But there was little consistency about them. And while the federal government made some attempts beginning in the 1970s to enact legislation that would standardize what those labels mean across the country, they failed. (The exception is infant formula, for which there are strict federal guidelines.) Instead, the burden fell on state (and sometimes local) legislatures, which passed laws that varied wildly, often relying on voluntary industry standards. One state might never require labels; another may mandate that the freshness label on milk have a date of 21 days after bottling; a third may set the same date at 14 days. (In my home state of New York, there are laws about labels, but the standards don’t mention dates at all — though certainly many manufacturers still put date labels on their products, and various municipalities at times set their own guidelines.) State-to-state discrepancies can be costly for manufacturers, who had to come up with ways to produce multiple labels for multiple regions. But it’s also baffling to consumers. The labels are inconsistent, too. What the label actually indicates varies from producer to producer. So you might have a “best by” label on one product, a “sell by” label on another, and a “best if used before” label on a third. Those have different meanings, but the average consumer may not immediately realize that, or even notice there’s a difference. What does “best” mean in this context? For items made with properly pasteurized dairy products, it’s not about safety. Scott Olson/Getty Images Furthermore, those dates might not even be consistent across brands of the same food product — peanut butter, say, or strawberry jam. That’s partly because they’re not really meant to indicate when a food is safest. Most packaged foods are perfectly fine for weeks or months past the date. Canned and frozen goods last for years. That package of chips you forgot about that’s a month out of date isn’t going to kill you — they just might be a tiny bit less crunchy than you’d like. (The huge exception is foods like deli meats and deli salads, which won’t be reheated before they’re consumed and can pick up listeria in the production process — but that’s the exception, not the rule.) You can check for the freshness of eggs by trying to float them in a glass of water (if it sinks, it’s good). Properly pasteurized milk, which is free of pathogens, should be fine if it tastes and smells fine. But many of us, with the best of intentions, just look at what the label says and throw out what’s old. Is this a scam? When I first realized that date labeling wasn’t linked directly to scientifically backed safety standards but to a more subjective, voluntary, and nebulous standard of “freshness,” I wondered if it was … well, kind of a scam. After all, customers don’t benefit from throwing out foods; grocers lose money; farmers miss out on possible sources of revenue. The only people who could benefit are the producers, and I could imagine an unscrupulous manufacturer shortening the date on their food so that people will sigh, throw out a half-eaten package that has “expired,” and go buy some more. I asked Emily Broad Leib, the director of the Harvard Law School Food and Policy Clinic and lead author of the 2013 study, about this. She laughed and said I’m not the only one to wonder if we’re just getting played. But, she said, manufacturers would say “there is a legitimate reason on their part, which is that they want you to eat things when they taste the absolute best.” The methods by which they determine that date can vary; a big manufacturer might run a focus group with consumers to determine the date, while a small producer may just hazard a guesstimate. But importantly, the freshness date almost never corresponds to the food’s safety — to whether or not it could make you sick. Suppose you buy a particular brand of yogurt, Broad Leib says, and it waits around till it’s slightly past its peak. You might decide you don’t like this brand of yogurt, and buy a different one next time. The dates are, in part, a way of “protecting the brand,” she said. Their biggest incentive is to make sure you eat the food when it tastes the way they think it should. But that doesn’t mean that the way we buy and eat food has no part in the blame, and producers don’t have to be insidious to be part of the issue. The fact that so many of us read a “best by” label as actually saying “bad after” is partly a public education problem, and it’s one that manufacturers haven’t worked too hard to combat. “It’s in the general interest of anybody trying to sell anything to continue to perpetuate the illusion that our foods are going bad all the time,” Adler said. “We could buy half as much food.” Adler noted that our penchant for buying more than we need and then throwing out food that’s gone slightly past its peak is rooted, at its core, in a consumer mindset. “The only way that makes sense is if your cultural value is unfettered growth and profit at all costs,” she said. “There’s no other way that it makes sense to just throw stuff out.” In fact, she said, it’s in direct contrast to what most food cultures practice around the world. “The whole idea that mold and bacteria are to be avoided at all costs is not only antithetical to good cooking, but it’s literally not practiced” in most cultures. Salami and cheese and pickles and sauerkraut and all kinds of food come from the natural process of aging — “in most cuisines of the world, there’s not as great a distinction between new food and old food; they’re just ingredients that you’d use differently,” she said. Those traditions certainly have been retained in regions where Americans still make kimchi and half-sours and farm cheese. But we’ve absorbed over time the idea that those natural processes are bad and will make us sick. Instead, we rely on companies to tell us what food is good for us and when to get rid of it. Adler says part of the problem may also lie with our burgeoning “food as status performance” culture, in which particular foods trend on social media, or food media coaxes us to keep buying new ingredients to make something we saw in a picture or on TikTok. “That doesn’t do a great service for anybody trying to cook what they have,” she said. “If they don’t have the ingredients for the viral thing, then whatever they do have is just going to sit there, while they go get the other ingredients.” Our shopping culture is also at fault The problem is bigger than individual consumers. Some states bar grocery stores from donating or selling out-of-date foods to food banks and other services designed to help those living with food insecurity. The thinking is reasonable, even altruistic: Why would we give sub-par food to the “poor”? If I wouldn’t eat “expired” food, why would I give it to others? Distributors fear legal threats if someone eats past-dated food and becomes ill (something that has rarely happened, but it’s still a looming threat). That’s exacerbated by the way Americans shop. Think about it: How often do you see a shelf or bin or freezer in a grocery store that isn’t fully stocked to the brim? Supermarkets stock more food than they can sell, and that’s on purpose. Broad Leib told me that it’s common practice for supermarkets to plan for “shrink” — food they expect to be wasted. Shoppers in the US look askance at a shelf that isn’t fully stocked, or at a few potatoes left in the bin. “On the consumer side, you can understand,” she said. “You want to go to a store and have them have everything you want. And if you went in and they didn’t have what you want, then you’d go somewhere else.” We may not even realize it, but we’ve trained ourselves to see full crates of beets and shelves of salad dressing as a sign that the store is good, and therefore the food in it is good. Abundance indicates quality. Most American grocery stores aim to have full shelves, as consumers expect, but that can contribute to food waste, too. Ben Hasty/MediaNews Group/Reading Eagle/Getty Images But that mindset naturally, even inevitably, leads to waste. In many places, if you can’t sell all your milk by the sell-by date, you have to dump it. Consumers don’t want to buy a box of Cheez-Its that only has a week left on it. Beef that “expires” in two days is not going to fly off the shelves. And if you can’t sell all your carrots, some of those carrots are going to start getting a little bendy. And many grocery stores will only sell produce that’s up to a certain aesthetic standard — no weird-looking apples or sweet potatoes from outer space, everything the same shape and size. Furthermore, if a manufacturer changes the label on their cookie packages, all the old packages will probably just be discarded to maintain uniformity. “Most of the decisions that are made about most of the foods that we eat are made for reasons that have nothing to do with the food’s deliciousness or its healthiness or anything intrinsic to the food,” Adler said. “The leaves on vegetables wilt before the stalk on the vegetable, so it’s much easier for grocery stores to cut off the leaves at some point in processing. Otherwise you have to be sprinkling and trimming them all the time.” So the perfectly edible leaves of some vegetables may get lost in the process as well, while they could have been used to feed people. Some businesses have cropped up to try to fix this larger-scale problem, like Misfits Market and Imperfect Foods. They form relationships with producers to rescue aesthetically “ugly” food — or at least, food we’ve been trained to think is ugly or too small or too large — and sell it to customers. They also buy food that’s approaching its label date and resell it to customers, hoping to cut down on food waste and change the way people eat. “It’s all about breaking down misconceptions,” Imperfect Foods’ associate creative director, Reilly Brock, told me by phone. “Food is not Cinderella. It’s not going to turn back into a pumpkin by midnight if it reaches the date on the label.” But across the country, the standard practice for your average American consumer still stands. Make a big trip to the grocery store to buy your food from the glossy displays. When food expires, throw it out. Meanwhile, farmers are plowing ugly produce back into the ground or letting it rot in the field, and stores are chucking food that’s near or past its date into the garbage because there’s nowhere else they can send it. Can we change this? Why doesn’t the government just fix the problem? The follow-up data to the 2013 Harvard study found that standardizing the date labeling system across the country — rather than leaving it to more local governments to address in a scattershot fashion — could be incredibly beneficial to the economy and to consumers. Enacting standardized legislation, it estimates, could prove to be an economic value of about $1.8 billion to the US. What’s more, an estimated 398,000 tons of food waste would be diverted to actually feed people, instead of sitting in landfills. But fixing it has proven harder. Since the 1970s, Congress has periodically introduced legislation to modernize and standardize the system, in various forms. But, as Broad Leib told me, it can be an uphill battle. “The last administration and Congress were fairly deregulatory,” she pointed out. In the years since the 2013 study, many states have passed laws to try to standardize their own dates, even if they don’t align with other states. While Broad Leib and her colleagues argue that businesses (particularly national ones) would benefit from trying to meet one federal standard rather than different standards in different states, the philosophical differences can still be tough to surmount. “When you’re in a government that’s deregulatory, even for a good regulation, they say, ‘Let industry handle it. They have a voluntary standard, and we don’t need to step in.’” Furthermore, Congress just moves slowly. “They don’t have a lot of stand-alone small bills,” she said. “So the best hope that this has of getting enacted is hitching itself to a moving train. A lot of our work has been in saying, ‘Here are other bills that are moving along’” — like the US Farm Bill, or the Child Nutrition Act — “and here’s why date labeling fits in with them.” Quite a bit has happened in the years since Broad Leib and her colleagues first published their study. Seeing the problem, two major associations (the Consumer Brands Association and the Food Marketing Institute) put together a working group to design a standard date label that would work for both businesses and consumers. “They came up with a ‘best if used by’ label for a quality date and ‘use by’ for a safety date,” Broad Leib told me. “And they got a bunch of their members to sign on to voluntarily shift to using those dates.” In other words, if a food won’t decrease in safety but might decrease in quality, the manufacturer would use the “best if used by” label; if it might become unsafe to eat, they’d use the “use by” label. That system corresponds roughly to a standard used in many other countries. This could make the work easier for the federal government to act, she says. “If Congress wanted to act, or the FDA or USDA wanted to act, it would be very easy to say, ‘Here’s what the standard label should be. We have some data on what works for consumers. And we know that these work for industry.” But otherwise, she calls the new label standard more of a “halfway solution,” since the label still will only appear on some products. It’s more than laws. The culture needs to change. And until there’s a better solution, the best thing we can do is try to educate ourselves and change the way we shop for food. Broad Leib says there would be three big components to improving the system as it stands. First, the adoption of standard labels that indicate either a freshness date or a risk date would help. But the second part is just as important: We need a public health program to educate people about what’s safe to eat. The UK has done a series of campaigns toward that end, with the slogan “Look, Smell, Taste, Don’t Waste,” in which it partnered with industry to help people understand when to keep their food and when to toss it. A free fruit and vegetable distribution effort in the Watts neighborhood of south Los Angeles, organized by the Watts Labor Action Committee and Food Forward, aims to collect gleaned and discarded food and distribute it to those who need it. Frederic J. Brown/AFP The third component would be changing the way we allow food to be donated and distributed through food banks and other means. That requires a shift in how we think. If everyone is eating food past its “freshness” date — understanding that the food is perfectly safe but may not be at its absolute peak condition — then there will be less hesitancy about giving that food away, and less fear about the possibility of facing legal repercussions. That could have a huge impact on hunger and food insecurity in the US. “If everyone acknowledges that those foods are fine to eat, and everyone’s eating them, it’s not like, ‘Past-dated food is only for people who can’t afford food,’” Broad Leib said. “No, we should all be eating that.” But that means we each need to rethink how we interact with food. We need to start trusting our senses to tell us if food is edible. “Use your sense organs,” Adler said. “We have them so that we can figure out whether things in the world are going to kill us, so we can make sure we’re not going to poison ourselves and die — and it’s even worth doing when you suspect something is bad, because feeling your body’s response is so reassuring.” We need to ask for more clear labels, advocate for better legislation, and talk to one another about what labels really mean. And we need to move closer to food again, thinking of it less as a packaged consumer product and more as something natural that nourishes us as humans. And in my case, that means I’m going to start sniffing what’s in my refrigerator before I chuck it — and maybe even turning it into lunch. Will you support Vox today? We believe that everyone deserves to understand the world that they live in. That kind of knowledge helps create better citizens, neighbors, friends, parents, and stewards of this planet. Producing deeply researched, explanatory journalism takes resources. You can support this mission by making a financial gift to Vox today. Will you join us? One-Time Monthly Annual $5/month $10/month $25/month $50/month Other $ Yes, I'll give $5/month Yes, I'll give $5/month We accept credit card, Apple Pay, and Google Pay. You can also contribute via Next Up In Money Most Read Inside the bombshell scandal that prompted two Miss USAs to step down Take a mental break with the newest Vox crossword North America’s biggest city is running out of water The Trump hush money case has been a quiet affair. Enter Stormy Daniels. Macklemore’s anthem for Gaza is a rarity: A protest song in an era of apolitical music Sign up for the newsletter Today, Explained Understand the world with a daily explainer plus the most compelling stories of the day. Email (required) By submitting your email, you agree to our Terms and Privacy Notice. You can opt out at any time. This site is protected by reCAPTCHA and the Google Privacy Policy and Terms of Service apply. For more newsletters, check out our newsletters page. Subscribe The Latest What we know about the police killing of Black Air Force member Roger Fortson By Li Zhou Inside the bombshell scandal that prompted two Miss USAs to step down By Constance Grady How to listen to Today, Explained on the radio By Vox Staff Macklemore’s anthem for Gaza is a rarity: A protest song in an era of apolitical music By Aja Romano Eurovision is supposed to be fun and silly. This year is different. By Alex Abad-Santos How the White House just made the world a little safer from biorisks By Kelsey Piper",
    "commentLink": "https://news.ycombinator.com/item?id=40318123",
    "commentBody": "Food labels and the lies they tell us about ‘best before’ expiration dates (2021) (vox.com)120 points by gsky 21 hours agohidepastfavorite207 comments kazinator 10 hours agoThere is one truth you can more or less rely on. If there are two items on the shelf X and Y, such that ( 14 days from roast Cheers reply ricc 51 minutes agorootparentIsn't affogato just vanilla ice cream with espresso? reply aryonoco 5 hours agorootparentprevWhat is Expresso? reply rockinghigh 5 hours agorootparentThey probably mean affogato and espresso. reply dylan604 5 hours agorootparentby they, you mean the auto incorrect updater by which I mean it automatically incorrects whatever you type. reply ben_w 3 hours agorootparentAutocorrupt reply crtasm 8 hours agoparentprev>A jar of peanut butter that is best before January 2025 is one month older than one that is February 2025. Therefore, of course, you want to grab the latter one I don't follow you. In a few weeks I'll have eaten it all, I don't even look at the BBE on things like peanut butter. reply bmacho 2 hours agorootparentIt was an assumption that you will choose the more value for your money, even if it is pretty negligible. Some people do the opposite, when they buy something they choose the less value for their money (when it is negligible), if it maximizes the total value for the society. reply coldtea 47 minutes agorootparent>It was an assumption that you will choose the more value for your money, even if it is pretty negligible That incurs the opportunity cost of caring and checking labels for a \"pretty negligible\" marginal win. Fuck that. reply userbinator 6 hours agorootparentprevIf you know you'll consume it long before that date, then it certainly doesn't matter much. However, for those who buy infrequently and intend to store products for longer, it make sense to get the most recent production. reply kazinator 5 hours agorootparentWhat makes it not matter is if you believe the opinion of the best before date to be true: if the stuff is just fine for a year, then it being a month older makes no difference. I'm of the opinion that fresher is fresher. What's my incentive for taking the older stuff, if it's not discounted? Only this one: saving a few seconds by not looking. reply Tijdreiziger 5 hours agorootparentReducing food waste. If everyone optimizes for taking the ‘fresher’ product, the older one will sit on the shelf and eventually the store will throw it out. reply kazinator 5 hours agorootparentI will buy it at at discount. If I need something and it's the last one (nothing to compare against), I will buy that also. reply dylan604 5 hours agorootparentprevif it's in a can or box with a date that far into the future, using the word \"fresh\" seems incorrect in all aspect to me. if you want fresh, you shop on the outer walls of the super market. anything on the interior aisles is not fresh. I wish it were a thing that as you continued to the innermost sections the \"food\" became more processed, and instead of aisles, it was just a spiral to that point. reply BrandoElFollito 1 hour agorootparentThis is probably a country specific thing. In France the vegetables will be right in the center of the shop. The butcher/cheese/fish section can be anywhere, it depends on the shop. reply nightfly 7 hours agorootparentprevHow much it matters really depends where you shop. Places like Grocery Outlet, or places that don't have super frequent business like small rural grocery stores, can be selling food that _right up to_ the best-by date. reply resolutebat 25 minutes agorootparentThe mom & pop Asian grocery in my hood has a discount section where basically everything is past the best by date. It's all packaged cookies and spice mixes and the kind of thing that won't kill you if it \"expired\" a week ago though. reply kazinator 7 hours agorootparentprevThe point is that just because the best-before date is a year from now doesn't erase the fact that one item on the store shelf is a month older than another identical one. reply dylan604 5 hours agorootparentwhat does it say about the store you are at that has food that has dates that far apart? most products are received at the store from the factory from the same batch which means sameish dates. so how do the dates on the products vary that much on the shelf unless some gamesmanship is being done somewhere. reply sokoloff 4 hours agorootparentIf peanut butter comes in cases of 24 that are in pallets of 144 cases and is delivered every month to the regional distribution center, many stores will have both the month and ++month product on the shelf at the same time. The alternative is to be frequently out of stock. reply watwut 2 hours agorootparentprevIt just says that they restocked half empty shelf with newer stuff. The factory is not sending new batches every day. Month apart on something that is valid for years is oftentimes how they are spaced. reply VS1999 7 hours agorootparentprevHow would I feel if I didn't eat breakfast this morning? I don't follow you. I did eat breakfast. reply joecool1029 6 hours agorootparentSome people have a problem with this: https://en.wikipedia.org/wiki/Theory_of_mind reply kQq9oHeAz6wLLS 7 hours agorootparentprevI believe peanut butter was intended to be a generic example. Substitute something else at your pleasure. reply kazinator 5 hours agorootparentI'm drawing a blank. Wait, almond butter! reply coldtea 48 minutes agoparentprev>A jar of peanut butter that is best before January 2025 is one month older than one that is February 2025. Therefore, of course, you want to grab the latter one. Only if they're the same brand. Some brands have different shorter best before dates, within what's permissible, than others. reply treflop 2 hours agoparentprevThe problem is that different foods have widely differently ways of spoilage. Date packaged is meaningless unless you exactly know the ingredients of the product, its ratios, and somehow can determine when it will go bad. For something like coffee with one ingredient, it’s obvious. That’s why a lot of single-ingredient products like coffee or lettuce already have a packaged-on date. reply wodenokoto 1 hour agoparentprev> but not in a way that you would get sick from consuming them. Is t that that what best before means? The date until when you can expect the food not to change considerably. At least in Europe we sometimes have a “do not consume after” which is when the product is expected to go bad, not just off. reply Rinzler89 1 hour agorootparent>At least in Europe we sometimes have a “do not consume after” which is when the product is expected to go bad, not just off. Sometimes yes but only on products known to spoil quickly and become dangerous to your health. But still even most dairy has best before and not to be consumed by. reply GrantMoyer 8 hours agoparentprevA best before date is literally a manufacturer recommendation about the time for which the quality of their product is practically as good as new. Absent specific information to the contrary, I typically trust the manufacturer's recommendation; they are certainly able to make a better informed guess than I am. Thus, I consider each of a product which I expect to use by the best by date equivalent to one another, and I don't prefer a newer one just because it's newer. reply bmacho 2 hours agorootparent> Absent specific information to the contrary, I typically trust the manufacturer's recommendation; they are certainly able to make a better informed guess than I am. This works the other way too: if you have information about the aging of the product because you tried it out one time, then you can pretty much just ignore what the manufacturer says. reply throwaway290 7 hours agorootparentprevManufacturer's recommendation is based on what they can be sued for not things like bad taste and such which personally matter. Also storage conditions are not always followed when moving or storing the product. Between two products with different best before dates I would just go and get a product that listed actual manufacturing date :) reply bobthepanda 7 hours agorootparentI mean the later manufactured product can also be stored improperly so don’t you wind up in the same situation? reply ScoobleDoodle 3 hours agorootparentNo. Absent additional information, the fresher is more likely to better with less opportunity and duration to be improperly stored. reply makingstuffs 8 hours agoparentprevThat’s pretty much what you get in India, a date of manufacture and a recommended shelf life. Everything else is up to you reply kranner 7 hours agorootparentIt's still illegal to sell expired products in India under section 273 of the IPC. reply hwbunny 1 hour agoparentprevUsually, with a lot of products, the expiry date is just an indicator. I ate 12+ year old pastas, 2+ year old sauces I found in our pantry and they were indistinguishable from half year old items. Well, the sauces actually had a much better taste than the ones used before expiry. I'd rather see an expiry date plus some indicator that after the expiry date how fast would it spoil, or what changes it will go through, if ever. reply Joker_vD 6 hours agoparentprev> I would much rather see \"date packaged\" on every product. ...it's not there already in the US? Over here, there is always a \"production date\" on the packaging, and then additionally it's either a \"best before\" date, or a \"shelf life\" time. But to put just a best-before date without the production date?.. That's insane. Why even omit that? reply kohbo 5 hours agorootparentBecause it's not required reply bmacho 2 hours agorootparentOne can argue that it has negative value for the customer. Advantages: a fancy fact, satisfies your curiosity Disadvantages: you can mistake it for the expiration date, especially if that gets less visible for some reason reply tech_ken 17 hours agoprev> Every so often, I go through my refrigerator, check labels on the items, and throw out anything that’s a month, or a week, or maybe a few days past the date on the label Does anyone actually do this for real? In the overwhelming majority of cases it's extremely straightforward to determine if the food is safe to eat empirically. Only in a couple highly specific cases do you need to be conservative about eating old food (meat products and cooked rice are the two I worry most about, and I don't eat much meat so it's really just the latter). If it smells bad or tastes bad: don't eat it. If you can cut off or pull off the parts that are bad, but the rest is good: you're fine. Humans can (and have) survive and thrive on a shocking variety of food items and qualities, this level of omnivory is one of our biggest evolutionary advantages. I don't even look at the expiration date unless I'm already concerned that the food might be spoiled. Am I just weird? I thought everyone did this. reply EvanAnderson 16 hours agoparentMy parents own a small independent grocery store. My family ate a ton of \"expired\" food when I was growing-up because it made good economic sense. What you say is absolutely what we did-- throw out the items that really are bad (meat being the primary offender), cut off the bad parts of partially-rotten food, and eat the rest. Food waste is really, really offensive to me. I probably take it a little too personally and too seriously. (Wasting meat is particularly galling to me, what w/ the likely terrible life the animal had making its way to your table.) reply jonahbenton 15 hours agoparentprevI will eat anything that isn't in obvious danger of killing me but my wife comes from a family that treats dates as gospel, that (in accordance with FDA guidance) at events will get stressed about food being left out for more than an hour, etc. Those people exist, and in fact they are everywhere. reply mikesabat 9 hours agorootparentI was strongly under the impression that medications with expiration dates do not become dangerous after their expiration, but they may be less effective. That turns out to be wrong according to the FDA website. https://www.fda.gov/drugs/special-features/dont-be-tempted-u... Either way, the tylenol in my cabinet expired in 2014 and I'm doing fine. reply joecool1029 6 hours agorootparent> I was strongly under the impression that medications with expiration dates do not become dangerous after their expiration, but they may be less effective. A few like tetracyclines can become dangerous, apparently that's caused Fanconi syndrome and other kidney problems in a few cases. But that drug is the exception rather than the norm, but since I used to keep doxycycline around for treating Lyme I made sure it was stored in a cool/dry area and never got too far past the expired date. Aspirin is a pretty easy one to tell if it's past its prime, it'll smell like vinegar as it decays into acetic acid. This falls into the 'loses its potency' category where the thing it decays into isn't harmful. reply kragen 44 minutes agorootparentif my reading of the shelf life extension program paper from 02006 is correct, doxycycline is especially good at surviving past its expiry date. maybe manufacturers are especially conservative about doxycycline expiration dates due to the toxicity risk? the paper didn't mention toxicity risk or safety at all reply hahajk 7 hours agorootparentprevThat article basically says the same - that they're less effective after a time (and if you're trying to save your life with them, less effective could mean deadly) It does try to suggest that \"there could be bacteria growth\", but the article hedges and seems like it barely believes that itself. I'm sure some of the syrups could grow bacteria possibly. reply stoperaticless 4 hours agorootparentprev“Medication” is very big set of very different things. When you need to boil down master level chemistry knowledge to one sentence, it is very practical to be conservative and just say “dont use it after exp. It might be dangerous”. (Because, some of them will be dangerous) reply rconti 8 hours agorootparentprevyeah, I haven't really thought twice about taking, say, ibuprofen that's 20 years expired. It's good for a laugh, that's about all the critical thought I put into the label. reply tharkun__ 11 hours agorootparentprevThis. Actually I'd ask your parent poster back: there are people that believe most people don't treat BB dates as \"will turn bad exactly on this date\"? reply distances 57 minutes agorootparentWell it literally is \"best before\". In my mind a reasonable consumer would read that as \"still pretty good, and hopefully delicious after\". reply terribleperson 10 hours agorootparentprevHonestly, I am way more concerned about food being left out than sell-by/best by dates. The harm that can result from leaving food out is well-established. Sell-by dates? We're basically taking the manufacturer's word for it, as if they're somehow impartial here. reply tech_ken 10 hours agorootparentYeah actually I’m with you on this. Not for everything, but there are definitely food items I won’t try to save after ex. putting them out for a party (like if a dairy based dip has been at room temp for more than 1-2 hours it’s not going back in my fridge). reply terribleperson 4 hours agorootparentRice is one I pay close attention to. When I get takeout from my favorite Taiwanese restaurant, I usually throw away the rice they give me and cook my own (it's a bit of a drive back to my place). Of course I then keep it warm in my rice maker for 24 hours, but supposedly that's safe in this Zojirushi. reply resolutebat 21 minutes agorootparentWhy? A Taiwanese restaurant is going to go through a lot of rice, so it seems unlikely they'll serve you anything that's been sitting around for ages, plus it's usually very obvious from the texture if it has been sitting around. reply Dylan16807 3 hours agorootparentprevDo you not like the texture or something? Throwing away room temperature rice after an hour or two has nothing to do with safety. reply brabel 3 hours agorootparentprevWhat's the deal with rice? I come from a culture we eat a lot of rice. You can keep rice in the fridge for nearly a week. The only time I throw away rice is if it has visible fungus on it. reply MikeDelta 3 hours agorootparentThe problem is with cooked rice that hasn't been cooled off properly (or not kept hot enough). The heat-resistant spores of the Bacillus Cereus will then develop and the bacteria will proliferate and produce a heat-resistant toxin, which can hurt you even after reheating the leftover rice. You need to keep your rice cold (63 °C) enough for the spores not to develop. Letting your rice cool off naturally in a pot is also leaving it at the wrong temperatures for a longer time than if you rapidly cool it off. https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7913059/ reply watwut 2 hours agorootparentI never ever heard of rice poisoning and it is the most common takeaway dish. reply kbrkbr 36 minutes agorootparentMe neither until very recently, when a student died from it. Then it was all over the news for a week. (I'm pretty sure that is in the level of being struck by lightning.) It has even a name: fried rice syndrome. https://health.clevelandclinic.org/fried-rice-syndrome reply stoperaticless 4 hours agorootparentprevPlease ask them not to add rice if you plan to throw it away. Thanks :) reply fragmede 3 hours agorootparentprevthat's unnecessarily wasteful reply User23 9 hours agorootparentprevMeanwhile when I grew up we’d cover cooked leftovers, including meat, leave it out, and eat it the next day. I never got food poisoning. reply sunshinesnacks 9 hours agorootparentSounds risky to me. I’ve never needed a seat belt or bike helmet, but I still use both. reply adamomada 8 hours agorootparentDoesn’t that prove the opposite though? One in a million+ meals might make you sick, that’s not risky reply medstrom 1 hour agorootparentIf that meal makes you deadly sick, yeah it's risky. reply treflop 1 hour agorootparentprevIdk the risk is not remotely the same between two people. I’ve drank the tap water in India, eaten fish that’s just been sitting in a pan on my stovetop for a day, cooked and eaten expired slimy chicken (admittedly more than a few times), among many other transgressions, and I’ve never felt sick. Whatever few organisms and their toxins that may grow if I leave leftovers out an hour too long has so far been easy mode for whatever acid bath flows through my body so I’m not going to throw away food needlessly. (P.S. If I cook for someone else, I have much more stringent food safety standards. Also despite my transgressions, I do usually cook non-expired high quality food.) reply PhilipRoman 3 hours agorootparentprevWorks great as long as you aren't in a hot climate. Out of curiosity I checked and I'm currently measuring 14 degrees C in my room. Haven't turned on the refrigerator since October. reply Turing_Machine 9 hours agorootparentprevDo you live in a cool climate, or maybe always had air conditioning? Some things will definitely go off if you leave them unrefrigerated for a day in a hot climate. reply mixmastamyk 5 hours agorootparentA cooked dish was sterilized. It won’t go bad for a day or three, depending on how often it is opened. Before refrigeration this was very common. reply LouisSayers 6 hours agorootparentprevYeah, especially roast lamb / beef. You can easily leave those out probably a couple days and it'll be perfectly fine so long as it's covered away from insects and the cat / dog Although perhaps in warmer climates it might be an issue. reply baby 8 hours agoparentprevFirst, what you’re saying is not necessarily true. As you pointed out rice and meat are tough, but so are things like bread. If you spot mold you bet it’s everywhere even in the places you can’t see it. Anything spongy inside needs to be thrown if you spot mold. But what about fresh fish and meat? What about salad drenched in vinaigrette? What about broth? What about sauces? What about pickles? I’ve had stuff for years in the fridge it still looks good. reply solumunus 2 hours agorootparentFor all of my life, if a bit of the bread is mouldy I tear that bit off and eat the rest. I’ve never become ill from this. reply medstrom 1 hour agorootparentI'd Google this if I were you. reply JohnFen 14 hours agoparentprev> Does anyone actually do this for real? I don't. For most foods, it's really obvious when they've become unsafe to eat. For those where it's not so obvious, my policy is \"if I can't remember how long it's been in there, I'm tossing it.\" I can't remember the last time I actually looked at a date printed on the packaging. I've found those dates to be meaningless. reply heelix 9 hours agorootparentIt was not until I was married that I found out mayo even had an expiry date. None of my roommates in the university days used enough to actually work through a jar. It somehow made it fridge to fridge through multiple leases. reply bobthepanda 7 hours agorootparentMayo is one of the foods where I would be antsy about dates. That is an extremely common cause of food poisoning reply kragen 36 minutes agorootparentnot by itself generally. it's too salty and acidic, and the supermarket stuff is often full of edta to boot, so bacteria can't get iron, magnesium, or calcium. mayo diluted with boiled potato is another story also supermarket mayo is labeled as good for months, but salmonella (the usual culprit) can grow in hours. so the sell-by date wouldn't protect you there reply martyvis 1 hour agorootparentprevUse by dates are only relevant until the product is opened. They usually then have a \"consume within\" time which is often relatively short. reply morsch 2 hours agorootparentprevSource? I mean obviously be careful with homemade mayo made from fresh, uncooked egg, but the store bought stuff is pasteurized and seems pretty stable. https://ask.usda.gov/s/article/Does-mayonnaise-cause-foodbor... reply glonq 17 hours agoparentprevEven though I think my sense of smell and taste is fine, I have been accused on multiple occasions of eating food that was not good. In fact, my children have stopped asking me whether an item in the fridge is okay because they don't trust me :D reply tharkun__ 11 hours agorootparentIf I had a nickel for every time I have been asked by family to throw out awesome cheese because \"it's moldy\"... (it was just \"sweating\" the salts and tasted amazing) reply rayiner 14 hours agoparentprev> Does anyone actually do this for real? In the overwhelming majority of cases it's extremely straightforward to determine if the food is safe to eat empirically. I do. How am I supposed to know if the food is still good? Maybe I can't smell the problem. I trust the experts to put appropriate labels on things. reply kragen 25 minutes agorootparentprobably people trusting experts about what to eat is how we got a worldwide pandemic of obesity and metabolic syndrome. the incentives of the experts are not always properly aligned; it was experts who formulated nestle's notorious ad campaigns to replace breast milk with formula, after all, and that sort of thinking wasn't limited to africa. nicols fox's 'spoiled' documents several late-20th-century shenanigans in the usa where expertise was deployed not to prevent foodborne illness but to evade blame for it by rendering it harder to trace taken to the extreme, trusting the experts to label things properly results in absurdities like https://news.ycombinator.com/item?id=40324991 people have been detecting unsafe foods by smell for thousands of times longer than they've been people. (and yet foodborne infection remains a leading cause of death.) reply barbazoo 14 hours agorootparentprevThat's what they're saying, it mostly is possible to see, taste or smell if something is bad. reply kaydub 10 hours agorootparentI have a pretty poor sense of smell and I've had terrible food poisoning a couple times in my life. If it's past expired I throw that shit out. I make sure to do a decent job meal planning to control waste. reply cafard 16 hours agoparentprevI check the dates on orange juice containers, but only if there are two or more unopened in the fridge, in which case I want to open the oldest. Otherwise I don't check. reply sitkack 16 hours agorootparentI like my orange juice fizzy, so I only start drinking it when the container starts expanding. reply tech_ken 16 hours agorootparentGuy who's about to invent wine be like reply throwup238 15 hours agorootparentWait till he finds out about prison hooch. reply nightshift1 9 hours agorootparentprevDon't forget to brush your teeth before drinking it to get all the flavours. reply JumpCrisscross 10 hours agoparentprev> In the overwhelming majority of cases it's extremely straightforward to determine if the food is safe It drives me nuts, but I have a lot of friends who will buy a bunch of bananas, let them go brown (not rot), throw them out, and then buy more bananas. Or throw out all of my store-bought kimchi, which makes no sense. reply fallingsquirrel 10 hours agorootparentThat's 35 cents a week to pretend you care about eating healthy. You tell yourself you can't eat them today because they're too green. Then in a few days you can't eat them because there are spots. Too bad! I'll try again next week. I can see the reasoning. reply bavell 9 hours agorootparentDamn, this describes me too accurately haha. They're so cheap! How could I not at least try!? XD reply toxik 1 hour agorootparentprevI end up in this situation unintentionally, what I started doing is to peel and freeze them as they get overripe. Then you can use them for smoothies or banana bread some day in the future. Like in several months. reply fitzmakes 15 hours agoparentprevProbably best to cut off a bit more than just the obviously bad part; mold tendrils can go deep. reply green_dee 15 hours agorootparentYeah I was going to say the same. Fungi species can grow real deep, large and invisible to our senses. I understand people ITT getting offended on throwing out food with parts rotten, but honestly if it's not an exception such as banana I will probably throw out the entire piece (like bread) if there is any part rot at all. reply tech_ken 13 hours agorootparentprevGood point, yeah I should be clear that if like half my loaf of bread is moldy I'm chucking the whole thing; I'm only saving it if it's like a few slices at one end that are moldy. Probably would have been better to say that I cut off the part which is obviously good, leaving a healthy margin and tossing if in doubt. reply toxik 1 hour agorootparentWhite bread is actually super easy to colonize for mold, even a bit of mold is a near guarantee that the rest is moldy - just not with spores. My tip is to only keep a half dozen or so slices fresh and freeze the rest. Frozen toast tastes just fine. reply objektif 8 hours agoparentprevWhat is the issue with cooked rice? reply Vegemeister 7 hours agorootparentIIRC the issue is with cultures that leave rice out on the counter at room temperature, because of historical inertia from per-refrigeration times. In that case, it does support life like anything else moist and pH neutral. But there is no problem if you follow good food safety practices -- everybody puts the lid back on the pot after they've served themselves, and any leftover goes in the fridge within 4 hours of cooking. reply TaylorAlexander 7 hours agorootparentprevCooked rice goes bad pretty quickly even in the fridge and can make you pretty sick if you eat it. reply tedunangst 7 hours agorootparentThis is not true. reply buildsjets 6 hours agorootparentSure it’s true. Uncooked rice often contains the bacteria Bacillus cereus. These bacteria can form protective spores that survive the cooking process and if the rice is cooled slowly these bacteria spores can germinate, grow and produce a toxin that causes vomiting. reply fragmede 3 hours agorootparentIf you’ve eaten the dish known as fried rice, the rice used there has been cooked and then chilled for 24 hours. So while what you’re saying is true, the topic is complex. reply tedunangst 7 hours agorootparentprevPeople don't understand that refrigeration stops the growth of toxic bacteria, and throw away perfectly good rice because they lack a basic understanding of biology. reply MikeDelta 2 hours agorootparentThe issue is not refrigeration, but how you got to there: how is the hot rice cooled before putting it in the fridge. I imagine not everyone has a blast chiller at home. Does one leave it to cool off naturally, and in what kind of container? Perhaps overnight? During this process, the rice can take hours to go from 90°C to room temp, and it is during this process that the toxins are created. It might be too late when you put it in the fridge. Cooling off needs ro be done as quickly as possible by spreading the rice, for instance. It is not necessarily the lack of basic understanding of biology that causes people to get sick and therefore many to throw away good rice, but the incomplete understanding of the cooking process. When you get a box of cold rice, there is no way of smelling how it has been cooled and if it is toxic or not. reply xp84 6 hours agorootparentprevWould you really say “stops”? Not “slows”? Things still do go bad in there, idk about bacteria though— but mold for sure. reply spiderice 6 hours agorootparentprev> People don't understand that refrigeration stops the growth of toxic bacteria I’ve never met a single person who doesn’t know this. reply revlolz 14 hours agoparentprev>If you can cut off or pull off the parts that are bad, but the rest is good Isn't this untrue for spores and mold? I'm not making the claim, I'm genuinely unsure and remember stern warnings that unseen spores and mold are a threat with moldy bread and fruits. reply tech_ken 13 hours agorootparentYeah sorry should have been clear that I was thinking about a case where like one or two blueberries in the corner of the package have just started to mold, or where it's a non-mold problem (like maybe an apple bruise has made 1/3 of it mushy, I'll probably still eat the other half). Generally stuff that has a nontrivial amount of mold I'm not trying to save. reply tharkun__ 11 hours agorootparentMushy apples are fine. I wouldn't buy them like that. But picking up the half mushy apples that fell from the tree is how we got all our apple sauce made when I was a kid. Dirt cheap. Come to think of it. My mom still does this. reply asquabventured 17 hours agoparentprevYes, there are lots of people who do this. Type A personality from my personal experience lets the tail wag the dog at times and food has a schedule printed on it so it’s just an easy thing to do just follow the directions and schedule and fuck all context. Life seems easier if you have the ability to put blinders on and never question why? reply astura 16 hours agoparentprevMy husband goes into the fridge and throws out random stuff without even reading the label or opening it saying \"it's old.\" Drives me fucking insane. I've never thrown out food that isn't rancid/moldy. reply devilbunny 9 hours agorootparentMy mother-in-law cleaned our pantry. I didn't ask her to, but she was here for a week, and just did it. She threw out salt because it was past the \"best by\" date. Mind you, that salt has spent millions, possibly billions, of years in the ground. I asked why. She said, if the manufacturer says that, why would they lie? I don't often find myself reaching out for facepalm memes or \"SMDH\", but I sure did then. I just said okay, but don't ever throw out salt again. reply sokoloff 4 hours agorootparentI feel obligated to link to the 250 million year old salt expiring next year: https://www.reddit.com/r/pics/comments/7stejt/this_250_milli... reply yumraj 8 hours agorootparentprevSalt has a best by date? WTF… reply adamomada 8 hours agorootparentI’ve seen old kg packages of salt turn into a brick. I suppose the salt itself is still good, but you’re gonna have to grind it up reply yumraj 4 hours agorootparentThat is different issue. Anything can be spoiled by moisture, or other factors. A best by date implies it is stored properly even then there’s a difference in taste/quality before and after the best by date. Which is not true for salt. reply skirmish 7 hours agorootparentprevDoesn't that all depend on air humidity? How can the manufacturer account for that in a printed date? reply bdw5204 9 hours agoparentprevIf you're finding food that is past the expiration date on a regular basis, you're probably wasting money on stuff you rarely or never actually eat. It isn't a problem anybody should be running into. reply usernamed7 9 hours agorootparent> it isn't a problem anybody should be running into. This is an absurd assertion that fails to reflect the reality of food storage in refrigerators. reply xp84 6 hours agorootparentIdk, I’m definitely guilty of it, a lot, but even I admit that it’s self-inflicted and I “should” just not buy so much food. reply neilv 10 hours agoprevA few food-poisonings can make one cautious about food safety... Even though I'm pretty frugal, one measure I currently practice is to usually not touch food past the best-by/sell-by/expiration date. (Though I'll take this article into consideration, going forward.) Since I don't like waste, unopened shelf-stable food packages go to the \"free stuff\" shelves in my large apartment building, where they disappear very quickly. (Other measures included getting thermometers for fridge and freezer, stopping using sponges and brushes to wash dishes because the occasional microwaving of them might not be enough, tracking dates that some kinds of food were opened/started, and paying attention to packaging dents/puffiness/unsealing.) reply locallost 5 hours agoparentI've been actively ignoring these for the last 15 years. For things like fresh meat the smell test is more important - I would even not use something that the label says is good if it smells bad, which happened. Very rarely, but it happened. They have to put those things in most places by law, e.g. honey, even though something with a high level of sugar can last a very long time. Honey can probably last forever. I've eaten candy 10 years past expiry date, some kind of a sugary spread 4 years after expiration etc. I've even had yoghurt a month past expiry. Did not expect, but it was fine after taking a small sip. It's not completely useless for all things and it is some indication to at least pay more attention, but for the most part it's not really decisive. reply portaouflop 1 hour agorootparentI recently ate joghurt that was 6 months after expiry. It lost a lot of water so was quite dense but otherwise fine. I also had some pumpernickel bread that was fine several years after expiry, same with baked beans, lentils, breadcrumbs, etc reply kragen 20 minutes agorootparentyogurt is sort of a special case; it was developed as a way to preserve milk without refrigeration. it's basically pickles made of milk reply schneehertz 2 hours agoparentprev\"\"free stuff\" shelves\" When I realized that antisocial individuals might place toxic food there, I fell into panic. reply medstrom 1 hour agorootparentWhat's toxic food and how do you make it? That's the point of this thread... reply Turing_Machine 9 hours agoparentprev> Even though I'm pretty frugal, one measure I currently practice is to usually not touch food past the best-by/sell-by/expiration date. Three different things. Best-by -> may not be particularly unsafe, but starts tasting gnarly as time goes on. Sell-by -> the store should sell it by this date, but there's still a healthy margin of time left for you to keep it on your shelves and eat it. Expiration -> They definitely don't want you to eat it after this date. reply joecool1029 6 hours agoprevOnly one person mentioned this in passing so far, but I highly recommend getting a thermometer for your refrigerator to ensure it's keeping food cold enough for safety. I really think a lot of people have no clue what the inside temperature of their fridges are and think it's totally normal to have milk and other food spoil within a week. It's also not uncommon to have warmer and colder spots in it depending on airflow. reply GoofGarage 3 hours agoparentYep, moreover they cost a whopping $7. Not only can you ensure things are in a safe range, but also not too cold to further improve efficiency. An oven thermometer is another one I’ll recommend, as the temperature the oven claims it’s at is a function of where the sensors are. It’s not uncommon for it to be consistently off by 5-6%, which can really matter if you want the best results. Again, about $7 can solve that one too. reply mannyv 19 hours agoprevPeople underestimate the cost of shipping produce. If you look at banana boxes, most of them come from Ecuador (in my area). There's a river of bananas coming from Ecuador to the US, and that river gets broken up into various tributaries which get smaller and smaller until the dribble of bananas ends up at your local store. And then they sell for .68/lb. Anything that makes those things last longer is something everyone wants. In fact, in the case of bananas that variety (Cavendish) is chosen because it lasts longer. There are plenty of produce that aren't shippable because they spoil - like Hood Strawberries, which only last for a few days and are only available locally. That's two examples, but really - the idea that producers change the expiration date is patently ridiculous, at least in the US. Frozen food and canned goods probably never expire. But things do break down. As a sort of ridiculous example, soda doesn't last forever for sure. And if it's in the sun or not refrigerated it gets weird. reply rs999gti 18 hours agoparent> Frozen food and canned goods probably never expire. They do, just much slower. reply beerandt 18 hours agorootparentWe hit a peak of canned food durability probably 20-40 years ago. Where we figured out manufacturing well enough, but hadn't gone fully synthetic with liners, overly minimized wall thickness, etc. Probably packaging contamination issues as well. I've had more (young) cans rupture in the last decade than any time before, even as they're stored next to much older ones. We're doing the same thing right now with plastic - drink bottles now weak thin and brittle vs the relatively strong/ ductile stuff of 10-15yrs ago. reply SkyPuncher 18 hours agorootparentSounds like manufacturing is getting better at reducing waste, since they’re able to use less material per can. Yes, you should recycle, but we all know that not everyone does. reply beerandt 17 hours agorootparentIf the product is ruined, the entire package and contents become waste. Metal is at least mostly recoverable energy. The footprint of the contents lost is not. And ironically the lighter plastic packaging makes it more likely to be trashed and not reused, or even attempted to be recycled. (Reuse is 1-2 magnitudes more efficient than recycling.) reply SJC_Hacker 15 hours agorootparent>Metal is at least mostly recoverable energy. The footprint of the contents lost is not. It should be, but how much of that is actually recycled vs. how much ends up in a landfill. reply beerandt 6 hours agorootparentDoesn't matter. Marginal savings is meaningless if the resulting product is worthless. On top of that- 99% of people who find a ruptured can with black ooze are trashing it. And the other 1% are spending more energy/resources to clean a contaminated container than the recycling will save. (Washing things is surprisingly expensive in terms of energy/resources. Often worth it for reuse, but not recycling.) Now you're essentially comparing mpg on a trip to no where. reply kragen 17 minutes agorootparenton the contrary, if you can reduce the environmental cost per can by 30%, but the result is that 20% of the cans rupture and go to waste, you have still reduced the total environmental cost you are likely to go bankrupy tho reply SkyPuncher 14 hours agorootparentprevSure, but what percent of product are you actually loosing? It’s not a lot. reply beerandt 5 hours agorootparentIt varies. The manufacture has an interest in delivering it undamaged, but less in storage or handling or longevity. They used to overshoot to ensure hitting the goal they car about. It's probably efficient for them. They draw the system boundary after delivery. Because that doesn't necessarily make the full Life Cycle of the container and contents efficient as its actually used. It's similar to 'water saving' toilets. The manufacture sells a product with gal/flush, not gal/use. Real world use differs from nominal, and interests aren't always aligned, especially if regulatory bodies are involved. But the point is- the number is different depending on if you're the manufacturer, retailer, consumer, or recycling/ waste agency. Maximizing one parties efficiency doesn't mean an increase in net efficiency as viewed by others. reply Scoundreller 18 hours agorootparentprevWine bottles are continuing to go down in size too. The glass is still roughly half of the carbon footprint. Weights range wildly (and glass is largely unnecessary). https://www.joannasimon.com/post/lightly-does-it-reducing-bo... reply beerandt 5 hours agorootparentI think ultimately we'll realize overengineered glass (even if it's single use or crushed/repurposed or landfilled or recycled) is the best all around solution, especially taking into account health and future abundant (fusion-similar) energy. But also from big picture pollution/environmental and even carbon perspectives. reply jowea 9 hours agorootparentprevNot that it really proves anything but here a video of a niche youtuber eating Boer War surplus canned food https://www.youtube.com/watch?v=jZoHuMwZwTke reply RetroTechie 14 hours agorootparentprevFrozen food: slowly. Canned food (if still hermetically sealed): never. The \"going bad\" concerns quality/taste, not safety. I've had a few occasions where someone cleared out cabinets in their kitchen, and gave contents away. General findings: Dry stuff (pasta, cookies, rice, beans, spices, etc): fine for years (if not a decade+) past its best-before date. Canned food: if hermetic seal is intact, it's edible. Personal record: ~25y old fruit cocktail. Physical structure was poor and taste was bland, but it was edible. For fresh foods like meat, dairy, vegetables etc: look, feel & sniff. It's almost always obvious when it's gone bad. reply Merad 8 hours agorootparent> Canned food: if hermetic seal is intact, it's edible. Definitely not a universal truth. Canned food can develop botulism, you do not want to mess with it. Any cans that are bulged or show signs of swelling should be discarded - don't even risk opening them. There are guys on YouTube who explore old army rations (which were basically all canned food prior to the 1980s), and when they decide to open a bulged can \"for science\" they will often literally break out a gas mask. That said, it's also not terribly uncommon for them to find rations dating back to WW2 and older that are still partially edible. reply portaouflop 1 hour agorootparentBotulism indicates that the can has a hole somewhere or was compromised during packaging. reply Dylan16807 3 hours agorootparentprev> Canned food can develop botulism I don't think that has much to do with age though. Sometimes canning is done wrong. reply selectodude 10 hours agorootparentprevSpices aren’t going to make you sick but they don’t actually taste like anything after a couple months. reply mrec 10 hours agorootparentMy black pepper is BBE Jan 2006 but still tastes peppery. reply hi-v-rocknroll 8 hours agorootparentDried spices vary by volatility and oxidizability. I tried some 10 year old saffron kept in a corked vial, and it really didn't do much. I basically had to use the whole thing to get any yellow out of it, probably $20 worth. reply Vegemeister 8 hours agorootparentprevProbably doesn't smell peppery, though, especially if it's pre-ground. reply psunavy03 18 hours agorootparentprevI'm surprised in retrospect it took me so long to get a vacuum sealer, and why they aren't ubiquitous. I'm trying to really force myself to use it so I don't just chuck meat in a Ziploc bag, throw it in the freezer, and then months later throw it out because it's freezer burned. reply nick__m 7 hours agorootparentI find that zip lock bag, a bucket of water, a straw and the archimedes principle is sufficient to prevent freeze burn. reply HeyLaughingBoy 15 hours agorootparentprevButcher paper or freezer-quality Ziplocs make a huge difference. When I used to buy a quarter beef, there would be over 100 lbs. of beef in my deep freeze at any given moment, mostly wrapped in thick butcher paper. Ground beef was in plastic sleeves. It would be in there for over a year at times, and I never noticed even the slightest burn reply rolph 15 hours agorootparentprevyou may want to consider, smoking and drying/dehydrating. then use your vacuum sealer. custom, roll yer own, jacklinks rule, esp. caribou reply Scoundreller 18 hours agoparentprev> And then they sell for .68/lb. For some reason, banana pricing is hyper competitive in Canada. We pay CAD$0.56/lb or US$0.41/lb. (Yes, we sell them by lb not kg). reply nick7376182 10 hours agorootparentAs a parent, bananas are by far the cheapest and easiest \"healthy\"(?) food to transport, prepare and get kids to eat. Maybe that has something to do with it. reply BobbyTables2 20 hours agoprevBelieving expiration dates on raw, unsealed food is silly. But for packaged food, I have to wonder if the companies are as evil as some would wish. I’ve definitely noticed chips/crackers start to taste rancid not long after the expiration date. Preservatives and such do break down. Do we really want to be eating that? The manufacturers know the breakdown behavior and probably want to limit liability and negative experiences. Do safety studies take decomposing preservatives into account? (Questions, but suspect the answers are “No”) reply JohnFen 14 hours agoparent> I’ve definitely noticed chips/crackers start to taste rancid not long after the expiration date. That's because they're not expiration dates, they're \"best by\" dates. They're the date at which the food starts to get less tasty in various ways, but that happens much, much sooner than when the food actually becomes unsafe to eat. Manufacturers (generally) aren't lying about those dates. They really do line up with when the food is no longer as fresh-tasting as it can possibly be. At the same time, manufacturers don't mind even a little when people confuse them with expiration dates. reply rs999gti 18 hours agoparentprev> chips/crackers start to taste rancid It's the oil/fat used on or in the chips/crackers that goes rancid. That stuff oxidizes when the package is opened. reply yareally 10 hours agorootparentYou can throw old tortilla chips and crackers into the air fryer and they come back out fresh. reply rolph 15 hours agorootparentprevit tastes bad but wont hurt you. reply hi-v-rocknroll 8 hours agoprevSome guys I hung out with who lived in one of the most expensive ZIP codes in the US selectively freeganed pretty good grub from behind Whole Foods. IIRC, there is an inconsistent practice where grocers purposely destroy food they throw out to prevent freeganing. I do wonder about how many years various condiments last, especially those that don't contain any preservatives. Have had ketchup turn very dark brown before. At a minimum, barely expired food should be donated to nonprofits. At worst, food unfit for human consumption should be composted. Disposing of it in landfills is a waste of waste. reply lolinder 8 hours agoparentI had a neighbor growing up who would get large quantities of vegetables and breads from the local grocery store \"for her chickens\". I'm sure that she actually did give the bad stuff to them, but she also regularly made rounds about the neighborhood placing perfectly good food that was just past its expiration date. reply hi-v-rocknroll 7 hours agorootparentNice. Chickens will eat almost anything. Some folks I knew even gave their chickens coffee grounds. reply QuadmasterXLII 16 hours agoprevAs global policy, there is a very important, optimal amount of food waste: to first order, the xth percentile of uncontrolled variance in harvest size, where x is the percentage of years when we are willing to let some fraction of the population to go hungry. We can start eating 'expired' cheese in an emergency a hell of a lot easier than we can go back in time a year and a half and raise more calfs. reply kragen 13 minutes agoparentyou can stockpile food safely for a lot more than a year reply AnthonyMouse 6 hours agoparentprevIf the harvest is down 25% this year, the result is not that 75% of people eat the same amount of food as they do now and 25% starve to death, it's that the price of food increases and then the average person buys 25% less food. A significant percentage of the world population is overweight. That implies not only that they're eating in a caloric surplus and could feasibly eat less than they do now forever, but that they could eat in a caloric deficit for a period of time and the result would benefit their health. If production of food was temporarily low, people would not have to resort to eating foods that are expired, they could simply eat foods that are stored. The date on the can of soup in your pantry is two years from now, and you were going to eat it two years from now, but you can also eat it now. Low harvests in one year can generally be addressed by the next year, for example by planting different crops this year that aren't susceptible to this year's problem, or planting crops in a larger amount of land area, possibly in another part of the world not experiencing the same yield issues. The optimal amount of food waste is none. reply talldatethrow 6 hours agoprevWhen I was younger I for some reason thought butter doesn't go bad. I found some butter that was two years old in my fridge. I made cookies from them, and ate them all. I told my parents I finally ate that butter they gave me to take home with thanksgiving leftovers a few years ago and they looked at me like I was crazy and told me that butter expires. Now I'm not so sure. reply kragen 9 minutes agoparentthe big issue with butter is rancidity, which increases oxidative stress on your body. but butter is mostly saturated, so even at room temperature it lasts months. two years in the fridge is probably fine reply 0xDEADFED5 5 hours agoparentprevsalted American butter lasts a long ass time in the fridge. reply yumraj 15 hours agoprevIt rubs me the wrong way when most people refer to best by date on food items as the expiration date. Looks, smell and taste go far in deciding if food is good to eat or not. Interestingly even medicines don’t magically go bad the day after the expiration date. reply MarkLowenstein 6 hours agoparentIt's also a logically trivial statement. There is no threshold for \"best\"--food quality is a matter of degree. So you can cite any date at all and justifiably say the food is \"best\" before that date. reply kragen 9 minutes agorootparentnot cheese or wine reply nick7376182 10 hours agoparentprevSome medicinal compounds are hygroscopic and may go bad over time due to the permeability of moisture through the packaging. (Hence the use of metallized foils, which have nearly zero moisture permeability). Same for oxygen/oxidisation. But yeah, depends on how far past expiry you go. reply kazinator 5 hours agoprevHere is what I reach for if I have a flu and need to work through it: https://i.imgur.com/hJ2OgWp.jpeg Expires 2008. I'm subitizing about 12 tablets left in there, which is half. So this should easily last past 2040. reply kragen 7 minutes agoparentthe precious relics of a wiser age reply JohnMakin 17 hours agoprevEggs are a great example of this - they can be good to eat several weeks after their date when refrigerated. Especially if you do stuff like flip them every now and then. All you have to do is put them in a pot of water, and if it doesn't float, you're fine. reply rconti 8 hours agoparentWe fairly regularly eat eggs that are many months old, but I make sure they aren't floaters at least. reply hi-v-rocknroll 8 hours agorootparentSmell them before you eat them. Floating only means the egg is old, which isn't causal for also being bad. reply hi-v-rocknroll 8 hours agoparentprevHere's how to decode the dates. And a floating egg may still be safe to use. https://food.unl.edu/article/cracking-date-code-egg-cartons reply bad_username 16 hours agoparentprev> All you have to do is put them in a pot of water, and if it doesn't float, you're fine. How does that work? Buoyancy is determined by the volume and mass (i.e. density) of the egg, and neither of them changes when the egg goes bad. reply Terr_ 16 hours agorootparentAs time passes, some of the liquid content escapes through the shell and evaporates, being replaced by air, increasing its buoyancy. Even if the liqud->air change doesn't directly cause spoilage (?) the passage of time at least correlates with both. reply JohnMakin 16 hours agorootparentprevAn egg shell is porous reply moribvndvs 9 hours agoprevIf it doesn’t look weird, smell weird, have an off taste or texture change, let it rip. I’ve notoriously used stuff way beyond its sell by date and I’ve never gotten sick from it. I used to work at a grocery store and also did a lot of dumpster diving when I was younger because I find the amount of perfectly good food wasted along with atrocious amounts of packaging fucking offensive. reply ARandomerDude 8 hours agoprevThe flip side is if we didn’t waste so much food, farmers (often in poorer countries) would lose a lot of money. While I’m certainly a fan of frugality, I’m not going to lose sleep about over-hiring rice farmers in Ecuador. reply fransje26 57 minutes agoparent> I’m not going to lose sleep about over-hiring rice farmers in Ecuador It's possibly the subsidised US farmer who is going to loose money, not the poor Ecuadorian or African farmer.. reply ajuc 8 hours agoparentprevThat's a common mistake when thinking about economy (so called broken window fallacy). It's not actually making lives of people in poor countries better when we waste more of what they produce. Food becoming more expansive just means middleman will have higher margin, and the poor people will starve more. reply mypastself 19 hours agoprev> The only people who could benefit are the producers, and I could imagine an unscrupulous manufacturer shortening the date on their food so that people will sigh, throw out a half-eaten package that has “expired,” and go buy some more. Baffling argument. I’m sure producers would be much happier with indefinitely fresh products. > Distributors fear legal threats if someone eats past-dated food and becomes ill (something that has rarely happened, but it’s still a looming threat). That’s basically it. No scams or conspiracies needed. As for the proposed solution about labeling standardization, I haven’t read the linked Harvard study in full, but I also haven’t managed to find the methodology by which they estimated the $1.8 billion benefit. reply bradley13 4 hours agoprevWhat bugs me is the exaggeration about food waste. How can we deal with a problem, f we don't know the true scope of it? Where I live, if you feed leftovers to your dog, that counts as food waste. As if the dog wouldn't have to eat something else? Peel a carrot, and the peel is food waste. WTF? Such strict definitions are counterproductive, because we cannot judge the actual extent of the problem. reply fortran77 6 hours agoprevMost people in the US are overweight or obese. Most “food waste” is from people eating more food than they need. This costs society trillions of dollars in environmental costs, and medical costs. reply dudeinjapan 3 hours agoprevApu Nahasapeemapetilon knew about this already. reply throwaway22032 20 hours agoprevBest before and use by dates are more useful if you use them as a tool when buying food, not when choosing to throw it out. If I know that I'm going to be eating something today or tomorrow then it doesn't matter, but otherwise choosing the longest dated food makes sense in order to know that it'll still be edible when I need it. For a lot of foods it's an exponential process so something that has two days left and something that has ten can look and smell exactly the same. reply jimbobthrowawy 18 hours agoparentAt least here, there's a lot of margin built into some use-by dates also. Since they are expecting the cold chain to be broken at least somewhat while you transport that food home. A lot of stores here also do extreme discounts on things that expire that day or soon after. I've had so many dinners that were basically \"oh, that thing's 80% off and I have to use it today. Fantastic.\" reply throwaway14356 14 hours agoprevwhen the iron curtain went up i visited a corner store in east Germany. They had a lot of fresh products! The shelves were divided into days. Today's yogurt, 1 day old, 2 days, 3 days, 4, 5 with a pricing curve that started with unusually expensive, 1 day was a lot cheaper, the rest declined linearly until the last single bottle thar was 1/20 the price of the first. A really old lady at crawling speed made her way to the oldest cheapest bottle and grew a beautiful smile on her face. Mind blown, they sell everything!? I thought as I grabbed some milk at tourist trap rates. Those prices are obviously for me. The idea of spending less felt just shameful. How dare I think that? reply DonHopkins 1 hour agoprevTh \"Crime Pays but Botany Doesn't\" guy gives a tour of the bargain section of the woke grocery store: https://youtu.be/PUFQouwqbe8?t=181 reply rolph 15 hours agoprevwill it harm you, vs does it still meet marketing criteria ? if the can is undamaged, the \"best before\" date has little to do with safety. how the items were stored is likely more important. ive eaten 7 year old canned seafood from pantry shelf, but i would probably use \"sun meat\" bulge, or corroded cans for bait. reply mindslight 17 hours agoprev [–] There has to be a term for this type of article that throws out a bunch of subjects in a purported progression of logical argument, but is really only taking the reader on an emotional journey. Non-interactive Gish gallop? If you want to focus on fallacious expiration dates, the don't drag in the subject of food distributors wasting food out of commercial expedience. If you want to talk about people going hungry in a country of plenty, then don't talk about individually wasting food. If you want to talk about fresh water being squandered, don't do it in a pan-country context where most of that water is a renewable resource continually falling from the sky. If you want to riff on the ridiculousness of landfills, don't focus on one of their most decomposable ingredients. All of these things are certainly problems to be discussed in their own right, but I don't see how lumping them together in one big ball does anything besides letting readers feel that they might do something about any of the larger problems. reply jwagenet 9 hours agoparent [–] Food waste in landfills is actually a huge issue because it doesn’t decompose normally. It typically gets buried and undergoes anaerobic decomposition, producing methane, which is much worse in the short term as a greenhouse gas than CO2. reply hi-v-rocknroll 8 hours agorootparent [–] Some landfills count as major methane ultra-emitter sources visible from satellites like MethaneSAT. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The article delves into the problem of food waste in the U.S., highlighting the confusion surrounding expiration dates, the significant economic, and environmental consequences of discarding food, and obstacles in donating to the underprivileged.",
      "Emphasizes educating consumers on date labels, relying on their senses, and promoting standardized labeling as crucial steps to minimize food waste.",
      "It mentions efforts by companies such as Misfits Market and Imperfect Foods in addressing food waste and encourages backing Vox's journalism by making financial contributions."
    ],
    "commentSummary": [
      "The conversation delves into the accuracy of food expiration dates, debating whether consumers should focus on buying the freshest items to minimize waste or consider aspects like cost-effectiveness and storage duration.",
      "Various viewpoints are shared on the positioning of fresh produce in stores, the trustworthiness of expiration labels, and differing stances on food safety guidelines and consumption practices.",
      "It highlights the significance of using logic to assess food safety, challenges related to food wastage, and the environmental effects of recycling versus landfilling."
    ],
    "points": 120,
    "commentCount": 207,
    "retryCount": 0,
    "time": 1715343801
  }
]
